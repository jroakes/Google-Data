EP4194996A1 - Enabling an automated assistant to leverage odor sensor(s) of client device(s) - Google Patents
Enabling an automated assistant to leverage odor sensor(s) of client device(s) Download PDFInfo
- Publication number
- EP4194996A1 EP4194996A1 EP22197823.2A EP22197823A EP4194996A1 EP 4194996 A1 EP4194996 A1 EP 4194996A1 EP 22197823 A EP22197823 A EP 22197823A EP 4194996 A1 EP4194996 A1 EP 4194996A1
- Authority
- EP
- European Patent Office
- Prior art keywords
- odor
- client device
- user
- environment
- given
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Pending
Links
- 238000000034 method Methods 0.000 claims abstract description 90
- 230000004044 response Effects 0.000 claims abstract description 88
- 238000012545 processing Methods 0.000 claims abstract description 56
- 235000019645 odor Nutrition 0.000 claims description 767
- 238000010801 machine learning Methods 0.000 claims description 73
- 238000012549 training Methods 0.000 claims description 58
- 230000000007 visual effect Effects 0.000 claims description 21
- 230000015654 memory Effects 0.000 claims description 9
- 238000013507 mapping Methods 0.000 claims description 7
- 238000004590 computer program Methods 0.000 claims description 3
- 238000002372 labelling Methods 0.000 claims description 2
- 230000008569 process Effects 0.000 abstract description 31
- 239000007789 gas Substances 0.000 description 22
- RWSOTUBLDIXVET-UHFFFAOYSA-N Dihydrogen sulfide Chemical compound S RWSOTUBLDIXVET-UHFFFAOYSA-N 0.000 description 17
- 229910000037 hydrogen sulfide Inorganic materials 0.000 description 17
- 235000000832 Ayote Nutrition 0.000 description 11
- 235000009854 Cucurbita moschata Nutrition 0.000 description 11
- 240000001980 Cucurbita pepo Species 0.000 description 11
- 235000009804 Cucurbita pepo subsp pepo Nutrition 0.000 description 11
- 235000009508 confectionery Nutrition 0.000 description 11
- 235000015136 pumpkin Nutrition 0.000 description 11
- 230000009471 action Effects 0.000 description 10
- 230000035943 smell Effects 0.000 description 10
- 230000000813 microbial effect Effects 0.000 description 9
- 239000012855 volatile organic compound Substances 0.000 description 9
- 150000001875 compounds Chemical class 0.000 description 8
- 238000009428 plumbing Methods 0.000 description 7
- 241000209020 Cornus Species 0.000 description 6
- 238000004891 communication Methods 0.000 description 6
- 230000002452 interceptive effect Effects 0.000 description 6
- 229920000768 polyamine Polymers 0.000 description 6
- 238000009877 rendering Methods 0.000 description 6
- 244000124209 Crocus sativus Species 0.000 description 4
- 235000015655 Crocus sativus Nutrition 0.000 description 4
- 235000013974 saffron Nutrition 0.000 description 4
- 239000004248 saffron Substances 0.000 description 4
- 244000178870 Lavandula angustifolia Species 0.000 description 3
- 235000010663 Lavandula angustifolia Nutrition 0.000 description 3
- 239000003795 chemical substances by application Substances 0.000 description 3
- 238000010586 diagram Methods 0.000 description 3
- 239000001102 lavandula vera Substances 0.000 description 3
- 235000018219 lavender Nutrition 0.000 description 3
- 230000026676 system process Effects 0.000 description 3
- 238000013518 transcription Methods 0.000 description 3
- 230000035897 transcription Effects 0.000 description 3
- 241000282412 Homo Species 0.000 description 2
- 230000000694 effects Effects 0.000 description 2
- 238000005516 engineering process Methods 0.000 description 2
- 230000003993 interaction Effects 0.000 description 2
- 230000007246 mechanism Effects 0.000 description 2
- 230000002093 peripheral effect Effects 0.000 description 2
- 235000012434 pretzels Nutrition 0.000 description 2
- 230000000306 recurrent effect Effects 0.000 description 2
- 238000010521 absorption reaction Methods 0.000 description 1
- 238000013528 artificial neural network Methods 0.000 description 1
- 230000003190 augmentative effect Effects 0.000 description 1
- 230000001413 cellular effect Effects 0.000 description 1
- 238000010411 cooking Methods 0.000 description 1
- 201000010099 disease Diseases 0.000 description 1
- 208000037265 diseases, disorders, signs and symptoms Diseases 0.000 description 1
- 230000006870 function Effects 0.000 description 1
- 239000011521 glass Substances 0.000 description 1
- 239000004973 liquid crystal related substance Substances 0.000 description 1
- 230000003287 optical effect Effects 0.000 description 1
- 239000012044 organic layer Substances 0.000 description 1
- 230000002085 persistent effect Effects 0.000 description 1
- 230000001932 seasonal effect Effects 0.000 description 1
- 230000006403 short-term memory Effects 0.000 description 1
- 239000002699 waste material Substances 0.000 description 1
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F1/00—Details not covered by groups G06F3/00 - G06F13/00 and G06F21/00
- G06F1/16—Constructional details or arrangements
- G06F1/1613—Constructional details or arrangements for portable computers
- G06F1/1633—Constructional details or arrangements of portable computers not specific to the type of enclosures covered by groups G06F1/1615 - G06F1/1626
- G06F1/1684—Constructional details or arrangements related to integrated I/O peripherals not covered by groups G06F1/1635 - G06F1/1675
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/01—Input arrangements or combined input and output arrangements for interaction between user and computer
- G06F3/048—Interaction techniques based on graphical user interfaces [GUI]
- G06F3/0481—Interaction techniques based on graphical user interfaces [GUI] based on specific properties of the displayed interaction object or a metaphor-based environment, e.g. interaction with desktop elements like windows or icons, or assisted by a cursor's changing behaviour or appearance
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F2203/00—Indexing scheme relating to G06F3/00 - G06F3/048
- G06F2203/038—Indexing scheme relating to G06F3/038
- G06F2203/0381—Multimodal input, i.e. interface arrangements enabling the user to issue commands by simultaneous use of input devices of different nature, e.g. voice plus gesture on digitizer
Definitions
- Automated assistants Humans may engage in human-to-computer dialogs with interactive software applications referred to herein as “automated assistants” (also referred to as “chatbots,” “interactive personal assistants,” “intelligent personal assistants,” “personal voice assistants,” “conversational agents,” etc.).
- Automated assistants typically rely upon a pipeline of components in interpreting and responding to spoken utterances and/or other user inputs (e . g ., typed input, touch input, etc.).
- an automatic speech recognition (ASR) engine can process audio data that correspond to a spoken utterance of a user to generate ASR output, such as speech hypotheses ( i .
- a natural language understanding (NLU) engine can process the ASR output (or touch/typed input) to generate NLU output, such as one or more predicted intents expressed by the user in providing the spoken utterance (and/or other user inputs) and optionally slot value(s) for parameter(s) associated with each of the one or more predicted intents.
- NLU natural language understanding
- a fulfillment engine can be used to process the NLU output, and to generate one or more structured requests to be transmitted to various fulfillers to obtain fulfillment output, such as content to be provided for presentation to the user responsive to the spoken utterance and/or an action to be performed by the automated assistant or another computing device responsive to the spoken utterance.
- the aforementioned pipeline of components may be insufficient for responding to certain types of requests.
- a user of a client device wishes to identify an odor in an environment of the client device.
- the user may invoke an automated assistant executing at least in part at the client device and provide certain terms that are descriptive of the odor such as pungent, sweet, damp, etc.
- these terms are descriptive of a multitude of different types of odors that may originate from countless sources.
- the NLU output may include insufficient slot values to accurately describe the odor, and, as a result, the fulfillment output may not correctly identify the odor.
- Implementations described herein are directed to providing client devices that include one or more odor sensors, and enabling an automated assistant executing at least in part at the client devices to leverage odor data instances generated by one or more of the odor sensors of the client devices in responding to user requests received at the client devices and/or in generating notifications at the client devices.
- Processor(s) of a given client device can receive, from a user of the given client device, a request to identify an odor in an environment of the given client device, process a given odor data instance generated by one or more of the odor sensors of the given client device, identify the odor based on processing the odor data instance, generate a response to the request that at least identifies the odor, and cause the response to the request to be provided for presentation to the user via the given client device.
- Processor(s) of the given client device can additionally, or alternatively, establish one or more baseline odors in the environment of the given client device based on processing odor data instances generated over a time interval, and exclude the one or more baseline odors from consideration in identifying the odor in response to receiving the request.
- Processor(s) of the given client device can additionally, or alternatively, establish one or more of the baseline odors in the environment of the given client device based on processing odor data instances generated over a time interval, generate a notification in response to identifying a given odor in the environment of the given client device that is in addition to the one or more baseline odors, and cause the notification to be provided for presentation to the user via the given client device.
- the automated assistant can cause audio data capturing the spoken utterance to be processed using various machine learning (ML) models to determine the spoken utterance includes the request to identify an odor in an environment of the given client device. Accordingly, in response to receiving the spoken utterance, the automated assistant can cause an odor data instance to be generated via one or more of the odor sensors of the given client device. Further, the odor data instance can be processed to identify the odor in the environment of the given client device of the user. In this example, assume the odor corresponds to hydrogen sulfide gas.
- the response to the request can be generated based on the processing of the odor data instance and provided for presentation to the user in response to receiving the spoken utterance, such as "you are probably referring to the smell of hydrogen sulfide gas".
- the automated assistant can additionally, or alternatively, generate a notification that identifies the odor in the environment, such as "I'm detecting hydrogen sulfide gas”.
- the automated assistant may utilize a previously generated odor index that maps odor data instances to odors to identify the odor in the environment of the given client device.
- the automated assistant can generate the odor index based on processing a plurality of odor data instances, a corresponding label that identifies a corresponding odor (e . g ., a chemical compound that identifies the odor) associated with each of the plurality of odor data instances, one or more corresponding characteristics that describe the corresponding odors ( e . g ., sweet, pungent, etc.), and/or one or more corresponding sources of the corresponding odors ( e . g ., faulty plumbing, a particular flower or tree, mold, various medical ailments, etc.).
- the automated assistant can process the plurality of odor data instances to generate the mapping between each of the plurality of odor data instances and the corresponding labels, the one or more corresponding characteristics, and/or the one or more corresponding sources, such that the odor index corresponds to an odor knowledge graph.
- the automated assistant may subsequently utilize the odor index to generate output that identifies the odor in the environment of the given client device.
- the automated assistant can compare the odor data instance (or a representation thereof) generated in response to receiving the spoken utterance to the plurality of odor data instances (or corresponding representations thereof) to determine a given odor data instance of the plurality of odor data instances in the odor index that corresponds to the odor data instance, and generate output that identifies a given odor associated with the given odor data instance.
- the automated assistant can index the odor index based on one or more criteria.
- the one or more criteria may include, for example, the corresponding labels that identifies a corresponding odor, the one or more characteristics that describe the corresponding odors, the one or more sources of the corresponding odors, geographical regions associated with the corresponding odors, times of year associated with the corresponding odors, whether the corresponding odors are encountered indoors or outdoors, and/or any other criteria.
- the one or more criteria may be subsequently utilized to quickly and efficiently traverse the mapping between the corresponding odor data instances and the corresponding odors (or other data associated with the corresponding odors such as the corresponding labels, the one or more corresponding characteristics, the one or more sources, etc.) by restricting a search space of the odors based on one or more terms included in a request corresponding to one or more of the characteristics ( e . g ., based on term(s) of the request) and/or based on contextual information associated with the given client device corresponding to contextual information associated with the odors ( e . g ., a location at which the odor is typically present, a time of year during which the odor is typically present, etc.).
- the automated assistant may utilize a previously trained odor ML model to identify the odor in the environment of the given client device.
- the odor ML model may be any suitable ML model that is capable of processing the corresponding given odor data instances and/or one or more of the characteristics associated with the corresponding odor data instances to predict one or more of the labels associated with the corresponding odor data instances and/or one or more of the sources of the corresponding odors associated with the corresponding odor data instances, such as an encoder-decoder network.
- the automated assistant can train the odor ML model based on a plurality of training instances. Each of the plurality of training instances can include training instance input and training instance output.
- the training instance input for a given training instance can include, for example, a given odor data instance (e . g ., from among the plurality of corresponding odor data instances utilized to generate the odor index) and/or one or more of the characteristics associated with the given odor data instance.
- the training instance output can include, for example, one or more of the labels associated with the given odor data instance and/or one or more of the sources associated with the given odor data instance.
- the automated assistant can utilize the odor ML model to map the corresponding odors to an embedding space or other lower-level space that enables the corresponding odor data instances to be compared.
- the training instance input can be applied as input across the odor ML model to generate an embedding for the given odor data instance.
- the embedding for the given odor data instance can be mapped to the embedding space and labeled with one or more of the labels associated with the given odor data instance and/or one or more of the sources associated with the given odor data instance included in the training instance output. This process may be repeated for each of the plurality of training instances to populate the embedding space. Further, the embedding space may be distributed based on one or more of the characteristics included in the training instance input.
- sweet odors may be mapped to a first portion of the embedding space
- pungent odors may be mapped to a second portion of the embedding space
- This enables similar odors to be grouped together in the embedding space.
- the odor ML model may be trained based on additional training instances to add corresponding odors to the embedding space. Accordingly, at inference, the automated assistant can process the odor data instance using the odor ML model to map the odor data instance to the embedding space and generate output that identifies an odor that is closest in the embedding space as the odor in the environment of the given client device.
- a search space of the odors may be restricted based on term(s) included in the request and/or contextual information associated with the given client device.
- the term(s) of the request and/or the contextual information can be applied as input across the odor ML model along with the odor data instance in generating the embedding, whereas in additional or alternative versions of those implementations, the term(s) of the request and/or the contextual information can be utilized in comparing the generated embedding to the previously generated embeddings by only considering odors having characteristics that match the term(s) and/or that have been detected in the same or similar contextual scenarios.
- the automated assistant can establish one or more baseline odors in the environment of the given client device.
- the automated assistant can cause a plurality of odor data instances to be generated by the one or more odor sensors of the client device at a plurality of time instances across a time interval.
- the automated assistant can process the plurality of odor data instances using the odor index and/or the odor ML model described above to identify a plurality of odors in the environment of the given client device.
- the automated assistant can classify one or more of the plurality of odors as a baseline odor in response to determining that that the odor is identified in the environment of the client device for a threshold quantity of the time instances across the time interval.
- the hydrogen sulfide gas is not a baseline odor in an environment of the given client device ( e . g ., in a primary dwelling of the user).
- the response to the request and/or the notification may identify the odor as corresponding to the odor in the environment of the given client device and/or identify a source of the odor ( e . g ., faulty plumbing in the primary dwelling of the user).
- the hydrogen sulfide gas is a baseline odor in an environment of the given client device ( e . g ., in a waste management facility where the user works).
- the response to the request and/or the notification may exclude the odor.
- the automated assistant may generate a query based on the request received from the user and/or based on the identified odor.
- the automated assistant can generate a query for hydrogen sulfide gas and cause the query to be executed via a search engine and/or over one or more databases.
- the automated assistant can include, in the response and/or the notification, content obtained responsive to the query. For instance, and assuming that the client device is located in the primary dwelling of the user, the content obtained responsive to the query can include an indication of potential sources of the hydrogen sulfide gas ( e .
- faulty plumbing in an environment of the client device an indication one or more suggested actions for ridding the environment of the hydrogen sulfide gas (e.g., a list of one or more local plumbers), one or more facts associated with hydrogen sulfide gas, and/or any other information associated with hydrogen sulfide gas.
- an indication one or more suggested actions for ridding the environment of the hydrogen sulfide gas e.g., a list of one or more local plumbers
- one or more facts associated with hydrogen sulfide gas e.g., a list of one or more local plumbers
- any other information associated with hydrogen sulfide gas e.g., faulty plumbing in an environment of the client device
- the response and/or the notification can be audibly rendered for audible presentation to the user via microphone(s) of the given client device.
- the response and/or the notification can be visually rendered for visual presentation to the user via a display of the given client device.
- how the response and/or the notification is provided for presentation to the user may be based on device capabilities of the given client device of the user. For example, in implementations where the given client device lacks a display, the response and/or the notification may only be provided for audible presentation to the user via the microphone(s) of the given client device. However, in implementations where the given client device includes a display, the response and/or the notification may be provided for audible presentation to the user via the microphone(s) of the given client device and/or for visual presentation to the user via the display of the given client device.
- the techniques described herein enable the automated assistant leverage the odor data in responding to user requests that request the automated assistant identify an odor in an environment of a given client device, thereby reducing a quantity of user inputs received at the given client device and/or computational resources consumed at the given client device absent these techniques.
- the user may provide terms that are descriptive of the odor (e . g ., pungent odor outdoors in the southeastern United States in the spring) in an attempt to identify the odor.
- odors that may fit the description of the odor, thereby requiring the user to peruse search results in an attempt to identify the odor and/or to further refine the query.
- the techniques described herein enable the automated assistant to sample air and/or gas molecules to accurately identify the odor in a more quick and efficient manner.
- term(s) of the request and/or contextual information associated with the given client device may be utilized to restrict a search space of the odors to accurately identify the odor in a more quick and efficient manner.
- the techniques described herein enable the automated assistant to identify presence of odors that are not typically present in the environment of the given client device and/or in instances where the detected odor may be harmful or pose a threat to the user, thereby increasing safety to the user and the environment of the user.
- an implementation comprises a method implemented by one or more processors, the method comprising:
- Identifying a given baseline odor, of the one or more baseline odors, in the environment of the client device based on the corresponding outputs may comprise: identifying the given baseline odor at a threshold quantity of time instances of the plurality of time instances.
- an implementation comprises a method implemented by one or more processors, the method comprising:
- the example environment includes a client device 110.
- the client device 110 may be, for example, one or more of: a desktop computer, a laptop computer, a tablet, a mobile phone, a computing device of a vehicle (e . g ., an in-vehicle communications system, an in-vehicle entertainment system, an in-vehicle navigation system), a standalone interactive speaker (optionally having a display), a smart appliance such as a smart television, and/or a wearable apparatus of the user that includes a computing device (e.g. , a watch of the user having a computing device, glasses of the user having a computing device, a virtual or augmented reality computing device). Additional and/or alternative client devices may be provided.
- the client device 110 can include various components, including, but not limited to, a user input engine 111, a rendering engine 112, a sensor engine 113, and an automated assistant client 114.
- the automated assistant client 114 can include various components, including, but not limited to, an automatic speech recognition (ASR) engine 120A1, a natural language understanding (NLU) engine 130A1, a fulfillment engine 140A1, and a text-to-speech (TTS) engine 150A1.
- ASR automatic speech recognition
- NLU natural language understanding
- TTS text-to-speech
- the automated assistant client 114 can be an application that is separate from an operating system of the client device 110 (e.g., installed "on top" of the operating system) - or can alternatively be implemented directly by the operating system of the client device 110.
- the automated assistant client 114 can interact with a cloud-based automated assistant 180 (e.g. , a remote server or cluster of remote servers) over one or more networks 199, such as one or more wired or wireless local area networks ("LANs," including Wi-Fi LANs, mesh networks, Bluetooth, near-field communication, etc.) or wide area networks ("WANs", including the Internet).
- the cloud-based automated assistant 180 can include various components, including, but not limited to, an ASR engine 120A2, an NLU engine 130A2, a fulfillment engine 140A2, a TTS engine 150A2, and an odor data processing engine 160.
- the odor data processing engine 160 is depicted as being implemented remotely from the client device 110 in FIG. 1 , it should be understood that is for the sake of example and is not meant to be limiting, and that the odor data processing engine 160 can be implemented locally at the client device 110 without interacting with the cloud-based automated assistant 180.
- the automated assistant client 114 (and optionally by way of its interactions with the cloud-based automated assistant 180) may form what appears to be, from a user's perspective, a logical instance of an automated assistant 115 with which a user of the client device 110 may engage in a human-to-computer dialog.
- An instance of the automated assistant 115 is depicted in FIG. 1 , and is encompassed by a dashed line that includes the automated assistant client 114 of the client device 110 and the cloud-based automated assistant 180.
- a user that engages with the automated assistant client 114 executing on the client device 110 may, in effect, engage with his or her own logical instance of the automated assistant 115 (or a logical instance of the automated assistant 115 that is shared amongst a household or other group of users).
- the automated assistant 115 as used herein will refer to the automated assistant client 114 executing locally on the client device 110 and/or one or more remote servers that may implement the collaborative ranking system 180.
- the user input engine 111 is configured to detect user input provided by the user of the client device 110 using one or more user interface input devices.
- the client device 110 may be equipped with one or more microphones that capture audio data, such as audio data corresponding to spoken utterances of the user or other sounds in an environment of the client device 110.
- the client device 110 may be equipped with one or more vision components that are configured to capture vision data corresponding to images and/or movements ( e . g ., gestures) detected in a field of view of one or more of the vision components.
- the client device 110 may be equipped with one or more touch sensitive components ( e .
- a keyboard and mouse a stylus, a touch screen, a touch panel, one or more software or hardware buttons, etc.
- a stylus corresponding to touch input and/or typed input directed to the client device 110.
- the rendering engine 112 is configured to provide content for audible and/or visual presentation to a user of the client device 110 using one or more user interface output devices.
- the client device 110 may be equipped with one or more speakers that enable content to be audibly rendered for presentation to the user via the client device 110.
- the client device 110 may be equipped with a display or projector that enables content to be visually rendered presentation to the user via the client device 110.
- the sensor engine 113 is configured to obtain sensor data instances from various sensors of the client device.
- the sensors of the client device 110 can include, but are not limited to, presence sensor(s) that are configured to provide, with approval from corresponding user(s), signals indicative of detected presence, particularly human presence in an environment of the client device 110, odor sensor(s) that are configured to provide signals indicative of air or gas molecules detected in the environment of the client device 110, and/or any other sensors.
- the automated assistant 115 can identify the client device 110 (or another computing device associated with a user of the client device 110) to satisfy a spoken utterance based at least in part of presence of the user at the client device 110.
- the spoken utterance can be satisfied by rendering responsive content (e . g ., via the rendering engine 112) at the client device 110 by causing the client device 110 to be controlled, and/or by causing the client device 110 to perform any other action to satisfy the spoken utterance.
- the automated assistant 115 can leverage data obtained by the sensor engine 113 in determining the client device 110 to be utilized in satisfying the spoken utterance based on where a user is near or was recently near, and provide corresponding commands to only the client device 110.
- the automated assistant 115 can leverage data obtained by the sensor engine 113 in determining whether any user(s) (any users or specific users) are currently proximal to the client device 110, and can optionally suppress provision of data to and/or from the client device 110 based on the user(s) that are proximal to the client device 110.
- the sensors of the client device 110 from which the sensor engine 113 obtains sensor data instances may come in various forms.
- the client device 110 can utilize one or more of the user interface input components described above with respect to the user input engine 111 to detect presence of the user.
- the client device 110 may be equipped with other types of light-based presence sensors, such as passive infrared (“PIR”) sensors that measure infrared (“IR”) light radiating from objects within their fields of view.
- PIR passive infrared
- the presence sensors may be configured to detect other phenomena associated with human presence or device presence.
- the client device 110 may be equipped with one or more presence sensors that detects various types of wireless signals (e . g ., waves such as radio, ultrasonic, electromagnetic, etc.) emitted by, for instance, other computing devices carried/operated by a user ( e . g ., a mobile device, a wearable computing device, etc.) and/or other computing devices.
- the client device 110 may be configured to emit waves that are imperceptible to humans, such as ultrasonic waves or infrared waves, that may be detected by other computing device(s) ( e . g ., via ultrasonic/infrared receivers such as ultrasonic-capable microphones).
- the client device 110 may emit other types of human-imperceptible waves, such as radio waves (e . g ., Wi-Fi, Bluetooth, cellular, etc.) that may be detected by other computing device(s) carried/operated by a user ( e . g ., a mobile device, a wearable computing device, etc.) and used to determine the user's particular location.
- radio waves e . g ., Wi-Fi, Bluetooth, cellular, etc.
- GPS and/or Wi-Fi triangulation may be used to detect a person's location, e . g ., based on GPS and/or Wi-Fi signals to/from the client device 110.
- wireless signal characteristics such as time-of-flight, signal strength, etc.
- the client device 110 may be used to determine a particular person's location based on signals emitted by the other computing device(s) carried/operated by the user.
- the client device 110 may perform speaker identification (SID) to recognize a user from their voice and/or may perform face identification (FID) to recognize a user from vision data capturing his/her face.
- SID speaker identification
- FID face identification
- movement of the speaker may then be determined, e . g ., by the presence sensors of the client device 110 (and optionally GPS sensors, Soli chips, and/or accelerometers of the client device 110).
- a location of the user may be predicted, and this location may be assumed to be the user's location when any content to be rendered at the client device 110 and/or other computing device(s) based at least in part on proximity of the client device 110 and/or other computing device(s) to the user's location.
- the user may simply be assumed to be in the last location at which he/she engaged with the automated assistant 115, especially if not much time has passed since the last engagement.
- the client device 110 may be equipped with one or more odor sensors that detect air and/or gas molecules in an environment of the client device 110.
- the air and/or gas molecules may be absorbed into one or more organic layers of the one or more odor sensors to generate signal(s) corresponding to an odor data instance based on the absorption of the air and/or gas molecules.
- the odor data instance may be further processed ( e . g ., by the odor data processing engine 160) to identify an odor and/or a source of the odor.
- odor sensor is described herein, it should be understood that is for the sake of example and is not meant to be limiting, and that any odor sensor integrated with the client device 110 and/or in communication with the client device may be utilized to generate the odor data instances described herein.
- the client device 110 and/or the cloud-based automated assistant 180 may include one or more memories for storage of data and/or software applications, one or more processors for accessing data and executing the software applications, and/or other components that facilitate communication over one or more of the networks 199.
- one or more of the software applications can be installed locally at the client device 110, whereas in other implementations one or more of the software applications can be hosted remotely ( e . g ., by one or more servers) and can be accessible by the client device 110 over one or more of the networks 199.
- the operations performed by the client device 110, other computing device(s), and/or by the automated assistant 115 may be distributed across multiple computer systems.
- the automated assistant 115 may be implemented as, for example, computer programs running on the client device 110 and/or one or more computers in one or more locations that are coupled to each other through a network ( e . g ., the network(s) 199 of FIG. 1 ).
- the operations performed by the automated assistant 115 may be implemented locally at the client device 110 via the automated assistant client 114, whereas in other implementations, the operations performed by the automated assistant 115 may be distributed across multiple computer systems, such as when the cloud-based automated assistant 180 is utilized as depicted in FIG. 1 .
- the automated assistant client 114 and/or the cloud-based automated assistant 180 may leverage respective instances of the ASR engine 120A1 and/or 120A2, NLU engine 130A1 and/or 130A2, fulfillment engine 140A1 and/or 140A2, and TTS engine 150A1 and/or 150A2 in processing and responding to any user requests detected at the client device ( e . g ., via the user input engine 111).
- the ASR engine 120A1 and/or 120A2 can process, using ASR model(s) stored in machine learning (ML) model(s) database 115A (e.g. , a recurrent neural network (RNN) model, a transformer model, and/or any other type of ML model capable of performing ASR), audio data that captures a spoken utterance and that is generated by microphone(s) of the client device 110 to generate ASR output.
- ML machine learning
- RNN recurrent neural network
- transformer model e.g., a transformer model, and/or any other type of ML model capable of performing ASR
- the NLU engine 130A1 and/or 130A2 can process, using NLU model(s) stored in the ML model(s) database 115A (e.g.
- the fulfillment engine 140A1 and/or 140A2 can generate fulfillment output(s) based on fulfillment data generated based on the NLU output.
- the fulfillment data can be generated using, for example, the automated assistant 115, one or more first-party (1P) agents (not depicted), and/or one or more third-party (3P) agents (not depicted).
- the TTS engine 150A1 and/or 150A2 can process, using TTS model(s) stored in the ML model(s) database 115A, textual data (e . g ., text formulated by the automated assistant 115) to generate synthesized speech audio data that includes computer-generated synthesized speech.
- the ML model(s) stored in the ML model(s) database 115A can be on-device ML models that are stored locally at the client device 110 or shared ML models that are accessible to both the automated assistant client 114 and/or the cloud-based automated assistant 180.
- the ASR output can include, for example, speech hypotheses (e . g ., term hypotheses and/or transcription hypotheses) that are predicted to correspond to spoken utterance(s) of a user that are captured in the audio data, one or more corresponding predicted values (e . g ., probabilities, log likelihoods, and/or other values) for each of the speech hypotheses, a plurality of phonemes that are predicted to correspond to spoken utterance(s) of a user that are captured in the audio data, and/or other ASR output.
- the ASR engine 120A1 and/or 120A2 can select one or more of the speech hypotheses as recognized text that corresponds to the spoken utterance ( e . g ., based on the corresponding predicted values).
- the NLU output can include, for example, annotated recognized text that includes one or more annotations of the recognized text for one or more ( e.g. , all) of the terms of the recognized text.
- the NLU engine 130A1 and/or 130A2 may include a part of speech tagger (not depicted) configured to annotate terms with their grammatical roles.
- the NLU engine 130A1 and/or 130A2 may include an entity tagger (not depicted) configured to annotate entity references in one or more segments of the recognized text, such as references to people (including, for instance, literary characters, celebrities, public figures, etc .), organizations, locations (real and imaginary), and so forth.
- data about entities may be stored in one or more databases, such as in a knowledge graph (not depicted).
- the knowledge graph may include nodes that represent known entities (and in some cases, entity attributes), as well as edges that connect the nodes and represent relationships between the entities.
- the entity tagger may annotate references to an entity at a high level of granularity (e . g ., to enable identification of all references to an entity class such as people) and/or a lower level of granularity ( e . g ., to enable identification of all references to a particular entity such as a particular person).
- the entity tagger may rely on content of the natural language input to resolve a particular entity and/or may optionally communicate with a knowledge graph or other entity database to resolve a particular entity.
- the NLU engine 130A1 and/or 130A2 may include a coreference resolver (not depicted) configured to group, or "cluster," references to the same entity based on one or more contextual cues.
- the coreference resolver may be utilized to resolve the term "them” to "buy theatre tickets” in the natural language input "buy them", based on "theatre tickets” being mentioned in a client device notification rendered immediately prior to receiving input "buy them”.
- one or more components of the NLU engine 130A1 and/or 130A2 may rely on annotations from one or more other components of the NLU engine 130A1 and/or 130A2.
- the entity tagger may rely on annotations from the coreference resolver in annotating all mentions to a particular entity.
- the coreference resolver may rely on annotations from the entity tagger in clustering references to the same entity.
- FIG. 1 is described with respect to a single client device having a single user, it should be understood that is for the sake of example and is not meant to be limiting.
- one or more additional client devices of a user can also implement the techniques described herein.
- the client device 110, the one or more additional client devices, and/or any other computing devices of the user can form an ecosystem of devices that can employ techniques described herein.
- These additional client devices and/or computing devices may be in communication with the client device 110 (e.g., over the network(s) 199).
- a given client device can be utilized by multiple users in a shared setting (e.g. , a group of users, a household).
- the odor data processing engine 160 can include various components.
- the odor data processing engine 160 can include one or more of a request handling engine 161, an odor index engine 162, an odor ML training engine 163, an odor identification engine 164, a response engine 165, and a query engine 166.
- the odor data processing engine 160 is depicted in FIG. 1 as including particular engines, it should be understood that is for the sake of example and is not meant to be limiting. One or more engines may be omitted, and/or added.
- the request handling engine 161 can cause user input from a user of the client device 110 detected via the user input engine 111 to be processed. For example, assume a user of the client device 110 provides a spoken utterance that requests the automated assistant 115 identify an odor in an environment of the client device 110.
- the request handling engine 161 can cause audio data that captures the spoken utterance to be processed by the ASR engine 120A1 and/or 120A2 to generate ASR output for the spoken utterance, and cause the ASR output to be processed by the NLU engine 130A1 and/or 130A2 to generate NLU output for the spoken utterance that indicates the user is requesting identification of an odor in the environment of the client device 110.
- the request handling engine 161 can identify one or more terms included in the request. As described below ( e . g ., with respect to the odor identification engine 163), the odor data processing engine 160 can utilize one or more terms of the request to restrict a search space of odors to identify an odor in an environment of the client device 110.
- the request handling engine 161 can be utilized to process any requests directed to the automated assistant ( e . g ., with one non-limiting example being described with respect to FIG. 5A ).
- the odor index engine 162 can generate an odor index 162A based on processing odor data instances stored in an odor data instances database 160A.
- the odor data instances database 160A can include a plurality of odor data instances generated by one or more of the odor sensors of the client device 110 via the sensor engine 113 and/or generated by one or more additional odor sensors that are standalone or that are integral with one or more additional computing devices.
- the odor data instances database 160A can include a corresponding label that identifies a corresponding odor ( e . g ., a chemical compound that identifies the odor) associated with each of the plurality of odor data instances, one or more characteristics that describe the corresponding odors ( e .
- the odor indexing engine 162 can generate the odor index 152A by generating a mapping between each of the corresponding data instances and the corresponding labels, the one or more characteristics, and/or the one or more sources. The mapping may be subsequently utilized ( e . g ., by the odor identification engine 164) to identify an odor detected in an environment of the client device 110, one or more characteristics associated with the odor detected in the environment of the client device 110, and/or one or more sources of the odor detected in the environment of the client device 110.
- the odor index 162A may be indexed based on one or more criteria.
- the one or more criteria may include, for example, the corresponding labels that identifies a corresponding odor, the one or more characteristics that describe the corresponding odors, the one or more sources of the corresponding odors, geographical regions associated with the corresponding odors, times of year associated with the corresponding odors, whether the corresponding odors are encountered indoors or outdoors, and/or any other criteria.
- the one or more criteria may be subsequently utilized ( e .
- the odor identification engine 164 to quickly and efficiently traverse the mapping between the corresponding odor data instances and the corresponding odors (or other data associated with the corresponding odors such as the corresponding labels, the one or more corresponding characteristics, the one or more sources, etc.) by restricting a search space of the odors based on one or more terms included in a request corresponding to one or more of the characteristics ( e . g ., identified by the request handling engine 161 as noted above) and/or based on contextual information associated with the client device 110 corresponding to contextual information associated with the odors ( e . g ., a location at which the odor is typically present, a time of year during which the odor is typically present, etc.).
- the odor ML training engine 163 can generate a plurality of training instances based on the corresponding odor data instances (and other data associated with the corresponding odors) stored in the odor data instances database 160.
- Each of the plurality of training instances can include training instance input and training instance output.
- the training instance input for a given training instance can include, for example, a given odor data instance ( e . g ., from among the plurality of corresponding odor data instances stored in the data instances database 160) and/or one or more of the characteristics associated with the given odor data instance.
- the training instance output can include, for example, one or more of the labels associated with the given odor data instance and/or one or more of the sources associated with the given odor data instance.
- the odor ML training engine 163 can train an odor ML model stored in the ML model(s) database 115A based on the plurality of training instances.
- the odor ML model may be any suitable ML model that is capable of processing the corresponding given odor data instances and/or one or more of the characteristics associated with the corresponding odor data instances to predict one or more of the labels associated with the corresponding odor data instances and/or one or more of the sources of the corresponding odors associated with the corresponding odor data instances, such as an encoder-decoder network.
- the encoder-decoder network may be utilized to map the corresponding odors to an embedding space or other lower-level space that enables the corresponding odor data instances to be compared to odor data instances generated by the one or more odor data sensors of the client device 110.
- the training instance input can be applied as input across the odor ML model to generate an embedding for the given odor data instance.
- the embedding for the given odor data instance can be mapped to the embedding space and labeled with one or more of the labels associated with the given odor data instance and/or one or more of the sources associated with the given odor data instance included in the training instance output. This process may be repeated for each of the plurality of training instances to populate the embedding space. Further, the embedding space may be distributed based on one or more of the characteristics included in the training instance input.
- sweet odors may be mapped to a first portion of the embedding space
- pungent odors may be mapped to a second portion of the embedding space
- This enables similar odors to be grouped together in the embedding space.
- the odor ML model may be trained based on additional training instances to add corresponding odors to the embedding space.
- the odor identification engine 164 can utilize the odor index 162A that was previously generated (e . g ., as described with respect to the odor index engine 162) and/or the odor ML model stored in the ML model(s) database 115A ( e . g ., trained as described with respect to the odor ML training engine) to identify odors based on odor data instances generated by one or more of the odor sensors of the client device 110.
- the odor identification engine 164 can compare a given odor data instance to the plurality of corresponding data instances stored in the odor index 162A to identify a given odor captured by the given odor data instance. For instance, the odor identification engine 164 can compare raw odor data of the given odor data instance to corresponding raw odor data of the corresponding odor data instances that were previously indexed to identify the given odor and/or compare any representation of the raw odor data of the given odor data instance any available representation of the corresponding odor data instances that were previously indexed to identify the given odor.
- the odor identification engine 164 can generate output based on the given odor that is identified from the odor index 162A.
- the output can include an indication of a predicted odor that is predicted to be present in the environment of the client device 110, one or more of the sources that are predicted to be emitting the predicted odor, visual content and/or audible content associated with the predicted odor and/or one or more of the sources, and/or other information.
- the odor identification engine 164 can process a given odor data instance that captures a given odor using the odor ML model to generate a given odor embedding.
- the given odor embedding can be compared, in the embedding space, to previously generated odor embeddings ( e . g ., as described above with respect to the odor ML training engine 163).
- a distance in the embedding space between the given odor embedding and the previously generated odor embeddings may be determined, and a given odor associated with the previously generated odor embedding that is closest to the given odor embedding can be identified as the given odor captured in the given odor data instance.
- one or more terms of a request to identify the given odor can additionally or alternatively be processed using the odor ML model to restrict portions of the embedding space that may be compared to the given odor data instance.
- the odor identification engine 164 may restrict the comparing of the given odor embedding to the previously generated odor embeddings that are associated with "sweet" odors.
- the output can include an indication of a predicted odor that is predicted to be present in the environment of the client device 110, one or more of the sources that are predicted to be emitting the predicted odor, visual content associated with the predicted odor and/or one or more of the sources, and/or other information.
- the response engine 165 can process the output generated by the odor identification engine 164 to generate a response that identifies at least the given odor captured in the given odor data instance.
- the response engine 165 can determine visual content to be provided for presentation to a user.
- the visual content may be visually rendered ( e . g ., via the rendering engine 112) for presentation to the user via a display of the client device 110.
- the visual content can include, for example, one or more textual segments that include the given odor or one or more of the sources of the given odor, information cards related to the given odor or one or more of the sources of the given odor, and/or other visual content.
- the response engine 165 can determine audible content to be provided for presentation to a user.
- the audible content may be generated using the TTS engine 150A1 and/or 150A2, and can be audibly rendered ( e . g ., via the rendering engine 112) for presentation to the user via one or more speakers of the client device 110.
- the query engine 166 can generate a query based on the output generated by the odor identification engine 164 and/or based on the response generated by the response engine 165. Based on the query, a search may be executed over one or more databases to obtain content that is responsive to the query. For example, assume the given odor identified in response to a request corresponds to linear polyamine compounds caused by a dogwood tree in an environment of the client device 110. In this example, a query for a dogwood tree can be generated and submitted to a search engine to obtain an information card for the dogwood tree, and the information card can be provided for presentation to the user. In additional or alternative implementations, the query engine 166 can generate a query based on further user input.
- a query for a mold specialist can be generated and submitted to a search engine to obtain an information card that includes mold specialist capable of ridding the environment of the client device of the black mold, and the information card can be provided for presentation to the user.
- FIG. 2 a flowchart illustrating an example method 200 of identifying an odor in an environment of a client device in response to receiving a request to identify the odor is depicted.
- This system of the method 200 includes one or more processors, memory, and/or other component(s) of computing device(s) (e . g ., client device 110 of FIG. 1 , computing device 610 of FIG. 6 , one or more servers, and/or other computing devices).
- computing device(s) e . g ., client device 110 of FIG. 1 , computing device 610 of FIG. 6 , one or more servers, and/or other computing devices.
- operations of the method 200 are shown in a particular order, this is not meant to be limiting.
- One or more operations may be reordered, omitted, and/or added.
- the system receives, from a user, a request to identify an odor in an environment of a client device of the user.
- the system obtains an odor data instance generated by one or more odor sensors of the client device of the user.
- the request may include one or more terms and may be received via a spoken utterance, typed input, and/or touch input. Further, the odor data instance may be generated in response to receiving the request from the user.
- the system processes the odor data instance generated by the one or more odor sensors to generate output.
- the output can include, for example, an indication of a predicted odor that is predicted to be present in the environment of the client device, one or more of the sources that are predicted to be emitting the predicted odor, visual content and/or audible content associated with the predicted odor and/or one or more of the sources, and/or other information.
- the system may utilize a previously generated index that maps corresponding odor data instances to corresponding odors to generate the output.
- the system can previously generate the odor index that maps corresponding odor data instances to corresponding odors in one or more of the manners described herein ( e .
- the system can compare the odor data instance to the corresponding odor data instances that were previously indexed to identify the predicted odor that is predicted to correspond to the odor captured by the odor data instance, and the system can generate the output based on the predicted odor that is predicted to correspond to the odor captured by the odor data instance.
- the system utilizes an odor machine learning (ML) model to generate the output.
- the system can previously train the odor ML model in one or more of the manners described herein (e.g., with respect to the odor ML training engine 163 of FIG. 1 ) and/or in other manners.
- the system can apply the odor data instance as input across the odor ML model to generate an odor embedding and map the odor embedding to an embedding space, and the system can generate the output based on comparing the odor embedding to previously generated odor embeddings in the embedding space.
- the system identifies, based on the output, the odor in the environment of the client device of the user. For example, in some implementations, and as indicated at block 258A, the system utilizes contextual information associated with the client device to identify the odor based on the output. In implementations where the system utilizes the odor index to generate the output, the system may restrict the corresponding odor data instances considered to those that occur in similar contextual scenarios. For instance, assume a user is indoors during the winter as indicated by contextual information associated with the client device and assume the user provides a request to identify an odor in the environment of the client device. In this instance, the system may not consider corresponding odor data instances associated with odors that are typically present outdoors during the spring, such as blooming flowers or trees.
- the contextual information may additionally be applied as input across the odor ML model in generating the odor embedding. For instance, again assume a user is indoors during the winter as indicated by contextual information associated with the client device and again assume the user provides a request to identify an odor in the environment of the client device. In this instance, the system may additionally process the locational and seasonal information in generating the odor embedding to influence where the odor embedding is mapped in the embedding space ( e . g ., towards odors that occur in similar contextual scenarios).
- the system utilizes one or more terms of the request (e . g ., that was received at block 252) to identify the odor based on the output.
- the system may restrict the corresponding odor data instances considered to those that are associated with characteristics described by one or more of the terms or phrases. For instance, again assume a user is indoors during the winter as indicated by contextual information associated with the client device and assume the user provides a request to identify a "sweet" odor in the environment of the client device.
- the system may not consider corresponding odor data instances associated with characteristics indicating the corresponding odor data instances are associated with odors that are pungent, damp, fishy, rancid, etc.
- one or more of the terms may additionally be applied as input across the odor ML model in generating the odor embedding. For instance, again assume a user is indoors during the winter as indicated by contextual information associated with the client device and again assume the user provides a request to identify a "sweet" odor in the environment of the client device. In this instance, the system may additionally process the term "sweet" in generating the odor embedding to influence where the odor embedding is mapped in the embedding space ( e . g ., towards odors that are considered "sweet”).
- the system generates a response to the request that identifies at least the odor in the environment of the client device of the user.
- the system causes the response to the request to be provided for presentation to the user via the client device.
- the response can identify, for example, the odor, one or more of the sources that are predicted to be emitting the odor, visual content and/or audible content associated with the predicted odor and/or one or more of the sources, and/or other information.
- the information included in the response may be obtained while generating the output at block 256 and/or while identifying the odor at block 258.
- the system may generate a query based on the output to obtain the information included in the response ( e . g ., as described with respect to the query engine 166 of FIG. 1 ).
- the response may be audibly rendered and/or visually rendered for presentation to the user.
- FIG. 3 a flowchart illustrating an example method 300 of establishing one or more baseline odors in an environment of a client device and identifying a given odor in the environment of the client device that is in addition to the one or more baseline odors is depicted.
- This system of the method 300 includes one or more processors, memory, and/or other component(s) of computing device(s) (e.g., client device 110 of FIG. 1 , computing device 610 of FIG. 6 , one or more servers, and/or other computing devices).
- client device 110 of FIG. 1 e.g., client device 110 of FIG. 1 , computing device 610 of FIG. 6 , one or more servers, and/or other computing devices.
- operations of the method 300 are shown in a particular order, this is not meant to be limiting.
- One or more operations may be reordered, omitted, and/or added.
- the system obtains one or more corresponding odor data instances generated by one or more odor sensors of a client device of a user.
- the one or more corresponding odor data instances may be obtained at block 352 a plurality of disparate time instances across a time interval.
- the system processes one or more of the corresponding odor data instances to generate one or more corresponding outputs for one or more of the corresponding odor data instances.
- the system can process one or more of the corresponding odor data instances to generate one or more of the corresponding outputs for one or more of the corresponding odor data instances in the same or similar described with respect to the operations of block 256 of the method 200 of FIG. 2 .
- the system identifies, based on one or more of the corresponding outputs, one or more baseline odors in an environment of the client device.
- the system can identify one or more corresponding odors based on one or more of the corresponding outputs in the same or similar described with respect to the operations of block 258 of the method 200 of FIG. 2 . Further, the system can classify one or more of the corresponding odors as a baseline odor in response to determining that that the odor is identified in the environment of the client device for a threshold quantity of the time instances across the time interval.
- the system determines whether one or more of the baseline odors have been established. If, at an iteration of block 358, the system determines that one or more of the baseline odors have not been established, then the system returns to block 352 and repeats the operations of blocks 352-358 with respect to one or more additional corresponding odor data instances. If, at an iteration of block 358, the system determines that one or more of the baseline odors have been established, then the system proceeds to block 360. Any odors that correspond to one or more of the baseline odors may be annotated as such (e.g., in the odor index 162A of FIG. 1 ).
- the pumpkin scented candle may be established as a baseline odor in the environment of the client device.
- the pumpkin scented candle may not be established as a baseline odor in the environment of the client device.
- the system obtains a given odor data instance generated by one or more of the odor sensors of the client device or one or more additional odor sensors of an additional client device of the user that is co-located in the environment of the client device.
- the given odor data instances may be obtained at block 360 a subsequent time instance that is subsequent to the plurality of time instances at which one or more of the corresponding odor data instances and/or one or more of the additional corresponding odor data instances are obtained at one or more iterations of block 352.
- the given odor data instance may be obtained periodically to detect the presence of one or more odors that are not typically present in the environment of the client device and/or that belong to a category of odors that may be harmful to the user.
- the given odor data instance may be obtained in response to receiving a request from the user to identify a given odor in the environment of the client device and/or the additional client device ( e.g. , as described with the respect to the method 200 of FIG. 2 ).
- the system processes the given odor data instance to generate given output for the given odor data instance.
- the system can process the given odor data instance to generate the output for the given odor data instance in the same or similar described with respect to the operations of block 256 of the method 200 of FIG. 2 .
- the system identifies, based on the given output, a given odor in the environment of the client device, the given odor being in addition to one or more of the baseline odors.
- the system can identify the given odor based on the output in the same or similar described with respect to the operations of block 258 of the method 200 of FIG. 2 .
- the system generates a notification that identifies the given odor that identifies the given odor and that indicates the given odor does not correspond to one or more of the baseline odors ( e . g ., in implementations where the given odor data instance is obtained periodically) and/or generates a response to a request received from the user that identifies the given odor and that indicates the given odor does not correspond to one or more of the baseline odors ( e . g ., in implementations where the given odor data instance is obtained in response to a request).
- the system causes the notification and/or the response to the request to be provided for presentation to the user via the client device.
- the system may generate the notification in response to determining that the given odor may pose a harm or threat to the user of the client device. In some implementations, the system may generate the notification in response to determining that the given odor is associated with a pecuniary interest (e . g ., an advertisement). The response may be audibly rendered and/or visually rendered for presentation to the user.
- a pecuniary interest e . g ., an advertisement
- FIGS. 4A and 4B various non-limiting examples associated with identifying an odor in an environment of a client device in response to receiving a request to identify the odor are depicted.
- An automated assistant can be implemented at least in part at client devices 490A and 490B depicted in FIGS. 4A and 4B ( e . g ., the automated assistant 115 described with respect to FIG. 1 ).
- the automated assistant can utilize an odor processing engine ( e . g ., the odor processing system 160 described with respect to FIG. 1 ) to identify odors in environments of the client devices 410A and 410B.
- 4A and 4B may include various user interface components including, for example, microphone(s) to generate audio data based on spoken utterances and/or other audible input, speaker(s) to audibly render synthesized speech and/or other audible output, and a display to receive touch input and/or to visually render transcriptions and/or other visual output.
- client devices 410A and 410B depicted in FIGS. 4A and 4B are a standalone interactive speaker having a display 490A and a tablet having a display 490B, respectively, it should be understood that is for the sake of example and is not meant to be limiting.
- the automated assistant can process audio data capturing the spoken utterance 452A using an ASR engine (e . g ., the ASR engine 120A1 and/or 120A2 of FIG. 1 ) to generate ASR output ( e . g ., speech hypothes(es) predicted to correspond to the spoken utterance 452A).
- the automated assistant processes the audio data capturing the spoken utterance 452A in response to determining that the spoken utterance 452A includes one or more particular words or phrases to invoke the automated assistant ( e .
- the automated assistant can process the ASR output using an NLU engine (e.g., the NLU engine 130A1 and/or 130A2 of FIG. 1 ) to generate NLU output. Based on the NLU output, the automated assistant can determine that the spoken utterance 452A corresponds to a request to identify an odor in an environment of the client device 410A.
- NLU engine e.g., the NLU engine 130A1 and/or 130A2 of FIG. 1
- the client device 410A is located in a primary dwelling of the user 101 ( e . g ., determined based on the client device 410A being assigned to the primary dwelling of the user 101 in a device topology representation of smart devices of the user 101).
- one or more odor sensors of the client device 410A can generate an odor data instance.
- the automated assistant can cause the odor data instance to be processed to generate output, and identify an odor present in the environment of the client device 410A based on the output.
- the automated assistant can utilize a previously generated index to process the odor data instance to generate the output ( e .
- the automated assistant can utilize an odor ML model to generate the output ( e . g ., as described with respect to the odor ML training engine 163 and the ML model(s) database 115A of FIG. 1 , and with respect to the method 200 of FIG. 2 ).
- the automated assistant may leverage contextual information associated with the client device 410A in generating the output and/or in identifying the odor.
- the client device 410A is located in the primary dwelling of the user 101. Accordingly, a search space of odors considered in generating the output and/or in identifying the odor may be restricted to those odors which may occur indoors.
- the automated assistant determines that the odor corresponds to hydrogen sulfide gas.
- the automated assistant can cause synthesized speech audio data 454A1 of "You are probably referring to the smell of hydrogen sulfide gas" to be audibly rendered for presentation to the user 101.
- the automated assistant can additionally, or alternatively, cause synthesized speech audio data 454A2 of "the smell may be caused by faulty plumbing in your home” to make the user 101 aware of a possible source of the hydrogen sulfide gas.
- the client device 410A includes the display 490A, and content may additionally, or alternatively, be visually rendered for presentation to the user 101 via the display 490A.
- the automated assistant may additionally or alternatively identify one or more suggested actions and provide the one or more suggested actions for presentation to the user 101.
- the automated assistant may identify one or more plumbers in an area of the primary dwelling of the user 101.
- the one or more suggested actions may be proactively identified by the automated assistant and provided for presentation to the user 101 (e.g. , as an advertisement for a local plumbing company), whereas in other versions of those implementations, the one or more suggested actions may be identified by the automated assistant in response to additional user input that requests the one or more suggested actions ( e . g ., "can you find me a plumber to fix the faulty plumbing?").
- the automated assistant can process audio data capturing the spoken utterance 452B using an ASR engine to generate ASR output, and can process the ASR output using an NLU engine to generate NLU output in the same or similar manner described above with respect to FIG. 4A . Based on the NLU output, the automated assistant can determine that the spoken utterance 452B corresponds to a request to identify an odor in an environment of the client device 410B, and to specifically identify a "pungent" odor in the environment of the client device 410B.
- the client device 410B is located outdoors and a time of year corresponds to spring at a location of the client device 410B ( e . g ., the month of April in the southeastern United States).
- a time of year corresponds to spring at a location of the client device 410B ( e . g ., the month of April in the southeastern United States).
- one or more odor sensors of the client device 410A can generate an odor data instance.
- the automated assistant can cause the odor data instance to be processed to generate output, and identify an odor present in the environment of the client device 410A based on the output.
- the automated assistant can utilize a previously generated index to process the odor data instance to generate the output ( e .
- the automated assistant can utilize an odor ML model to generate the output ( e . g ., as described with respect to the odor ML training engine 163 and the ML model(s) database 115A of FIG. 1 , and with respect to the method 200 of FIG. 2 ).
- the automated assistant may leverage contextual information associated with the client device 410B in generating the output and/or in identifying the odor.
- the client device 410B is located outdoors in the spring in the southeastern United States and the user 101 described the odor as "pungent". Accordingly, a search space of odors considered in generating the output and/or in identifying the odor may be restricted to those odors which may occur outdoors in the spring in the southeastern United States and that have at least a "pungent" characteristic.
- the automated assistant determines that the odor corresponds to a linear polyamine compound.
- the automated assistant can cause synthesized speech audio data 454B1 of "It smells like a linear polyamine compound" to be audibly rendered for presentation to the user 101.
- the automated assistant can additionally, or alternatively, cause synthesized speech audio data 454B2 of "the smell is likely from a Dogwood Tree somewhere close by” to make the user 101 aware of a possible source of the linear polyamine compound.
- synthesized speech audio data 454B1 of "It smells like a linear polyamine compound” to be audibly rendered for presentation to the user 101.
- the automated assistant can additionally, or alternatively, cause synthesized speech audio data 454B2 of "the smell is likely from a Dogwood Tree somewhere close by” to make the user 101 aware of a possible source of the linear polyamine compound.
- the client device 410B includes the display 490B, and content may additionally, or alternatively, be visually rendered for presentation to the user 101 via the display 490B, such as an information card that includes a picture of a Dogwood Tree and/or one or more facts about Dogwood Trees.
- FIGS. 4A and 4B are described with respect to the automated assistant identifying odors in response to an explicit request from the user 101, it should be understood that is for the sake of example and is not meant to be limiting.
- the automated assistant may proactively notify the user 101 of one or more odors that are detected in the environments of the client devices 410A and 410B.
- FIGS. 4A and 4B are described with respect to receiving particular spoken utterances and providing particular responses, it should also be understood that is for the sake of example and is not meant to be limiting.
- the automated assistant may identify the odors based on one or more of the sources that are predicted to be emitting the odors.
- FIGS. 4A and 4B are described with respect to particular contextual information associated with the client devices 410A and 410B, it should be understood that is also for the sake of example and is not meant to be limiting.
- FIGS. 5A and 5B various non-limiting examples associated with establishing one or more baseline odors in an environment of a client device and identifying a given odor in the environment of the client device that is in addition to the one or more baseline odors are depicted.
- An automated assistant can be implemented at least in part at client devices 510A and 510B depicted in FIGS. 5A and 5B ( e . g ., the automated assistant 115 described with respect to FIG. 1 ).
- the automated assistant can utilize an odor processing engine ( e . g ., the odor processing system 160 described with respect to FIG. 1 ) to identify odors in environments of the client devices 510A and 510B.
- an odor processing engine e . g ., the odor processing system 160 described with respect to FIG. 1
- the client devices 510A and 510B depicted in FIGS. 5A and 5B may include various user interface components including, for example, microphone(s) to generate audio data based on spoken utterances and/or other audible input, speaker(s) to audibly render synthesized speech and/or other audible output, and a display to receive touch input and/or to visually render transcriptions and/or other visual output.
- the client devices 510A and 510B depicted in FIGS. 5A and 5B are a standalone interactive speaker lacking a display and a standalone interactive speaker having a display 590B, respectively, it should be understood that is for the sake of example and is not meant to be limiting.
- the client device 510A is located in a primary dwelling of a user 101 of the client device 510A, and assume the automated assistant has established a plurality of baseline odors for an environment of the client device 510A.
- the automated assistant can cause one or more odor sensors of the client device 510A to generate a plurality of odor data instances at corresponding time instances across a time interval.
- the automated assistant obtains and processes odor data instances once a day across a week.
- the automated assistant identifies odors corresponding to a pumpkin scented candle and lavender for a threshold quantity of days. Accordingly, the automated assistant may consider the odors corresponding to the pumpkin scented candle and the lavender as two baseline odors for the primary dwelling of the user 101.
- the automated assistant causes the one or more odor sensors of the client device 510A to periodically generate odor data instances. Further assume that a given odor data instance is determined to capture an odor corresponding to microbial volatile organic compounds and that a source of microbial volatile organic compounds is black mold. In this example, and in response to identifying the given odor corresponding to microbial volatile organic compounds, the automated assistant can cause synthesized speech audio data 552A1 of "I'm detecting microbial volatile organic compounds" to be audibly rendered for presentation to the user 101. However, many users may not know what microbial volatile organic compounds are or what causes microbial volatile organic compounds to be emitted.
- the automated assistant can additionally, or alternatively, cause synthesized speech audio data 552A2 of "this musty smell is caused by mold somewhere in your home" to make the user 101 aware of a possible source of the microbial volatile organic compounds.
- the client device 510A does not include the display 490B, but content may additionally, or alternatively, be visually rendered for presentation to the user 101 via a display of an additional client device of the user 101.
- this notification may be provided for presentation to the user in response to determining that the microbial volatile organic compounds may harm or pose a threat to the user 101, whereas in additional or alternative implementations, this notification may be provided in response to detecting an odor that has not been established as a baseline odor in the environment of the client device 510A.
- the automated assistant may proactively identify one or more suggested actions, such as providing information with respect to one or more nearby mold specialists based on the detected odor.
- FIG. 5A is described with respect to establishing one or more of the baseline odors to generate notifications to be provided for presentation to the user 101, it should be understood that is for the sake of example and is not meant to be limiting.
- the automated assistant may additionally, or alternatively, utilize one or more of the baseline odors in responding to requests received from the user 101. Referring specifically to FIG.
- the automated assistant can process audio data capturing the spoken utterance 552B using an ASR engine to generate ASR output, and can process the ASR output using an NLU engine to generate NLU output in the same or similar manner described above with respect to FIGS. 4A and 4B . Based on the NLU output, the automated assistant can determine that the spoken utterance 552B corresponds to a request to identify an odor in an environment of the client device 510B.
- the client device 410B is located in a primary dwelling of the user 101, and further assume that a pumpkin scented candle and lavender have been established as two baseline odors for the primary dwelling of the user 101 as described above with respect to FIG. 5A .
- one or more odor sensors of the client device 510B can generate an odor data instance.
- the automated assistant can cause the odor data instance to be processed to generate output, and identify an odor present in the environment of the client device 510B based on the output.
- the automated assistant can utilize a previously generated index to process the odor data instance to generate the output ( e .
- the automated assistant can utilize an odor ML model to generate the output ( e . g ., as described with respect to the odor ML training engine 163 and the ML model(s) database 115A of FIG. 1 , and with respect to the method 200 of FIG. 2 ).
- the automated assistant may leverage contextual information associated with the client device 410B in generating the output and/or in identifying the odor.
- the client device 510B in the primary dwelling of the user 101. Accordingly, a search space of odors considered in generating the output and/or in identifying the odor may be restricted to those odors which may occur indoors and that exclude the baseline odors.
- the automated assistant determines that the odor corresponds to saffron that is used in cooking.
- the automated assistant can cause synthesized speech audio data 554B1 of "the earthy smell that I do not usually detect is from saffron" to be audibly rendered for presentation to the user 101.
- the client device 510B includes the display 590B, and content may additionally, or alternatively, be visually rendered for presentation to the user 101 via the display 490B, such as an information card that includes a picture of saffron and/or one or more facts about saffron.
- FIGS. 5A and 5B are described with respect to receiving particular spoken utterances and providing particular responses and/or notifications, it should also be understood that is for the sake of example and is not meant to be limiting.
- the automated assistant may identify the odors based on one or more of the sources that are predicted to be emitting the odors.
- FIGS. 5A and 5B are described with respect to particular contextual information associated with the client devices 510A and 510B, it should be understood that is also for the sake of example and is not meant to be limiting.
- FIGS. 5A and 5B are described with respect to particular baseline odors associated with the environments of the client devices 510A and 510B, it should be understood that is also for the sake of example and is not meant to be limiting.
- FIGS. 4A , 4B , 5A , and 5B are described with identifying a single odor in the environments of the various client devices, it should be understood that is for the sake of brevity and is not meant to be limiting.
- multiple odors may be identified based on processing a single odor data instance.
- the automated assistant may generate output for each of the multiple odors identified based on processing the single odor data instance and the response may also identify each of the multiple odors. Additionally, or alternatively, the automated assistant may select a given odor, of the multiple odors, for which to generate output and to identify in the response.
- FIGS. 4A , 4B , 5A , and 5B are described with respect to the environments of the various client devices corresponding to outdoors and indoors at a primary dwelling of the user 101, it should be understood that is also for the sake of example and is not meant to be limiting.
- techniques described herein may be implemented in a medical setting (e . g ., in hospitals, at a primary dwelling of the user as part of a telemedicine session, etc.) to identify odors that are indicative of diseases, ailments, or other medical conditions ( e . g ., based on one or more odors emitted by a body of the user 101).
- the user 101 may be required to consent to processing of the odor data instances in view of privacy considerations.
- FIGS. 4A , 4B , 5A , and 5B are not described with respect to providing any advertisements, it should be understood that is also for the sake of example and is not meant to be limiting.
- a baseline odor indicative of a pumpkin scented candle is established in the primary dwelling of the user 101.
- a notification that enables the user 101 to provide a single user input e . g ., "one-click" to order more pumpkin scented candles may be provided and/or an offer for discounted pumpkin scented candles may be provided for presentation to the user 101.
- a notification that includes an offer for the hot pretzel may be provided for presentation to the user 101.
- FIG. 6 a block diagram of an example computing device 610 that may optionally be utilized to perform one or more aspects of techniques described herein is depicted.
- a client device may optionally be utilized to perform one or more aspects of techniques described herein.
- one or more of a client device, cloud-based automated assistant component(s), and/or other component(s) may comprise one or more components of the example computing device 610.
- Computing device 610 typically includes at least one processor 614 which communicates with a number of peripheral devices via bus subsystem 612. These peripheral devices may include a storage subsystem 624, including, for example, a memory subsystem 625 and a file storage subsystem 626, user interface output devices 620, user interface input devices 622, and a network interface subsystem 616. The input and output devices allow user interaction with computing device 610.
- Network interface subsystem 616 provides an interface to outside networks and is coupled to corresponding interface devices in other computing devices.
- User interface input devices 622 may include a keyboard, pointing devices such as a mouse, trackball, touchpad, or graphics tablet, a scanner, a touch screen incorporated into the display, audio input devices such as voice recognition systems, microphones, and/or other types of input devices.
- pointing devices such as a mouse, trackball, touchpad, or graphics tablet
- audio input devices such as voice recognition systems, microphones, and/or other types of input devices.
- use of the term "input device” is intended to include all possible types of devices and ways to input information into computing device 610 or onto a communication network.
- User interface output devices 620 may include a display subsystem, a printer, a fax machine, or non-visual displays such as audio output devices.
- the display subsystem may include a cathode ray tube (CRT), a flat-panel device such as a liquid crystal display (LCD), a projection device, or some other mechanism for creating a visible image.
- the display subsystem may also provide non-visual display such as via audio output devices.
- output device is intended to include all possible types of devices and ways to output information from computing device 610 to the user or to another machine or computing device.
- Storage subsystem 624 stores programming and data constructs that provide the functionality of some or all of the modules described herein.
- the storage subsystem 624 may include the logic to perform selected aspects of the methods disclosed herein, as well as to implement various components depicted in FIG. 1 .
- Memory 625 used in the storage subsystem 624 can include a number of memories including a main random access memory (RAM) 630 for storage of instructions and data during program execution and a read only memory (ROM) 632 in which fixed instructions are stored.
- a file storage subsystem 626 can provide persistent storage for program and data files, and may include a hard disk drive, a floppy disk drive along with associated removable media, a CD-ROM drive, an optical drive, or removable media cartridges.
- the modules implementing the functionality of certain implementations may be stored by file storage subsystem 626 in the storage subsystem 624, or in other machines accessible by the processor(s) 614.
- Bus subsystem 612 provides a mechanism for letting the various components and subsystems of computing device 610 communicate with each other as intended. Although bus subsystem 612 is shown schematically as a single bus, alternative implementations of the bus subsystem 612 may use multiple busses.
- Computing device 610 can be of varying types including a workstation, server, computing cluster, blade server, server farm, or any other data processing system or computing device. Due to the ever-changing nature of computers and networks, the description of computing device 610 depicted in FIG. 6 is intended only as a specific example for purposes of illustrating some implementations. Many other configurations of computing device 610 are possible having more or fewer components than the computing device depicted in FIG. 6 .
- the users may be provided with an opportunity to control whether programs or features collect user information (e . g ., information about a user's social network, social actions or activities, profession, a user's preferences, or a user's current geographic location), or to control whether and/or how to receive content from the content server that may be more relevant to the user.
- user information e . g ., information about a user's social network, social actions or activities, profession, a user's preferences, or a user's current geographic location
- certain data may be treated in one or more ways before it is stored or used, so that personal identifiable information is removed.
- a user's identity may be treated so that no personal identifiable information can be determined for the user, or a user's geographic location may be generalized where geographic location information is obtained (such as to a city, ZIP code, or state level), so that a particular geographic location of a user cannot be determined.
- geographic location information such as to a city, ZIP code, or state level
- the user may have control over how information is collected about the user and/or used.
- a method implemented by one or more processors includes receiving, from a user, a request to identify an odor in an environment of a client device of the user; in response to receiving the request to identify the odor in the environment of the client device, processing an odor data instance, generated by an odor sensor of the client device of the user, to generate output; identifying, based on the output, the odor in the environment of the client device of the user; generating a response to the request that identifies at least the odor in the environment of the client device of the user; and causing the response to the request to be provided for presentation to the user via the client device.
- processing the odor data instance generated by the odor sensor of the client device of the user to generate output may include accessing a previously generated index of a superset of corresponding odors, the previously generated index of the superset of corresponding odors being a mapping of corresponding previous odor data instances to the corresponding previous odors; and comparing the odor data instance generated by the odor sensor of the client device of the user to the corresponding previous odor data instances mapped to the corresponding previous odors to select a subset of one or more of the corresponding previous odors as the output.
- identifying the odor in the environment of the client device of the user based on the output includes selecting, based on comparing the odor data instance generated by the odor sensor of the client device of the user to the corresponding previous odor data instances, the odor in the environment of the client device of the user and from among the subset of one or more of the corresponding previous odors.
- identifying the odor in the environment of the client device of the user may be further based on contextual information associated with the client device of the user.
- the contextual information associated with the client device may include one or more of: a geographical region in which the client device is located, whether the client device is located inside or outside, a time of day, or a day of year.
- the contextual information associated with the client device of the user is utilized in selecting the odor in the environment of the client device of the user and from among the subset of one or more of the corresponding previous odors.
- identifying the odor in the environment of the client device of the user may be further based on one or more terms of the request to identify the odor in the environment of the client device of the user, wherein one or more terms of the request include a characteristic of the odor.
- one or more of the terms of the request to identify the odor in the environment of the client device of the user may be utilized in selecting the odor in the environment of the client device of the user and from among the subset of one or more of the corresponding previous odors.
- processing the odor data instance generated by the odor sensor of the client device of the user to generate output may include processing, using an odor machine learning (ML) model, the odor data instance generated by the odor sensor of the client device of the user to generate an odor embedding as the output, the odor embedding being a lower-level representation of the odor data instance that is mapped to an embedding space.
- ML machine learning
- identifying the odor in the environment of the client device of the user based on the output may include selecting, based on comparing the odor embedding to a plurality of previously generated odor embeddings, in the embedding space, the odor in the environment of the client device of the user.
- the odor ML model may be trained based on a plurality of training instances. Training the odor ML model based on a given training instance, of the plurality of training instance, may include processing, using the odor ML model, training instance input of the given training instance to generate a given odor embedding for a given odor, the training instance input including one or more of: a given odor data instance for the given odor, contextual information associated with the given odor, or one or more terms associated with the given odor; and assigning the given odor embedding to a given portion of the embedding space; and labelling the given portion of the embedding space with training instance output of the given training instance, the training instance output including one or more of: a label for the given odor, a label for a characteristic of the given odor, or a source of the given odor.
- processing the odor data instance generated by the odor sensor of the client device of the user to generate output may further include processing, using the odor ML model and along with the odor data instance generated by the odor sensor of the client device of the user, contextual information associated with the client device to generate the output.
- the contextual information associated with the client device may include one or more of: a geographical region in which the client device is located, whether the client device is located inside or outside, a time of day, or a day of year.
- processing the odor data instance generated by the odor sensor of the client device of the user to generate output may further include processing, using the odor ML model and along with the odor data instance generated by the odor sensor of the client device of the user, one or more terms of the request to generate the output.
- the request to identify the odor in the environment of the client device may be received at a given time instance, and the odor data instance may be generated by the odor sensor of the client device of the user at the given time instance.
- the method may further include identifying, based on the output, a source of the odor in the environment of the client device of the user.
- the response to the request may further identify the source of the odor in the environment of the client device of the user.
- generating the response to the request that identifies at least the odor in the environment of the client device of the user may include generating synthesized speech audio data that captures synthesized speech identifying at least the odor in the environment of the client device.
- Causing the response to the request to be provided for presentation to the user via the client device may include causing the synthesized speech audio data to be rendered for audible presentation to the user via one or more speakers of the client device.
- the response to the request that identifies at least the odor in the environment of the client device of the user may include generating visual content identifying at least the odor in the environment of the client device.
- Causing the response to the request to be provided for presentation to the user via the client device may include causing the visual content to be rendered for visual presentation to the user via a display of the client device.
- the method may further include generating, based on the odor that is identified in the environment of the client device of the user, a query; and executing, based on the query, a search over one or more databases to obtain content that is responsive to the query.
- the response to the request that is provided for presentation to the user via the client device may include the content that is responsive to the query.
- a method implemented by one or more processors includes, at a plurality of time instances: obtaining corresponding odor data instances generated by an odor sensor of a client device of a user; processing the corresponding odor data instances to generate corresponding outputs for the corresponding odor data instances; and identifying, based on corresponding outputs, one or more baseline odors in an environment of the client device; and at a subsequent time instance that is subsequent to each of the plurality of time instances: obtaining a given odor data instance generated by the odor sensor of the client device of the user or an additional odor sensor of an additional client device of the user that is co-located in the environment of the client device; processing the given odor data instance to generate given output for the given odor data instance; identifying, based on the given output, a given odor in the environment of the client device; and in response to determining that the given odor in the environment of the client does not correspond to one or more of the baseline odors: generating a notification that identifie
- identifying a given baseline odor, of the one or more baseline odors, in the environment of the client device based on the corresponding outputs may include identifying the given baseline odor at a threshold quantity of time instances of the plurality of time instances.
- a method implemented by one or more processors includes, at a plurality of time instances: obtaining corresponding odor data instances generated by an odor sensor of a client device of a user; processing the corresponding odor data instances to generate corresponding outputs for the corresponding odor data instances; and identifying, based on corresponding outputs, one or more baseline odors in an environment of the client device; and at a subsequent time instance that is subsequent to the plurality of time instances: receiving, from the user, a request to identify a given odor in the environment of the client device of the user; in response to receiving the request to identify the odor in the environment of the client device, processing a given odor data instance generated by the odor sensor of the client device of the user to generate given output; identifying, based on the given output, the given odor in the environment of the client device of the user that is in addition to the one or more baseline odors in the environment of the client device; generating a response to the request that identifies at least the given
- some implementations include one or more processors (e . g ., central processing unit(s) (CPU(s)), graphics processing unit(s) (GPU(s)), and/or tensor processing unit(s) (TPU(s))) of one or more computing devices, where the one or more processors are operable to execute instructions stored in associated memory, and where the instructions are configured to cause performance of any of the aforementioned methods.
- processors e . g ., central processing unit(s) (CPU(s)), graphics processing unit(s) (GPU(s)), and/or tensor processing unit(s) (TPU(s))
- processors e . g ., central processing unit(s) (CPU(s)), graphics processing unit(s) (GPU(s)), and/or tensor processing unit(s) (TPU(s))
- Some implementations also include one or more non-transitory computer readable storage media storing computer instructions executable by one or more processor
Abstract
Description
- Humans may engage in human-to-computer dialogs with interactive software applications referred to herein as "automated assistants" (also referred to as "chatbots," "interactive personal assistants," "intelligent personal assistants," "personal voice assistants," "conversational agents," etc.). Automated assistants typically rely upon a pipeline of components in interpreting and responding to spoken utterances and/or other user inputs (e.g., typed input, touch input, etc.). For example, an automatic speech recognition (ASR) engine can process audio data that correspond to a spoken utterance of a user to generate ASR output, such as speech hypotheses (i.e., sequence of term(s) and/or other token(s)) of the spoken utterance. Further, a natural language understanding (NLU) engine can process the ASR output (or touch/typed input) to generate NLU output, such as one or more predicted intents expressed by the user in providing the spoken utterance (and/or other user inputs) and optionally slot value(s) for parameter(s) associated with each of the one or more predicted intents. Moreover, a fulfillment engine can be used to process the NLU output, and to generate one or more structured requests to be transmitted to various fulfillers to obtain fulfillment output, such as content to be provided for presentation to the user responsive to the spoken utterance and/or an action to be performed by the automated assistant or another computing device responsive to the spoken utterance.
- However, the aforementioned pipeline of components may be insufficient for responding to certain types of requests. For example, assume a user of a client device wishes to identify an odor in an environment of the client device. In this example, the user may invoke an automated assistant executing at least in part at the client device and provide certain terms that are descriptive of the odor such as pungent, sweet, damp, etc. Notably, these terms are descriptive of a multitude of different types of odors that may originate from countless sources. Accordingly, the NLU output may include insufficient slot values to accurately describe the odor, and, as a result, the fulfillment output may not correctly identify the odor. This may result in the user submitting additional requests to identify the odor, thereby resulting in an increased quantity of user inputs directed to the client device based at least on the additional requests and an increased consumption of computational resources at the client device based on processing the additional requests. Moreover, this problem may be exacerbated when certain people perceive the same odor differently and use different terms to describe the odor.
- Implementations described herein are directed to providing client devices that include one or more odor sensors, and enabling an automated assistant executing at least in part at the client devices to leverage odor data instances generated by one or more of the odor sensors of the client devices in responding to user requests received at the client devices and/or in generating notifications at the client devices. Processor(s) of a given client device can receive, from a user of the given client device, a request to identify an odor in an environment of the given client device, process a given odor data instance generated by one or more of the odor sensors of the given client device, identify the odor based on processing the odor data instance, generate a response to the request that at least identifies the odor, and cause the response to the request to be provided for presentation to the user via the given client device. Processor(s) of the given client device can additionally, or alternatively, establish one or more baseline odors in the environment of the given client device based on processing odor data instances generated over a time interval, and exclude the one or more baseline odors from consideration in identifying the odor in response to receiving the request. Processor(s) of the given client device can additionally, or alternatively, establish one or more of the baseline odors in the environment of the given client device based on processing odor data instances generated over a time interval, generate a notification in response to identifying a given odor in the environment of the given client device that is in addition to the one or more baseline odors, and cause the notification to be provided for presentation to the user via the given client device.
- For example, assume the user of the given client device provides a spoken utterance of "Assistant, what's that smell?" In this example, the automated assistant can cause audio data capturing the spoken utterance to be processed using various machine learning (ML) models to determine the spoken utterance includes the request to identify an odor in an environment of the given client device. Accordingly, in response to receiving the spoken utterance, the automated assistant can cause an odor data instance to be generated via one or more of the odor sensors of the given client device. Further, the odor data instance can be processed to identify the odor in the environment of the given client device of the user. In this example, assume the odor corresponds to hydrogen sulfide gas. In this example, the response to the request can be generated based on the processing of the odor data instance and provided for presentation to the user in response to receiving the spoken utterance, such as "you are probably referring to the smell of hydrogen sulfide gas". Also, for example, and assuming that the automated assistant has established one or more baseline odors in the environment of the given client device and that the one or more baseline odors exclude hydrogen sulfide gas, the automated assistant can additionally, or alternatively, generate a notification that identifies the odor in the environment, such as "I'm detecting hydrogen sulfide gas".
- In some implementations, the automated assistant may utilize a previously generated odor index that maps odor data instances to odors to identify the odor in the environment of the given client device. The automated assistant can generate the odor index based on processing a plurality of odor data instances, a corresponding label that identifies a corresponding odor (e.g., a chemical compound that identifies the odor) associated with each of the plurality of odor data instances, one or more corresponding characteristics that describe the corresponding odors (e.g., sweet, pungent, etc.), and/or one or more corresponding sources of the corresponding odors (e.g., faulty plumbing, a particular flower or tree, mold, various medical ailments, etc.). For example, the automated assistant can process the plurality of odor data instances to generate the mapping between each of the plurality of odor data instances and the corresponding labels, the one or more corresponding characteristics, and/or the one or more corresponding sources, such that the odor index corresponds to an odor knowledge graph. The automated assistant may subsequently utilize the odor index to generate output that identifies the odor in the environment of the given client device. For example, the automated assistant can compare the odor data instance (or a representation thereof) generated in response to receiving the spoken utterance to the plurality of odor data instances (or corresponding representations thereof) to determine a given odor data instance of the plurality of odor data instances in the odor index that corresponds to the odor data instance, and generate output that identifies a given odor associated with the given odor data instance.
- In some versions of those implementations, the automated assistant can index the odor index based on one or more criteria. The one or more criteria may include, for example, the corresponding labels that identifies a corresponding odor, the one or more characteristics that describe the corresponding odors, the one or more sources of the corresponding odors, geographical regions associated with the corresponding odors, times of year associated with the corresponding odors, whether the corresponding odors are encountered indoors or outdoors, and/or any other criteria. The one or more criteria may be subsequently utilized to quickly and efficiently traverse the mapping between the corresponding odor data instances and the corresponding odors (or other data associated with the corresponding odors such as the corresponding labels, the one or more corresponding characteristics, the one or more sources, etc.) by restricting a search space of the odors based on one or more terms included in a request corresponding to one or more of the characteristics (e.g., based on term(s) of the request) and/or based on contextual information associated with the given client device corresponding to contextual information associated with the odors (e.g., a location at which the odor is typically present, a time of year during which the odor is typically present, etc.).
- In additional or alternative implementations, the automated assistant may utilize a previously trained odor ML model to identify the odor in the environment of the given client device. The odor ML model may be any suitable ML model that is capable of processing the corresponding given odor data instances and/or one or more of the characteristics associated with the corresponding odor data instances to predict one or more of the labels associated with the corresponding odor data instances and/or one or more of the sources of the corresponding odors associated with the corresponding odor data instances, such as an encoder-decoder network. Further, the automated assistant can train the odor ML model based on a plurality of training instances. Each of the plurality of training instances can include training instance input and training instance output. The training instance input for a given training instance can include, for example, a given odor data instance (e.g., from among the plurality of corresponding odor data instances utilized to generate the odor index) and/or one or more of the characteristics associated with the given odor data instance. Further, the training instance output can include, for example, one or more of the labels associated with the given odor data instance and/or one or more of the sources associated with the given odor data instance. For example, and assuming the odor ML model corresponds to the encoder-decoder network, the automated assistant can utilize the odor ML model to map the corresponding odors to an embedding space or other lower-level space that enables the corresponding odor data instances to be compared.
- For example, in training the odor ML model based on a given training instance, the training instance input can be applied as input across the odor ML model to generate an embedding for the given odor data instance. The embedding for the given odor data instance can be mapped to the embedding space and labeled with one or more of the labels associated with the given odor data instance and/or one or more of the sources associated with the given odor data instance included in the training instance output. This process may be repeated for each of the plurality of training instances to populate the embedding space. Further, the embedding space may be distributed based on one or more of the characteristics included in the training instance input. Put another way, sweet odors may be mapped to a first portion of the embedding space, pungent odors may be mapped to a second portion of the embedding space, and so on. This enables similar odors to be grouped together in the embedding space. The odor ML model may be trained based on additional training instances to add corresponding odors to the embedding space. Accordingly, at inference, the automated assistant can process the odor data instance using the odor ML model to map the odor data instance to the embedding space and generate output that identifies an odor that is closest in the embedding space as the odor in the environment of the given client device. In some implementations, and similar to the odor index described above, a search space of the odors may be restricted based on term(s) included in the request and/or contextual information associated with the given client device. In some versions of those implementations, the term(s) of the request and/or the contextual information can be applied as input across the odor ML model along with the odor data instance in generating the embedding, whereas in additional or alternative versions of those implementations, the term(s) of the request and/or the contextual information can be utilized in comparing the generated embedding to the previously generated embeddings by only considering odors having characteristics that match the term(s) and/or that have been detected in the same or similar contextual scenarios.
- In some implementations, the automated assistant can establish one or more baseline odors in the environment of the given client device. The automated assistant can cause a plurality of odor data instances to be generated by the one or more odor sensors of the client device at a plurality of time instances across a time interval. Further, the automated assistant can process the plurality of odor data instances using the odor index and/or the odor ML model described above to identify a plurality of odors in the environment of the given client device. Moreover, the automated assistant can classify one or more of the plurality of odors as a baseline odor in response to determining that that the odor is identified in the environment of the client device for a threshold quantity of the time instances across the time interval. Continuing with the above example, assume that the hydrogen sulfide gas is not a baseline odor in an environment of the given client device (e.g., in a primary dwelling of the user). In this example, the response to the request and/or the notification may identify the odor as corresponding to the odor in the environment of the given client device and/or identify a source of the odor (e.g., faulty plumbing in the primary dwelling of the user). In contrast, assume that the hydrogen sulfide gas is a baseline odor in an environment of the given client device (e.g., in a waste management facility where the user works). In this example, the response to the request and/or the notification may exclude the odor.
- In various implementations, the automated assistant may generate a query based on the request received from the user and/or based on the identified odor. Continuing with the above example, assume that the hydrogen sulfide gas is identified as the odor in the environment of the client device. In this example, the automated assistant can generate a query for hydrogen sulfide gas and cause the query to be executed via a search engine and/or over one or more databases. Further, the automated assistant can include, in the response and/or the notification, content obtained responsive to the query. For instance, and assuming that the client device is located in the primary dwelling of the user, the content obtained responsive to the query can include an indication of potential sources of the hydrogen sulfide gas (e.g., faulty plumbing in an environment of the client device), an indication one or more suggested actions for ridding the environment of the hydrogen sulfide gas (e.g., a list of one or more local plumbers), one or more facts associated with hydrogen sulfide gas, and/or any other information associated with hydrogen sulfide gas.
- In various implementations, the response and/or the notification can be audibly rendered for audible presentation to the user via microphone(s) of the given client device. In additional or alternative implementations, the response and/or the notification can be visually rendered for visual presentation to the user via a display of the given client device. In some implementations, how the response and/or the notification is provided for presentation to the user may be based on device capabilities of the given client device of the user. For example, in implementations where the given client device lacks a display, the response and/or the notification may only be provided for audible presentation to the user via the microphone(s) of the given client device. However, in implementations where the given client device includes a display, the response and/or the notification may be provided for audible presentation to the user via the microphone(s) of the given client device and/or for visual presentation to the user via the display of the given client device.
- By using the techniques described herein, one or more technical advantages can be achieved. As one non-limiting example, the techniques described herein enable the automated assistant leverage the odor data in responding to user requests that request the automated assistant identify an odor in an environment of a given client device, thereby reducing a quantity of user inputs received at the given client device and/or computational resources consumed at the given client device absent these techniques. For instance, absent these techniques, the user may provide terms that are descriptive of the odor (e.g., pungent odor outdoors in the southeastern United States in the spring) in an attempt to identify the odor. However, there are a plethora of odors that may fit the description of the odor, thereby requiring the user to peruse search results in an attempt to identify the odor and/or to further refine the query. In contrast, the techniques described herein enable the automated assistant to sample air and/or gas molecules to accurately identify the odor in a more quick and efficient manner. Further, in this example, term(s) of the request and/or contextual information associated with the given client device may be utilized to restrict a search space of the odors to accurately identify the odor in a more quick and efficient manner. As another non-limiting example, the techniques described herein enable the automated assistant to identify presence of odors that are not typically present in the environment of the given client device and/or in instances where the detected odor may be harmful or pose a threat to the user, thereby increasing safety to the user and the environment of the user.
- The claims define the matter for protection.
- Additionally, an implementation comprises a method implemented by one or more processors, the method comprising:
- at a plurality of time instances:
- obtaining corresponding odor data instances generated by an odor sensor of a client device of a user;
- processing the corresponding odor data instances to generate corresponding outputs for the corresponding odor data instances; and
- identifying, based on corresponding outputs, one or more baseline odors in an environment of the client device; and
- at a subsequent time instance that is subsequent to each of the plurality of time instances:
- obtaining a given odor data instance generated by the odor sensor of the client device of the user or an additional odor sensor of an additional client device of the user that is co-located in the environment of the client device;
- processing the given odor data instance to generate given output for the given odor data instance;
- identifying, based on the given output, a given odor in the environment of the client device; and
- in response to determining that the given odor in the environment of the client does not correspond to one or more of the baseline odors:
- generating a notification that identifies the given odor and that indicates the given odor does not correspond to one or more of the baseline odors; and
- causing the notification that identifies the given odor and that indicates the given odor does not correspond to one or more of the baseline odors to be provided for presentation to the user via the client device.
- Identifying a given baseline odor, of the one or more baseline odors, in the environment of the client device based on the corresponding outputs may comprise:
identifying the given baseline odor at a threshold quantity of time instances of the plurality of time instances. - Additionally, an implementation comprises a method implemented by one or more processors, the method comprising:
- at a plurality of time instances:
- obtaining corresponding odor data instances generated by an odor sensor of a client device of a user;
- processing the corresponding odor data instances to generate corresponding outputs for the corresponding odor data instances; and
- identifying, based on corresponding outputs, one or more baseline odors in an environment of the client device; and
- at a subsequent time instance that is subsequent to the plurality of time instances:
- receiving, from the user, a request to identify a given odor in the environment of the client device of the user;
- in response to receiving the request to identify the odor in the environment of the client device, processing a given odor data instance generated by the odor sensor of the client device of the user to generate given output;
- identifying, based on the given output, the given odor in the environment of the client device of the user that is in addition to the one or more baseline odors in the environment of the client device;
- generating a response to the request that identifies at least the given odor in the environment of the client device of the user; and
- causing the response to the request to be provided for presentation to the user via the client device.
- The above description is provided as an overview of only some implementations disclosed herein. Those implementations, and other implementations, are described in additional detail herein.
- It should be understood that techniques disclosed herein can be implemented locally on a client device, remotely by server(s) connected to the client device via one or more networks, and/or both.
-
-
FIG. 1 depicts a block diagram of an example environment that demonstrates various aspects of the present disclosure, and in which implementations disclosed herein can be implemented. -
FIG. 2 depicts a flowchart illustrating an example method of identifying an odor in an environment of a client device in response to receiving a request to identify the odor, in accordance with various implementations. -
FIG. 3 depicts a flowchart illustrating an example method of establishing one or more baseline odors in an environment of a client device and identifying a given odor in the environment of the client device that is in addition to the one or more baseline odors, in accordance with various implementations. -
FIGS. 4A and4B depict various non-limiting examples associated with identifying an odor in an environment of a client device in response to receiving a request to identify the odor, in accordance with various implementations. -
FIGS. 5A and5B depict various non-limiting examples associated with establishing one or more baseline odors in an environment of a client device and identifying a given odor in the environment of the client device that is in addition to the one or more baseline odors, in accordance with various implementations. -
FIG. 6 depicts an example architecture of a computing device, in accordance with various implementations. - Turning now to
FIG. 1 , a block diagram of an example environment that demonstrates various aspects of the present disclosure, and in which implementations disclosed herein can be implemented is depicted. The example environment includes aclient device 110. Theclient device 110 may be, for example, one or more of: a desktop computer, a laptop computer, a tablet, a mobile phone, a computing device of a vehicle (e.g., an in-vehicle communications system, an in-vehicle entertainment system, an in-vehicle navigation system), a standalone interactive speaker (optionally having a display), a smart appliance such as a smart television, and/or a wearable apparatus of the user that includes a computing device (e.g., a watch of the user having a computing device, glasses of the user having a computing device, a virtual or augmented reality computing device). Additional and/or alternative client devices may be provided. - The
client device 110 can include various components, including, but not limited to, a user input engine 111, arendering engine 112, asensor engine 113, and anautomated assistant client 114. Theautomated assistant client 114 can include various components, including, but not limited to, an automatic speech recognition (ASR) engine 120A1, a natural language understanding (NLU) engine 130A1, a fulfillment engine 140A1, and a text-to-speech (TTS) engine 150A1. Further, theautomated assistant client 114 can be an application that is separate from an operating system of the client device 110 (e.g., installed "on top" of the operating system) - or can alternatively be implemented directly by the operating system of theclient device 110. Theautomated assistant client 114 can interact with a cloud-based automated assistant 180 (e.g., a remote server or cluster of remote servers) over one ormore networks 199, such as one or more wired or wireless local area networks ("LANs," including Wi-Fi LANs, mesh networks, Bluetooth, near-field communication, etc.) or wide area networks ("WANs", including the Internet). The cloud-basedautomated assistant 180 can include various components, including, but not limited to, an ASR engine 120A2, an NLU engine 130A2, a fulfillment engine 140A2, a TTS engine 150A2, and an odordata processing engine 160. Although the odordata processing engine 160 is depicted as being implemented remotely from theclient device 110 inFIG. 1 , it should be understood that is for the sake of example and is not meant to be limiting, and that the odordata processing engine 160 can be implemented locally at theclient device 110 without interacting with the cloud-basedautomated assistant 180. - The automated assistant client 114 (and optionally by way of its interactions with the cloud-based automated assistant 180) may form what appears to be, from a user's perspective, a logical instance of an
automated assistant 115 with which a user of theclient device 110 may engage in a human-to-computer dialog. An instance of theautomated assistant 115 is depicted inFIG. 1 , and is encompassed by a dashed line that includes the automatedassistant client 114 of theclient device 110 and the cloud-basedautomated assistant 180. It thus should be understood that a user that engages with theautomated assistant client 114 executing on theclient device 110 may, in effect, engage with his or her own logical instance of the automated assistant 115 (or a logical instance of theautomated assistant 115 that is shared amongst a household or other group of users). For the sake of brevity and simplicity, theautomated assistant 115 as used herein will refer to theautomated assistant client 114 executing locally on theclient device 110 and/or one or more remote servers that may implement thecollaborative ranking system 180. - In various implementations, the user input engine 111 is configured to detect user input provided by the user of the
client device 110 using one or more user interface input devices. For example, theclient device 110 may be equipped with one or more microphones that capture audio data, such as audio data corresponding to spoken utterances of the user or other sounds in an environment of theclient device 110. Additionally, or alternatively, theclient device 110 may be equipped with one or more vision components that are configured to capture vision data corresponding to images and/or movements (e.g., gestures) detected in a field of view of one or more of the vision components. Additionally, or alternatively, theclient device 110 may be equipped with one or more touch sensitive components (e.g., a keyboard and mouse, a stylus, a touch screen, a touch panel, one or more software or hardware buttons, etc.) that are configured to capture signal(s) corresponding to touch input and/or typed input directed to theclient device 110. - In various implementations, the
rendering engine 112 is configured to provide content for audible and/or visual presentation to a user of theclient device 110 using one or more user interface output devices. For example, theclient device 110 may be equipped with one or more speakers that enable content to be audibly rendered for presentation to the user via theclient device 110. Additionally, or alternatively, theclient device 110 may be equipped with a display or projector that enables content to be visually rendered presentation to the user via theclient device 110. - In various implementations, the
sensor engine 113 is configured to obtain sensor data instances from various sensors of the client device. The sensors of theclient device 110 can include, but are not limited to, presence sensor(s) that are configured to provide, with approval from corresponding user(s), signals indicative of detected presence, particularly human presence in an environment of theclient device 110, odor sensor(s) that are configured to provide signals indicative of air or gas molecules detected in the environment of theclient device 110, and/or any other sensors. - In some of those implementations, the
automated assistant 115 can identify the client device 110 (or another computing device associated with a user of the client device 110) to satisfy a spoken utterance based at least in part of presence of the user at theclient device 110. The spoken utterance can be satisfied by rendering responsive content (e.g., via the rendering engine 112) at theclient device 110 by causing theclient device 110 to be controlled, and/or by causing theclient device 110 to perform any other action to satisfy the spoken utterance. As described herein, theautomated assistant 115 can leverage data obtained by thesensor engine 113 in determining theclient device 110 to be utilized in satisfying the spoken utterance based on where a user is near or was recently near, and provide corresponding commands to only theclient device 110. In some additional or alternative implementations, theautomated assistant 115 can leverage data obtained by thesensor engine 113 in determining whether any user(s) (any users or specific users) are currently proximal to theclient device 110, and can optionally suppress provision of data to and/or from theclient device 110 based on the user(s) that are proximal to theclient device 110. - The sensors of the
client device 110 from which thesensor engine 113 obtains sensor data instances may come in various forms. For example, theclient device 110 can utilize one or more of the user interface input components described above with respect to the user input engine 111 to detect presence of the user. Additionally, or alternatively, theclient device 110 may be equipped with other types of light-based presence sensors, such as passive infrared ("PIR") sensors that measure infrared ("IR") light radiating from objects within their fields of view. - Additionally, or alternatively, in some implementations, the presence sensors may be configured to detect other phenomena associated with human presence or device presence. For example, in some implementations, the
client device 110 may be equipped with one or more presence sensors that detects various types of wireless signals (e.g., waves such as radio, ultrasonic, electromagnetic, etc.) emitted by, for instance, other computing devices carried/operated by a user (e.g., a mobile device, a wearable computing device, etc.) and/or other computing devices. For example, theclient device 110 may be configured to emit waves that are imperceptible to humans, such as ultrasonic waves or infrared waves, that may be detected by other computing device(s) (e.g., via ultrasonic/infrared receivers such as ultrasonic-capable microphones). - Additionally, or alternatively, the
client device 110 may emit other types of human-imperceptible waves, such as radio waves (e.g., Wi-Fi, Bluetooth, cellular, etc.) that may be detected by other computing device(s) carried/operated by a user (e.g., a mobile device, a wearable computing device, etc.) and used to determine the user's particular location. In some implementations, GPS and/or Wi-Fi triangulation may be used to detect a person's location, e.g., based on GPS and/or Wi-Fi signals to/from theclient device 110. In other implementations, other wireless signal characteristics, such as time-of-flight, signal strength, etc., may be used by theclient device 110, alone or collectively, to determine a particular person's location based on signals emitted by the other computing device(s) carried/operated by the user. - Additionally, or alternatively, in some implementations, the
client device 110 may perform speaker identification (SID) to recognize a user from their voice and/or may perform face identification (FID) to recognize a user from vision data capturing his/her face. In some implementations, movement of the speaker may then be determined, e.g., by the presence sensors of the client device 110 (and optionally GPS sensors, Soli chips, and/or accelerometers of the client device 110). In some implementations, based on such detected movement, a location of the user may be predicted, and this location may be assumed to be the user's location when any content to be rendered at theclient device 110 and/or other computing device(s) based at least in part on proximity of theclient device 110 and/or other computing device(s) to the user's location. In some implementations, the user may simply be assumed to be in the last location at which he/she engaged with theautomated assistant 115, especially if not much time has passed since the last engagement. - Also, for example, in some implementations, the
client device 110 may be equipped with one or more odor sensors that detect air and/or gas molecules in an environment of theclient device 110. The air and/or gas molecules may be absorbed into one or more organic layers of the one or more odor sensors to generate signal(s) corresponding to an odor data instance based on the absorption of the air and/or gas molecules. The odor data instance may be further processed (e.g., by the odor data processing engine 160) to identify an odor and/or a source of the odor. Although a particular odor sensor is described herein, it should be understood that is for the sake of example and is not meant to be limiting, and that any odor sensor integrated with theclient device 110 and/or in communication with the client device may be utilized to generate the odor data instances described herein. - Further, the
client device 110 and/or the cloud-basedautomated assistant 180 may include one or more memories for storage of data and/or software applications, one or more processors for accessing data and executing the software applications, and/or other components that facilitate communication over one or more of thenetworks 199. In some implementations, one or more of the software applications can be installed locally at theclient device 110, whereas in other implementations one or more of the software applications can be hosted remotely (e.g., by one or more servers) and can be accessible by theclient device 110 over one or more of thenetworks 199. The operations performed by theclient device 110, other computing device(s), and/or by theautomated assistant 115 may be distributed across multiple computer systems. Theautomated assistant 115 may be implemented as, for example, computer programs running on theclient device 110 and/or one or more computers in one or more locations that are coupled to each other through a network (e.g., the network(s) 199 ofFIG. 1 ). - In some implementations, the operations performed by the
automated assistant 115 may be implemented locally at theclient device 110 via theautomated assistant client 114, whereas in other implementations, the operations performed by theautomated assistant 115 may be distributed across multiple computer systems, such as when the cloud-basedautomated assistant 180 is utilized as depicted inFIG. 1 . Notably, theautomated assistant client 114 and/or the cloud-basedautomated assistant 180 may leverage respective instances of the ASR engine 120A1 and/or 120A2, NLU engine 130A1 and/or 130A2, fulfillment engine 140A1 and/or 140A2, and TTS engine 150A1 and/or 150A2 in processing and responding to any user requests detected at the client device (e.g., via the user input engine 111). - Each of these engines may be configured to perform one or more functions. For example, the ASR engine 120A1 and/or 120A2 can process, using ASR model(s) stored in machine learning (ML) model(s)
database 115A (e.g., a recurrent neural network (RNN) model, a transformer model, and/or any other type of ML model capable of performing ASR), audio data that captures a spoken utterance and that is generated by microphone(s) of theclient device 110 to generate ASR output. Further, the NLU engine 130A1 and/or 130A2 can process, using NLU model(s) stored in the ML model(s)database 115A (e.g., a long short-term memory (LSTM), gated recurrent unit (GRU), and/or any other type of RNN or other ML model capable of performing NLU) and/or grammar-based rule(s), the ASR output to generate NLU output. Moreover, the fulfillment engine 140A1 and/or 140A2 can generate fulfillment output(s) based on fulfillment data generated based on the NLU output. The fulfillment data can be generated using, for example, theautomated assistant 115, one or more first-party (1P) agents (not depicted), and/or one or more third-party (3P) agents (not depicted). Lastly, the TTS engine 150A1 and/or 150A2 can process, using TTS model(s) stored in the ML model(s)database 115A, textual data (e.g., text formulated by the automated assistant 115) to generate synthesized speech audio data that includes computer-generated synthesized speech. Notably, the ML model(s) stored in the ML model(s)database 115A can be on-device ML models that are stored locally at theclient device 110 or shared ML models that are accessible to both theautomated assistant client 114 and/or the cloud-basedautomated assistant 180. - In various implementations, the ASR output can include, for example, speech hypotheses (e.g., term hypotheses and/or transcription hypotheses) that are predicted to correspond to spoken utterance(s) of a user that are captured in the audio data, one or more corresponding predicted values (e.g., probabilities, log likelihoods, and/or other values) for each of the speech hypotheses, a plurality of phonemes that are predicted to correspond to spoken utterance(s) of a user that are captured in the audio data, and/or other ASR output. In some versions of those implementations, the ASR engine 120A1 and/or 120A2 can select one or more of the speech hypotheses as recognized text that corresponds to the spoken utterance (e.g., based on the corresponding predicted values).
- In various implementations, the NLU output can include, for example, annotated recognized text that includes one or more annotations of the recognized text for one or more (e.g., all) of the terms of the recognized text. For example, the NLU engine 130A1 and/or 130A2 may include a part of speech tagger (not depicted) configured to annotate terms with their grammatical roles. Additionally, or alternatively, the NLU engine 130A1 and/or 130A2 may include an entity tagger (not depicted) configured to annotate entity references in one or more segments of the recognized text, such as references to people (including, for instance, literary characters, celebrities, public figures, etc.), organizations, locations (real and imaginary), and so forth. In some implementations, data about entities may be stored in one or more databases, such as in a knowledge graph (not depicted). In some implementations, the knowledge graph may include nodes that represent known entities (and in some cases, entity attributes), as well as edges that connect the nodes and represent relationships between the entities. The entity tagger may annotate references to an entity at a high level of granularity (e.g., to enable identification of all references to an entity class such as people) and/or a lower level of granularity (e.g., to enable identification of all references to a particular entity such as a particular person). The entity tagger may rely on content of the natural language input to resolve a particular entity and/or may optionally communicate with a knowledge graph or other entity database to resolve a particular entity. Additionally, or alternatively, the NLU engine 130A1 and/or 130A2 may include a coreference resolver (not depicted) configured to group, or "cluster," references to the same entity based on one or more contextual cues. For example, the coreference resolver may be utilized to resolve the term "them" to "buy theatre tickets" in the natural language input "buy them", based on "theatre tickets" being mentioned in a client device notification rendered immediately prior to receiving input "buy them". In some implementations, one or more components of the NLU engine 130A1 and/or 130A2 may rely on annotations from one or more other components of the NLU engine 130A1 and/or 130A2. For example, in some implementations the entity tagger may rely on annotations from the coreference resolver in annotating all mentions to a particular entity. Also, for example, in some implementations, the coreference resolver may rely on annotations from the entity tagger in clustering references to the same entity.
- Although
FIG. 1 is described with respect to a single client device having a single user, it should be understood that is for the sake of example and is not meant to be limiting. For example, one or more additional client devices of a user can also implement the techniques described herein. For instance, theclient device 110, the one or more additional client devices, and/or any other computing devices of the user can form an ecosystem of devices that can employ techniques described herein. These additional client devices and/or computing devices may be in communication with the client device 110 (e.g., over the network(s) 199). As another example, a given client device can be utilized by multiple users in a shared setting (e.g., a group of users, a household). - In some implementations, the odor
data processing engine 160 can include various components. For example, as shown inFIG. 1 , the odordata processing engine 160 can include one or more of arequest handling engine 161, anodor index engine 162, an odorML training engine 163, anodor identification engine 164, aresponse engine 165, and aquery engine 166. Although the odordata processing engine 160 is depicted inFIG. 1 as including particular engines, it should be understood that is for the sake of example and is not meant to be limiting. One or more engines may be omitted, and/or added. - In various implementations, the
request handling engine 161 can cause user input from a user of theclient device 110 detected via the user input engine 111 to be processed. For example, assume a user of theclient device 110 provides a spoken utterance that requests theautomated assistant 115 identify an odor in an environment of theclient device 110. In this example, therequest handling engine 161 can cause audio data that captures the spoken utterance to be processed by the ASR engine 120A1 and/or 120A2 to generate ASR output for the spoken utterance, and cause the ASR output to be processed by the NLU engine 130A1 and/or 130A2 to generate NLU output for the spoken utterance that indicates the user is requesting identification of an odor in the environment of theclient device 110. Notably, therequest handling engine 161 can identify one or more terms included in the request. As described below (e.g., with respect to the odor identification engine 163), the odordata processing engine 160 can utilize one or more terms of the request to restrict a search space of odors to identify an odor in an environment of theclient device 110. Although the above example is described with respect to a request for theautomated assistant 115 to identify an odor in an environment of theclient device 110, it should be understood that is for the sake of example and is not meant to be limiting, and that therequest handling engine 161 can be utilized to process any requests directed to the automated assistant (e.g., with one non-limiting example being described with respect toFIG. 5A ). - In various implementations, the
odor index engine 162 can generate anodor index 162A based on processing odor data instances stored in an odordata instances database 160A. The odordata instances database 160A can include a plurality of odor data instances generated by one or more of the odor sensors of theclient device 110 via thesensor engine 113 and/or generated by one or more additional odor sensors that are standalone or that are integral with one or more additional computing devices. Further, the odordata instances database 160A can include a corresponding label that identifies a corresponding odor (e.g., a chemical compound that identifies the odor) associated with each of the plurality of odor data instances, one or more characteristics that describe the corresponding odors (e.g., sweet, pungent, etc.), and/or one or more sources of the corresponding odors (e.g., faulty plumbing, a particular flower or tree, mold, various medical ailments, etc.). Theodor indexing engine 162 can generate the odor index 152A by generating a mapping between each of the corresponding data instances and the corresponding labels, the one or more characteristics, and/or the one or more sources. The mapping may be subsequently utilized (e.g., by the odor identification engine 164) to identify an odor detected in an environment of theclient device 110, one or more characteristics associated with the odor detected in the environment of theclient device 110, and/or one or more sources of the odor detected in the environment of theclient device 110. - In some versions of those implementations, the
odor index 162A may be indexed based on one or more criteria. The one or more criteria may include, for example, the corresponding labels that identifies a corresponding odor, the one or more characteristics that describe the corresponding odors, the one or more sources of the corresponding odors, geographical regions associated with the corresponding odors, times of year associated with the corresponding odors, whether the corresponding odors are encountered indoors or outdoors, and/or any other criteria. The one or more criteria may be subsequently utilized (e.g., by the odor identification engine 164) to quickly and efficiently traverse the mapping between the corresponding odor data instances and the corresponding odors (or other data associated with the corresponding odors such as the corresponding labels, the one or more corresponding characteristics, the one or more sources, etc.) by restricting a search space of the odors based on one or more terms included in a request corresponding to one or more of the characteristics (e.g., identified by therequest handling engine 161 as noted above) and/or based on contextual information associated with theclient device 110 corresponding to contextual information associated with the odors (e.g., a location at which the odor is typically present, a time of year during which the odor is typically present, etc.). - In various implementations, the odor
ML training engine 163 can generate a plurality of training instances based on the corresponding odor data instances (and other data associated with the corresponding odors) stored in the odordata instances database 160. Each of the plurality of training instances can include training instance input and training instance output. The training instance input for a given training instance can include, for example, a given odor data instance (e.g., from among the plurality of corresponding odor data instances stored in the data instances database 160) and/or one or more of the characteristics associated with the given odor data instance. Further, the training instance output can include, for example, one or more of the labels associated with the given odor data instance and/or one or more of the sources associated with the given odor data instance. - Further, the odor
ML training engine 163 can train an odor ML model stored in the ML model(s)database 115A based on the plurality of training instances. The odor ML model may be any suitable ML model that is capable of processing the corresponding given odor data instances and/or one or more of the characteristics associated with the corresponding odor data instances to predict one or more of the labels associated with the corresponding odor data instances and/or one or more of the sources of the corresponding odors associated with the corresponding odor data instances, such as an encoder-decoder network. The encoder-decoder network may be utilized to map the corresponding odors to an embedding space or other lower-level space that enables the corresponding odor data instances to be compared to odor data instances generated by the one or more odor data sensors of theclient device 110. - For example, in training the odor ML model based on a given training instance, the training instance input can be applied as input across the odor ML model to generate an embedding for the given odor data instance. The embedding for the given odor data instance can be mapped to the embedding space and labeled with one or more of the labels associated with the given odor data instance and/or one or more of the sources associated with the given odor data instance included in the training instance output. This process may be repeated for each of the plurality of training instances to populate the embedding space. Further, the embedding space may be distributed based on one or more of the characteristics included in the training instance input. Put another way, sweet odors may be mapped to a first portion of the embedding space, pungent odors may be mapped to a second portion of the embedding space, and so on. This enables similar odors to be grouped together in the embedding space. The odor ML model may be trained based on additional training instances to add corresponding odors to the embedding space.
- In various implementations, the
odor identification engine 164 can utilize theodor index 162A that was previously generated (e.g., as described with respect to the odor index engine 162) and/or the odor ML model stored in the ML model(s)database 115A (e.g., trained as described with respect to the odor ML training engine) to identify odors based on odor data instances generated by one or more of the odor sensors of theclient device 110. For example, in implementations where theodor identification engine 164 utilizes theodor index 162A to identify a given odor, theodor identification engine 164 can compare a given odor data instance to the plurality of corresponding data instances stored in theodor index 162A to identify a given odor captured by the given odor data instance. For instance, theodor identification engine 164 can compare raw odor data of the given odor data instance to corresponding raw odor data of the corresponding odor data instances that were previously indexed to identify the given odor and/or compare any representation of the raw odor data of the given odor data instance any available representation of the corresponding odor data instances that were previously indexed to identify the given odor. In this example, theodor identification engine 164 can generate output based on the given odor that is identified from theodor index 162A. The output can include an indication of a predicted odor that is predicted to be present in the environment of theclient device 110, one or more of the sources that are predicted to be emitting the predicted odor, visual content and/or audible content associated with the predicted odor and/or one or more of the sources, and/or other information. - Also, for example, in implementations where the
odor identification 164 utilizes the odor ML model to identify a given odor, theodor identification engine 164 can process a given odor data instance that captures a given odor using the odor ML model to generate a given odor embedding. The given odor embedding can be compared, in the embedding space, to previously generated odor embeddings (e.g., as described above with respect to the odor ML training engine 163). For instance, a distance in the embedding space between the given odor embedding and the previously generated odor embeddings may be determined, and a given odor associated with the previously generated odor embedding that is closest to the given odor embedding can be identified as the given odor captured in the given odor data instance. Further, one or more terms of a request to identify the given odor can additionally or alternatively be processed using the odor ML model to restrict portions of the embedding space that may be compared to the given odor data instance. For instance, if the user includes a term of "sweet" in describing the given odor in providing the request, then theodor identification engine 164 may restrict the comparing of the given odor embedding to the previously generated odor embeddings that are associated with "sweet" odors. Similarly, the output can include an indication of a predicted odor that is predicted to be present in the environment of theclient device 110, one or more of the sources that are predicted to be emitting the predicted odor, visual content associated with the predicted odor and/or one or more of the sources, and/or other information. - In various implementations, the
response engine 165 can process the output generated by theodor identification engine 164 to generate a response that identifies at least the given odor captured in the given odor data instance. In some implementations, theresponse engine 165 can determine visual content to be provided for presentation to a user. In some versions of those implementations, the visual content may be visually rendered (e.g., via the rendering engine 112) for presentation to the user via a display of theclient device 110. The visual content can include, for example, one or more textual segments that include the given odor or one or more of the sources of the given odor, information cards related to the given odor or one or more of the sources of the given odor, and/or other visual content. In additional or alternative implementations, theresponse engine 165 can determine audible content to be provided for presentation to a user. In some versions of those implementations, the audible content may be generated using the TTS engine 150A1 and/or 150A2, and can be audibly rendered (e.g., via the rendering engine 112) for presentation to the user via one or more speakers of theclient device 110. - In various implementations, the
query engine 166 can generate a query based on the output generated by theodor identification engine 164 and/or based on the response generated by theresponse engine 165. Based on the query, a search may be executed over one or more databases to obtain content that is responsive to the query. For example, assume the given odor identified in response to a request corresponds to linear polyamine compounds caused by a dogwood tree in an environment of theclient device 110. In this example, a query for a dogwood tree can be generated and submitted to a search engine to obtain an information card for the dogwood tree, and the information card can be provided for presentation to the user. In additional or alternative implementations, thequery engine 166 can generate a query based on further user input. For example, assume the given odor identified in response to a request corresponds to microbial volatile organic compounds caused by black mold in an environment of theclient device 110. In this example, a query for a mold specialist can be generated and submitted to a search engine to obtain an information card that includes mold specialist capable of ridding the environment of the client device of the black mold, and the information card can be provided for presentation to the user. - Turning now to
FIG. 2 , a flowchart illustrating anexample method 200 of identifying an odor in an environment of a client device in response to receiving a request to identify the odor is depicted. For convenience, the operations of themethod 200 are described with reference to a system that performs the operations. This system of themethod 200 includes one or more processors, memory, and/or other component(s) of computing device(s) (e.g.,client device 110 ofFIG. 1 ,computing device 610 ofFIG. 6 , one or more servers, and/or other computing devices). Moreover, while operations of themethod 200 are shown in a particular order, this is not meant to be limiting. One or more operations may be reordered, omitted, and/or added. - At block 252, the system receives, from a user, a request to identify an odor in an environment of a client device of the user. At block 254, the system obtains an odor data instance generated by one or more odor sensors of the client device of the user. The request may include one or more terms and may be received via a spoken utterance, typed input, and/or touch input. Further, the odor data instance may be generated in response to receiving the request from the user.
- At
block 256, the system processes the odor data instance generated by the one or more odor sensors to generate output. The output can include, for example, an indication of a predicted odor that is predicted to be present in the environment of the client device, one or more of the sources that are predicted to be emitting the predicted odor, visual content and/or audible content associated with the predicted odor and/or one or more of the sources, and/or other information. For example, in some implementations, and as indicated at block 256A, the system may utilize a previously generated index that maps corresponding odor data instances to corresponding odors to generate the output. The system can previously generate the odor index that maps corresponding odor data instances to corresponding odors in one or more of the manners described herein (e.g., with respect to theodor indexing engine 162 and theodor index 162A ofFIG. 1 ) and/or in other manners. For instance, the system can compare the odor data instance to the corresponding odor data instances that were previously indexed to identify the predicted odor that is predicted to correspond to the odor captured by the odor data instance, and the system can generate the output based on the predicted odor that is predicted to correspond to the odor captured by the odor data instance. - As another example, in additional or alternative implementations, and as
indicated block 256B, the system utilizes an odor machine learning (ML) model to generate the output. The system can previously train the odor ML model in one or more of the manners described herein (e.g., with respect to the odorML training engine 163 ofFIG. 1 ) and/or in other manners. For instance, the system can apply the odor data instance as input across the odor ML model to generate an odor embedding and map the odor embedding to an embedding space, and the system can generate the output based on comparing the odor embedding to previously generated odor embeddings in the embedding space. - At block 258, the system identifies, based on the output, the odor in the environment of the client device of the user. For example, in some implementations, and as indicated at
block 258A, the system utilizes contextual information associated with the client device to identify the odor based on the output. In implementations where the system utilizes the odor index to generate the output, the system may restrict the corresponding odor data instances considered to those that occur in similar contextual scenarios. For instance, assume a user is indoors during the winter as indicated by contextual information associated with the client device and assume the user provides a request to identify an odor in the environment of the client device. In this instance, the system may not consider corresponding odor data instances associated with odors that are typically present outdoors during the spring, such as blooming flowers or trees. In implementations where the system utilizes the odor ML model to generate the output, the contextual information may additionally be applied as input across the odor ML model in generating the odor embedding. For instance, again assume a user is indoors during the winter as indicated by contextual information associated with the client device and again assume the user provides a request to identify an odor in the environment of the client device. In this instance, the system may additionally process the locational and seasonal information in generating the odor embedding to influence where the odor embedding is mapped in the embedding space (e.g., towards odors that occur in similar contextual scenarios). - As another example, in additional or alternative implementations, and as
indicated block 258B, the system utilizes one or more terms of the request (e.g., that was received at block 252) to identify the odor based on the output. In implementations where the system utilizes the odor index to generate the output, the system may restrict the corresponding odor data instances considered to those that are associated with characteristics described by one or more of the terms or phrases. For instance, again assume a user is indoors during the winter as indicated by contextual information associated with the client device and assume the user provides a request to identify a "sweet" odor in the environment of the client device. In this instance, the system may not consider corresponding odor data instances associated with characteristics indicating the corresponding odor data instances are associated with odors that are pungent, damp, fishy, rancid, etc. In implementations where the system utilizes the odor ML model to generate the output, one or more of the terms may additionally be applied as input across the odor ML model in generating the odor embedding. For instance, again assume a user is indoors during the winter as indicated by contextual information associated with the client device and again assume the user provides a request to identify a "sweet" odor in the environment of the client device. In this instance, the system may additionally process the term "sweet" in generating the odor embedding to influence where the odor embedding is mapped in the embedding space (e.g., towards odors that are considered "sweet"). - At block 260, the system generates a response to the request that identifies at least the odor in the environment of the client device of the user. At block 262, the system causes the response to the request to be provided for presentation to the user via the client device. The response can identify, for example, the odor, one or more of the sources that are predicted to be emitting the odor, visual content and/or audible content associated with the predicted odor and/or one or more of the sources, and/or other information. In some implementations, the information included in the response may be obtained while generating the output at
block 256 and/or while identifying the odor at block 258. In additional or alternative implementations, the system may generate a query based on the output to obtain the information included in the response (e.g., as described with respect to thequery engine 166 ofFIG. 1 ). The response may be audibly rendered and/or visually rendered for presentation to the user. - Turning now to
FIG. 3 , a flowchart illustrating anexample method 300 of establishing one or more baseline odors in an environment of a client device and identifying a given odor in the environment of the client device that is in addition to the one or more baseline odors is depicted. For convenience, the operations of themethod 300 are described with reference to a system that performs the operations. This system of themethod 300 includes one or more processors, memory, and/or other component(s) of computing device(s) (e.g.,client device 110 ofFIG. 1 ,computing device 610 ofFIG. 6 , one or more servers, and/or other computing devices). Moreover, while operations of themethod 300 are shown in a particular order, this is not meant to be limiting. One or more operations may be reordered, omitted, and/or added. - At block 352, the system obtains one or more corresponding odor data instances generated by one or more odor sensors of a client device of a user. The one or more corresponding odor data instances may be obtained at block 352 a plurality of disparate time instances across a time interval. At
block 354, the system processes one or more of the corresponding odor data instances to generate one or more corresponding outputs for one or more of the corresponding odor data instances. The system can process one or more of the corresponding odor data instances to generate one or more of the corresponding outputs for one or more of the corresponding odor data instances in the same or similar described with respect to the operations ofblock 256 of themethod 200 ofFIG. 2 . Atblock 356, the system identifies, based on one or more of the corresponding outputs, one or more baseline odors in an environment of the client device. The system can identify one or more corresponding odors based on one or more of the corresponding outputs in the same or similar described with respect to the operations of block 258 of themethod 200 ofFIG. 2 . Further, the system can classify one or more of the corresponding odors as a baseline odor in response to determining that that the odor is identified in the environment of the client device for a threshold quantity of the time instances across the time interval. - At
block 358, the system determines whether one or more of the baseline odors have been established. If, at an iteration ofblock 358, the system determines that one or more of the baseline odors have not been established, then the system returns to block 352 and repeats the operations of blocks 352-358 with respect to one or more additional corresponding odor data instances. If, at an iteration ofblock 358, the system determines that one or more of the baseline odors have been established, then the system proceeds to block 360. Any odors that correspond to one or more of the baseline odors may be annotated as such (e.g., in theodor index 162A ofFIG. 1 ). For instance, assume that a pumpkin scented candle is present in an environment of the client device and an odor capturing the pumpkin scented candle is captured in six corresponding odor data instances. In this instance, and assuming that six satisfies the threshold quantity of time instances across the time interval, the pumpkin scented candle may be established as a baseline odor in the environment of the client device. However, and assuming that six does not satisfy the threshold quantity of time instances across the time interval, the pumpkin scented candle may not be established as a baseline odor in the environment of the client device. - At block 360, the system obtains a given odor data instance generated by one or more of the odor sensors of the client device or one or more additional odor sensors of an additional client device of the user that is co-located in the environment of the client device. The given odor data instances may be obtained at block 360 a subsequent time instance that is subsequent to the plurality of time instances at which one or more of the corresponding odor data instances and/or one or more of the additional corresponding odor data instances are obtained at one or more iterations of block 352. In some implementations, the given odor data instance may be obtained periodically to detect the presence of one or more odors that are not typically present in the environment of the client device and/or that belong to a category of odors that may be harmful to the user. In additional or alternative implementations, the given odor data instance may be obtained in response to receiving a request from the user to identify a given odor in the environment of the client device and/or the additional client device (e.g., as described with the respect to the
method 200 ofFIG. 2 ). - At
block 362, the system processes the given odor data instance to generate given output for the given odor data instance. The system can process the given odor data instance to generate the output for the given odor data instance in the same or similar described with respect to the operations ofblock 256 of themethod 200 ofFIG. 2 . Atblock 364, the system identifies, based on the given output, a given odor in the environment of the client device, the given odor being in addition to one or more of the baseline odors. The system can identify the given odor based on the output in the same or similar described with respect to the operations of block 258 of themethod 200 ofFIG. 2 . - At block 366, the system generates a notification that identifies the given odor that identifies the given odor and that indicates the given odor does not correspond to one or more of the baseline odors (e.g., in implementations where the given odor data instance is obtained periodically) and/or generates a response to a request received from the user that identifies the given odor and that indicates the given odor does not correspond to one or more of the baseline odors (e.g., in implementations where the given odor data instance is obtained in response to a request). At block 368, the system causes the notification and/or the response to the request to be provided for presentation to the user via the client device. In some implementations, the system may generate the notification in response to determining that the given odor may pose a harm or threat to the user of the client device. In some implementations, the system may generate the notification in response to determining that the given odor is associated with a pecuniary interest (e.g., an advertisement). The response may be audibly rendered and/or visually rendered for presentation to the user.
- Turning now to
FIGS. 4A and4B , various non-limiting examples associated with identifying an odor in an environment of a client device in response to receiving a request to identify the odor are depicted. An automated assistant can be implemented at least in part atclient devices FIGS. 4A and4B (e.g., theautomated assistant 115 described with respect toFIG. 1 ). The automated assistant can utilize an odor processing engine (e.g., theodor processing system 160 described with respect toFIG. 1 ) to identify odors in environments of theclient devices client devices FIGS. 4A and4B may include various user interface components including, for example, microphone(s) to generate audio data based on spoken utterances and/or other audible input, speaker(s) to audibly render synthesized speech and/or other audible output, and a display to receive touch input and/or to visually render transcriptions and/or other visual output. Although theclient devices FIGS. 4A and4B are a standalone interactive speaker having adisplay 490A and a tablet having adisplay 490B, respectively, it should be understood that is for the sake of example and is not meant to be limiting. - Referring specifically to
FIG. 4A , assume auser 101 of theclient device 410A provides a spokenutterance 452A of "Assistant, what's that smell?" The automated assistant can process audio data capturing the spokenutterance 452A using an ASR engine (e.g., the ASR engine 120A1 and/or 120A2 ofFIG. 1 ) to generate ASR output (e.g., speech hypothes(es) predicted to correspond to the spokenutterance 452A). In some implementations, the automated assistant processes the audio data capturing the spokenutterance 452A in response to determining that the spokenutterance 452A includes one or more particular words or phrases to invoke the automated assistant (e.g., "Assistant", "Hey Assistant", etc.). Further, the automated assistant can process the ASR output using an NLU engine (e.g., the NLU engine 130A1 and/or 130A2 ofFIG. 1 ) to generate NLU output. Based on the NLU output, the automated assistant can determine that the spokenutterance 452A corresponds to a request to identify an odor in an environment of theclient device 410A. - For the sake of the example of
FIG. 4A , further assume that theclient device 410A is located in a primary dwelling of the user 101 (e.g., determined based on theclient device 410A being assigned to the primary dwelling of theuser 101 in a device topology representation of smart devices of the user 101). In response to receiving the spokenutterance 452A, one or more odor sensors of theclient device 410A can generate an odor data instance. The automated assistant can cause the odor data instance to be processed to generate output, and identify an odor present in the environment of theclient device 410A based on the output. In some implementations, the automated assistant can utilize a previously generated index to process the odor data instance to generate the output (e.g., as described with respect to theodor indexing engine 162 and theodor index 162A ofFIG. 1 , and with respect to themethod 200 ofFIG. 2 ). In additional or alternative implementations, the automated assistant can utilize an odor ML model to generate the output (e.g., as described with respect to the odorML training engine 163 and the ML model(s)database 115A ofFIG. 1 , and with respect to themethod 200 ofFIG. 2 ). - Notably, in these implementations, the automated assistant may leverage contextual information associated with the
client device 410A in generating the output and/or in identifying the odor. As noted above, in the example ofFIG. 4A , theclient device 410A is located in the primary dwelling of theuser 101. Accordingly, a search space of odors considered in generating the output and/or in identifying the odor may be restricted to those odors which may occur indoors. For the sake of the example ofFIG. 4A , further assume that the automated assistant determines that the odor corresponds to hydrogen sulfide gas. In this example, the automated assistant can cause synthesized speech audio data 454A1 of "You are probably referring to the smell of hydrogen sulfide gas" to be audibly rendered for presentation to theuser 101. However, many users may not know what hydrogen sulfide gas is or what causes hydrogen sulfide gas to be emitted. Accordingly, in this example, the automated assistant can additionally, or alternatively, cause synthesized speech audio data 454A2 of "the smell may be caused by faulty plumbing in your home" to make theuser 101 aware of a possible source of the hydrogen sulfide gas. Notably, in the example ofFIG. 4A , theclient device 410A includes thedisplay 490A, and content may additionally, or alternatively, be visually rendered for presentation to theuser 101 via thedisplay 490A. - In some implementations, the automated assistant may additionally or alternatively identify one or more suggested actions and provide the one or more suggested actions for presentation to the
user 101. In the example ofFIG. 4A , the automated assistant may identify one or more plumbers in an area of the primary dwelling of theuser 101. In some versions of those implementations, the one or more suggested actions may be proactively identified by the automated assistant and provided for presentation to the user 101 (e.g., as an advertisement for a local plumbing company), whereas in other versions of those implementations, the one or more suggested actions may be identified by the automated assistant in response to additional user input that requests the one or more suggested actions (e.g., "can you find me a plumber to fix the faulty plumbing?"). - Referring specifically to
FIG. 4B , assume theuser 101 of theclient device 410B provides a spokenutterance 452B of "Assistant, what's that pungent odor?" The automated assistant can process audio data capturing the spokenutterance 452B using an ASR engine to generate ASR output, and can process the ASR output using an NLU engine to generate NLU output in the same or similar manner described above with respect toFIG. 4A . Based on the NLU output, the automated assistant can determine that the spokenutterance 452B corresponds to a request to identify an odor in an environment of theclient device 410B, and to specifically identify a "pungent" odor in the environment of theclient device 410B. - For the sake of the example of
FIG. 4B , further assume that theclient device 410B is located outdoors and a time of year corresponds to spring at a location of theclient device 410B (e.g., the month of April in the southeastern United States). In response to receiving the spokenutterance 452B, one or more odor sensors of theclient device 410A can generate an odor data instance. The automated assistant can cause the odor data instance to be processed to generate output, and identify an odor present in the environment of theclient device 410A based on the output. In some implementations, the automated assistant can utilize a previously generated index to process the odor data instance to generate the output (e.g., as described with respect to theodor indexing engine 162 and theodor index 162A ofFIG. 1 , and with respect to themethod 200 ofFIG. 2 ). In additional or alternative implementations, the automated assistant can utilize an odor ML model to generate the output (e.g., as described with respect to the odorML training engine 163 and the ML model(s)database 115A ofFIG. 1 , and with respect to themethod 200 ofFIG. 2 ). - Notably, in these implementations, the automated assistant may leverage contextual information associated with the
client device 410B in generating the output and/or in identifying the odor. As noted above, in the example ofFIG. 4B , theclient device 410B is located outdoors in the spring in the southeastern United States and theuser 101 described the odor as "pungent". Accordingly, a search space of odors considered in generating the output and/or in identifying the odor may be restricted to those odors which may occur outdoors in the spring in the southeastern United States and that have at least a "pungent" characteristic. For the sake of the example ofFIG. 4B , further assume that the automated assistant determines that the odor corresponds to a linear polyamine compound. In this example, the automated assistant can cause synthesized speech audio data 454B1 of "It smells like a linear polyamine compound" to be audibly rendered for presentation to theuser 101. However, many users may not know what a linear polyamine compound is or what causes a linear polyamine compound to be emitted. Accordingly, in this example, the automated assistant can additionally, or alternatively, cause synthesized speech audio data 454B2 of "the smell is likely from a Dogwood Tree somewhere close by" to make theuser 101 aware of a possible source of the linear polyamine compound. Notably, in the example ofFIG. 4B , theclient device 410B includes thedisplay 490B, and content may additionally, or alternatively, be visually rendered for presentation to theuser 101 via thedisplay 490B, such as an information card that includes a picture of a Dogwood Tree and/or one or more facts about Dogwood Trees. - Although
FIGS. 4A and4B are described with respect to the automated assistant identifying odors in response to an explicit request from theuser 101, it should be understood that is for the sake of example and is not meant to be limiting. For example, and as described below with respect toFIG. 5A , the automated assistant may proactively notify theuser 101 of one or more odors that are detected in the environments of theclient devices FIGS. 4A and4B are described with respect to receiving particular spoken utterances and providing particular responses, it should also be understood that is for the sake of example and is not meant to be limiting. For example, the automated assistant may identify the odors based on one or more of the sources that are predicted to be emitting the odors. Moreover, althoughFIGS. 4A and4B are described with respect to particular contextual information associated with theclient devices - Turning now to
FIGS. 5A and5B , various non-limiting examples associated with establishing one or more baseline odors in an environment of a client device and identifying a given odor in the environment of the client device that is in addition to the one or more baseline odors are depicted. An automated assistant can be implemented at least in part atclient devices FIGS. 5A and5B (e.g., theautomated assistant 115 described with respect toFIG. 1 ). The automated assistant can utilize an odor processing engine (e.g., theodor processing system 160 described with respect toFIG. 1 ) to identify odors in environments of theclient devices client devices FIGS. 5A and5B may include various user interface components including, for example, microphone(s) to generate audio data based on spoken utterances and/or other audible input, speaker(s) to audibly render synthesized speech and/or other audible output, and a display to receive touch input and/or to visually render transcriptions and/or other visual output. Although theclient devices FIGS. 5A and5B are a standalone interactive speaker lacking a display and a standalone interactive speaker having adisplay 590B, respectively, it should be understood that is for the sake of example and is not meant to be limiting. - Referring specifically to
FIG. 5A , assume theclient device 510A is located in a primary dwelling of auser 101 of theclient device 510A, and assume the automated assistant has established a plurality of baseline odors for an environment of theclient device 510A. For example, the automated assistant can cause one or more odor sensors of theclient device 510A to generate a plurality of odor data instances at corresponding time instances across a time interval. For instance, assume the automated assistant obtains and processes odor data instances once a day across a week. In this instance, further assume the automated assistant identifies odors corresponding to a pumpkin scented candle and lavender for a threshold quantity of days. Accordingly, the automated assistant may consider the odors corresponding to the pumpkin scented candle and the lavender as two baseline odors for the primary dwelling of theuser 101. - For the sake of the example of
FIG. 5A , further assume that the automated assistant causes the one or more odor sensors of theclient device 510A to periodically generate odor data instances. Further assume that a given odor data instance is determined to capture an odor corresponding to microbial volatile organic compounds and that a source of microbial volatile organic compounds is black mold. In this example, and in response to identifying the given odor corresponding to microbial volatile organic compounds, the automated assistant can cause synthesized speech audio data 552A1 of "I'm detecting microbial volatile organic compounds" to be audibly rendered for presentation to theuser 101. However, many users may not know what microbial volatile organic compounds are or what causes microbial volatile organic compounds to be emitted. Accordingly, in this example, the automated assistant can additionally, or alternatively, cause synthesized speech audio data 552A2 of "this musty smell is caused by mold somewhere in your home" to make theuser 101 aware of a possible source of the microbial volatile organic compounds. Notably, in the example ofFIG. 5A , theclient device 510A does not include thedisplay 490B, but content may additionally, or alternatively, be visually rendered for presentation to theuser 101 via a display of an additional client device of theuser 101. In some implementations, this notification may be provided for presentation to the user in response to determining that the microbial volatile organic compounds may harm or pose a threat to theuser 101, whereas in additional or alternative implementations, this notification may be provided in response to detecting an odor that has not been established as a baseline odor in the environment of theclient device 510A. In some implementations, the automated assistant may proactively identify one or more suggested actions, such as providing information with respect to one or more nearby mold specialists based on the detected odor. - Although the example of
FIG. 5A is described with respect to establishing one or more of the baseline odors to generate notifications to be provided for presentation to theuser 101, it should be understood that is for the sake of example and is not meant to be limiting. For example, the automated assistant may additionally, or alternatively, utilize one or more of the baseline odors in responding to requests received from theuser 101. Referring specifically toFIG. 5B , assume theuser 101 of theclient device 410B provides a spokenutterance 552B of "Assistant, what's that smell?" The automated assistant can process audio data capturing the spokenutterance 552B using an ASR engine to generate ASR output, and can process the ASR output using an NLU engine to generate NLU output in the same or similar manner described above with respect toFIGS. 4A and4B . Based on the NLU output, the automated assistant can determine that the spokenutterance 552B corresponds to a request to identify an odor in an environment of theclient device 510B. - For the sake of the example of
FIG. 5B , further assume that theclient device 410B is located in a primary dwelling of theuser 101, and further assume that a pumpkin scented candle and lavender have been established as two baseline odors for the primary dwelling of theuser 101 as described above with respect toFIG. 5A . In response to receiving the spokenutterance 552B, one or more odor sensors of theclient device 510B can generate an odor data instance. The automated assistant can cause the odor data instance to be processed to generate output, and identify an odor present in the environment of theclient device 510B based on the output. In some implementations, the automated assistant can utilize a previously generated index to process the odor data instance to generate the output (e.g., as described with respect to theodor indexing engine 162 and theodor index 162A ofFIG. 1 , and with respect to themethod 200 ofFIG. 2 ). In additional or alternative implementations, the automated assistant can utilize an odor ML model to generate the output (e.g., as described with respect to the odorML training engine 163 and the ML model(s)database 115A ofFIG. 1 , and with respect to themethod 200 ofFIG. 2 ). - Notably, in these implementations, the automated assistant may leverage contextual information associated with the
client device 410B in generating the output and/or in identifying the odor. As noted above, in the example ofFIG. 5B , theclient device 510B in the primary dwelling of theuser 101. Accordingly, a search space of odors considered in generating the output and/or in identifying the odor may be restricted to those odors which may occur indoors and that exclude the baseline odors. For the sake of the example ofFIG. 5B , further assume that the automated assistant determines that the odor corresponds to saffron that is used in cooking. In this example, the automated assistant can cause synthesized speech audio data 554B1 of "the earthy smell that I do not usually detect is from saffron" to be audibly rendered for presentation to theuser 101. Notably, in the example ofFIG. 5B , theclient device 510B includes thedisplay 590B, and content may additionally, or alternatively, be visually rendered for presentation to theuser 101 via thedisplay 490B, such as an information card that includes a picture of saffron and/or one or more facts about saffron. - Although
FIGS. 5A and5B are described with respect to receiving particular spoken utterances and providing particular responses and/or notifications, it should also be understood that is for the sake of example and is not meant to be limiting. For example, the automated assistant may identify the odors based on one or more of the sources that are predicted to be emitting the odors. Further, althoughFIGS. 5A and5B are described with respect to particular contextual information associated with theclient devices FIGS. 5A and5B are described with respect to particular baseline odors associated with the environments of theclient devices - Although the examples of
FIGS. 4A ,4B ,5A , and5B are described with identifying a single odor in the environments of the various client devices, it should be understood that is for the sake of brevity and is not meant to be limiting. For example, in various implementations, multiple odors may be identified based on processing a single odor data instance. In this example, the automated assistant may generate output for each of the multiple odors identified based on processing the single odor data instance and the response may also identify each of the multiple odors. Additionally, or alternatively, the automated assistant may select a given odor, of the multiple odors, for which to generate output and to identify in the response. - Further, although the examples of
FIGS. 4A ,4B ,5A , and5B are described with respect to the environments of the various client devices corresponding to outdoors and indoors at a primary dwelling of theuser 101, it should be understood that is also for the sake of example and is not meant to be limiting. For example, techniques described herein may be implemented in a medical setting (e.g., in hospitals, at a primary dwelling of the user as part of a telemedicine session, etc.) to identify odors that are indicative of diseases, ailments, or other medical conditions (e.g., based on one or more odors emitted by a body of the user 101). In these examples, theuser 101 may be required to consent to processing of the odor data instances in view of privacy considerations. - Moreover, although the examples of
FIGS. 4A ,4B ,5A , and5B are not described with respect to providing any advertisements, it should be understood that is also for the sake of example and is not meant to be limiting. For example, again assume that a baseline odor indicative of a pumpkin scented candle is established in the primary dwelling of theuser 101. In this example, and in response to determining that a given odor data instance obtained periodically excludes the odor usually emitted by the pumpkin scented candle, a notification that enables theuser 101 to provide a single user input (e.g., "one-click") to order more pumpkin scented candles may be provided and/or an offer for discounted pumpkin scented candles may be provided for presentation to theuser 101. As another example, assume that theuser 101 is walking through a mall and that a given odor data instance obtained periodically includes an odor corresponding to a hot pretzel. In this example, a notification that includes an offer for the hot pretzel may be provided for presentation to theuser 101. - Turning now to
FIG. 6 , a block diagram of anexample computing device 610 that may optionally be utilized to perform one or more aspects of techniques described herein is depicted. In some implementations, one or more of a client device, cloud-based automated assistant component(s), and/or other component(s) may comprise one or more components of theexample computing device 610. -
Computing device 610 typically includes at least oneprocessor 614 which communicates with a number of peripheral devices viabus subsystem 612. These peripheral devices may include astorage subsystem 624, including, for example, amemory subsystem 625 and afile storage subsystem 626, userinterface output devices 620, userinterface input devices 622, and anetwork interface subsystem 616. The input and output devices allow user interaction withcomputing device 610.Network interface subsystem 616 provides an interface to outside networks and is coupled to corresponding interface devices in other computing devices. - User
interface input devices 622 may include a keyboard, pointing devices such as a mouse, trackball, touchpad, or graphics tablet, a scanner, a touch screen incorporated into the display, audio input devices such as voice recognition systems, microphones, and/or other types of input devices. In general, use of the term "input device" is intended to include all possible types of devices and ways to input information intocomputing device 610 or onto a communication network. - User
interface output devices 620 may include a display subsystem, a printer, a fax machine, or non-visual displays such as audio output devices. The display subsystem may include a cathode ray tube (CRT), a flat-panel device such as a liquid crystal display (LCD), a projection device, or some other mechanism for creating a visible image. The display subsystem may also provide non-visual display such as via audio output devices. In general, use of the term "output device" is intended to include all possible types of devices and ways to output information fromcomputing device 610 to the user or to another machine or computing device. -
Storage subsystem 624 stores programming and data constructs that provide the functionality of some or all of the modules described herein. For example, thestorage subsystem 624 may include the logic to perform selected aspects of the methods disclosed herein, as well as to implement various components depicted inFIG. 1 . - These software modules are generally executed by
processor 614 alone or in combination with other processors.Memory 625 used in thestorage subsystem 624 can include a number of memories including a main random access memory (RAM) 630 for storage of instructions and data during program execution and a read only memory (ROM) 632 in which fixed instructions are stored. Afile storage subsystem 626 can provide persistent storage for program and data files, and may include a hard disk drive, a floppy disk drive along with associated removable media, a CD-ROM drive, an optical drive, or removable media cartridges. The modules implementing the functionality of certain implementations may be stored byfile storage subsystem 626 in thestorage subsystem 624, or in other machines accessible by the processor(s) 614. -
Bus subsystem 612 provides a mechanism for letting the various components and subsystems ofcomputing device 610 communicate with each other as intended. Althoughbus subsystem 612 is shown schematically as a single bus, alternative implementations of thebus subsystem 612 may use multiple busses. -
Computing device 610 can be of varying types including a workstation, server, computing cluster, blade server, server farm, or any other data processing system or computing device. Due to the ever-changing nature of computers and networks, the description ofcomputing device 610 depicted inFIG. 6 is intended only as a specific example for purposes of illustrating some implementations. Many other configurations ofcomputing device 610 are possible having more or fewer components than the computing device depicted inFIG. 6 . - In situations in which the systems described herein collect or otherwise monitor personal information about users, or may make use of personal and/or monitored information), the users may be provided with an opportunity to control whether programs or features collect user information (e.g., information about a user's social network, social actions or activities, profession, a user's preferences, or a user's current geographic location), or to control whether and/or how to receive content from the content server that may be more relevant to the user. Also, certain data may be treated in one or more ways before it is stored or used, so that personal identifiable information is removed. For example, a user's identity may be treated so that no personal identifiable information can be determined for the user, or a user's geographic location may be generalized where geographic location information is obtained (such as to a city, ZIP code, or state level), so that a particular geographic location of a user cannot be determined. Thus, the user may have control over how information is collected about the user and/or used.
- In some implementations, a method implemented by one or more processors is provided, and includes receiving, from a user, a request to identify an odor in an environment of a client device of the user; in response to receiving the request to identify the odor in the environment of the client device, processing an odor data instance, generated by an odor sensor of the client device of the user, to generate output; identifying, based on the output, the odor in the environment of the client device of the user; generating a response to the request that identifies at least the odor in the environment of the client device of the user; and causing the response to the request to be provided for presentation to the user via the client device.
- These and other implementations of technology disclosed herein can optionally include one or more of the following features.
- In some implementations, processing the odor data instance generated by the odor sensor of the client device of the user to generate output may include accessing a previously generated index of a superset of corresponding odors, the previously generated index of the superset of corresponding odors being a mapping of corresponding previous odor data instances to the corresponding previous odors; and comparing the odor data instance generated by the odor sensor of the client device of the user to the corresponding previous odor data instances mapped to the corresponding previous odors to select a subset of one or more of the corresponding previous odors as the output. In some versions of those implementations, identifying the odor in the environment of the client device of the user based on the output includes selecting, based on comparing the odor data instance generated by the odor sensor of the client device of the user to the corresponding previous odor data instances, the odor in the environment of the client device of the user and from among the subset of one or more of the corresponding previous odors.
- In some further versions of those implementations, identifying the odor in the environment of the client device of the user may be further based on contextual information associated with the client device of the user. The contextual information associated with the client device may include one or more of: a geographical region in which the client device is located, whether the client device is located inside or outside, a time of day, or a day of year. In yet further versions of those implementations, the contextual information associated with the client device of the user is utilized in selecting the odor in the environment of the client device of the user and from among the subset of one or more of the corresponding previous odors.
- In additional or alternative further versions of those implementations, identifying the odor in the environment of the client device of the user may be further based on one or more terms of the request to identify the odor in the environment of the client device of the user, wherein one or more terms of the request include a characteristic of the odor. In yet further versions of those implementations, one or more of the terms of the request to identify the odor in the environment of the client device of the user may be utilized in selecting the odor in the environment of the client device of the user and from among the subset of one or more of the corresponding previous odors.
- In some implementations, processing the odor data instance generated by the odor sensor of the client device of the user to generate output may include processing, using an odor machine learning (ML) model, the odor data instance generated by the odor sensor of the client device of the user to generate an odor embedding as the output, the odor embedding being a lower-level representation of the odor data instance that is mapped to an embedding space.
- In some versions of those implementations, identifying the odor in the environment of the client device of the user based on the output may include selecting, based on comparing the odor embedding to a plurality of previously generated odor embeddings, in the embedding space, the odor in the environment of the client device of the user.
- In additional or alternative versions of those implementations, the odor ML model may be trained based on a plurality of training instances. Training the odor ML model based on a given training instance, of the plurality of training instance, may include processing, using the odor ML model, training instance input of the given training instance to generate a given odor embedding for a given odor, the training instance input including one or more of: a given odor data instance for the given odor, contextual information associated with the given odor, or one or more terms associated with the given odor; and assigning the given odor embedding to a given portion of the embedding space; and labelling the given portion of the embedding space with training instance output of the given training instance, the training instance output including one or more of: a label for the given odor, a label for a characteristic of the given odor, or a source of the given odor.
- In additional or alternative versions of those implementations, processing the odor data instance generated by the odor sensor of the client device of the user to generate output may further include processing, using the odor ML model and along with the odor data instance generated by the odor sensor of the client device of the user, contextual information associated with the client device to generate the output. The contextual information associated with the client device may include one or more of: a geographical region in which the client device is located, whether the client device is located inside or outside, a time of day, or a day of year.
- In additional or alternative versions of those implementations, processing the odor data instance generated by the odor sensor of the client device of the user to generate output may further include processing, using the odor ML model and along with the odor data instance generated by the odor sensor of the client device of the user, one or more terms of the request to generate the output.
- In some implementations, the request to identify the odor in the environment of the client device may be received at a given time instance, and the odor data instance may be generated by the odor sensor of the client device of the user at the given time instance.
- In some implementations, the method may further include identifying, based on the output, a source of the odor in the environment of the client device of the user. The response to the request may further identify the source of the odor in the environment of the client device of the user.
- In some implementations, generating the response to the request that identifies at least the odor in the environment of the client device of the user may include generating synthesized speech audio data that captures synthesized speech identifying at least the odor in the environment of the client device. Causing the response to the request to be provided for presentation to the user via the client device may include causing the synthesized speech audio data to be rendered for audible presentation to the user via one or more speakers of the client device.
- In some implementations, the response to the request that identifies at least the odor in the environment of the client device of the user may include generating visual content identifying at least the odor in the environment of the client device. Causing the response to the request to be provided for presentation to the user via the client device may include causing the visual content to be rendered for visual presentation to the user via a display of the client device.
- In some implementations, the method may further include generating, based on the odor that is identified in the environment of the client device of the user, a query; and executing, based on the query, a search over one or more databases to obtain content that is responsive to the query. In some versions of those implementations, the response to the request that is provided for presentation to the user via the client device may include the content that is responsive to the query.
- In some implementations, a method implemented by one or more processors is provided, and includes, at a plurality of time instances: obtaining corresponding odor data instances generated by an odor sensor of a client device of a user; processing the corresponding odor data instances to generate corresponding outputs for the corresponding odor data instances; and identifying, based on corresponding outputs, one or more baseline odors in an environment of the client device; and at a subsequent time instance that is subsequent to each of the plurality of time instances: obtaining a given odor data instance generated by the odor sensor of the client device of the user or an additional odor sensor of an additional client device of the user that is co-located in the environment of the client device; processing the given odor data instance to generate given output for the given odor data instance; identifying, based on the given output, a given odor in the environment of the client device; and in response to determining that the given odor in the environment of the client does not correspond to one or more of the baseline odors: generating a notification that identifies the given odor and that indicates the given odor does not correspond to one or more of the baseline odors; and causing the notification that identifies the given odor and that indicates the given odor does not correspond to one or more of the baseline odors to be provided for presentation to the user via the client device.
- These and other implementations of technology disclosed herein can optionally include one or more of the following features.
- In some implementations, identifying a given baseline odor, of the one or more baseline odors, in the environment of the client device based on the corresponding outputs may include identifying the given baseline odor at a threshold quantity of time instances of the plurality of time instances.
- In some implementations, a method implemented by one or more processors is provided, and includes, at a plurality of time instances: obtaining corresponding odor data instances generated by an odor sensor of a client device of a user; processing the corresponding odor data instances to generate corresponding outputs for the corresponding odor data instances; and identifying, based on corresponding outputs, one or more baseline odors in an environment of the client device; and at a subsequent time instance that is subsequent to the plurality of time instances: receiving, from the user, a request to identify a given odor in the environment of the client device of the user; in response to receiving the request to identify the odor in the environment of the client device, processing a given odor data instance generated by the odor sensor of the client device of the user to generate given output; identifying, based on the given output, the given odor in the environment of the client device of the user that is in addition to the one or more baseline odors in the environment of the client device; generating a response to the request that identifies at least the given odor in the environment of the client device of the user; and causing the response to the request to be provided for presentation to the user via the client device.
- In addition, some implementations include one or more processors (e.g., central processing unit(s) (CPU(s)), graphics processing unit(s) (GPU(s)), and/or tensor processing unit(s) (TPU(s))) of one or more computing devices, where the one or more processors are operable to execute instructions stored in associated memory, and where the instructions are configured to cause performance of any of the aforementioned methods. Some implementations also include one or more non-transitory computer readable storage media storing computer instructions executable by one or more processors to perform any of the aforementioned methods. Some implementations also include a computer program product including instructions executable by one or more processors to perform any of the aforementioned methods.
Claims (15)
- A method implemented by one or more processors, the method comprising:receiving, from a user, a request to identify an odor in an environment of a client device of the user;in response to receiving the request to identify the odor in the environment of the client device, processing an odor data instance, generated by an odor sensor of the client device of the user, to generate output;identifying, based on the output, the odor in the environment of the client device of the user;generating a response to the request that identifies at least the odor in the environment of the client device of the user; andcausing the response to the request to be provided for presentation to the user via the client device.
- The method of claim 1, wherein processing the odor data instance generated by the odor sensor of the client device of the user to generate output comprises:accessing a previously generated index of a superset of corresponding odors, the previously generated index of the superset of corresponding odors being a mapping of corresponding previous odor data instances to the corresponding previous odors; andcomparing the odor data instance generated by the odor sensor of the client device of the user to the corresponding previous odor data instances mapped to the corresponding previous odors to select a subset of one or more of the corresponding previous odors as the output.
- The method of claim 2, wherein identifying the odor in the environment of the client device of the user based on the output comprises:selecting, based on comparing the odor data instance generated by the odor sensor of the client device of the user to the corresponding previous odor data instances, the odor in the environment of the client device of the user and from among the subset of one or more of the corresponding previous odors, and optionally wherein identifying the odor in the environment of the client device of the user is further based on contextual information associated with the client device of the user, wherein the contextual information associated with the client device comprises one or more of: a geographical region in which the client device is located, whether the client device is located inside or outside, a time of day, or a day of year, andoptionally wherein the contextual information associated with the client device of the user is utilized in selecting the odor in the environment of the client device of the user and from among the subset of one or more of the corresponding previous odors.
- The method of any one preceding claim, wherein identifying the odor in the environment of the client device of the user is further based on one or more terms of the request to identify the odor in the environment of the client device of the user, wherein one or more terms of the request include a characteristic of the odor, and optionally wherein one or more of the terms of the request to identify the odor in the environment of the client device of the user is utilized in selecting the odor in the environment of the client device of the user and from among the subset of one or more of the corresponding previous odors.
- The method of claim 1, wherein processing the odor data instance generated by the odor sensor of the client device of the user to generate output comprises:
processing, using an odor machine learning (ML) model, the odor data instance generated by the odor sensor of the client device of the user to generate an odor embedding as the output, the odor embedding being a lower-level representation of the odor data instance that is mapped to an embedding space, and optionally wherein identifying the odor in the environment of the client device of the user based on the output comprises:
selecting, based on comparing the odor embedding to a plurality of previously generated odor embeddings, in the embedding space, the odor in the environment of the client device of the user. - The method of claim 5, wherein the odor ML model is trained based on a plurality of training instances, and wherein training the odor ML model based on a given training instance, of the plurality of training instance, comprises:processing, using the odor ML model, training instance input of the given training instance to generate a given odor embedding for a given odor, the training instance input including one or more of: a given odor data instance for the given odor, contextual information associated with the given odor, or one or more terms associated with the given odor; andassigning the given odor embedding to a given portion of the embedding space; andlabelling the given portion of the embedding space with training instance output of the given training instance, the training instance output including one or more of: a label for the given odor, a label for a characteristic of the given odor, or a source of the given odor.
- The method of any one of claims 5 to 6, wherein processing the odor data instance generated by the odor sensor of the client device of the user to generate output further comprises:
processing, using the odor ML model and along with the odor data instance generated by the odor sensor of the client device of the user, contextual information associated with the client device to generate the output, wherein the contextual information associated with the client device comprises one or more of: a geographical region in which the client device is located, whether the client device is located inside or outside, a time of day, or a day of year. - The method of any one of claims 5 to 7, wherein processing the odor data instance generated by the odor sensor of the client device of the user to generate output further comprises:
processing, using the odor ML model and along with the odor data instance generated by the odor sensor of the client device of the user, one or more terms of the request to generate the output. - The method of any preceding claim, wherein the request to identify the odor in the environment of the client device is received at a given time instance, and wherein the odor data instance is generated by the odor sensor of the client device of the user at the given time instance.
- The method of any preceding claim, further comprising:
identifying, based on the output, a source of the odor in the environment of the client device of the user, wherein the response to the request further identifies the source of the odor in the environment of the client device of the user. - The method of any preceding claim, wherein generating the response to the request that identifies at least the odor in the environment of the client device of the user comprises generating synthesized speech audio data that captures synthesized speech identifying at least the odor in the environment of the client device, and wherein causing the response to the request to be provided for presentation to the user via the client device comprises causing the synthesized speech audio data to be rendered for audible presentation to the user via one or more speakers of the client device.
- The method of any preceding claim, wherein generating the response to the request that identifies at least the odor in the environment of the client device of the user comprises generating visual content identifying at least the odor in the environment of the client device, and wherein causing the response to the request to be provided for presentation to the user via the client device comprises causing the visual content to be rendered for visual presentation to the user via a display of the client device.
- The method of any preceding claim, further comprising:
generating, based on the odor that is identified in the environment of the client device of the user, a query; and
executing, based on the query, a search over one or more databases to obtain content that is responsive to the query, and optionally wherein the response to the request that is provided for presentation to the user via the client device includes the content that is responsive to the query. - A system, comprising:at least one processor; andmemory storing instructions that, when executed, cause the at least one processor to perform operations corresponding to any one of claims 1 to 13.
- Computer program instructions that, when executed, cause at least one processor to perform operations corresponding to any one of claims 1 to 13.
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US17/548,945 US20230184652A1 (en) | 2021-12-13 | 2021-12-13 | Enabling an automated assistant to leverage odor sensor(s) of client device(s) |
PCT/US2021/063338 WO2023113776A1 (en) | 2021-12-13 | 2021-12-14 | Enabling an automated assistant to leverage odor sensor(s) of client device(s) |
Publications (1)
Publication Number | Publication Date |
---|---|
EP4194996A1 true EP4194996A1 (en) | 2023-06-14 |
Family
ID=83361267
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
EP22197823.2A Pending EP4194996A1 (en) | 2021-12-13 | 2022-09-26 | Enabling an automated assistant to leverage odor sensor(s) of client device(s) |
Country Status (1)
Country | Link |
---|---|
EP (1) | EP4194996A1 (en) |
Citations (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20110181421A1 (en) * | 2010-01-27 | 2011-07-28 | Nabata Toshihisa | Mobile electrical device |
US20160171339A1 (en) * | 2014-12-15 | 2016-06-16 | Samsung Electronics Co., Ltd. | User terminal device and method of recognizing object thereof |
-
2022
- 2022-09-26 EP EP22197823.2A patent/EP4194996A1/en active Pending
Patent Citations (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20110181421A1 (en) * | 2010-01-27 | 2011-07-28 | Nabata Toshihisa | Mobile electrical device |
US20160171339A1 (en) * | 2014-12-15 | 2016-06-16 | Samsung Electronics Co., Ltd. | User terminal device and method of recognizing object thereof |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US20210193146A1 (en) | Multi-modal interaction between users, automated assistants, and other computing services | |
US11347801B2 (en) | Multi-modal interaction between users, automated assistants, and other computing services | |
KR20220080005A (en) | Cross-device hadnoffs | |
US11200893B2 (en) | Multi-modal interaction between users, automated assistants, and other computing services | |
JP2020530581A (en) | Providing command bundle suggestions for automated assistants | |
US20230260517A1 (en) | Voice to text conversion based on third-party agent content | |
US20220050661A1 (en) | Analyzing graphical user interfaces to facilitate automatic interaction | |
US20230074406A1 (en) | Using large language model(s) in generating automated assistant response(s | |
US20220129513A1 (en) | Autonomously providing search results post-facto, including in assistant context | |
US20210232231A1 (en) | Selective detection of visual cues for automated assistants | |
JP6154489B2 (en) | Terminal device, program, and server device for providing information in response to user data input | |
EP4143823A1 (en) | Methods and systems for providing a secure automated assistant | |
EP4194996A1 (en) | Enabling an automated assistant to leverage odor sensor(s) of client device(s) | |
US20230184652A1 (en) | Enabling an automated assistant to leverage odor sensor(s) of client device(s) | |
US11948580B2 (en) | Collaborative ranking of interpretations of spoken utterances | |
US20240031339A1 (en) | Method(s) and system(s) for utilizing an independent server to facilitate secure exchange of data | |
US20240062757A1 (en) | Generating and/or causing rendering of video playback-based assistant suggestion(s) that link to other application(s) | |
US20220171813A1 (en) | Methods and systems for presenting privacy friendly query activity based on environmental signal(s) | |
US20230343336A1 (en) | Multi-modal interaction between users, automated assistants, and other computing services | |
WO2024019767A1 (en) | Method(s) and system(s) for utilizing an independent server to facilitate secure exchange of data | |
US20230290358A1 (en) | Biasing interpretations of spoken utterance(s) that are received in a vehicular environment | |
EP4354278A2 (en) | Collaborative ranking of interpretations of spoken utterances | |
GB2556194A (en) | Autonomously providing search results post-facto, including in conversational assistant context |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PUAI | Public reference made under article 153(3) epc to a published international application that has entered the european phase |
Free format text: ORIGINAL CODE: 0009012 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: THE APPLICATION HAS BEEN PUBLISHED |
|
AK | Designated contracting states |
Kind code of ref document: A1Designated state(s): AL AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HR HU IE IS IT LI LT LU LV MC MK MT NL NO PL PT RO RS SE SI SK SM TR |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: REQUEST FOR EXAMINATION WAS MADE |
|
17P | Request for examination filed |
Effective date: 20230719 |
|
RBV | Designated contracting states (corrected) |
Designated state(s): AL AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HR HU IE IS IT LI LT LU LV MC MK MT NL NO PL PT RO RS SE SI SK SM TR |
|
D17P | Request for examination filed (deleted) | ||
R17P | Request for examination filed (corrected) |
Effective date: 20231123 |
|
RBV | Designated contracting states (corrected) |
Designated state(s): AL AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HR HU IE IS IT LI LT LU LV MC MK MT NL NO PL PT RO RS SE SI SK SM TR |
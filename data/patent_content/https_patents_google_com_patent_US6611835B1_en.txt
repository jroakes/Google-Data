US6611835B1 - System and method for maintaining up-to-date link information in the metadata repository of a search engine - Google Patents
System and method for maintaining up-to-date link information in the metadata repository of a search engine Download PDFInfo
- Publication number
- US6611835B1 US6611835B1 US09/565,129 US56512900A US6611835B1 US 6611835 B1 US6611835 B1 US 6611835B1 US 56512900 A US56512900 A US 56512900A US 6611835 B1 US6611835 B1 US 6611835B1
- Authority
- US
- United States
- Prior art keywords
- uniform resource
- web page
- resource locator
- search engine
- updating
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Lifetime
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/951—Indexing; Web crawling techniques
Definitions
- the present invention relates to a system and method for maintaining up-to-date Web page link information in a metadata repository that is part of a Web search engine.
- the World Wide Web service (Web) of the Internet is an increasingly popular tool for communicating information.
- the volume of information available on the Web is so great that users seeking information require help, in the form of search engines.
- Conventional search engines examine available information, such as Web pages and files, and generate indexes relating search terms to links (URLs) which point to the information. All search engines face the challenge of keeping their indexes current. Indexes go out of currency because Web authors often move or remove files from previous locations, which have been indexed. Attempts to follow links to these pages or files result in error.
- search engines Due to such changes, which are constantly occurring, it is imperative for search engines to constantly update their indexes to avoid returning, as a result of a query by a user, URLs that reference datasources (documents) that are missing or have been moved.
- Conventional methods of updating search engine indexes tend to be time-consuming and costly to perform. A need arises for a faster and less expensive technique for updating search engine indexes.
- Link structure information may be maintained for several purposes, such as for generating rank information of search results. Rank information is useful to the user because it allows the search engine to present query results in order of those links that are more likely to be relevant to the query.
- link structure information is stored in a metadata repository. In this situation, the search engine must also update all of the metadata for pages which contain links to or were linked from the outdated URL. This additional required updating is even more time consuming and costly.
- the present invention is a system and method for updating search engine indexes and link structure information that is more efficient, less time-consuming and less costly than prior techniques.
- the present invention provides improved updates to metadata link information for Web pages which have been permanently moved or have been deleted.
- the present invention takes advantage of the RDF format of the metadata.
- the present invention provides an efficient way to keep the metadata repository up-to-date without having to download and recrawl all the pages. Only the response code and location are required from the server.
- the database link table serves as a solid reference to the parent-child structure of the engine's domain.
- the present invention takes advantage of this resource to maintain and update rich summaries of Web data.
- the present invention is also extensible to handle other URL status changes.
- the present invention is a system and method for updating search engine information.
- a uniform resource locator indicating a Web page for which the search engine information is to be updated is selected.
- a server on which the indicated Web page is located is contacted to obtain the Web page.
- a response code indicating a status of the Web page is received and the search engine information is updated based on the response code.
- the response code may indicate that the Web page cannot be found, and the updating step may comprise the step of deleting information relating to the Web page from the search engine information.
- the response code may indicate that the Web page has been moved, and the updating step may comprise the step of modifying information relating to the Web page that is included in the search engine information.
- a plurality of parent uniform resource locators related to the selected uniform resource locator are received. All instances of the selected uniform resource locator are deleted from the search engine information. Metadata summarizing Web pages is updated, the metadata referencing the selected uniform resource locator and metadata summarizing the Web page indicated by the selected uniform resource locator is deleted.
- step of updating metadata summarizing Web pages existing RDF summaries for each parent uniform resource locator in the search engine information may be modified to remove references to the selected uniform resource locator and annotation information from its list of out-links.
- step of updating metadata summarizing Web pages may be carried out by resummarizing metadata information for each parent uniform resource locator in the search engine information to create new RDF summaries with updated information.
- a uniform resource locator indicating a new location of the Web page indicated by the selected uniform resource locator is received.
- a plurality of parent uniform resource locators and child uniform resource locators related to the selected uniform resource locator are received. All instances of the selected uniform resource locator are replaced with the uniform resource locator indicating the new location of the Web page.
- Metadata summarizing Web pages is updated, the metadata referencing the selected uniform resource locator.
- the uniform resource locator indicating the new location of the Web page is crawled to update metadata summarizing the Web page and metadata summarizing the Web page indicated by the selected uniform resource locator is deleted.
- existing RDF summaries for each parent uniform resource locator in the search engine information may be modified by replacing the selected uniform resource locator with the uniform resource locator indicating the new location of the Web page with the new URL among the plurality of parent uniform resource locators and child uniform resource locators related to the selected uniform resource locator.
- metadata summarizing Web pages may be updated by summarizing each parent uniform resource locator and child uniform resource locator among the received parent uniform resource locators and child uniform resource locators to create new RDF summaries.
- FIG. 1 is an exemplary block diagram of a search engine system in which the present invention may be implemented.
- FIG. 2 is a more detailed block diagram of an update engine shown in FIG. 1 .
- FIG. 3 is a more detailed block diagram of a database shown in FIG. 1 .
- FIG. 4 is a more detailed block diagram of a metadata repository shown in FIG. 1 .
- FIG. 5 is a more detailed block diagram of a search engine shown in FIG. 1 .
- FIG. 6 is a flow diagram of a process, according to the present invention, which may be implemented in the system shown in FIG. 1 .
- FIG. 7 is a data flow diagram of the operation of the process shown in FIG. 6 in the system shown in FIG. 1 .
- FIG. 8 is a flow diagram of a subprocess of a step in the process shown in FIG. 6 .
- FIG. 9 is a flow diagram of a subprocess of another step in the process shown in FIG. 6 .
- System 100 includes database 102 , update engine 104 , metadata repository 106 , and user service block 108 .
- Database 102 stores information relating to Web pages obtained by crawling the Web.
- Update engine 104 performs the processing that implements the present invention in system 100 .
- Repository 106 stores metadata that summarizes the information relating to Web pages that is stored in database 102 .
- User service block 108 provides Web-searching services to users. Update engine 104 and user service block 108 are communicatively connected to the Internet 110 .
- database 102 update engine 104 , repository 106 , and user service block 108 are all shown separately, this is only an example.
- update engine 102 may be integrated with database 102 , repository 106 , and/or user service block 108 .
- each component may be distributed among several hardware systems. The choice of arrangement of combination, integration, and distribution of components is an implementation decision, based on factors such as, cost, performance, etc. Any and all such arrangements are contemplated by the present invention.
- Update engine 104 is shown in more detail in FIG. 2 .
- Update engine 104 typically is, or is included in, a programmed general-purpose computer system, such as a personal computer, workstation, server system, and minicomputer or mainframe computer.
- Update engine 104 includes processor (CPU) 202 , input/output circuitry 204 , network adapter 206 , and memory 208 .
- CPU 202 executes program instructions in order to carry out the functions of the present invention.
- CPU 202 is a microprocessor, such as an INTEL PENTIUM® processor, but may also be a minicomputer or mainframe computer processor.
- Input/output circuitry 204 provides the capability to input data to, or output data from, computer system 200 .
- input/output circuitry may include input devices, such as keyboards, mice, touchpads, trackballs, scanners, etc., output devices, such as video adapters, monitors, printers, etc., and input/output devices, such as, modems, etc.
- Network adapter 206 interfaces update engine 104 with the network 209 , which provides communication with the Internet and other systems, such as repository 106 and search engine 108 .
- Network 209 may be any standard local area network (LAN) or wide area network (WAN), such as Ethernet, Token Ring, the Internet, or a private or proprietary LAN/WAN.
- Memory 208 stores program instructions that are executed by, and data that are used and processed by, CPU 202 to perform the functions of the present invention.
- Memory 208 may include electronic memory devices, such as random-access memory (RAM), read-only memory (ROM), programmable read-only memory (PROM), electrically erasable programmable read-only memory (EEPROM), flash memory, etc., and electro-mechanical memory, such as magnetic disk drives, tape drives, optical disk drives, etc., which may use an integrated drive electronics (IDE) interface, or a variation or enhancement thereof, such as enhanced IDE (EIDE) or ultra direct memory access (UDMA), or a small computer system interface (SCSI) based interface, or a variation or enhancement thereof, such as fast-SCSI, wide-SCSI, fast and wide-SCSI, etc, or a fiber channel-arbitrated loop (FC-AL) interface.
- Memory 208 includes a plurality of blocks of program instructions, such as update routines 210 , and operating system 212 .
- Update routines 210 perform
- Database 102 shown in FIG. 1, is shown in more detail in FIG. 3 .
- database 102 is typically communicatively connected to update engine 104 via network 209 .
- database 102 includes processor 302 , which is typically a programmed general purpose computer system similar to that shown in FIG. 2 . If database 102 is combined or integrated with one or more other system components shown in FIG. 1, then database 102 utilizes processing functionality integrated with that component or components.
- Database 102 also includes data table 304 storing information relating to pages found on the Web.
- the information is stored as a data base table, which stores link information.
- the stored information is obtained by a well-known process termed “Web crawling”.
- a Web crawling process preferably implemented in update engine 104 , traverses a substantial number of Web pages.
- the Web crawling process stores all the out-links 306 , termed “child-URLs”, for each page crawled, in data table 304 .
- Annotation information 308 for each child-URL which includes various text and metadata elements found in close proximity to the out-link, are also stored in data table 304 . In this way, the table ultimately acquires information about both the out-links (child-URLs) and the in-links, termed parent-URLs, associated with a page.
- the Web-crawling process generates metadata to summarize the Web data stored in data table 304 .
- the metadata 402 is stored in repository 106 of FIG. 1, which is shown in more detail in FIG. 4 .
- repository 106 is typically communicatively connected to update engine 104 via network 209 .
- repository 106 includes processor 404 , which is typically a programmed general purpose computer system similar to that shown in FIG. 2 . If repository 106 is combined or integrated with one or more other system components shown in FIG. 1, then repository 106 utilizes processing functionality integrated with that component or components.
- the Web-crawling system accesses the data table 304 to enhance the summary.
- the crawlers generate XML-encoded RDF summaries 406 , which include, among other metadata, a list 410 of annotations made by parent-URLs and a list 412 of annotations made about child-URLs. These summaries form the metadata repository which feeds the index server for the search engine.
- the Web crawling process involves the automatic and recursive retrieval of web pages.
- the crawling program or system (crawler) first fetches a single Web page and then proceeds to fetch all of the web pages referenced by the hyperlinks in the first web page.
- the crawler recursively repeats this process to a predefined depth (number of levels) or indefinitely.
- the crawler generates and stores metadata information for each of the Web pages that it fetches.
- the metadata information is used by a search engine to index the Web page.
- Metadata is “data about data.”
- a library catalog is metadata, since it describes publications. More particularly, in the context of the present invention, metadata refers to data describing Web resources.
- metadata refers to data describing Web resources.
- the distinction between “data” and “metadata” is not an absolute one; it is a distinction created primarily by a particular application, and many times the same resource will be interpreted in both ways simultaneously. Examples of metadata that will be include “Title”, “Author” (or “Creator”), “Publisher”, and “Format”.
- the metadata about a particular Web page includes link-structure information, which describes the hyperlinks to and from the given page.
- the crawler keeps track of this information by storing parent-child relationships in a relational database table during the crawling process. More particularly, the crawler fetches a Web page whose location is indicated by a particular URL.
- the Web page includes hyperlinks to other Web pages whose locations are also indicated by URLs.
- the crawler records each of the hyperlinked URLs as a “child-URL” of the URL of the first page, the “parent-URL”.
- the metadata about a particular Web page also includes the annotations that other Web pages make about the given Web page.
- the crawler stores this information in the relational database along with the parent-child relationships.
- the crawler extracts the text and other data found in the vicinity of each hyperlink contained within the parent page and stores this data as an annotation of the parent-child relationship.
- the data acts as metadata pertaining to the child page as provided by the parent page.
- the crawler In the crawling process, the crawler generates a summary page for each page that it fetches using such metadata. In order to generate the summary, the crawler fetches a page, parses it and extracts from it relevant information for the summary, such as annotation and link-structure information, modification date, abstract of presentation text, etc. In addition, the crawler fetches from the database previously gathered metadata information for the page, such as the annotations that parent-pages provide for the fetched page. The crawler consolidates this information (metadata) as a structured summary using Resource Description Framework.
- RDF Resource Description Framework
- Extensible Markup Language is a meta-language that provides a framework or set of rules to specify domain specific languages. Each language defines a text format for representing structured data within the domain.
- RDF is one example of a domain-specific XML language.
- User service block 108 is shown in more detail in FIG. 5 .
- User service block 108 typically is, or is included in, a programmed general-purpose computer system, such as a personal computer, workstation, server system, and minicomputer or mainframe computer.
- User service block 108 includes processor (CPU) 502 , input/output circuitry 504 , network adapter 506 , and memory 508 .
- CPU 502 executes program instructions in order to carry out the functions of the present invention.
- CPU 502 is a microprocessor, such as an INTEL PENTIUM® processor, but may also be a minicomputer or mainframe computer processor.
- Input/output circuitry 504 provides the capability to input data to, or output data from, computer system 500 .
- input/output circuitry may include input devices, such as keyboards, mice, touchpads, trackballs, scanners, etc., output devices, such as video adapters, monitors, printers, etc., and input/output devices, such as, modems, etc.
- Network adapter 506 interfaces User service block 108 with the network 509 , which provides communication with the Internet and other systems, such as repository 106 and search engine 108 .
- Network 509 may be any standard local area network (LAN) or wide area network (WAN), such as Ethernet, Token Ring, the Internet, or a private or proprietary LAN/WAN.
- Memory 508 stores program instructions that are executed by, and data that are used and processed by, CPU 502 to perform the functions of the present invention.
- Memory 508 may include electronic memory devices, such as random-access memory (RAM), read-only memory (ROM), programmable read-only memory (PROM), electrically erasable programmable read-only memory (EEPROM), flash memory, etc., and electro-mechanical memory, such as magnetic disk drives, tape drives, optical disk drives, etc., which may use an integrated drive electronics (IDE) interface, or a variation or enhancement thereof, such as enhanced IDE (EIDE) or ultra direct memory access (UDMA), or a small computer system interface (SCSI) based interface, or a variation or enhancement thereof, such as fast-SCSI, wide-SCSI, fast and wide-SCSI, etc, or a fiber channel-arbitrated loop (FC-AL) interface.
- Memory 508 includes a plurality of blocks of program instructions, such as update routines 510 , and operating system 512 .
- User service routines 510
- FIG. 6 is best viewed in conjunction with FIG. 7, which is a data flow diagram of the operation of process 600 in system 100 of FIG. 1 .
- Process 600 begins with step 602 , in which, for each distinct parent-URL 702 in data table 304 in database 102 , update engine 104 makes a connection over the Internet 102 to perform an access 704 to the server on which the instant parent-URL 702 is indicated as residing and receives a response code 706 . There are a plurality of response codes that may be received.
- the particular response codes used by process 600 are 1) a response code indicating that the requested page cannot be found by the server on which the page is indicated as residing (Not Found), 2) a response code indicating that the requested page has been permanently moved to a location indicated by a different URL than that in the table (Moved Permanently), and 3) a response code indicating that the requested page has been found (OK).
- an HTTP response code value of “404” indicates “Not Found”
- a response code value of “301” indicates a “Moved Permanently” response
- a response code value of “200” indicates “OK”.
- step 604 the update engine determines whether the received response code is “Not Found”. If so, then the process continues with step 606 , in which a database update 708 and a repository update 710 occur.
- the repository update the summary of the URL is deleted from repository 106 and all the pages which reference this URL are updated to account for the broken link.
- the database update all occurrences of the URL are deleted from database 102 .
- each outdated link may either be annotated as “missing” or completely removed with its associated annotations. Alternatively, the summaries may be refreshed by updating the database first, then recrawling the affected URLs.
- step 608 in which the next URL is retrieved and the process begins again at step 602 .
- step 604 If, in step 604 , it was determined that the received response code 706 was not “Not Found”, then process 600 continues with step 610 , in which it is determined whether the received response code 706 is “Moved Permanently”. If the received response code 706 is “Moved Permanently”, then the response message will include a field containing the new URL indicating the new location of the page.
- step 612 information relating to the old URL is modified to reflect the new URL by performing a database update 708 and a repository update 710 . In the repository update, the summary for the old URL is deleted and the new URL is then crawled. In this case, it does not suffice to simply modify the old summary because other metadata, such as data source information, will also have changed.
- the repository update 708 also includes updating the out-link metadata of all pages which reference this URL for the new location. Finally, the in-link metadata of all pages which are referenced by this URL are similarly updated. Alternatively, instead of updating each existing summary, all affected URLs may be recrawled with the updated database table to produce fresh summaries. The process then continues with step 608 , in which the next URL is retrieved and the process begins again at step 602 .
- step 610 If, in step 610 , the received response code is not “Moved Permanently”, the process continues with step 614 , in which it is verified that the response code is “OK”. If so, no further action need be taken with respect to the current URL. The process then continues with step 608 , in which the next URL is retrieved and the process begins again at step 602 .
- step 606 of process 600 is shown in more detail in FIG. 8 .
- the subprocess begins with step 606 - 1 , in which update engine 104 gets a list of all the parent-URLs for the URL being processed from the database table 304 .
- step 606 - 2 database table 304 is updated by deleting all instances of the URL being processed, appearing as either a parent-URL or a child-URL, from the database table 304 .
- step 606 - 3 the metadata summaries 406 in repository 106 are updated.
- the metadata summaries are updated by modifying existing RDF summaries for each parent-URL in database table 304 to remove references to the URL being processed and annotation information from its list of out-links.
- each parent-URL in database table 304 is re-summarized to create new RDF summaries with the updated table information.
- the metadata summary for the URL being processed is deleted from repository 106 .
- step 612 of process 600 is shown in more detail in FIG. 9 .
- the subprocess begins with step 612 - 1 , in which update engine 104 obtains the URL (new URL) indicating the new location of the page indicated by the URL (old URL) being processed.
- step 612 - 2 a list of all parent-URLs and child-URLs for the old URL are retrieved from the database table 304 .
- step 612 - 3 the database is updated by replacing all instances of the old URL, whether appearing as either parent-URL or child-URL, in the database table 304 with the new URL.
- step 612 - 4 the metadata summaries 406 in repository 106 are updated.
- the metadata summaries are updated by modifying existing RDF-summaries for each parent-URL and child-URL in database table 304 by replacing instances of the old URL with the new URL in the list of child and parent URLs obtained in step 612 - 2 .
- each parent-URL and child-URL in the list of child and parent URLs obtained in step 612 - 2 may be summarized anew to create new RDF-summaries with the updated table information.
- the new URL is crawled to update its metadata summary in repository 106 and the metadata summary for the old URL is deleted.
Abstract
Description
Claims (18)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US09/565,129 US6611835B1 (en) | 2000-05-04 | 2000-05-04 | System and method for maintaining up-to-date link information in the metadata repository of a search engine |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US09/565,129 US6611835B1 (en) | 2000-05-04 | 2000-05-04 | System and method for maintaining up-to-date link information in the metadata repository of a search engine |
Publications (1)
Publication Number | Publication Date |
---|---|
US6611835B1 true US6611835B1 (en) | 2003-08-26 |
Family
ID=27757894
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US09/565,129 Expired - Lifetime US6611835B1 (en) | 2000-05-04 | 2000-05-04 | System and method for maintaining up-to-date link information in the metadata repository of a search engine |
Country Status (1)
Country | Link |
---|---|
US (1) | US6611835B1 (en) |
Cited By (37)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20010034743A1 (en) * | 2000-01-14 | 2001-10-25 | Edwin Thomas | Method and apparatus for creating relocatable internet web sites |
US20010047374A1 (en) * | 2000-02-28 | 2001-11-29 | Xerox Corporation | Method ans system for information retrieval from query evaluations of very large full-text databases |
US20020147985A1 (en) * | 2001-04-05 | 2002-10-10 | Koji Miyajima | Video distribution system and video distribution method |
US20030131005A1 (en) * | 2002-01-10 | 2003-07-10 | International Business Machines Corporation | Method and apparatus for automatic pruning of search engine indices |
US6792475B1 (en) * | 2000-06-23 | 2004-09-14 | Microsoft Corporation | System and method for facilitating the design of a website |
US20040199547A1 (en) * | 2003-04-07 | 2004-10-07 | Marco Winter | Database model for hierarchical data formats |
US20040205569A1 (en) * | 2002-02-06 | 2004-10-14 | Mccarty Jon S. | Method and system to manage outdated web page links in a computing system |
US20050065903A1 (en) * | 2003-09-19 | 2005-03-24 | International Business Machines Corporation | Methods and apparatus for information hyperchain management for on-demand business collaboration |
US20060123107A1 (en) * | 2004-12-02 | 2006-06-08 | Hung-Chi Chen | Web link management systems and methods |
US20060218245A1 (en) * | 2001-06-21 | 2006-09-28 | Horn Frederic A | Method, system, and computer program product for distributing a stored URL and web document set |
US20060277183A1 (en) * | 2005-06-06 | 2006-12-07 | Tony Nichols | System and method for neutralizing locked pestware files |
US7155489B1 (en) * | 2000-06-28 | 2006-12-26 | Microsoft Corporation | Acquiring web page information without commitment to downloading the web page |
US20070143694A1 (en) * | 2005-12-12 | 2007-06-21 | Brian Rakowski | Decentralised web annotation |
US20070143263A1 (en) * | 2005-12-21 | 2007-06-21 | International Business Machines Corporation | System and a method for focused re-crawling of Web sites |
US20070162459A1 (en) * | 2006-01-11 | 2007-07-12 | Nimesh Desai | System and method for creating searchable user-created blog content |
US20070185930A1 (en) * | 2006-02-06 | 2007-08-09 | International Business Machines Corporation | System, method and program product for adding, updating and removing RDF statements stored on a server |
US20070203898A1 (en) * | 2006-02-24 | 2007-08-30 | Jonathan Lurie Carmona | Search methods and systems |
US20080010268A1 (en) * | 2006-07-06 | 2008-01-10 | Oracle International Corporation | Document ranking with sub-query series |
US20080155409A1 (en) * | 2006-06-19 | 2008-06-26 | Andy Santana | Internet search engine |
US7512635B1 (en) * | 2000-12-18 | 2009-03-31 | Bmc Software, Inc. | System and method for updating information on a computer system using a limited amount of space |
US20090116496A1 (en) * | 2003-01-28 | 2009-05-07 | Savage Donnie V | Synchronizing portions of a database with different databases on different nodes of a network |
US20090119280A1 (en) * | 2007-11-02 | 2009-05-07 | Christopher Waters | Hosted searching of private local area network information with support for add-on applications |
WO2009058667A1 (en) * | 2007-11-02 | 2009-05-07 | Paglo Labs Inc. | Hosted searching of private local area network information |
WO2009107148A1 (en) * | 2008-02-26 | 2009-09-03 | Ibibo Web Pvt. Ltd. | Metadata extraction from naturally hierarchical information sources |
US8046353B2 (en) | 2007-11-02 | 2011-10-25 | Citrix Online Llc | Method and apparatus for searching a hierarchical database and an unstructured database with a single search query |
US20120084133A1 (en) * | 2010-09-30 | 2012-04-05 | Scott Ross | Methods and apparatus to distinguish between parent and child webpage accesses and/or browser tabs in focus |
US8156141B1 (en) * | 2006-12-13 | 2012-04-10 | Emc Corporation | Incorporated web page content |
US20130050737A1 (en) * | 2011-08-31 | 2013-02-28 | Brother Kogyo Kabushiki Kaisha | Image processing device, image processing system, and printing device |
US20130117645A1 (en) * | 2011-11-03 | 2013-05-09 | Taptu Ltd | Method and Apparatus for Generating a Feed of Updating Content |
US8555159B1 (en) | 2006-12-13 | 2013-10-08 | Emc Corporation | Dynamic display of web page content for editing and review |
US8600993B1 (en) * | 2009-08-26 | 2013-12-03 | Google Inc. | Determining resource attributes from site address attributes |
US8930946B1 (en) * | 2008-02-14 | 2015-01-06 | Google Inc. | Leasing prioritized tasks |
US9037983B1 (en) | 2006-12-13 | 2015-05-19 | Emc Corporation | User privilege based web page content editing |
US9826359B2 (en) | 2015-05-01 | 2017-11-21 | The Nielsen Company (Us), Llc | Methods and apparatus to associate geographic locations with user devices |
US11061978B1 (en) * | 2015-10-28 | 2021-07-13 | Reputation.Com, Inc. | Automatic finding of online profiles of an entity location |
US11188941B2 (en) | 2016-06-21 | 2021-11-30 | The Nielsen Company (Us), Llc | Methods and apparatus to collect and process browsing history |
US20220217117A1 (en) * | 2017-10-17 | 2022-07-07 | Servicenow, Inc. | Deployment of a custom address to a remotely managed computational instance |
Citations (13)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5185885A (en) | 1988-04-25 | 1993-02-09 | Hewlett-Packard Company | Object database deletion method for child objects when a child may be linked to multiple parent objects |
US5606669A (en) | 1994-05-25 | 1997-02-25 | International Business Machines Corporation | System for managing topology of a network in spanning tree data structure by maintaining link table and parent table in each network node |
US5761683A (en) | 1996-02-13 | 1998-06-02 | Microtouch Systems, Inc. | Techniques for changing the behavior of a link in a hypertext document |
US5787442A (en) | 1996-07-11 | 1998-07-28 | Microsoft Corporation | Creating interobject reference links in the directory service of a store and forward replication computer network |
US5794006A (en) | 1995-08-18 | 1998-08-11 | Microsoft Corporation | System and method for editing content in an on-line network |
US5802299A (en) | 1996-02-13 | 1998-09-01 | Microtouch Systems, Inc. | Interactive system for authoring hypertext document collections |
US5806065A (en) | 1996-05-06 | 1998-09-08 | Microsoft Corporation | Data system with distributed tree indexes and method for maintaining the indexes |
US5878434A (en) | 1996-07-18 | 1999-03-02 | Novell, Inc | Transaction clash management in a disconnectable computer and network |
US5898836A (en) * | 1997-01-14 | 1999-04-27 | Netmind Services, Inc. | Change-detection tool indicating degree and location of change of internet documents by comparison of cyclic-redundancy-check(CRC) signatures |
US5978828A (en) * | 1997-06-13 | 1999-11-02 | Intel Corporation | URL bookmark update notification of page content or location changes |
US5983268A (en) * | 1997-01-14 | 1999-11-09 | Netmind Technologies, Inc. | Spreadsheet user-interface for an internet-document change-detection tool |
US6253198B1 (en) * | 1999-05-11 | 2001-06-26 | Search Mechanics, Inc. | Process for maintaining ongoing registration for pages on a given search engine |
US6278992B1 (en) * | 1997-03-19 | 2001-08-21 | John Andrew Curtis | Search engine using indexing method for storing and retrieving data |
-
2000
- 2000-05-04 US US09/565,129 patent/US6611835B1/en not_active Expired - Lifetime
Patent Citations (13)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5185885A (en) | 1988-04-25 | 1993-02-09 | Hewlett-Packard Company | Object database deletion method for child objects when a child may be linked to multiple parent objects |
US5606669A (en) | 1994-05-25 | 1997-02-25 | International Business Machines Corporation | System for managing topology of a network in spanning tree data structure by maintaining link table and parent table in each network node |
US5794006A (en) | 1995-08-18 | 1998-08-11 | Microsoft Corporation | System and method for editing content in an on-line network |
US5761683A (en) | 1996-02-13 | 1998-06-02 | Microtouch Systems, Inc. | Techniques for changing the behavior of a link in a hypertext document |
US5802299A (en) | 1996-02-13 | 1998-09-01 | Microtouch Systems, Inc. | Interactive system for authoring hypertext document collections |
US5806065A (en) | 1996-05-06 | 1998-09-08 | Microsoft Corporation | Data system with distributed tree indexes and method for maintaining the indexes |
US5787442A (en) | 1996-07-11 | 1998-07-28 | Microsoft Corporation | Creating interobject reference links in the directory service of a store and forward replication computer network |
US5878434A (en) | 1996-07-18 | 1999-03-02 | Novell, Inc | Transaction clash management in a disconnectable computer and network |
US5898836A (en) * | 1997-01-14 | 1999-04-27 | Netmind Services, Inc. | Change-detection tool indicating degree and location of change of internet documents by comparison of cyclic-redundancy-check(CRC) signatures |
US5983268A (en) * | 1997-01-14 | 1999-11-09 | Netmind Technologies, Inc. | Spreadsheet user-interface for an internet-document change-detection tool |
US6278992B1 (en) * | 1997-03-19 | 2001-08-21 | John Andrew Curtis | Search engine using indexing method for storing and retrieving data |
US5978828A (en) * | 1997-06-13 | 1999-11-02 | Intel Corporation | URL bookmark update notification of page content or location changes |
US6253198B1 (en) * | 1999-05-11 | 2001-06-26 | Search Mechanics, Inc. | Process for maintaining ongoing registration for pages on a given search engine |
Cited By (71)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20010034743A1 (en) * | 2000-01-14 | 2001-10-25 | Edwin Thomas | Method and apparatus for creating relocatable internet web sites |
US20010047374A1 (en) * | 2000-02-28 | 2001-11-29 | Xerox Corporation | Method ans system for information retrieval from query evaluations of very large full-text databases |
US7114124B2 (en) * | 2000-02-28 | 2006-09-26 | Xerox Corporation | Method and system for information retrieval from query evaluations of very large full-text databases |
US20050028081A1 (en) * | 2000-06-23 | 2005-02-03 | Microsoft Corporation | System and method for facilitating the design of a website |
US7287215B2 (en) | 2000-06-23 | 2007-10-23 | Microsoft Corporation | System and method for facilitating the design of a website |
US6792475B1 (en) * | 2000-06-23 | 2004-09-14 | Microsoft Corporation | System and method for facilitating the design of a website |
US7565409B2 (en) * | 2000-06-28 | 2009-07-21 | Microsoft Corporation | Acquiring web page information without commitment to downloading the web page |
US7155489B1 (en) * | 2000-06-28 | 2006-12-26 | Microsoft Corporation | Acquiring web page information without commitment to downloading the web page |
US20070106956A1 (en) * | 2000-06-28 | 2007-05-10 | Microsoft Corporation | Acquiring web page information without commitment to downloading the web page |
US7512635B1 (en) * | 2000-12-18 | 2009-03-31 | Bmc Software, Inc. | System and method for updating information on a computer system using a limited amount of space |
US20020147985A1 (en) * | 2001-04-05 | 2002-10-10 | Koji Miyajima | Video distribution system and video distribution method |
US20060218245A1 (en) * | 2001-06-21 | 2006-09-28 | Horn Frederic A | Method, system, and computer program product for distributing a stored URL and web document set |
US20030131005A1 (en) * | 2002-01-10 | 2003-07-10 | International Business Machines Corporation | Method and apparatus for automatic pruning of search engine indices |
US20040205569A1 (en) * | 2002-02-06 | 2004-10-14 | Mccarty Jon S. | Method and system to manage outdated web page links in a computing system |
US20090116496A1 (en) * | 2003-01-28 | 2009-05-07 | Savage Donnie V | Synchronizing portions of a database with different databases on different nodes of a network |
US8107501B2 (en) * | 2003-01-28 | 2012-01-31 | Cisco Technology, Inc. | Synchronizing portions of a database with different databases on different nodes of a network |
US20040199547A1 (en) * | 2003-04-07 | 2004-10-07 | Marco Winter | Database model for hierarchical data formats |
US7269582B2 (en) * | 2003-04-07 | 2007-09-11 | Thomson Licensing | Database model for hierarchical data formats |
US7797381B2 (en) * | 2003-09-19 | 2010-09-14 | International Business Machines Corporation | Methods and apparatus for information hyperchain management for on-demand business collaboration |
US20050065903A1 (en) * | 2003-09-19 | 2005-03-24 | International Business Machines Corporation | Methods and apparatus for information hyperchain management for on-demand business collaboration |
US20060123107A1 (en) * | 2004-12-02 | 2006-06-08 | Hung-Chi Chen | Web link management systems and methods |
US20060277183A1 (en) * | 2005-06-06 | 2006-12-07 | Tony Nichols | System and method for neutralizing locked pestware files |
US8095528B2 (en) | 2005-12-12 | 2012-01-10 | Google Inc. | Decentralised web annotation |
US7734610B2 (en) * | 2005-12-12 | 2010-06-08 | Google Inc. | Decentralised web annotation |
US8463767B2 (en) | 2005-12-12 | 2013-06-11 | Google Inc. | Decentralised web annotation |
US8918384B2 (en) | 2005-12-12 | 2014-12-23 | Google Inc. | Decentralized web annotation |
US20110082849A1 (en) * | 2005-12-12 | 2011-04-07 | Google Inc. | Decentralised web annotation |
JP2009519556A (en) * | 2005-12-12 | 2009-05-14 | グーグル インコーポレイテッド | Distributed web annotation |
US20070143694A1 (en) * | 2005-12-12 | 2007-06-21 | Brian Rakowski | Decentralised web annotation |
US7379932B2 (en) | 2005-12-21 | 2008-05-27 | International Business Machines Corporation | System and a method for focused re-crawling of Web sites |
US7882099B2 (en) | 2005-12-21 | 2011-02-01 | International Business Machines Corporation | System and method for focused re-crawling of web sites |
US20070143263A1 (en) * | 2005-12-21 | 2007-06-21 | International Business Machines Corporation | System and a method for focused re-crawling of Web sites |
US20070162459A1 (en) * | 2006-01-11 | 2007-07-12 | Nimesh Desai | System and method for creating searchable user-created blog content |
US7552151B2 (en) | 2006-02-06 | 2009-06-23 | International Business Machines Corporation | System, method and program product for adding, updating and removing RDF statements stored on a server |
US20070185930A1 (en) * | 2006-02-06 | 2007-08-09 | International Business Machines Corporation | System, method and program product for adding, updating and removing RDF statements stored on a server |
US20070203898A1 (en) * | 2006-02-24 | 2007-08-30 | Jonathan Lurie Carmona | Search methods and systems |
US20080155409A1 (en) * | 2006-06-19 | 2008-06-26 | Andy Santana | Internet search engine |
US7849077B2 (en) * | 2006-07-06 | 2010-12-07 | Oracle International Corp. | Document ranking with sub-query series |
US20080010268A1 (en) * | 2006-07-06 | 2008-01-10 | Oracle International Corporation | Document ranking with sub-query series |
US9037983B1 (en) | 2006-12-13 | 2015-05-19 | Emc Corporation | User privilege based web page content editing |
US8555159B1 (en) | 2006-12-13 | 2013-10-08 | Emc Corporation | Dynamic display of web page content for editing and review |
US8156141B1 (en) * | 2006-12-13 | 2012-04-10 | Emc Corporation | Incorporated web page content |
US8046353B2 (en) | 2007-11-02 | 2011-10-25 | Citrix Online Llc | Method and apparatus for searching a hierarchical database and an unstructured database with a single search query |
US20090119280A1 (en) * | 2007-11-02 | 2009-05-07 | Christopher Waters | Hosted searching of private local area network information with support for add-on applications |
US20110106787A1 (en) * | 2007-11-02 | 2011-05-05 | Christopher Waters | Hosted searching of private local area network information |
US7877369B2 (en) | 2007-11-02 | 2011-01-25 | Paglo Labs, Inc. | Hosted searching of private local area network information |
US20110106786A1 (en) * | 2007-11-02 | 2011-05-05 | Christopher Waters | Hosted searching of private local area network information with support for add-on application |
US8285705B2 (en) | 2007-11-02 | 2012-10-09 | Citrix Online Llc | Hosted searching of private local area network information |
US8285704B2 (en) | 2007-11-02 | 2012-10-09 | Citrix Online Llc | Hosted searching of private local area network information with support for add-on application |
US7877368B2 (en) | 2007-11-02 | 2011-01-25 | Paglo Labs, Inc. | Hosted searching of private local area network information with support for add-on applications |
WO2009058667A1 (en) * | 2007-11-02 | 2009-05-07 | Paglo Labs Inc. | Hosted searching of private local area network information |
US8930946B1 (en) * | 2008-02-14 | 2015-01-06 | Google Inc. | Leasing prioritized tasks |
WO2009107148A1 (en) * | 2008-02-26 | 2009-09-03 | Ibibo Web Pvt. Ltd. | Metadata extraction from naturally hierarchical information sources |
US8600993B1 (en) * | 2009-08-26 | 2013-12-03 | Google Inc. | Determining resource attributes from site address attributes |
US9332056B2 (en) | 2010-09-30 | 2016-05-03 | The Nielsen Company (Us), Llc | Methods and apparatus to distinguish between parent and child webpage accesses and/or browser tabs in focus |
US8499065B2 (en) * | 2010-09-30 | 2013-07-30 | The Nielsen Company (Us), Llc | Methods and apparatus to distinguish between parent and child webpage accesses and/or browser tabs in focus |
US20120084133A1 (en) * | 2010-09-30 | 2012-04-05 | Scott Ross | Methods and apparatus to distinguish between parent and child webpage accesses and/or browser tabs in focus |
US20130050737A1 (en) * | 2011-08-31 | 2013-02-28 | Brother Kogyo Kabushiki Kaisha | Image processing device, image processing system, and printing device |
US9007628B2 (en) * | 2011-08-31 | 2015-04-14 | Brother Kogyo Kabushiki Kaisha | Image processing device configured to reacquire data based on reference information |
US20130117645A1 (en) * | 2011-11-03 | 2013-05-09 | Taptu Ltd | Method and Apparatus for Generating a Feed of Updating Content |
US9826359B2 (en) | 2015-05-01 | 2017-11-21 | The Nielsen Company (Us), Llc | Methods and apparatus to associate geographic locations with user devices |
US10057718B2 (en) | 2015-05-01 | 2018-08-21 | The Nielsen Company (Us), Llc | Methods and apparatus to associate geographic locations with user devices |
US10412547B2 (en) | 2015-05-01 | 2019-09-10 | The Nielsen Company (Us), Llc | Methods and apparatus to associate geographic locations with user devices |
US10681497B2 (en) | 2015-05-01 | 2020-06-09 | The Nielsen Company (Us), Llc | Methods and apparatus to associate geographic locations with user devices |
US11197125B2 (en) | 2015-05-01 | 2021-12-07 | The Nielsen Company (Us), Llc | Methods and apparatus to associate geographic locations with user devices |
US11061978B1 (en) * | 2015-10-28 | 2021-07-13 | Reputation.Com, Inc. | Automatic finding of online profiles of an entity location |
US11900283B1 (en) | 2015-10-28 | 2024-02-13 | Reputation.Com, Inc. | Business listings |
US11899729B2 (en) | 2015-10-28 | 2024-02-13 | Reputation.Com, Inc. | Entity extraction name matching |
US11188941B2 (en) | 2016-06-21 | 2021-11-30 | The Nielsen Company (Us), Llc | Methods and apparatus to collect and process browsing history |
US20220217117A1 (en) * | 2017-10-17 | 2022-07-07 | Servicenow, Inc. | Deployment of a custom address to a remotely managed computational instance |
US11601392B2 (en) * | 2017-10-17 | 2023-03-07 | Servicenow, Inc. | Deployment of a custom address to a remotely managed computational instance |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US6611835B1 (en) | System and method for maintaining up-to-date link information in the metadata repository of a search engine | |
US11698937B2 (en) | Robust location, retrieval, and display of information for dynamic networks | |
Staab et al. | An annotation framework for the semantic web | |
JP5065584B2 (en) | Application programming interface for text mining and search | |
US6931397B1 (en) | System and method for automatic generation of dynamic search abstracts contain metadata by crawler | |
US6604099B1 (en) | Majority schema in semi-structured data | |
US6199081B1 (en) | Automatic tagging of documents and exclusion by content | |
US7769757B2 (en) | System for automatically generating queries | |
US7418440B2 (en) | Method and system for extraction and organizing selected data from sources on a network | |
US7117432B1 (en) | Meta-document management system with transit triggered enrichment | |
US6732090B2 (en) | Meta-document management system with user definable personalities | |
US8887036B2 (en) | Automatic linking of documents | |
US6094649A (en) | Keyword searches of structured databases | |
US6633867B1 (en) | System and method for providing a session query within the context of a dynamic search result set | |
US7941446B2 (en) | System with user directed enrichment | |
US20030033288A1 (en) | Document-centric system with auto-completion and auto-correction | |
EP1247213B1 (en) | Method and apparatus for creating an index for a structured document based on a stylesheet | |
JP2006185059A (en) | Contents management apparatus | |
KR100582388B1 (en) | Data storing method for information searching of intranet multiserver | |
Buddrus et al. | Making O2 become a WWW Server | |
Tseng | The analysis of web data for user personalisation via a constraint-based framework | |
Helic | Multimediale Informationssysteme 2 | |
WO2001050327A2 (en) | Method and apparatus for flexibly assigning tokenization procedures | |
KR20040007570A (en) | Tool for web authoring assistance |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: INTERNATIONAL BUSINESS MACHINES CORPORATION, NEW YFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:HUANG, ANITA WAI-LING;SUNDARESAN, NEELAKANTAN;REEL/FRAME:010773/0403;SIGNING DATES FROM 20000322 TO 20000324 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
REMI | Maintenance fee reminder mailed | ||
FPAY | Fee payment |
Year of fee payment: 8 |
|
SULP | Surcharge for late payment |
Year of fee payment: 7 |
|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:INTERNATIONAL BUSINESS MACHINES CORPORATION;REEL/FRAME:026664/0866Effective date: 20110503 |
|
FPAY | Fee payment |
Year of fee payment: 12 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044127/0735Effective date: 20170929 |
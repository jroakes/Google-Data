US8683218B2 - System and method for N-dimensional encryption - Google Patents
System and method for N-dimensional encryption Download PDFInfo
- Publication number
- US8683218B2 US8683218B2 US12/178,579 US17857908A US8683218B2 US 8683218 B2 US8683218 B2 US 8683218B2 US 17857908 A US17857908 A US 17857908A US 8683218 B2 US8683218 B2 US 8683218B2
- Authority
- US
- United States
- Prior art keywords
- dimensional entity
- data string
- bit
- bits
- dimensional
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active, expires
Links
- 238000000034 method Methods 0.000 title claims abstract description 63
- 230000009471 action Effects 0.000 claims abstract description 81
- 230000008569 process Effects 0.000 description 44
- 238000012545 processing Methods 0.000 description 33
- 230000007246 mechanism Effects 0.000 description 14
- 238000010586 diagram Methods 0.000 description 10
- 238000004891 communication Methods 0.000 description 6
- 238000013459 approach Methods 0.000 description 5
- 238000010606 normalization Methods 0.000 description 5
- 238000004590 computer program Methods 0.000 description 3
- 238000005516 engineering process Methods 0.000 description 2
- 230000003287 optical effect Effects 0.000 description 2
- 230000002085 persistent effect Effects 0.000 description 2
- 230000004913 activation Effects 0.000 description 1
- 230000002411 adverse Effects 0.000 description 1
- 238000004458 analytical method Methods 0.000 description 1
- 230000008901 benefit Effects 0.000 description 1
- AIMMVWOEOZMVMS-UHFFFAOYSA-N cyclopropanecarboxamide Chemical compound NC(=O)C1CC1 AIMMVWOEOZMVMS-UHFFFAOYSA-N 0.000 description 1
- 230000001419 dependent effect Effects 0.000 description 1
- 238000007667 floating Methods 0.000 description 1
- 230000006870 function Effects 0.000 description 1
- 238000004519 manufacturing process Methods 0.000 description 1
- 238000013507 mapping Methods 0.000 description 1
- 238000010899 nucleation Methods 0.000 description 1
- 230000003362 replicative effect Effects 0.000 description 1
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L9/00—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols
- H04L9/06—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols the encryption apparatus using shift registers or memories for block-wise or stream coding, e.g. DES systems or RC4; Hash functions; Pseudorandom sequence generators
- H04L9/065—Encryption by serially and continuously modifying data stream elements, e.g. stream cipher systems, RC4, SEAL or A5/3
- H04L9/0656—Pseudorandom key sequence combined element-for-element with data sequence, e.g. one-time-pad [OTP] or Vernam's cipher
- H04L9/0662—Pseudorandom key sequence combined element-for-element with data sequence, e.g. one-time-pad [OTP] or Vernam's cipher with particular pseudorandom sequence generator
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L2209/00—Additional information or applications relating to cryptographic mechanisms or cryptographic arrangements for secret or secure communication H04L9/00
- H04L2209/16—Obfuscation or hiding, e.g. involving white box
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L2209/00—Additional information or applications relating to cryptographic mechanisms or cryptographic arrangements for secret or secure communication H04L9/00
- H04L2209/34—Encoding or coding, e.g. Huffman coding or error correction
Definitions
- the present invention relates to data security and in particular to a method and system for encoding and storing data securely using an n-dimensional entity.
- a major problem in securing any computing system is determining a safe place to store and hide sensitive information. No matter how many ‘lockboxes’ are wrapped around this information, one is often still left with the problem of hiding the master key to the outermost lockbox.
- the present invention is directed to addressing the above-mentioned shortcomings, disadvantages and problems, and will be understood by reading and studying the following specification.
- the present invention provides a system and method directed to encoding and storing data securely using an n-dimensional entity.
- the n-dimensional entity is initially populated with bits from a pseudo-random number generator.
- Plaintext is bitwise translated to a direction and offset from a current cursor position to a bit meeting the “match” criteria with the plaintext bit within the n-dimensional entity.
- a match may be state driven such that an ON bit in the plaintext may be matched to an OFF bit in the n-dimensional entity, and so forth, depending on the state set by a preceding op-code action.
- Subsequent cursor directions within the n-dimensional entity are determined using a true random number generator.
- the resulting output is an encoded array that may be further obfuscated by combining the output with corresponding elements in an obfuscation table.
- a method is directed to encrypting a data string.
- An n-dimensional entity is generated that comprises random bits. For each bit in the data string, a number of bits are read from the n-dimensional entity. An action is performed that is based in part on the read number of bits. A bit sequence is generated, and a direction within the n-dimensional is selected based in part on the generated bit sequence. An offset is determined between a cursor position and a match bit within the n-dimensional entity. The match bit is based in part on the action, the direction, and the each bit in the data string. The determined offset is then employed to modify the generated bit sequence to generate an encoded data string.
- a method is directed to encrypting a data string.
- An n-dimensional entity is generated that is populated with pseudo-random bits. For each bit in the data string, a cursor position, and a direction within the n-dimensional entity is determined. A number of bits are determined by reading bits from the n-dimensional entity from the determined cursor position along the determined direction. An action is performed that is based in part on the determined number of bits. A bit sequence is generated and another direction is selected that is based in part on the bit sequence. An offset is determined between a match bit within the n-dimensional entity and the cursor position. The match bit is based in part on the action, the other direction, and the each bit in the data string. The offset is employed to modify the bit sequence to generate an encoded data string for each bit in the data string.
- a system is directed to encrypting a data string.
- the system includes an entity generator and a mapper.
- the entity generator is arranged to generate an n-dimensional entity.
- the mapper is arranged to receive the n-dimensional entity and perform actions.
- the mapper receives the data string. For each bit in the data string, the mapper reads a number of bits from the n-dimensional entity and performs an action based in part on the read number of bits.
- the mapper also generates a bit sequence for each bit in the data string, and selects a direction within the n-dimensional entity based in part on the generated bit sequence.
- the mapper further determines an offset between a cursor position and a match bit within the n-dimensional entity. The match bit is based in part on the action, the direction, and the each bit in the data string. Additionally, the mapper modifies the generated bit sequence with the determined offset to generate an encoded data string.
- an apparatus is directed to encrypting a data string.
- the apparatus includes a transceiver and an n-dimensional encrypter.
- the transceiver receives the data string and sends an encoded array.
- the n-dimensional encrypter is coupled to the transceiver and is arranged to perform actions.
- the n-dimensional encrypter generates an n-dimensional entity that is comprised of random bits. For each bit in the received data string, the n-dimensional encrypter reads a number of bits from the n-dimensional entity, and performs an action associated with the read number of bits.
- the n-dimensional encrypter also generates a bit sequence and selects a direction within the n-dimensional entity based in part on the generated bit sequence, for each bit in the received data string. Moreover, the n-dimensional encrypter determines an offset between a cursor position and a match bit within the n-dimensional entity. The match bit is based in part on the action, the direction, and the each bit in the received data string. Modifying the generated bit sequence with the determined offset generates an encoded data string. The encoded data string represents a row within the encoded array.
- FIG. 1 illustrates one embodiment of components of an n-dimensional encryption system
- FIG. 2 illustrates an exemplary environment in which the present invention may be practiced
- FIG. 3 illustrates one embodiment of an encoded array
- FIG. 4 illustrates one embodiment of a table of op-codes and associated actions for use with the n-dimensional entity
- FIG. 5 illustrates one embodiment of a three-dimensional entity (cube) populated with pseudo-random bits
- FIG. 6 illustrates a flow diagram generally showing one embodiment for a process of encrypting a data string
- FIG. 7 illustrates a flow diagram showing one embodiment for a process of generating the n-dimensional entity
- FIG. 8 illustrates a flow diagram showing one embodiment for a process of employing the n-dimensional entity to encode bits in the data string
- FIG. 9 illustrates a flow diagram generally showing one embodiment for a process of decrypting an encoded array.
- FIG. 10 illustrates a flow diagram showing one embodiment for a process of employing the n-dimensional entity to decode bits in the data string, in accordance with the present invention.
- Coupled and “connected” include a direct connection between the things that are connected or an indirect connection through one or more either passive or active intermediary devices or components.
- the present invention is directed towards a system and method of encoding and storing data securely using an n-dimensional entity.
- a user provides a cursor position within the n-dimensional entity, and a user seed to a pseudo-random number generator.
- the user seed may be combined with a fingerprint of a computing system in which the invention operates.
- the n-dimensional entity may be populated with bits from the pseudo-random number generator. Bits within the n-dimensional entity are associated with op-code actions to be performed at each cursor position.
- Plaintext is then bitwise translated to a direction and an offset from the cursor position to a bit matching the plaintext bit within the n-dimensional entity. The offset is employed to modify a row of truly random bits within an encoded array.
- Subsequent cursor directions within the n-dimensional entity may be determined using the true random number generator.
- the output is the encoded array, which may be further obfuscated by, among other way, exclusive or-ing it with corresponding elements in an obfuscation table.
- the plaintext may be recovered by decoding the encoded array using the original user seed, cursor position within the n-dimensional entity, and fingerprint.
- FIG. 1 illustrates one embodiment of components of an n-dimensional encryption system.
- System 100 may include many more, or less, components than those shown, however, those shown are sufficient to disclose an illustrative embodiment for practicing the invention.
- system 100 includes n-dimensional encrypter (NDE) 102 , user selectable inputs 104 , plaintext 106 , and encoded array 108 .
- N-dimensional encrypter 102 includes fingerprinter 110 , entity generator 112 , cursor normalizer 114 , mapper 116 , obfuscation table 118 , op-code action table 120 , random sequence generators 122 , and n-dimensional entity 124 .
- Entity generator 112 is in communication with user selectable inputs 104 , cursor normalizer 114 , fingerprinter 110 , n-dimensional entity 124 , and random sequence generators 122 .
- Mapper 116 is in communication with plaintext 106 , cursor normalizer 114 , random sequence generators 122 , op-code action table 120 , obfuscation table 118 , n-dimensional entity 124 , and encoded array 108 .
- User selectable inputs 104 include, but are not limited to, a user seed, a cursor position within n-dimensional entity 124 , a default op-code size, plane direction, and the like.
- the cursor position may be input in a variety of configurations, including coordinate positions within n-dimensional entity 124 .
- the cursor position may include an X, Y, and Z coordinate position within the n-dimensional entity, where the dimension, n, is three.
- the user selectable inputs 104 may also include a starting op-code that is configured to set a portal bit (start bit) within n-dimensional entity 124 .
- the starting op-code may be employed as a first action within n-dimensional entity 124 .
- User selectable inputs 104 may be provided to NDE 102 employing virtually any mechanism, including a keyboard, mouse, voice activation, touch-screen, another program, and the like.
- Plaintext 106 includes virtually any data string that is to be encrypted.
- plaintext 106 further includes information as to the length, in bits, of the data string to be encrypted.
- the length of plaintext 106 is determined from plaintext 106 by entity generator 112 .
- Encoded array 108 is described in more detail below in conjunction with FIG. 3 . Briefly, however, encoded array 108 represents the results of encoding plaintext 106 using NDE 102 . Encoded array 108 is an M by S array, where M is the number of rows, and S is the number of columns.
- Fingerprinter 110 is configured to generate a fingerprint based in part on one or more unique and/or identifiable elements associated with the computing system in which the present invention operates.
- Such elements include, but are not limited to, a Central Processing Unit's (CPU's) kernel calculated speed, CPU serial number, CPU family identity, CPU manufacturer, an operating system globally unique identifier (GUID), hardware component enumerations, Internet Protocol (IP) address, BIOS serial number, disk serial number, kernel version number, operating system version number, operating system build number, machine name, installed memory characteristic, physical port enumeration, customer supplied ID, MAC address, and the like.
- CPU's Central Processing Unit's
- GUID globally unique identifier
- IP Internet Protocol
- Fingerprinter 110 may convert one or more of the unique and/or identifiable elements into a digest employing a hashing mechanism. Each digest may again be hashed to provide the single fingerprint. Fingerprinter 110 may employ any of a variety of hashing mechanisms including, but not limited to, Message Digests (MD), Secure Hash Algorithms (SHA), and the like. In one embodiment, SHA-1 is employed to generate the fingerprint.
- MD Message Digests
- SHA Secure Hash Algorithms
- SHA-1 is employed to generate the fingerprint.
- Fingerprinter 110 is further configured to provide the fingerprint to entity generator 112 .
- entity generator 112 is configured to employ the fingerprint to seed a pseudo-random number generator, such as included within random sequence generators 122 .
- Random sequence generators 122 include a true random number generator (tRAND), and one or more pseudo-random number generators (PRANDs (1-P)).
- PRANDs (1-P) may be configured to provide one or more pseudo-random sequences to entity generator 112 for use in the generation of deterministic elements, such as n-dimensional entity 124 , and the like.
- TRAND may be configured to enable a determination of a random cursor movement within n-dimensional entity 124 during an encoding phase.
- TRAND may also be configured to generate a truly random sequence for use in populating encoded array 108 .
- TRAND may be configured to provide a sequence of bits that are considered to be statistically truly random.
- tRAND is dependent on the computing system in which the present invention operates.
- tRAND operates as an entropy pool seeded at a provisioning time, and updated from a time/entropy server. Output of the time/entropy server may include digitally signed and encrypted packets that are received by random sequence generators 122 .
- the entropy pool is updated by passing the contents of the current entropy pool and an entropy seed that is read every time an update is invoked. This may be done numerous times and an entropy value is generated from the unsigned number of bits in the entropy pool.
- the entropy pool is the result of the current entropy pool seed being hashed using any of a variety of hashing mechanisms, including SHA-1, with the current contents of the entropy pool.
- Each entropy seed is created by any of a variety of mechanisms. In one embodiment, each entropy seed is created by multiplying an internal CPU counter by an operating system time and securely hashing the results. This is repeated sixteen times.
- Entropy sources may include, but are not limited to, disk latency, floating TTL lines at a port, a keystroke delta, and the like. In one embodiment, the system does not include a true entropy source.
- PRANDs (1-P) may include virtually any random number generator having an output that is statistically deterministic.
- PRANDs (1-P) may be implemented using hardware, software, and a combination of hardware and software.
- random sequence generators 122 include two pseudo-random number generators, pRAND1, and pRAND2.
- PRANDs (1-P) may be seeded independent from each other. PRANDs (1-P) may also be seeded employing values derived in part from fingerprinter 110 in combination with the user seed. By seeding pRANDs (1-P) in this manner the generated series of random numbers may be made unique to the computing system in which the present invention operates and to a particular user. Although such uniqueness is not necessary to the success of the present invention, it does provide another level of obfuscation and a simple mechanism for binding the structure of the present invention to a single computing system.
- Op-code action table 120 is described in more detail in conjunction with FIG. 4 . Briefly, however, op-code action table 120 includes an op-code that maps bits within n-dimensional entity 124 to an action to be taken upon its structure. The size and meaning of the op-code are typically implementation specific.
- op-code action table 120 may be implemented as a table, it is not so limited.
- op-code action table 120 may also be implemented as a list, a linked-list, a database, a program, and the like.
- Obfuscation table 118 includes an element for each of the possible op-codes within op-code action table 120 .
- Obfuscation table 118 may be populated with random numbers generated through pRANDs (1-P). In one embodiment, pRAND2 is employed to provide the random numbers. It is noted that obfuscation table 118 is optional and need not be included.
- N-dimensional entity 124 represents an n-dimensional array of pseudo-random bits, where N may be any integer value greater than zero. N-dimensional entity 124 , typically, does not hold any information about plaintext 106 . Rather, n-dimensional entity 124 is configured to enable the generation of encoded array 108 , for plaintext 106 .
- n-dimensional entity 124 is shown as a cube.
- FIG. 5 illustrates one embodiment of a three-dimensional entity (cube) populated with pseudo-random bits.
- bits within the cube may be set to a high value (ON), a low value (OFF), and the like.
- bit 502 is set ON.
- the present invention is not limited to bi-state values for bits within the n-dimensional entity. As such, other levels of states may be employed without departing from the scope of the present invention.
- the length (number of bits) of each dimension of n-dimensional entity 124 may be derived in part by employing a random number generated by pRANDs (1-P). In one embodiment, the generated random number is constrained by modulus arithmetic.
- a maximum length may be desired. If a maximum length is desired, it may be determined through any of a variety of engineering approaches that enable tuning of the length for a given computing system. In one embodiment, the length of each dimension is limited to 1K bits.
- n-dimensional entity 124 it may also be desirable to have the overall size of n-dimensional entity 124 to be no larger than a natural size of a CPU integer.
- the size of n-dimensional entity 124 is 32 bits.
- N-dimensional entity 124 need not be generated completely at any given time.
- n-dimensional entity 124 is generated such that bits that are under, or within a defined region, such as around the cursor position, are generated at any one time.
- the cursor position may be converted into a count of the number of pseudo-random numbers that are to be employed to substantially the same view under the cursor position, as there would be had n-dimensional entity 124 been fully generated.
- Entity generator 112 is configured to generate at least a portion of n-dimensional entity 124 .
- Entity generator 112 may employ process 700 described below in conjunction with FIG. 7 to generate n-dimensional entity 124 .
- Entity generator 112 may employ user selectable inputs 104 , and the fingerprint generated by fingerprinter 110 to seed one or more pRANDs (1-P). The output of at least one of pRANDs (1-P) may also be employed by entity generator 112 to determine the dimension and lengths of n-dimensional entity 124 . Entity generator 112 may further employ at least one of pRANDs (1-P) to populate n-dimensional entity 124 with pseudo-random bits.
- Cursor normalizer 114 is configured to receive user selectable inputs 104 , including a cursor position, and ensure that the cursor position resides within the boundaries of n-dimensional entity 124 .
- a cursor position might specify an X-position of 55; however, the X-length for n-dimensional entity 124 may only be 30 bits. Therefore, cursor normalizer 114 normalizes the cursor position to within the 30 bits of length for the example n-dimensional entity. Normalization may be performed employing any of a variety of mechanisms, including truncating the cursor position, mapping the cursor position around a given plane of n-dimensional entity 124 , and the like.
- a cyclical redundancy check is applied to each plane of the cursor position to reduce the number of bits to be normalized.
- the obtained CRC values for each plane are adjusted employing a circular orbiting algorithm, or the like, until each component of the cursor position is within the boundaries of n-dimensional entity 124 .
- Circular orbiting of n-dimensional entity 124 multiple times may be permissible.
- normalization may include wrapping the cursor position around n-dimensional entity 124 in an order of dimension, such as X to Y, Y to Z, Z to X, and the like, until the cursor bits to move are exhausted.
- circular orbiting may include orbiting X dimension twice, then moving to Z, then back to X, then to Y three times, and so forth.
- Mapper 116 is configured to generate encoded array 108 from plaintext 106 . Mapper 116 may perform actions such as described below in conjunction with FIG. 8 to generate encoded array 108 . Note that preceding actions may also modify actions performed by mapper 116 . Hence, it may be possible that an op-code in op-code action table 120 may mean employ an op-code action table other than op-code action table 120 (not shown), and the like. The op-code may also mean that until instructed otherwise, from now on, subtract one from every op-code and execute the resulting associated action.
- Mapper 116 may, for example, employ, among other components, op-code action table 120 , and n-dimensional entity 124 to bitwise translate plaintext 106 to a direction and an offset from a cursor position to a bit matching the plaintext bit within the n-dimensional entity 124 .
- Mapper 116 may employ the offset to modify each row within encoded array 108 .
- Mapper 116 may further employ obfuscation table 118 to further obfuscate encoded array 108 .
- Mapper 116 also may be configured to generate plaintext 106 based in part on the decoding of encoded array 108 . Mapper 116 may perform actions such as described below in conjunction with FIG. 10 to generate plaintext 106 .
- entity generator 112 cursor normalizer 114
- mapper 116 may operate within a single component, several components, any combination of components, and a different arrangement of components, and the like, without departing from the scope of the present invention.
- FIG. 2 shows an exemplary computer 102 that may be included in a system implementing the invention, according to one embodiment of the invention.
- Computer 102 may include many more components than those shown. The components shown, however, are sufficient to disclose an illustrative embodiment for practicing the invention.
- Computer 102 includes processing unit 212 , video display adapter 214 , and a mass memory, all in communication with each other via bus 222 .
- the mass memory generally includes RAM 216 , ROM 232 , and one or more permanent mass storage devices, such as hard disk drive 228 , tape drive, optical drive, and/or floppy disk drive.
- the mass memory stores operating system 220 for controlling the operation of computer 102 . Any general-purpose operating system may be employed.
- BIOS Basic input/output system
- BIOS Basic input/output system
- computer 102 also can communicate with the Internet, or some other communications network, such as network 104 in FIG. 1 , via network interface unit 210 , which is constructed for use with various communication protocols including the TCP/IP protocol.
- Network interface unit 210 is sometimes known as a transceiver or transceiving device.
- Computer storage media may include volatile, nonvolatile, removable, and non-removable media implemented in any method or technology for storage of information, such as computer readable instructions, data structures, program modules, or other data.
- Examples of computer storage media include RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, digital versatile disks (DVD) or other optical storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can be accessed by a computing device.
- the mass memory stores program code and data for implementing operating system 220 .
- the mass memory may also store additional program code and data for performing the functions of network device 200 , and NDE 102 .
- One or more applications 250 , NDE 102 , and the like, may be loaded into mass memory and run on operating system 220 .
- Computer 102 may also include an SMTP handler application for transmitting and receiving e-mail, an HTTP handler application for receiving and handing HTTP requests, and an HTTPS handler application for handling secure connections.
- the HTTPS handler application may initiate communication with an external application in a secure fashion.
- Computer 102 also includes input/output interface 224 for communicating with external devices, such as a mouse, keyboard, scanner, or other input devices not shown in FIG. 2 .
- computer 102 may her include additional mass storage facilities such as CD-ROM/DVD-ROM drive 226 and hard disk drive 228 .
- Hard disk drive 228 is utilized by computer 102 to store, among other things, application programs, databases, encoded array 108 of FIG. 1 , NDE 102 , and the like.
- n computer systems may share data from computer 102 , where each n-dimensional entity provides a seed, starting cursor position, and the like.
- n end-users may be required with proper keys before data may be encrypted/decrypted.
- FIG. 3 illustrates one embodiment of an encoded array, such as encoded array 108 of FIG. 1 .
- Encoded array 300 is an M by S array, where M is the number of rows and S is the number of columns. In one embodiment, M is equal to the length of plaintext 106 of FIG. 1 , and S is equal to the length of an op-code. However, the invention is not so limited. For example, the number of row and/or columns may be extended to further obfuscate encoded array 300 .
- each row such as row 308 , includes PLANE-MEMBER bits 302 , NEW-ENTITY bit 304 , and OFFSET bits 306 .
- Such bits may be arranged within row 308 in virtually any sequence, location, and the like.
- PLANE-MEMBER bits 302 represent a direction within n-dimensional entity of FIG. 1 .
- PLANE-MEMBER bits 302 may represent a north, south, east, west, near, far direction, and the like.
- PLANE-MEMBER bits 302 may also represent an X, Y, Z planar direction, angular direction, and the like.
- NEW-ENTITY bit 304 indicates whether the n-dimensional entity is regenerated during a given encoding action for the current row within encoded array 300 .
- OFFSET bits 306 represent a count of bits between a cursor position within the n-dimensional entity, along the direction indicated by PLANE-MEMBER bits 302 , to a bit that matches the current bit within plaintext 106 of FIG. 1 .
- FIG. 4 illustrates one embodiment of a table of op-codes and associated actions for use with the n-dimensional entity.
- table 400 includes op-codes 402 and associated actions 404 .
- Op-codes 402 typically represent a sequence of bits that may be read from the n-dimensional entity. The number of bits read is equal to the size of an op-code within op-codes 402 . In one embodiment, the size of an op-code is 16 bits.
- Op-codes 402 and their associated actions 404 may be uniquely and randomly generated for each encoding session.
- the sequence of bits representing an op-code may be generated to be deterministic, non-deterministic, or a combination of deterministic and non-deterministic.
- Generation of op-codes 402 may be performed using pRANDs (1-P), tRAND, and that like.
- the random number generator pRAND, tRAND) may be reseeded at various intervals during an encoding session. In one embodiment, the various intervals are selected randomly.
- the sequence of bits representing an op-code is employed as an index into table 400 , to locate associated action 404 .
- the located associated action 404 may result in a new cursor position, switching bit state to search for within the n-dimensional entity, changing the direction within the n-dimensional entity, and the like.
- op-code 406 results in the action of “reading the next eight bits along the X direction within the n-dimensional entity.” Additionally, the number of bits read is “employed to move the cursor position along the X direction.”
- Table 400 is merely an example of op-codes and associated actions. It is not intended to illustrate a complete set of all possible op-codes, associated actions, and the like. Other op-codes and associated actions may therefore, be employed without departing from the scope of the present invention.
- table 400 need not be implemented as a table.
- table 400 may be implemented as a database, a linked-list, a computer program, in hardware, and the like, without departing from the scope of the present invention.
- FIG. 6 illustrates a flow diagram generally showing one embodiment for a process of encrypting a data string, such as plaintext 106 of FIG. 1 .
- Process 600 may, for example, operate within NDE 102 of FIG. 1 .
- Process 600 begins, after a start block, at block 602 when a cursor position is received.
- the cursor position provides a starting position within the n-dimensional entity.
- the number of received coordinates may be employed to indicate the dimensions (N) of the n-dimensional entity.
- N the dimensions of the n-dimensional entity.
- a received cursor position of (10, 123, 99, 666, 0) indicates that the n-dimensional entity has a dimension of five.
- another input may be received that specifies the number of dimensions, N.
- the process proceeds to block 604 where the plaintext to be encoded is received.
- the length of the plaintext in bits, may also be received.
- the length of the plaintext may also be determined by any of a variety of mechanisms, such as performing a bit count on the received plaintext.
- Process 600 continues block 606 where a user seed is received.
- Process 600 continues next to block 608 where the n-dimensional entity is generated.
- Block 608 is described in more detail in conjunction with FIG. 7 . Briefly, however, the received user seed and is employed in part to seed random number generator pRAND1. Output of pRAND1 is then employed to create and populate the n-dimensional entity with pseudo-randomly generated bits.
- the process continues to block 610 , where the received cursor position is normalized to ensure that the cursor position is within the boundaries of the n-dimensional entity. Normalization of the received cursor position may be achieved by any of a variety of mechanisms. In one embodiment a circular orbiting algorithm is employed that is similar to a screen display, or printer logic cursor normalization approach, as applied to N planes rather than the traditional two planes.
- the present invention is not limited to normalizing the cursor position to within the boundaries.
- the n-dimensional entity may acquire texture on its edges.
- textures may arise by allowing dynamic lengthening of a bit wide plane to accommodate a cursor movement rather than an orbit. In this manner, a determination may navigate the edges of the n-dimensional entity and thereby, such extra-dimensional movement may affect subsequent movement.
- the process proceeds next to block 612 , where an obfuscation table is generated.
- the obfuscation table is generated with an element for each of the possible op-codes to be generated.
- the obfuscation table may be populated with pseudo-random numbers generated from a pseudo-random number generator.
- the pseudo-random number generator may be pRAND1, or another pseudo-random number generator, pRAND2, or the like. It is noted that employing the obfuscation table is optional and need not be included.
- Process 600 continues to block 614 , where the plaintext is bitwise encoded using the n-dimensional entity that was generated at block 608 .
- Block 614 is described in more detail below in conjunction with FIG. 8 . Briefly, however, an offset from a cursor position within the n-dimensional entity is determined by performing a search for a match to each bit within the plaintext. The offset and direction of the search are employed to modify a truly random sequence. Each modified truly random sequence is exclusively or-ed with a previously modified truly random sequence to generate the encoded array.
- each exclusively or-ed sequence within the encoded array may be optionally exclusively or-ed with its corresponding element in an obfuscation table.
- additional raw bits are added to each sequence in the encoded array to further obfuscate the output.
- the process ends.
- the n-dimensional entity is destroyed.
- FIG. 7 illustrates a flow diagram showing one embodiment for a process of generating the n-dimensional entity.
- Process 700 may, for example, operate within entity generator 112 of FIG. 1 .
- Process 700 begins, after a start block, at block 702 , where a fingerprint is generated from a logical and/or physical context of the computing system in which the present invention operates.
- a fingerprint is generated from a logical and/or physical context of the computing system in which the present invention operates.
- One or more unique and/or identifiable elements associated with the computer system are hashed employing any of a variety of hashing mechanisms, including but not limited to SHA-1.
- the resulting digest(s) may be hashed again to generate a single fingerprint.
- the process continues to block 704 , where the user seed and fingerprint are combined. In one embodiment, the user seed and fingerprint are added together. The combination is then hashed to generate another digest using any of a variety of hashing mechanisms. The process continues to block 706 , where this other digest is employed to seed the pseudo-random number generator, pRAND1.
- a length (the number of bits) is determined for each side of the n-dimensional entity.
- Each length may be set based on a pseudo-random number that is generated by the pseudo-random number generator.
- the pseudo-random number generator employed is pRAND1.
- each length is limited to 1K bits per side.
- processing continues to block 710 , where the n-dimensional entity is populated with pseudo-random numbers from at least one of the pseudo-random number generators.
- pRAND1 is employed to populate the n-dimensional entity.
- FIG. 8 illustrates a flow diagram generally showing one embodiment for a process of employing the n-dimensional entity to encode each bit within the plaintext.
- Process 800 operates to encode each bit into a sequence of bits, as described in conjunction with FIG. 3 .
- Process 800 may operate within mapper 116 of FIG. 1 .
- Process 800 begins, after a start block, at block 802 when a starting direction is determined.
- the starting plane direction may be determined in a variety of approaches, including being provided as a user selectable input, as a default value, and the like.
- Processing continues to decision block 804 where a determination is made whether there are more bits within the plaintext to encode. If there are no more bits to encode, processing branches to block 826 where additional obfuscation of the encoded array may be performed. If there are more bits to encode, processing continues to block 806 , where the next bit in the plaintext is read.
- the read number of bits is employed as an index into an op-code action table to determine an associated action to be performed.
- Associated actions are described in more detail in conjunction with FIG. 4 . Briefly, however, associated actions may include, but are not limited to, using the read number of bits as a number of bits to move the cursor position along a selected plane, abandoning the current n-dimensional entity and employing another n-dimensional entity, flipping the state of an ON bit in the n-dimensional entity to OFF and the state of an OFF bit to ON, and the like.
- processing continues to block 812 , where an op-code size of truly random sequence of bits is generated.
- the generated truly random sequence is used to populate the row in the encoded array corresponding to the current bit position in the plaintext.
- Processing proceeds to block 814 where the PLANE-MEMBER in the current row of the encoded array is employed to determine a direction. Additionally, a NEW-ENTITY bit within the current row of the encoded array is zeroed (set OFF).
- Processing continues at block 816 , where a search is performed along the direction determined at block 814 until a bit is located within the n-dimensional entity that matches the current plaintext bit.
- Some op-code's actions performed at block 810 may reverse the state of the current plaintext bit to search for, reverse the state of the bits in the n-dimensional entity, or the like.
- the search performed at block 816 is configured to accommodate such changes. For example, if the op-code's actions reversed the states of the bits, then if current plaintext bit is set ON, the bit being searched for within the n-dimensional entity is an OFF bit.
- Process 800 continues at decision block 818 , where a determination is made whether a match has been located. If a match is located, processing branches to block 820 ; otherwise, processing branches to block 824 .
- the current cursor position is employed to seed a pseudo-random number generator, such as pRAND3.
- a pseudo-random number generator such as pRAND3.
- a new n-dimensional entity may also be generated employing a process substantially similar to process 700 of FIG. 7 .
- the NEW-ENTITY bit in the current row of the encoded array is set high (ON) to indicate that a new n-dimensional entity is generated for this row. Processing loops back to 816 to continue the search for a match to the current plaintext bit.
- an offset count is determined by counting the number of bits between the current cursor position and the located matching bit within the n-dimensional entity.
- Processing continues at block 822 , where the offset count is placed into the current row of the encoded array at location OFFSET by overwriting any bits that may currently reside in that location. Processing branches back to decision block 804 , where the above process is substantially repeated until there are no more bits in the plaintext to encode.
- each row in the encoded array may be exclusively or-ed with the previous row in the encoded array.
- the first row in the encoded array may be exclusively or-ed with the last row of the encoded output.
- each element in the obfuscation table created at block 612 of FIG. 6 is exclusively or-ed with its corresponding row in the encoded array.
- Additional mechanisms may be employed to further obfuscate the encoding of the plaintext at block 804 .
- additional rows of pseudo-random bits are appended to the encoded array.
- each row, selection of rows, and the like is extended in length by adding bits, such as pseudo-random bits. Removing pseudo-random bits may also be performed to shorten each row, selection of rows, and the like.
- the n-dimensional entity may be destroyed, and processing returns to perform other actions.
- FIG. 9 illustrates a flow diagram generally showing one embodiment for a process of decrypting an encoded array, such as is generated by process 800 in FIG. 8 .
- Process 900 may, for example, operate within NDE 102 of FIG. 1 .
- Process 900 begins, after a start block, where the same initial cursor position is received that was received at block 602 of FIG. 6 .
- the size of the op-code that was employed to encode the plaintext may also be received.
- Processing continues to block 904 , where the encoded array is received that were generated from a substantially similar process to process 600 of FIG. 6 . Processing proceeds to block 906 , where the same user seed is received as was provided at block 606 of FIG. 6 .
- n-dimensional entity is generated that is the same as the n-dimensional entity that was generated at block 608 of FIG. 6 .
- Process 900 flows next to block 910 , where the current cursor position is normalized to within the boundaries of the n-dimensional entity generated at block 908 . Normalization may employ substantially the same mechanisms as described above at block 610 of FIG. 6 .
- the optional un-obfuscation table is generated with an element for each of the output op-codes to be generated.
- the un-obfuscation table is populated with pseudo-random bits that may be generated from pRAND2, such that the resulting un-obfuscation table is identical to the obfuscation table generated at block 616 of FIG. 6 .
- Processing proceeds to block 914 , which is described in more detail below at FIG. 10 .
- the n-dimensional entity generated at block 908 is employed to decode the encoded array into plaintext.
- process 900 ends.
- FIG. 10 illustrates a flow diagram showing one embodiment for a process of employing the n-dimensional entity to decode the encoded array.
- Process 1000 may, for example, operate within mapper 116 of FIG. 1 .
- Process 1000 begins, after a start block, at block 1002 where the encoded array that is to be decoded is received. Processing proceeds next to decision block 1004 , where a determination is made whether there are more rows in the encoded array to decode. If there are more rows, processing branches to block 1006 : otherwise, processing returns to perform other actions.
- the un-obfuscated table is exclusively or-ed with encoded array.
- the first row in the encoded array is exclusively or-ed with the last row in the encoded array.
- Processing continues next to block 1008 , where starting at the current cursor position, a number of bits equal to the op-code size are read along the current direction of the n-dimensional entity.
- Processing proceeds to block 1010 , where the number of bits read are used as an index into the op-code action table to locate an op-code action.
- the op-code action is then performed.
- a variety of actions may be performed, including, but not limited to, creating a new cursor position, changing a bit state to search for from ON to OFF or vice versa, changing a direction to search for a bit, creating a new seed from which to generate a new n-dimensional entity for use in a subsequent action, and the like.
- Processing continues next to block 1012 .
- the current row in the encoded array is read to obtain the PLANE-MEMBER.
- the PLANE-MEMBER is used as the current direction of movement within the n-dimensional entity.
- Processing continues to block 1014 , where the OFFSET is also read from the current row in the encoded array.
- the final state of the plaintext bit may be adjusted per the current bit state that may have been set by a preceding op-code action. That is, the plaintext bit fetched from the n-dimensional entity may be used as is or more actually represent the opposite of the bit found for the plaintext.
- the final bit is then set at the current location within the plaintext.
- processing loops back to decision block 1004 , until there are no more rows to be decoded from the encoded array. Processing then returns to perform other actions.
- each block of the flowchart illustration, and combinations of blocks in the flowchart illustration can be implemented by computer program instructions.
- These program instructions may be provided to a processor to produce a machine, such that the instructions, which execute on the processor, create means for implementing the actions specified in the flowchart block or blocks.
- the computer program instructions may be executed by a processor to cause a series of operational steps to be performed by the processor to produce a computer implemented process such that the instructions, which execute on the processor provide steps for implementing the actions specified in the flowchart block or blocks.
- blocks of the flowchart illustration support combinations of means for performing the specified actions, combinations of steps for performing the specified actions and program instruction means for performing the specified actions. It will also be understood that each block of the flowchart illustration, and combinations of blocks in the flowchart illustration, can be implemented by special purpose hardware-based systems which perform the specified actions or steps, or combinations of special purpose hardware and computer instructions.
Abstract
Description
Claims (20)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US12/178,579 US8683218B2 (en) | 2003-10-21 | 2008-07-23 | System and method for N-dimensional encryption |
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US10/691,355 US7406174B2 (en) | 2003-10-21 | 2003-10-21 | System and method for n-dimensional encryption |
US12/178,579 US8683218B2 (en) | 2003-10-21 | 2008-07-23 | System and method for N-dimensional encryption |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US10/691,355 Continuation US7406174B2 (en) | 2003-10-21 | 2003-10-21 | System and method for n-dimensional encryption |
Publications (2)
Publication Number | Publication Date |
---|---|
US20080279369A1 US20080279369A1 (en) | 2008-11-13 |
US8683218B2 true US8683218B2 (en) | 2014-03-25 |
Family
ID=34521858
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US10/691,355 Active 2026-01-13 US7406174B2 (en) | 2003-10-21 | 2003-10-21 | System and method for n-dimensional encryption |
US12/178,579 Active 2026-09-20 US8683218B2 (en) | 2003-10-21 | 2008-07-23 | System and method for N-dimensional encryption |
Family Applications Before (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US10/691,355 Active 2026-01-13 US7406174B2 (en) | 2003-10-21 | 2003-10-21 | System and method for n-dimensional encryption |
Country Status (1)
Country | Link |
---|---|
US (2) | US7406174B2 (en) |
Families Citing this family (41)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7406174B2 (en) * | 2003-10-21 | 2008-07-29 | Widevine Technologies, Inc. | System and method for n-dimensional encryption |
US7631292B2 (en) * | 2003-11-05 | 2009-12-08 | Microsoft Corporation | Code individualism and execution protection |
US7496616B2 (en) * | 2004-11-12 | 2009-02-24 | International Business Machines Corporation | Method, apparatus and system for resistance to side channel attacks on random number generators |
JP4654806B2 (en) * | 2005-07-15 | 2011-03-23 | ソニー株式会社 | Information processing apparatus, information recording medium manufacturing apparatus, information recording medium and method, and computer program |
US7783896B2 (en) * | 2005-09-06 | 2010-08-24 | Research In Motion Limited | System and method for management of plaintext data in a mobile data processing device |
US7515710B2 (en) | 2006-03-14 | 2009-04-07 | Divx, Inc. | Federated digital rights management scheme including trusted systems |
FR2903508B1 (en) * | 2006-07-10 | 2008-10-17 | Sagem Defense Securite | PROTECTION OF A PROGRAM INTERPRETED BY A VIRTUAL MACHINE |
JP4860708B2 (en) * | 2006-12-27 | 2012-01-25 | 富士通株式会社 | Stream cipher method and cipher system |
US20080298583A1 (en) * | 2007-05-31 | 2008-12-04 | Lucent Technologies Inc. | System and method of quantum encryption |
US8997161B2 (en) | 2008-01-02 | 2015-03-31 | Sonic Ip, Inc. | Application enhancement tracks |
CN101661546B (en) * | 2008-08-28 | 2012-12-19 | 深圳富泰宏精密工业有限公司 | System and method for file encryption therein in hand-held mobile electronic device |
CN105072454B (en) | 2009-01-07 | 2019-04-19 | 索尼克Ip股份有限公司 | For the specialization of the media guidance of online content, centralization, automation creation |
WO2010097912A1 (en) * | 2009-02-25 | 2010-09-02 | Suginaka Junko | Information processing device, transmission information encrypting method and transmission information encrypting program |
EP2507995A4 (en) | 2009-12-04 | 2014-07-09 | Sonic Ip Inc | Elementary bitstream cryptographic material transport systems and methods |
US8966253B1 (en) | 2010-06-01 | 2015-02-24 | Xilinx, Inc. | Method and apparatus for authenticating a programmable device bitstream |
US9247312B2 (en) | 2011-01-05 | 2016-01-26 | Sonic Ip, Inc. | Systems and methods for encoding source media in matroska container files for adaptive bitrate streaming using hypertext transfer protocol |
US8909941B1 (en) * | 2011-03-31 | 2014-12-09 | Xilinx, Inc. | Programmable integrated circuit and a method of enabling the detection of tampering with data provided to a programmable integrated circuit |
US9467708B2 (en) | 2011-08-30 | 2016-10-11 | Sonic Ip, Inc. | Selection of resolutions for seamless resolution switching of multimedia content |
US8964977B2 (en) | 2011-09-01 | 2015-02-24 | Sonic Ip, Inc. | Systems and methods for saving encoded media streamed using adaptive bitrate streaming |
US8909922B2 (en) | 2011-09-01 | 2014-12-09 | Sonic Ip, Inc. | Systems and methods for playing back alternative streams of protected content protected using common cryptographic information |
US9772845B2 (en) | 2011-12-13 | 2017-09-26 | Intel Corporation | Method and apparatus to process KECCAK secure hashing algorithm |
US8744078B2 (en) * | 2012-06-05 | 2014-06-03 | Secure Channels Sa | System and method for securing multiple data segments having different lengths using pattern keys having multiple different strengths |
GB2504546A (en) * | 2012-08-02 | 2014-02-05 | Pangaea Media Ltd | Generating a random number from user inputs to be used in encryption. |
US9076018B2 (en) * | 2012-12-19 | 2015-07-07 | Clevx, Llc | Encryption key generation in encrypted storage devices |
US9191457B2 (en) | 2012-12-31 | 2015-11-17 | Sonic Ip, Inc. | Systems, methods, and media for controlling delivery of content |
US9313510B2 (en) | 2012-12-31 | 2016-04-12 | Sonic Ip, Inc. | Use of objective quality measures of streamed content to reduce streaming bandwidth |
US9906785B2 (en) | 2013-03-15 | 2018-02-27 | Sonic Ip, Inc. | Systems, methods, and media for transcoding video data according to encoding parameters indicated by received metadata |
US10397292B2 (en) | 2013-03-15 | 2019-08-27 | Divx, Llc | Systems, methods, and media for delivery of content |
US9247317B2 (en) | 2013-05-30 | 2016-01-26 | Sonic Ip, Inc. | Content streaming with client device trick play index |
US9094737B2 (en) | 2013-05-30 | 2015-07-28 | Sonic Ip, Inc. | Network video streaming with trick play based on separate trick play files |
US9967305B2 (en) | 2013-06-28 | 2018-05-08 | Divx, Llc | Systems, methods, and media for streaming media content |
US9519805B2 (en) * | 2013-08-01 | 2016-12-13 | Cellco Partnership | Digest obfuscation for data cryptography |
US9866878B2 (en) | 2014-04-05 | 2018-01-09 | Sonic Ip, Inc. | Systems and methods for encoding and playing back video at different frame rates using enhancement layers |
US9710618B2 (en) * | 2014-05-14 | 2017-07-18 | Empire Technology Development Llc | Digital rights management based on formatting feature |
KR102426067B1 (en) | 2014-08-07 | 2022-07-28 | 디빅스, 엘엘씨 | Systems and methods for protecting elementary bitstreams incorporating independently encoded tiles |
US9548862B1 (en) * | 2014-11-17 | 2017-01-17 | Safelogic, Inc. | Managing entropy in computing devices for cryptographic key generation |
US10498795B2 (en) | 2017-02-17 | 2019-12-03 | Divx, Llc | Systems and methods for adaptive switching between multiple content delivery networks during adaptive bitrate streaming |
CN110266682B (en) * | 2019-06-18 | 2021-11-02 | 杭州情咖网络技术有限公司 | Data encryption method and device, mobile terminal and decryption method |
US20210081807A1 (en) * | 2019-09-17 | 2021-03-18 | Sap Se | Non-Interactive Private Decision Tree Evaluation |
US11582266B2 (en) * | 2020-02-03 | 2023-02-14 | Citrix Systems, Inc. | Method and system for protecting privacy of users in session recordings |
WO2022041163A1 (en) | 2020-08-29 | 2022-03-03 | Citrix Systems, Inc. | Identity leak prevention |
Citations (89)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4535355A (en) | 1982-06-23 | 1985-08-13 | Microdesign Limited | Method and apparatus for scrambling and unscrambling data streams using encryption and decryption |
US4694489A (en) | 1983-12-22 | 1987-09-15 | Frederiksen Jeffrey E | Video transmission system |
US4853962A (en) | 1987-12-07 | 1989-08-01 | Universal Computer Consulting, Inc. | Encryption system |
US4972477A (en) | 1984-06-15 | 1990-11-20 | Campbell Robert J | Encoder/decoder |
US5067035A (en) | 1987-05-22 | 1991-11-19 | Kudelski Sa Fabrique De'enregistreurs Nagra | Error prevention in a recording and reproducing device with at least one rotating head |
US5134656A (en) | 1989-02-22 | 1992-07-28 | Kudelski S.A. Fabrique D'enregistruers Nagra | Pre-payment television system using a memory card associated with a decoder |
US5144663A (en) | 1986-04-18 | 1992-09-01 | Kudelski S.A. Fabrique D'engregistreurs Nagra | Method of interactive communication between a subscriber and a decoder of a system of pay-television and decoder thereof |
US5349681A (en) * | 1991-01-22 | 1994-09-20 | Mitsubishi Denki Kabushiki Kaisha | Bit searching circuit and data processor including the same |
US5361081A (en) | 1993-04-29 | 1994-11-01 | Digital Equipment Corporation | Programmable pixel and scan-line offsets for a hardware cursor |
US5375168A (en) | 1990-02-21 | 1994-12-20 | Kudelski S.A. Fabrique D'enregistreurs Nagra | Method for scrambling and unscrambling a video signal |
WO1996006504A1 (en) | 1994-08-19 | 1996-02-29 | Thomson Consumer Electronics, Inc. | Smart-card based access control system with improved security |
US5539450A (en) | 1993-04-16 | 1996-07-23 | News Datacom Limited | Methods and systems for providing additional service applications in pay television |
WO1996032702A1 (en) | 1995-04-10 | 1996-10-17 | Smart Tv Co. | Interactive smart card system for integrating the provision of remote and local services |
US5590200A (en) | 1993-12-09 | 1996-12-31 | News Datacom Ltd. | Apparatus and method for securing communication systems |
US5592212A (en) | 1993-04-16 | 1997-01-07 | News Datacom Ltd. | Methods and systems for non-program applications for subscriber television |
US5621799A (en) | 1993-10-19 | 1997-04-15 | Matsushita Electric Industrial Co., Ltd. | Scrambled transmission system |
US5640546A (en) | 1993-02-23 | 1997-06-17 | Network Programs, Inc. | Composition of systems of objects by interlocking coordination, projection, and distribution |
US5666412A (en) | 1994-10-03 | 1997-09-09 | News Datacom Ltd. | Secure access systems and methods utilizing two access cards |
US5684876A (en) | 1995-11-15 | 1997-11-04 | Scientific-Atlanta, Inc. | Apparatus and method for cipher stealing when encrypting MPEG transport packets |
US5758257A (en) | 1994-11-29 | 1998-05-26 | Herz; Frederick | System and method for scheduling broadcast of and access to video programs and other data using customer profiles |
US5774527A (en) | 1993-08-19 | 1998-06-30 | News Datacom Ltd. | Integrated telephone and cable communication networks |
US5799089A (en) | 1993-10-14 | 1998-08-25 | Irdeto B.V. | System and apparatus for blockwise encryption/decryption of data |
US5805705A (en) | 1996-01-29 | 1998-09-08 | International Business Machines Corporation | Synchronization of encryption/decryption keys in a data communication network |
EP0886409A2 (en) | 1997-05-01 | 1998-12-23 | Digital Vision Laboratories Corporation | Information providing system |
US5883957A (en) | 1996-09-20 | 1999-03-16 | Laboratory Technologies Corporation | Methods and apparatus for encrypting and decrypting MIDI files |
US5892900A (en) | 1996-08-30 | 1999-04-06 | Intertrust Technologies Corp. | Systems and methods for secure transaction management and electronic rights protection |
WO1999030499A1 (en) | 1997-12-10 | 1999-06-17 | Thomson Consumer Electronics, Inc. | Method for protecting the audio/visual data across the nrss inte rface |
US5915019A (en) | 1995-02-13 | 1999-06-22 | Intertrust Technologies Corp. | Systems and methods for secure transaction management and electronic rights protection |
US5920861A (en) | 1997-02-25 | 1999-07-06 | Intertrust Technologies Corp. | Techniques for defining using and manipulating rights management data structures |
US5920625A (en) | 1994-04-08 | 1999-07-06 | Irdeto Bv | Method and apparatus for transmitting and receiving encrypted signals |
US5923666A (en) | 1995-10-24 | 1999-07-13 | Nds Limited | Decoding carriers encoded using orthogonal frequency division multiplexing |
US5933498A (en) | 1996-01-11 | 1999-08-03 | Mrj, Inc. | System for controlling access and distribution of digital property |
US5939975A (en) | 1996-09-19 | 1999-08-17 | Nds Ltd. | Theft prevention system and method |
WO1999054453A1 (en) | 1998-04-21 | 1999-10-28 | Chr. Hansen A/S | Novel genetically modified lactic acid bacteria having modified diacetyl reductase activities |
US5991399A (en) | 1997-12-18 | 1999-11-23 | Intel Corporation | Method for securely distributing a conditional use private key to a trusted entity on a remote system |
US6009401A (en) | 1998-04-06 | 1999-12-28 | Preview Systems, Inc. | Relicensing of electronically purchased software |
US6009525A (en) | 1997-08-29 | 1999-12-28 | Preview Systems, Inc. | Multi-tier electronic software distribution |
US6009116A (en) | 1995-05-05 | 1999-12-28 | Philip A Rubin And Associates, Inc. | GPS TV set top box with regional restrictions |
US6021197A (en) | 1995-06-23 | 2000-02-01 | Irdeto B.V. | Method and apparatus for controlling the operation of a signal decoder in a broadcasting system |
US6032216A (en) | 1997-07-11 | 2000-02-29 | International Business Machines Corporation | Parallel file system with method using tokens for locking modes |
US6035037A (en) | 1995-08-04 | 2000-03-07 | Thomson Electronic Consumers, Inc. | System for processing a video signal via series-connected high speed signal processing smart cards |
US6038433A (en) | 1996-10-02 | 2000-03-14 | Irdeto B.V. | Method for automatically searching a frequency range for signal channels in a receiver for digitally modulated signals, and receiver for applying such a method |
US6049671A (en) | 1996-04-18 | 2000-04-11 | Microsoft Corporation | Method for identifying and obtaining computer software from a network computer |
US6055503A (en) | 1997-08-29 | 2000-04-25 | Preview Systems | Software program self-modification |
US6064737A (en) | 1994-11-16 | 2000-05-16 | Digimarc Corporation | Anti-piracy system for wireless telephony |
US6073256A (en) | 1997-04-11 | 2000-06-06 | Preview Systems, Inc. | Digital product execution control |
US6112181A (en) | 1997-11-06 | 2000-08-29 | Intertrust Technologies Corporation | Systems and methods for matching, selecting, narrowcasting, and/or classifying based on rights management and/or other information |
US6157721A (en) | 1996-08-12 | 2000-12-05 | Intertrust Technologies Corp. | Systems and methods using cryptography to protect secure computing environments |
US6178242B1 (en) | 1997-02-07 | 2001-01-23 | Nds Limited | Digital recording protection system |
US6189097B1 (en) | 1997-03-24 | 2001-02-13 | Preview Systems, Inc. | Digital Certificate |
US6191782B1 (en) | 1996-08-30 | 2001-02-20 | Matsushita Electric Industrial Co., Ltd. | Terminal apparatus and method for achieving interactive operations by displaying a desired piece of image information at high speed using cache memories, out of a large amount of image information sent in a one-way direction |
US6219421B1 (en) | 1997-10-24 | 2001-04-17 | Shaul O. Backal | Virtual matrix encryption (VME) and virtual key cryptographic method and apparatus |
US6226794B1 (en) | 1996-09-17 | 2001-05-01 | Sarnoff Corporation | Set top terminal for an interactive information distribution system |
WO2001035571A1 (en) | 1999-11-09 | 2001-05-17 | Widevine Technologies | Process and streaming server for encrypting a data stream |
US6247950B1 (en) | 1998-03-20 | 2001-06-19 | Nds Limited | Secure smart card and tool for removing same |
US6272636B1 (en) | 1997-04-11 | 2001-08-07 | Preview Systems, Inc | Digital product execution control and security |
US6285774B1 (en) | 1998-06-08 | 2001-09-04 | Digital Video Express, L.P. | System and methodology for tracing to a source of unauthorized copying of prerecorded proprietary material, such as movies |
US6285985B1 (en) | 1998-04-03 | 2001-09-04 | Preview Systems, Inc. | Advertising-subsidized and advertising-enabled software |
US6298441B1 (en) | 1994-03-10 | 2001-10-02 | News Datacom Ltd. | Secure document access system |
US6314572B1 (en) | 1998-05-29 | 2001-11-06 | Diva Systems Corporation | Method and apparatus for providing subscription-on-demand services, dependent services and contingent services for an interactive information distribution system |
US6334213B1 (en) | 1998-01-20 | 2001-12-25 | Preview Systems | Merging of separate executable computer programs to form a single executable computer program |
US20020001385A1 (en) | 2000-06-30 | 2002-01-03 | Hirotsugu Kawada | Recording method and apparatus, optical disk, and computer-readable storage medium |
EP0714204B1 (en) | 1994-11-26 | 2002-01-09 | Lg Electronics Inc. | Illegal view and copy protection method in digital video system and controlling method thereof |
US20020015498A1 (en) | 2000-02-17 | 2002-02-07 | Houlberg Christian L. | Method which uses a Non-Volatile Memory to store a crypto key and a check word for an encryption device |
US20020021805A1 (en) | 1999-01-06 | 2002-02-21 | Schumann Robert Wilhelm | Digital content distribution system and method |
US6377261B1 (en) | 1991-02-28 | 2002-04-23 | Adobe Systems Incorporated | Compiling glyphs into instructions for imaging for execution on a general purpose computer |
US6381341B1 (en) | 1996-05-16 | 2002-04-30 | Digimarc Corporation | Watermark encoding method exploiting biases inherent in original signal |
US6405369B1 (en) | 1996-03-18 | 2002-06-11 | News Datacom Limited | Smart card chaining in pay television systems |
US6409080B2 (en) | 2000-03-27 | 2002-06-25 | Kabushiki Kaisha Toshiba | Portable electronic device and loyalty point system |
US20020089410A1 (en) | 2000-11-13 | 2002-07-11 | Janiak Martin J. | Biometric authentication device for use with a personal digital assistant |
US20020104004A1 (en) | 2001-02-01 | 2002-08-01 | Bruno Couillard | Method and apparatus for synchronizing real-time clocks of time stamping cryptographic modules |
US6445797B1 (en) | 1998-12-16 | 2002-09-03 | Secure Choice Llc | Method and system for performing secure electronic digital streaming |
US6459427B1 (en) | 1998-04-01 | 2002-10-01 | Liberate Technologies | Apparatus and method for web-casting over digital broadcast TV network |
US20020141582A1 (en) | 2001-03-28 | 2002-10-03 | Kocher Paul C. | Content security layer providing long-term renewable security |
US6466670B1 (en) | 1998-05-21 | 2002-10-15 | Nds Limited | System for preventing playback of unauthorized digital video recordings |
US6505299B1 (en) | 1999-03-01 | 2003-01-07 | Sharp Laboratories Of America, Inc. | Digital image scrambling for image coding systems |
US20030007568A1 (en) | 1997-11-17 | 2003-01-09 | Dominique Hamery | Packet filtering |
US6549563B1 (en) * | 1999-05-28 | 2003-04-15 | Dot Wireless, Inc. | Methods and apparatus for use in generating spreading sequences for multiple modes of communication |
US6587561B1 (en) | 1998-03-04 | 2003-07-01 | Nds Ltd. | Key delivery in a secure broadcasting system |
US6606746B1 (en) | 1997-10-16 | 2003-08-12 | Opentv, Inc. | Interactive television system and method for displaying a graphical user interface using insert pictures |
US6629243B1 (en) | 1998-10-07 | 2003-09-30 | Nds Limited | Secure communications system |
US6634028B2 (en) | 1993-08-19 | 2003-10-14 | News Datacom, Ltd. | Television system communicating individually addressed information |
US6651170B1 (en) | 1998-01-14 | 2003-11-18 | Irdeto B.V. | Integrated circuit and smart card comprising such a circuit |
US6654420B1 (en) | 1999-10-29 | 2003-11-25 | Koninklijke Philips Electronics N.V. | Video encoding-method |
US6654423B2 (en) | 1999-12-02 | 2003-11-25 | Lg Electronics Inc. | PID/section filter in digital television system |
US6708250B2 (en) | 2001-09-28 | 2004-03-16 | Mosaid Technologies Incorporated | Circuit and method for performing variable width searches in a content addressable memory |
US6904110B2 (en) | 1997-07-31 | 2005-06-07 | Francois Trans | Channel equalization system and method |
US7205912B1 (en) | 2005-10-31 | 2007-04-17 | Seagate Technology Llc | Structured set partitioning and multilevel coding for partial response channels |
US7406174B2 (en) * | 2003-10-21 | 2008-07-29 | Widevine Technologies, Inc. | System and method for n-dimensional encryption |
Family Cites Families (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US609401A (en) * | 1898-08-23 | Skate | ||
US6404314B1 (en) * | 2000-02-29 | 2002-06-11 | General Electric Company | Adjustable trip solenoid |
AU2001275051A1 (en) | 2000-05-30 | 2001-12-11 | Pointsec Mobile Technologies, Inc. | Apparatus and methods for using a virtual smart card |
US7165175B1 (en) | 2000-09-06 | 2007-01-16 | Widevine Technologies, Inc. | Apparatus, system and method for selectively encrypting different portions of data sent over a network |
-
2003
- 2003-10-21 US US10/691,355 patent/US7406174B2/en active Active
-
2008
- 2008-07-23 US US12/178,579 patent/US8683218B2/en active Active
Patent Citations (103)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4535355A (en) | 1982-06-23 | 1985-08-13 | Microdesign Limited | Method and apparatus for scrambling and unscrambling data streams using encryption and decryption |
US4694489A (en) | 1983-12-22 | 1987-09-15 | Frederiksen Jeffrey E | Video transmission system |
US4972477A (en) | 1984-06-15 | 1990-11-20 | Campbell Robert J | Encoder/decoder |
US5144663A (en) | 1986-04-18 | 1992-09-01 | Kudelski S.A. Fabrique D'engregistreurs Nagra | Method of interactive communication between a subscriber and a decoder of a system of pay-television and decoder thereof |
US5067035A (en) | 1987-05-22 | 1991-11-19 | Kudelski Sa Fabrique De'enregistreurs Nagra | Error prevention in a recording and reproducing device with at least one rotating head |
US4853962A (en) | 1987-12-07 | 1989-08-01 | Universal Computer Consulting, Inc. | Encryption system |
US5134656A (en) | 1989-02-22 | 1992-07-28 | Kudelski S.A. Fabrique D'enregistruers Nagra | Pre-payment television system using a memory card associated with a decoder |
US5375168A (en) | 1990-02-21 | 1994-12-20 | Kudelski S.A. Fabrique D'enregistreurs Nagra | Method for scrambling and unscrambling a video signal |
US5349681A (en) * | 1991-01-22 | 1994-09-20 | Mitsubishi Denki Kabushiki Kaisha | Bit searching circuit and data processor including the same |
US6377261B1 (en) | 1991-02-28 | 2002-04-23 | Adobe Systems Incorporated | Compiling glyphs into instructions for imaging for execution on a general purpose computer |
US5640546A (en) | 1993-02-23 | 1997-06-17 | Network Programs, Inc. | Composition of systems of objects by interlocking coordination, projection, and distribution |
US5592212A (en) | 1993-04-16 | 1997-01-07 | News Datacom Ltd. | Methods and systems for non-program applications for subscriber television |
US5539450A (en) | 1993-04-16 | 1996-07-23 | News Datacom Limited | Methods and systems for providing additional service applications in pay television |
US5361081A (en) | 1993-04-29 | 1994-11-01 | Digital Equipment Corporation | Programmable pixel and scan-line offsets for a hardware cursor |
US6634028B2 (en) | 1993-08-19 | 2003-10-14 | News Datacom, Ltd. | Television system communicating individually addressed information |
US5774527A (en) | 1993-08-19 | 1998-06-30 | News Datacom Ltd. | Integrated telephone and cable communication networks |
US5799089A (en) | 1993-10-14 | 1998-08-25 | Irdeto B.V. | System and apparatus for blockwise encryption/decryption of data |
US5621799A (en) | 1993-10-19 | 1997-04-15 | Matsushita Electric Industrial Co., Ltd. | Scrambled transmission system |
EP0658054B1 (en) | 1993-12-09 | 1998-09-16 | News Datacom Ltd. | Apparatus and method for securing communication systems |
US5590200A (en) | 1993-12-09 | 1996-12-31 | News Datacom Ltd. | Apparatus and method for securing communication systems |
US6298441B1 (en) | 1994-03-10 | 2001-10-02 | News Datacom Ltd. | Secure document access system |
US5920625A (en) | 1994-04-08 | 1999-07-06 | Irdeto Bv | Method and apparatus for transmitting and receiving encrypted signals |
WO1996006504A1 (en) | 1994-08-19 | 1996-02-29 | Thomson Consumer Electronics, Inc. | Smart-card based access control system with improved security |
US5878134A (en) | 1994-10-03 | 1999-03-02 | News Data Com Ltd. | Secure access systems utilizing more than one IC card |
US5774546A (en) | 1994-10-03 | 1998-06-30 | News Datacom Ltd. | Secure access system utilizing an access card having more than one embedded integrated circuit and/or plurality of security levels |
US5666412A (en) | 1994-10-03 | 1997-09-09 | News Datacom Ltd. | Secure access systems and methods utilizing two access cards |
US6064737A (en) | 1994-11-16 | 2000-05-16 | Digimarc Corporation | Anti-piracy system for wireless telephony |
EP0714204B1 (en) | 1994-11-26 | 2002-01-09 | Lg Electronics Inc. | Illegal view and copy protection method in digital video system and controlling method thereof |
US5758257A (en) | 1994-11-29 | 1998-05-26 | Herz; Frederick | System and method for scheduling broadcast of and access to video programs and other data using customer profiles |
US5915019A (en) | 1995-02-13 | 1999-06-22 | Intertrust Technologies Corp. | Systems and methods for secure transaction management and electronic rights protection |
US6389402B1 (en) | 1995-02-13 | 2002-05-14 | Intertrust Technologies Corp. | Systems and methods for secure transaction management and electronic rights protection |
US5917912A (en) | 1995-02-13 | 1999-06-29 | Intertrust Technologies Corporation | System and methods for secure transaction management and electronic rights protection |
US6253193B1 (en) | 1995-02-13 | 2001-06-26 | Intertrust Technologies Corporation | Systems and methods for the secure transaction management and electronic rights protection |
US5982891A (en) | 1995-02-13 | 1999-11-09 | Intertrust Technologies Corp. | Systems and methods for secure transaction management and electronic rights protection |
US6185683B1 (en) | 1995-02-13 | 2001-02-06 | Intertrust Technologies Corp. | Trusted and secure techniques, systems and methods for item delivery and execution |
US5949876A (en) | 1995-02-13 | 1999-09-07 | Intertrust Technologies Corporation | Systems and methods for secure transaction management and electronic rights protection |
WO1996032702A1 (en) | 1995-04-10 | 1996-10-17 | Smart Tv Co. | Interactive smart card system for integrating the provision of remote and local services |
US6009116A (en) | 1995-05-05 | 1999-12-28 | Philip A Rubin And Associates, Inc. | GPS TV set top box with regional restrictions |
US6021197A (en) | 1995-06-23 | 2000-02-01 | Irdeto B.V. | Method and apparatus for controlling the operation of a signal decoder in a broadcasting system |
US6035037A (en) | 1995-08-04 | 2000-03-07 | Thomson Electronic Consumers, Inc. | System for processing a video signal via series-connected high speed signal processing smart cards |
US5923666A (en) | 1995-10-24 | 1999-07-13 | Nds Limited | Decoding carriers encoded using orthogonal frequency division multiplexing |
US5684876A (en) | 1995-11-15 | 1997-11-04 | Scientific-Atlanta, Inc. | Apparatus and method for cipher stealing when encrypting MPEG transport packets |
US5933498A (en) | 1996-01-11 | 1999-08-03 | Mrj, Inc. | System for controlling access and distribution of digital property |
US6314409B2 (en) | 1996-01-11 | 2001-11-06 | Veridian Information Solutions | System for controlling access and distribution of digital property |
US5805705A (en) | 1996-01-29 | 1998-09-08 | International Business Machines Corporation | Synchronization of encryption/decryption keys in a data communication network |
US6405369B1 (en) | 1996-03-18 | 2002-06-11 | News Datacom Limited | Smart card chaining in pay television systems |
US6256668B1 (en) | 1996-04-18 | 2001-07-03 | Microsoft Corporation | Method for identifying and obtaining computer software from a network computer using a tag |
US6049671A (en) | 1996-04-18 | 2000-04-11 | Microsoft Corporation | Method for identifying and obtaining computer software from a network computer |
US7362781B2 (en) * | 1996-04-25 | 2008-04-22 | Digimarc Corporation | Wireless methods and devices employing steganography |
US6381341B1 (en) | 1996-05-16 | 2002-04-30 | Digimarc Corporation | Watermark encoding method exploiting biases inherent in original signal |
US6157721A (en) | 1996-08-12 | 2000-12-05 | Intertrust Technologies Corp. | Systems and methods using cryptography to protect secure computing environments |
US5892900A (en) | 1996-08-30 | 1999-04-06 | Intertrust Technologies Corp. | Systems and methods for secure transaction management and electronic rights protection |
US6191782B1 (en) | 1996-08-30 | 2001-02-20 | Matsushita Electric Industrial Co., Ltd. | Terminal apparatus and method for achieving interactive operations by displaying a desired piece of image information at high speed using cache memories, out of a large amount of image information sent in a one-way direction |
US6226794B1 (en) | 1996-09-17 | 2001-05-01 | Sarnoff Corporation | Set top terminal for an interactive information distribution system |
US5939975A (en) | 1996-09-19 | 1999-08-17 | Nds Ltd. | Theft prevention system and method |
US5883957A (en) | 1996-09-20 | 1999-03-16 | Laboratory Technologies Corporation | Methods and apparatus for encrypting and decrypting MIDI files |
US6038433A (en) | 1996-10-02 | 2000-03-14 | Irdeto B.V. | Method for automatically searching a frequency range for signal channels in a receiver for digitally modulated signals, and receiver for applying such a method |
US6178242B1 (en) | 1997-02-07 | 2001-01-23 | Nds Limited | Digital recording protection system |
US5920861A (en) | 1997-02-25 | 1999-07-06 | Intertrust Technologies Corp. | Techniques for defining using and manipulating rights management data structures |
US6189097B1 (en) | 1997-03-24 | 2001-02-13 | Preview Systems, Inc. | Digital Certificate |
US6272636B1 (en) | 1997-04-11 | 2001-08-07 | Preview Systems, Inc | Digital product execution control and security |
US6073256A (en) | 1997-04-11 | 2000-06-06 | Preview Systems, Inc. | Digital product execution control |
EP0886409A2 (en) | 1997-05-01 | 1998-12-23 | Digital Vision Laboratories Corporation | Information providing system |
US6032216A (en) | 1997-07-11 | 2000-02-29 | International Business Machines Corporation | Parallel file system with method using tokens for locking modes |
US6904110B2 (en) | 1997-07-31 | 2005-06-07 | Francois Trans | Channel equalization system and method |
US6055503A (en) | 1997-08-29 | 2000-04-25 | Preview Systems | Software program self-modification |
US6009525A (en) | 1997-08-29 | 1999-12-28 | Preview Systems, Inc. | Multi-tier electronic software distribution |
US6606746B1 (en) | 1997-10-16 | 2003-08-12 | Opentv, Inc. | Interactive television system and method for displaying a graphical user interface using insert pictures |
US6219421B1 (en) | 1997-10-24 | 2001-04-17 | Shaul O. Backal | Virtual matrix encryption (VME) and virtual key cryptographic method and apparatus |
US6112181A (en) | 1997-11-06 | 2000-08-29 | Intertrust Technologies Corporation | Systems and methods for matching, selecting, narrowcasting, and/or classifying based on rights management and/or other information |
US20030007568A1 (en) | 1997-11-17 | 2003-01-09 | Dominique Hamery | Packet filtering |
US6409089B1 (en) | 1997-12-10 | 2002-06-25 | Thomson Licensing S.A. | Method for protecting the audio/visual data across the NRSS interface |
WO1999030499A1 (en) | 1997-12-10 | 1999-06-17 | Thomson Consumer Electronics, Inc. | Method for protecting the audio/visual data across the nrss inte rface |
US5991399A (en) | 1997-12-18 | 1999-11-23 | Intel Corporation | Method for securely distributing a conditional use private key to a trusted entity on a remote system |
US6651170B1 (en) | 1998-01-14 | 2003-11-18 | Irdeto B.V. | Integrated circuit and smart card comprising such a circuit |
US6334213B1 (en) | 1998-01-20 | 2001-12-25 | Preview Systems | Merging of separate executable computer programs to form a single executable computer program |
US6587561B1 (en) | 1998-03-04 | 2003-07-01 | Nds Ltd. | Key delivery in a secure broadcasting system |
US6247950B1 (en) | 1998-03-20 | 2001-06-19 | Nds Limited | Secure smart card and tool for removing same |
US6459427B1 (en) | 1998-04-01 | 2002-10-01 | Liberate Technologies | Apparatus and method for web-casting over digital broadcast TV network |
US6285985B1 (en) | 1998-04-03 | 2001-09-04 | Preview Systems, Inc. | Advertising-subsidized and advertising-enabled software |
US6009401A (en) | 1998-04-06 | 1999-12-28 | Preview Systems, Inc. | Relicensing of electronically purchased software |
WO1999054453A1 (en) | 1998-04-21 | 1999-10-28 | Chr. Hansen A/S | Novel genetically modified lactic acid bacteria having modified diacetyl reductase activities |
US6466670B1 (en) | 1998-05-21 | 2002-10-15 | Nds Limited | System for preventing playback of unauthorized digital video recordings |
US6314572B1 (en) | 1998-05-29 | 2001-11-06 | Diva Systems Corporation | Method and apparatus for providing subscription-on-demand services, dependent services and contingent services for an interactive information distribution system |
US6285774B1 (en) | 1998-06-08 | 2001-09-04 | Digital Video Express, L.P. | System and methodology for tracing to a source of unauthorized copying of prerecorded proprietary material, such as movies |
US6629243B1 (en) | 1998-10-07 | 2003-09-30 | Nds Limited | Secure communications system |
US6445797B1 (en) | 1998-12-16 | 2002-09-03 | Secure Choice Llc | Method and system for performing secure electronic digital streaming |
US20020021805A1 (en) | 1999-01-06 | 2002-02-21 | Schumann Robert Wilhelm | Digital content distribution system and method |
US6505299B1 (en) | 1999-03-01 | 2003-01-07 | Sharp Laboratories Of America, Inc. | Digital image scrambling for image coding systems |
US6549563B1 (en) * | 1999-05-28 | 2003-04-15 | Dot Wireless, Inc. | Methods and apparatus for use in generating spreading sequences for multiple modes of communication |
US6654420B1 (en) | 1999-10-29 | 2003-11-25 | Koninklijke Philips Electronics N.V. | Video encoding-method |
WO2001035571A1 (en) | 1999-11-09 | 2001-05-17 | Widevine Technologies | Process and streaming server for encrypting a data stream |
US6449719B1 (en) | 1999-11-09 | 2002-09-10 | Widevine Technologies, Inc. | Process and streaming server for encrypting a data stream |
US6654423B2 (en) | 1999-12-02 | 2003-11-25 | Lg Electronics Inc. | PID/section filter in digital television system |
US20020015498A1 (en) | 2000-02-17 | 2002-02-07 | Houlberg Christian L. | Method which uses a Non-Volatile Memory to store a crypto key and a check word for an encryption device |
US6409080B2 (en) | 2000-03-27 | 2002-06-25 | Kabushiki Kaisha Toshiba | Portable electronic device and loyalty point system |
US20020001385A1 (en) | 2000-06-30 | 2002-01-03 | Hirotsugu Kawada | Recording method and apparatus, optical disk, and computer-readable storage medium |
US20020089410A1 (en) | 2000-11-13 | 2002-07-11 | Janiak Martin J. | Biometric authentication device for use with a personal digital assistant |
US20020104004A1 (en) | 2001-02-01 | 2002-08-01 | Bruno Couillard | Method and apparatus for synchronizing real-time clocks of time stamping cryptographic modules |
US20020141582A1 (en) | 2001-03-28 | 2002-10-03 | Kocher Paul C. | Content security layer providing long-term renewable security |
US6708250B2 (en) | 2001-09-28 | 2004-03-16 | Mosaid Technologies Incorporated | Circuit and method for performing variable width searches in a content addressable memory |
US7406174B2 (en) * | 2003-10-21 | 2008-07-29 | Widevine Technologies, Inc. | System and method for n-dimensional encryption |
US7205912B1 (en) | 2005-10-31 | 2007-04-17 | Seagate Technology Llc | Structured set partitioning and multilevel coding for partial response channels |
Non-Patent Citations (18)
Title |
---|
"Broadband Streaming: Omneon and BSkyB," Omneon Video Networks, Product Announcement, TB-1006-1, 1998, 4 pages. |
"Establishing Interconnectivity Among Various Makers' Products Through Standardization of VOD Protocol," NTT Corporation Press Release, Sep. 27, 2002, http://www.ntt.co.jp/news/news02e/0209/020927.html. |
"Irdeto Access and Optibase Create Strategic Alliance", Press Release, Optibase, Dec. 14, 2000, 2 pages, http://www.optibase.com/html/news/December-14-2000.html (accessed Nov. 13, 2003). |
"Irdeto Access and Optibase Create Strategic Alliance-Dec. 14, 2000," Press Release Irdeto Access, Dec. 14, 2000, 4 pages, http://www.irdetoaccess.com/press/0000041.htm. |
"Telestream and Omneon Team Up to Stream Soccer for BSkyB", Press Release Archives, IBC Show, Amsterdam, Netherlands, Sep. 13, 2001, 2 pgs. |
Bathtrop, Justin, et al., "Coverage and Generalization in an Artificial Immune System," Proceedings of Genetic and Evolutionary Computation Conference (GECCO), 2002, 8 pages. |
Blumenfeld, Steven M., "System Security," Broadcast Engineering magazine, Oct. 2001, 2 pages. |
Cheng, Howard Chi Ho, "Partial Encryption for Image and Video Communication," Department of Computing Science, University of Alberta, Master's Thesis, Fall 1998, 94 pages. |
Eskicioglu, A. et al., "An Overview of Multimedia Content Protection in Consumer Electronics Devices," Signal Processing: Image Communication, Apr. 2001, 16(7):681-699. |
Forrest, S., "Research Projects," Dec. 2, 2003, 3 pages, http://www.cs.unm.edu/~forrest/projects.html. |
Forrest, S., "Research Projects," Dec. 2, 2003, 3 pages, http://www.cs.unm.edu/˜forrest/projects.html. |
Goonatilake, S. et al., Intelligent Systems for Finance and Business (John Wiley & Sons Ltd) 1995, chapters 2-10, pp. 31-173. |
Griwodz, Carsten et al., "Video Protection by Partial Content Corruption," Multimedia and Security Workshop at ACM Multimedia, Bristol, UK, Sep. 1998, 5 pages. |
Hunter, Jane et al., "A Review of Video Streaming Over the Internet," DSTC Technical Report TR97-10, Aug. 1997, 28 pages. |
Schulzrinne, H. et al., "Real Time Streaming Protocol (RTSP)," RFC 2326, Apr. 1998, 86 pages (accessed Mar. 30, 2004). |
Spanos, George et al., "Performance Study of a Selective Encryption Scheme for the Security of Networked, Real-Time Video," Proceedings of the 4th International Conference on Computer Communications and Networks, Las Vegas, NV, Sep. 1995, pp. 2-10. |
Wu, Tsung-Li et al., "Selective Encryption and Watermarking of MPEG Video," International Conference on Image Science, Systems, and Technology, CISST'97, Sep. 1997, 10 pages. |
Yoshida, Kazuhiro, et al., "A Continuous-media Communication Method for Minimizing Playback Interruptions," IS&T/SPlE Conference on Visual Communications and Image Processing, San Jose, California, Jan. 1999, SPIE vol. 3653, pp. 748-757. |
Also Published As
Publication number | Publication date |
---|---|
US7406174B2 (en) | 2008-07-29 |
US20080279369A1 (en) | 2008-11-13 |
US20050084110A1 (en) | 2005-04-21 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US8683218B2 (en) | System and method for N-dimensional encryption | |
EP0658022B1 (en) | Cryptographic key generation using sequential concatenation | |
US9172533B2 (en) | Method and system for securing communication | |
US8085933B2 (en) | Cipher for disk encryption | |
CA2491702C (en) | System and method for generating encryption seed values | |
US5008935A (en) | Efficient method for encrypting superblocks of data | |
KR101324825B1 (en) | Message authentication code pre-computation with applications to secure memory | |
CA2497935C (en) | Stream cipher design with revolving buffers | |
US20020037079A1 (en) | Stream cipher encryption application accelerator and methods thereof | |
WO2019114122A1 (en) | Encryption method for login information, device, electronic device, and medium | |
US8699703B2 (en) | System and method for pseudo-random polymorphic tree construction | |
US11296869B2 (en) | Apparatus and method for unbreakable data encryption | |
Andrade et al. | Lyra2: Efficient password hashing with high security against time-memory trade-offs | |
CN116488814A (en) | FPGA-based data encryption secure computing method | |
Dandass | Using FPGAs to parallelize dictionary attacks for password cracking | |
US7505586B2 (en) | Method for computer-based encryption and decryption of data | |
JP2008205753A (en) | Signal processor | |
US20230222229A1 (en) | Shapeshift data encryption methods and systems | |
CN112966294B (en) | Single-wheel interactive linked list ORAM access method | |
Sion et al. | Conjunctive keyword search on encrypted data with completeness and computational privacy | |
JPS6281145A (en) | Data ciphering system | |
EP4203379A1 (en) | Searchable encryption | |
JP2003500681A (en) | Cryptographic engine using radix conversion, logical operation and pseudo-random number generator for data array to increase dispersibility of cipher text | |
Sumongkayothin et al. | Matrix based oblivious random access machine for constrained device | |
CN112713988A (en) | No-key encryption and decryption method, system, terminal and medium based on identity card number |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: WIDEVINE TECHNOLOGIES, INC., WASHINGTONFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:PALMER, TOMAS EARL;REEL/FRAME:021805/0073Effective date: 20081107 |
|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:WIDEVINE TECHNOLOGIES, INC.;REEL/FRAME:026479/0572Effective date: 20110608 |
|
FEPP | Fee payment procedure |
Free format text: PAYOR NUMBER ASSIGNED (ORIGINAL EVENT CODE: ASPN); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYFree format text: PAYER NUMBER DE-ASSIGNED (ORIGINAL EVENT CODE: RMPN); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551)Year of fee payment: 4 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044101/0299Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 8TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1552); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 8 |
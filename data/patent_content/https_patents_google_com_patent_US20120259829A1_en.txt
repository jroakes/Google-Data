US20120259829A1 - Generating related input suggestions - Google Patents
Generating related input suggestions Download PDFInfo
- Publication number
- US20120259829A1 US20120259829A1 US13/517,241 US200913517241A US2012259829A1 US 20120259829 A1 US20120259829 A1 US 20120259829A1 US 200913517241 A US200913517241 A US 200913517241A US 2012259829 A1 US2012259829 A1 US 2012259829A1
- Authority
- US
- United States
- Prior art keywords
- query
- label
- input
- textual input
- identifying
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Abandoned
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/24—Querying
- G06F16/245—Query processing
- G06F16/2453—Query optimisation
- G06F16/24534—Query rewriting; Transformation
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/953—Querying, e.g. by the use of web search engines
- G06F16/9535—Search customisation based on user profiles and personalisation
Definitions
- This specification relates to digital data processing, and in particular, to computer-implemented search services.
- a conventional search engine can include a query input field that receives an input search query.
- a conventional search service can provide search query suggestions for the input search query.
- a user can select a search query suggestion for use as a search query.
- Some search services determine search query suggestions by matching the input search query with search query suggestions.
- the search query suggestions that are provided by these search services are typically partial textual matches of the input search query, e.g., where the input search query is a substring of each of the search query suggestions.
- the quality of the search query suggestions can depend on the amount, precision, and accuracy of data that is used to generate the search query suggestions.
- This specification describes technologies relating to generation of search query suggestions.
- one aspect of the subject matter described in this specification can be embodied in methods that include the actions of receiving query and label data, the data including a plurality of queries and, for each query, specifying one or more labels associated with the query, where the queries are n-grams submitted by users of a search engine and the labels identify a category or topic in which an associated query belongs; generating a suggestion resource, including: identifying unique labels in the query and label data; and for each unique label: indexing the unique label; identifying in the query and label data, each query associated with the unique label; and associating, in the suggestion resource, the identified queries with the unique label; and storing the suggestion resource in a computer-readable medium.
- Other embodiments of this aspect include corresponding systems, apparatus, and computer program products.
- the method further includes receiving a textual input entered in a search engine query input field by a user; and identifying input suggestions using the query and label data including: comparing the textual input to the queries in the query and label data to identify a first query that the textual input represents; and identifying the one or more labels that are associated with the first query as being selectable alternatives to the textual input.
- the input suggestions are identified as characters are entered in the search engine query input field and before a complete query is submitted for a search.
- the method further includes receiving a textual input entered in a search engine query input field by a user; and identifying input suggestions using the suggestion resource including: comparing the textual input to the indexed labels in the suggestion resource to identify a first indexed label that the textual input represents; and identifying the one or more queries associated with the first indexed label as being selectable alternatives to the textual input.
- the method further includes comparing each query identified as being a selectable alternative to the queries in the query and label data to identify a first query that is textually identical to the query identified as being a selectable alternative; and identifying the one or more labels that are associated with the first query as being selectable alternatives to the textual input.
- the textual input is not a substring of any of the selectable alternatives.
- the textual input is a prefix, midfix, or suffix of at least one of the selectable alternatives.
- Identifying the first indexed label includes: determining whether the textual input is a prefix of the first indexed label and determining that the first indexed label is represented by the textual input when the textual input is a prefix of the first index label.
- the queries are associated with at least one label that is not a substring of the associated query.
- another aspect of the subject matter described in this specification can be embodied in methods that include the actions of receiving a textual input entered in a search engine query input field by a user; and identifying input suggestions using a suggestion resource, the suggestion resource including an index of labels, each label being associated with one or more queries and identifying a category or topic in which an associated query belongs; where the identifying includes: comparing the textual input to the indexed labels in the suggestion resource to identify a first indexed label that the textual input represents; and identifying the one or more queries associated with the first indexed label as being selectable alternatives to the textual input.
- Other embodiments of this aspect include corresponding systems, apparatus, and computer program products.
- Providing related input suggestions reduces how much user interaction is required to obtain suggestions for an input search query and perform searches using one or more of the suggestions.
- providing related suggestions can increase the precision, accuracy, and coverage of searches by refining a query before the query is submitted and capturing suggestions that are directed to, e.g., particularly relevant to, a particular topic but are not necessarily textual matches of the input search query.
- FIG. 1 is a block diagram illustrating an example of a flow of data in some implementations of a system that generates input suggestions.
- FIG. 2 is a block diagram of an example suggestion server.
- FIG. 3 includes block diagrams illustrating examples of the first suggestion resource and the second suggestion resource.
- FIG. 4 is a flow chart showing an example process for generating a suggestion resource.
- FIG. 5 is a flow chart showing an example process for identifying input suggestions.
- FIG. 6 is a flow chart showing another example process for identifying input suggestions.
- FIG. 7 is a flow chart showing another example process for identifying input suggestions.
- FIG. 1 is a block diagram illustrating an example of a flow of data in some implementations of a system that generates input suggestions.
- a user 110 provides input 120 to a search engine query input field presented by a client 130 .
- the input 120 is textual input that includes one or more n-grams.
- An n-gram is a sequence of n consecutive tokens, e.g., characters or words.
- An n-gram has an order, which is a number of tokens in the n-gram. For example, a 1-gram (or unigram) includes one token; a 2-gram (or bi-gram) includes two tokens. Examples of a 2-gram include “at”, which includes two characters, and “all terrain”, which includes 2 words.
- the client 130 sends to a search service 140 a request for selectable alternatives of the input 120 .
- the request includes the input 120 .
- the client 130 sends the request after receiving each token of a textual input, e.g., after each character of a first search query or each word of a first search query, is received at the search engine query input field.
- selectable alternatives can be provided to the user as the user types each token of the textual input, and before a complete query is submitted for a search.
- the client 130 implements a delay, waiting a predetermined amount of time before automatically making the request to the search service 140 .
- a module 142 e.g., a software script, installed on the search service 140 receives the input 120 and determines selectable alternatives to the input 120 using query and label data 150 .
- the module 142 receives the query and label data 150 .
- the query and label data 150 includes a collection of queries. For each query, the query and label data 150 also specifies one or more labels that are associated with the query.
- a label can identify a category or topic in which a query belongs. Conventional techniques can be used to generate the query and label data 150 , and the query and label data 150 can be provided to the search service 140 .
- the query and label data 150 is generated using web log analysis.
- web logs can be parsed to extract the queries, e.g., n-grams submitted by users of a search engine.
- labels can be associated with each of the extracted queries.
- a collection of queries can include the n-grams “men's clothing”, “women's clothing”, “jewelry”, “used cars”, “toys”, “groceries”, “celery”, “broccoli”, and “carrots”.
- An example label that can be associated with each of the n-grams “men's clothing”, “women's clothing”, “jewelry”, “used cars”, “toys”, and “groceries”, is “shopping”.
- an example label that can be associated with each of the n-grams “groceries”, “celery”, “broccoli”, and “carrots”, is “food”.
- an example label “vegetables” can also be associated with the n-grams “celery”, “broccoli”, and “carrots”.
- the module 142 can receive the query and label data 150 and generate a first suggestion resource 160 and a second suggestion resource 170 , and the module 142 can also use the first suggestion resource 160 and the second suggestion resource 170 to determine selectable alternatives to the input 120 .
- the first suggestion resource 160 is a representation of the query and label data 150 .
- the first suggestion resource 160 and the second suggestion resource 170 can be represented using a same type of data structure or format to facilitate processing.
- the query and label data 150 and the first suggestion resource 160 can be used interchangeably, e.g., depending on processing efficiency and needs.
- FIG. 2 is a block diagram of an example suggestion server, e.g., an example of module 142 .
- the suggestion server includes a data processing submodule 210 , a suggestion submodule 220 , and a search submodule 230 .
- the data processing submodule 210 receives and processes the query and label data 150 to identify queries and labels and provide the identified queries and labels to the suggestion submodule 220 that in turn, generates the first suggestion resource 160 and the second suggestion resource 170 .
- FIG. 3 includes block diagrams illustrating examples of the first suggestion resource 160 and the second suggestion resource 170 .
- the first suggestion resource 160 and second suggestion resource 170 can be represented using different types of data structures or formats.
- Example formats of the suggestion resources include Extensible Markup Language (XML), JavaScript Object Notation (JSON), line-by-line, and protocol buffers.
- the module 142 parses the query and label data 150 to identify the queries and labels associated with each of the queries.
- each query and label is a sequence of text that includes one or more n-grams.
- the data processing submodule 210 receives query and label data that includes the queries “A”, “B”, and “C” and the labels “D”, “E”, “F”, “G”, and “H”.
- the data processing submodule 210 identifies each query and labels associated with the query. For example, data processing submodule 210 processes the query and label data 150 to identify that “A” is a query and is associated with-the labels “D”, “E”, and “F”; “B” is a query and is associated with the labels “D” and “G”; and “C” is a query and is associated with the labels “H” and “E”.
- the data processing submodule 210 provides the identified queries and their respective associated labels to the suggestion submodule 220 .
- the suggestion submodule 220 generates the first suggestion 160 resource.
- the suggestion submodule 220 generates an index, where each of the indices in the index is a query. In FIG. 3 , the indices are represented by the queries “A”, “B”, and “C”.
- the suggestion submodule 220 associates each of the indices with one or more labels specified as being associated with the respective index.
- index represented by query “A” is associated with the labels “D”, “E”, and “F”
- index represented by query “B” is associated with the labels “D” and “G”
- index represented by query “C” is associated with the labels “H” and “E”.
- the first suggestion resource 160 is represented using a protocol buffer.
- a protocol buffer is a language and platform neutral, extensible technique for serializing structured data, e.g., by encoding structured data according to Google's data interchange format, Protocol Buffers.
- the module 142 identifies unique labels, e.g., each different label included in the query and label data 150 , to generate an index of unique labels.
- the query and label data 150 or the first suggestion resource 160 may include multiple entries of the label “D”, because the label “D” is associated with both queries “A” and “B”, only one of the indices in the second suggestion resource 170 is represented by the label “D”.
- the unique labels “D”, “E”, “F”, “G”, and “H” are identified and used to generate an index of the second suggestion resource 170 .
- the unique labels are directly identified by the data processing submodule 210 from the query and label data 150 .
- the unique labels are identified from the first suggestion resource 160 .
- the generation of the second suggestion resource 170 can be referred to as “reverse mapping” the queries to the unique labels.
- each query associated with the unique label is also identified from the query and label data 150 or the first suggestion resource 160 .
- Each query identified as being associated with a label is associated, in the second suggestion resource 170 , with the index that represents the associated label.
- the index represented by the label “D” is associated with the queries “A” and “B”; the index represented by the label “E” is associated with the queries “A” and “C”; the index represented by the label “F” is associated with the query “A”; the index represented by the label “G” is associated with the query “B”; and the index represented by the label “H” is associated with the query “C”.
- each query from the query and label data 150 , or the first suggestion resource 160 can also be used to generate a corresponding label and an index, in the second suggestion resource 170 , represented by the corresponding label.
- Each of these indices is associated, in the second suggestion resource 170 , with the query from which the index was generated.
- the index represented by the label “A” is associated with the query “A”
- the index represented by the label “B” is associated with the query “B”
- the index represented by the label “C” is associated with the query “C”.
- the search submodule 230 can identify input suggestions that can be used as selectable alternatives to the input query.
- the search submodule 230 can search the query and label data 150 , the first suggestion resource 160 , and the second suggestion resource 170 to identify the input suggestions, e.g., related input suggestions.
- the input suggestions can be referred to as “related” because they are not necessarily partial textual matches of the textual input, e.g., a prefix, midfix, or suffix of the textual input, but are related to the textual input, e.g., identify or belong to a category or topic in which the textual input belongs.
- one or more of the input suggestions are partial textual matches of the textual input.
- the search submodule 230 compares the textual input to the query and label data 150 or the first suggestion resource 160 to identify queries that the textual input represents.
- a query can be considered to be representative of the textual input, for example, if the query is textually identical to the textual input, or a partial match of the textual input, e.g., the textual input is a substring of the query (e.g., a prefix, midfix, or suffix of the query) or the query is an expansion of the textual input (e.g., an acronym, an abbreviation).
- a query can be considered representative of the textual input if the query is a translation or transliteration of the textual input.
- the labels that are associated with each of the identified queries are identified as being selectable alternatives to the textual input.
- the search submodule 230 compares the textual input to the indexed labels in the second suggestion resource 170 to identify indexed labels that the textual input represents.
- an indexed label can be considered to be representative of the textual input, for example, if the indexed label is textually identical to the textual input, or a partial match of the textual input, e.g., the textual input is a substring of the indexed label (e.g., a prefix, midfix, or suffix of the indexed label) or the indexed label is an expansion of the textual input (e.g., an acronym, an abbreviation).
- a label can be considered representative of the textual input if the label is a translation or transliteration of the textual input.
- the queries that are associated with each of the indexed labels are identified as being selectable alternatives to the textual input.
- Additional selectable alternatives can be identified using the queries initially identified as being selectable alternatives to the textual input.
- query “A” can be representative of a textual input (e.g., “sho”) entered in a search engine query input field by a user.
- the search submodule 230 compares the textual input to the queries in the first suggestion resource 150 , identifies that query “A” is representative of the textual input, and further identifies the labels “D” (e.g., groceries), “E” (e.g., used cars), and “F” (e.g., “men's clothing”) associated with query “A” as being selectable alternatives to query “A”.
- D e.g., groceries
- E e.g., used cars
- F e.g., “men's clothing”
- search submodule 230 can search the second resource 170 by comparing the textual input to the labels in the second suggestion resource, identifying that label “G” (e.g., “shops”) is representative of the textual input, and further identifying query “B” (e.g., “Mail-order flowers”) as being a selectable alternative to query “A”.
- label “G” e.g., “shops”
- query “B” e.g., “Mail-order flowers”
- the search submodule 230 can also compare the queries identified as being selectable alternatives to the textual input, e.g., query “B”, to the query and label data 150 or the first suggestion resource 160 to identify a first query that is textually identical.
- the labels associated with the first query can be identified as being selectable alternatives to the textual input.
- the index represented by query “B” in the first suggestion resource 160 can be identified, and the labels associated with query “B”, i.e., labels “D” and “G”, can be identified as being selectable alternatives to the textual input.
- label “D” can be the label “florists”
- label “G” can be the label “flower shops”.
- the selectable alternatives “groceries”, “used cars”, “men's clothing”, “Mail-order flowers”, “florists”, and “flower shops” can be identified for the textual input “sho” (which may represent “shopping”).
- “shopping” and “shops”, e.g., queries that correspond to query “A” and label “G”, respectively, are also identified as being selectable alternatives to the textual input “sho”.
- the module 142 sends the selectable alternatives to the client 130 .
- the selectable alternatives are further processed such that only a subset of the selectable alternatives, is provided to the client 130 . For example, duplicates, i.e., textually identical selectable alternatives, can be removed.
- each selectable alternative can be ranked based on rankings, e.g., scores, specified in the query and label data 150 . In some implementations, the ranking is related to the quality of the selectable alternative, e.g., how relevant the selectable alternative is to a query.
- FIG. 4 is a flow chart showing an example process for generating a suggestion resource.
- the process can be implemented in the module 142 .
- the process includes receiving query and label data, the data including a plurality of queries and, for each query, specifying one or more labels associated with the query ( 410 ).
- the queries are n-grams submitted by users of a search engine and the labels identify a category or topic in which an associated query belongs.
- a suggestion resource (e.g., second suggestion resource 170 ) is generated.
- Generating the suggestion resource includes identifying unique labels in the query and label data ( 420 ).
- Generating the suggestion resource also includes, for each unique label, indexing the unique label; identifying in the query and label data, each query associated with the unique label; and associating, in the suggestion resource, the identified queries with the unique label ( 430 ).
- the process also includes storing the suggestion resource in a computer-readable medium ( 440 ).
- FIG. 5 is a flow chart showing an example process for identifying input suggestions.
- the process can be implemented in the module 142 .
- the process for identifying input suggestions can be performed after the process described with respect to FIG. 4 .
- the process includes receiving a textual input entered in a search engine query input field by a user ( 510 ).
- Input suggestions are identified using the query and label data. Identifying the input suggestions includes comparing the textual input to the queries in the query and label data to identify a first query that the textual input represents ( 520 ). Identifying the input suggestions also includes identifying the one or more labels that are associated with the first query as being selectable alternatives to the textual input ( 530 ).
- FIG. 6 is a flow chart showing another example process for identifying input suggestions.
- the process can be implemented in the module 142 .
- the process for identifying input suggestions can be performed after the process described with respect to FIG. 4 .
- the process includes receiving a textual input entered in a search engine query input field by a user ( 610 ).
- Input suggestions are identified using a suggestion resource. Identifying the input suggestions includes comparing the textual input to indexed labels in the suggestion resource to identify a first indexed label that the textual input represents ( 620 ). Identifying the input suggestions also includes identifying one or more queries associated with the first indexed label as being selectable alternatives to the textual input ( 630 ).
- FIG. 7 is a flow chart showing another example process for identifying input suggestions.
- the process can be implemented in the module 142 .
- the process for identifying input suggestions can be performed after the process described with respect to FIG. 6 .
- the process includes comparing each query identified as being a selectable alternative to the queries in the query and label data to identify a first query that is textually identical to the query identified as being a selectable alternative ( 710 ).
- the process also includes identifying the one or more labels that are associated with the first query as being selectable alternatives to the textual input ( 720 ).
- Embodiments of the subject matter and the functional operations described in this specification can be implemented in digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them.
- Embodiments of the subject matter described in this specification can be implemented as one or more computer program products, i.e., one or more modules of computer program instructions encoded on a tangible program carrier for execution by, or to control the operation of, data processing apparatus.
- the tangible program carrier can be a computer-readable medium.
- the computer-readable medium can be a machine-readable storage device, a machine-readable storage substrate, a memory device, or a combination of one or more of them.
- data processing apparatus encompasses all apparatus, devices, and machines for processing data, including by way of example a programmable processor, a computer, or multiple processors or computers.
- the apparatus can include, in addition to hardware, code that creates an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, or a combination of one or more of them.
- a computer program (also known as a program, software, software application, script, or code) can be written in any form of programming language, including compiled or interpreted languages, or declarative or procedural languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, or other unit suitable for use in a computing environment.
- a computer program does not necessarily correspond to a file in a file system.
- a program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub-programs, or portions of code).
- a computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
- the processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform functions by operating on input data and generating output.
- the processes and logic flows can also be performed by, and apparatus can also be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).
- processors suitable for the execution of a computer program include, by way of example, both general and special purpose microprocessors, and any one or more processors of any kind of digital computer.
- a processor will receive instructions and data from a read-only memory or a random access memory or both.
- the essential elements of a computer are a processor for performing instructions and one or more memory devices for storing instructions and data.
- a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks.
- mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks.
- a computer need not have such devices.
- a computer can be embedded in another device, e.g., a mobile telephone, a personal digital assistant (PDA), a mobile audio or video player, a game console, a Global Positioning System (GPS) receiver, to name just a few.
- PDA personal digital assistant
- GPS Global Positioning System
- Computer-readable media suitable for storing computer program instructions and data include all forms of non-volatile memory, media and memory devices, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks; magneto-optical disks; and CD-ROM and DVD-ROM disks.
- semiconductor memory devices e.g., EPROM, EEPROM, and flash memory devices
- magnetic disks e.g., internal hard disks or removable disks
- magneto-optical disks e.g., CD-ROM and DVD-ROM disks.
- the processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
- embodiments of the subject matter described in this specification can be implemented on a computer having a display device, e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor, for displaying information to the user and a keyboard and a pointing device, e.g., a mouse or a trackball, by which the user can provide input to the computer.
- a display device e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor
- keyboard and a pointing device e.g., a mouse or a trackball
- Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form, including acoustic, speech, or tactile input.
Abstract
Methods, systems, and apparatus, including computer program products, for generating search query suggestions. In one aspect, a method includes receiving query and label data, the data including a plurality of queries and, for each query, specifying one or more labels associated with the query, where the queries are n grams submitted by users of a search engine and the labels identify a category or topic in which an associated query belongs; generating a suggestion resource, including: identifying unique labels in the query and label data; and for each unique label: indexing the unique label; identifying in the query and label data, each query associated with the unique label; and associating, in the suggestion resource, the identified queries with the unique label; and storing the suggestion resource in a computer readable medium.
Description
- This specification relates to digital data processing, and in particular, to computer-implemented search services.
- Conventional search services provide search query suggestions as alternatives to input search queries. For example, a conventional search engine can include a query input field that receives an input search query. In response to receiving the input search query, a conventional search service can provide search query suggestions for the input search query. A user can select a search query suggestion for use as a search query.
- Some search services determine search query suggestions by matching the input search query with search query suggestions. In particular, the search query suggestions that are provided by these search services are typically partial textual matches of the input search query, e.g., where the input search query is a substring of each of the search query suggestions. The quality of the search query suggestions can depend on the amount, precision, and accuracy of data that is used to generate the search query suggestions.
- This specification describes technologies relating to generation of search query suggestions.
- In general, one aspect of the subject matter described in this specification can be embodied in methods that include the actions of receiving query and label data, the data including a plurality of queries and, for each query, specifying one or more labels associated with the query, where the queries are n-grams submitted by users of a search engine and the labels identify a category or topic in which an associated query belongs; generating a suggestion resource, including: identifying unique labels in the query and label data; and for each unique label: indexing the unique label; identifying in the query and label data, each query associated with the unique label; and associating, in the suggestion resource, the identified queries with the unique label; and storing the suggestion resource in a computer-readable medium. Other embodiments of this aspect include corresponding systems, apparatus, and computer program products.
- The foregoing and following embodiments can optionally include one or more of the following features. The method further includes receiving a textual input entered in a search engine query input field by a user; and identifying input suggestions using the query and label data including: comparing the textual input to the queries in the query and label data to identify a first query that the textual input represents; and identifying the one or more labels that are associated with the first query as being selectable alternatives to the textual input. The input suggestions are identified as characters are entered in the search engine query input field and before a complete query is submitted for a search.
- The method further includes receiving a textual input entered in a search engine query input field by a user; and identifying input suggestions using the suggestion resource including: comparing the textual input to the indexed labels in the suggestion resource to identify a first indexed label that the textual input represents; and identifying the one or more queries associated with the first indexed label as being selectable alternatives to the textual input. The method further includes comparing each query identified as being a selectable alternative to the queries in the query and label data to identify a first query that is textually identical to the query identified as being a selectable alternative; and identifying the one or more labels that are associated with the first query as being selectable alternatives to the textual input.
- The textual input is not a substring of any of the selectable alternatives. The textual input is a prefix, midfix, or suffix of at least one of the selectable alternatives. Identifying the first indexed label includes: determining whether the textual input is a prefix of the first indexed label and determining that the first indexed label is represented by the textual input when the textual input is a prefix of the first index label. The queries are associated with at least one label that is not a substring of the associated query.
- In general, another aspect of the subject matter described in this specification can be embodied in methods that include the actions of receiving a textual input entered in a search engine query input field by a user; and identifying input suggestions using a suggestion resource, the suggestion resource including an index of labels, each label being associated with one or more queries and identifying a category or topic in which an associated query belongs; where the identifying includes: comparing the textual input to the indexed labels in the suggestion resource to identify a first indexed label that the textual input represents; and identifying the one or more queries associated with the first indexed label as being selectable alternatives to the textual input. Other embodiments of this aspect include corresponding systems, apparatus, and computer program products.
- Particular embodiments of the subject matter described in this specification can be implemented to realize one or more of the following advantages. Providing related input suggestions reduces how much user interaction is required to obtain suggestions for an input search query and perform searches using one or more of the suggestions. In addition to saving time, providing related suggestions can increase the precision, accuracy, and coverage of searches by refining a query before the query is submitted and capturing suggestions that are directed to, e.g., particularly relevant to, a particular topic but are not necessarily textual matches of the input search query.
- The details of one or more embodiments of the subject matter described in this specification are set forth in the accompanying drawings and the description below. Other features, aspects, and advantages of the subject matter will become apparent from the description, the drawings, and the claims.
-
FIG. 1 is a block diagram illustrating an example of a flow of data in some implementations of a system that generates input suggestions. -
FIG. 2 is a block diagram of an example suggestion server. -
FIG. 3 includes block diagrams illustrating examples of the first suggestion resource and the second suggestion resource. -
FIG. 4 is a flow chart showing an example process for generating a suggestion resource. -
FIG. 5 is a flow chart showing an example process for identifying input suggestions. -
FIG. 6 is a flow chart showing another example process for identifying input suggestions. -
FIG. 7 is a flow chart showing another example process for identifying input suggestions. - Like reference numbers and designations in the various drawings indicate like elements.
-
FIG. 1 is a block diagram illustrating an example of a flow of data in some implementations of a system that generates input suggestions. Auser 110 providesinput 120 to a search engine query input field presented by aclient 130. Theinput 120 is textual input that includes one or more n-grams. - An n-gram is a sequence of n consecutive tokens, e.g., characters or words. An n-gram has an order, which is a number of tokens in the n-gram. For example, a 1-gram (or unigram) includes one token; a 2-gram (or bi-gram) includes two tokens. Examples of a 2-gram include “at”, which includes two characters, and “all terrain”, which includes 2 words.
- The
client 130 sends to a search service 140 a request for selectable alternatives of theinput 120. The request includes theinput 120. In some implementations, theclient 130 sends the request after receiving each token of a textual input, e.g., after each character of a first search query or each word of a first search query, is received at the search engine query input field. As a result, selectable alternatives can be provided to the user as the user types each token of the textual input, and before a complete query is submitted for a search. In some alternative implementations, theclient 130 implements a delay, waiting a predetermined amount of time before automatically making the request to thesearch service 140. - A
module 142, e.g., a software script, installed on thesearch service 140 receives theinput 120 and determines selectable alternatives to theinput 120 using query andlabel data 150. In particular, themodule 142 receives the query andlabel data 150. The query andlabel data 150 includes a collection of queries. For each query, the query andlabel data 150 also specifies one or more labels that are associated with the query. A label can identify a category or topic in which a query belongs. Conventional techniques can be used to generate the query andlabel data 150, and the query andlabel data 150 can be provided to thesearch service 140. - In some implementations, the query and
label data 150 is generated using web log analysis. For example, web logs can be parsed to extract the queries, e.g., n-grams submitted by users of a search engine. Then, labels can be associated with each of the extracted queries. For example, a collection of queries can include the n-grams “men's clothing”, “women's clothing”, “jewelry”, “used cars”, “toys”, “groceries”, “celery”, “broccoli”, and “carrots”. An example label that can be associated with each of the n-grams “men's clothing”, “women's clothing”, “jewelry”, “used cars”, “toys”, and “groceries”, is “shopping”. As another example, an example label that can be associated with each of the n-grams “groceries”, “celery”, “broccoli”, and “carrots”, is “food”. In addition, an example label “vegetables” can also be associated with the n-grams “celery”, “broccoli”, and “carrots”. - As described in further detail below with respect to
FIGS. 2 and 3 , themodule 142 can receive the query andlabel data 150 and generate afirst suggestion resource 160 and asecond suggestion resource 170, and themodule 142 can also use thefirst suggestion resource 160 and thesecond suggestion resource 170 to determine selectable alternatives to theinput 120. In particular, thefirst suggestion resource 160 is a representation of the query andlabel data 150. Thefirst suggestion resource 160 and thesecond suggestion resource 170 can be represented using a same type of data structure or format to facilitate processing. The query andlabel data 150 and thefirst suggestion resource 160 can be used interchangeably, e.g., depending on processing efficiency and needs. -
FIG. 2 is a block diagram of an example suggestion server, e.g., an example ofmodule 142. The suggestion server includes adata processing submodule 210, asuggestion submodule 220, and asearch submodule 230. Thedata processing submodule 210 receives and processes the query andlabel data 150 to identify queries and labels and provide the identified queries and labels to the suggestion submodule 220 that in turn, generates thefirst suggestion resource 160 and thesecond suggestion resource 170. -
FIG. 3 includes block diagrams illustrating examples of thefirst suggestion resource 160 and thesecond suggestion resource 170. Thefirst suggestion resource 160 andsecond suggestion resource 170 can be represented using different types of data structures or formats. Example formats of the suggestion resources include Extensible Markup Language (XML), JavaScript Object Notation (JSON), line-by-line, and protocol buffers. Themodule 142 parses the query andlabel data 150 to identify the queries and labels associated with each of the queries. - In the example of
FIG. 3 , “A”, “B”, and “C” represent queries. In addition, “D”, “E”, “F”, “G”, “H” represent labels. Note that, in the example, the queries and labels are represented by a single capital letter. In practice, each query and label is a sequence of text that includes one or more n-grams. - The
data processing submodule 210 receives query and label data that includes the queries “A”, “B”, and “C” and the labels “D”, “E”, “F”, “G”, and “H”. Thedata processing submodule 210 identifies each query and labels associated with the query. For example,data processing submodule 210 processes the query andlabel data 150 to identify that “A” is a query and is associated with-the labels “D”, “E”, and “F”; “B” is a query and is associated with the labels “D” and “G”; and “C” is a query and is associated with the labels “H” and “E”. - The
data processing submodule 210 provides the identified queries and their respective associated labels to thesuggestion submodule 220. The suggestion submodule 220 generates thefirst suggestion 160 resource. In some implementations, thesuggestion submodule 220 generates an index, where each of the indices in the index is a query. InFIG. 3 , the indices are represented by the queries “A”, “B”, and “C”. The suggestion submodule 220 associates each of the indices with one or more labels specified as being associated with the respective index. For example, the index represented by query “A” is associated with the labels “D”, “E”, and “F”; the index represented by query “B” is associated with the labels “D” and “G”; and the index represented by query “C” is associated with the labels “H” and “E”. - In some implementations, the
first suggestion resource 160 is represented using a protocol buffer. A protocol buffer is a language and platform neutral, extensible technique for serializing structured data, e.g., by encoding structured data according to Google's data interchange format, Protocol Buffers. - To generate the
second suggestion resource 170, themodule 142 identifies unique labels, e.g., each different label included in the query andlabel data 150, to generate an index of unique labels. As an example, although the query andlabel data 150 or thefirst suggestion resource 160 may include multiple entries of the label “D”, because the label “D” is associated with both queries “A” and “B”, only one of the indices in thesecond suggestion resource 170 is represented by the label “D”. In the example ofFIG. 3 , the unique labels “D”, “E”, “F”, “G”, and “H” are identified and used to generate an index of thesecond suggestion resource 170. In some implementations, the unique labels are directly identified by thedata processing submodule 210 from the query andlabel data 150. In some alternative implementations, the unique labels are identified from thefirst suggestion resource 160. When the unique labels are identified from thefirst suggestion resource 160, the generation of thesecond suggestion resource 170 can be referred to as “reverse mapping” the queries to the unique labels. - In particular, each query associated with the unique label is also identified from the query and
label data 150 or thefirst suggestion resource 160. Each query identified as being associated with a label is associated, in thesecond suggestion resource 170, with the index that represents the associated label. In the example ofFIG. 3 , the index represented by the label “D” is associated with the queries “A” and “B”; the index represented by the label “E” is associated with the queries “A” and “C”; the index represented by the label “F” is associated with the query “A”; the index represented by the label “G” is associated with the query “B”; and the index represented by the label “H” is associated with the query “C”. - In some implementations, each query from the query and
label data 150, or thefirst suggestion resource 160, can also be used to generate a corresponding label and an index, in thesecond suggestion resource 170, represented by the corresponding label. Each of these indices is associated, in thesecond suggestion resource 170, with the query from which the index was generated. In the example ofFIG. 3 , the index represented by the label “A” is associated with the query “A”, the index represented by the label “B” is associated with the query “B”, and the index represented by the label “C” is associated with the query “C”. - When the
module 142 receives a request for input suggestions, including a textual input entered in a search engine query input field by a user, thesearch submodule 230 can identify input suggestions that can be used as selectable alternatives to the input query. Thesearch submodule 230 can search the query andlabel data 150, thefirst suggestion resource 160, and thesecond suggestion resource 170 to identify the input suggestions, e.g., related input suggestions. The input suggestions can be referred to as “related” because they are not necessarily partial textual matches of the textual input, e.g., a prefix, midfix, or suffix of the textual input, but are related to the textual input, e.g., identify or belong to a category or topic in which the textual input belongs. In some implementations, one or more of the input suggestions are partial textual matches of the textual input. - In some implementations, the
search submodule 230 compares the textual input to the query andlabel data 150 or thefirst suggestion resource 160 to identify queries that the textual input represents. A query can be considered to be representative of the textual input, for example, if the query is textually identical to the textual input, or a partial match of the textual input, e.g., the textual input is a substring of the query (e.g., a prefix, midfix, or suffix of the query) or the query is an expansion of the textual input (e.g., an acronym, an abbreviation). As other examples, a query can be considered representative of the textual input if the query is a translation or transliteration of the textual input. The labels that are associated with each of the identified queries are identified as being selectable alternatives to the textual input. - In some implementations, the
search submodule 230 compares the textual input to the indexed labels in thesecond suggestion resource 170 to identify indexed labels that the textual input represents. As similarly described above with respect to queries being representative of the textual input, an indexed label can be considered to be representative of the textual input, for example, if the indexed label is textually identical to the textual input, or a partial match of the textual input, e.g., the textual input is a substring of the indexed label (e.g., a prefix, midfix, or suffix of the indexed label) or the indexed label is an expansion of the textual input (e.g., an acronym, an abbreviation). As other examples, a label can be considered representative of the textual input if the label is a translation or transliteration of the textual input. The queries that are associated with each of the indexed labels are identified as being selectable alternatives to the textual input. - Additional selectable alternatives can be identified using the queries initially identified as being selectable alternatives to the textual input. In some implementations, additional iterations of searching the
first resource 160 to identify first labels as selectable alternatives, searching thesecond resource 170 to identify first queries associated with the first labels as being selectable alternatives, and again searching thefirst resource 160 to identify second labels that are associated with the first queries as being selectable alternatives, i.e., the additional selectable alternatives. - As an example, in
FIG. 3 , query “A” (e.g., “shopping”) can be representative of a textual input (e.g., “sho”) entered in a search engine query input field by a user. Thesearch submodule 230 compares the textual input to the queries in thefirst suggestion resource 150, identifies that query “A” is representative of the textual input, and further identifies the labels “D” (e.g., groceries), “E” (e.g., used cars), and “F” (e.g., “men's clothing”) associated with query “A” as being selectable alternatives to query “A”. - In addition, the
search submodule 230 can search thesecond resource 170 by comparing the textual input to the labels in the second suggestion resource, identifying that label “G” (e.g., “shops”) is representative of the textual input, and further identifying query “B” (e.g., “Mail-order flowers”) as being a selectable alternative to query “A”. - The
search submodule 230 can also compare the queries identified as being selectable alternatives to the textual input, e.g., query “B”, to the query andlabel data 150 or thefirst suggestion resource 160 to identify a first query that is textually identical. The labels associated with the first query can be identified as being selectable alternatives to the textual input. For example, the index represented by query “B” in thefirst suggestion resource 160 can be identified, and the labels associated with query “B”, i.e., labels “D” and “G”, can be identified as being selectable alternatives to the textual input. As an example, label “D” can be the label “florists” and label “G” can be the label “flower shops”. - As a result, the selectable alternatives “groceries”, “used cars”, “men's clothing”, “Mail-order flowers”, “florists”, and “flower shops” can be identified for the textual input “sho” (which may represent “shopping”). In some implementations, “shopping” and “shops”, e.g., queries that correspond to query “A” and label “G”, respectively, are also identified as being selectable alternatives to the textual input “sho”.
- The
module 142 sends the selectable alternatives to theclient 130. In some implementations, the selectable alternatives are further processed such that only a subset of the selectable alternatives, is provided to theclient 130. For example, duplicates, i.e., textually identical selectable alternatives, can be removed. As another example, each selectable alternative can be ranked based on rankings, e.g., scores, specified in the query andlabel data 150. In some implementations, the ranking is related to the quality of the selectable alternative, e.g., how relevant the selectable alternative is to a query. -
FIG. 4 is a flow chart showing an example process for generating a suggestion resource. The process can be implemented in themodule 142. The process includes receiving query and label data, the data including a plurality of queries and, for each query, specifying one or more labels associated with the query (410). The queries are n-grams submitted by users of a search engine and the labels identify a category or topic in which an associated query belongs. A suggestion resource (e.g., second suggestion resource 170) is generated. Generating the suggestion resource includes identifying unique labels in the query and label data (420). Generating the suggestion resource also includes, for each unique label, indexing the unique label; identifying in the query and label data, each query associated with the unique label; and associating, in the suggestion resource, the identified queries with the unique label (430). The process also includes storing the suggestion resource in a computer-readable medium (440). -
FIG. 5 is a flow chart showing an example process for identifying input suggestions. The process can be implemented in themodule 142. The process for identifying input suggestions can be performed after the process described with respect toFIG. 4 . The process includes receiving a textual input entered in a search engine query input field by a user (510). Input suggestions are identified using the query and label data. Identifying the input suggestions includes comparing the textual input to the queries in the query and label data to identify a first query that the textual input represents (520). Identifying the input suggestions also includes identifying the one or more labels that are associated with the first query as being selectable alternatives to the textual input (530). -
FIG. 6 is a flow chart showing another example process for identifying input suggestions. The process can be implemented in themodule 142. The process for identifying input suggestions can be performed after the process described with respect toFIG. 4 . The process includes receiving a textual input entered in a search engine query input field by a user (610). Input suggestions are identified using a suggestion resource. Identifying the input suggestions includes comparing the textual input to indexed labels in the suggestion resource to identify a first indexed label that the textual input represents (620). Identifying the input suggestions also includes identifying one or more queries associated with the first indexed label as being selectable alternatives to the textual input (630). -
FIG. 7 is a flow chart showing another example process for identifying input suggestions. The process can be implemented in themodule 142. The process for identifying input suggestions can be performed after the process described with respect toFIG. 6 . The process includes comparing each query identified as being a selectable alternative to the queries in the query and label data to identify a first query that is textually identical to the query identified as being a selectable alternative (710). The process also includes identifying the one or more labels that are associated with the first query as being selectable alternatives to the textual input (720). - Embodiments of the subject matter and the functional operations described in this specification can be implemented in digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them. Embodiments of the subject matter described in this specification can be implemented as one or more computer program products, i.e., one or more modules of computer program instructions encoded on a tangible program carrier for execution by, or to control the operation of, data processing apparatus. The tangible program carrier can be a computer-readable medium. The computer-readable medium can be a machine-readable storage device, a machine-readable storage substrate, a memory device, or a combination of one or more of them.
- The term “data processing apparatus” encompasses all apparatus, devices, and machines for processing data, including by way of example a programmable processor, a computer, or multiple processors or computers. The apparatus can include, in addition to hardware, code that creates an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, or a combination of one or more of them.
- A computer program (also known as a program, software, software application, script, or code) can be written in any form of programming language, including compiled or interpreted languages, or declarative or procedural languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, or other unit suitable for use in a computing environment. A computer program does not necessarily correspond to a file in a file system. A program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub-programs, or portions of code). A computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
- The processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform functions by operating on input data and generating output. The processes and logic flows can also be performed by, and apparatus can also be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).
- Processors suitable for the execution of a computer program include, by way of example, both general and special purpose microprocessors, and any one or more processors of any kind of digital computer. Generally, a processor will receive instructions and data from a read-only memory or a random access memory or both. The essential elements of a computer are a processor for performing instructions and one or more memory devices for storing instructions and data. Generally, a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks. However, a computer need not have such devices. Moreover, a computer can be embedded in another device, e.g., a mobile telephone, a personal digital assistant (PDA), a mobile audio or video player, a game console, a Global Positioning System (GPS) receiver, to name just a few.
- Computer-readable media suitable for storing computer program instructions and data include all forms of non-volatile memory, media and memory devices, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks; magneto-optical disks; and CD-ROM and DVD-ROM disks. The processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
- To provide for interaction with a user, embodiments of the subject matter described in this specification can be implemented on a computer having a display device, e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor, for displaying information to the user and a keyboard and a pointing device, e.g., a mouse or a trackball, by which the user can provide input to the computer. Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form, including acoustic, speech, or tactile input.
- While this specification contains many specific implementation details, these should not be construed as limitations on the scope of any implementation or of what may be claimed, but rather as descriptions of features that may be specific to particular embodiments of particular implementations. Certain features that are described in this specification in the context of separate embodiments can also be implemented in combination in a single embodiment. Conversely, various features that are described in the context of a single embodiment can also be implemented in multiple embodiments separately or in any suitable subcombination. Moreover, although features may be described above as acting in certain combinations and even initially claimed as such, one or more features from a claimed combination can in some cases be excised from the combination, and the claimed combination may be directed to a subcombination or variation of a subcombination.
- Similarly, while operations are depicted in the drawings in a particular order, this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order, or that all illustrated operations be performed, to achieve desirable results. In certain circumstances, multitasking and parallel processing may be advantageous. Moreover, the separation of various system components in the embodiments described above should not be understood as requiring such separation in all embodiments, and it should be understood that the described program components and systems can generally be integrated together in a single software product or packaged into multiple software products.
- Particular embodiments of the subject matter described in this specification have been described. Other embodiments are within the scope of the following claims. For example, the actions recited in the claims can be performed in a different order and still achieve desirable results. As one example, the processes depicted in the accompanying figures do not necessarily require the particular order shown, or sequential order, to achieve desirable results. In certain implementations, multitasking and parallel processing may be advantageous.
Claims (20)
1. A computer-implemented method comprising:
receiving query and label data, the data including a plurality of queries and, for each query, specifying one or more labels associated with the query, wherein the queries are n-grams submitted by users of a search engine and the labels identify a category or topic in which an associated query belongs;
generating a suggestion resource, including:
identifying unique labels in the query and label data; and
for each unique label:
indexing the unique label;
identifying in the query and label data, each query associated with the unique label; and
associating, in the suggestion resource, the identified queries with the unique label; and
storing the suggestion resource in a computer-readable medium.
2. The method of claim 1 , further comprising:
receiving a textual input entered in a search engine query input field by a user; and
identifying input suggestions using the query and label data including:
comparing the textual input to the queries in the query and label data to identify a first query that the textual input represents; and
identifying the one or more labels that are associated with the first query as being selectable alternatives to the textual input.
3. The method of claim 2 , wherein the input suggestions are identified as characters are entered in the search engine query input field and before a complete query is submitted for a search.
4. The method of claim 1 , further comprising:
receiving a textual input entered in a search engine query input field by a user; and
identifying input suggestions using the suggestion resource including:
comparing the textual input to the indexed labels in the suggestion resource to identify a first indexed label that the textual input represents; and
identifying the one or more queries associated with the first indexed label as being selectable alternatives to the textual input.
5. The method of claim 4 , further comprising:
comparing each query identified as being a selectable alternative to the queries in the query and label data to identify a first query that is textually identical to the query identified as being a selectable alternative; and
identifying the one or more labels that are associated with the first query as being selectable alternatives to the textual input.
6. The method of claim 4 , wherein the textual input is not a substring of any of the selectable alternatives.
7. The method of claim 4 , wherein the textual input is a prefix, midfix, or suffix of at least one of the selectable alternatives.
8. The method of claim 4 , wherein identifying the first indexed label includes:
determining whether the textual input is a prefix of the first indexed label and determining that the first indexed label is represented by the textual input when the textual input is a prefix of the first index label.
9. The method of claim 1 , wherein the queries are associated with at least one label that is not a substring of the associated query.
10. A computer-implemented method comprising:
receiving a textual input entered in a search engine query input field by a user; and
identifying input suggestions using a suggestion resource, the suggestion resource including an index of labels, each label being associated with one or more queries and identifying a category or topic in which an associated query belongs; wherein the identifying includes:
comparing the textual input to the indexed labels in the suggestion resource to identify a first indexed label that the textual input represents; and
identifying the one or more queries associated with the first indexed label as being selectable alternatives to the textual input.
11. A system comprising:
a machine-readable storage device including a program product; and
one or more processors operable to execute the program product and perform operations comprising:
receiving query and label data, the data including a plurality of queries and, for each query, specifying one or more labels associated with the query, wherein the queries are n-grams submitted by users of a search engine and the labels identify a category or topic in which an associated query belongs;
generating a suggestion resource, including:
identifying unique labels in the query and label data; and
for each unique label:
indexing the unique label;
identifying in the query and label data, each query associated with the unique label; and
associating, in the suggestion resource, the identified queries with the unique label; and
storing the suggestion resource in a computer-readable medium.
12. The system of claim 11 , wherein the operations further comprise:
receiving a textual input entered in a search engine query input field by a user; and
identifying input suggestions using the query and label data including:
comparing the textual input to the queries in the query and label data to identify a first query that the textual input represents; and
identifying the one or more labels that are associated with the first query as being selectable alternatives to the textual input.
13. The system of claim 12 , wherein the input suggestions are identified as characters are entered in the search engine query input field and before a complete query is submitted for a search.
14. The system of claim 11 , wherein the operations further comprise:
receiving a textual input entered in a search engine query input field by a user; and
identifying input suggestions using the suggestion resource including:
comparing the textual input to the indexed labels in the suggestion resource to identify a first indexed label that the textual input represents; and
identifying the one or more queries associated with the first indexed label as being selectable alternatives to the textual input.
15. The system of claim 14 , wherein the operations further comprise:
comparing each query identified as being a selectable alternative to the queries in the query and label data to identify a first query that is textually identical to the query identified as being a selectable alternative; and
identifying the one or more labels that are associated with the first query as being selectable alternatives to the textual input.
16. The system of claim 14 , wherein the textual input is not a substring of any of the selectable alternatives.
17. The system of claim 14 , wherein the textual input is a prefix, midfix, or suffix of at least one of the selectable alternatives.
18. The system of claim 14 , wherein identifying the first indexed label includes:
determining whether the textual input is a prefix of the first indexed label and determining that the first indexed label is represented by the textual input when the textual input is a prefix of the first index label.
19. The system of claim 11 , wherein the queries are associated with at least one label that is not a substring of the associated query.
20. A system comprising:
a machine-readable storage device including a program product; and
one or more processors operable to execute the program product and perform operations comprising:
receiving a textual input entered in a search engine query input field by a user; and
identifying input suggestions using a suggestion resource, the suggestion resource including an index of labels, each label being associated with one or more queries and identifying a category or topic in which an associated query belongs; wherein the identifying includes:
comparing the textual input to the indexed labels in the suggestion resource to identify a first indexed label that the textual input represents; and
identifying the one or more queries associated with the first indexed label as being selectable alternatives to the textual input.
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
PCT/CN2009/001583 WO2011079415A1 (en) | 2009-12-30 | 2009-12-30 | Generating related input suggestions |
Publications (1)
Publication Number | Publication Date |
---|---|
US20120259829A1 true US20120259829A1 (en) | 2012-10-11 |
Family
ID=44226095
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/517,241 Abandoned US20120259829A1 (en) | 2009-12-30 | 2009-12-30 | Generating related input suggestions |
Country Status (2)
Country | Link |
---|---|
US (1) | US20120259829A1 (en) |
WO (1) | WO2011079415A1 (en) |
Cited By (13)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20120143895A1 (en) * | 2010-12-02 | 2012-06-07 | Microsoft Corporation | Query pattern generation for answers coverage expansion |
CN103559243A (en) * | 2013-10-28 | 2014-02-05 | 陶睿 | Method and system for searching users in mobile devices on basis of labels |
US8954463B2 (en) * | 2012-02-29 | 2015-02-10 | International Business Machines Corporation | Use of statistical language modeling for generating exploratory search results |
US8959080B2 (en) | 2011-11-15 | 2015-02-17 | Alibaba Group Holding Limited | Search method, search apparatus and search engine system |
US9116952B1 (en) | 2013-05-31 | 2015-08-25 | Google Inc. | Query refinements using search data |
US20150324425A1 (en) * | 2014-05-12 | 2015-11-12 | Google Inc. | Interpreting user queries based on nearby locations |
US9275147B2 (en) * | 2012-06-18 | 2016-03-01 | Google Inc. | Providing query suggestions |
US9336277B2 (en) | 2013-05-31 | 2016-05-10 | Google Inc. | Query suggestions based on search data |
US9703871B1 (en) | 2010-07-30 | 2017-07-11 | Google Inc. | Generating query refinements using query components |
US10185746B2 (en) | 2014-08-20 | 2019-01-22 | Google Llc | Interpreting user queries based on device orientation |
US10275483B2 (en) | 2014-05-30 | 2019-04-30 | Apple Inc. | N-gram tokenization |
US11100169B2 (en) | 2017-10-06 | 2021-08-24 | Target Brands, Inc. | Alternative query suggestion in electronic searching |
US11397770B2 (en) * | 2018-11-26 | 2022-07-26 | Sap Se | Query discovery and interpretation |
Families Citing this family (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN102999520B (en) * | 2011-09-15 | 2016-04-27 | 北京百度网讯科技有限公司 | A kind of method and apparatus of search need identification |
WO2014014374A1 (en) | 2012-07-19 | 2014-01-23 | Yandex Europe Ag | Search query suggestions based in part on a prior search |
Citations (20)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20050234953A1 (en) * | 2004-04-15 | 2005-10-20 | Microsoft Corporation | Verifying relevance between keywords and Web site contents |
US20090019002A1 (en) * | 2007-07-13 | 2009-01-15 | Medio Systems, Inc. | Personalized query completion suggestion |
US20090094223A1 (en) * | 2007-10-05 | 2009-04-09 | Matthew Berk | System and method for classifying search queries |
US20090106224A1 (en) * | 2007-10-19 | 2009-04-23 | Xerox Corporation | Real-time query suggestion in a troubleshooting context |
US7580926B2 (en) * | 2005-12-01 | 2009-08-25 | Adchemy, Inc. | Method and apparatus for representing text using search engine, document collection, and hierarchal taxonomy |
US20090248669A1 (en) * | 2008-04-01 | 2009-10-01 | Nitin Mangesh Shetti | Method and system for organizing information |
US7620628B2 (en) * | 2004-12-06 | 2009-11-17 | Yahoo! Inc. | Search processing with automatic categorization of queries |
US20090313217A1 (en) * | 2008-06-12 | 2009-12-17 | Iac Search & Media, Inc. | Systems and methods for classifying search queries |
US20100094835A1 (en) * | 2008-10-15 | 2010-04-15 | Yumao Lu | Automatic query concepts identification and drifting for web search |
US7774333B2 (en) * | 2003-08-21 | 2010-08-10 | Idia Inc. | System and method for associating queries and documents with contextual advertisements |
US20100256969A1 (en) * | 2009-04-07 | 2010-10-07 | Microsoft Corporation | Generating implicit labels and training a tagging model using such labels |
US20100293180A1 (en) * | 2009-05-18 | 2010-11-18 | Microsoft Corporation | Identifying conceptually related terms in search query results |
US7890526B1 (en) * | 2003-12-30 | 2011-02-15 | Microsoft Corporation | Incremental query refinement |
US20110040769A1 (en) * | 2009-08-13 | 2011-02-17 | Yahoo! Inc. | Query-URL N-Gram Features in Web Ranking |
US20110093488A1 (en) * | 2009-10-15 | 2011-04-21 | Amacker Matthew W | Dynamic search suggestion and category specific completion |
US20110131205A1 (en) * | 2009-11-28 | 2011-06-02 | Yahoo! Inc. | System and method to identify context-dependent term importance of queries for predicting relevant search advertisements |
US20110161311A1 (en) * | 2009-12-28 | 2011-06-30 | Yahoo! Inc. | Search suggestion clustering and presentation |
US8200687B2 (en) * | 2005-06-20 | 2012-06-12 | Ebay Inc. | System to generate related search queries |
US20120150920A1 (en) * | 2010-12-14 | 2012-06-14 | Xerox Corporation | Method and system for linking textual concepts and physical concepts |
US20130197899A1 (en) * | 2012-01-31 | 2013-08-01 | Xerox Corporation | System and method for contextualizing device operating procedures |
Family Cites Families (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7089236B1 (en) * | 1999-06-24 | 2006-08-08 | Search 123.Com, Inc. | Search engine interface |
US6631367B2 (en) * | 2000-12-28 | 2003-10-07 | Intel Corporation | Method and apparatus to search for information |
US20040143644A1 (en) * | 2003-01-21 | 2004-07-22 | Nec Laboratories America, Inc. | Meta-search engine architecture |
US20040260677A1 (en) * | 2003-06-17 | 2004-12-23 | Radhika Malpani | Search query categorization for business listings search |
US20050131872A1 (en) * | 2003-12-16 | 2005-06-16 | Microsoft Corporation | Query recognizer |
US20060059134A1 (en) * | 2004-09-10 | 2006-03-16 | Eran Palmon | Creating attachments and ranking users and attachments for conducting a search directed by a hierarchy-free set of topics |
-
2009
- 2009-12-30 WO PCT/CN2009/001583 patent/WO2011079415A1/en active Application Filing
- 2009-12-30 US US13/517,241 patent/US20120259829A1/en not_active Abandoned
Patent Citations (20)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7774333B2 (en) * | 2003-08-21 | 2010-08-10 | Idia Inc. | System and method for associating queries and documents with contextual advertisements |
US7890526B1 (en) * | 2003-12-30 | 2011-02-15 | Microsoft Corporation | Incremental query refinement |
US20050234953A1 (en) * | 2004-04-15 | 2005-10-20 | Microsoft Corporation | Verifying relevance between keywords and Web site contents |
US7620628B2 (en) * | 2004-12-06 | 2009-11-17 | Yahoo! Inc. | Search processing with automatic categorization of queries |
US8200687B2 (en) * | 2005-06-20 | 2012-06-12 | Ebay Inc. | System to generate related search queries |
US7580926B2 (en) * | 2005-12-01 | 2009-08-25 | Adchemy, Inc. | Method and apparatus for representing text using search engine, document collection, and hierarchal taxonomy |
US20090019002A1 (en) * | 2007-07-13 | 2009-01-15 | Medio Systems, Inc. | Personalized query completion suggestion |
US20090094223A1 (en) * | 2007-10-05 | 2009-04-09 | Matthew Berk | System and method for classifying search queries |
US20090106224A1 (en) * | 2007-10-19 | 2009-04-23 | Xerox Corporation | Real-time query suggestion in a troubleshooting context |
US20090248669A1 (en) * | 2008-04-01 | 2009-10-01 | Nitin Mangesh Shetti | Method and system for organizing information |
US20090313217A1 (en) * | 2008-06-12 | 2009-12-17 | Iac Search & Media, Inc. | Systems and methods for classifying search queries |
US20100094835A1 (en) * | 2008-10-15 | 2010-04-15 | Yumao Lu | Automatic query concepts identification and drifting for web search |
US20100256969A1 (en) * | 2009-04-07 | 2010-10-07 | Microsoft Corporation | Generating implicit labels and training a tagging model using such labels |
US20100293180A1 (en) * | 2009-05-18 | 2010-11-18 | Microsoft Corporation | Identifying conceptually related terms in search query results |
US20110040769A1 (en) * | 2009-08-13 | 2011-02-17 | Yahoo! Inc. | Query-URL N-Gram Features in Web Ranking |
US20110093488A1 (en) * | 2009-10-15 | 2011-04-21 | Amacker Matthew W | Dynamic search suggestion and category specific completion |
US20110131205A1 (en) * | 2009-11-28 | 2011-06-02 | Yahoo! Inc. | System and method to identify context-dependent term importance of queries for predicting relevant search advertisements |
US20110161311A1 (en) * | 2009-12-28 | 2011-06-30 | Yahoo! Inc. | Search suggestion clustering and presentation |
US20120150920A1 (en) * | 2010-12-14 | 2012-06-14 | Xerox Corporation | Method and system for linking textual concepts and physical concepts |
US20130197899A1 (en) * | 2012-01-31 | 2013-08-01 | Xerox Corporation | System and method for contextualizing device operating procedures |
Cited By (21)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9703871B1 (en) | 2010-07-30 | 2017-07-11 | Google Inc. | Generating query refinements using query components |
US20120143895A1 (en) * | 2010-12-02 | 2012-06-07 | Microsoft Corporation | Query pattern generation for answers coverage expansion |
US8515986B2 (en) * | 2010-12-02 | 2013-08-20 | Microsoft Corporation | Query pattern generation for answers coverage expansion |
US9477761B2 (en) | 2011-11-15 | 2016-10-25 | Alibaba Group Holding Limited | Search method, search apparatus and search engine system |
US8959080B2 (en) | 2011-11-15 | 2015-02-17 | Alibaba Group Holding Limited | Search method, search apparatus and search engine system |
US8954466B2 (en) * | 2012-02-29 | 2015-02-10 | International Business Machines Corporation | Use of statistical language modeling for generating exploratory search results |
US8954463B2 (en) * | 2012-02-29 | 2015-02-10 | International Business Machines Corporation | Use of statistical language modeling for generating exploratory search results |
US9275147B2 (en) * | 2012-06-18 | 2016-03-01 | Google Inc. | Providing query suggestions |
US9727603B1 (en) | 2013-05-31 | 2017-08-08 | Google Inc. | Query refinements using search data |
US9336277B2 (en) | 2013-05-31 | 2016-05-10 | Google Inc. | Query suggestions based on search data |
US9116952B1 (en) | 2013-05-31 | 2015-08-25 | Google Inc. | Query refinements using search data |
US10691680B1 (en) | 2013-05-31 | 2020-06-23 | Google Llc | Query refinements using search data |
US11514035B1 (en) | 2013-05-31 | 2022-11-29 | Google Llc | Query refinements using search data |
CN103559243A (en) * | 2013-10-28 | 2014-02-05 | 陶睿 | Method and system for searching users in mobile devices on basis of labels |
US20150324425A1 (en) * | 2014-05-12 | 2015-11-12 | Google Inc. | Interpreting user queries based on nearby locations |
US10474671B2 (en) * | 2014-05-12 | 2019-11-12 | Google Llc | Interpreting user queries based on nearby locations |
US10275483B2 (en) | 2014-05-30 | 2019-04-30 | Apple Inc. | N-gram tokenization |
US10185746B2 (en) | 2014-08-20 | 2019-01-22 | Google Llc | Interpreting user queries based on device orientation |
US10922321B2 (en) | 2014-08-20 | 2021-02-16 | Google Llc | Interpreting user queries based on device orientation |
US11100169B2 (en) | 2017-10-06 | 2021-08-24 | Target Brands, Inc. | Alternative query suggestion in electronic searching |
US11397770B2 (en) * | 2018-11-26 | 2022-07-26 | Sap Se | Query discovery and interpretation |
Also Published As
Publication number | Publication date |
---|---|
WO2011079415A1 (en) | 2011-07-07 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US20120259829A1 (en) | Generating related input suggestions | |
US10169337B2 (en) | Converting data into natural language form | |
US9645979B2 (en) | Device, method and program for generating accurate corpus data for presentation target for searching | |
US9619468B2 (en) | Generation of synthetic context frameworks for dimensionally constrained hierarchical synthetic context-based objects | |
US9448995B2 (en) | Method and device for performing natural language searches | |
US9251237B2 (en) | User-specific synthetic context object matching | |
US10452661B2 (en) | Automated database schema annotation | |
US10387435B2 (en) | Computer application query suggestions | |
CN109564573B (en) | Platform support clusters from computer application metadata | |
US9619580B2 (en) | Generation of synthetic context objects | |
Uma et al. | Formation of SQL from natural language query using NLP | |
US20120278308A1 (en) | Custom search query suggestion tools | |
US20140101542A1 (en) | Automated data visualization about selected text | |
US8423350B1 (en) | Segmenting text for searching | |
US9633110B2 (en) | Enrichment of data using a semantic auto-discovery of reference and visual data | |
JP2014517428A (en) | Detect the source language of search queries | |
US9965546B2 (en) | Fast substring fulltext search | |
US10339148B2 (en) | Cross-platform computer application query categories | |
Chang et al. | Enhancing POI search on maps via online address extraction and associated information segmentation | |
WO2012037726A1 (en) | Generating search query suggestions | |
US11281736B1 (en) | Search query mapping disambiguation based on user behavior | |
US9122748B2 (en) | Matching documents against monitors | |
JP2010250389A (en) | Information retrieval system, method and program, and index generation system, method, and program | |
US10990630B2 (en) | Generating search results based on non-linguistic tokens | |
CN102073665A (en) | Method for computer retrieval of client name based on lexical analysis |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:ZHOU, XIN;REEL/FRAME:028500/0416Effective date: 20110301 |
|
STCB | Information on status: application discontinuation |
Free format text: ABANDONED -- FAILURE TO RESPOND TO AN OFFICE ACTION |
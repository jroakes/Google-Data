US10650068B2 - Search engine - Google Patents
Search engine Download PDFInfo
- Publication number
- US10650068B2 US10650068B2 US15/401,592 US201715401592A US10650068B2 US 10650068 B2 US10650068 B2 US 10650068B2 US 201715401592 A US201715401592 A US 201715401592A US 10650068 B2 US10650068 B2 US 10650068B2
- Authority
- US
- United States
- Prior art keywords
- data
- search engine
- cluster feature
- vector
- native application
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active, expires
Links
- 239000013598 vector Substances 0.000 claims abstract description 335
- 238000000034 method Methods 0.000 claims abstract description 33
- 230000000694 effects Effects 0.000 claims description 10
- 238000004590 computer program Methods 0.000 abstract description 12
- 230000003993 interaction Effects 0.000 description 37
- 230000008569 process Effects 0.000 description 19
- 238000012545 processing Methods 0.000 description 19
- 230000004044 response Effects 0.000 description 17
- 238000004422 calculation algorithm Methods 0.000 description 13
- 238000004891 communication Methods 0.000 description 5
- 230000006870 function Effects 0.000 description 4
- 230000003287 optical effect Effects 0.000 description 4
- 238000012552 review Methods 0.000 description 3
- 238000001514 detection method Methods 0.000 description 2
- 238000010586 diagram Methods 0.000 description 2
- 238000003064 k means clustering Methods 0.000 description 2
- 238000012805 post-processing Methods 0.000 description 2
- 238000013515 script Methods 0.000 description 2
- 238000000926 separation method Methods 0.000 description 2
- 238000011524 similarity measure Methods 0.000 description 2
- 230000009286 beneficial effect Effects 0.000 description 1
- 230000005540 biological transmission Effects 0.000 description 1
- 239000003795 chemical substances by application Substances 0.000 description 1
- 239000004973 liquid crystal related substance Substances 0.000 description 1
- 238000007726 management method Methods 0.000 description 1
- 230000000644 propagated effect Effects 0.000 description 1
- 239000004065 semiconductor Substances 0.000 description 1
- 230000001953 sensory effect Effects 0.000 description 1
- 239000000758 substrate Substances 0.000 description 1
- 238000012546 transfer Methods 0.000 description 1
- 230000000007 visual effect Effects 0.000 description 1
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/953—Querying, e.g. by the use of web search engines
- G06F16/9535—Search customisation based on user profiles and personalisation
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/22—Indexing; Data structures therefor; Storage structures
- G06F16/2228—Indexing structures
- G06F16/2237—Vectors, bitmaps or matrices
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/24—Querying
- G06F16/245—Query processing
- G06F16/2457—Query processing with adaptation to user needs
- G06F16/24575—Query processing with adaptation to user needs using context
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/24—Querying
- G06F16/245—Query processing
- G06F16/2457—Query processing with adaptation to user needs
- G06F16/24578—Query processing with adaptation to user needs using ranking
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/30—Information retrieval; Database structures therefor; File system structures therefor of unstructured textual data
- G06F16/33—Querying
- G06F16/3331—Query processing
- G06F16/334—Query execution
- G06F16/3344—Query execution using natural language analysis
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/30—Information retrieval; Database structures therefor; File system structures therefor of unstructured textual data
- G06F16/33—Querying
- G06F16/3331—Query processing
- G06F16/334—Query execution
- G06F16/3347—Query execution using vector based model
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/30—Information retrieval; Database structures therefor; File system structures therefor of unstructured textual data
- G06F16/35—Clustering; Classification
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/951—Indexing; Web crawling techniques
Definitions
- This specification relates to search engines.
- a search engine may generally be described as any system that executes a search and retrieves stored data.
- a search engine can be configured in a variety of different ways based on the task at hand. For example, some search engines may be configured to perform keyword-based search and retrieval. Such search engines may identify relevant search results based, at least in part, on the number of times a search term appears in one or more particular resources, or each respective resource's metadata. Alternatively, or in addition, some search engines may identify relevant search results by identifying an entity name that is associated with one or more search terms, and then determining the number of occurrences of the entity name in one or more particular resources. In such instances, relevant search results may be obtained based on the number of occurrences of the entity name in the one or more particular resources.
- the aforementioned ways that a search engine can identify search results responsive to a query are merely exemplary.
- a search engine can also be configured to identify search results responsive to a query in a variety of other ways.
- a custom configuration of a search engine can be employed, as necessary, to solve particular problems related to search and retrieval.
- Application content items on a mobile device may include (i) personal content such as contacts, messages, call history, documents, notes, calendar events, or the like, (ii) application-specific content that is provided by the application for user consumption, (iii) application-specific content that is provided by the application and is responsive to user interaction, or (iv) a combination thereof.
- the present disclosure can cluster application content items into one or more different groups such as a topic, task, or the like that can be provided in response to a search query.
- the present disclosure may generate one or more selectable controls that are each associated with a respective group of application content items that is related to the received search query.
- one or more search results may be provided that each reference an application content item that is related to the group associated with the selected control.
- the search results may be sorted based on the application type that is used to consume or interact with each respective application content item referenced by the search results.
- a computer-implemented method for using a search engine implemented on a user device to identify topics or tasks associated with native application content may include actions of receiving, by a search engine implemented on a user device and for each of multiple native applications on the user device, a set of data that is generated by the native application and that includes (i) native application content, and (ii) context information associated with the native application content, for each set of data that is generated by the native applications, generating, by the search engine implemented on the user device, a cluster feature-vector representation based on the set of data, storing, by the search engine implemented on the user device, the cluster feature-vector representations in a search engine index on the user device, identifying, by the search engine implemented on the user device, a set of cluster feature-vector representations that are associated with a particular feature-vector representation, identifying, by the search engine implemented on the user device, one or more topics or tasks that are associated with the set of cluster feature-vector representations,
- generating, by the search engine implemented on the user device, a cluster feature-vector representation based on the set of data may include extracting a first set of one or more features from the native application content, extracting a second set of one or more features from the context information associated with the native application content, and generating a cluster feature-vector representation based on the first set of one or more features and the second set of one or more features.
- the first set of one or more features includes features that were extracted from one or more words in the text of the native application content.
- the second set of one or more features includes features that were extracted from data that is indicative of one or more fields associated with native application content.
- the second set of one or more features includes features that were extracted from data indicative of the popularity of one or more native application installed on the user device.
- the second set of one or more features includes features that were extracted from data that is indicative of one or more native applications that were accessed during the same session as the generated set of data.
- identifying, by the search engine implemented on the user device, a set of cluster feature-vector representations that are associated with a particular feature-vector representation may include generating, by the search engine implemented on the user device, a query vector based on a search term and a user context, and identifying, by the search engine implemented on the user device, one or more cluster feature-vector representations stored in the search engine index that are similar to the query vector.
- FIG. 1 is a contextual diagram of an example of a search engine for retrieving native application content items.
- FIG. 2 is an example of a cluster feature-vector that can be used to represent data from native applications.
- FIG. 3 is a flowchart of an example of a process for using a search engine to retrieve application content items.
- FIG. 1 is a contextual diagram of an example of a search engine 100 for retrieving native application content items.
- the search engine 100 is installed on a user device 110 .
- the search engine 100 may be configured to receive sets of data 131 , 132 , 133 , 134 , 135 from one or more native applications 111 , 112 , 113 , 114 , 115 that are installed on the user device 110 .
- a native application may include, for example, an application program that has been developed for use on the user device 110 .
- the one or more applications may include any type of mobile application, for example, a travel application, a messaging application, a trip mentor application, a calendar application, a document processing application, a contacts application, a voice calling application, a notes application, an encyclopedia application, or the like.
- the user device 110 may include, for example, a smartphone, a smartwatch, a tablet, or the like.
- the search engine 100 installed on the user device 110 includes a vector generation unit 140 , a search engine index 150 , a vector similarity unit 160 , a user interface generation unit 170 , and a cloud interface unit 180 .
- a “unit” may be implemented as one or more software components, one or more hardware components, or a combination thereof. A combination of one or more software components and one or more hardware components results, for example, when the one or more software components are installed on one or more computers in one or more locations allowing the functionality of the software components to be realized.
- Each native application 111 , 112 , 113 , 114 , 115 installed on the user device 110 is configured to generate 121 a , 121 b , 121 c , 121 d , 121 e respective sets of data 131 , 132 , 133 , 134 , 135 .
- the respective sets of data 131 , 132 , 133 , 134 , 135 may be generated based on user interaction with each respective native application 111 , 112 , 113 , 114 , 115 .
- the sets of data 131 , 132 , 133 , 134 , 135 may include native application content 131 a , 132 a , 133 a , 134 a , 135 a and context information 131 b , 132 b , 133 b , 134 b , 135 b .
- a user may interact with the travel app 111 to book an airline ticket from Washington, D.C. to Italy that is scheduled to depart on Jan. 15, 2017 at 3:00 pm.
- the native application may generate a set of data 131 that includes native application content 131 a such as native application content that was interacted with by the user.
- the trip origin e.g., DC
- the trip destination e.g., Italy
- the trip departure date e.g., Jan. 15, 2017
- the trip departure time e.g., 3:00 pm
- the search engine 100 may extract one or more features from the native application content to generate a cluster feature-vector that represents the user's interaction or consumption of one or more native application content items.
- the sets of data 131 , 132 , 133 , 134 , 135 may also include context information 131 b , 132 b , 133 b , 134 b , 135 b associated with a user's interaction with each respective native application 111 , 112 , 113 , 114 , 115 that resulted in the generation of native application content 131 a , 132 a , 133 a , 134 a , 135 a , respectively.
- the context information included in a set of data 131 , 132 , 133 , 134 , 135 may include data that is associated with a particular native application 111 , 112 , 113 , 114 , 115 .
- the context information included in the set of data 131 , 132 , 133 , 134 , 135 may include data that is obtained from a user profile of the user that interacted with the native application.
- a user profile may include data that is indicative of the user's usage of each respective native application installed on the user device.
- a set of data 131 generated by the native application 111 based on a user's interaction with native application 111 may include context information 131 b such as information that is indicative of the user's use of native application 111 , information that is indicative of the user's use of other native applications 112 , 113 , 114 , 115 in proximity to the native application 111 , or the like.
- Context information generated by each respective native application 111 , 112 , 113 , 114 , 115 may include other types of information.
- other types of context information 131 b , 132 b , 133 b , 134 , 135 b may include data that is indicative of a field that is associated with native application content a user interacted with, data that is indicative of user activity with a native application, data that is indicative of native application content creation time, data that is indicative of native application content interaction time, data that is indicative of a number of native application interactions, or the like.
- Data that is indicative of a field that is associated with native application content a user interacted with may include, for example, a “To:” field of a message, a “Subject” field of a message, a “Body” field of a message, a “Destination” field of a flight reservation, a “Date” field of a hotel reservation, a “Title” field of an article, or the like.
- Data that is indicative of user activity with a native application may include, for example, data that is indicative of a number of interactions a user has with a native application, data that is indicative of other native applications the user interacted with while using the native application, data that is indicative of a native application the user used prior to the native application, data that is indicative of a native application the user used after the native application, data that is indicative of patterns of switching between native applications by a user of a user device, and the like.
- Data that is indicative of native application content creation time may include, for example, a timestamp that indicates when a user created the application content.
- Data that is indicative of native application content interaction time may include, for example, data that is indicative of the time a user interacted with native application content.
- interaction time may include a timestamp that is indicative of the time a user viewed native application content in a native application.
- the number of application interactions may include the number of times a user interacted with a particular native application.
- the number of times a user interacted with a particular native application may include (i) data indicative of a particular number of total application interactions with the user, (ii) data indicative of a particular number of total application interactions within a predetermined time period, or (iii) a combination thereof.
- the number of application interactions may include data that indicates a user opened the notes application 20 times, a user opened a travel application 46 times over the past week, or the like.
- a set of data 131 , 132 , 133 , 134 , 135 may include multiple types of independent native application content items that, when collectively analyzed, may be indicative of one or more overarching topics, tasks, or the like that can categorize a user's activity at a time of the user's interaction with the native applications 111 , 112 , 113 , 114 , 115 that generated the sets of data 131 , 132 , 133 , 134 , 135 .
- Multiple native application content items related to the same topic may be described as multiple native application content items that share the same subject.
- multiple native application content items related to the same topic may include a set of multiple messages that were sent to the same recipient, a set of multiple messages to different recipients related to the same subject, a set of multiple disparate types of application content items related to the same subject, or the like.
- multiple native application content items related to the same task may include multiple native application content items that are related to the same purpose, goal, or the like.
- a user may be engaged in a task, over time, that includes planning a trip to Italy.
- the user may interact with multiple different native applications at different periods of time over the course of days, weeks, or even months to, e.g., book a flight reservation to Italy using the Travel App 111 , book a hotel reservation in Rome using a Travel App 113 (e.g., the same travel app as travel app 111 or a different travel app than travel app 111 ), review descriptions of tourist destinations using a Trip Mentor App 114 , search for restaurants or specialty shops (e.g., a Gelato shop) in Rome using a search engine, send messages about specialty shops (e.g., a Gelato shop) the user is interested in visiting in Rome to the user's spouse using a messaging App 115 (e.g., the same messaging app as
- the vector generation unit 140 is configured to receive 122 a , 122 b , 122 c , 122 d , 122 e one or more sets of data 131 , 132 , 133 , 134 , 135 that have been generated by native applications 111 , 112 , 113 , 114 , 115 .
- the sets of data received by the vector generation unit 140 include native application content and context information.
- the vector generation unit 140 may extract features from the received sets of data 131 , 132 , 133 , 134 , 135 .
- the vector generation unit 140 may extract features from the native application content 131 a , 132 a , 133 a , 134 a , 135 a and context information 131 b , 132 b , 133 b , 134 b , 135 b .
- the vector generation unit 140 may process the received sets of data 131 , 132 , 133 , 134 , 135 to generate a cluster feature-vector for each received set of data 131 , 132 , 133 , 134 , 135 .
- Each cluster feature-vector may be generated based on the text of application content 131 a , 132 a , 133 a , 134 a , 135 a .
- features may be extracted from every word in the application content 131 a , 132 a , 133 a , 134 a , 135 a and used to generate the cluster feature-vector.
- the text of the application content may be annotated based on the application fields associated with the content. Accordingly, features associated with the structure of the native application document used to receive and display text on the native application interface may be built into the cluster feature-vector.
- each cluster feature-vector may be generated based on the entities identified by the text of the native application content 131 a , 132 a , 133 a , 134 a , 135 a .
- the vector generation unit 140 can extract features from the contact names, names of non-contact persons, place names, country names, city names, business names, or the like included in the native application content 131 a , 132 a , 133 a , 134 a , 135 a . Accordingly, features associated with particular entity names that are identified in the text of native application content 131 a , 132 a , 133 a , 134 a , 135 a may be built into the cluster feature-vector.
- each cluster feature-vector may be generated based on the context information 131 b , 132 b , 133 b , 134 b , 135 b received from each respective native application.
- vector generation unit 140 can extract features from context information 131 b , 132 b , 133 b , 134 b , 135 b that includes data that is indicative of user activity related to one or more native applications 111 , 112 , 113 , 114 , 115 installed on the user device 110 .
- features may be extracted from context information 131 b , 132 b , 133 b , 134 b , 135 b such as data that is indicative of the popularity of one or more native applications installed on the user device 110 and the extracted features can be used to generate a cluster feature-vector.
- features may be extracted from context information 131 b , 132 b , 133 b , 134 b , 135 b such as data that is indicative of patterns of switching between applications independent of session, data that is indicative of patterns of switching between applications in the same session, or the like and the extracted features can be used to generate a cluster feature-vector.
- Such features may beneficial because if user interactions with multiple native applications within a predetermined threshold amount of time, the native application content associated with those user interactions can be related to the same topic, task, or the like.
- features may be extracted from context information 131 b , 132 b , 133 b , 134 b , 135 b such as data that is indicative of application content creation time, data that is indicative of application content interaction time, data that is indicative of a number of interactions a user has with a native application, or the like and then the extracted features can be used to generate the cluster feature-vector.
- Each cluster-feature vector is a numerical representation of each set of data 131 , 132 , 133 , 134 , 135 that is received from the native applications.
- the numerical representation quantifies a relationship between features extracted from each respective set of data 131 , 132 , 133 , 134 , 135 and an established cluster feature-vector vocabulary.
- the cluster feature-vector vocabulary may include an entry for every known word or phrase in a particular language.
- the cluster feature-vector vocabulary may include one or more additional entries that are related to context information provided by native applications.
- the cluster feature-vector vocabulary may include one or more entries to represent each native application installed on the user device 110 , one or more entries to represent native applications that are related to the native application that generated the set of data on which the cluster feature-vector is based, one or more entries to represent native applications used in the same session as the native application that generated the set of data on which the cluster-feature vector is based, one or more entries to represent the native application used prior to the native application that generated the set of data on which the cluster feature-vector is based, one or more entries to represent the native application that was used after the native application that generated the set of data on which the cluster feature-vector was based, one or more entries to represent the popularity of the native application that generated the set of data on which the cluster feature-vector is based, one or more entries to represent the content creation time of the application content on which the cluster feature-vector is based, one or more entries to represent the content interaction time of the application content on which the cluster feature-vector is based, one or more entries to represent one or more fields
- the vector generation unit 140 may store 142 each generated cluster feature-vector in the search engine index 150 .
- the search engine index 150 is a cluster feature-vector storage area that organizes each of the cluster feature-vectors generated by the vector generation unit 140 .
- the search engine index 150 may store a first cluster feature-vector 151 based on the first set of data 131 , a second cluster feature-vector 152 that is based on the second set of data 132 , a third cluster feature-vector 153 that is based on the third set of data 133 , a fourth cluster feature-vector 154 that is based on the fourth set of data 134 , a fifth cluster feature-vector 155 that is based on the fifth set of data 135 , and so on.
- Each cluster feature-vector stored in the search engine index 150 may be used to identify a native application content item (e.g., a message 135 a ) on which the cluster feature-vector is based. Therefore, instead of, or in addition to, performing a keyword search based of application content items, the user device 110 may use the search engine 100 to perform a vector similarity search of the cluster feature-vectors stored in the search engine index 150 .
- the vector generation unit 140 may be configured to add additional cluster feature-vectors to the search engine index 150 each time a native application generates an additional set of data. Therefore, the cluster feature-vector generation process described above may continually execute as a background process as a user uses the native applications 111 , 112 , 113 , 114 , 115 to interact with native application content in real-time. However, in some implementations, the sets of data generated by the native applications may be cached.
- the cached sets of data may be provided as a batch to the vector generation unit 140 based on one or more batch processing rules (e.g., expiration of a predetermined period of time, detection that the number of cached items satisfies a predetermined threshold, detection that the user device 110 is plugged into a power source such as a wall outlet, in response to an instruction from a user, or the like).
- batch processing rules e.g., expiration of a predetermined period of time, detection that the number of cached items satisfies a predetermined threshold, detection that the user device 110 is plugged into a power source such as a wall outlet, in response to an instruction from a user, or the like).
- Implementations that perform batch-processing of multiple sets of data may be more efficient and use less resources than implementations that continually use the vector generation unit 140 as a background process. This is because, in such implementations, the vector generation unit 140 is not continually running as a background process as each set of data generated by the native applications 111 , 112 , 113 , 114 , 115 in real-time. Such batch-processing systems may help to conserve usage of the user device's 110 battery. Instead of continuously running in the background, the vector generation unit 140 in a batch-processing implementation may only be running as a background process to generate cluster feature-vectors when the search engine 100 determines that a batch processing rule has been satisfied.
- a real-time processing implementation that continually runs the vector generation unit 140 in the background to generate cluster feature-vectors in real-time as respective sets of data are received from native applications 111 , 112 , 113 , 114 , 115 also has advantages.
- such real-time processing implementations may provide a more robust and accurate search engine index 150 than systems that perform batch-processing because such real-time systems have an index that is always updated to include cluster feature-vectors representing the most recent native application content with which the user has interacted.
- the search engine 100 may include a user interface generation unit 170 that provides a user interface 190 for display on the graphical user interface of the user device 110 .
- the user interface 190 may include query input field 191 that is configured to receive one or more search terms 192 .
- a user of the user device 110 has input the search term “April.”
- the user device 110 may provide 144 ( i ) the one or more search terms 192 “April” and (ii) context information to the vector generation unit 140 .
- the search engine may process the one or more search terms as described in detail below, and generate one or more selectable control 192 a , 192 b , 192 c .
- the one or more selectable controls 192 a , 192 b , 192 c may be provided for display on the user interface 190 when a user of user device 110 opens an application that provides the user interface 190 .
- the one or more selectable controls 192 a , 192 b , 192 c may be provided for display in response to a zero-input query.
- the context information provided 144 to the vector generation unit 140 may be indicative of a user context at the time of submission of the one or more search terms 192 .
- the context information provided 144 to the vector generation unit 140 may be indicative of a user context within a predetermined threshold of time prior to submitting the one or more search terms.
- the context information may include data that is indicative of a user context during the 30 seconds prior to submitting the query terms 192 , the 1 minute prior to submitting the query terms 192 , the 5 minutes prior to submitting the query terms 192 , or the like.
- Context information describing a user context may include, for example, data that describes the user's interactions with one or more native applications 111 , 112 , 113 , 114 , 115 .
- Data describing the user's interactions with one or more native applications 111 , 112 , 113 , 114 , 115 may include data indicating the native applications 111 , 112 , 113 , 114 , 115 used by the user, data indicating the native applications 111 , 112 , 113 , 114 , 115 open by the user at, or near, the time the query terms 192 were submitted, the order in which a user has used native application programs 111 , 112 , 113 , 114 , 115 , the frequency with which the user uses native applications 111 , 112 , 113 , 114 , 115 installed on the user device 110 , or the like.
- the context information may be obtained from a user profile associated with the user and maintained on the user device 110 .
- the user profile may include data that is indicative of the user's use of each of the one or more native applications 111 , 112 , 113 , 114 , 115 installed on the user device 110 .
- the vector generation unit 140 may then generate a query vector 146 a based on the (i) one or more search terms 192 and (ii) the context information that is indicative of the user context. For example, the vector generation unit 140 may extract features from the one or more search terms 192 , the context information that is indicative of the user context, or both and use the extracted features to generate the query vector 146 a .
- the query vector 146 a is a numerical representation of (i) the one or more search terms 192 received via the user interface 190 at stage A and (ii) the context information that is indicative of the user context during a threshold period of time prior to the entry of the one or more search terms 192 .
- the numerical representation of the query vector 146 a quantifies a relationship between (i) the one or more search terms 192 and the context information, collectively, and (ii) an established cluster feature-vector vocabulary. Accordingly, features derived from the one or more search terms 192 and features derived from the user context may be the built into the query vector 146 a that can be evaluated to determine the query vector's 146 a similarity to one or more cluster feature-vectors 151 , 152 , 153 , 154 , 155 stored in the search engine index 150 .
- the vector generation unit 140 may provide 146 the query vector 146 a to the vector similarity unit 160 .
- the vector similarity unit 160 is configured to receive the query vector 146 a .
- the vector similarity unit 160 can access 148 the search engine index 150 to identify one or more cluster feature-vectors 151 , 152 , 153 , 154 , 155 that are similar to the query vector 146 a .
- a cluster feature-vector 151 , 152 , 153 , 154 , 155 may be similar to the query vector 146 a if the cluster feature-vector 151 , 152 , 153 , 154 , 155 satisfies a predetermined similarity threshold.
- determining whether a cluster feature-vector 151 , 152 , 153 , 154 , 155 satisfies a predetermine similarity threshold may be based on the distance between the query vector 146 a and each respective cluster feature-vector 151 , 152 , 153 , 154 , 155 .
- a distance between the query vector 146 a and each respective cluster feature-vector 151 , 152 , 153 , 154 , 155 may be determined, for example, using a cosine distance function.
- the cluster feature-vector identification process may result in a set of cluster feature-vectors that are sufficiently similar to the query vector 146 a.
- the vector similarity unit 148 analyzes the set of cluster feature-vectors that are sufficiently similar to the query vector 146 a to identify one or more topics, tasks, or the like that are associated with the set of cluster feature-vectors that are sufficiently similar to the query vector 146 a . Analyzing a set of cluster feature-vectors may include, for example, using one or more clustering algorithms to group the set of cluster feature-vectors identified by the vector similarity unit 148 into one or more groups of cluster feature-vectors.
- the identified set of cluster feature-vectors may be clustered based on a message recipient that is associated with the cluster feature-vectors, based on an entity associated with the cluster feature-vectors, based on an event associated with the cluster feature-vectors, based on the native application that is associated with the cluster feature-vectors, or the like.
- the clustering algorithms employed by the present disclosure may include any clustering algorithm capable of identifying groups of related cluster feature-vectors such as the k-means clustering algorithm (e.g., centroid based algorithm), hierarchical clustering, distribution based clustering, or the like.
- a stream clustering algorithm may be employed to identify groups of related cluster feature-vectors.
- the vector similarity unit 148 may perform clustering of cluster feature-vectors asynchronously.
- the vector similarity unit 148 may perform clustering independent of a user opening an application (e.g., a search application) that displays a user interface such as user interface 190 .
- asynchronous clustering may be performed as a background process while a user uses the user device 110 to perform other tasks, while the user device 110 is not being used by a user, when the user device 110 is in sleep mode, when a user device 110 is charging its battery, a combination thereof, or the like.
- vector similarity unit 148 may perform clustering of cluster feature-vectors in real-time at runtime in response to a received query. Such real-time clustering of cluster feature-vectors at runtime may occur, for example, if more than a threshold period of time has elapsed since the most recent iteration of asynchronous clustering performed by the user device 110 .
- the vector similarity unit 160 may execute one or more clustering algorithms that may begin with one or more respective anchor cluster feature-vectors that the vector similarity unit 160 previously identified as being sufficiently similar to the query vector 146 a . Then, for each anchor cluster feature-vector, the vector similarity unit 160 may perform a search for other cluster feature-vectors in the search engine index 150 that are sufficiently similar to the anchor cluster feature-vector. One or more other cluster feature-vectors in the search engine index 150 may be sufficiently similar to the anchor cluster feature-vector if the one or more other cluster feature-vectors are within a predetermined distance of the anchor cluster feature-vector.
- the distance between the anchor cluster feature-vector and the one or more other cluster feature-vectors may be calculated, for example, using a cosine distance function.
- the vector similarity unit 160 may use a clustering algorithm to perform a search that gradually radiates out from the anchor cluster feature-vector until the clustering algorithm no longer detects other cluster feature-vectors that satisfy a predetermined similarity threshold to the anchor cluster-feature vector.
- the vector similarity unit 148 may provide the identified groups (or clusters) of cluster feature-vectors to the user interface generation unit 170 .
- the vector similarity unit 160 may access a global language model provided by one or more cloud services using the cloud interface unit 180 .
- the global language model may provide data that can be used by the vector similarity unit 160 to identify relationships between two or more cluster feature-vectors.
- the vector similarity unit 140 may identify, based on data received from a global language model, synonyms and similar concepts.
- the vector similarity unit 140 may use data received from the global language model to determine that cluster feature-vectors having features derived from words such as flight, trip, and hotel are related words.
- data obtained from a global language model may be used by the vector similarity unit 160 to determine that cluster feature-vectors derived from native application content that includes the term “Piazza Navona” is related to cluster feature-vectors derived from a native application content item that includes the term “Italy.”
- data obtained from a global model may be used by the vector similarity unit 160 to determine that a cluster feature-vector derived from native application content such as a document about Italy is similar to a travel booking for a flight to “Rome” but not similar to a travel booking for a flight to “Paris.”
- one or more content graphs provided by one or more cloud services may be accessed to identify particular relationships in application usage.
- an app content graph provided by one or more cloud services can be accessed using the cloud interface unit 180 to determine that applications such as the travel app 111 and the trip mentor app 114 are related native applications that are related to a trip.
- vector similarity unit 160 may use this native application relatedness data to determine that cluster feature-vectors from groups of two more native applications may be related.
- the user interface generation unit 170 receives one or more groups of cluster feature-vectors.
- the user interface generation unit 170 may perform one or more post processing operations on the received groups of cluster feature-vectors.
- the user interface generation unit 170 may modify 172 a user interface using the results of the post processing operations.
- the user interface generation unit 170 may generate a title for each identified group of cluster feature-vectors.
- a title for a group of cluster feature-vectors may include, for example, a natural text label that helps a user of the user device 110 understand a particular topic, task, or the like that is associated with the native application content represented by the group of cluster feature-vectors.
- the title for the group of cluster feature-vectors can be generated using data obtained 182 from a global language model provided by a cloud server using the cloud interface unit 180 and a set of curated patterns such as “Trip to ⁇ Location>,” “Meeting with ⁇ Person>,” “ ⁇ Event> Party,” or the like.
- a title for a group of cluster feature-vectors may include a contact name associated with the clustered content, a location associated with the clustered content, or the like.
- the user interface generation unit 170 may rank the groups of cluster feature-vectors that were identified by the vector similarity unit 160 .
- the identified groups of cluster feature-vectors may be ranked based on how recently native application content items represented by one or more cluster feature-vectors in the identified group of cluster feature-vectors was accessed by a user of the user device 110 .
- the identified groups may be ranked based on the amount of native application content items represented by the cluster. Other types of ranking methods may also be employed to rank the identified groups of cluster feature-vectors.
- groups of cluster feature-vectors may also be identified, for example, based on frequency with which the native application content items represented by the group of cluster feature-vectors are accessed by user of the user device 110 , the frequency with which the native application content items were shared by the user of the user device 110 with users of other user devices, the frequency with which the native application content items were shared by the user of the user device 110 with a social media site, or the like.
- the user interface generation unit 170 may generate a selectable control such as selectable controls 192 a , 192 b , 192 c for display on the use interface 190 at stage A in response to the vector similarity search performed by the vector similarity unit 160 based on the query vector 146 a derived from (i) the one or more search terms 192 input by the user of the user device 110 and (ii) the context information that is indicative of the user context.
- the user interface generation unit 170 may associate a particular group of cluster feature-vectors with each selectable control.
- the user interface generation unit 170 may provide search results that identify native application content items that are represented by cluster feature-vectors in the group of cluster feature-vectors associated with the selected selectable control 192 a.
- the initial set of selectable controls 192 a , 192 b , 192 c may be based on the set of the highest ranked groups of cluster feature-vectors identified by the user interface generation unit 170 .
- the user interface unit 170 may have ranked the group of cluster feature-vectors associated with the contact “April Smith” as the highest ranked group of cluster feature-vectors because the user most recently sent a message to “April” using the native application 115 .
- the user interface unit 170 may have also highly ranked the group of cluster feature-vectors associated with the location “Italy” based on factors such as (i) the user has recently viewed content about Italy, (ii) the user has recently sent messages about Italy, and (iii) the group of cluster feature-vectors related to Italy includes more than a threshold number of cluster feature-vectors. Then, the user interface generation unit 170 has highly ranked an additional group of cluster feature-vectors related to a “Bday Party” due to other messages sent by the user of the user device to April Smith using the messaging app.
- the user interface generation unit 170 may associate each of the top ranked groups of cluster feature-vectors with selectable controls 192 a , 192 b , 192 c , respectively.
- Each respective selectable control 192 a , 192 b , 192 c may labeled with the title of the group of cluster feature-vectors that was generated by the user interface generation unit 170 such as “April Smith,” “Italy,” and “Bday Party,” respectively.
- an initial set of selectable controls 192 a , 192 b , 192 c corresponding to groups of cluster feature-vectors are shown in stage A as being provided in response to one or more search terms 192 input by a user of the user device 110 , the present disclosure need not be so limited.
- an initial set of selectable controls 192 a , 192 b , 192 c may be provided when a user opens an application that provides the interface 190 prior to the input of any search terms as a response to a zero-input query.
- the search engine 100 may receive data indicative of a zero-input query into the vector generation unit 140 which can generate a query vector for the zero-input query.
- the zero-input query vector may be a query vector that includes a numerical representation of one or more features extracted from the user context.
- the vector similarity unit 160 may identify one or more groups of cluster feature-vectors related to the zero-input query.
- the user interface generation unit 170 may rank the received one or more groups of cluster feature-vectors.
- the user interface generation unit 170 may select the one or more groups of cluster feature-vectors that are associated with native application content that was most recently accessed by the user of the user device, one or more groups of cluster feature-vectors that are associated with native application content that is most frequently accessed by the user of the user device, one or more groups of cluster feature-vectors that are associated with native application content related to the contact that the user most frequently communicates with, one or more groups of cluster feature-vectors that are associated with native application content related to the contact that the user most recently communicated with, or the like.
- the user interface generation unit 170 may provide 172 for display on the user device 110 one or more selectable controls that are associated with the selected groups of cluster feature-vectors in response to the zero-input query, with the groups of cluster feature-vectors being selected based on the group ranking assigned to each respective group of cluster feature-vectors.
- the user of user device 110 may select the selectable control 192 a that is associated with the group of cluster feature-vectors titled “April Smith.”
- the user interface generation unit 170 may provide a set of search results that each reference a native application content item that is represented by one of the cluster feature-vectors in the group of cluster feature-vectors associated with the selectable control 192 a .
- the group of cluster feature-vectors associated with the selectable control 192 a is all messages sent to “April Smith.”
- the user sent two messages to April Smith using native application 112 and native application 115 , which in this example are representative of the same messaging application.
- the group of cluster feature-vectors associated with the selectable control 192 a includes a group of cluster feature-vectors for all messages sent to “April Smith” using the messaging app.
- the cluster “April Smith” results in the display of search results that reference native application content items such as messages sent to April.
- the search results are displayed under the heading of the same native application (e.g., the messaging application 193 ) because the same native application was used to generate the native application content items referenced by the search results.
- the search results include a first search result 193 a that references a native application content item such as a message sent to April about Bob's Gelato in Washington, D.C. and a second search result 193 b that references a native application content item such as a message sent to April about Luigi's Gelato in Piazza Navona 193 b.
- messaging application 112 and messaging application 115 are the same messaging application.
- the present disclosure need not be so limited.
- both applications are messaging applications 112 , 115 may be the same messaging application (e.g., an email application), the messaging applications 112 , 115 may also be different messaging applications (e.g., an email application and an SMS messaging application).
- the first search result 193 a and the second search result 193 b would still both be presented in response to the selection of the selectable control 192 a for the reasons identified above.
- the first search result 193 a would be listed under a heading associated with a first messaging application and the second search result 193 b would be listed under a different heading associated with a second messaging application.
- the user of the user device may decide to retrieve messages related to a different topic or task.
- the user has selected selectable control 192 b that relates to the task of a trip to “Italy.”
- the user interface generation unit 170 may provide a set of search results that each reference a native application content item that is represented by one of the cluster feature-vectors in the group of cluster feature-vectors associated with the selectable control 192 b .
- the search results may be organized based on the native application type that was used to generate each respective native application content item that is referenced by each respective search result.
- the selection of the selectable control “Italy” 192 b returns search results corresponding to a group of cluster feature-vectors related to the user's upcoming trip to Italy.
- This set of cluster feature-vectors represents native application content items generated by multiple different native applications.
- this set of cluster feature-vectors represents native application content items generated by the messaging app, the travel app, and the trip mentor app.
- the respective search results that reference native application content items from each of the respective native applications are organized on the user interface under the headings 193 , 194 , and 195 respectively.
- Respective search results 193 a , 194 a , 194 b , 195 a may each be grouped under the heading of the native application that was used to generate the native application content items referenced by the search results 193 a , 194 a , 194 b , 195 a.
- the search engine 100 is able to recommend a selectable control to the user that is associated with the user's upcoming trip to Italy with April.
- Such a system can suggest tasks to the user that include highly accurate search results such as articles browsed using a “Trip Mentor App” that do not include the search term 192 “April” that the user of the user device 110 input into the query field 191 .
- the search engine 100 can enhance search results in comparison to systems that use keyword-based searching.
- the search engine 100 that indexes native application content using the cluster feature-vector disclosed herein can provide the user with the opportunity to revisit and review only native application content that corresponds to a particular topic or task. For example, by requesting only search results that reference native application content relevant to the task of the trip to “Italy,” the user can review native application content particularly related to the task of the trip to “Italy” while the search engine 100 filters out native application content that is not related to the trip to “Italy.”
- the search engine 100 may yield selectable controls 192 a , 192 b , 192 c in response to a received input search term of “April.” Then, as shown at stage C the user device may receive a request for native application content related to the trip to “Italy” when the user selects the selectable control “Italy” 192 b . In response to the selection of the selectable control “Italy” 192 b , the search engine 100 identifies, and returns search results referencing messages to April about the trip to “Italy” while eliminating search results that identify messages to April that are not about the trip to “Italy”—even if such messages include similar keywords.
- the user device 110 can determine based on vector similarity analysis described in this specification that the message to April about Bob's Gelato in DC is not related to the trip to “Italy” while the message to April about Luigi's Gelato in Piazza Navona is related to the trip to “Italy.”
- FIG. 2 is an example of a cluster feature-vector 210 that can be used to represent data from native applications.
- the search engine 100 disclosed by this specification uses a cluster feature-vector 210 to facilitate search and retrieval of native application content.
- Each cluster feature-vector 210 is a numerical representation of a set of data generated by a native application.
- the set of data generated by a native application may include, for example, native application content and context information associated with a user's interaction with one or more native applications.
- the numerical representation of each cluster feature-vector 210 is determined with reference to a cluster feature-vector vocabulary 200 .
- the cluster feature-vector vocabulary 200 includes many fields.
- the cluster feature-vector vocabulary 200 may include tens of thousands of fields, hundreds of thousands of fields, or more.
- Each field of the cluster feature-vector vocabulary 200 corresponds to a feature that may be extracted from a set of data generated by a native application that includes native application content, context information associated with one or more native applications, or both.
- the cluster feature-vector vocabulary 200 may include a field for each known word, each known phrase, or both 201 .
- the set of each known word or phrase may be determined, for example, using a dictionary.
- the set of known words or phrases may also include multiple known entities including location names, city names, business names, and the like.
- the cluster feature-vector vocabulary 200 may include one or more fields for each different type of context information.
- the feature vector vocabulary 200 may include fields 202 that each correspond to a document field that may be found in native application content.
- Document fields in native application content may include, for example, a “To:” field of a message, a “Subject” field of a message, a “Body” field of a message, a “Destination” field of a flight reservation, a “Date” field of a hotel reservation, a “Title” field of an article, or the like.
- the cluster feature-vector vocabulary 200 may include fields 203 that correspond to the native application associated with the application content item which the vector 210 represents.
- the cluster feature-vector vocabulary 200 may include fields 204 that correspond to the most recently used native applications.
- the cluster feature-vector vocabulary 200 may include fields 205 that correspond to native applications open on the user device when the user interacted with the content item on which the cluster feature-vector 210 represents.
- a cluster feature-vector 210 may be represented as an array of numerical values. Each numerical value in the array of numerical values may quantify a relationship between each respective feature of a native application content item, context information associated with one or more native applications, or both.
- the numerical values may include any numerical value(s) such as binary digits, scalar values, or the like.
- the cluster feature-vector 210 is an example of a cluster feature-vector that can be generated for the set of data 135 generated by the native application 115 in FIG. 1 . All numerical values used with reference to FIG. 2 are purely exemplary.
- the cluster feature-vector 210 for the set of data 135 generated by the native application 115 may include a value “0.75” for the entry 220 a corresponding to the feature word “Gelato” 220 indicating that the feature word “Gelato” 220 appears in the set of data 135 .
- the cluster feature-vector 135 may also include a value “0.95” for the entry 221 a corresponding to the feature entity “Piazza Navona” 221 indicating that the feature entity “Piazza Navona” appears in the set of data 135 .
- cluster feature-vector 210 may include a value of “0” assigned to the entry for features such as “Agent,” “Bob,” and “Hotel,” for example, because those feature words do not appear in the set of data 135 .
- the cluster feature-vector 210 may also include numerical values related to the context information provided in the set of data 135 .
- the entry corresponding to the “To:” field feature 222 may include a value “0.36” 222 a that indicates the native application content item represented by the feature vector 210 included a “To:” field, that the “To:” field includes text of “April,” or a combination of both.
- the entry 223 a may assign a value of “1” to the “Messaging Application” because the “Messaging Application” was used to create the set of data that the cluster feature-vector 210 represents.
- the entries 224 a , 225 a may include values of “0.85” and “0.95” for the features 224 , 225 , respectively, indicating that the “Trip Mentor App” was the most next most recently used native application (prior to the messaging application generating the set of data on which the cluster feature-vector 210 is based) and that the “Travel App” was the second most recently used native application (prior to the messaging application generating the set of data on which the cluster feature-vector 210 is based).
- the entries 226 a , 227 a , 228 a may be assigned a value that is indicative of whether or not the feature applications 226 , 227 , 228 , respectively, were open on the user device when the set of data 135 on which the cluster feature-vector is based was generated.
- cluster feature-vector vocabulary 200 and the cluster feature-vector 210 described with reference to FIG. 2 are merely exemplary, in some implementations the cluster feature-vector vocabulary may include more features, less features, or different features.
- FIG. 3 is a flowchart of an example of a process 300 for using a search engine 10 to retrieve application content items.
- the process 300 will be described as being performed by a user device.
- the user device 110 of FIG. 1 when appropriately programmed in accordance with this specification, can perform the process 300 .
- a user device may begin performance of the process 300 by receiving 310 one or more sets of data generated by one or more native applications.
- Each respective set of data may include native application content and context information associated with a user's interaction with one or more native applications.
- Context information may include information related the native application that generated the set of data, information related to the user's use of the native application that generated the set of data, information related to the user's use of other native applications in proximity to the native application, or the like.
- Examples of the types of context information may include, for example data that is indicative of a field that is associated with native application content a user interacted with, data that is indicative of user activity with a native application, data that is indicative of native application content creation time, data that is indicative of native application content interaction time, data that is indicative of a number of native application interactions, or the like.
- the user device may generate 320 a cluster feature-vector representation based on each set of data received from a native application.
- Generating a cluster feature-vector may include processing a set of data to extract multiple features from both the native application content and the context information associated with a user's interaction with one or more native applications.
- the generated cluster feature-vector is a numerical representation of each set of data that is received from the native applications. The numerical representation quantifies a relationship between each respective set of data and an established cluster feature-vector vocabulary.
- Features associated with the native application content may include, for example, features associated with every word in the native application content.
- the text of the application content may be annotated based on the application fields associated with the content. Accordingly, features associated with the structure of the native application document used to receive and display text on the native application interface may be the built into the cluster feature-vector.
- features extracted from the native application content may include features corresponding to entity names such as contact names, non-contact person names, place names, country names, city names, business names, or the like included in the native application content. Accordingly, features associated with particular entity names that exist in the text of application content may be built into the cluster feature-vector.
- the cluster feature-vector may also be generated based on features extracted from the context information received in the set of data from a native application.
- Features extracted from the context information may include, for example, features extracted from data indicative of user activity with one or more native applications installed on the user device. For example, features may be extracted from the context information that is indicative the popularity of native applications installed on the user device. Alternatively, or in addition, features may be extracted from the context information that are indicative of a user's pattern of switching between applications independent of session, a user's pattern of switching between applications in the same session, or the like. Alternatively, or in addition, features may be extracted from the context information based on application content creation time, application content interaction time, number of interactions with a native application, or the like.
- the user device may store 330 each generated cluster feature-vector representation in a search engine index.
- the search engine index is a cluster feature-vector storage area that organizes each of the cluster feature-vectors generated at stage 320 . Accordingly, the search engine index stores multiple cluster feature-vectors that each provide a numerical representation of the sets of data generated by the native applications. Each cluster feature-vector stored in the search engine index may be used to identify a native application content item on which the cluster feature-vector is based. Therefore, instead of, or in addition to, performing a keyword search based of application content items, the user device may use the search engine to perform a vector similarity search of the cluster feature-vectors stored in the search engine index.
- the user device may identify one or more cluster feature-vector representations as being similar to the query vector if a calculated similarity measure between the query vector and each of the one or more cluster feature-vector representations satisfies a predetermined threshold.
- the calculated similarity measure may include a distance that exists between the query vector and one or more of the cluster feature-vector representations stored in the search engine index.
- the distance between the query vector and the one or more cluster feature-vectors may be calculated, for example, using a cosine function.
- the query vector may include a numerical representation that is generated based on one or more search terms and a user context.
- the one or more search terms may include one or more terms input by a user or a zero-input query.
- the user context may include context information that is associated with the user's interaction with one or more native applications installed on the user device.
- the context information may include data that is indicative of user interaction with one or more other native applications installed on the user device, data that is indicative of the one or more applications that the user has recently used, data that is indicative of the order in which the user has recently used native applications, or the like.
- the context information may be obtained from a user profile associated with the user and maintained on the user device.
- the user profile may include, among other things, data that is indicative of the user's usage of one or more other native applications installed on the user device.
- the user device may identify 350 one or more topics, tasks, or the like that are associated with the set of cluster feature-vector representations. Identifying one or more topics, tasks, or the like that are associated with the set of cluster feature-vector representations includes, for example, using one or more clustering algorithms to group the set of cluster feature-vector representations identified at stage 340 into one or more groups of cluster feature-vectors. For example, the identified set of cluster feature-vector representations may be clustered based on a message recipient that is associated with the cluster feature-vectors, based on an entity associated with the cluster feature-vectors, based on an event associated with the cluster feature-vectors, based on the native application that is associated with the cluster feature-vectors, or the like.
- the clustering algorithms employed by the present disclosure may include any clustering algorithm capable of identifying groups of related cluster feature-vectors such as the k-means clustering algorithm, k-nearest neighbor classification, or the like.
- the client device may use information obtained from a global language model provided by one or more cloud services to identify relationships between two or more cluster feature-vectors.
- data from one or more global language models can be used by the user device to identify synonyms and similar concepts.
- data from one or more global language models may be used to determine words such as flight, trip, and hotel are related words.
- data from one or more global language models can be used by the user device to identify relationships between geographic locations, associate landmarks with a geographic location, or the like.
- data from one or more global language models may be used to determine that native application content that includes the term “Piazza Navona” is related to a native application content item that includes the term “Italy.”
- one or more content graphs may be accessed to identify particular relationships in application usage.
- an app content graph can be accessed to determine that applications such as a travel app and a trip mentor app are related native applications that are related to a trip a user is planning.
- the global language models may be installed on the client device or hosted by one or more cloud services.
- the user device may provide 360 a user interface including a selectable control that identifies one or more of the topics, tasks, or the like. Each selectable is associated with the group of cluster feature-vectors that define the topic, task, or the like. In response to the selection of the selectable control, the user device may provide search results that identify native application content items included in the group of cluster feature-vectors associated with the selectable control.
- the initial set of one or more selectable controls may be based on the set of the highest ranked topics, tasks, or the like.
- the topics, tasks, or the like may be ranked based on whether the respective topics, tasks, or the like include native application content items that were most recently interacted with, most frequently interacted with, or the like.
- topics, tasks, or the like may be ranked based on the number of native content application items associated with the topic, task, or the like.
- Each respective selectable control may be labeled with the title of the topic, task, or the like that was generated for the respective topic, task, or the like.
- Embodiments of the subject matter, the functional operations and the processes described in this specification can be implemented in digital electronic circuitry, in tangibly-embodied computer software or firmware, in computer hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them.
- Embodiments of the subject matter described in this specification can be implemented as one or more computer programs, i.e., one or more modules of computer program instructions encoded on a tangible nonvolatile program carrier for execution by, or to control the operation of, data processing apparatus.
- the program instructions can be encoded on an artificially generated propagated signal, e.g., a machine-generated electrical, optical, or electromagnetic signal that is generated to encode information for transmission to suitable receiver apparatus for execution by a data processing apparatus.
- the computer storage medium can be a machine-readable storage device, a machine-readable storage substrate, a random or serial access memory device, or a combination of one or more of them.
- data processing apparatus encompasses all kinds of apparatus, devices, and machines for processing data, including by way of example a programmable processor, a computer, or multiple processors or computers.
- the apparatus can include special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application specific integrated circuit).
- the apparatus can also include, in addition to hardware, code that creates an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, or a combination of one or more of them.
- a computer program (which may also be referred to or described as a program, software, a software application, a module, a software module, a script, or code) can be written in any form of programming language, including compiled or interpreted languages, or declarative or procedural languages, and it can be deployed in any form, including as a standalone program or as a module, component, subroutine, or other unit suitable for use in a computing environment.
- a computer program may, but need not, correspond to a file in a file system.
- a program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub programs, or portions of code).
- a computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
- the processes and logic flows described in this specification can be performed by one or more programmable computers executing one or more computer programs to perform functions by operating on input data and generating output.
- the processes and logic flows can also be performed by, and apparatus can also be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application specific integrated circuit).
- special purpose logic circuitry e.g., an FPGA (field programmable gate array) or an ASIC (application specific integrated circuit).
- Computers suitable for the execution of a computer program include, by way of example, can be based on general or special purpose microprocessors or both, or any other kind of central processing unit.
- a central processing unit will receive instructions and data from a read-only memory or a random access memory or both.
- the essential elements of a computer are a central processing unit for performing or executing instructions and one or more memory devices for storing instructions and data.
- a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto optical disks, or optical disks.
- mass storage devices for storing data, e.g., magnetic, magneto optical disks, or optical disks.
- a computer need not have such devices.
- a computer can be embedded in another device, e.g., a mobile telephone, a personal digital assistant (PDA), a mobile audio or video player, a game console, a Global Positioning System (GPS) receiver, or a portable storage device (e.g., a universal serial bus (USB) flash drive), to name just a few.
- PDA personal digital assistant
- GPS Global Positioning System
- USB universal serial bus
- Computer readable media suitable for storing computer program instructions and data include all forms of nonvolatile memory, media and memory devices, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks; magneto optical disks; and CD-ROM and DVD-ROM disks.
- semiconductor memory devices e.g., EPROM, EEPROM, and flash memory devices
- magnetic disks e.g., internal hard disks or removable disks
- magneto optical disks e.g., CD-ROM and DVD-ROM disks.
- the processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
- embodiments of the subject matter described in this specification can be implemented on a computer having a display device, e.g., a CRT (cathode ray tube), LCD (liquid crystal display), LED (light-emitting diode), or OLED (organic light-emitting diode) monitor, for displaying information to the user and a keyboard and a pointing device, e.g., a mouse, a trackball, or a touchscreen, by which the user can provide input to the computer.
- a display device e.g., a CRT (cathode ray tube), LCD (liquid crystal display), LED (light-emitting diode), or OLED (organic light-emitting diode) monitor
- a keyboard and a pointing device e.g., a mouse, a trackball, or a touchscreen, by which the user can provide input to the computer.
- a computer can interact with a user by sending documents to and receiving documents from a device that is used by the user; for example, by sending web pages to a web browser on a user's user device in response to requests received from the web browser.
- Embodiments of the subject matter described in this specification can be implemented in a computing system that includes a back end component, e.g., as a data server, or that includes a middleware component, e.g., an application server, or that includes a front end component, e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described in this specification, or any combination of one or more such back end, middleware, or front end components.
- the components of the system can be interconnected by any form or medium of digital data communication, e.g., a communication network. Examples of communication networks include a local area network (“LAN”) and a wide area network (“WAN”), e.g., the Internet.
- LAN local area network
- WAN wide area network
- the computing system can include clients and servers.
- a client and server are generally remote from each other and typically interact through a communication network.
- the relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.
Abstract
Description
Claims (20)
Priority Applications (7)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US15/401,592 US10650068B2 (en) | 2017-01-09 | 2017-01-09 | Search engine |
PCT/US2017/055926 WO2018128658A1 (en) | 2017-01-09 | 2017-10-10 | Search engine |
DE102017125164.2A DE102017125164A1 (en) | 2017-01-09 | 2017-10-26 | Search Engine |
DE202017106503.0U DE202017106503U1 (en) | 2017-01-09 | 2017-10-26 | Search Engine |
GB1717834.4A GB2558718A (en) | 2017-01-09 | 2017-10-30 | Search engine |
CN201711050202.7A CN108287862A (en) | 2017-01-09 | 2017-10-31 | Search engine |
US16/838,590 US11354367B2 (en) | 2017-01-09 | 2020-04-02 | Search engine |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US15/401,592 US10650068B2 (en) | 2017-01-09 | 2017-01-09 | Search engine |
Related Child Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US16/838,590 Continuation US11354367B2 (en) | 2017-01-09 | 2020-04-02 | Search engine |
Publications (2)
Publication Number | Publication Date |
---|---|
US20180196877A1 US20180196877A1 (en) | 2018-07-12 |
US10650068B2 true US10650068B2 (en) | 2020-05-12 |
Family
ID=60164855
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US15/401,592 Active 2037-08-05 US10650068B2 (en) | 2017-01-09 | 2017-01-09 | Search engine |
US16/838,590 Active 2037-04-14 US11354367B2 (en) | 2017-01-09 | 2020-04-02 | Search engine |
Family Applications After (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US16/838,590 Active 2037-04-14 US11354367B2 (en) | 2017-01-09 | 2020-04-02 | Search engine |
Country Status (5)
Country | Link |
---|---|
US (2) | US10650068B2 (en) |
CN (1) | CN108287862A (en) |
DE (2) | DE202017106503U1 (en) |
GB (1) | GB2558718A (en) |
WO (1) | WO2018128658A1 (en) |
Cited By (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10977250B1 (en) * | 2018-09-11 | 2021-04-13 | Intuit, Inc. | Responding to similarity queries using vector dimensionality reduction |
Families Citing this family (10)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20180189266A1 (en) * | 2017-01-03 | 2018-07-05 | Wipro Limited | Method and a system to summarize a conversation |
US20180336287A1 (en) * | 2017-05-22 | 2018-11-22 | Hcl Technologies Limited | A system and method for retrieving user specific results upon execution of a query |
US11295124B2 (en) | 2018-10-08 | 2022-04-05 | Xerox Corporation | Methods and systems for automatically detecting the source of the content of a scanned document |
US11397783B1 (en) * | 2018-12-12 | 2022-07-26 | Intuit, Inc. | Ranking similar users based on values and personal journeys |
CN109710744B (en) * | 2018-12-28 | 2021-04-06 | 合肥讯飞数码科技有限公司 | Data matching method, device, equipment and storage medium |
US11544322B2 (en) * | 2019-04-19 | 2023-01-03 | Adobe Inc. | Facilitating contextual video searching using user interactions with interactive computing environments |
CN110830654B (en) * | 2019-11-07 | 2020-12-08 | 腾讯科技（深圳）有限公司 | Method and equipment for playing voice message |
CN111046256B (en) * | 2019-12-03 | 2024-02-06 | 上海二六三通信有限公司 | Method and device for voice interaction based on interaction engine cluster |
US20220292809A1 (en) * | 2020-03-17 | 2022-09-15 | Samsung Electronics Co., Ltd. | Methods and systems for grouping of media based on similarities between features of the media |
CN111951077A (en) * | 2020-08-13 | 2020-11-17 | 中国民航信息网络股份有限公司 | Ticket buying scheme display method and system |
Citations (9)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
EP1669897A2 (en) | 2004-12-09 | 2006-06-14 | Sony United Kingdom Limited | Information handling |
US20120124061A1 (en) | 2010-11-12 | 2012-05-17 | Microsoft Corporation | Rich Search Over and Deep Integration with Applications |
US20120265753A1 (en) * | 2004-08-31 | 2012-10-18 | Research In Motion Limited | Method of searching for personal information management (pim) information and handheld electronic device employing the same |
US20130166543A1 (en) * | 2011-12-22 | 2013-06-27 | Microsoft Corporation | Client-based search over local and remote data sources for intent analysis, ranking, and relevance |
US20140358909A1 (en) | 2013-05-29 | 2014-12-04 | Microsoft Corporation | Search result contexts for application launch |
US20160188719A1 (en) * | 2014-12-29 | 2016-06-30 | Quixey, Inc. | Generating Search Results based on Clustered Application States |
US9442985B2 (en) * | 2006-07-21 | 2016-09-13 | Aol Inc. | Systems and methods for providing culturally-relevant search results to users |
US20160292159A1 (en) | 2015-03-31 | 2016-10-06 | Rovi Guides, Inc. | Methods and systems for generating cluster-based search results |
US20170124101A1 (en) * | 2015-10-29 | 2017-05-04 | Google Inc. | Indexing native application data |
Family Cites Families (5)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN102945273B (en) * | 2012-11-06 | 2015-11-25 | 北京百度网讯科技有限公司 | A kind of for providing the method and apparatus of Search Results |
CN104765769B (en) * | 2015-03-06 | 2018-04-27 | 大连理工大学 | The short text query expansion and search method of a kind of word-based vector |
US20160283564A1 (en) * | 2015-03-26 | 2016-09-29 | Dejavuto Corp. | Predictive visual search enginge |
CN105069457B (en) * | 2015-07-15 | 2020-02-11 | 杭州易现先进科技有限公司 | Image recognition method and device |
CN105279264B (en) * | 2015-10-26 | 2018-07-03 | 深圳市智搜信息技术有限公司 | A kind of semantic relevancy computational methods of document |
-
2017
- 2017-01-09 US US15/401,592 patent/US10650068B2/en active Active
- 2017-10-10 WO PCT/US2017/055926 patent/WO2018128658A1/en active Application Filing
- 2017-10-26 DE DE202017106503.0U patent/DE202017106503U1/en active Active
- 2017-10-26 DE DE102017125164.2A patent/DE102017125164A1/en active Pending
- 2017-10-30 GB GB1717834.4A patent/GB2558718A/en not_active Withdrawn
- 2017-10-31 CN CN201711050202.7A patent/CN108287862A/en active Pending
-
2020
- 2020-04-02 US US16/838,590 patent/US11354367B2/en active Active
Patent Citations (9)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20120265753A1 (en) * | 2004-08-31 | 2012-10-18 | Research In Motion Limited | Method of searching for personal information management (pim) information and handheld electronic device employing the same |
EP1669897A2 (en) | 2004-12-09 | 2006-06-14 | Sony United Kingdom Limited | Information handling |
US9442985B2 (en) * | 2006-07-21 | 2016-09-13 | Aol Inc. | Systems and methods for providing culturally-relevant search results to users |
US20120124061A1 (en) | 2010-11-12 | 2012-05-17 | Microsoft Corporation | Rich Search Over and Deep Integration with Applications |
US20130166543A1 (en) * | 2011-12-22 | 2013-06-27 | Microsoft Corporation | Client-based search over local and remote data sources for intent analysis, ranking, and relevance |
US20140358909A1 (en) | 2013-05-29 | 2014-12-04 | Microsoft Corporation | Search result contexts for application launch |
US20160188719A1 (en) * | 2014-12-29 | 2016-06-30 | Quixey, Inc. | Generating Search Results based on Clustered Application States |
US20160292159A1 (en) | 2015-03-31 | 2016-10-06 | Rovi Guides, Inc. | Methods and systems for generating cluster-based search results |
US20170124101A1 (en) * | 2015-10-29 | 2017-05-04 | Google Inc. | Indexing native application data |
Non-Patent Citations (6)
Title |
---|
GB Office Action in Great Britain Application No. GB1717834, dated Dec. 18, 2019, 6 pages. |
International Search Report and Written Opinion issued in International Application No. PCT/US2017/055926, dated Nov. 23, 2017, 17 pages. |
Kohonen et al."Self Organization of a Massive Document Collection," IEEE Transaction on Neural Networks, vol. 11(3) May 1, 2000, 12 pages. |
Office Action issued in British Application No. GB1717834.4, dated Apr. 4, 2018, 8 pages. |
PCT International Preliminary Report on Patentability in International Application No. PCT/US2017/055926, dated May 9, 2019, 11 pages. |
Written Opinion issued in International Application No. PCT/US2017/055926, dated Dec. 18, 2018, 10 pages. |
Cited By (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10977250B1 (en) * | 2018-09-11 | 2021-04-13 | Intuit, Inc. | Responding to similarity queries using vector dimensionality reduction |
Also Published As
Publication number | Publication date |
---|---|
DE102017125164A1 (en) | 2018-07-12 |
GB201717834D0 (en) | 2017-12-13 |
US11354367B2 (en) | 2022-06-07 |
WO2018128658A1 (en) | 2018-07-12 |
GB2558718A (en) | 2018-07-18 |
CN108287862A (en) | 2018-07-17 |
US20180196877A1 (en) | 2018-07-12 |
DE202017106503U1 (en) | 2018-01-19 |
US20200233914A1 (en) | 2020-07-23 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US11354367B2 (en) | Search engine | |
US11347783B2 (en) | Implementing a software action based on machine interpretation of a language input | |
US10832219B2 (en) | Using feedback to create and modify candidate streams | |
US20220036197A1 (en) | Cooperatively training and/or using separate input and subsequent content neural networks for information retrieval | |
US10373075B2 (en) | Smart suggestions for query refinements | |
US11048705B2 (en) | Query intent clustering for automated sourcing | |
US20190349320A1 (en) | System and method for automatically responding to user requests | |
US9443007B2 (en) | Tools and techniques for extracting knowledge from unstructured data retrieved from personal data sources | |
US20160306800A1 (en) | Reply recommendation apparatus and system and method for text construction | |
EP4029204A1 (en) | Composing rich content messages assisted by digital conversational assistant | |
US20170300563A1 (en) | Generating text snippets using supervised machine learning algorithm | |
US9152692B2 (en) | Generating n-gram clusters associated with events | |
CN112889043A (en) | User-centric browser location | |
US20160092771A1 (en) | Analysis of social media messages | |
US20150199402A1 (en) | Computerized systems and methods for indexing and serving recurrent calendar events | |
US20180089607A1 (en) | Presenting endorsements using analytics and insights | |
Rahnama | Distributed real-time sentiment analysis for big data social streams | |
Diesner | Words and networks: How reliable are network data constructed from text data? | |
CN110334112B (en) | Resume information retrieval method and device | |
US9910921B2 (en) | Keyword refinement in temporally evolving online media | |
US11914600B2 (en) | Multiple semantic hypotheses for search query intent understanding | |
CN112182239A (en) | Information retrieval method and device | |
US20190102393A1 (en) | Ranking contact entries | |
CN112906399B (en) | Method, apparatus, device and storage medium for determining emotional state | |
Sharma et al. | Performing interest mining on tweets of twitter users for recommending other users with similar interests |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:MERTENS, TIMO;GUBIN, MAXIM;REEL/FRAME:041191/0728Effective date: 20170207 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044567/0001Effective date: 20170929 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CERTIFICATE OF CONVERSION - CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:045008/0470Effective date: 20170930 |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: RESPONSE TO NON-FINAL OFFICE ACTION ENTERED AND FORWARDED TO EXAMINER |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: FINAL REJECTION MAILED |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: DOCKETED NEW CASE - READY FOR EXAMINATION |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: NON FINAL ACTION MAILED |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: RESPONSE TO NON-FINAL OFFICE ACTION ENTERED AND FORWARDED TO EXAMINER |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 4 |
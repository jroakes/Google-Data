US8793806B1 - Systems and methods to selectively limit access only to a subset of content, identified in a whitelist, of a library of content - Google Patents
Systems and methods to selectively limit access only to a subset of content, identified in a whitelist, of a library of content Download PDFInfo
- Publication number
- US8793806B1 US8793806B1 US13/548,657 US201213548657A US8793806B1 US 8793806 B1 US8793806 B1 US 8793806B1 US 201213548657 A US201213548657 A US 201213548657A US 8793806 B1 US8793806 B1 US 8793806B1
- Authority
- US
- United States
- Prior art keywords
- whitelist
- token
- custom
- content
- content items
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active
Links
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L63/00—Network architectures or network communication protocols for network security
- H04L63/10—Network architectures or network communication protocols for network security for controlling access to devices or network resources
- H04L63/101—Access control lists [ACL]
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F21/00—Security arrangements for protecting computers, components thereof, programs or data against unauthorised activity
- G06F21/60—Protecting data
- G06F21/62—Protecting access to data via a platform, e.g. using keys or access control rules
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F21/00—Security arrangements for protecting computers, components thereof, programs or data against unauthorised activity
- G06F21/60—Protecting data
- G06F21/62—Protecting access to data via a platform, e.g. using keys or access control rules
- G06F21/6218—Protecting access to data via a platform, e.g. using keys or access control rules to a system of files or objects, e.g. local or distributed file system or database
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F2221/00—Indexing scheme relating to security arrangements for protecting computers, components thereof, programs or data against unauthorised activity
- G06F2221/21—Indexing scheme relating to G06F21/00 and subgroups addressing additional information or applications relating to security arrangements for protecting computers, components thereof, programs or data against unauthorised activity
- G06F2221/2143—Clearing memory, e.g. to prevent the data from being stolen
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/01—Protocols
- H04L67/02—Protocols based on web technology, e.g. hypertext transfer protocol [HTTP]
Definitions
- This disclosure generally relates to systems and methods that facilitate selectively limiting access only to a subset of content, identified in a whitelist, of a library of content.
- the internet allows content providers, such as publishers and individuals, to easily provide content to a large population of content consumers.
- Vast amounts of content are being published by content providers to content sites, such as social media and social networking sites.
- content sites such as social media and social networking sites.
- individuals with mobile phones can record events and publish videos to a social media site for anyone to view.
- more formal publishers such as for example educational institutions, advertisers, or production companies, produce professional quality content to be published on the same content sites as an individual.
- a consumer wanting to explore available content may perform a search on the content site to retrieve a resulting list of content.
- certain entities from which a consumer may want to access the content site may find certain content objectionable.
- a school may want its students to have access to educational content on the content site, but not other content.
- entities have not been able to restrict access to specific content on a content site, and thus these entities typically block access to the content site.
- a whitelist component that generates a whitelist, including one or more content items from a library of content items, associated with a token, wherein the token indicates restriction of content items to the whitelist associated with the token
- a token receiving component that receives a request for access to the library of content items, wherein the request includes the token
- a content presentation component that, in response to receipt of the token indicating restriction of content items to a whitelist associated with the token, presents a user interface in whitelist restricted mode that restricts access to the library of content items to the one or more content items on the whitelist.
- a whitelist associated with a token is generated, including one or more content items from a library of content items, wherein the token indicates restriction of content items to the whitelist associated with the token, a request is received for access to the library of content items, wherein the request includes the token and, in response to receipt of the token indicating restriction of content items to the whitelist associated with the token, a user interface is presented in whitelist restricted mode that restricts access restricts access to the library of content items to the one or more content items on the whitelist.
- FIG. 1 illustrates a block diagram of an exemplary non-limiting system that selectively provides content to a plurality of client devices based upon whitelists and tokens in accordance with an implementation of this disclosure.
- FIG. 2 illustrates a block diagram of an exemplary non-limiting whitelist component that generates whitelists, associated with tokens, identifying unrestricted content in accordance with an implementation of this disclosure.
- FIG. 3 illustrates a block diagram of an exemplary non-limiting content presentation component that selectively presents a user interface in a mode to restrict content display based upon one or more whitelists in accordance with an implementation of this disclosure.
- FIG. 4A illustrates an exemplary non-limiting example of a user interface associated with a video application content site presented in whitelist editing mode in accordance with an implementation of this disclosure.
- FIG. 4B illustrates an exemplary non-limiting example of a user interface associated with a video application content site presented for editing a custom whitelist in accordance with an implementation of this disclosure.
- FIG. 4C illustrates an exemplary non-limiting example of a user interface associated with a video application content site for interacting with videos in normal mode in accordance with an implementation of this disclosure.
- FIG. 4D illustrates an exemplary non-limiting example of a user interface associated with a video application content site for interacting with videos in whitelist restricted mode in accordance with an implementation of this disclosure.
- FIG. 4E illustrates an exemplary non-limiting example of a user interface associated with a video application content site for playing back a video in whitelist restricted mode in accordance with an implementation of this disclosure.
- FIG. 5 illustrates an exemplary non-limiting flow diagram for issuing a token in accordance with an implementation of this disclosure.
- FIG. 6 illustrates an exemplary non-limiting flow diagram for presenting content in accordance with an implementation of this disclosure.
- FIG. 7 illustrates an exemplary non-limiting flow diagram for generating a global whitelist in accordance with an implementation of this disclosure.
- FIG. 8 illustrates an exemplary non-limiting flow diagram for generating a custom whitelist in accordance with an implementation of this disclosure.
- FIG. 9 is a block diagram representing an exemplary non-limiting networked environment in which the various embodiments can be implemented.
- FIG. 10 is a block diagram representing an exemplary non-limiting computing system or operating environment in which the various embodiments can be implemented.
- users can opt-out of providing personal information, demographic information, location information, proprietary information, sensitive information, or the like in connection with data gathering aspects.
- one or more implementations described herein can provide for anonymizing collected, received, or transmitted data.
- an entity can be any organization of individuals for which access to content is to be restricted from within the computer infrastructure of the entity.
- an entity can be a school system that wants to restrict access by the students on school system computers or network to a limited subset of content on a content site, for example to only be able to access education content.
- a religious organization may want to restrict access by their members to certain content on a content site when the members employ the religious organization's computers or network.
- a business or government may want to restrict access by their employees to specific content on a content site when the employees are using the business or government's computers or network.
- Content can include, for example, video, audio, image, text, or any combination thereof, non-limiting examples of which include, music, speeches, cartoons, short films, movies, televisions shows, documents, books, magazines, articles, novels, quotes, poems, comics, advertisements, photos, posters, prints, paintings, artwork, graphics, games, applications, or any other creative work that can be captured and/or conveyed through video, audio, image, text, or any combination thereof.
- a social networking application may contain video or photo content that users have uploaded to share.
- a music application can contain music available for listening.
- a further non-limiting example is an education site that contains a combination of text articles, videos, photos, and audio recordings.
- a tablet device may have game applications available for playing.
- the content can be available on an intranet, internet, or can be local content.
- an example school entity and restriction to educational video content is employed for illustrative purposed only. It is to be appreciated that any type of entity or content can be employed.
- FIG. 1 depicts a system 100 that selectively provides content to a plurality of client devices 180 based upon whitelists.
- System 100 includes a content server 110 that provides content to client devices 180 remotely.
- content server 110 receives or access content from a plurality of content providers 170 .
- content server 110 , client devices 180 , and content providers 170 can receive input from users to control interaction with and presentation of content, for example, using input devices, non-limiting examples of which can be found with reference to FIG. 10 .
- Content server 110 , client device 180 , and content providers 170 each respectively include a memory that stores computer executable components and a processor that executes computer executable components stored in the memory, a non-limiting example of which can be found with reference to FIG. 10 .
- Client device 180 and content provider 170 can communicate via a wired and/or wireless network to content server 110 . It is to be appreciated that while only one content server 110 is depicted, client device 180 and content provider 170 can communicate with a plurality of content servers 110 concurrently. Furthermore, while only two client devices 180 are depicted, it is to be appreciated that any suitable number of client devices 180 can concurrently interact with content server 110 . Additionally, while only two content providers 170 are depicted, it is to be appreciated that any suitable number of content providers 170 can concurrently interact with content server 110 .
- Content server 110 , client device 180 , and content provider 170 can be any suitable type of device for interacting with or supplying content locally, or remotely over a wired or wireless communication link, non-limiting examples of which include, a mobile device, a mobile phone, a camera, a camcorder, a video camera, personal data assistant, laptop computer, tablet computer, desktop computer, server system, cable set top box, satellite set top box, cable modem, television set, media extender device, blu-ray device, DVD (digital versatile disc or digital video disc) device, compact disc device, video game system, portable video game console, audio/video receiver, radio device, portable music player, navigation system, car stereo, etc.
- video content server 110 , client device 180 , and content provider 170 can include a user interface (e.g., a web browser or application), that can receive and present displays and generated locally or remotely.
- Content server 110 includes a token issuing component 120 that issues tokens to entities.
- Content server 110 further includes whitelist component 130 that generates whitelists identifying unrestricted content.
- content server 110 includes a token receiving component 140 that receives tokens associated with requests from client devices 180 .
- Content server 110 also includes a content presentation component 150 that selectively presents content to client devices 180 based upon whitelists and tokens.
- content server 110 includes a data store 160 that can store content, as well as, data generated by token issuing component 120 , whitelist component 130 , token receiving component 140 , or content presentation component 150 .
- Data store 160 can be stored on any suitable type of storage device, non-limiting examples of which are illustrated with reference to FIGS. 9 and 10 .
- token issuing component 120 receives a request from an entity, for example from a client device 180 associated with the entity, to issue a token to the entity.
- the entity can log into a user interface associated with token issuing component 120 to request a token.
- the entity can request issuance of a token via a Hypertext Transfer Protocol (HTTP) command.
- HTTP Hypertext Transfer Protocol
- the entity can request issuance of a token via an application programming interface associated with token issuing component 120 . It is to be appreciated that any suitable mechanism for an entity to request a token from a content site can be employed.
- Token issuing component 120 issues a token with a unique identifier to the entity.
- the issued token can be a token associated with a whitelist associated with the content site, such as a global or custom whitelist. It is to be further appreciated that additional tokens, with respective unique identifiers, can be issued to the entity associated with additional global or custom whitelists.
- whitelist component 130 that generates whitelists, associated with tokens, identifying unrestricted content.
- a whitelist identifies content that is accessible (unrestricted) to users employing a token associated with the whitelist. For example, when a user attempts to access a content site and the token is submitted with the user's access attempt, the content site will limit access such that the user will only be able to access content identified in the whitelist associated with the token. It is to be appreciated that in a non-limiting example, a whitelist can be associated with a plurality of tokens, for example, a global whitelist at a content site.
- Whitelist component 130 includes, whitelist generation component 210 that generates one or more global whitelists associated with the content site.
- whitelist generation component 210 can employ content filtering criteria, such as established by administrators of the content site, for filtering content from a library of available content for inclusion on a global whitelist.
- content filtering criteria can include, content provider, text, images, audio or video characteristics, metadata, voice recognition, facial recognition, speech to text conversion, content subject matter, demographics, inappropriateness flags, rating, parental rating, parental advisory, comments, or any other criteria associated with content.
- whitelist component 130 maintains a mapping between whitelists and tokens, thereby allowing a many-to-one relationship between whitelists and tokens. For example, a content site many have more than one global whitelist, and an entity can select via a user interface (not shown) which global or custom whitelists to associate with their token.
- whitelist component 130 includes whitelist user interface component 220 that provides a mechanism for an entity to manage custom whitelists.
- an entity can request additional tokens with respective unique identifiers be issued to the entity that are used to create custom whitelists.
- a school system may want to create custom whitelists that are associated with sub-groups of their population of users. For example, the school system may want to have separate custom whitelists for grade K-6, middle school grades, high-school grades, teachers, and school administrators. In another non-limiting example, a school system may want to create custom whitelists that are associated with specific computer equipment in their computing environment.
- a math custom whitelist that only allows access to education math content from computers in the math lab
- a physics lab would have a custom physics whitelist that only allows access to physics educational content from computers in the physics lab.
- any number of custom whitelists can be created to limit content access for any subgroup of users or computing infrastructure.
- specific tokens associated with subgroups of users or computing infrastructure can be communicated to content server 110 along with a requests from the subgroups.
- a token associated with a K-6 GRADE custom whitelist can be employed when student from grades K-6 attempt to access content server 110 .
- a token associated with a MATH LAB custom whitelist can be employed when students attempt to access content server 110 from the math lab. It is to be appreciated that multiple tokens can be employed when attempting to access content server 110 to limit content to an intersection of the content identified in the multiple whitelists associated with the tokens. For example, if a student from K-6 is attempting to access content server 110 from the math lab, then two tokens can be employed, one associated with the K-6 GRADE custom whitelist and one associated with the MATH LAB custom whitelist, to limit content to an intersection of the content identified in the two whitelists. It is to be appreciated that in another non-limiting example, content can limited to a union of the content identified in the multiple whitelists associated with the tokens.
- User interface 405 associated with a video application content site presented by whitelist user interface component 220 .
- User interface 405 includes a notification area 410 that provides notification to the user using graphics or text about the mode of the user interface. Additionally, user interface 405 includes an application title area 415 that indicates the application currently active or in the foreground of the user interface, which in this example is a “VIDEO APPLICATION”.
- User interface 405 also includes a search area 420 that allows for entering a search for content in the “VIDEO APPLICATION”.
- user interface 405 includes user area 425 that indicates the current user signed into the video application, which in this example is “ENTITY 1”, and that also provides a sign-out selection element 430 for the user to sign out of the application.
- User interface 405 further includes a function title area 435 that indicates a current functional area of the application, which in this non-limiting example is “CUSTOM WHITELISTS” representing a function for managing a list of custom whitelists.
- custom whitelists are depicted along with respective selection elements 445 A-E to allow a user to select an action to perform with the associated custom whitelist, for example, by a menu that is activated upon selection of selection elements 445 A-E. It is to be appreciated that while only five custom whitelists are depicted, any number of whitelists can be included. Furthermore, navigation elements can be included for navigating the list of custom whitelists, non-limiting examples of which include a scrolling element or touchscreen swipe gesture navigation.
- Actions can include, but are not limited to, editing the custom whitelist, or marking the custom whitelist as enabled or disabled.
- User interface 405 also includes a new whitelist selection element 442 that presents a whitelist editor for creating a new custom whitelist. It is to be appreciated that creation of a new custom whitelist can initiate a request to token issuing component 120 for issuance of a new token to associate with the new custom whitelist.
- Whitelist user interface component 220 can store any selections or entries made by the user using user interface 405 .
- user interface 405 is depicted where “ENTITY 1” has selected “K-6 GRADE TOKEN” 440 A custom whitelist for editing.
- function title area 435 indicates the current functional area of the application as “CUSTOM WHITELIST EDITOR”.
- User interface 405 further includes a whitelist selection menu 450 that allows for selection of a custom whitelist for editing, this example depicting “K-6 GRADE TOKEN” associated with “K-6 GRADE TOKEN” 440 A whitelist.
- whitelist selection menu 450 can be a drop down menu that includes a list of the custom whitelists previously created.
- whitelist selection menu 450 can include a selectable entry for creating a new custom whitelist.
- User interface 405 also includes an added to whitelist area 452 that shows content that is currently in the custom whitelist selected in whitelist selection menu 450 .
- added to whitelist area 452 shows “ELEPHANT VIDEO . . . SOCIAL STUDIES VIDEO” currently in “K-6 GRADE TOKEN” 440 A custom whitelist.
- User interface 405 includes an available content area 454 that shows content that is available to be added to the custom whitelist selected in whitelist selection menu 450 . It is to be appreciated that available content can be content that is stored locally on content server 110 or remotely at content providers 170 . In this example, available content area 454 shows “BEAR MAULING VIDEO . . . PHYSICS VIDEO” available to be added to “K-6 GRADE TOKEN” 440 A custom whitelist. In addition, the user can narrow the list of available content by entering a query in search area 420 , results of which would appear in available content area 454 . User interface 405 includes a scrolling control element 456 for navigating the list of available content in available content area 454 . It is to be understood that added to whitelist area 452 can also include a scrolling control element 456 for navigating the list of content in a custom whitelist.
- User interface 405 includes a remove content selection element 457 for moving content from the list on the left to the list on the right, in this example, moving content from the added to whitelist area 452 to the available content area 454 .
- User interface 405 also includes an add content selection element 458 for moving content from the list on the right to the list on the left, in this example, moving content from the available content area 454 to the added to whitelist area 452 .
- “ENTITY 1” can use add content selection element 457 and remove content selection element 257 to configure the content included in a custom whitelist (whitelist input).
- the configured custom whitelist can be stored by whitelist user interface component 220 , for example, automatically upon the user navigating away from the “CUSTOM WHITELIST EDITOR” function, upon the user selecting a save whitelist selection element (not depicted), the user performing a specific gesture, or by any other suitable mechanism for storing a custom whitelist.
- whitelist component 130 includes whitelist application programming interface 230 component for receiving a new or modified custom whitelist from an entity.
- an entity can create a custom outside of content server 110 and later submit the custom whitelist to content server 110 using whitelist application programming interface 230 .
- an entity can receive a custom whitelist from a content provider or other entity and submit the custom whitelist to content server 110 using whitelist application programming interface 230 .
- the whitelist can be submitting by the entity to the whitelist application programming interface 230 in any suitable format, non-limiting examples of which include extensible markup language (XML), comma separated values (CSV), extensible binary meta language (EBML), web distributed data exchange (WDDX), javascript object notation (JSON), simple declarative language (SD,), hypertext markup language (HTML) text, or any other data transport format.
- XML extensible markup language
- CSV comma separated values
- EBML extensible binary meta language
- WDDX web distributed data exchange
- JSON javascript object notation
- SD simple declarative language
- HTTP hypertext markup language
- HTML hypertext markup language
- token receiving component 140 receives a token associated with a request for access to content server 110 .
- Token receiving component 140 identifies a whitelist associated with the token.
- the token can be received through any suitable mechanism, non-limiting examples of which include a Hypertext Transfer Protocol (HTTP) header, a Uniform Resource Locator (URL) parameter, or a Hypertext Transfer Protocol (HTTP) cookie.
- HTTP Hypertext Transfer Protocol
- URL Uniform Resource Locator
- HTTP Hypertext Transfer Protocol
- token receiving component 140 can receive multiple tokens associated with a request for access to content server 110 , as described above, and identify whitelists associated with the multiple tokens.
- content presentation component 150 includes a content user interface component 310 that selectively presents a user interface in a mode to restrict content access based upon one or more whitelists identified by token receiving component 140 . Furthermore, content presentation component 150 includes a search component 320 the selectively restricts search results of content based upon one or more whitelists identified by token receiving component 140 . It is to be appreciated that a token may not be submitted with a request for access to content server 110 , and thus content presentation component 150 would not limit presentation or searching of content according to whitelists.
- Notification area 410 indicates the video application content site is being employed in “NORMAL MODE” normal mode, meaning there are no whitelist restrictions on accessing or searching content.
- Function title area 435 indicates the current functional area of the application as “VIDEOS” for interacting with videos, such as searching, browsing, or selection.
- user interface 405 includes user area 425 that indicates the current user signed into the video application, which in this example is “USER 1”, and that also provides a sign-out selection element 430 for the user to sign out of the application.
- a user does not need to sign into the video application content site in order to employ the site.
- signing in to the site can be optional, such as to save preferences of the user.
- a search for “ANIMALS” was entered in search area 420 .
- Search results area 460 depicts videos “WORM VIDEO” 460 A, “KITTEN VIDEO” 460 B, “BEAR MAULING VIDEO” 460 C, “GIRAFFE VIDEO” 460 D, “SHARK ATTACK VIDEO” 460 E, “ELEPHANT VIDEO” 460 F which are visible in a results list generated by search component 320 , and videos “FISH VIDEO” 460 G and “BIRD VIDEO” 460 H which are partially shown in the results lists. It is to be appreciated that the results list depicted in search results area can include any number of videos and can be navigated using any suitable mechanism, a non-limiting example of a scrolling control element 456 is depicted.
- search results area 460 if no search term is entered, all available videos can be listed in search results area 460 . In another non-limiting example, a subset of available videos can be presented, for example, based upon inferred interests of “USER 1”.
- FIG. 4D is depicted a non-limiting example user interface 405 associated with a video application content site presented by content user interface component 310 when a request for access to content server 110 was received with one or more tokens.
- content presentation component 150 can restrict access or search only to content within the intersection of content identified in the one or more whitelists associated with the one or more tokens.
- content presentation component 150 can restrict access or search only to content within the union of content identified in the one or more whitelists associated with the one or more tokens.
- Notification area 410 indicates the video application content site is being employed in “EDU MODE” whitelist restricted mode, meaning that the video application content site is being accessed with whitelist restrictions on access and searching of content.
- Function title area 435 indicates the current functional area of the application as “VIDEOS” for interacting with videos, such as searching, browsing, or selection.
- user interface 405 includes user area 425 that indicates the current user signed into the video application, which in this example is “USER 1”, and that also provides a sign-out selection element 430 for the user to sign out of the application.
- a whitelist notification area 462 can be presented that indicates the whitelists that being employed to restrict access to content, which in this example is “GRADE K-6 TOKEN”.
- a search for “ANIMALS” was entered in search area 420 .
- Search results area 460 depicts videos that identified in the “GRADE K-6 TOKEN” whitelist including “WORM VIDEO” 460 A, “KITTEN VIDEO” 460 B, “GIRAFFE VIDEO” 460 D, “ELEPHANT VIDEO” 460 F, “FISH VIDEO” 460 G, and “BIRD VIDEO” 460 H which are visible in a results list generated by search component 320 , and videos 4601 and 460 J which are partially shown in the results lists. It is to be appreciated in this example, that “BEAR MAULING VIDEO” 460 C and “SHARK ATTACK VIDEO” 460 E shown in FIG.
- results list depicted in search results area can include any number of videos and can be navigated using any suitable mechanism, a non-limiting example of a scrolling control element 456 is depicted. It is to be appreciated that in a non-limiting example, if no search term is entered all available videos on the “GRADE K-6 TOKEN” whitelist can be listed in search results area 460 . In another non-limiting example, a subset of available videos on the “GRADE K-6 TOKEN” whitelist can be presented, for example, based upon inferred interests of “USER 1”.
- Notification area 410 indicates the video application content site is being employed in “EDU MODE” educational mode, meaning that the video application content site is being accessed with whitelist restrictions.
- Function title area 435 indicates the current functional area of the application as “VIDEO PLAYER” for playing back a video.
- user interface 405 includes user area 425 that indicates the current user signed into the video application, which in this example is “USER 1”, and that also provides a sign-out selection element 430 for the user to sign out of the application.
- Video playback area 461 depicts video player 465 playing back “ELEPHANT VIDEO” 460 F and a see more selection element 470 for showing related content.
- see more selection element 470 can be selected by “USER 1” to show content related to “ELEPHANT VIDEO” 460 F, non-limiting examples of which include videos from the same content provider, videos with similar subject matter, or any other criteria for identifying related content.
- EEU MODE the related content from see more selection element 470 is limited to content in the one or more whitelists as discussed above in relation to FIG. 4D .
- NVMAL MODE the related content from see more selection element 470 is not limited to content in whitelists as discussed above in relation to FIG.
- playback controls appropriate for the content can be presented.
- slider control 467 A is shown that allows for selection of point of playback of the video content depicted.
- rewind control 467 B, stop control 467 C, pause control 467 D, play control 467 E, and fast forward control 467 F are depicted.
- FIGS. 5-8 illustrate various methodologies in accordance with certain disclosed aspects. While, for purposes of simplicity of explanation, the methodologies are shown and described as a series of acts, it is to be understood and appreciated that the disclosed aspects are not limited by the order of acts, as some acts may occur in different orders and/or concurrently with other acts from that shown and described herein. For example, those skilled in the art will understand and appreciate that a methodology can alternatively be represented as a series of interrelated states or events, such as in a state diagram. Moreover, not all illustrated acts may be required to implement a methodology in accordance with certain disclosed aspects. Additionally, it is to be further appreciated that the methodologies disclosed hereinafter and throughout this disclosure are capable of being stored on an article of manufacture to facilitate transporting and transferring such methodologies to computers.
- an exemplary method 500 for issuing a token is depicted.
- a request for issuance of a token is received from a client device 180 associated with an entity (e.g. by a token issuing component 120 ).
- a token with a unique identifier is issued to the entity (e.g. by token issuing component 120 ).
- a decision is made whether the request to issue a token was associated with creating a custom whitelist (e.g. by a token issuing component 120 ). If the decision is “NO”, meaning the request is not associated with creating a custom whitelist, the method proceeds to reference numeral 540 .
- the method proceeds to reference numeral 550 .
- the operation at reference numeral 530 is not required if custom whitelists are not employed, in which case the method would proceed from reference numeral 520 to reference numeral 540 .
- the issued token is associated with a global whitelist (by a token issuing component 120 ).
- the issued token is associated with the custom whitelist (e.g., by a token issuing component 120 ).
- an exemplary method 600 for presenting content is depicted.
- a request for access to content is received from a client device 180 associated with an entity (e.g. by a content server 110 or a token receiving component 140 ).
- a decision is made whether one or more tokens were associated or received with the request (e.g. by a content server 110 or a token receiving component 140 ). If the decision is “NO”, meaning one or more tokens were not associated or received with the request, the method proceeds to reference numeral 630 . If the decision is “YES”, meaning one or more tokens were associated or received with the request, the method proceeds to reference numeral 640 .
- a user interface is presented in normal mode along with content (by a content presentation component 150 , content user interface component 310 , or a search component 320 ).
- one or more whitelists associated with the one or more tokens are identified (by a token receiving component 140 ).
- a user interface is presented in whitelist restricted mode along with content associated with the identified one or more whitelists (by a content presentation component 150 , content user interface component 310 , or a search component 320 ).
- an exemplary method 700 for generating a global whitelist is depicted.
- content filtering criteria is received (e.g. by a whitelist component 130 or whitelist generation component 210 ).
- a library of content is searched based upon the content filtering criteria (e.g. by a whitelist component 130 or whitelist generation component 210 ).
- a global whitelist is generating based upon the results of the search at reference numeral 720 (e.g. by a whitelist component 130 or whitelist generation component 210 ).
- all content identified in the search results can be excluded from the global whitelist.
- all content identified in the search results can be included in the global whitelist.
- an exemplary method 800 for generating a custom whitelist is depicted.
- a whitelist editing mode user interface is presented (e.g. by a whitelist component 130 or whitelist user interface component 220 ).
- custom whitelist input is received specifying content to add to or exclude from a custom whitelist (e.g. by a whitelist component 130 or whitelist user interface component 220 ).
- a custom whitelist is generating based upon custom whitelist input (e.g. by a whitelist component 130 or whitelist generation component 210 ).
- a decision is made whether the generated custom whitelist is new (e.g.
- a whitelist component 130 or whitelist generation component 210 determines whether the generated custom whitelist is new. If the decision is “YES”, meaning the generated custom whitelist is new, the method proceeds to reference numeral 850 . If the decision is “NO”, meaning the generated custom whitelist is not new, the method ends. At reference numeral 850 , a new token is issued and associated with the generated custom whitelist (e.g. by a token issuing component 120 ).
- the various embodiments described herein can be implemented in connection with any computer or other client or server device, which can be deployed as part of a computer network or in a distributed computing environment, and can be connected to any kind of data store where media may be found.
- the various embodiments described herein can be implemented in any computer system or environment having any number of memory or storage units, and any number of applications and processes occurring across any number of storage units. This includes, but is not limited to, an environment with server computers and client computers deployed in a network environment or a distributed computing environment, having remote or local storage.
- Distributed computing provides sharing of computer resources and services by communicative exchange among computing devices and systems. These resources and services include the exchange of information, cache storage and disk storage for objects, such as files. These resources and services can also include the sharing of processing power across multiple processing units for load balancing, expansion of resources, specialization of processing, and the like. Distributed computing takes advantage of network connectivity, allowing clients to leverage their collective power to benefit the entire enterprise. In this regard, a variety of devices may have applications, objects or resources that may participate in the various embodiments of this disclosure.
- FIG. 9 provides a schematic diagram of an exemplary networked or distributed computing environment.
- the distributed computing environment comprises computing objects 910 , 912 , etc. and computing objects or devices 920 , 922 , 924 , 926 , 928 , etc., which may include programs, methods, data stores, programmable logic, etc., as represented by applications 930 , 932 , 934 , 936 , 938 .
- computing objects 910 , 912 , etc. and computing objects or devices 920 , 922 , 924 , 926 , 928 , etc. may comprise different devices, such as personal digital assistants (PDAs), audio/video devices, mobile phones, MP3 players, personal computers, laptops, tablets, etc.
- PDAs personal digital assistants
- Each computing object 910 , 912 , etc. and computing objects or devices 920 , 922 , 924 , 926 , 928 , etc. can communicate with one or more other computing objects 910 , 912 , etc. and computing objects or devices 920 , 922 , 924 , 926 , 928 , etc. by way of the communications network 940 , either directly or indirectly.
- network 940 may comprise other computing objects and computing devices that provide services to the system of FIG. 9 , and/or may represent multiple interconnected networks, which are not shown.
- computing objects or devices 920 , 922 , 924 , 926 , 928 , etc. can also contain an application, such as applications 930 , 932 , 934 , 936 , 938 , that might make use of an API, or other object, software, firmware and/or hardware, suitable for communication with or implementation of various embodiments of this disclosure.
- an application such as applications 930 , 932 , 934 , 936 , 938 , that might make use of an API, or other object, software, firmware and/or hardware, suitable for communication with or implementation of various embodiments of this disclosure.
- computing systems can be connected together by wired or wireless systems, by local networks or widely distributed networks.
- networks are coupled to the Internet, which provides an infrastructure for widely distributed computing and encompasses many different networks, though any suitable network infrastructure can be used for exemplary communications made incident to the systems as described in various embodiments herein.
- client is a member of a class or group that uses the services of another class or group.
- a client can be a computer process, e.g., roughly a set of instructions or tasks, that requests a service provided by another program or process.
- a client process may utilize the requested service without having to “know” all working details about the other program or the service itself.
- a client can be a computer that accesses shared network resources provided by another computer, e.g., a server.
- a server e.g., a server
- computing objects or devices 920 , 922 , 924 , 926 , 928 , etc. can be thought of as clients and computing objects 910 , 912 , etc. can be thought of as servers where computing objects 910 , 912 , etc.
- any computer can be considered a client, a server, or both, depending on the circumstances. Any of these computing devices may be processing data, or requesting transaction services or tasks that may implicate the techniques for systems as described herein for one or more embodiments.
- a server is typically a remote computer system accessible over a remote or local network, such as the Internet or wireless network infrastructures.
- the client process may be active in a first computer system, and the server process may be active in a second computer system, communicating with one another over a communications medium, thus providing distributed functionality and allowing multiple clients to take advantage of the information-gathering capabilities of the server.
- Any software objects utilized pursuant to the techniques described herein can be provided standalone, or distributed across multiple computing devices or objects.
- the computing objects 910 , 912 , etc. can be Web servers, file servers, media servers, etc. with which the client computing objects or devices 920 , 922 , 924 , 926 , 928 , etc. communicate via any of a number of known protocols, such as the hypertext transfer protocol (HTTP).
- HTTP hypertext transfer protocol
- Objects 910 , 912 , etc. may also serve as client computing objects or devices 920 , 922 , 924 , 926 , 928 , etc., as may be characteristic of a distributed computing environment.
- the techniques described herein can be applied to any suitable device. It is to be understood, therefore, that handheld, portable and other computing devices and computing objects of all kinds are contemplated for use in connection with the various embodiments. Accordingly, the computer described below in FIG. 10 is but one example of a computing device that can be employed with implementing one or more of the systems or methods shown and described in connection with FIGS. 1-8 Additionally, a suitable server can include one or more aspects of the below computer, such as a media server or other media management server components.
- embodiments can partly be implemented via an operating system, for use by a developer of services for a device or object, and/or included within application software that operates to perform one or more functional aspects of the various embodiments described herein.
- Software may be described in the general context of computer executable instructions, such as program modules, being executed by one or more computers, such as client workstations, servers or other devices.
- computers such as client workstations, servers or other devices.
- client workstations such as client workstations, servers or other devices.
- FIG. 10 thus illustrates an example of a suitable computing system environment 1000 in which one or aspects of the embodiments described herein can be implemented, although as made clear above, the computing system environment 1000 is only one example of a suitable computing environment and is not intended to suggest any limitation as to scope of use or functionality. Neither is the computing environment 1000 be interpreted as having any dependency or requirement relating to any one or combination of components illustrated in the exemplary operating environment 1000 .
- FIG. 10 an exemplary computing device for implementing one or more embodiments in the form of a computer 1010 is depicted.
- Components of computer 1010 may include, but are not limited to, a processing unit 1020 , a system memory 1030 , and a system bus 1022 that couples various system components including the system memory to the processing unit 1020 .
- Computer 1010 typically includes a variety of computer readable media and can be any available media that can be accessed by computer 1010 .
- the system memory 1030 may include computer storage media in the form of volatile and/or nonvolatile memory such as read only memory (ROM) and/or random access memory (RAM).
- system memory 1030 may also include an operating system, application programs, other program modules, and program data.
- a user can enter commands and information into the computer 1010 through input devices 1040 , non-limiting examples of which can include a keyboard, keypad, a pointing device, a mouse, stylus, touchpad, touchscreen, trackball, motion detector, camera, microphone, joystick, game pad, scanner, or any other device that allows the user to interact with computer 1010 .
- input devices 1040 non-limiting examples of which can include a keyboard, keypad, a pointing device, a mouse, stylus, touchpad, touchscreen, trackball, motion detector, camera, microphone, joystick, game pad, scanner, or any other device that allows the user to interact with computer 1010 .
- a monitor or other type of display device is also connected to the system bus 1022 via an interface, such as output interface 1050 .
- computers can also include other peripheral output devices such as speakers and a printer, which may be connected through output interface 1050 .
- the computer 1010 may operate in a networked or distributed environment using logical connections to one or more other remote computers, such as remote computer 1070 .
- the remote computer 1070 may be a personal computer, a server, a router, a network PC, a peer device or other common network node, or any other remote media consumption or transmission device, and may include any or all of the elements described above relative to the computer 1010 .
- the logical connections depicted in FIG. 10 include a network 1072 , such local area network (LAN) or a wide area network (WAN), but may also include other networks/buses e.g., cellular networks.
- an appropriate API e.g., an appropriate API, tool kit, driver code, operating system, control, standalone or downloadable software object, etc. which enables applications and services to take advantage of the techniques described herein.
- embodiments herein are contemplated from the standpoint of an API (or other software object), as well as from a software or hardware object that implements one or more aspects described herein.
- various embodiments described herein can have aspects that are wholly in hardware, partly in hardware and partly in software, as well as in software.
- exemplary is used herein to mean serving as an example, instance, or illustration.
- aspects disclosed herein are not limited by such examples.
- any aspect or design described herein as “exemplary” is not necessarily to be construed as preferred or advantageous over other aspects or designs, nor is it meant to preclude equivalent exemplary structures and techniques known to those of ordinary skill in the art.
- the terms “includes,” “has,” “contains,” and other similar words are used in either the detailed description or the claims, for the avoidance of doubt, such terms are intended to be inclusive in a manner similar to the term “comprising” as an open transition word without precluding any additional or other elements.
- Computer-readable storage media can be any available storage media that can be accessed by the computer, is typically of a non-transitory nature, and can include both volatile and nonvolatile media, removable and non-removable media.
- Computer-readable storage media can be implemented in connection with any method or technology for storage of information such as computer-readable instructions, program modules, structured data, or unstructured data.
- Computer-readable storage media can include, but are not limited to, RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, digital versatile disk (DVD) or other optical disk storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or other tangible and/or non-transitory media which can be used to store desired information.
- Computer-readable storage media can be accessed by one or more local or remote computing devices, e.g., via access requests, queries or other data retrieval protocols, for a variety of operations with respect to the information stored by the medium.
- communications media typically embody computer-readable instructions, data structures, program modules or other structured or unstructured data in a data signal such as a modulated data signal, e.g., a carrier wave or other transport mechanism, and includes any information delivery or transport media.
- modulated data signal or signals refers to a signal that has one or more of its characteristics set or changed in such a manner as to encode information in one or more signals.
- communication media include wired media, such as a wired network or direct-wired connection, and wireless media such as acoustic, RF, infrared and other wireless media.
- a component may be, but is not limited to being, a process running on a processor, a processor, an object, an executable, a thread of execution, a program, and/or a computer.
- a component may be, but is not limited to being, a process running on a processor, a processor, an object, an executable, a thread of execution, a program, and/or a computer.
- an application running on computer and the computer can be a component.
- One or more components may reside within a process and/or thread of execution and a component may be localized on one computer and/or distributed between two or more computers.
- a “device” can come in the form of specially designed hardware; generalized hardware made specialized by the execution of software thereon that enables the hardware to perform specific function (e.g., coding and/or decoding); software stored on a computer readable medium; or a combination thereof.
- components described herein can examine the entirety or a subset of the data to which it is granted access and can provide for reasoning about or infer states of the system, environment, etc. from a set of observations as captured via events and/or data.
- Inference can be employed to identify a specific context or action, or can generate a probability distribution over states, for example.
- the inference can be probabilistic—that is, the computation of a probability distribution over states of interest based on a consideration of data and events.
- Inference can also refer to techniques employed for composing higher-level events from a set of events and/or data.
- Such inference can result in the construction of new events or actions from a set of observed events and/or stored event data, whether or not the events are correlated in close temporal proximity, and whether the events and data come from one or several event and data sources.
- Various classification (explicitly and/or implicitly trained) schemes and/or systems e.g., support vector machines, neural networks, expert systems, Bayesian belief networks, fuzzy logic, data fusion engines, etc. can be employed in connection with performing automatic and/or inferred action in connection with the claimed subject matter.
- Such classification can employ a probabilistic and/or statistical-based analysis (e.g., factoring into the analysis utilities and costs) to prognose or infer an action that a user desires to be automatically performed.
- a support vector machine (SVM) is an example of a classifier that can be employed. The SVM operates by finding a hyper-surface in the space of possible inputs, where the hyper-surface attempts to split the triggering criteria from the non-triggering events. Intuitively, this makes the classification correct for testing data that is near, but not identical to training data.
- directed and undirected model classification approaches include, e.g., na ⁇ ve Bayes, Bayesian networks, decision trees, neural networks, fuzzy logic models, and probabilistic classification models providing different patterns of independence can be employed. Classification as used herein also is inclusive of statistical regression that is utilized to develop models of priority.
Abstract
Description
Claims (36)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/548,657 US8793806B1 (en) | 2012-07-13 | 2012-07-13 | Systems and methods to selectively limit access only to a subset of content, identified in a whitelist, of a library of content |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/548,657 US8793806B1 (en) | 2012-07-13 | 2012-07-13 | Systems and methods to selectively limit access only to a subset of content, identified in a whitelist, of a library of content |
Publications (1)
Publication Number | Publication Date |
---|---|
US8793806B1 true US8793806B1 (en) | 2014-07-29 |
Family
ID=51212219
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/548,657 Active US8793806B1 (en) | 2012-07-13 | 2012-07-13 | Systems and methods to selectively limit access only to a subset of content, identified in a whitelist, of a library of content |
Country Status (1)
Country | Link |
---|---|
US (1) | US8793806B1 (en) |
Cited By (13)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20140032401A1 (en) * | 2012-07-26 | 2014-01-30 | Green Beans Coffee Company Usa, Llc | Method of high speed downloading |
US20150067322A1 (en) * | 2010-12-29 | 2015-03-05 | Citrix Systems | Systems and methods for multi-level tagging of encrypted items for additional security and efficient encrypted item determination |
US20150356302A1 (en) * | 2013-02-25 | 2015-12-10 | Hewlett-Packard Development Company, L.P. | Presentation of user interface elements based on rules |
US9768974B1 (en) * | 2015-05-18 | 2017-09-19 | Google Inc. | Methods, systems, and media for sending a message about a new video to a group of related users |
US9811800B1 (en) * | 2013-09-27 | 2017-11-07 | Amazon Technologies, Inc. | Contextual recording of shipment receiving |
US10152552B2 (en) | 2013-01-29 | 2018-12-11 | Entit Software Llc | Analyzing a structure of a web application to produce actionable tokens |
CN109313686A (en) * | 2016-06-23 | 2019-02-05 | 三菱电机株式会社 | Invasion detecting device and intrusion detection program |
US10360296B2 (en) * | 2016-01-07 | 2019-07-23 | American Express Travel Related Services Company, Inc. | System and method for online purchase autofill |
US10764294B1 (en) * | 2016-03-10 | 2020-09-01 | Amazon Technologies, Inc. | Data exfiltration control |
US10873588B2 (en) * | 2017-08-01 | 2020-12-22 | Pc Matic, Inc. | System, method, and apparatus for computer security |
US20210026951A1 (en) * | 2017-08-01 | 2021-01-28 | PC Matic, Inc | System, Method, and Apparatus for Computer Security |
US20210152560A1 (en) * | 2014-01-21 | 2021-05-20 | Centurylink Intellectual Property Llc | Consumer Choice for Broadband Application and Content Services |
US20220269775A1 (en) * | 2021-02-25 | 2022-08-25 | Red Hat, Inc. | Function pointer protection |
Citations (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20030044762A1 (en) * | 2001-08-29 | 2003-03-06 | Assessment Technology Inc. | Educational management system |
US20070050467A1 (en) * | 2005-04-06 | 2007-03-01 | Chris Borrett | Digital asset management system, including customizable metadata model for asset cataloging and permissioning of digital assets, such as for use with digital images and songs |
US20070118886A1 (en) * | 2005-11-24 | 2007-05-24 | Martin Cameron K | Updating security data |
US20070164846A1 (en) * | 2005-12-16 | 2007-07-19 | Pedolsky Richard J | Interactive knowledge card system |
US20080209514A1 (en) * | 2007-02-26 | 2008-08-28 | L Heureux Israel | Digital Asset Distribution System |
US20080222117A1 (en) * | 2006-11-30 | 2008-09-11 | Broder Andrei Z | Efficient multifaceted search in information retrieval systems |
-
2012
- 2012-07-13 US US13/548,657 patent/US8793806B1/en active Active
Patent Citations (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20030044762A1 (en) * | 2001-08-29 | 2003-03-06 | Assessment Technology Inc. | Educational management system |
US20070050467A1 (en) * | 2005-04-06 | 2007-03-01 | Chris Borrett | Digital asset management system, including customizable metadata model for asset cataloging and permissioning of digital assets, such as for use with digital images and songs |
US20070118886A1 (en) * | 2005-11-24 | 2007-05-24 | Martin Cameron K | Updating security data |
US20070164846A1 (en) * | 2005-12-16 | 2007-07-19 | Pedolsky Richard J | Interactive knowledge card system |
US20080222117A1 (en) * | 2006-11-30 | 2008-09-11 | Broder Andrei Z | Efficient multifaceted search in information retrieval systems |
US20080209514A1 (en) * | 2007-02-26 | 2008-08-28 | L Heureux Israel | Digital Asset Distribution System |
Cited By (24)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9819647B2 (en) * | 2010-12-29 | 2017-11-14 | Citrix Systems, Inc. | Systems and methods for multi-level tagging of encrypted items for additional security and efficient encrypted item determination |
US20150067322A1 (en) * | 2010-12-29 | 2015-03-05 | Citrix Systems | Systems and methods for multi-level tagging of encrypted items for additional security and efficient encrypted item determination |
US20140032401A1 (en) * | 2012-07-26 | 2014-01-30 | Green Beans Coffee Company Usa, Llc | Method of high speed downloading |
US10152552B2 (en) | 2013-01-29 | 2018-12-11 | Entit Software Llc | Analyzing a structure of a web application to produce actionable tokens |
US9910992B2 (en) * | 2013-02-25 | 2018-03-06 | Entit Software Llc | Presentation of user interface elements based on rules |
US20150356302A1 (en) * | 2013-02-25 | 2015-12-10 | Hewlett-Packard Development Company, L.P. | Presentation of user interface elements based on rules |
US9811800B1 (en) * | 2013-09-27 | 2017-11-07 | Amazon Technologies, Inc. | Contextual recording of shipment receiving |
US11962592B2 (en) * | 2014-01-21 | 2024-04-16 | Tivo Corporation | Consumer choice for broadband application and content services |
US20210152560A1 (en) * | 2014-01-21 | 2021-05-20 | Centurylink Intellectual Property Llc | Consumer Choice for Broadband Application and Content Services |
US9768974B1 (en) * | 2015-05-18 | 2017-09-19 | Google Inc. | Methods, systems, and media for sending a message about a new video to a group of related users |
US10122541B2 (en) | 2015-05-18 | 2018-11-06 | Google Llc | Methods, systems, and media for sending a message about a new video to a group of related users |
US10812281B2 (en) | 2015-05-18 | 2020-10-20 | Google Llc | Methods, systems, and media for sending a message about a new video to a group of related users |
US11558214B2 (en) * | 2015-05-18 | 2023-01-17 | Google Llc | Methods, systems, and media for sending a message about a new video to a group of related users |
US10990752B2 (en) * | 2016-01-07 | 2021-04-27 | American Express Travel Related Services Company, Inc. | Online purchase autofill plug-in |
US11593553B1 (en) | 2016-01-07 | 2023-02-28 | American Express Travel Related Services Company, Inc. | Online purchase autofill plug-in |
US10360296B2 (en) * | 2016-01-07 | 2019-07-23 | American Express Travel Related Services Company, Inc. | System and method for online purchase autofill |
US10764294B1 (en) * | 2016-03-10 | 2020-09-01 | Amazon Technologies, Inc. | Data exfiltration control |
EP3460701A4 (en) * | 2016-06-23 | 2019-05-22 | Mitsubishi Electric Corporation | Intrusion detection device and intrusion detection program |
CN109313686A (en) * | 2016-06-23 | 2019-02-05 | 三菱电机株式会社 | Invasion detecting device and intrusion detection program |
US20210026951A1 (en) * | 2017-08-01 | 2021-01-28 | PC Matic, Inc | System, Method, and Apparatus for Computer Security |
US11487868B2 (en) * | 2017-08-01 | 2022-11-01 | Pc Matic, Inc. | System, method, and apparatus for computer security |
US10873588B2 (en) * | 2017-08-01 | 2020-12-22 | Pc Matic, Inc. | System, method, and apparatus for computer security |
US20220269775A1 (en) * | 2021-02-25 | 2022-08-25 | Red Hat, Inc. | Function pointer protection |
US11816206B2 (en) * | 2021-02-25 | 2023-11-14 | Red Hat, Inc. | Function pointer protection |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US8793806B1 (en) | Systems and methods to selectively limit access only to a subset of content, identified in a whitelist, of a library of content | |
US9430570B2 (en) | Systems and methods for determining information and knowledge relevancy, relevant knowledge discovery and interactions, and knowledge creation | |
US9336332B2 (en) | Programmatic data discovery platforms for computing applications | |
US9519723B2 (en) | Aggregating electronic content items from different sources | |
US8918382B1 (en) | Learning common spelling errors through content matching | |
US11250099B2 (en) | Web-based social content aggregation and discovery facility | |
US8886655B1 (en) | Visual display of topics and content in a map-like interface | |
US20130263001A1 (en) | Restricting operation of a client device to parent approved content | |
US9703838B1 (en) | Multi sender and source recommendation aggregation and prompting system | |
US8898270B1 (en) | Implicit determination of referral sources for subscriptions to channels | |
US11641354B2 (en) | Enhanced access to media, systems and methods | |
US9038912B2 (en) | Trade card services | |
US9911132B2 (en) | System and method for searching, organizing, exploring and relating online content | |
US10783327B2 (en) | Using a personal digital assistant to retrieve an item from a remote source | |
JP2019537811A (en) | Collection and provision of customized user-generated content across networks, based on domain | |
US11399002B2 (en) | Social network collections | |
US20140280443A1 (en) | Application-centric socialization | |
US10158741B1 (en) | Multi-level following mechanic for a social network | |
US11977578B2 (en) | Adaptive recommendations of user-generated mediasets | |
US20140344358A1 (en) | Filtering of content to display using an opportunity engine that identifies other users ability to interact in real time | |
Matthews | Adding value to libraries, archives, and museums: harnessing the force that drives your organization's future | |
US10409459B2 (en) | Querying publisher goal and customizing suggestions to achieve goal | |
US9325591B1 (en) | Automatic analysis and quality detection of media | |
Sakurai et al. | Explainable artist recommendation based on reinforcement knowledge graph exploration | |
US9087127B1 (en) | Method for providing an integrated video module |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:TRUONG, BRIAN;PALMER, BRIAN ANTHONY;REEL/FRAME:028545/0611Effective date: 20120711 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044277/0001Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551)Year of fee payment: 4 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 8TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1552); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 8 |
US7440968B1 - Query boosting based on classification - Google Patents
Query boosting based on classification Download PDFInfo
- Publication number
- US7440968B1 US7440968B1 US11/001,403 US140304A US7440968B1 US 7440968 B1 US7440968 B1 US 7440968B1 US 140304 A US140304 A US 140304A US 7440968 B1 US7440968 B1 US 7440968B1
- Authority
- US
- United States
- Prior art keywords
- search
- content
- location identifiers
- content location
- boost
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active, expires
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/951—Indexing; Web crawling techniques
-
- Y—GENERAL TAGGING OF NEW TECHNOLOGICAL DEVELOPMENTS; GENERAL TAGGING OF CROSS-SECTIONAL TECHNOLOGIES SPANNING OVER SEVERAL SECTIONS OF THE IPC; TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10—TECHNICAL SUBJECTS COVERED BY FORMER USPC
- Y10S—TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10S707/00—Data processing: database and file management or data structures
- Y10S707/99931—Database or file accessing
- Y10S707/99933—Query processing, i.e. searching
-
- Y—GENERAL TAGGING OF NEW TECHNOLOGICAL DEVELOPMENTS; GENERAL TAGGING OF CROSS-SECTIONAL TECHNOLOGIES SPANNING OVER SEVERAL SECTIONS OF THE IPC; TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10—TECHNICAL SUBJECTS COVERED BY FORMER USPC
- Y10S—TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10S707/00—Data processing: database and file management or data structures
- Y10S707/99931—Database or file accessing
- Y10S707/99937—Sorting
-
- Y—GENERAL TAGGING OF NEW TECHNOLOGICAL DEVELOPMENTS; GENERAL TAGGING OF CROSS-SECTIONAL TECHNOLOGIES SPANNING OVER SEVERAL SECTIONS OF THE IPC; TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10—TECHNICAL SUBJECTS COVERED BY FORMER USPC
- Y10S—TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10S707/00—Data processing: database and file management or data structures
- Y10S707/99941—Database schema or data structure
- Y10S707/99943—Generating database or data structure, e.g. via user interface
Definitions
- the present invention relates to providing search results from search engines, such as Internet and Intranet search engines, and in particular to promoting the rankings of selected search results.
- Search engines provide a powerful tool for locating documents in a large database of documents, such as the documents on the Internet or World Wide Web (WWW), or the documents stored on the computers of an Intranet.
- the documents are located in response to a search query submitted by a user.
- a search query may consist of one or more words, terms, keywords, phrases and/or combinations thereof.
- search engines Returning search results that closely match, or ideally, that do match a user's interests is a desired characteristic of search engines. This is especially the case in the current environment where there are ever increasing amounts of information. In the absence of such capability, information overload is a real concern: search engines would return too many results to be useful. As a consequence, existing search engines employ a variety of techniques to improve the relevance of search results. Nonetheless, it is still difficult to tailor search results based on a user's profile. There is a need, therefore, for an improved technique for personalizing search engine results.
- a first set of content location identifiers for first content is provided.
- a second set of content location identifiers for second content is identified.
- the second content is related to the first content in accordance with one or more first categories corresponding to the first content.
- the one or more first categories may be determined by applying a text classifier to the first content.
- the second content may also be identified based on one or more user profiles and/or one or more content site profiles.
- the search boost vector is generated using weights corresponding to the content location identifiers in the first set of content location identifiers and/or the second set of content location identifiers.
- the one or more search boost vectors may be used to boost one or more search results.
- FIG. 1A is a flow chart of a method for generating one or more search boost vectors according to some embodiments of the invention.
- FIG. 1B is a flow chart of a method for using one or more search boost vectors to boost one or more search results from a search engine according to some embodiments of the invention.
- FIG. 2 is a flow chart of a method for using one or more search boost vectors to boost one or more search results from a search engine according to some embodiments of the invention.
- FIG. 3 is a flow chart of a method for using one or more search boost vectors to boost one or more search results from a search engine according to some embodiments of the invention.
- FIG. 4 is a block diagram of clients and a search engine according to some embodiments of the invention.
- FIG. 5 is an illustration of a URL log data structure according to some embodiments of the invention.
- FIG. 6 is a block diagram of a search engine according to some embodiments of the invention.
- FIG. 7 is a block diagram of a client system according to some embodiments of the invention.
- FIG. 8A is an illustration of a category definition data structure.
- FIG. 8B is an illustration of a document dictionary data structure according to some embodiments of the invention.
- FIG. 8C is an illustration of a user profile data structure according to some embodiments of the invention.
- FIG. 8D is an illustration of a content site profile data structure according to some embodiments of the invention.
- FIG. 9 is an illustration of a document classifier according to some embodiments of the invention.
- FIG. 10 is an illustration of a search boost vector according to some embodiments of the invention.
- One or more search results in a set of search results may be personalized by boosting the ranking of one or more of the search results for a user performing a search on the Internet, on one or more Intranets, or on combinations of the Internet and one or more Intranets.
- Boosting of selected search results in a set of search results i.e., changing a ranking or order of the selected search results, allows search results that are better aligned with a user's preferences to be presented.
- One way to determine the selected search results that are boosted is based on topic or category.
- Boosting based on topic or category offers a finer granularity, i.e., it is able to identify an underlying commonality in the user's preferences, than existing approaches to customization, which are often based on a particular item that is of interest to a user (such as a book that he or she may wish to purchase).
- the topic or category may be determined in accordance with one or more key words, one or more content location identifiers, content at the one or more content location identifiers, one or more user profiles (for example, where users indicate categories of interest) and/or one or more content site profiles (which, for example, indicate relevant categories associated with content sites).
- the topic or category may be determined using a text classifier.
- the one or more key words may be associated with one or more search queries, one or more previous search results, one or more documents, the one or more user profiles and/or the one or more content site profiles.
- the one or more content location identifiers may include one or more uniform resource locators (URLs), and addresses or identifiers of one or more documents, one or more content pages (such as web-pages on the WWW) and one or more content sites (such as web-sites on the WWW).
- URLs uniform resource locators
- addresses or identifiers of one or more documents such as web-pages on the WWW
- content pages such as web-pages on the WWW
- content sites such as web-sites on the WWW.
- URLs broadly signify one or more of these alternatives.
- the term “URL” may signify a domain name in a URL and the term “URLs” may signify domain names in URLs.
- the boosting of one or more search results may use one or more search boost vectors.
- the one or more search boost vectors may be, at least in part, generated using the one or more categories, the one or more topics, the one or more user profiles and/or the one or more content site profiles.
- FIG. 1A is a flow chart illustrating an embodiment of a method 130 for generating the one or more search boost vectors.
- a seed or first set of URLs for first content is provided 112 .
- the first set of URLs may be specified by the user by indicating his or her preferences, such as categories of interest.
- User preferences may be specified in a user profile.
- the user profile may contain a set of URLs, or the user profile may contain other information (e.g., keywords, identifiers of categories of information that are of interest to the user) that is then mapped to a set of URLs, or a combination of the techniques may be used.
- the resulting set of URLs may be used as the first set of URLs at 112 .
- the first set of URLs at 112 may be the URLs of a web-page or web-site from which users may submit search queries to a search engine.
- the URLs that the user has visited (which may be listed in the user profile or in a log) may allow an associated category to be determined either using the one or more content site profiles, or by using a classifier on the content of the URLs.
- Content site profiles may include category information for associated URLs.
- the first set of URLs may be determined from existing sets of URLs associated with one or more categories. In the event that the user is associated with more than one topic, then multiple sets may be combined to create the first set. In some embodiments, the sets are combined in a weighted fashion based on a category's relative importance to the user. In other embodiments, the first set of URLs may be determined from log data for one or more user sessions. Log data may include URL log data.
- FIG. 5 is an embodiment of a URL Log data structure 500 .
- the data structure 500 has multiple entries 510 . Each of the entries 510 , such as entry 510 _ 1 , has a user identification 512 , a time stamp 514 and a URL 516 .
- the URL 516 represents a URL visit or download by the identified user.
- the log data may also include cookie information.
- cookies are typically implemented as files stored on the users' computers that indicate the users' identity or other information required by many content locations such as web-pages and web-sites.
- the terms “cookie” and “cookie file” may be used interchangeably. Cookies may include information such as login or registration identification, user preferences or any other information that a host at a content location sends to a user's search assistant or browser for the search assistant to return to the host at a later time. Alternatively, the log data may be collected on a login basis.
- the data structure 500 may also include other fields 518 , such as an indication of whether a URL is selected (for example, it is clicked) from search results, the query text of the query that resulted in a click on a URL, an indication of an amount of time the user spends at a URL and, if a URL is a navigation entry, one or more links that the user followed to get to the URL.
- fields 518 such as an indication of whether a URL is selected (for example, it is clicked) from search results, the query text of the query that resulted in a click on a URL, an indication of an amount of time the user spends at a URL and, if a URL is a navigation entry, one or more links that the user followed to get to the URL.
- a second set of URLs for second content is identified 144 .
- the second content is related to the first content in accordance with one or more first categories corresponding to the first content.
- first categories For example, existing data structures containing sets of URLs associated with corresponding categories or topics may be accessed.
- the second set of URLs may also be identified in accordance with the one or more user profiles (for example, by using the categories specified) and/or the one or more content site profiles (for example, by using the associated categories).
- one or more first categories corresponding to the first content are optionally determined.
- Text in the first content is optionally classified 140 using a text classifier.
- the category classifications corresponding to the one or more first categories are optionally determined 142 .
- the category classifications may be determined using a category data structure that maps text classification weights to category classification weights.
- the second set of URLs may be selected from one or more existing sets of URLs corresponding to one or more of the first categories.
- the search engine system may access previously stored information that maps predefined categories to sets of URLs. By accessing the stored information for the first categories, the second set of URLs is identified.
- the second set of URLs may correspond to at least a portion of the first set of URLs.
- the search boost vector is generated by using or determining weights or relevance scores corresponding to URLs in the first set of URLs and/or the second set of URLs 124 and the procedure ends 126 .
- a suitable data structure for storing a search boost vector is discussed below with reference to FIG. 10 .
- the method 130 illustrated in FIG. 1A may omit one or more operations, may reorder one or more operations or may include one or more additional operations.
- the weights or relevance scores corresponding to URLs in the first set of URLs and/or the second set of URLs may be determined.
- the weights corresponding to the URLs in the first set of URLs and/or the second set of URLs are a measure of a frequency of occurrence of the corresponding URLs.
- one or more of the weights may be normalized according to various criteria. For example, one or more weights may be multiplied by an inverse document frequency that reduces those weights corresponding to URLs that are visited by a larger number of users across multiple categories. Such a normalization may reduce the weights corresponding to popular URLs that are visited often irrespective of their relationship to one or more of the first categories corresponding to the first content.
- the weights corresponding to one or more URLs may be determined by the text classifier and/or based on the category data structure.
- FIG. 9 illustrates a classification process 1000 .
- a document 1010 is input to a classifier 1012 .
- the classifier 1012 outputs one or more categories 1014 corresponding to the content of document 1010 along with associated weights 1016 .
- Text classifiers such as the text classifier 1012 , are well known in the art.
- the text classifier 1012 is a Naive Bayes classifier.
- the weights 1016 may be used in determining the weights of the content locations in one or more of the search boost vectors.
- mapping operations may be used in determining categories associated with particular content and/or URLs.
- these mapping operations may use one or more data structures, such as those illustrated in FIGS. 8A-8D .
- the data structures may allowing mapping information to be accessed based on a binary or tree search.
- the data structures may include a hash table.
- FIG. 8A illustrates an embodiment of a category structure 800 , including category definitions 810 and categories 812 .
- Categories such as category 812
- One or more of the categories 812 and/or subcategories 814 and 816 may include a set of one or more associated URLs and corresponding weights. This information may be used to determine the second set of URLs in the method 130 ( FIG. 1A ) and/or the weights in one or more search boost vectors.
- Category structure 800 should be understood to be an illustration of a general structure that may include multiple levels of subcategories in a hierarchy. While FIG. 8A only shows two such levels, there may be three or more levels.
- FIG. 8B illustrates an embodiment of a URL or document dictionary data structure 820 .
- the document dictionary data structure 820 may include document identifiers 830 and category weights 832 . If a new category that is not in the document dictionary data structure 820 is encountered, an additional entry for the document dictionary data structure 820 may be determined using entries for other categories and/or URL-based category weights.
- the document dictionary data structure 820 may be generated by applying a text classifier, such as the text classifier 1000 ( FIG. 9 ), to one or more documents.
- the documents dictionary data structure 820 may be used to map a document to one or more categories.
- FIG. 8C is an embodiment 840 of a user profile data structure 850 .
- the user profile data structure 850 may include a term-based profile 854 , a link-based profile 856 and/or a category-based profile 858 .
- the term-based profile 854 allows associated terms and weights to be identified.
- the link-based profile 856 allows associated links (such as URLs) and weights to be identified.
- the category-based profile 858 allows associated categories and weights to be identified.
- the user profile data structure 850 may also include other user profile information 859 . Terms, URLs and/or categories may be used to determine one or more search boost vectors, such as in the method 130 ( FIG. 1A ). Alternatively, terms and/or links may be used to boost one or more search results directly (see below).
- the user profile data structure 850 may also include or be linked to one or more existing search boost vectors 852 or pointers to one or more search boost vectors 852 associated with the user profile data structure 850 .
- one or more of the existing search boost vectors 852 may be used to boost one or more search results for the user or users associated with the user profile data structure 850 .
- FIG. 8D is an embodiment 860 of a content site profile data structure 870 .
- a content site profile indicates, directly or indirectly, one or more categories associated with a website, webpage, additional group of content or other content source.
- Boost vector(s) 872 associated with the content site profile may be used to boost search results considered most likely to be of interest to users of a corresponding website or other content source.
- the content site profile data structure 870 may include a term-based profile 874 , a link-based profile 876 and/or a category-based profile 878 .
- the term-based profile 874 allows associated terms and weights to be identified.
- the link-based profile 876 allows associated links (such as URLs) and weights to be identified.
- the category-based profile 878 allows associated categories and weights to be identified.
- the content site profile data structure 870 may also include other content site profile information 880 .
- Terms, URLs and/or categories may be used to determine one or more search boost vectors, such as in the method 130 ( FIG. 1A ).
- terms and/or links may be used to directly boost one or more search results for one or more users (see below).
- the content site profile data structure 870 may also include or be linked to one or more existing search boost vectors 872 or pointers to one or more search boost vectors 872 associated with the content site profile data structure 870 . In these embodiments, one or more of the existing search boost vectors 872 may be used to boost one or more search results for one or more users.
- FIG. 10 illustrates an embodiment of a search boost vector 1100 generated using the method 130 ( FIG. 1A ).
- the search boost vector 1100 has multiple entries 1110 .
- Each entry 1110 such as entry 1110 _ 1 , has a URL 1112 and a corresponding weight 1114 .
- the search boost vector may be truncated 1116 . In this way, only the entries 1110 having weights larger than a threshold or the entries 1110 with rank values exceeding a threshold may be included in the search boost vector 1100 .
- the search boost vector 1100 may be used to personalize one or more search results.
- the search boost vectors may be identified or determined based on one or more key words, one or more URLs, content at the one or more URLs, one or more user profiles and/or one or more content site profiles.
- Boosting search results using one or more search boost vectors that are identified or determined based on one or more user profiles or preferences is often referred to as personalized search.
- Boosting search results using one or more search boost vectors that are identified or determined based on one or more content site profiles is sometimes referred to as content site flavored search.
- personalized search results indicate personalized search and/or content site flavored search.
- FIG. 1B is a flow chart illustrating an embodiment of a method 150 for using one or more search boost vectors to boost one or more search results.
- a set of URLs is provided 112 .
- a set of categories is identified with the set of URLs. The set of categories may be provided (e.g., by a content owner) or determined as in the following optional steps.
- the content or text, corresponding to the URLs is classified 140 , for example, using a text classifier, such as the text classifier 1000 ( FIG. 9 ). Categories corresponding to the text classifications (determined at 140 ) are determined 142 .
- One or more boost vectors are selected 160 based on the one or more categories.
- the method 150 makes use of a set of boost vectors previously generated or determined for each of a set of categories or classifications. As a result, one or more of these boost vectors may be selected once a set of one or more categories is determined.
- One or more search results are boosted 162 and the procedure ends 126 .
- Boosting 162 changes the query scores corresponding to the one or more search results. Since search results are ordered based on the query scores of the search results, boosting 162 modifies an order in which the search results are provided, received or presented to the user, i.e., the rankings of one or more search results are changed.
- the procedure shown in FIG. 1B may omit one or more operations, may reorder one or more operations or may include one or more additional operations.
- each search result has an information retrieval value, sometimes called a query score.
- the one or more search results are boosted by multiplying one or more of the information retrieval values by one or more weights 1114 ( FIG. 10 ) in the search boost vector, such as search boost vector 1100 ( FIG. 10 ).
- the search boost vector may be determined using the method 130 illustrated in FIG. 1A .
- the first set of URLs may be provided and the second set of URLs may be identified and/or determined in accordance with the one or more first categories.
- FIG. 2 is a flow chart illustrating an embodiment of a method 200 for using one or more search boost vectors to boost one or more search results.
- the user input to the search assistant is monitored 214 .
- a search query is sent 216 .
- a search engine 212 receives a search query 218 .
- Search results are generated 220 .
- One or more search results are boosted 222 .
- Search results are displayed 224 .
- the procedure shown in FIG. 2 may omit one or more operations, may reorder one or more operations or may include one or more additional operations.
- boosting 222 may use one or more search boost vectors. In other embodiments, however, boosting may not use a boost vector.
- one or more search results matching a first set of URLs may be boosted 222 .
- one or more search results may be boosted 222 based on one or more keywords in the one or more search results that match one or more keywords in a profile.
- the keywords may be extracted from a set of documents (located, for example, at URLs), from prior search queries and/or from prior search results.
- the profile may be one or more user profiles and/or one or more content site profiles.
- FIG. 3 illustrates an embodiment of a method 300 for boosting one or more search results from a search engine, such as the search engine 212 ( FIG. 2 ).
- the boosting may use one or more search boost vectors.
- a search query is received 310 . If search results for the search query are found in a search results cache 312 , the one or more search results are boosted 318 . If search results for the query are not in the cache 312 , search results for the search query are obtained 314 , cached 316 and boosted 318 . The search results are returned 320 and the procedure ends 322 .
- caching 316 of the search results is optional, and a decision to cache or not cache the search results may be based on a score or other assessment indicating a likelihood of the same search query being processed again. While FIG. 3 illustrates boosting 318 in conjunction with caching or results 316 , in other embodiments boosting 318 may be performed without caching results.
- FIG. 4 is a block diagram illustrating an embodiment of a search engine system 400 that generates search results in response to search queries from one or more clients 410 .
- Each client 410 may have a search assistant, such as search assistant 412 .
- search assistant 412 the layout of the search engine system 400 is merely exemplary and may take on any other suitable layout or configuration.
- the search engine system 400 is used to search an index of documents, such as billions of web-pages or other documents indexed by modern search engines.
- search engine system 400 can be used as an Internet search engine, for locating documents on the WWW, or as an Intranet search engine, for locating documents stored on servers or other hosts within an Intranet.
- the methodology described herein is applicable to implementations where only portions of documents, such as titles and abstracts, are stored in the database of the search engine system 400 .
- the search engine system 400 may include multiple data centers each housing a backend.
- the data centers are generally widely dispersed from one another, such as across the continental United States. Search queries submitted by users at one of the clients 410 to the search engine system 400 are routed to an appropriate backend as part of the Domain Name System (DNS), based on current load, geographic locality and/or whether that datacenter is operating.
- DNS Domain Name System
- Each backend preferably includes multiple query servers, such as query server 416 , coupled to a communications network 414 .
- the communications network 414 may be the Internet, but may also be any local area network (LAN) and/or wide area network (WAN).
- each query server 416 is a Web server that receives search query requests and delivers search results in the form of web pages via HTTP, XML or similar protocols.
- the query server 416 is used within a LAN, i.e., internally and not by the public, it may be an Intranet server.
- the query servers, such as query server 416 are configured to control the search process, including searching a document index, analyzing and formatting the search results, including boosting one or more of the search results.
- Each backend also preferably includes multiple query processing controllers, such as query processing controller 430 , coupled to the multiple query servers, such as the query server 416 .
- Each of the query processing controllers may be coupled to a cache 438 , a URL database 432 , an inverse document index 434 and a document database 436 .
- Each query processing controller is configured to receive requests from one of the query servers, such as the query server 416 , and transmit the requests to the cache 438 , the URL database 432 , the inverse document index 434 and the document database 436 .
- the cache 438 is used to increase search efficiency by temporarily storing previously located search results.
- the efficiency and cost of performing a search is dependent on a number of factors, such as the various combinations of terms and/or keywords used in the search query, the length of time spent on the search and the number of documents indexed.
- the average response time and cost of a search is lowered by storing the search results 442 of previously requested search queries in the temporary storage or cache 438 of the search engine system 400 .
- One of the benefits of keeping a cache of commonly searched information is that it ensures a fast response to subsequent search queries for the same information, as it takes less time to retrieve the information from local memory.
- Another benefit of caching commonly searched information is to reduce the cost of servicing multiple search queries requesting the same information.
- an index 440 contains a pointer to a cache entry corresponding to a current search query 444 .
- the search rank values for the documents in the search results are conveyed to the query processing controller 430 and/or the query server 416 , and are used to construct an ordered search result list.
- the query processing controller 430 constructs the ordered search result list
- the query processing controller 430 transmits to the document database 436 a request for snippets of an appropriate subset of the documents in the ordered search list. For example, the query processing controller 430 may request snippets for the first fifteen or so of the documents in the ordered search result list.
- the document database 436 constructs snippets based on the search query, and returns the snippets to the query processing controller 430 .
- the query processing controller 430 then returns a list of located documents and snippets back to the query server 416 .
- the snippets are stored in the cache server 438 along with the cached results 442 .
- the query processing controller 430 only requests snippets for documents, if any, for which it is unable to obtain valid cached snippets from the cache server 438 .
- the query server 416 has a client communication module 418 for communicating, using the communication network 414 , with one or more of the clients 410 .
- the query server 416 also may have a user URL log or user URL log 426 , a query log 422 , user information processing module 424 , query receipt, processing and response module 420 and one or more search boost vectors 428 .
- User information processing module 424 may store user preferences or profiles and/or content site profiles.
- User URL log 426 may store one or more URLs as well as corresponding time stamps for when the one or more URLs are visited. Storage of this information may be in the query server 416 , and/or in one or more additional query servers, including one or more query servers at different locations.
- the query receipt, processing and response module 420 may determine one or more search boost vectors 428 using a method such as method 130 ( FIG. 1A ).
- the query receipt, processing and response module 420 may select one or more search boost vectors 428 based on one or more user preferences or profiles and/or one or more content site profiles.
- the query receipt, processing and response module 420 may boost one or more of the search results, i.e., the ranking in the list of located documents and snippets.
- the query server 416 then transmits the search results, or a portion of the search results, to the user requesting the search.
- the boosting of search results is performed before snippet generation or retrieval from cache, because snippets are initially generated only for the top N (e.g., 10 to 25) search results, until a user requests a listing of lower ranked search results.
- N e.g. 10 to 25
- snippets are generated or retrieved only (or primarily) for search results conveyed to and/or presented to the requestor, thereby conserving the system resources used to generate snippets.
- FIG. 6 is a block diagram illustrating an embodiment of a search engine 600 .
- the search engine 600 may include at least one data processor or central processing unit (CPU) 610 , one or more optional user interfaces 614 , a communications or network interface 620 for communicating with other computers, servers and/or clients, a memory 622 and one or more signal lines 612 for coupling these components to one another.
- the user interface 614 may have a keyboard/mouse 616 and/or a display 618 .
- the one or more signal lines 612 may constitute one or more communications busses.
- the memory 622 may include high-speed random access memory and/or non-volatile memory, such as one or more magnetic disk storage devices.
- the memory 622 may store an operating system 624 , such as LINUX, UNIX or WINDOWS, that includes procedures for handling basic system services and for performing hardware dependent tasks.
- the memory 622 may also store communication procedures in a network communication module 626 . The communication procedures are used for communicating with clients, such as the clients 410 ( FIG. 4 ), and with other servers and computers in the search engine 600 .
- the memory 622 may also store the query processing controller 430 .
- the query processing controller 430 includes the following elements, or a subset or superset of such elements: the client communication module 418 , the query receipt, processing and response module 420 , the user information processing module 424 , the query log 422 , a text classifier 634 and classifications 636 .
- the user information processing module 424 may include a user information database 628 having one or more user profiles 630 , such as user profile data structure 840 ( FIG. 8C ).
- the user information database 628 may also have one or more content site profiles, such as content site profile data structure 860 ( FIG. 8D ).
- the query log 422 may include one or more queries 632 and/or search query results.
- the memory may include a text classifier 634 , such as the text classifier 1000 ( FIG. 9 ), and one or more classification data structures 636 , such as category definition data structure 800 ( FIG. 8A ) and document dictionary data structure 820 .
- a text classifier 634 such as the text classifier 1000 ( FIG. 9 )
- classification data structures 636 such as category definition data structure 800 ( FIG. 8A ) and document dictionary data structure 820 .
- the memory 622 may also include a boost vector module 638 and the user URL log 426 .
- User URL log 426 may include URL Log data structure 500 ( FIG. 5 ).
- the boost vector module 638 may include URL set expansion module 648 and URL set weighting module 650 .
- the URL set expansion module 648 and the URL set weighting module 650 may be used in the method 130 illustrated in FIG. 1A to generate one or more search boost vectors.
- the boost vector module 638 may be contained within the query processing controller 430 .
- FIG. 6 shows search engine 600 as a number of discrete items
- FIG. 6 is intended more as a functional description of the various features which may be present in a search engine system rather than as a structural schematic of the embodiments described herein.
- the functions of the search engine 600 may be distributed over a large number of servers or computers, with various groups of the servers performing particular subsets of those functions. Items shown separately in FIG. 6 could be combined and some items could be separated. For example, some items shown separately in FIG. 6 could be implemented on single servers and single items could be implemented by one or more servers.
- the actual number of servers in a search engine system and how features, such as the query processing controller 430 , are allocated among them will vary from one implementation to another, and may depend in part on the amount of information stored by the system and/or the amount data traffic that the system must handle during peak usage periods as well as during average usage periods.
- FIG. 7 illustrates a block diagram of an embodiment of a client system 700 , such as those used by the clients 410 ( FIG. 4 ).
- the client system 700 may include at least one data processor or central processing unit (CPU) 710 , one or more optional user interfaces 714 , a communications or network interface 720 for communicating with other computers, servers and/or clients, a memory 722 and one or more signal lines 712 for coupling these components to one another.
- the user interface 714 may have a keyboard/mouse 716 and/or a display 718 .
- the one or more signal lines 712 may constitute one or more communications busses.
- the memory 722 may include high-speed random access memory and/or non-volatile memory, such as one or more magnetic disk storage devices.
- the memory 722 may store an operating system 724 , such as LINUX, UNIX or WINDOWS, that includes procedures for handling basic system services and for performing hardware dependent tasks.
- the memory 722 may also store communication procedures in a network communication module 726 . The communication procedures are used for communicating with the search engine 600 ( FIG. 6 ).
- the memory may also include the following elements, or a subset or superset of such elements: a browser or browser tool module 728 , the search assistant module 412 and one or more user or content site profiles 738 .
- the profiles 738 may be generated, much like a cookie, by the search assistant module 412 by monitoring user activities or it may be generated remotely based on content of one or more URLs visited or associated with a user or content site.
- the search assistant module 412 may include the following elements, or a subset or superset of such elements: a monitoring module (or instructions) 730 for monitoring user input 214 ( FIG. 2 ), a transmission module (or instructions) 732 for sending a search query 216 ( FIG.
- a display module (or instructions) 736 for displaying search results 224 ( FIG. 2 ).
- the client system 700 is coupled to a local server computer, one or more of the modules and/or applications in the memory 722 may be stored in a server computer at a different location than the user.
- modules and applications corresponds to a set of instructions for performing one or more functions described above.
- modules i.e., sets of instructions
- memory 722 ( FIG. 7 ) or 622 ( FIG. 6 ) may store a subset of the modules and data structures identified above.
- memory 722 or 622 may store additional modules and data structures not described above.
- the method 130 in FIG. 1A for determining one or more search vectors may be iterated.
- one or more URLs in the first set of URLs and/or the second set of URLs may be used as a new first set of URLs for a subsequent iteration of the method 130 .
- boosting of one or more search results may be accomplished, without using a search boost vector, in other ways than discussed previously.
- additional terms or keywords may be added to a search query based on one or more user profiles and/or one or more content site profiles.
- the search may be modified in one or more query processing controllers, such as query processing controller 430 ( FIG. 4 ).
- query processing controller 430 FIG. 4
- additional embodiments may require storing additional search results in the cache, or changing how results are stored in the cache 438 ( FIG. 4 ). Such a modification could be cumbersome and may entail a very large memory overhead to store a large number of personalized search results for multiple users.
Abstract
Description
Claims (38)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US11/001,403 US7440968B1 (en) | 2004-11-30 | 2004-11-30 | Query boosting based on classification |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US11/001,403 US7440968B1 (en) | 2004-11-30 | 2004-11-30 | Query boosting based on classification |
Publications (1)
Publication Number | Publication Date |
---|---|
US7440968B1 true US7440968B1 (en) | 2008-10-21 |
Family
ID=39855695
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US11/001,403 Active 2025-12-09 US7440968B1 (en) | 2004-11-30 | 2004-11-30 | Query boosting based on classification |
Country Status (1)
Country | Link |
---|---|
US (1) | US7440968B1 (en) |
Cited By (50)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20060259302A1 (en) * | 2005-05-13 | 2006-11-16 | At&T Corp. | Apparatus and method for speech recognition data retrieval |
US20070027869A1 (en) * | 2005-07-29 | 2007-02-01 | Collins Robert J | System and method for reordering a result set copyright notice |
US20070150345A1 (en) * | 2005-12-22 | 2007-06-28 | Sudhir Tonse | Keyword value maximization for advertisement systems with multiple advertisement sources |
US20070150341A1 (en) * | 2005-12-22 | 2007-06-28 | Aftab Zia | Advertising content timeout methods in multiple-source advertising systems |
US20070150344A1 (en) * | 2005-12-22 | 2007-06-28 | Sobotka David C | Selection and use of different keyphrases for different advertising content suppliers |
US20070150346A1 (en) * | 2005-12-22 | 2007-06-28 | Sobotka David C | Dynamic rotation of multiple keyphrases for advertising content supplier |
US20070150343A1 (en) * | 2005-12-22 | 2007-06-28 | Kannapell John E Ii | Dynamically altering requests to increase user response to advertisements |
US20070185836A1 (en) * | 2006-02-09 | 2007-08-09 | Handy-Bosma John H | Method for caching faceted search results |
US20080010291A1 (en) * | 2006-07-05 | 2008-01-10 | Krishna Leela Poola | Techniques for clustering structurally similar web pages |
US20080066052A1 (en) * | 2006-09-07 | 2008-03-13 | Stephen Wolfram | Methods and systems for determining a formula |
US20080072140A1 (en) * | 2006-07-05 | 2008-03-20 | Vydiswaran V G V | Techniques for inducing high quality structural templates for electronic documents |
US20080201317A1 (en) * | 2007-02-16 | 2008-08-21 | Yahoo! Inc. | Ranking documents |
US20080201304A1 (en) * | 2007-02-16 | 2008-08-21 | Yahoo! Inc. | Federated searches implemented across multiple search engines |
US20090019033A1 (en) * | 2007-07-11 | 2009-01-15 | Sungkyunkwan University Foundation For Corporate Collaboration | User-customized content providing device, method and recorded medium |
US20090063538A1 (en) * | 2007-08-30 | 2009-03-05 | Krishna Prasad Chitrapura | Method for normalizing dynamic urls of web pages through hierarchical organization of urls from a web site |
US20090125529A1 (en) * | 2007-11-12 | 2009-05-14 | Vydiswaran V G Vinod | Extracting information based on document structure and characteristics of attributes |
US20100169311A1 (en) * | 2008-12-30 | 2010-07-01 | Ashwin Tengli | Approaches for the unsupervised creation of structural templates for electronic documents |
US7765178B1 (en) * | 2004-10-06 | 2010-07-27 | Shopzilla, Inc. | Search ranking estimation |
US20100223214A1 (en) * | 2009-02-27 | 2010-09-02 | Kirpal Alok S | Automatic extraction using machine learning based robust structural extractors |
US20100325140A1 (en) * | 2009-06-18 | 2010-12-23 | Verizon Patent And Licensing Inc. | System for and method of parallel searching |
US7941420B2 (en) | 2007-08-14 | 2011-05-10 | Yahoo! Inc. | Method for organizing structurally similar web pages from a web site |
US20110145066A1 (en) * | 2005-12-22 | 2011-06-16 | Law Justin M | Generating keyword-based requests for content |
US8087019B1 (en) | 2006-10-31 | 2011-12-27 | Aol Inc. | Systems and methods for performing machine-implemented tasks |
US8145636B1 (en) * | 2009-03-13 | 2012-03-27 | Google Inc. | Classifying text into hierarchical categories |
CN102508920A (en) * | 2011-11-18 | 2012-06-20 | 广州索答信息科技有限公司 | Information retrieval method based on Boosting sorting algorithm |
US20120317107A1 (en) * | 2007-10-11 | 2012-12-13 | Google Inc. | Methods and Systems for Classifying Search Results to Determine Page Elements |
US8484015B1 (en) * | 2010-05-14 | 2013-07-09 | Wolfram Alpha Llc | Entity pages |
US20130204857A1 (en) * | 2012-02-08 | 2013-08-08 | Microsoft Corporation | Asynchronous caching to improve user experience |
US8601015B1 (en) | 2009-05-15 | 2013-12-03 | Wolfram Alpha Llc | Dynamic example generation for queries |
US8635216B1 (en) * | 2004-09-30 | 2014-01-21 | Avaya Inc. | Enhancing network information retrieval according to a user search profile |
WO2014079534A1 (en) * | 2012-11-26 | 2014-05-30 | Alcatel Lucent | System and method for determination of personalization in online service provider responses |
US8812298B1 (en) | 2010-07-28 | 2014-08-19 | Wolfram Alpha Llc | Macro replacement of natural language input |
US8843470B2 (en) | 2012-10-05 | 2014-09-23 | Microsoft Corporation | Meta classifier for query intent classification |
US9069814B2 (en) | 2011-07-27 | 2015-06-30 | Wolfram Alpha Llc | Method and system for using natural language to generate widgets |
US20150220566A1 (en) * | 2014-01-31 | 2015-08-06 | Blackberry Limited | System and Method for Determining Interests from Location Data |
US20150242512A1 (en) * | 2012-12-11 | 2015-08-27 | Google Inc. | Systems and Methods for Ranking Search Results Based on User Identification of Items of Interest |
US9213768B1 (en) | 2009-05-15 | 2015-12-15 | Wolfram Alpha Llc | Assumption mechanism for queries |
US9405424B2 (en) | 2012-08-29 | 2016-08-02 | Wolfram Alpha, Llc | Method and system for distributing and displaying graphical items |
US9734252B2 (en) | 2011-09-08 | 2017-08-15 | Wolfram Alpha Llc | Method and system for analyzing data using a query answering system |
US20170357985A1 (en) * | 2005-10-28 | 2017-12-14 | Adobe Systems Incorporated | Classification and management of keywords across multiple campaigns |
US9851950B2 (en) | 2011-11-15 | 2017-12-26 | Wolfram Alpha Llc | Programming in a precise syntax using natural language |
US10229143B2 (en) | 2015-06-23 | 2019-03-12 | Microsoft Technology Licensing, Llc | Storage and retrieval of data from a bit vector search index |
US10242071B2 (en) | 2015-06-23 | 2019-03-26 | Microsoft Technology Licensing, Llc | Preliminary ranker for scoring matching documents |
US10467215B2 (en) | 2015-06-23 | 2019-11-05 | Microsoft Technology Licensing, Llc | Matching documents using a bit vector search index |
US10565198B2 (en) | 2015-06-23 | 2020-02-18 | Microsoft Technology Licensing, Llc | Bit vector search index using shards |
US10650302B2 (en) * | 2014-10-16 | 2020-05-12 | Deepmind Technologies Limited | Augmenting neural networks with external memory |
US10733164B2 (en) | 2015-06-23 | 2020-08-04 | Microsoft Technology Licensing, Llc | Updating a bit vector search index |
US11281639B2 (en) | 2015-06-23 | 2022-03-22 | Microsoft Technology Licensing, Llc | Match fix-up to remove matching documents |
US11392568B2 (en) | 2015-06-23 | 2022-07-19 | Microsoft Technology Licensing, Llc | Reducing matching documents for a search query |
US11609943B2 (en) | 2013-09-25 | 2023-03-21 | Google Llc | Contextual content distribution |
Citations (15)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6078916A (en) * | 1997-08-01 | 2000-06-20 | Culliss; Gary | Method for organizing information |
US20020078045A1 (en) * | 2000-12-14 | 2002-06-20 | Rabindranath Dutta | System, method, and program for ranking search results using user category weighting |
US6584466B1 (en) * | 1999-04-07 | 2003-06-24 | Critical Path, Inc. | Internet document management system and methods |
US6606659B1 (en) * | 2000-01-28 | 2003-08-12 | Websense, Inc. | System and method for controlling access to internet sites |
US6691108B2 (en) * | 1999-12-14 | 2004-02-10 | Nec Corporation | Focused search engine and method |
US20040030686A1 (en) * | 2000-12-07 | 2004-02-12 | Cardno Andrew John | Method and system of searching a database of records |
US6839680B1 (en) * | 1999-09-30 | 2005-01-04 | Fujitsu Limited | Internet profiling |
US20050033803A1 (en) | 2003-07-02 | 2005-02-10 | Vleet Taylor N. Van | Server architecture and methods for persistently storing and serving event data |
US6873982B1 (en) * | 1999-07-16 | 2005-03-29 | International Business Machines Corporation | Ordering of database search results based on user feedback |
US20050203884A1 (en) * | 2004-03-11 | 2005-09-15 | International Business Machines Corporation | Systems and methods for user-constructed hierarchical interest profiles and information retrieval using same |
US20050222989A1 (en) * | 2003-09-30 | 2005-10-06 | Taher Haveliwala | Results based personalization of advertisements in a search engine |
US20050240580A1 (en) * | 2003-09-30 | 2005-10-27 | Zamir Oren E | Personalization of placed content ordering in search results |
US20060041549A1 (en) * | 2004-08-20 | 2006-02-23 | Gundersen Matthew A | Mapping web sites based on significance of contact and category |
US20060059138A1 (en) * | 2000-05-25 | 2006-03-16 | Microsoft Corporation | Facility for highlighting documents accessed through search or browsing |
US7020646B2 (en) * | 2000-10-27 | 2006-03-28 | Catherine Brexel | Interactive personal directory |
-
2004
- 2004-11-30 US US11/001,403 patent/US7440968B1/en active Active
Patent Citations (15)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6078916A (en) * | 1997-08-01 | 2000-06-20 | Culliss; Gary | Method for organizing information |
US6584466B1 (en) * | 1999-04-07 | 2003-06-24 | Critical Path, Inc. | Internet document management system and methods |
US6873982B1 (en) * | 1999-07-16 | 2005-03-29 | International Business Machines Corporation | Ordering of database search results based on user feedback |
US6839680B1 (en) * | 1999-09-30 | 2005-01-04 | Fujitsu Limited | Internet profiling |
US6691108B2 (en) * | 1999-12-14 | 2004-02-10 | Nec Corporation | Focused search engine and method |
US6606659B1 (en) * | 2000-01-28 | 2003-08-12 | Websense, Inc. | System and method for controlling access to internet sites |
US20060059138A1 (en) * | 2000-05-25 | 2006-03-16 | Microsoft Corporation | Facility for highlighting documents accessed through search or browsing |
US7020646B2 (en) * | 2000-10-27 | 2006-03-28 | Catherine Brexel | Interactive personal directory |
US20040030686A1 (en) * | 2000-12-07 | 2004-02-12 | Cardno Andrew John | Method and system of searching a database of records |
US20020078045A1 (en) * | 2000-12-14 | 2002-06-20 | Rabindranath Dutta | System, method, and program for ranking search results using user category weighting |
US20050033803A1 (en) | 2003-07-02 | 2005-02-10 | Vleet Taylor N. Van | Server architecture and methods for persistently storing and serving event data |
US20050222989A1 (en) * | 2003-09-30 | 2005-10-06 | Taher Haveliwala | Results based personalization of advertisements in a search engine |
US20050240580A1 (en) * | 2003-09-30 | 2005-10-27 | Zamir Oren E | Personalization of placed content ordering in search results |
US20050203884A1 (en) * | 2004-03-11 | 2005-09-15 | International Business Machines Corporation | Systems and methods for user-constructed hierarchical interest profiles and information retrieval using same |
US20060041549A1 (en) * | 2004-08-20 | 2006-02-23 | Gundersen Matthew A | Mapping web sites based on significance of contact and category |
Cited By (84)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8635216B1 (en) * | 2004-09-30 | 2014-01-21 | Avaya Inc. | Enhancing network information retrieval according to a user search profile |
US7765178B1 (en) * | 2004-10-06 | 2010-07-27 | Shopzilla, Inc. | Search ranking estimation |
US8473477B1 (en) | 2004-10-06 | 2013-06-25 | Shopzilla, Inc. | Search ranking estimation |
US20060259302A1 (en) * | 2005-05-13 | 2006-11-16 | At&T Corp. | Apparatus and method for speech recognition data retrieval |
US8751240B2 (en) * | 2005-05-13 | 2014-06-10 | At&T Intellectual Property Ii, L.P. | Apparatus and method for forming search engine queries based on spoken utterances |
US9653072B2 (en) | 2005-05-13 | 2017-05-16 | Nuance Communications, Inc. | Apparatus and method for forming search engine queries based on spoken utterances |
US20070027869A1 (en) * | 2005-07-29 | 2007-02-01 | Collins Robert J | System and method for reordering a result set copyright notice |
US7809731B2 (en) * | 2005-07-29 | 2010-10-05 | Yahoo! Inc. | System and method for reordering a result set copyright notice |
AU2006275659B2 (en) * | 2005-07-29 | 2010-09-02 | Excalibur Ip, Llc | System and method for reordering a result set |
US20170357985A1 (en) * | 2005-10-28 | 2017-12-14 | Adobe Systems Incorporated | Classification and management of keywords across multiple campaigns |
US20070150343A1 (en) * | 2005-12-22 | 2007-06-28 | Kannapell John E Ii | Dynamically altering requests to increase user response to advertisements |
US20070150344A1 (en) * | 2005-12-22 | 2007-06-28 | Sobotka David C | Selection and use of different keyphrases for different advertising content suppliers |
US7813959B2 (en) | 2005-12-22 | 2010-10-12 | Aol Inc. | Altering keyword-based requests for content |
US20070150345A1 (en) * | 2005-12-22 | 2007-06-28 | Sudhir Tonse | Keyword value maximization for advertisement systems with multiple advertisement sources |
US20110145066A1 (en) * | 2005-12-22 | 2011-06-16 | Law Justin M | Generating keyword-based requests for content |
US20070150346A1 (en) * | 2005-12-22 | 2007-06-28 | Sobotka David C | Dynamic rotation of multiple keyphrases for advertising content supplier |
US7809605B2 (en) | 2005-12-22 | 2010-10-05 | Aol Inc. | Altering keyword-based requests for content |
US20070150341A1 (en) * | 2005-12-22 | 2007-06-28 | Aftab Zia | Advertising content timeout methods in multiple-source advertising systems |
US20120143673A1 (en) * | 2005-12-22 | 2012-06-07 | Aol Inc. | Generating keyboard-based requests for content |
US8117069B2 (en) | 2005-12-22 | 2012-02-14 | Aol Inc. | Generating keyword-based requests for content |
US20070185836A1 (en) * | 2006-02-09 | 2007-08-09 | Handy-Bosma John H | Method for caching faceted search results |
US20080072140A1 (en) * | 2006-07-05 | 2008-03-20 | Vydiswaran V G V | Techniques for inducing high quality structural templates for electronic documents |
US7680858B2 (en) * | 2006-07-05 | 2010-03-16 | Yahoo! Inc. | Techniques for clustering structurally similar web pages |
US8046681B2 (en) | 2006-07-05 | 2011-10-25 | Yahoo! Inc. | Techniques for inducing high quality structural templates for electronic documents |
US7676465B2 (en) | 2006-07-05 | 2010-03-09 | Yahoo! Inc. | Techniques for clustering structurally similar web pages based on page features |
US20080010291A1 (en) * | 2006-07-05 | 2008-01-10 | Krishna Leela Poola | Techniques for clustering structurally similar web pages |
US9684721B2 (en) | 2006-09-07 | 2017-06-20 | Wolfram Alpha Llc | Performing machine actions in response to voice input |
US10380201B2 (en) | 2006-09-07 | 2019-08-13 | Wolfram Alpha Llc | Method and system for determining an answer to a query |
US8966439B2 (en) | 2006-09-07 | 2015-02-24 | Wolfram Alpha Llc | Method and system for determining an answer to a query |
US8589869B2 (en) | 2006-09-07 | 2013-11-19 | Wolfram Alpha Llc | Methods and systems for determining a formula |
US20080066052A1 (en) * | 2006-09-07 | 2008-03-13 | Stephen Wolfram | Methods and systems for determining a formula |
US8087019B1 (en) | 2006-10-31 | 2011-12-27 | Aol Inc. | Systems and methods for performing machine-implemented tasks |
US8997100B2 (en) | 2006-10-31 | 2015-03-31 | Mercury Kingdom Assets Limited | Systems and method for performing machine-implemented tasks of sending substitute keyword to advertisement supplier |
US20080201317A1 (en) * | 2007-02-16 | 2008-08-21 | Yahoo! Inc. | Ranking documents |
US20100274778A1 (en) * | 2007-02-16 | 2010-10-28 | Ryan Sue | Ranking documents |
US7930286B2 (en) | 2007-02-16 | 2011-04-19 | Yahoo! Inc. | Federated searches implemented across multiple search engines |
US20080201304A1 (en) * | 2007-02-16 | 2008-08-21 | Yahoo! Inc. | Federated searches implemented across multiple search engines |
US7756867B2 (en) * | 2007-02-16 | 2010-07-13 | Yahoo! Inc. | Ranking documents |
US7958111B2 (en) | 2007-02-16 | 2011-06-07 | Yahoo! Inc. | Ranking documents |
US8639687B2 (en) * | 2007-07-11 | 2014-01-28 | Sungkyunkwan University Foundation For Corporate Collaboration | User-customized content providing device, method and recorded medium |
US20090019033A1 (en) * | 2007-07-11 | 2009-01-15 | Sungkyunkwan University Foundation For Corporate Collaboration | User-customized content providing device, method and recorded medium |
US7941420B2 (en) | 2007-08-14 | 2011-05-10 | Yahoo! Inc. | Method for organizing structurally similar web pages from a web site |
US20090063538A1 (en) * | 2007-08-30 | 2009-03-05 | Krishna Prasad Chitrapura | Method for normalizing dynamic urls of web pages through hierarchical organization of urls from a web site |
US8600987B2 (en) * | 2007-10-11 | 2013-12-03 | Google Inc. | Classifying search results to determine page elements |
US20120317107A1 (en) * | 2007-10-11 | 2012-12-13 | Google Inc. | Methods and Systems for Classifying Search Results to Determine Page Elements |
US9043322B2 (en) | 2007-10-11 | 2015-05-26 | Google Inc. | Classifying search results |
US20090125529A1 (en) * | 2007-11-12 | 2009-05-14 | Vydiswaran V G Vinod | Extracting information based on document structure and characteristics of attributes |
US20100169311A1 (en) * | 2008-12-30 | 2010-07-01 | Ashwin Tengli | Approaches for the unsupervised creation of structural templates for electronic documents |
US20100223214A1 (en) * | 2009-02-27 | 2010-09-02 | Kirpal Alok S | Automatic extraction using machine learning based robust structural extractors |
US8145636B1 (en) * | 2009-03-13 | 2012-03-27 | Google Inc. | Classifying text into hierarchical categories |
US8725732B1 (en) * | 2009-03-13 | 2014-05-13 | Google Inc. | Classifying text into hierarchical categories |
US8601015B1 (en) | 2009-05-15 | 2013-12-03 | Wolfram Alpha Llc | Dynamic example generation for queries |
US9213768B1 (en) | 2009-05-15 | 2015-12-15 | Wolfram Alpha Llc | Assumption mechanism for queries |
US20100325140A1 (en) * | 2009-06-18 | 2010-12-23 | Verizon Patent And Licensing Inc. | System for and method of parallel searching |
US8484015B1 (en) * | 2010-05-14 | 2013-07-09 | Wolfram Alpha Llc | Entity pages |
US8812298B1 (en) | 2010-07-28 | 2014-08-19 | Wolfram Alpha Llc | Macro replacement of natural language input |
US9069814B2 (en) | 2011-07-27 | 2015-06-30 | Wolfram Alpha Llc | Method and system for using natural language to generate widgets |
US10176268B2 (en) | 2011-09-08 | 2019-01-08 | Wolfram Alpha Llc | Method and system for analyzing data using a query answering system |
US9734252B2 (en) | 2011-09-08 | 2017-08-15 | Wolfram Alpha Llc | Method and system for analyzing data using a query answering system |
US9851950B2 (en) | 2011-11-15 | 2017-12-26 | Wolfram Alpha Llc | Programming in a precise syntax using natural language |
US10929105B2 (en) | 2011-11-15 | 2021-02-23 | Wolfram Alpha Llc | Programming in a precise syntax using natural language |
US10606563B2 (en) | 2011-11-15 | 2020-03-31 | Wolfram Alpha Llc | Programming in a precise syntax using natural language |
US10248388B2 (en) | 2011-11-15 | 2019-04-02 | Wolfram Alpha Llc | Programming in a precise syntax using natural language |
CN102508920A (en) * | 2011-11-18 | 2012-06-20 | 广州索答信息科技有限公司 | Information retrieval method based on Boosting sorting algorithm |
CN102508920B (en) * | 2011-11-18 | 2013-03-13 | 广州索答信息科技有限公司 | Information retrieval method based on Boosting sorting algorithm |
US9558294B2 (en) * | 2012-02-08 | 2017-01-31 | Microsoft Technology Licnesing, Llc | Asynchronous caching to improve user experience |
US20130204857A1 (en) * | 2012-02-08 | 2013-08-08 | Microsoft Corporation | Asynchronous caching to improve user experience |
US9405424B2 (en) | 2012-08-29 | 2016-08-02 | Wolfram Alpha, Llc | Method and system for distributing and displaying graphical items |
US8843470B2 (en) | 2012-10-05 | 2014-09-23 | Microsoft Corporation | Meta classifier for query intent classification |
WO2014079534A1 (en) * | 2012-11-26 | 2014-05-30 | Alcatel Lucent | System and method for determination of personalization in online service provider responses |
US20150242512A1 (en) * | 2012-12-11 | 2015-08-27 | Google Inc. | Systems and Methods for Ranking Search Results Based on User Identification of Items of Interest |
US11615128B1 (en) * | 2013-09-25 | 2023-03-28 | Google Llc | Contextual content distribution |
US11609943B2 (en) | 2013-09-25 | 2023-03-21 | Google Llc | Contextual content distribution |
US9418076B2 (en) * | 2014-01-31 | 2016-08-16 | Blackberry Limited | System and method for determining interests from location data |
US20150220566A1 (en) * | 2014-01-31 | 2015-08-06 | Blackberry Limited | System and Method for Determining Interests from Location Data |
US10650302B2 (en) * | 2014-10-16 | 2020-05-12 | Deepmind Technologies Limited | Augmenting neural networks with external memory |
US11210579B2 (en) | 2014-10-16 | 2021-12-28 | Deepmind Technologies Limited | Augmenting neural networks with external memory |
US10565198B2 (en) | 2015-06-23 | 2020-02-18 | Microsoft Technology Licensing, Llc | Bit vector search index using shards |
US10733164B2 (en) | 2015-06-23 | 2020-08-04 | Microsoft Technology Licensing, Llc | Updating a bit vector search index |
US10467215B2 (en) | 2015-06-23 | 2019-11-05 | Microsoft Technology Licensing, Llc | Matching documents using a bit vector search index |
US11281639B2 (en) | 2015-06-23 | 2022-03-22 | Microsoft Technology Licensing, Llc | Match fix-up to remove matching documents |
US11392568B2 (en) | 2015-06-23 | 2022-07-19 | Microsoft Technology Licensing, Llc | Reducing matching documents for a search query |
US10242071B2 (en) | 2015-06-23 | 2019-03-26 | Microsoft Technology Licensing, Llc | Preliminary ranker for scoring matching documents |
US10229143B2 (en) | 2015-06-23 | 2019-03-12 | Microsoft Technology Licensing, Llc | Storage and retrieval of data from a bit vector search index |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US7440968B1 (en) | Query boosting based on classification | |
US9805116B2 (en) | System and method for personalized snippet generation | |
US6480837B1 (en) | Method, system, and program for ordering search results using a popularity weighting | |
US8209325B2 (en) | Search engine cache control | |
US7487145B1 (en) | Method and system for autocompletion using ranked results | |
US6718365B1 (en) | Method, system, and program for ordering search results using an importance weighting | |
US7398271B1 (en) | Using network traffic logs for search enhancement | |
JP5572596B2 (en) | Personalize the ordering of place content in search results | |
US8849818B1 (en) | Searching via user-specified ratings | |
US8577868B1 (en) | Bookmarks | |
US6560600B1 (en) | Method and apparatus for ranking Web page search results | |
US8799302B2 (en) | Recommended alerts | |
US20070233671A1 (en) | Group Customized Search | |
US9529861B2 (en) | Method, system, and graphical user interface for improved search result displays via user-specified annotations | |
US20050278314A1 (en) | Variable length snippet generation | |
US20050086206A1 (en) | System, Method, and service for collaborative focused crawling of documents on a network | |
US8589391B1 (en) | Method and system for generating web site ratings for a user | |
US20070255689A1 (en) | System and method for indexing web content using click-through features | |
US20150161256A1 (en) | Method, System, and Graphical User Interface for Providing Personalized Recommendations of Popular Search Queries | |
WO2006034038A2 (en) | Systems and methods of retrieving topic specific information | |
US8977630B1 (en) | Personalizing search results | |
JP2010506255A (en) | Bookmarking and ranking | |
US20040205049A1 (en) | Methods and apparatus for user-centered web crawling | |
US8874570B1 (en) | Search boost vector based on co-visitation information | |
US7856430B1 (en) | Method for generating increased numbers of leads via the internet |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:OZTEKIN, BILGEHAN UYGAR;KAMVAR, SEPANDAR D.;HAVELIWALA, TAHER H.;AND OTHERS;REEL/FRAME:015683/0119Effective date: 20050124 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
FPAY | Fee payment |
Year of fee payment: 8 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044101/0610Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 12TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1553); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 12 |
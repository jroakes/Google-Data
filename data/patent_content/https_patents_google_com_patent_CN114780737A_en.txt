CN114780737A - Personalized entity library - Google Patents
Personalized entity library Download PDFInfo
- Publication number
- CN114780737A CN114780737A CN202210324906.3A CN202210324906A CN114780737A CN 114780737 A CN114780737 A CN 114780737A CN 202210324906 A CN202210324906 A CN 202210324906A CN 114780737 A CN114780737 A CN 114780737A
- Authority
- CN
- China
- Prior art keywords
- fixed
- entities
- entity
- location
- user
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Pending
Links
- 238000000034 method Methods 0.000 claims abstract description 84
- 230000015654 memory Effects 0.000 claims abstract description 65
- 230000009471 action Effects 0.000 claims description 17
- 230000004044 response Effects 0.000 claims description 10
- 238000012545 processing Methods 0.000 claims description 8
- 230000003993 interaction Effects 0.000 claims 14
- 238000009877 rendering Methods 0.000 claims 5
- 230000008569 process Effects 0.000 description 35
- 239000003795 chemical substances by application Substances 0.000 description 29
- 230000006870 function Effects 0.000 description 16
- 238000004891 communication Methods 0.000 description 14
- 239000012634 fragment Substances 0.000 description 10
- 238000012549 training Methods 0.000 description 10
- 230000008859 change Effects 0.000 description 9
- 238000004590 computer program Methods 0.000 description 7
- 230000000694 effects Effects 0.000 description 7
- 230000003287 optical effect Effects 0.000 description 6
- 238000012790 confirmation Methods 0.000 description 5
- 239000004065 semiconductor Substances 0.000 description 4
- 238000010586 diagram Methods 0.000 description 3
- 238000010801 machine learning Methods 0.000 description 3
- 238000013507 mapping Methods 0.000 description 3
- 239000000758 substrate Substances 0.000 description 3
- 238000013528 artificial neural network Methods 0.000 description 2
- 230000007423 decrease Effects 0.000 description 2
- 238000009434 installation Methods 0.000 description 2
- 238000011900 installation process Methods 0.000 description 2
- 239000000463 material Substances 0.000 description 2
- 238000012552 review Methods 0.000 description 2
- 239000007787 solid Substances 0.000 description 2
- 238000012706 support-vector machine Methods 0.000 description 2
- 238000012546 transfer Methods 0.000 description 2
- 230000003213 activating effect Effects 0.000 description 1
- 238000004458 analytical method Methods 0.000 description 1
- 230000009286 beneficial effect Effects 0.000 description 1
- 230000008901 benefit Effects 0.000 description 1
- 230000010267 cellular communication Effects 0.000 description 1
- 230000001413 cellular effect Effects 0.000 description 1
- 230000009193 crawling Effects 0.000 description 1
- 238000013500 data storage Methods 0.000 description 1
- 230000001066 destructive effect Effects 0.000 description 1
- 230000036541 health Effects 0.000 description 1
- 238000010191 image analysis Methods 0.000 description 1
- 230000000977 initiatory effect Effects 0.000 description 1
- 238000012423 maintenance Methods 0.000 description 1
- 235000012054 meals Nutrition 0.000 description 1
- 238000012986 modification Methods 0.000 description 1
- 230000004048 modification Effects 0.000 description 1
- 230000006855 networking Effects 0.000 description 1
- 230000000737 periodic effect Effects 0.000 description 1
- 230000006403 short-term memory Effects 0.000 description 1
- 230000011664 signaling Effects 0.000 description 1
- 238000011524 similarity measure Methods 0.000 description 1
- 230000003068 static effect Effects 0.000 description 1
- 230000007704 transition Effects 0.000 description 1
- 230000000007 visual effect Effects 0.000 description 1
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/50—Network services
- H04L67/52—Network services specially adapted for the location of the user terminal
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/24—Querying
- G06F16/245—Query processing
- G06F16/2457—Query processing with adaptation to user needs
- G06F16/24578—Query processing with adaptation to user needs using ranking
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/30—Information retrieval; Database structures therefor; File system structures therefor of unstructured textual data
- G06F16/36—Creation of semantic tools, e.g. ontology or thesauri
- G06F16/367—Ontology
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/23—Updating
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/23—Updating
- G06F16/235—Update request formulation
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/23—Updating
- G06F16/2358—Change logging, detection, and notification
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/24—Querying
- G06F16/248—Presentation of query results
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/50—Information retrieval; Database structures therefor; File system structures therefor of still image data
- G06F16/58—Retrieval characterised by using metadata, e.g. metadata not derived from the content or metadata generated manually
- G06F16/587—Retrieval characterised by using metadata, e.g. metadata not derived from the content or metadata generated manually using geographical or spatial information, e.g. location
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/907—Retrieval characterised by using metadata, e.g. metadata not derived from the content or metadata generated manually
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/953—Querying, e.g. by the use of web search engines
- G06F16/9535—Search customisation based on user profiles and personalisation
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V20/00—Scenes; Scene-specific elements
- G06V20/60—Type of objects
- G06V20/62—Text, e.g. of license plates, overlay texts or captions on TV images
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/50—Network services
- H04L67/535—Tracking the activity of the user
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/50—Network services
- H04L67/55—Push-based network services
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04W—WIRELESS COMMUNICATION NETWORKS
- H04W4/00—Services specially adapted for wireless communication networks; Facilities therefor
- H04W4/02—Services making use of location information
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04W—WIRELESS COMMUNICATION NETWORKS
- H04W4/00—Services specially adapted for wireless communication networks; Facilities therefor
- H04W4/02—Services making use of location information
- H04W4/029—Location-based management or tracking services
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04W—WIRELESS COMMUNICATION NETWORKS
- H04W4/00—Services specially adapted for wireless communication networks; Facilities therefor
- H04W4/18—Information format or content conversion, e.g. adaptation by the network of the transmitted or received information for the purpose of wireless delivery to users or terminals
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04W—WIRELESS COMMUNICATION NETWORKS
- H04W4/00—Services specially adapted for wireless communication networks; Facilities therefor
- H04W4/60—Subscription-based services using application servers or record carriers, e.g. SIM application toolkits
Abstract
The invention relates to a personalized entity library. Systems and methods for personalized entity libraries are provided. For example, a computing device includes a personalized entity library having a set of fixed entities from a library of entities stored at a server, a processor, and memory storing instructions that cause the computing device to identify a set of fixed entities relevant to a user based on a context associated with the computing device, rank the fixed set by relevance, and update the personalized entity library using a selection set determined based on the ranking and a set usage parameter applicable to the user. In another example, a method includes generating a set of fixed entities from an entity library, including a location-based set and a topic-based set, and providing a subset of the set to a client, the client requesting the subset based on the location of the client and an item identified in content generated for display on the client.
Description
Description of the different cases
The present application belongs to the divisional application of Chinese patent application 201680061369.0 with the application date of 2016, 10, month and 18.
RELATED APPLICATIONS
This application claims priority to and continues with U.S. non-provisional patent application No.14/962,415 entitled "PERSONALIZED ENTITY REPOSITY" filed on 12/8/2015, while U.S. non-provisional patent application No.14/962,415 in turn claims priority to U.S. provisional patent application No.62/245,241 entitled "PERSONALIZED ENTITY REPOSITY" filed on 22/10/2015, the entire contents of which are incorporated herein by reference.
Background
The use of mobile devices, such as smart phones, wearable devices, tablet computers, laptop computers, and the like, is increasing. By understanding what is seen by the user and what actions are taken, the mobile device may establish a better user experience, for example, by providing personalized predictions and assistance to the user. Understanding a portion of the content and actions includes identifying and classifying entities identified in the content of the device screen. An entity may exist in an entity repository, such as a knowledge base or visual model, that stores facts and information about the entity. A large common entity library may contain millions of such entities. Most computing devices, particularly mobile computing devices such as smartphones and tablet computers, have limited storage space and use entity libraries via a connection to a server.
Disclosure of Invention
Embodiments divide the entity library into a number of fixed sets or segments. The set may be location based, topic based, action based, or functional. The system may determine sets at the server and provide only those sets to the client devices associated with that particular client. The collection downloaded to the client is a library of personalized entities that are accessible without connecting to a server. The client device may include a set identification engine. The set identification engine may include a predictive model that predicts one or more sets given some text, images, or other features. Predictive models can be used to determine which sets are most beneficial to the user. The set identification engine may also track the user's location to determine which sets of locations are most relevant.
The set may be ranked for a user of the client device, e.g., based on the user's location, the user's search history, content the user has viewed on the device, time of day, signals from other devices, etc. Thus, for example, if a user begins studying a trip to Hawaii, the system may determine that a set of entities that are relevant to Hawaii are particularly relevant to the user. If the user flies from New York to los Angeles, the system can determine that the set of locations for los Angeles are relevant. The client device may use the rankings to determine which sets to retrieve and which sets to delete from memory. For example, if a previously downloaded set is no longer relevant, the system may remove the set to make room for another set. The system may use the set usage parameters at any time to determine which sets to include in the personalized entity library. In some embodiments, a user may establish and control set usage parameters. Updating the set may include determining an increment of the set to reduce data transmitted to the client device. In some implementations, these sets can be versioned, for example, so that schema changes do not corrupt the application using the model.
According to certain aspects of the present disclosure, a mobile device includes a display device, a personalized entity library stored in memory, the personalized entity library including a plurality of fixed entity sets from an entity library stored at a server, wherein each fixed set has a respective identifier and includes information about an entity in the set, at least one processor, and memory storing instructions that, when executed by the at least one processor, cause the mobile device to perform operations. The operations include identifying a fixed set of entity libraries relevant to a user of the mobile device based on a context associated with the mobile device, ranking the fixed set by relevance, determining a selected set from the identified fixed set using the ranking and a set usage parameter appropriate for the user, and updating the personalized entity library using the selected set.
According to certain aspects of the disclosure, a method comprises: receiving a screen-captured image configured to display content on a display of a mobile device, determining text in the image by performing text recognition on the image, providing the text to a set prediction model, wherein the set prediction model is trained to predict one or more fixed entity sets; and storing at least one of the predicted sets of fixed entities in the personalized entity library in memory on the mobile device.
According to certain aspects of the present disclosure, a method may include generating a plurality of fixed entity sets from an entity library. The fixed sets include location-based sets, each location-based set including entities from the entity library having locations located within cells associated with the set, and topic-based sets, at least some of which include entities from the entity library that are related to each other via embedding similarity. The method may also include providing a subset of the fixed set of entities to a client device, the client device requesting the subset based on a location of the client device and based on the identified item identified in content generated for display on the client device.
In one general aspect, a computer program product embodied on a computer-readable storage device includes instructions that, when executed by at least one processor formed in a substrate, cause a computing device to perform any of the disclosed methods, operations, or processes. Another general aspect includes a system and/or method for generating a fixed set of entities in an entity library and providing some of the fixed set to a personal computing device as a personal entity library, substantially as shown in and/or described in connection with at least one of the figures, and as set forth more completely in the claims.
One or more embodiments of the subject matter described herein can be implemented to realize one or more of the following advantages. As one example, generating a fixed set of entities allows the system to provide a personal or custom entity library in a scalable manner. The customized entity library may facilitate text analysis and image analysis on the device to support user-assisted functions without connecting to a network. The user may control the amount of resources dedicated to the personal entity pool, and the system may automatically determine which sets best utilize the allocated resources. As another example, the system may predict which sets are most relevant to the user. The prediction may be based on a number of factors specific to the user and/or the personal computing device, such as location, time of day, signals from other computing devices associated with the user or known to the device, recent activity with respect to the computing device, and so forth. As another example, embodiments may support versioning of a collection so that changes to reconstruct information in the collection do not corrupt applications that use the collection.
The details of one or more implementations are set forth in the accompanying drawings and the description below. Other features will be apparent from the description and drawings, and from the claims.
Drawings
Fig. 1 is a block diagram illustrating an exemplary system in accordance with the disclosed subject matter.
FIG. 2 illustrates an exemplary display of a user interface for specifying aggregate use parameters for a personalized entity library in accordance with the disclosed subject matter.
FIG. 3 illustrates an exemplary display providing content for determining which sets of contexts are most relevant to a user of a computing device in accordance with the disclosed embodiments.
FIG. 4 illustrates an exemplary display of a user interface for suggesting additional collections for inclusion in a personalized entity library, according to disclosed embodiments.
FIG. 5 illustrates another exemplary display of a user interface for suggesting additional collections for inclusion in a library of personalized entities, in accordance with the disclosed embodiments.
FIG. 6 illustrates a flow chart of an exemplary process for generating and updating a set of fixed entities in accordance with the disclosed embodiments.
FIG. 7 illustrates a flow chart of an exemplary process for building a personal entity library using a fixed set of entities in accordance with the disclosed embodiments.
FIG. 8 illustrates a flow chart of an exemplary process for identifying a set of fixed entities relevant to a user of a client device in accordance with the disclosed embodiments.
FIG. 9 illustrates a flow chart of an exemplary process for selecting a set of fixed entities relevant to a user of a client device from a set of fixed entities based on a set usage parameter in accordance with the disclosed embodiments.
FIG. 10 illustrates an example of a computing device that may be used to implement the techniques.
FIG. 11 illustrates an example of a distributed computing device that may be used to implement the techniques.
Like reference symbols in the various drawings indicate like elements.
Detailed Description
FIG. 1 is a block diagram of a personal entity library system in accordance with an exemplary embodiment. The system 100 can be used to build a personalized entity library from a selection of pre-computed or fixed entity sets. These collections are fixed in the sense of being computed before any particular request for a collection, or in other words, are not generated in response to a request for a collection. The system 100 can determine which collections are most useful at a particular point in time and can update the personalized entity library to ensure that the entities in the personalized library are relevant to the user. Updating the personalized entity library includes deleting collections that are now less relevant to the user than before, and adding new collections that have become relevant. The personalized entity library may be used to determine entities in content generated for display on a computing device to personalize a user experience on the computing device. The personalized user experience may include predicted actions, themes, words or phrases, and the like. The system 100 of fig. 1 is illustrated as a client-server system, with some data processing or data storage occurring at the server 110 and other data processing occurring at the client device 150. However, other configurations and applications may be used, and the embodiments are not limited to the exact configuration shown.
The personalized entity library system 100 may include a server 110, and the server 110 may be one or more computing devices in the form of a number of different devices, such as a standard server, a group of such servers, or a rack server system. For example, the server 110 may be implemented in a distributed manner across multiple computing devices. Additionally, the server 110 may be implemented in a personal computer (e.g., a laptop computer). The server 110 may be a computer device 1100 as illustrated in fig. 9, or an example of a computer device 1100 as illustrated in fig. 11. The server 110 may include one or more processors formed in a substrate that are configured to execute one or more machine-executable instructions or software, firmware, or a combination thereof. The processor may be semiconductor-based-that is, the processor may comprise semiconductor material that may execute digital logic.
The server 110 may store or access an entity library 130. The entity repository 130 may store information about entities. An entity may be a person, place, item, idea, topic, word, phrase, abstract concept, concrete element, other suitable thing, or any combination of these. In some embodiments, the entity repository 130 may be a knowledge base (knowledge base) that stores information about entities. In some embodiments, the knowledge base stores information about entities in the form of relationships between the entities. For example, entities in the knowledge base may be related to each other by labeled edges representing relationships. The repository may also store attributes of the entities. Some knowledge bases are large, sometimes comprising millions of entities. A knowledge base with a large number of entities and even a limited number of relationships can have billions of connections.
The entity library 130 may also include image recognition entities that may be used to identify entities in an image. For example, the entity library 130 may include entities that represent known images of entities and/or characteristics of images, and the entities are used in an image recognition process (e.g., using image similarity techniques) to identify entities in images. For example, the characteristics may be features provided to an image recognition model (e.g., a machine learning algorithm). The entity repository 130 may represent a single repository, a combination of different repositories, an image recognition entity, and/or a combination of a repository and image information. In some embodiments, the entity library 130 may be stored in an external storage device accessible to the server 110. In some implementations, the entity library 130 can be distributed across multiple storage devices and/or multiple computing devices, e.g., multiple servers. The entities and relationships in the knowledge base may be searchable, for example, via an index. For example, the index may include text that references the entity. Thus, references to a knowledge base may be understood to include an index that facilitates the use of textual equivalents to find entities.
The server 110 may also include one or more computer memories. A memory, such as main memory, may be configured to store one or more data temporarily, permanently, semi-permanently, or a combination thereof. The memory may include any type of storage device that stores information in a format that may be read and/or executed by the one or more processors. The memory may include volatile memory, non-volatile memory, or a combination thereof, as well as a storage module or engine that, when executed by the one or more processors, performs certain operations. In some implementations, the modules may be stored in an external storage device and loaded into memory of the server 110. In some implementations, the modules can include an entity set generation engine 120. The entity set generation engine 120 may divide the entities in the entity repository 130 into a fixed entity set 132. Each of the fixed entity sets 132 may be considered a segment of the entity library 130 that includes entities that are related by some criteria. In some implementations, a segment may contain metadata about the entity (e.g., name, description, standard image), relationships with other entities, and/or information used to detect the entity in text, such as a common name, alias, abbreviation, nickname, and other signals. Each of the fixed entity sets 132 may have an identifier such that a particular set may be tracked, identified, and requested by an application or client device.
In some implementations, the entity collection generation engine 120 can generate various types of collections, such as location-based collections, topic-based collections, or functional collections. The location-based set may include entities associated with a particular geographic cell. A geographic cell is an area of the earth's surface defined by boundaries (e.g., two latitudes and two longitudes). These cells are common for mapping applications, such as GOOGLE MAPS. The set of location-based fixed entities may include any entity known to be located within the cell. The entity repository 130 may include attributes that specify the location of the entity or may include metadata that identifies the location. For example, a restaurant entity in the entity library 130 may have a location attribute that specifies one or more particular geographic cells or latitude/longitude coordinates. Although geographic cells, i.e., cells used in mapping applications, are typically of similar size, the set of location-based entities need not correspond to one geographic cell, but may be based on an area having a particular plurality of entities within the area. Thus, for example, a cell for a location-based entity set in new york city may be very small (e.g., 10 square miles) because it is densely populated, while a cell for a location-based entity set in western wyoming may be hundreds of square miles but have the same number of entities as a cell in new york city. Thus, for example, the entity set generation engine 120 can merge adjacent geographic cells until the number of entities associated with the merged cell reaches a minimum number and form a location-based cell for a fixed set of entities.
The entity set generation engine 120 may also generate a fixed set of entities based on topics. In some implementations, the entity collection generation engine 120 can generate topic-based collections by clustering entities using conventional clustering techniques based on the circumstances of the related entities. For example, the clusters may be based on characteristics of the entities, such as embedding, on search records, or training on text, such as text from documents indexed to a search engine. In some implementations, the entity set generation engine 120 can be given seed entities and can form clusters based on the seed entities. In some implementations, the one or more topic-based collections can be based on collections identified in the entity library. For example, the entities in the entity store 130 may include an indication of one or more collections to which the entities belong, or the entity store 130 may include a collection definition, or in other words, requirements, contained in the collection, and the entities may be evaluated against the requirements to determine membership in the collection. Entity set generation engine 120 may use the entity members in the set to generate one or more topic-based sets. In some implementations, the entity collection generation engine 120 can compute embeddings for each topic-related segment. Embedding may be used to compute similarity to query embedding, e.g., generated by a set identification engine, to determine which sets are most similar to query embedding. For example, the embedding may represent a cluster center.
The entity collection generation engine 120 can also generate a functional collection of entities. The set of functions may include entities that are deemed most popular, e.g., entities that are most frequently searched or accessed, e.g., based on occurrences in a search query. The set of functions may also be based on capabilities, such as the ability to translate from one language to another. As another example, a set of functions may include entities that may be encountered when used by or requested by a particular application. Of course, these sets of functions are provided as examples only, and a set of functional entities may include any set of entities common to a particular purpose, characteristic, or function. In some implementations, the entity set generation engine 120 can generate a combined fixed entity set as described above. For example, the entity set generation engine 120 may generate a fixed set of entities for restaurants in san jose, california, or another set for artwork recognition in paris, france. In some implementations, the entity collection generation engine 120 can include a user interface that enables a user to curate one or more fixed entity collections.
The entity set generation engine 120 may also periodically update the fixed entity set 132. For example, the entity collection generation engine 120 may determine changes to the fixed collection as entities are added, deleted, or updated in the entity repository 130. In some implementations, the entity set generation engine 120 can determine a delta for each set (e.g., a list of entities to be deleted from the fixed set and a list of entities to be added to the fixed set). The entity collection generation engine 120 can provide deltas to the client device 150 as a push or pull. The delta reduces the amount of data transferred between the server 110 and the client device 150 while still enabling the client device 150 to have the latest set of entities. This is particularly useful when a particular fixed set of entities changes frequently, such as the set of entities representing a movie. In some implementations, the entity collection generation engine 120 can also versify each fixed collection, also referred to as a fragment. For example, the entity collection generation engine 120 may change the data format of the fragments, or may change the fragments in another way that is a destructive pattern. When the pattern is broken, applications using these fragments may require corresponding updates to use the new fragments. Thus, the entity set generation engine 120 can versify the fixed set so that applications that have not been updated can continue to use older versions without failure. In some cases, the client device 150 may include two versions of the same fixed segment (e.g., a segment representing a particular location) until an application using the old mode is updated.
In some embodiments, the entity set generation engine 120 may also train and maintain a set prediction model 122. The set prediction model, such as set prediction model 122, may be any type of machine learning algorithm, such as a Long Short Term Memory (LSTM) neural network, a feed-forward neural network, a Support Vector Machine (SVM) classifier, or the like, that can predict a set of fixed entities given a set of features or signals. These features may include device location, text or images in content (e.g., documents, search logs, etc.), applications commonly used for various tasks, and so forth. As a machine learning algorithm, the ensemble prediction model has two modes: a training mode and an inference mode. For example, in the training mode, the set prediction model 122 may use the labeled search records 134 and the labeled crawled documents 136 to predict one or more sets of fixed entities from the set of fixed entities 132 given a set of signals. The label may be created automatically or by a human expert. The signal may be obtained from content generated on a client device, such as device 150, or from a search record, such as search record 134, or a user-specific record, such as screen capture index 172. In the training mode, the set prediction model 122 may also accept locations as signals (e.g., current geographic cell locations, coordinates, etc.) to predict a set of entities for a given location. During training, parameters of the model are updated to better reflect the labels assigned to text in the training document. In the inference mode, the set prediction model 122 will predict one or more sets of fixed entities from the set of fixed entities 132 in response to a set of features representing the signal. Each prediction set may have an associated confidence score or probability score that represents the level of certainty that the provided feature predicts a particular set of fixed entities. In some implementations, the confidence score can be based on similarity measures that differ depending on the set type. For example, the confidence score based on the set of locations may be based on a physical distance from a specified location, such as a current location of the computing device. The confidence score based on the set of topics may be based on an embedding distance from the query, such as an embedding generated based on a signal from the client device. Such signals may include text recently seen on the screen, the status or proximity of the external device, the content recently searched, stated user interests, applications installed or executed on the client device, timestamps, and the like.
Once trained and then periodically updated, the entity set generation engine 120 can provide the set prediction model 122 to the client device 150. The client device 150 may store the model as the aggregate predictive model 164. In some implementations, the client device 150 can personalize the collective predictive model 164 by performing further training. The training may use information from search records associated with the user (e.g., from search records stored at the client device 150) or the screen capture index 172. Thus, the collective prediction model 164 may be a replica of the collective prediction model 122 or a personalized replica of the collective prediction model 122.
Server 110 may include search records 134 and crawl documents 136. Search records 134 may include search logs, aggregated data collected from queries, or any other data based on queries. In some implementations, search record 134 can be generated by a search engine in the normal course of generating search results. In some implementations, search record 134 may be stored on a different computing device accessible to server 110. In some implementations, the search records may be distributed across multiple computing devices. For example, the crawl documents 136 may be documents obtained using, for example, known or later developed web crawling techniques. In some implementations, crawled documents 136 represent documents that are available over the internet and may be in the form of an index of documents.
The personalized entity library system 100 may include a computing device 150. The computing device 150 may be any mobile computing device, such as a smartphone or other handheld computing device, a tablet computer, a wearable computing device, and so forth, that operates in a closed mobile environment, rather than the common open Web-based environment. Computing device 150 may also be other types of personal electronic computing devices, such as a laptop or net-based computer, a desktop computer, a television with a processor, and so forth. Computing device 150 may be an example of computer device 1000 or 1050 illustrated in fig. 10. Computing device 150 may be a computing device used by a single user, or may be a computing device shared by multiple users.
The computing device 150 may include one or more processors formed in a substrate, the one or more processors configured to execute one or more machine executable instructions or software, firmware, or a combination thereof. The processor may be semiconductor-based-that is, the processor may comprise semiconductor material that may execute digital logic. Thus, the computing device 150 may include one or more computer memories configured to store one or more data temporarily, permanently, semi-permanently, or a combination thereof. Thus, the computing device 150 may include applications 155 that represent machine-executable instructions in the form of software, firmware, or a combination thereof. The components identified in application programs 155 may be part of an operating system or may be applications developed to run using an operating system. In some implementations, the application 155 can be a mobile application. Traditionally, mobile applications operate in a closed environment, meaning that a user employs a separate application to perform activities that are typically performed in a Web-based browser environment. For example, instead of going to a book, the user of computing device 150 may use a mobile application in applications 155 provided by book. The applications 155 may also include web applications that may mirror the mobile application, such as providing the same or similar content as the mobile application. In some implementations, the applications 155 can include functions performed by an operating system of the computing device 150.
The application 155 may include a screen content agent 160 and a collection identification engine 162. In some implementations, one or more of these applications may be provided by an operating system (not shown) of the computing device 150. In some implementations, one or more of these applications may be downloaded and installed by a user.
The screen content agent 160 may include various functions. In some implementations, the screen content agent 160 can be configured to obtain textual information represented on a screen of a computing device from an Application Program Interface (API). In some implementations, the screen content agent 160 can be built into an operating system that can determine the content of text fields displayed on the screen. Textual information may be considered the content of a screen capture, and each time an API is called or each time the content of a text field is determined may be considered a screen capture. In some embodiments, the screen content agent 160 may be configured to capture images displayed on the screen by copying or reading the contents of a frame buffer of the device. Thus, the captured screen may be an image and may be referred to as a captured image. The screen content agent 160 may capture screens at intervals. The intervals may be small, such as every half second or every second. In some implementations, the screen content agent 160 can be configured to capture a screen each time a touch event occurs (e.g., each time a user touches the screen to scroll, zoom, click a link, etc.), in response to an explicit user request or command, or when the device transitions from one mobile application to another. In some implementations, the screen content agent 160 can increase the interval at which screen captures occur when the screen is unchanged. In other words, the screen content agent 160 may capture images less frequently when the screen is static.
The screen content agent 160 can provide the captured content or screen image and metadata to a recognition engine, which can be part of the screen content agent 160 and located on the computing device 150. In some implementations, the recognition engine can be located at a server, such as server 110. When the screen capture image is provided to the recognition engine, the recognition engine may perform image and text recognition on the image to identify words, entities, logos, etc. in the content of the screen capture image. The recognition engine may be configured to perform various types of recognition, such as character recognition, image recognition, logo recognition, and the like, using conventional or later developed techniques. Thus, the recognition engine may generate recognized content, which may be from words as well as from images.
The screen content agent 160 may also determine and use metadata about the screen capture image. The metadata may include a timestamp, a mobile device type, a mobile device identifier, a mobile application that is run when the content is captured, e.g., an application that renders the content for display on a screen, etc. In some implementations, the metadata can also include which applications are active, location of the device, ambient light, motion of the device, and the like. In some implementations, the metadata can include signals from other computing devices. For example, the screen content agent 160 may be provided or may obtain information from an external device (such as a home appliance, a television, a personal assistant, a music device, an alarm system, etc.) configured to communicate with the client device 150. For example, the voice-activated electronic checklist making device may store a checklist of groceries to be purchased. The manifest may be transmitted to the client device 150 directly from the electronic manifest making device or via user account information. As another example, a user may have a tablet computer and a smartphone that share information, or a husband and wife may have a smartphone that share information. Thus, in some implementations, the information available to the client device 150 may include information provided by other devices. Some or all of this information may be included in metadata associated with the screen capture image.
The system may use metadata and information obtained via screen capture images to help the device-resident intelligence that analyzes information to help the user perform tasks on the mobile device. For example, a user talking to a friend may include a suggestion to watch a movie. The in-device intelligence can recognize the suggestion and provide an action to view movie reviews or ticket purchases. The screen content agent 160 may use an entity library to determine whether the recognized content includes known entities. Although the screen content agent 160 may use a common entity library, such as the entity library 130, this requires a connection with the server 110 and may slow the recognition and action suggestion process. Thus, the client device 150 may have a personalized entity library 176 stored on the client device 150. The personalized entity library 176 may be a collection of fixed entity collections obtained from the server 110, such as from the fixed entity collection 132. The personalized entity library 176 may be generated and maintained by the collection identification engine 162.
In some implementations, the screen content agent 160 can include an indexing engine configured to index the captured content. The index may also associate the screen capture image with text, entities, images, logos, etc. identified in the image. Thus, for example, the indexing engine may generate index entries (e.g., stored in the screen capture index 172) for captured images and captured content. In some implementations, the indexing engine can be on a server, such as server 110, and the screen content agent 160 can provide the captured images and captured content to the server. The index may be a reverse order index in which key values (e.g., words, phrases, entities, images, logos, etc.) are associated with a list of images (e.g., a copy of a screen capture image) that include the key values. The index may include metadata associated with each captured image in the list (e.g., where the key values occur on the captured image, a ranking of the key values of the image, etc.). In some implementations, the index can also include a list of captured images indexed by timestamp. The indexing engine may store the index in memory, such as screen capture index 172. Of course, in some implementations, the system may store the index in the user account on the server in addition to or instead of the user account on the computing device 150. A user of the computing device 150 may control when the screen content agent 160 is active. For example, the user may specify that the screen content agent 160 is only valid when other specified applications 155 are running (e.g., only in social media mobile applications). The user may also manually open and close the screen content agent 160, for example, via a setup application. In some implementations, the user can invoke the screen content agent 160 with a gesture or action. Disabling the screen content agent 160 may also prohibit the prediction and maintenance of the personalized entity library described herein.
The computing device 150 may also include a collection identification engine 162. The set identification engine 162 may be configured to determine which of the fixed entity sets 132 should be included in the personalized entity library 176. The collection identification engine 162 may use the information collected or generated by the screen content agent 160, as well as the collection prediction model 164 and collection usage parameters to determine which collections are likely to be relevant to the user and obtain those collections from the server 110. For example, the set identification engine 162 may collect signals as inputs for setting the predictive model 164. The signals may include information and metadata such as device location, time of day, status of various external devices in communication with the client device 150, proximity to other devices, information from the content of a screen capture image or series of screen capture images, information from the screen capture index 172 or search records of the user, information in a user profile, and so forth. As described above, external devices such as home appliances, televisions, personal assistants, music devices, alarm systems, etc. may be configured to communicate with and provide status information to client devices, and the status information may be included in the signals generated by recognition engine 162. The information used to generate the signal may be stored as metadata in the screen capture index 172 or generated/collected when the collection recognition engine 162 determines a set of fixed entities suitable for the personalized entity library 176.
As previously described, the collective prediction model 164 may be a replica of the collective prediction model 122 or may be a personalized version of the collective prediction model 122. When the predictive model 164 is a personalized version, the ensemble recognition engine 162 may provide training examples from data stored on the client device 150 or from a user profile associated with a user of the client device 150. For example, the training examples may be generated using the screen capture index 172 or search records of the user 180. In some implementations, the client devices, under user permission, can provide updates to the collective prediction model 122 on the server 110 so that the collective prediction model can be learned through predictions made on many client devices.
The set identification engine 162 may provide the signals to the set prediction model 164 in an inference mode, for example, as a set of features. In response, the set prediction model 164 may then provide identifiers of the one or more predicted fixed entity sets to the set identification engine 162. The set identification engine 162 may then rank the predicted set of fixed entities. The client device 150 may be a device with a small form factor that limits storage space on the device. Thus, the set identification engine 162 may rank the predicted fixed entity sets to determine which fixed sets are to be included in the personalized entity library 176. In some implementations, the set identification engine 162 can operate within set usage parameters selected by a user of the client device. The set usage parameters may include a maximum number of fixed sets to be stored at the client device, a maximum number of stores to be used by the personalization entity library 176, a minimum ranking, or a combination of these. If the predicted number of sets cannot fit on the client device 150, the set identification engine 162 may select as many highest ranked sets as appropriate for the set usage parameters.
In some implementations, the ranking can be determined by the set prediction model 164. In some implementations, the set identification engine 162 can adjust the rankings provided by the set prediction model 164. For example, if a particular fixed set is required by a Web application that is frequently visited by a user or that has been installed, the set identification engine 162 may increase the ranking of the particular fixed set. The set identification engine 162 may also use the metadata to adjust the rankings. For example, if Alice and Ted are traveling and have provided consent to share data, Alice's client device may determine that Ted's client device has included a particular fixed set in the personalized entity library on its device. Thus, when Alice's client device detects that Ted's device is in close proximity, the set identification engine 162 on Alice's device may downgrade the ranking of that particular fixed set on her device.
In some implementations, the set identification engine 162 can generate a ranking that predicts a fixed set periodically or after some event, such as installing a new application, activating an application that has not been used for a predetermined period of time, when available space changes, e.g., when disk space of a device goes low (e.g., below a specified percentage) or some action that frees a specified percentage of space, when a user changes location, etc. The collection identification engine 162 may also update the personalized entity library 176 in response to the ranking. For example, the collection identification engine 162 may update the personalized entity library 176 periodically, when an application using a particular fixed entity collection is installed, or when the rank of the fixed entity collection becomes a higher rank than one of the collections currently in the personalized entity library 176. For example, if Alice starts studying a trip to Hawaii, then finally, the aggregate prediction model 164 will predict the fixed segments associated with Hawaii based on what Alice has seen (e.g., from the screen capture index 172 or search records). Because the collection has never been previously ranked high enough to be included in the personalized entity library 176, the collection identification engine 162 may automatically update the personalized entity library 176 or may obtain permission from Alice before including the particular collection whenever the ranking exceeds the ranking of the collection currently in the personalized entity library 176 or when the change in the ranking exceeds some predetermined threshold. Whenever Alice returns from hawaii, or if she does not go and has not accessed content about hawaii for a period of time, the ranking of a particular segment may drop, e.g., lower than another segment that is not in the personalized entity library 176 or by a predetermined percentage. This may trigger execution of the collection recognition engine 162 so that another fragment (i.e., another fixed entity collection) may take its place in the personalized entity library 176.
Updating the personalized entity library 176 may be accomplished in a variety of ways. In some implementations, the entire library is deleted and replaced with a fixed set selected based on ranking and set usage parameters. In some embodiments, the set usage parameters may be set and controlled by a user. In some implementations, the set identification engine 162 can determine whether a particular fixed set that should be in the personalized entity library 176 already exists in the personalized entity library 176. If so, the collection recognition engine 162 may do nothing or determine if the collection has changed, such as having been updated at the server 110. If an update has occurred, the collection identification engine 162 may download the entire collection or may download an increment to apply to the collection. The collection identification engine 162 may delete a collection from the personalized entity library 176 to make room for a collection with a higher ranking.
Computing device 150 may communicate with server 110 and other mobile devices over network 140. Network 140 may be, for example, the internet, or network 160 may be a wired or wireless Local Area Network (LAN), Wide Area Network (WAN), etc., implemented using, for example, gateway devices, bridges, switches, etc. Network 140 may also represent a cellular communication network. Via network 140, server 110 may communicate with computing device 140 and transfer data to/from computing device 140, and computing device 140 may communicate with other mobile devices (not shown).
The personalized entity library system 100 represents one exemplary configuration, and embodiments may encompass other configurations. For example, some embodiments may combine one or more components of the screen content agent 160, the collection recognition engine 162, or the collection prediction model 164 into a single module or engine. Similarly, some embodiments may combine one or more of the entity collection generation engine 120 or the collection prediction model 122 into a single module or application. As another example, one or more of the databases, such as the screen capture index 172, the personalized entities repository 176, or the user profile or entities repository 130 on the client device 150, the fixed entities collection 132, the search records 134, or the crawled documents 136 may be combined into a single database or may be distributed across multiple computing devices, or may be stored in another location.
To the extent that the personalized entity library system 100 collects and stores user-specific data or may utilize personal information, the user may be provided with an opportunity to control the collection of user information (e.g., information about the user's social network, social actions or activities, the user's preferences, or the user's current location), or to control whether and/or how to store screen capture images and content. For example, the system may avoid capturing content for certain applications, such as banking applications, health applications, or other similar applications, or where such content violates terms of service. Additionally, the user may be provided with an opportunity to disable capturing screen content for a particular application or class of applications. In addition, certain data may be processed in one or more ways before being stored or used, such that personally identifiable information is deleted. For example, the identity of the user may be processed such that no personally identifiable information of the user can be determined, or the geographic location of the user for which location information (such as city, zip code, or state level) may be obtained may be generalized such that no particular location of the user can be determined. Thus, the user may control how the personalized entity library system collects information about the user and uses it.
FIG. 2 illustrates an exemplary display of a user interface 200 for specifying aggregate use parameters for a library of personalized entities in accordance with the disclosed subject matter. The display may be a display of a mobile device or other personal computing device, such as client device 150 of fig. 1. In some implementations, the user interface can be provided by an operating system of the client device, or can be provided by a particular application, such as from application 155 of FIG. 1. The user interface 200 includes controls 205 for a content agent, such as the content agent 160 of fig. 1. The controls 205 may adjust whether and how the content agent performs and what actions the content agent performs. The user interface 200 may also include a collective usage parameter for the personalized entity library. The set usage parameters may include one or more of a maximum storage 210, a maximum number of sets 215, or a storage percentage 220. The maximum store 210 may set a limit on the amount of memory used by a personalized entity library, such as the personalized entity library 176 of fig. 1. The client device may download and store a fixed set of entities (fragments) but not exceeding the maximum storage 210.
The set usage parameters may also include a maximum set 215. The maximum set 215 limits the number of fixed entity sets that the client device will include in the personalized entity library. In other words, the client device may download and store only a certain number of sets. The storage percentage 220 may provide a flexible limit on the size of the personalized entity library. For example, when the client device has more memory, the store percentage 220 parameter may allow for a larger personalized entity library, but when space on the client device decreases, the parameter may limit the set stored in the personalized entity library. The user interface 200 may also enable a user to select combinations of collection usage parameters to turn collection usage parameters on or off, e.g., via a check box. Thus, the user can control the size of the library of personalized entities on their device, which in turn controls which segments are included in the library. User interface 200 may also include a control 225 that enables a user to specifically select one or more entity collections for inclusion in the personalized entity model. When the user specifically uses control 225 to select a segment of the entity library, the system can cause the relevance of the segment to be ranked high so that it is always included in the personalized entity model.
Fig. 3 illustrates an example display 300 that provides content for determining which sets of contexts are most relevant to a user of a computing device, in accordance with the disclosed embodiments. The display 300 may be a display of a mobile device or other computing device, such as the client device 150 of fig. 1. In the example of fig. 3, the text "Alien Invaders" is selected. The selection may be made by a user or may be made automatically by the client device (e.g., a content agent or an operations suggestion application running on the client device). The system has provided four suggested operations for selection 305, operation 340, which may be used for the mobile application providing local movie times, movie review operation 325, and movie database operation 320. The user interface may have selected operations 340,325 and 320 based on identifying the selection 305 as an entity that exists in the personalized entity library. Thus, the system may provide the display 300 even without a connection to a server and server-based entity library.
FIG. 4 illustrates an exemplary display of a user interface 400 for suggesting additional snippets for inclusion in a personalized entity library, according to disclosed embodiments. The user interface 400 may be generated on a mobile device or other computing device, such as the client device 150 of fig. 1. In the example of fig. 4, the user has entered text into the search interface 405. The search interface 405 may be for a browser or browser-like mobile application, but may be from any search bar in any application. The system may analyze the text provided to the search interface 405 and determine that the words are highly relevant to the topic-based set of fixed entities, e.g., via a set recognition engine using a set prediction model. High relevance may be determined based on high confidence scores or probabilities from the set prediction model. The high relevance may be based not only on the content of the user interface 400, but also on previously presented content. For example, a user may be viewing a hotel in hawaii in a reservation application, or may be reading content about what is seen in hawaii. Although the client device may not have an entity for hawaii in the current personalized entity library, the set prediction model may recognize several words or images that predict the set. In some embodiments, the set recognition engine may continuously analyze the relevant models for text. In some implementations, the collection identification engine can be invoked during use of the search interface.
When the probability of a fixed entity set indicates high relevance, the system can automatically download and store the fixed entity set of hawaii, also known as hawaii segments. In some implementations, this can be a location-based set for all entities located in Hawaii, or a topic-based set or a combination of these sets. In some implementations, the user interface can include a confirmation window 410. The confirmation window 410 may enable the user to accept or reject the suggestion. If the user rejects the suggestion, the system does not download the Hawaii snippet. If the user accepts the suggestion, the system may download Hawaii segments and may remove one or more segments currently in the personalized entity library to make room for new segments, as explained in more detail with reference to FIG. 7.
FIG. 5 illustrates another exemplary display of a user interface 500 for suggesting additional collections for inclusion in a personal entity library in accordance with the disclosed embodiments. The user interface 500 may be generated on a mobile device or other computing device, such as the client device 150 of fig. 1. In the example of fig. 5, the user has just installed the meal reservation application 505. In response to the installation process, the set identification engine may determine that the application 505 has explicitly requested a particular set of fixed entities or is likely to reference a particular fixed set, e.g., using a set prediction engine. Accordingly, the user may be presented with a confirmation window 510. Similar to confirmation window 410, confirmation window 510 may provide the user with an opportunity to select to download a particular segment or to decline to download. In some implementations, the application 505 can generate the window 510. In some implementations (not shown), an application installation process or set identification engine may automatically download a particular set of fixed entities.
FIG. 6 illustrates a flow chart of an exemplary process 600 for generating and updating a set of fixed entities, in accordance with the disclosed embodiments. Process 600 may be performed by a personalized entity library system, such as system 100 of fig. 1. The process 600 may be used to generate and maintain various segments of an entity library, i.e., a fixed set of entities. The entity library may be any large entity library, such as entity library 130 of FIG. 1. Process 600 may begin by generating a location-based set of entities (605). The set of location-based entities may be any entity in the entity pool that is located in a particular cell. A cell may be defined by a boundary (e.g., a line connecting three or more geographic coordinates). The cell may correspond to one or more geographic cells (e.g., cells defined by a mapping application). The system may also generate a topic-based set of fixed entities (610). Topic-based collections can be formed by clustering, by similarity or relationship to seed entities, by members of a collection, and the like. The system may also generate a set of functional entities (615). The set of functions can be a combination of a location-based set and a topic set, can be based on the usage of a particular application, can be based on popularity (i.e., the most frequently searched entities and/or those that appear in the most crawled documents), can be based on tasks or actions, and so forth. Steps 605 to 615 may be performed at an initial time and the set updated. For example, at an initial time, the system may perform steps 605 through 615 to generate an initial set of entities. The system may then perform steps 605 through 615 to update the initial set, add a new set, and so on.
The system may versify the fixed set of entities. For example, when the format of collections changes such that an application using those collections fails, the system may retain the old version and generate the new version after the schema changes. In this way, the system can handle the mode change in a manner that does not cause errors on the client device. Accordingly, the system may determine whether the newly generated set includes a mode change (620). If so, a new version identifier may be assigned (625) to the newly generated set (e.g., from steps 605 to 615). The version identifier will enable the application using these sets to download and use the appropriate version correctly. When the update involves a mode change, no incremental set is needed. If there are no mode changes (No at 620), the system may generate deltas for each set (630). Deltas are used when a client device only downloads changes to a set of fixed entities, rather than deleting all fixed sets in the personalized entity model after storing the most recent set of the highest ranked set of fixed entities for that device. The delta may be a list of entities to be deleted and a list of entities to be added. Thus, an update to an entity (e.g., a name change, a metadata or attribute change, etc.) may be to delete the entity after reading the entity. The deltas enable the system to transfer less data between the server that maintains the collection and the client device that uses the collection. However, step 630 is optional and may not be performed for all sets or even for any set. For example, when updating the personalized entity library, the client device may delete all currently stored segments and extract the desired segments (e.g., predicted segments that fall within the aggregate usage parameters) and store them as the personalized entity model. Each fixed entity set may have a unique identifier. In some implementations, the unique identifier can be a hash of the content of the fixed set. The process 600 then ends. Process 600 may be repeated periodically to ensure that the fixed set of entities is up-to-date.
FIG. 7 illustrates a flow chart of an exemplary process 700 for building a personal entity library using a pre-computed set of entities, in accordance with the disclosed embodiments. Process 700 may be performed by a personalized entity library system, such as system 100 of fig. 1. Process 700 may be performed on a client device to determine which fixed entity sets or segments are included in a personalized entity library stored on the client device. The client device performs process 700 continuously, on a periodic basis, upon a change in network connectivity, upon a triggering event (such as installing a new application, incoming call, adding a new contact, etc.), or upon a user request for synchronization. Process 700 may be performed by a set identification engine, such as set identification engine 162.
The system may then rank the identified fixed entity sets by relevance (710). The correlation may be based on probability scores provided by the aggregated predictive models. In some implementations, the system can adjust the probability based on other information (such as the location of the device, the time of day, other devices nearby, etc.). For example, if two travel companions have linked their devices, the first companions device may determine, e.g., via device-to-device signaling, that the second companions device has a particular fragment of the stored entity library, and the first companions device may degrade the relevance of that fragment, e.g., because one of the two devices already owns the fragment of the entity library stored in the personalized entity library. As another example, a user's device may have a particular application that requires a particular segment of an entity library, and the system may improve the relevance of that particular segment. As another example, the system may increase the relevance of the segment specified by the user, e.g., via control 225 of FIG. 2. For a fixed set of entities based on location, the system may set a relevance score for the set based on the distance of the client device from the cell represented by the set. For example, when a client device is located within a cell, the correlation is very high. The correlation of other cells may be based on the distance between the center of the cell and the current location of the client device, such that longer distances result in lower correlations.
The system may determine a selected set for the personalized entity library based on the set usage parameters and the ranking (715). In some implementations, the system can determine the relevance threshold based on the set usage parameter and a ranking of a set of fixed entities identified as relevant to the user. Any set having a relevance score that meets a threshold may be included in the set selected for the personalized entity library. FIG. 9 is another example of selection of a set based on set usage parameters and rankings. The system may then determine whether the personalized entity library needs to be updated (720). For example, if the selected set of fixed entities is the same as the set currently included in the personalized entities library, but the system has not recently checked for updates, the system may update the library (yes at 720). As another example, if the system has been told to update one of the fixed sets in the selected set, the system may update the library (Yes at 720). If the fixed entity set is in the selected set but not currently in the personalized entity library, the system may update the library (720 is yes). If the system does not need to update the library (720 is no), process 700 ends.
If the system does update the library (yes at 720), the system may select the highest ranked set of the selected sets (725). For ease of explanation, this highest ranked set may be referred to as a first set. The system may determine whether the first set is already in the personalized entity library (730). In the case where the first set is in the library (730 YES), the system may update the first set on the client device if an update is needed (735). The system may determine whether an update is needed by dragging the first set from the server or by the server notifying that an update exists. The updates may be in the form of deltas, such as a list of entities to be deleted and a list of entities to be added to the fixed group. In the event that the first collection is not in the personalized entity library (730 no), then the system may determine whether the personal entity library has space for the first collection (740). For example, the personal entity library may have limitations with respect to the number of collections in the library or the memory used by the library, or both. If adding the first set would exceed the limit (740, no), the system may determine whether there is currently a fixed set in the personalized entity library that can be deleted (745). If the set currently in the personalized entity library is not in the selected set of fixed entities, i.e., the set of entities identified in step 715, then the set may be deleted. A collection may also be deleted if it has a lower rank than the first collection. If there is a collection to delete 745 yes, the system may delete the collection from the personalized entity library 750 and return to 740. If no sets can be deleted (745 is no), process 700 may end.
When there is space for the first set in the personalized entity library (yes at 740), the system may add the first set to the personalized entity library on the mobile device (755). The system may then determine whether there is a next highest ranked set in the selected set (760). If there is a next highest set (760 YES), the system may perform steps 725 to 760 for the next set. Then, for ease of illustration, this next set will become the first set. Thus, for example, the system may determine whether the next set (i.e., the now first set) is already in the personalized entity library (730), and so on. When all of the selected sets have been processed via steps 730 through 760 (760 NO), the system has updated the personalized entity library and process 700 ends.
FIG. 8 illustrates a flow chart of an exemplary process 800 for identifying a set of fixed entities associated with a user of a client device in accordance with the disclosed embodiments. Process 800 may be performed by a personalized entity library system, such as system 100 of fig. 1. As part of step 705 of fig. 7, process 800 may be performed on a client device to determine which fixed entity sets or segments are relevant to a user. Process 800 begins by determining the location of a client device (805). The location may be represented as coordinates, such as Global Positioning System (GPS) coordinates, or as an identifier of a geographic cell, or some other method of representing a location on earth. The system may assign a relevance of a set of location-based fixed entities based on a distance from the client device to a cell represented by the set of location-based fixed entities (810). The distance may be measured from the location of the client device to the center of the cell. The correlation may also be inversely related to distance, so shorter distances have higher correlation. The particular set of fixed entities may receive the highest relevance score when the client device is located in a cell for the particular set of fixed entities.
The system may also determine a topic-based set of fixed entities relevant to the user (815). The topic-based set may be determined using a set prediction model (such as set prediction model 164 or set prediction model 122) that provides one or more identifiers for a fixed set of entities based on feature prediction. The features may be based on a number of items of information, such as the location of the device, content in a search record, user profile or screen capture content, data from devices proximate to the client device, e.g., data of the device that is exchanging data with the client device, a timestamp, an application that is currently installed or executing, etc. The system may set the relevance score of each topic-based set of fixed entities to an embedded similarity with the user of the client device (820). In some implementations, the similarity can be a probability associated with a fixed set provided by a set prediction model. The system may also determine a set of functional fixed entities (825). The set of functions may be entities deemed most popular, e.g., entities most frequently searched, entities most frequently accessed, entities often found in crawled documents, etc. The set of functions may also include entities for a particular task, action, or application. For example, the set of functions can include an entity or the like that enables the device to perform OCR in a particular language or for use by an art appreciation application. The set of functions may also include a combination of location-based and theme-based sets, such as movie theaters in Oregon, Portland or national monuments in Washington, D.C.. In some implementations, the system can use entity popularity as a relevance score for a set of functionally-fixed entities. In some implementations, the fixed set is ranked based on the applications that the user has installed. The process 800 then ends, having identified fixed entity sets that are relevant to the user of the computing device and assigned a relevance score to each set.
FIG. 9 illustrates a flow diagram of an exemplary process 900 for selecting a set of fixed entities from a set of fixed entities relevant to a user of a client device based on a set usage parameter in accordance with the disclosed embodiments. Process 900 may be performed by a personalized entity library system, such as system 100 of fig. 1. Process 900 may be performed on a client device as part of step 715 of fig. 7 to determine which fixed entity collections or segments related to a user to select for inclusion in a personal entity library the user-related entities or segments based on collection usage parameters and rankings. The process 900 begins by initializing set counts and model size variables. The set count may be set to zero and the bin size may also be set to zero. The system may then select the fixed set with the highest rank from the fixed sets identified as relevant (910). The system may determine whether the set usage parameters include a quantity parameter (915). The quantity parameter is the maximum set 215 of FIG. 2 and represents a limit on the number of fixed sets that can be in the personalized entity library. If there is a quantity parameter (915 is yes), the system may increment the collection count by 1 (920). The system may then determine if the set count is greater than the quantity parameter (925). If so, the process 900 may end because the fixed set would exceed the limit indicated by the set usage parameter. However, for the highest ranked set, the set count is not greater than the quantity parameter (NO of 925), so the system continues with step 930.
The system determines whether the set usage parameters include spatial parameters (930). The space parameter may be expressed as a specified amount of memory (e.g., maximum storage 210 of fig. 2) or a percentage of available memory (e.g., storage percentage 220 of fig. 2), or a combination of these. If the set usage parameters do include spatial parameters (yes at 930), the system may add the size of the fixed set being examined to the library size (953). For example, the size may be known or estimated based on the average size of a fixed set of entities. The system may determine whether the bin size is greater than the spatial parameter (940). If so (yes at 940), then process 900 ends because the fixed set will violate the restrictions determined by the set usage parameters. Otherwise (no at 940), the system advertises the set to the selected set (945). The selected set is the highest ranked fixed set determined to be relevant to the user and satisfying the constraints determined by the set usage parameters. If there is another set in the identified set (e.g., a fixed set identified as relevant to the user), 950, yes, the system may select the next highest ranked set (955) and continue with steps 915 through 950 described above. If no other sets exist in the identified set (950 NO), then the process 900 ends and the sets included in the library are identified based on the set usage parameters.
Fig. 10 illustrates a general computer device 1000, which can operate as an example of the server 110 and/or client device 150 of fig. 1, which can be used with the techniques described herein. Computing device 1000 is intended to represent various example forms of computing devices, such as laptops, desktops, workstations, personal digital assistants, cellular telephones, smartphones, tablets, servers, and other computing devices, including wearable devices. The components shown herein, their connections and relationships, and their functions, are meant to be exemplary only, and are not meant to limit implementations of the inventions described and/or claimed herein.
The processor 1002 can process instructions for execution within the computing device 1000, including instructions stored in the memory 1004 or on the storage device 1006 to display graphical information for a GUI on an external input/output device, such as display 1016. Display 1016 may be a monitor or a flat touch screen display. In some embodiments, multiple processors and/or multiple buses may be used, as appropriate, along with multiple memories and types of memory. In addition, multiple computing devices 100 may be connected, with each device providing portions of the necessary operations (e.g., as a server bank, a group of blade servers, or a multi-processor system).
The storage device 1006 can provide mass storage for the computing device 1000. In one implementation, the storage device 1006 may be or include a computer-readable medium, such as a floppy disk device, a hard disk device, an optical disk device, or a tape device, a flash memory or other similar solid state memory device, or an array of devices including devices in a storage area network or other configurations. The computer program product can be tangibly embodied in such a computer-readable medium. The computer program product may also include instructions that, when executed, implement one or more methods, such as those described above. The computer-or machine-readable medium is a storage device such as the memory 1004, the storage device 1006, or a storage device on the processor 1002.
Interface 1008 may be a high-speed controller that manages bandwidth-intensive operations for computing device 1000, or a low-speed controller that manages lower bandwidth-intensive operations, or a combination of such controllers. External interface 1040 may be provided to enable proximity communication of device 1000 with other devices. In some implementations, the controller 1008 may be coupled to the storage device 1006 and the expansion port 1014. The expansion port, which may include various communication ports (e.g., USB, bluetooth, ethernet, wireless ethernet) may be coupled to one or more input/output devices, such as keyboards, pointing devices, scanners, or networking devices such as switches and routers, for example, through a network adapter.
As shown, the computing device 1000 may be implemented in a variety of different forms. For example, it may be implemented as a standard server 1030, or multiple times in a group of such servers. It may also be implemented as part of a rack server system. Further, it may be implemented in a computing device such as a laptop computer 1032, personal computer 1034, or tablet computer/smartphone 1036. An entire system may be made up of multiple computing devices 1000 in communication with each other. Other configurations are possible.
FIG. 11 illustrates a general computer device 1100, which can be an example of the server 110 of FIG. 1, which can be used with the techniques described herein. Computing device 1100 is intended to represent various exemplary forms of large data processing devices, such as servers, blade servers, data centers, mainframes, and other large computing devices. The computing device 1100 may be a distributed system with multiple processors, possibly including network attached storage nodes interconnected by one or more communication networks. The components shown herein, their connections and relationships, and their functions, are meant to be exemplary only, and are not meant to limit embodiments of the inventions described and/or claimed in this document.
The distributed computing system 1100 may include any number of computing devices 1180. Computing device 1180 may include a server or a rack server, a mainframe, etc. that communicates over a local or wide area network, dedicated optical link, modem, bridge, router, switch, wired or wireless network, etc.
In some implementations, each computing device can include multiple racks. For example, computing device 1180a includes multiple racks 1158a-1158 n. Each rack may include one or more processors, such as processors 1152a-1152n and 1162a-1162 n. The processor may include a data processor, a network attached storage device, and other computer controlled devices. In some embodiments, one processor may operate as a master processor and control scheduling and data distribution tasks. The processors may be interconnected through one or more rack switches 1158, and one or more racks may be connected through a switch 1178. Switch 1178 may handle communications between multiple connected computing devices 1100.
Each chassis may include memory such as memory 1154 and memory 1164, as well as storage such as 1156 and 1166. Storage 1156 and 1166 may provide mass storage and may include volatile or non-volatile storage such as a network attached magnetic disk, floppy disk, hard disk, optical disk, magnetic tape, flash memory or other similar solid state memory device, or an array of devices including a storage area network or other configured devices. Storage 1156 or 1166 may be shared among multiple processors, multiple racks, or multiple computing devices and may include a computer-readable medium storing instructions executable by one or more processors. The memories 1154 and 1164 may include, for example, one or more volatile memory units, one or more non-volatile memory units, and/or other forms of computer-readable media such as magnetic or optical disks, flash memory, cache memory, Random Access Memory (RAM), Read Only Memory (ROM), and combinations thereof. Memory, such as memory 1154, may also be shared among the processors 1152a-1152 n. Data structures such as indexes may be stored across storage 1156 and memory 1154, for example. Computing device 1100 may include other components not shown, such as controllers, buses, input/output devices, communication modules, and so forth.
An overall system, such as server 110, may be made up of multiple computing devices 1100 in communication with each other. For example, device 1180a may communicate with devices 1180b, 1180c, and 1180d, and these devices may be collectively referred to as server 110. As another example, the system 100 of fig. 1 can include one or more computing devices 1100. Some computing devices may be geographically close to each other, while other computing devices may be geographically remote. The layout of system 1100 is merely exemplary, and the system may take on other layouts or configurations.
According to certain aspects of the present disclosure, a mobile device includes a display device, a personalized entity library stored in memory, the personalized entity library including a plurality of fixed entity sets from an entity library stored at a server, wherein each fixed set has a respective identifier and includes information about an entity in the set, at least one processor, and memory storing instructions that, when executed by the at least one processor, cause the mobile device to perform operations. The operations include identifying a fixed set of entity libraries relevant to a user of the mobile device based on a context associated with the mobile device, ranking the fixed set by relevance, determining a selected set from the identified fixed set using the ranking and a set usage parameter appropriate for the user, and updating a personalized entity library using the selected set.
This and other aspects can include one or more of the following features. For example, updating the personalized entity library may occur in response to determining that a first fixed set of the identified fixed sets does not exist in the personalized entity library. As another example, updating the personalized entity library may include removing collections in the personalized entity library that are not the selected collection. As another example, the collection usage parameters may include the number of fixed collections and/or the amount of memory allocated to the personalized entity library, which is set by the user. As another example, the plurality of fixed sets stored in the personalized entity library may comprise a set of locations, wherein entities in the set of locations are located in the same cell. As another example, the plurality of fixed sets stored in the personalized entity library comprise a topic set, wherein entities in the topic set are entities clustered together based on entity characteristics. In some implementations, the ranking of the first topic set is a ranking assigned by the predictive model based on items identified in content generated for display on the display device. As another example, updating the personalized entity library may include adding a fixed set not currently present in the personalized entity library and using deltas of the fixed set present in the personalized entity library.
As another example, the operations may also include using the personalized entity library to identify entities in content generated for display on the display device. As another example, each of the plurality of sets has a version identifier that changes when updates to a particular set disrupt the schema of the personalized entity library. As another example, the operations may further include initiating display of information identifying a first fixed set from the selected set, and a control configured to enable the user to accept installation of the first fixed set, and download the first fixed set and add the first fixed set to the personalized entity library when the user accepts the installation. As another example, identifying a fixed set of entity libraries relevant to the user based on context may include determining a location of the mobile device and using the location to determine a location-based fixed set relevant to the user, identifying a topic-based set relevant to the user using a set prediction model, and determining a set identified by at least one application installed on the mobile device. As another example, identifying a fixed set of entity libraries relevant to the user based on context may include determining previously viewed content on the mobile device and providing the previously viewed content to a set prediction model configured to predict at least one topic-based set from the previously viewed content and/or determining a recent search conducted on the mobile device and providing content from the recent search to a set prediction model configured to predict the at least one topic-based set from the content. As another example, identifying a fixed set of entity libraries relevant to a user based on context may include determining an activity performed by a user of a mobile device and predicting a fixed set of entities based on the activity.
According to certain aspects of the present disclosure, a method comprises: receiving a screen capture image configured to display content on a display of a mobile device, determining text in the image by performing text recognition on the image, providing the text to a set prediction model, wherein the set prediction model is trained to predict one or more fixed entity sets; and storing at least one of the predicted fixed entity sets in the personalized entity library in memory on the mobile device.
These and other aspects can include one or more of the following features. For example, the method may also identify entities in the screen capture image using the personalized entity library. The method may further include determining a location associated with the recognized content in the screen capture image; providing the location to the set prediction model, which predicts at least one location-based set of fixed entities based on the location; and storing the location-based set of fixed entities in the personalized entity library. As another example, the predictive model may predict a plurality of predicted sets of fixed entities, and the method further comprises ranking each of the predicted sets of fixed entities; determining a selected set of fixed entities from the predicted set of fixed entities using a set usage parameter and the ranking; and storing the selected fixed entity set in the personalized entity library.
According to certain aspects of the present disclosure, a method may include generating a plurality of fixed entity sets from an entity library. The fixed sets include location-based sets, each location-based set including entities from the entity library having locations located within cells associated with the set, and topic-based sets, at least some of which include entities from the entity library that are related to each other via embedding similarity. The method may also include providing a subset of the fixed set of entities to a client device, the client device requesting the subset based on a location of the client device and based on the identified item identified in content generated for display on the client device.
These and other aspects can include one or more of the following features. For example, the method may further include identifying at least one entity added to the entity library; determining at least one fixed set to which the added entity belongs; and generating a delta for at least one fixed set including the added entity. As another example, the method may further include identifying at least one entity added to the entity library; determining at least one fixed set to which the added entity belongs; determining that a mode of the fixed set has changed; and generating a new version of the at least one fixed set, the new version including the added entity and having a new version identifier. As another example, at least some of the topic-based collections may include entities similar to seed entities and/or the fixed collections may further include a set of functions, at least one of which includes entities deemed most popular.
Various embodiments may include implementation in one or more computer programs that are executable and/or interpretable on a programmable system including at least one programmable processor, which may be special or general purpose, coupled to receive data and instructions from, and to transmit data and instructions to, a storage system, at least one input device, and at least one output device.
These computer programs (also known as programs, software applications or code) include machine instructions for a programmable processor, and can be implemented in a high-level procedural and/or object-oriented programming language, and/or in assembly/machine language. As used herein, the terms "machine-readable medium," "computer-readable medium" refer to any non-transitory computer program product, apparatus and/or device (e.g., magnetic discs, optical disks, memory (including read-access memory), Programmable Logic Devices (PLDs)) used to provide machine instructions and/or data to a programmable processor.
The systems and techniques described here can be implemented in a computing system that includes a back-end component (e.g., as a data server), or that includes a middleware component (e.g., an application server), or that includes a front-end component (e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the systems and techniques described here), or any combination of such back-end, middleware, or front-end components. The components of the system can be interconnected by any form or medium of digital data communication (e.g., a communication network). Examples of communication networks include a local area network ("LAN"), a wide area network ("WAN"), and the internet.
The computing system may include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.
Various embodiments have been described. Nevertheless, various modifications may be made without departing from the scope of the invention as defined by the following claims. Further, the logic flows illustrated in the figures do not require the particular order shown, or sequential order, to achieve desirable results. In addition, other steps may be provided, or steps may be deleted from the streams, and other components may be added or removed from the systems. Accordingly, other implementations are within the scope of the following claims.
Claims (23)
1. A method implemented by one or more processors, the method comprising:
receiving a screen capture image that captures content displayed on a display of a mobile device;
determining text in the screen capture image by performing text recognition on the screen capture image;
processing the text using a trained set prediction model to predict one or more fixed entity sets based on the text;
storing at least one of the predicted sets of fixed entities in a personalized entity library in memory on the mobile device; and
after storing the at least one fixed set of entities:
using the stored at least one fixed set of entities to identify entities in additional screen capture images captured at the mobile device; and
rendering, at the mobile device, content based on the identified entity.
2. The method of claim 1, further comprising:
determining a location associated with content identified in the further screen capture image;
processing the location using the trained set prediction model to predict at least one location-based set of fixed entities based on the location; and
storing the at least one location-based fixed entity collection in the personalized entity library.
3. The method of claim 2, further comprising:
using the stored at least one set of location-based fixed entities to identify a location-based entity based on data captured at the mobile device; and
rendering, at the mobile device, further content based on the identified location-based entity.
4. The method of claim 1, wherein the trained set prediction model predicts a plurality of predicted fixed entity sets, and the method further comprises:
ranking each of the predicted fixed entity sets;
determining a selected set of fixed entities from the predicted set of fixed entities using set usage parameters and rankings, the selected set of fixed entities comprising the at least one set of fixed entities; and
storing the selected fixed entity set in the personalized entity library.
5. The method of claim 4, wherein the set usage parameter comprises a number of fixed sets.
6. The method of claim 4, wherein the set usage parameters include an amount of memory allocated to the personalized entity library.
7. A mobile device, comprising:
a display device;
a personalized entity library stored in memory, the personalized entity library comprising a plurality of fixed entity sets from an entity library stored at a server, wherein each fixed entity set has a respective identifier and includes information about entities in the set;
at least one processor; and
a memory storing instructions that, when executed by the at least one processor, cause the mobile device to:
capturing a screen capture image that captures content displayed on the display device;
causing text in the screen capture image to be processed using a trained set prediction model to predict one or more fixed entity sets based on the text;
storing at least one of the predicted fixed entity sets in a personalized entity library stored in memory on the mobile device; and
after storing the at least one fixed set of entities:
using the stored at least one fixed set of entities to identify entities in additional screen capture images captured at the mobile device; and
rendering, via the display device, content based on the identified entity.
8. The mobile device of claim 7, the memory further storing instructions that, when executed by the at least one processor, cause the mobile device to:
determining a location associated with content identified in the further screen capture image;
causing a location determined via data captured at the mobile device to be processed using the trained set prediction model to predict at least one set of location-based fixed entities based on the location; and
storing the at least one location-based fixed entity set in the personalized entity library stored in memory on the mobile device.
9. The mobile device of claim 8, the memory further storing instructions that, when executed by the at least one processor, cause the mobile device to:
using the stored at least one set of location-based fixed entities to identify a location-based entity based on further data captured at the mobile device; and
rendering, via the display device, further content based on the identified location-based entity.
10. The mobile device of claim 7, wherein the trained set prediction model predicts a plurality of predicted fixed entity sets, ranks each of the predicted fixed entity sets, and determines a selected fixed entity set from the predicted fixed entity sets using set usage parameters and the rankings, wherein the selected fixed entity set comprises the at least one fixed entity set.
11. The mobile device of claim 10, wherein the set usage parameter comprises a number of fixed sets.
12. The mobile device of claim 10, wherein the set usage parameter comprises an amount of memory allocated to the personalized entity library.
13. A method implemented by one or more processors, the method comprising:
receiving a screen capture image that captures content displayed on a display of a mobile device;
processing the screen capture image to determine a location associated with content displayed in the screen capture image;
processing the location using a trained set prediction model to predict one or more fixed entity sets based on the location;
storing at least one of the predicted fixed entity sets in a personalized entity library in memory on the mobile device; and
after storing the at least one fixed set of entities:
using the stored at least one fixed set of entities to identify entities in additional screen capture images captured at the mobile device; and
rendering, at the mobile device, content based on the identified entity.
14. The method of claim 13, wherein the trained set prediction model predicts a plurality of predicted fixed entity sets, and the method further comprises:
ranking each of the predicted set of fixed entities;
determining a selected set of fixed entities from the predicted set of fixed entities using set usage parameters and rankings, the selected set of fixed entities comprising the at least one set of fixed entities; and
storing the selected fixed entity set in the personalized entity library.
15. The method of claim 14, wherein the set usage parameter comprises a fixed number of sets.
16. The method of claim 15, wherein the set usage parameters include an amount of memory allocated to the personalized entity library.
17. The method of claim 14, wherein the set usage parameters include an amount of memory allocated to the personalized entity library.
18. A method implemented by one or more processors, the method comprising:
determining that each of a plurality of user interactions via a user device is relevant to a particular location;
determining a confidence score for a set of location-based entities for the particular location based on the plurality of user interactions that are each related to the particular location;
in response to the confidence score for the set of location-based entities satisfying a threshold:
causing an interaction prompt related to the set of location-based entities to be rendered at the user device;
in response to accepting the user interaction with the interaction prompt at the user device:
causing the user device to download the set of location-based entities, the set of location-based entities being within a geographic boundary defined for the particular location; and
in response to rejection of the user interaction with the interaction prompt at the user device:
refraining from causing the user equipment to download the set of location-based entities.
19. The method of claim 18, further comprising:
after causing the user device to download the set of location-based entities:
identifying additional user interactions via the user device related to an application currently running on the user device;
determining that the additional user interaction is associated with at least one entity from the set of location-based entities;
based on determining that the additional user interaction is associated with at least one entity from the set of location-based entities, selecting one or more actions for suggestion to a user of the user device; and
causing the user device to display one or more suggested actions based on the selected one or more actions.
20. The method of claim 19, wherein the one or more suggested actions displayed are each associated with an application different from an application related to the additional user interaction.
21. The method of claim 19, wherein each of the one or more suggested actions is associated with at least one additional entity from the set of location-based entities.
22. The method of claim 18, wherein determining that each of the plurality of user interactions via the user device is relevant to the particular location comprises:
determining a particular location of the user device during the plurality of user interactions.
23. The method of claim 22, wherein determining a confidence score for a set of location-based entities for the particular location based on the plurality of user interactions each related to the particular location comprises:
identifying, based on the identified particular location, a plurality of location-based fixed entity sets from a plurality of location-based fixed entity sets associated with the particular location;
identifying the set of location-based fixed entities from the identified plurality of sets of location-based fixed entities using a set prediction model as a set of location-based fixed entities that is most relevant to the user; and
determining a confidence score for the location-based set of entities for the particular location.
Applications Claiming Priority (6)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US201562245241P | 2015-10-22 | 2015-10-22 | |
US62/245,241 | 2015-10-22 | ||
US14/962,415 | 2015-12-08 | ||
US14/962,415 US10178527B2 (en) | 2015-10-22 | 2015-12-08 | Personalized entity repository |
PCT/US2016/057473 WO2017070079A1 (en) | 2015-10-22 | 2016-10-18 | Personalized entity repository |
CN201680061369.0A CN108463817B (en) | 2015-10-22 | 2016-10-18 | Personalized entity library |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201680061369.0A Division CN108463817B (en) | 2015-10-22 | 2016-10-18 | Personalized entity library |
Publications (1)
Publication Number | Publication Date |
---|---|
CN114780737A true CN114780737A (en) | 2022-07-22 |
Family
ID=58557676
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201680061369.0A Active CN108463817B (en) | 2015-10-22 | 2016-10-18 | Personalized entity library |
CN202210324906.3A Pending CN114780737A (en) | 2015-10-22 | 2016-10-18 | Personalized entity library |
Family Applications Before (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201680061369.0A Active CN108463817B (en) | 2015-10-22 | 2016-10-18 | Personalized entity library |
Country Status (9)
Country | Link |
---|---|
US (4) | US10178527B2 (en) |
EP (1) | EP3347835B1 (en) |
JP (1) | JP6655180B2 (en) |
KR (1) | KR102077289B1 (en) |
CN (2) | CN108463817B (en) |
DE (1) | DE112016004859T5 (en) |
GB (1) | GB2558472A (en) |
RU (1) | RU2696225C1 (en) |
WO (1) | WO2017070079A1 (en) |
Families Citing this family (22)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9916328B1 (en) | 2014-07-11 | 2018-03-13 | Google Llc | Providing user assistance from interaction understanding |
US9965559B2 (en) | 2014-08-21 | 2018-05-08 | Google Llc | Providing automatic actions for mobile onscreen content |
US10970646B2 (en) | 2015-10-01 | 2021-04-06 | Google Llc | Action suggestions for user-selected content |
US10055390B2 (en) | 2015-11-18 | 2018-08-21 | Google Llc | Simulated hyperlinks on a mobile device based on user intent and a centered selection of text |
US10007867B2 (en) * | 2016-04-04 | 2018-06-26 | Google Llc | Systems and methods for identifying entities directly from imagery |
US10535005B1 (en) | 2016-10-26 | 2020-01-14 | Google Llc | Providing contextual actions for mobile onscreen content |
US11237696B2 (en) | 2016-12-19 | 2022-02-01 | Google Llc | Smart assist for repeated actions |
US10902444B2 (en) * | 2017-01-12 | 2021-01-26 | Microsoft Technology Licensing, Llc | Computer application market clusters for application searching |
US11429833B2 (en) * | 2017-06-19 | 2022-08-30 | Kyndryl, Inc. | Cognitive communication assistant services |
US20190026473A1 (en) * | 2017-07-21 | 2019-01-24 | Pearson Education, Inc. | System and method for automated feature-based alert triggering |
US10867128B2 (en) | 2017-09-12 | 2020-12-15 | Microsoft Technology Licensing, Llc | Intelligently updating a collaboration site or template |
US10742500B2 (en) * | 2017-09-20 | 2020-08-11 | Microsoft Technology Licensing, Llc | Iteratively updating a collaboration site or template |
US10691734B2 (en) | 2017-11-21 | 2020-06-23 | International Business Machines Corporation | Searching multilingual documents based on document structure extraction |
US10817313B2 (en) * | 2018-02-23 | 2020-10-27 | Adobe Inc. | Machine learning techniques for adaptation of initial workspace |
US10635979B2 (en) * | 2018-07-20 | 2020-04-28 | Google Llc | Category learning neural networks |
KR102055920B1 (en) * | 2018-12-19 | 2019-12-13 | (주)린치핀 | Method and system for providing online parts book service |
TWI712977B (en) * | 2019-03-28 | 2020-12-11 | 第一商業銀行股份有限公司 | Active Solicitation System |
CN111431968B (en) * | 2020-02-26 | 2021-09-21 | 华为技术有限公司 | Cross-device distribution method of service elements, terminal device and storage medium |
CN113204967B (en) * | 2021-05-25 | 2022-06-21 | 山东师范大学 | Resume named entity identification method and system |
US11709691B2 (en) * | 2021-09-01 | 2023-07-25 | Sap Se | Software user assistance through image processing |
US11928161B2 (en) * | 2022-03-04 | 2024-03-12 | Humane, Inc. | Structuring and presenting event data for use with wearable multimedia devices |
US20230325818A1 (en) * | 2022-04-08 | 2023-10-12 | Capital One Services, Llc | Methods and systems for binding entity-restricted access tokens |
Family Cites Families (152)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
KR100348915B1 (en) | 1994-05-12 | 2002-12-26 | 마이크로소프트 코포레이션 | TV program selection method and system |
US5946647A (en) | 1996-02-01 | 1999-08-31 | Apple Computer, Inc. | System and method for performing an action on a structure in computer-generated data |
US6662226B1 (en) | 2000-01-27 | 2003-12-09 | Inbit, Inc. | Method and system for activating and capturing screen displays associated with predetermined user interface events |
US8224776B1 (en) | 2000-07-26 | 2012-07-17 | Kdl Scan Designs Llc | Method and system for hosting entity-specific photo-sharing websites for entity-specific digital cameras |
EP1370992A2 (en) | 2000-10-18 | 2003-12-17 | Chipworks | Design analysis workstation for analyzing integrated circuits |
AU2002223811B8 (en) * | 2000-11-20 | 2007-10-18 | British Telecommunications Public Limited Company | Method of managing resources |
CA2481080C (en) | 2002-04-05 | 2010-10-12 | At&T Corp. | Method and system for detecting and extracting named entities from spontaneous communications |
US7421153B1 (en) | 2002-04-05 | 2008-09-02 | Bank Of America Corporation | Image and data processing system |
US7054917B1 (en) | 2002-08-07 | 2006-05-30 | Propel Software Corporation | Method for accelerating delivery of content in a computer network |
US7376696B2 (en) | 2002-08-27 | 2008-05-20 | Intel Corporation | User interface to facilitate exchanging files among processor-based devices |
US20050083413A1 (en) | 2003-10-20 | 2005-04-21 | Logicalis | Method, system, apparatus, and machine-readable medium for use in connection with a server that uses images or audio for initiating remote function calls |
US8151280B2 (en) * | 2003-10-27 | 2012-04-03 | Microsoft Corporation | Simple and dynamic configuration of network devices |
US20080235018A1 (en) | 2004-01-20 | 2008-09-25 | Koninklikke Philips Electronic,N.V. | Method and System for Determing the Topic of a Conversation and Locating and Presenting Related Content |
US7707039B2 (en) | 2004-02-15 | 2010-04-27 | Exbiblio B.V. | Automatic modification of web pages |
US7536382B2 (en) | 2004-03-31 | 2009-05-19 | Google Inc. | Query rewriting with entity detection |
US7639387B2 (en) | 2005-08-23 | 2009-12-29 | Ricoh Co., Ltd. | Authoring tools using a mixed media environment |
US8745483B2 (en) | 2004-10-07 | 2014-06-03 | International Business Machines Corporation | Methods, systems and computer program products for facilitating visualization of interrelationships in a spreadsheet |
US8812551B2 (en) | 2004-11-18 | 2014-08-19 | International Business Machines Corporation | Client-side manipulation of tables |
US7702611B2 (en) | 2005-01-07 | 2010-04-20 | Xerox Corporation | Method for automatically performing conceptual highlighting in electronic text |
KR101046485B1 (en) * | 2005-02-28 | 2011-07-04 | 가부시끼가이샤 판다네트 | Go game system |
US7702128B2 (en) | 2005-03-03 | 2010-04-20 | Cssn Inc. Card Scanning Solutions | System and method for scanning a business card from within a contacts address book and directly inserting into the address book database |
US7809722B2 (en) | 2005-05-09 | 2010-10-05 | Like.Com | System and method for enabling search and retrieval from image files based on recognized information |
US20070008321A1 (en) | 2005-07-11 | 2007-01-11 | Eastman Kodak Company | Identifying collection images with special events |
US7548915B2 (en) | 2005-09-14 | 2009-06-16 | Jorey Ramer | Contextual mobile content placement on a mobile communication facility |
US7752209B2 (en) | 2005-09-14 | 2010-07-06 | Jumptap, Inc. | Presenting sponsored content on a mobile communication facility |
US7933897B2 (en) | 2005-10-12 | 2011-04-26 | Google Inc. | Entity display priority in a distributed geographic information system |
US7822759B2 (en) | 2005-12-13 | 2010-10-26 | Microsoft Corporation | Query-driven sharing and syndication |
US20070168379A1 (en) | 2006-01-17 | 2007-07-19 | Patel Sushma B | Method and apparatus for cataloging screen shots of a program |
WO2007146298A2 (en) * | 2006-06-12 | 2007-12-21 | Metacarta, Inc. | Systems and methods for hierarchical organization and presentation of geographic search results |
CN101075236A (en) | 2006-06-12 | 2007-11-21 | 腾讯科技（深圳）有限公司 | Apparatus and method for accelerating browser webpage display |
US8347237B2 (en) | 2006-06-27 | 2013-01-01 | Palo Alto Research Center Incorporated | Method, apparatus, and program product for efficiently detecting relationships in a comprehension state of a collection of information |
US7917514B2 (en) | 2006-06-28 | 2011-03-29 | Microsoft Corporation | Visual and multi-dimensional search |
US8489987B2 (en) | 2006-07-31 | 2013-07-16 | Ricoh Co., Ltd. | Monitoring and analyzing creation and usage of visual content using image and hotspot interaction |
US20080046175A1 (en) * | 2006-07-31 | 2008-02-21 | Nissan Technical Center North America, Inc. | Vehicle navigation system |
CN101201827B (en) | 2006-12-14 | 2013-02-20 | 阿里巴巴集团控股有限公司 | Method and system for displaying web page |
US8671341B1 (en) | 2007-01-05 | 2014-03-11 | Linguastat, Inc. | Systems and methods for identifying claims associated with electronic text |
KR101370895B1 (en) | 2007-01-19 | 2014-03-10 | 엘지전자 주식회사 | Method for displaying contents and terminal using the same |
US8869191B2 (en) | 2007-01-23 | 2014-10-21 | Cox Communications, Inc. | Providing a media guide including parental information |
US8214367B2 (en) | 2007-02-27 | 2012-07-03 | The Trustees Of Columbia University In The City Of New York | Systems, methods, means, and media for recording, searching, and outputting display information |
US20080275701A1 (en) | 2007-04-25 | 2008-11-06 | Xiaotao Wu | System and method for retrieving data based on topics of conversation |
WO2008137160A1 (en) | 2007-05-07 | 2008-11-13 | Biap, Inc. | Providing personalized resources on-demand over a broadband network to consumer device applications |
US8688089B2 (en) * | 2007-06-26 | 2014-04-01 | Gosub 60, Inc. | Methods and systems for providing in-game hot spots |
US7921069B2 (en) | 2007-06-28 | 2011-04-05 | Yahoo! Inc. | Granular data for behavioral targeting using predictive models |
GB2462399A (en) | 2007-06-28 | 2010-02-10 | Taptu Ltd | Search result ranking |
US8638363B2 (en) | 2009-02-18 | 2014-01-28 | Google Inc. | Automatically capturing information, such as capturing information using a document-aware device |
WO2009052308A1 (en) | 2007-10-17 | 2009-04-23 | Roseman Neil S | Nlp-based content recommender |
US8594996B2 (en) | 2007-10-17 | 2013-11-26 | Evri Inc. | NLP-based entity recognition and disambiguation |
WO2009054619A2 (en) | 2007-10-22 | 2009-04-30 | Moon Key Lee | Augmented reality computer device |
US9159034B2 (en) | 2007-11-02 | 2015-10-13 | Ebay Inc. | Geographically localized recommendations in a computing advice facility |
US20110246471A1 (en) | 2010-04-06 | 2011-10-06 | Selim Shlomo Rakib | Retrieving video annotation metadata using a p2p network |
US8255386B1 (en) | 2008-01-30 | 2012-08-28 | Google Inc. | Selection of documents to place in search index |
JP5336748B2 (en) | 2008-03-06 | 2013-11-06 | インターナショナル・ビジネス・マシーンズ・コーポレーション | Computers, methods, and programs for effectively communicating accessibility issues in content to others |
US7970808B2 (en) | 2008-05-05 | 2011-06-28 | Microsoft Corporation | Leveraging cross-document context to label entity |
US8630972B2 (en) | 2008-06-21 | 2014-01-14 | Microsoft Corporation | Providing context for web articles |
US20100010912A1 (en) * | 2008-07-10 | 2010-01-14 | Chacha Search, Inc. | Method and system of facilitating a purchase |
CN101667185B (en) | 2008-09-05 | 2012-10-17 | 深圳富泰宏精密工业有限公司 | Mobile device and fast display method of image thereof |
CN101763357B (en) | 2008-11-13 | 2016-09-14 | 北京搜狗科技发展有限公司 | A kind of method and system for browser to load internet resources |
CN102257502B (en) | 2008-12-18 | 2015-11-25 | 皇家飞利浦电子股份有限公司 | Software error and performance deficiency reporting system |
US20100228767A1 (en) * | 2009-02-06 | 2010-09-09 | Slinker Scott W | Determining relationships between individuals in a database |
US8229883B2 (en) | 2009-03-30 | 2012-07-24 | Sap Ag | Graph based re-composition of document fragments for name entity recognition under exploitation of enterprise databases |
CN102379121A (en) | 2009-04-01 | 2012-03-14 | 惠普开发有限公司 | Screen capture |
US8370762B2 (en) | 2009-04-10 | 2013-02-05 | Cellco Partnership | Mobile functional icon use in operational area in touch panel devices |
US8533223B2 (en) | 2009-05-12 | 2013-09-10 | Comcast Interactive Media, LLC. | Disambiguation and tagging of entities |
US20100325127A1 (en) * | 2009-06-18 | 2010-12-23 | Nokia Corporation | Method and apparatus for automatic geo-location and social group indexing |
CN101587495A (en) | 2009-07-08 | 2009-11-25 | 伍帝州 | Method and system for downloading and disposing application through browser and providing application entrance |
US8571319B2 (en) | 2009-07-28 | 2013-10-29 | International Business Machines Corporation | Enhanced screen capture for form manipulation |
US9135277B2 (en) | 2009-08-07 | 2015-09-15 | Google Inc. | Architecture for responding to a visual query |
KR101651128B1 (en) | 2009-10-05 | 2016-08-25 | 엘지전자 주식회사 | Mobile terminal and method for controlling application execution thereof |
JP2011096173A (en) * | 2009-11-02 | 2011-05-12 | Nec Corp | System, terminal, server, method and program for providing information |
US8515185B2 (en) * | 2009-11-25 | 2013-08-20 | Google Inc. | On-screen guideline-based selective text recognition |
US8977639B2 (en) | 2009-12-02 | 2015-03-10 | Google Inc. | Actionable search results for visual queries |
US9405772B2 (en) | 2009-12-02 | 2016-08-02 | Google Inc. | Actionable search results for street view visual queries |
US20110128288A1 (en) | 2009-12-02 | 2011-06-02 | David Petrou | Region of Interest Selector for Visual Queries |
US20110145692A1 (en) | 2009-12-16 | 2011-06-16 | Peter Noyes | Method for Tracking Annotations with Associated Actions |
US20110225152A1 (en) | 2010-03-15 | 2011-09-15 | Microsoft Corporation | Constructing a search-result caption |
EP2393056A1 (en) * | 2010-06-02 | 2011-12-07 | Layar B.V. | Acquiring, ranking and displaying points of interest for use in an augmented reality service provisioning system and graphical user interface for displaying such ranked points of interests |
US9158846B2 (en) | 2010-06-10 | 2015-10-13 | Microsoft Technology Licensing, Llc | Entity detection and extraction for entity cards |
US8468110B1 (en) | 2010-07-22 | 2013-06-18 | Intuit Inc. | Real-time user behavior prediction |
US20120083294A1 (en) | 2010-09-30 | 2012-04-05 | Apple Inc. | Integrated image detection and contextual commands |
US9189549B2 (en) | 2010-11-08 | 2015-11-17 | Microsoft Technology Licensing, Llc | Presenting actions and providers associated with entities |
EP2646949B1 (en) | 2010-12-01 | 2018-10-03 | Google LLC | Identifying matching source documents in response to a visual query |
US8880555B2 (en) | 2010-12-17 | 2014-11-04 | Facebook, Inc. | Ranking of address book contacts based on social proximity |
KR101741551B1 (en) | 2010-12-20 | 2017-06-15 | 엘지전자 주식회사 | Mobile terminal and Method for controlling application thereof |
WO2012101585A1 (en) | 2011-01-28 | 2012-08-02 | Strangeloop Networks, Inc. | Prioritized image rendering based on position within a web page |
US8849931B2 (en) * | 2011-03-15 | 2014-09-30 | Idt Messaging, Llc | Linking context-based information to text messages |
US8341156B1 (en) * | 2011-04-04 | 2012-12-25 | Google Inc. | System and method for identifying erroneous business listings |
US8977629B2 (en) | 2011-05-24 | 2015-03-10 | Ebay Inc. | Image-based popularity prediction |
JP2012252742A (en) | 2011-06-02 | 2012-12-20 | Elpida Memory Inc | Semiconductor device |
US9377867B2 (en) | 2011-08-11 | 2016-06-28 | Eyesight Mobile Technologies Ltd. | Gesture based interface system and method |
US8713004B1 (en) * | 2011-08-26 | 2014-04-29 | Google Inc. | Method and system for prioritizing points of interest for display in a map using category score |
US8204966B1 (en) | 2011-09-26 | 2012-06-19 | Google Inc. | Map tile data pre-fetching based on user activity analysis |
US8280414B1 (en) | 2011-09-26 | 2012-10-02 | Google Inc. | Map tile data pre-fetching based on mobile device generated event analysis |
US20150212695A1 (en) | 2011-10-05 | 2015-07-30 | Google Inc. | Suggested action feedback |
US9305108B2 (en) | 2011-10-05 | 2016-04-05 | Google Inc. | Semantic selection and purpose facilitation |
US20130097507A1 (en) | 2011-10-18 | 2013-04-18 | Utc Fire And Security Corporation | Filmstrip interface for searching video |
EP2587745A1 (en) | 2011-10-26 | 2013-05-01 | Swisscom AG | A method and system of obtaining contact information for a person or an entity |
CA2854142A1 (en) | 2011-11-01 | 2013-05-10 | Google Inc. | Launching applications from webpages |
US20130117252A1 (en) | 2011-11-09 | 2013-05-09 | Google Inc. | Large-scale real-time fetch service |
US9665643B2 (en) | 2011-12-30 | 2017-05-30 | Microsoft Technology Licensing, Llc | Knowledge-based entity detection and disambiguation |
US8832116B1 (en) * | 2012-01-11 | 2014-09-09 | Google Inc. | Using mobile application logs to measure and maintain accuracy of business information |
CN104054092B (en) | 2012-01-31 | 2017-10-24 | 基文影像公司 | System and method for the energy event in image stream in display body |
US9230212B2 (en) * | 2012-02-02 | 2016-01-05 | Peel Technologies, Inc. | Content based recommendation system |
US9171068B2 (en) | 2012-03-07 | 2015-10-27 | Ut-Battelle, Llc | Recommending personally interested contents by text mining, filtering, and interfaces |
US20130263098A1 (en) | 2012-03-29 | 2013-10-03 | Pawel Piotr Duda | Method and system for testing of mobile web sites |
US9836545B2 (en) * | 2012-04-27 | 2017-12-05 | Yahoo Holdings, Inc. | Systems and methods for personalized generalized content recommendations |
EP2850552B1 (en) * | 2012-05-16 | 2019-05-08 | Okta, Inc. | Systems and methods for providing and managing distributed enclaves |
CN104471575A (en) * | 2012-05-18 | 2015-03-25 | 文件档案公司 | Using content |
WO2013173940A1 (en) | 2012-05-22 | 2013-11-28 | Beijing Baina Info - Tech,Co., Ltd | A method and system for providing application data |
US9582146B2 (en) | 2012-05-29 | 2017-02-28 | Nokia Technologies Oy | Causing display of search results |
US8849567B2 (en) * | 2012-05-31 | 2014-09-30 | Google Inc. | Geographic data update based on user input |
US9075974B2 (en) | 2012-07-25 | 2015-07-07 | Google Inc. | Securing information using entity detection |
US10091552B2 (en) * | 2012-09-19 | 2018-10-02 | Rovi Guides, Inc. | Methods and systems for selecting optimized viewing portions |
US9165406B1 (en) | 2012-09-21 | 2015-10-20 | A9.Com, Inc. | Providing overlays based on text in a live camera view |
US9274839B2 (en) * | 2012-09-27 | 2016-03-01 | Intel Corporation | Techniques for dynamic physical memory partitioning |
WO2014066562A2 (en) * | 2012-10-25 | 2014-05-01 | Intel Corporation | Route optimization including points of interest |
US9407824B2 (en) | 2012-11-01 | 2016-08-02 | Google Inc. | Multi-directional content capture on mobile devices |
US8990194B2 (en) * | 2012-11-02 | 2015-03-24 | Google Inc. | Adjusting content delivery based on user submissions of photographs |
EP2728481A1 (en) | 2012-11-04 | 2014-05-07 | Rightware Oy | Evaluation of page load performance of web browser |
US20140146200A1 (en) | 2012-11-28 | 2014-05-29 | Research In Motion Limited | Entries to an electronic calendar |
US9245372B2 (en) | 2012-12-04 | 2016-01-26 | Nintendo Co., Ltd. | Map systems and methods for displaying panoramic images |
US20150317649A1 (en) * | 2012-12-17 | 2015-11-05 | Nokia Corporation | Method and apparatus for providing passphrase enabled point of interest |
US20150178786A1 (en) | 2012-12-25 | 2015-06-25 | Catharina A.J. Claessens | Pictollage: Image-Based Contextual Advertising Through Programmatically Composed Collages |
US20140188956A1 (en) | 2012-12-28 | 2014-07-03 | Microsoft Corporation | Personalized real-time recommendation system |
US20140188889A1 (en) | 2012-12-31 | 2014-07-03 | Motorola Mobility Llc | Predictive Selection and Parallel Execution of Applications and Services |
US20150169701A1 (en) | 2013-01-25 | 2015-06-18 | Google Inc. | Providing customized content in knowledge panels |
US20140250147A1 (en) | 2013-03-01 | 2014-09-04 | Quixey, Inc. | Generating Search Results Containing State Links to Applications |
US20140279013A1 (en) | 2013-03-13 | 2014-09-18 | Ebay Inc. | Online and offline ecommerce connections |
US9247309B2 (en) | 2013-03-14 | 2016-01-26 | Google Inc. | Methods, systems, and media for presenting mobile content corresponding to media content |
WO2014146265A1 (en) | 2013-03-20 | 2014-09-25 | Nokia Corporation | Method and apparatus for personalized resource recommendations |
US9690831B2 (en) * | 2013-04-19 | 2017-06-27 | Palo Alto Research Center Incorporated | Computer-implemented system and method for visual search construction, document triage, and coverage tracking |
US20140316890A1 (en) | 2013-04-23 | 2014-10-23 | Quixey, Inc. | Entity Bidding |
US9721107B2 (en) | 2013-06-08 | 2017-08-01 | Apple Inc. | Using biometric verification to grant access to redacted content |
KR102136602B1 (en) | 2013-07-10 | 2020-07-22 | 삼성전자 주식회사 | Apparatus and method for processing a content in mobile device |
US9329692B2 (en) | 2013-09-27 | 2016-05-03 | Microsoft Technology Licensing, Llc | Actionable content displayed on a touch screen |
US9465800B2 (en) * | 2013-10-01 | 2016-10-11 | Trunomi Ltd. | Systems and methods for sharing verified identity documents |
US9436918B2 (en) | 2013-10-07 | 2016-09-06 | Microsoft Technology Licensing, Llc | Smart selection of text spans |
US9354778B2 (en) | 2013-12-06 | 2016-05-31 | Digimarc Corporation | Smartphone-based methods and systems |
CN103888455B (en) * | 2014-03-13 | 2018-01-23 | 北京搜狗科技发展有限公司 | The intelligent recommendation methods, devices and systems of picture |
CN104036002A (en) * | 2014-06-16 | 2014-09-10 | 深圳市英威诺科技有限公司 | Technical method for intelligently recommending data |
US9916328B1 (en) | 2014-07-11 | 2018-03-13 | Google Llc | Providing user assistance from interaction understanding |
WO2016018039A1 (en) * | 2014-07-31 | 2016-02-04 | Samsung Electronics Co., Ltd. | Apparatus and method for providing information |
US8954836B1 (en) | 2014-08-19 | 2015-02-10 | Adlast, Inc. | Systems and methods for directing access to products and services |
US9965559B2 (en) | 2014-08-21 | 2018-05-08 | Google Llc | Providing automatic actions for mobile onscreen content |
US10044775B2 (en) * | 2014-08-29 | 2018-08-07 | Microsoft Technology Licensing, Llc | Calculating an entity'S location size via social graph |
US9348336B2 (en) * | 2014-09-12 | 2016-05-24 | Toyota Jidosha Kabushiki Kaisha | Robot assistance for detecting, managing, and mitigating risk |
US9606716B2 (en) | 2014-10-24 | 2017-03-28 | Google Inc. | Drag-and-drop on a mobile device |
US20160140671A1 (en) * | 2014-11-17 | 2016-05-19 | Jin Hong | System and Method for Dynamically Generating A Content Correlated Service Based Mobile Social Network |
CN104486350B (en) * | 2014-12-24 | 2017-11-10 | 电子科技大学 | A kind of Web content accelerated method based on user behavior |
WO2016113602A1 (en) * | 2015-01-12 | 2016-07-21 | Yogesh Chunilal Rathod | Real-time presenting on-demand service providers and users or customers and facilitating them |
US9703541B2 (en) | 2015-04-28 | 2017-07-11 | Google Inc. | Entity action suggestion on a mobile device |
US10970646B2 (en) | 2015-10-01 | 2021-04-06 | Google Llc | Action suggestions for user-selected content |
US10055390B2 (en) | 2015-11-18 | 2018-08-21 | Google Llc | Simulated hyperlinks on a mobile device based on user intent and a centered selection of text |
-
2015
- 2015-12-08 US US14/962,415 patent/US10178527B2/en active Active
-
2016
- 2016-10-18 GB GB1806100.2A patent/GB2558472A/en not_active Withdrawn
- 2016-10-18 KR KR1020187014398A patent/KR102077289B1/en active IP Right Grant
- 2016-10-18 RU RU2018113725A patent/RU2696225C1/en active
- 2016-10-18 JP JP2018520605A patent/JP6655180B2/en active Active
- 2016-10-18 DE DE112016004859.9T patent/DE112016004859T5/en active Pending
- 2016-10-18 CN CN201680061369.0A patent/CN108463817B/en active Active
- 2016-10-18 EP EP16858056.1A patent/EP3347835B1/en active Active
- 2016-10-18 WO PCT/US2016/057473 patent/WO2017070079A1/en active Application Filing
- 2016-10-18 CN CN202210324906.3A patent/CN114780737A/en active Pending
-
2019
- 2019-01-07 US US16/241,704 patent/US11089457B2/en active Active
-
2021
- 2021-08-09 US US17/397,666 patent/US11716600B2/en active Active
-
2023
- 2023-07-28 US US18/227,751 patent/US20230379678A1/en active Pending
Also Published As
Publication number | Publication date |
---|---|
CN108463817B (en) | 2022-04-08 |
US20230379678A1 (en) | 2023-11-23 |
DE112016004859T5 (en) | 2018-07-19 |
US10178527B2 (en) | 2019-01-08 |
GB2558472A (en) | 2018-07-11 |
US11716600B2 (en) | 2023-08-01 |
US11089457B2 (en) | 2021-08-10 |
KR102077289B1 (en) | 2020-04-07 |
US20200226187A1 (en) | 2020-07-16 |
EP3347835B1 (en) | 2021-12-08 |
CN108463817A (en) | 2018-08-28 |
KR20180070683A (en) | 2018-06-26 |
EP3347835A4 (en) | 2019-05-01 |
US20210368313A1 (en) | 2021-11-25 |
JP6655180B2 (en) | 2020-02-26 |
EP3347835A1 (en) | 2018-07-18 |
RU2696225C1 (en) | 2019-07-31 |
US20170118576A1 (en) | 2017-04-27 |
WO2017070079A1 (en) | 2017-04-27 |
GB201806100D0 (en) | 2018-05-30 |
JP2018534690A (en) | 2018-11-22 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
CN108463817B (en) | Personalized entity library | |
JP7201730B2 (en) | Intention recommendation method, device, equipment and storage medium | |
Cao et al. | Mining smartphone data for app usage prediction and recommendations: A survey | |
CN110476176B (en) | User objective assistance techniques | |
KR102048029B1 (en) | Model personal entities | |
CN106030571B (en) | Dynamically modifying elements of a user interface based on a knowledge graph | |
US10262265B2 (en) | Systems and methods for generating and communicating application recommendations at uninstall time | |
CN106663109A (en) | Providing automatic actions for mobile onscreen content | |
US20210034386A1 (en) | Mixed-grained detection and analysis of user life events for context understanding | |
CN111597449B (en) | Candidate word construction method and device for search, electronic equipment and readable medium | |
Lu et al. | Mining mobile application usage pattern for demand prediction by considering spatial and temporal relations | |
US20170351674A1 (en) | Personalized task continuation assistant | |
CN116569164A (en) | System and method for intelligent categorization of content in a content management system | |
JP2020149128A (en) | Estimation device, estimation method, and estimation program | |
Lian et al. | Data Engineering |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
SE01 | Entry into force of request for substantive examination |
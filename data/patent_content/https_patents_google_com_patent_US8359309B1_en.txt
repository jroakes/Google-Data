US8359309B1 - Modifying search result ranking based on corpus search statistics - Google Patents
Modifying search result ranking based on corpus search statistics Download PDFInfo
- Publication number
- US8359309B1 US8359309B1 US13/022,366 US201113022366A US8359309B1 US 8359309 B1 US8359309 B1 US 8359309B1 US 201113022366 A US201113022366 A US 201113022366A US 8359309 B1 US8359309 B1 US 8359309B1
- Authority
- US
- United States
- Prior art keywords
- corpus
- search results
- search
- query
- base
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Fee Related
Links
- 238000000034 method Methods 0.000 claims abstract description 44
- 238000012545 processing Methods 0.000 claims description 14
- 238000004590 computer program Methods 0.000 abstract description 14
- 239000013256 coordination polymer Substances 0.000 description 107
- 241001125840 Coryphaenidae Species 0.000 description 18
- 230000006870 function Effects 0.000 description 17
- 230000008569 process Effects 0.000 description 16
- 239000003607 modifier Substances 0.000 description 10
- 238000004891 communication Methods 0.000 description 7
- 238000013459 approach Methods 0.000 description 5
- 230000004931 aggregating effect Effects 0.000 description 4
- 238000009499 grossing Methods 0.000 description 4
- 230000003993 interaction Effects 0.000 description 4
- 238000013515 script Methods 0.000 description 4
- 238000001914 filtration Methods 0.000 description 3
- 230000003287 optical effect Effects 0.000 description 3
- 230000000644 propagated effect Effects 0.000 description 3
- 235000014510 cooky Nutrition 0.000 description 2
- 238000010586 diagram Methods 0.000 description 2
- 230000000694 effects Effects 0.000 description 2
- 230000002085 persistent effect Effects 0.000 description 2
- 238000000926 separation method Methods 0.000 description 2
- 235000009854 Cucurbita moschata Nutrition 0.000 description 1
- 240000001980 Cucurbita pepo Species 0.000 description 1
- 235000009852 Cucurbita pepo Nutrition 0.000 description 1
- -1 R(k Substances 0.000 description 1
- 230000005540 biological transmission Effects 0.000 description 1
- 238000004364 calculation method Methods 0.000 description 1
- 238000006243 chemical reaction Methods 0.000 description 1
- 239000003795 chemical substances by application Substances 0.000 description 1
- 239000002131 composite material Substances 0.000 description 1
- 238000007689 inspection Methods 0.000 description 1
- 239000004973 liquid crystal related substance Substances 0.000 description 1
- 238000010801 machine learning Methods 0.000 description 1
- 239000000203 mixture Substances 0.000 description 1
- 230000004044 response Effects 0.000 description 1
- 239000004065 semiconductor Substances 0.000 description 1
- 230000001953 sensory effect Effects 0.000 description 1
- 235000020354 squash Nutrition 0.000 description 1
- 239000000758 substrate Substances 0.000 description 1
- 238000012360 testing method Methods 0.000 description 1
- 238000012546 transfer Methods 0.000 description 1
- 230000000007 visual effect Effects 0.000 description 1
- 238000005303 weighing Methods 0.000 description 1
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/953—Querying, e.g. by the use of web search engines
- G06F16/9538—Presentation of query results
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/30—Information retrieval; Database structures therefor; File system structures therefor of unstructured textual data
- G06F16/33—Querying
- G06F16/332—Query formulation
- G06F16/3325—Reformulation based on results of preceding query
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/951—Indexing; Web crawling techniques
Definitions
- the present disclosure relates to ranking of search results.
- Internet search engines aim to identify documents or other items that are relevant to a user's needs and to present the documents or items in a manner that is most useful to the user. Such activity often involves a fair amount of mind-reading—inferring from various clues what the user wants. Certain clues may be user specific. For example, knowledge that a user is making a request from a mobile device, and knowledge of the location of the device, can result in much better search results for such a user.
- Clues about a user's needs may also be more general. For example, search results can have an elevated importance, or inferred relevance, if a number of other search results link to them. If the linking results are themselves highly relevant, then the linked-to results may have a particularly high relevance. Such an approach to determining relevance is premised on the assumption that, if authors of web pages felt that another web site was relevant enough to be linked to, then web searchers would also find the site to be particularly relevant. In short, the web authors “vote up” the relevance of the sites.
- a computer-implemented method, a computer program product, and a system are provided.
- the computer-implemented method, computer program product, and system include determining a first relevance of a first corpus to a search query, determining a second relevance of a second corpus to the search query, determining a measure of relative relevance of the first corpus and the second corpus to the search query, and providing the measure of relative relevance to a ranking engine for ranking of search results for a new search corresponding to the search query.
- Implementations can include one or more of the following features. Determining a relevance of a corpus to the search query can further include determining a click measure based on a number of selections of search results for the search query from the corpus. Determining a relevance of a corpus to the search query can further include determining a search fraction based on a number of searches for the search query issued in the corpus in view of a number of searches for all queries issued in the corpus. Determining a relevance of a corpus to the search query can further include computing a weighted average of a plurality of search fractions, where each search fraction is based on a different subset of searches in the corpus, and each subset of searches represents a different time period.
- Determining a relevance of a corpus to the search query can further include computing a weighted combination of a plurality of search fractions, where each search fraction is based on a different subset of searches in the corpus, and each subset of searches represents a combination of one or more languages and one or more countries.
- Implementations can include one or more of the following features. Determining the measure of relative relevance of the first corpus and the second corpus to the search query can include determining the first relevance of the first corpus as compared to the second relevance of the second corpus. Determining the measure of relative relevance of the first corpus and the second corpus to the search query can include computing a weighted combination of a relative search fraction and a relative click fraction, where the relative search fraction is based on a search fraction for the first corpus relative to a search fraction for the second corpus, the relative click fraction is based on a click measure for the first corpus relative to a click measure for the second corpus, and a click measure for a corpus is based on a number of selections of search results for the search query from the corpus.
- Implementations of the system include one or more computers operable to perform instructions, where the one or more computers can include a server operable to interact with a user interface device through a data communication network, and the user interface device is operable to interact with the server as a client.
- a computer-implemented method includes presenting a set of search results for a search query, the set of search results including one or more search results from a first corpus and one or more search results from a second corpus, receiving a selection of a search result in the set of search results, the selected search result being a search result from the first corpus, determining a measure of relative relevance of the first corpus and the second corpus to the search query, the determining being based on the selection, and providing the measure of relative relevance to a ranking engine for ranking of search results for a new search corresponding to the search query.
- Implementations can include using the selection of the search result from the first corpus to determine a first click measure as a measure of relevance of the first corpus to the search query, and determining the first click measure as compared to a second click measure, where the second click measure is a measure of relevance of the second corpus to the search query.
- a computer-implemented method includes, for a set of search queries, determining a measure of relative relevance of a first corpus and a second corpus to each search query in the set of search queries, the measure of relative relevance being based on a plurality of searches for each search query, the plurality of searches including one or more searches issued in the first corpus and one or more searches issued in the second corpus, and in response to a new search corresponding to a search query in the set of search queries, ranking search results from the first corpus, where the ranking is based on the measure of relative relevance of the first corpus and the second corpus to the search query.
- Implementations can include selecting the set of search queries, where the set of search queries is a subset of the set of all possible or actual search queries.
- Search log data can be used to predict which corpora provide results that are most relevant for a given query.
- Statistics for query-corpus pairs can be recorded and stored, and given a query, the system can predict which corpora will have the most relevant content based on statistics of the number of searches and clicks for that query in each of various corpora.
- the measures of relevance can be used as a signal to modify a baseline ranking function. If the statistics suggest that a corpus does not provide relevant results for a given query, the information retrieval system can avoid unnecessarily searching the corpus for new searches of the given query. A large fraction of the query stream can be impacted by considering a relatively small fraction of possible queries.
- Search and click data for various corpora can be stored in a simple form, which allows the data to be filtered or modified more easily than filtering or modifying data from some predictive models based on machine learning.
- FIG. 1 shows an example information retrieval system in which the relevance of results obtained for submitted search queries can be improved.
- FIG. 2 shows example components of an information retrieval system.
- FIG. 3 shows another example information retrieval system.
- FIG. 4 shows an example process of generating a measure of relative relevance for a corpus for a given query for use in improving the ranking of search results.
- FIG. 5 shows an example process for updating query-corpus search pair statistics stored in a database.
- FIG. 6 is a schematic diagram of an example computer system.
- FIG. 1 shows an example system 1000 for improving the relevance of results obtained from submitting search queries as can be implemented in an internet, intranet, or other client/server environment.
- the system 1000 is an example of an information retrieval system in which the systems, components, and techniques described below can be implemented. Although several components are illustrated, there may be fewer or more components in the system 1000 . Moreover, the components can be distributed on one or more computing devices connected by one or more networks or other suitable communication mediums.
- a user 1002 can interact with the system 1000 through a client device 1004 ( 1004 a , 1004 b , 1004 c ) or other device.
- the client device 1004 can be a computer terminal within a local area network (LAN) or wide area network (WAN).
- the client device 1004 can include a random access memory (RAM) 1006 (or other memory and/or a storage device) and a processor 1008 .
- the processor 1008 is structured to process instructions within the system 1000 .
- the processor 1008 is a single-threaded processor.
- the processor 1008 is a multi-threaded processor.
- the processor 1008 can include multiple processing cores and is structured to process instructions stored in the RAM 1006 (or other memory and/or a storage device included with the client device 1004 ) to display graphical information for a user interface.
- a user 1002 a can connect to a search engine 1030 within a server system 1014 to submit a query 1015 .
- a client-side query signal 1010 a is sent into a network 1012 and is forwarded to the server system 1014 as a server-side query signal 1010 b .
- Server system 1014 can be one or more server devices in one or more locations.
- a server device 1014 includes a memory device 1016 , which can include the search engine 1030 loaded therein.
- a processor 1018 is structured to process instructions within the system 1014 . These instructions can implement one or more components of the search engine 1030 .
- the processor 1018 can be a single-threaded processor or a multi-threaded processor, and can include multiple processing cores.
- the processor 1018 can process instructions stored in the memory 1016 related to the search engine 1030 and can send information to the client device 1004 , through the network 1012 , to create a graphical presentation in a user interface of the client device 1004 (e.g., a search results web page displayed in a web browser).
- the server-side query signal 1010 b is received by the search engine 1030 .
- the search engine 1030 uses the information within the user query 1015 (e.g., query terms) to find relevant documents.
- the search engine 1030 can include an indexing engine 1020 that actively searches a corpus (e.g., web pages, images, news articles, etc. on the Internet) to index the documents found in that corpus, and the index information for the documents in the corpus can be stored in an index database 1022 .
- This index database 1022 can be accessed to identify documents related to the user query 1015 .
- an electronic document (which for brevity will simply be referred to as a document) does not necessarily correspond to a file.
- a document can be stored in a portion of a file that holds other documents, in a single file dedicated to the document in question, or in multiple coordinated files.
- the search engine 1030 can include a ranking engine 1052 to rank the documents related to the user query 1015 .
- the ranking of the documents can be performed using traditional techniques for determining an information retrieval (IR) score for indexed documents in view of a given query.
- IR information retrieval
- the relevance of a particular document with respect to a particular search term or to other provided information may be determined by any appropriate technique. For example, the general level of back-links to a document that contains matches for a search term may be used to infer a document's relevance.
- a document is linked to (e.g., is the target of a hyperlink) by many other relevant documents (e.g., documents that also contain matches for the search terms)
- it can be inferred that the target document is particularly relevant. This inference can be made because the authors of the pointing documents presumably point, for the most part, to other documents that are relevant to their audience.
- the pointing documents are in turn the targets of links from other relevant documents, they can be considered more relevant, and the first document can be considered particularly relevant because it is the target of relevant (or even highly relevant) documents.
- Such a technique may be the determinant of a document's relevance or one of multiple determinants. Appropriate techniques can also be used to identify and eliminate attempts to cast false votes so as to artificially drive up the relevance of a page.
- the ranking engine 1052 can receive an additional signal from a rank modifier engine 1056 to assist in determining an appropriate ranking for the documents.
- the rank modifier engine 1056 provides one or more prior models, or one or more measures of relevance for the documents based on one or more prior models, which can be used by the ranking engine 1052 to improve the search results' ranking provided to the user 1002 .
- a prior model represents a background probability of document result selection given the values of multiple selected features, as described further below.
- the rank modifier engine 1056 can perform one or more of the operations described below to generate the one or more prior models, or the one or more measures of relevance based on one or more prior models.
- the search engine 1030 can forward the final, ranked result list within a server-side search results signal 1028 a through the network 1012 .
- a client-side search results signal 1028 b can be received by the client device 1004 a where the results can be stored within the RAM 1006 and/or used by the processor 1008 to display the results on an output device for the user 1002 a.
- FIG. 2 shows example components of an information retrieval system. These components can include an indexing engine 2010 , a scoring engine 2020 , a ranking engine 2030 , and a rank modifier engine 2070 .
- the indexing engine 2010 can function as described above for the indexing engine 1020 .
- the scoring engine 2020 can generate scores for document results based on many different features, including content-based features that link a query to document results, and query-independent features that generally indicate the quality of document results.
- the content-based features can include aspects of document format, such as query matches to title or anchor text in an HTML (Hyper Text Markup Language) page.
- the query-independent features can include aspects of document cross-referencing, such as a score or figure of merit of the document or the domain.
- the particular functions used by the scoring engine 2020 can be tuned, to adjust the various feature contributions to the final IR score, using automatic or semi-automatic processes.
- the ranking engine 2030 can produce a ranking of document results 2040 for display to a user based on IR scores received from the scoring engine 2020 and one or more signals from the rank modifier engine 2070 .
- a tracking component 2050 can be used to record information regarding individual user selections of the results presented in the ranking 2040 .
- the tracking component 2050 can be embedded JavaScript code included in a web page ranking 2040 that identifies user selections (clicks) of individual document results and also identifies when the user returns to the results page, thus indicating the amount of time the user spent viewing the selected document result.
- the tracking component 2050 can be a proxy system through which user selections of the document results are routed, or the tracking component can include pre-installed software at the client (e.g., a toolbar plug-in to the client's operating system).
- the tracking component 2050 can be used to record the search queries issued to one or more corpora.
- the recorded information can be stored in session log(s) 2060 .
- search data and result selection information are stored in search logs.
- the recorded information includes log entries that indicate, for each user selection, the query (Q), the document (D), the time (T) between two successive selections of search results, the language (L) employed by the user, and the country (C) where the user is likely located (e.g., based on the server used to access the IR system).
- other information is also recorded regarding user interactions with a presented ranking, including negative information, such as the fact that a document result was presented to a user, but was not clicked, position(s) of click(s) in the user interface, IR scores of clicked results, IR scores of all results shown before the clicked result, the titles and snippets shown to the user before the clicked result, the user's cookie, cookie age, IP (Internet Protocol) address, user agent of the browser, etc.
- Still further information can be recorded, such as the search results returned for a query, where the search results are content items categorized into one or more corpora.
- similar information e.g., IR scores, position, etc.
- the recording of similar information is not associated with user sessions.
- such information is recorded for every click that occurs both before and after a current click.
- the information stored in the session log(s) 2060 or in search logs can be used by the rank modifier engine 2070 in generating the one or more signals to the ranking engine 2030 .
- a wide range of information can be collected and used to modify or tune the signal from the user to make the signal, and the future search results provided, a better fit for the user's needs.
- user selections of one or more corpora for issuing searches and user interactions with the search results presented to the users of the information retrieval system can be used to improve future rankings.
- the components shown in FIG. 2 can be combined in various manners and implemented in various system configurations.
- the scoring engine 2020 and the ranking engine 2030 can be merged into a single ranking engine, such as the ranking engine 1052 of FIG. 1 .
- the rank modifier engine 2070 and the ranking engine 2030 can also be merged, and in general, a ranking engine includes any software component that generates a ranking of document results after a query.
- a ranking engine can be included in a client system in addition to (or rather than) in a server system.
- FIG. 3 shows another example information retrieval system.
- a server system 3050 includes an indexing engine 3060 and a ranking engine 3070 .
- a client system 3000 includes a user interface for presenting a ranking 3010 , a tracking component 3020 , result selection log(s) 3030 , and a rank modifier engine 3040 .
- the client system 3000 can include a company's enterprise network and personal computers, in which a browser plug-in incorporates the rank modifier engine 3040 .
- the ranking engine 3070 can return the search results along with either an initial ranking or the actual IR scores for the results.
- the browser plug-in can then re-rank the results locally based on tracked page selections for the company-specific user base.
- FIG. 4 shows an example process 4000 of generating a measure of relative relevance for a corpus for a given query for use in improving the ranking of search results.
- a corpus is a collection or repository of content, where the content items generally share one or more common properties or characteristics.
- the categorization of content items into one or more corpora can be determined a priori, for example, by the information retrieval system. The categorization can be done using automatic or manual techniques or both.
- examples of corpora include web pages, maps, images, news articles, and scholarly literature. Some content items can be categorized into more than one corpus. For example, a news article can appear in a news article corpus and in a blog corpus.
- a user issues (i.e., submits) a search query in a particular corpus by entering the query on the search web page for the particular corpus.
- the query can be entered in a search box of an interface for the search web page.
- a user selection of a particular corpus in which to issue a search is an a priori (i.e., prior to receiving results) indication of the user preference for a type of result or results with particular properties or characteristics.
- a user submits a query to a search web page which is not dedicated to a particular corpus.
- the search engine can forward the search query to more than one corpus without the user selecting one or more corpora in which to run the search.
- the search web page can provide advanced search features which allow the user to specify one or more corpora in which to run the search.
- a particular corpus may not have a dedicated web page or cannot be directly searched by a user, but the content items in the corpus can still be returned as search results in, for example, a unified interface providing search results from multiple corpora.
- the number of searches issued for a given search query is tracked 4010 according to the corpus in which the query was issued.
- the search query dolphins could have been issued in a web page corpus (e.g., a search of web resources) 221,523 times and in an image corpus (e.g., a search directed specifically to a collection of images, for example, images.google.com) 125,231 times.
- a corpus search fraction R(Q,CP) is calculated 4020 .
- R(Q,CP) is the fraction of the queries issued in the corpus CP represented by the query Q in the last M days.
- a relative search fraction RSF(Q,CP 2 ,CP 1 ) is calculated 4030 .
- one corpus of the two or more corpora is chosen as the base corpus, and the relative search fractions for the non-base corpora are calculated relative to the base corpus (i.e., the corpus search fraction for the base corpus is the denominator in the relative search fraction calculation).
- the relative search fraction can then be expressed as RSF(Q,CP), where CP is the second corpus.
- the corpus search fraction R(dolphins, image) is higher than the corpus search fraction R(dolphins, web).
- This relative search fraction can be read to indicate that the dolphins query was 2.3 times more popular in the image corpus than in the web corpus in the last M days. If RSF(Q,CP 2 ,CP 1 ) ⁇ 1.0, the fraction can be read to indicate that the query is less popular in the CP 2 corpus than in the CP 1 corpus (e.g., the base corpus).
- the relative search fraction is used to modify 4040 the ranking of search results for a new search corresponding to the search query.
- the relative search fraction is used as a measure of relative relevance to boost or lower the IR score for search results from the CP 2 corpus or the CP 1 corpus.
- the general assumption under such an approach is that, if the query was significantly more popular on one corpus relative to another corpus, then there is a reasonable incentive to display results from the more popular corpus or to boost the ranking of the results from the more popular corpus for future searches of the same query.
- the IR score for search results from the base corpus is not modified by the relative search fraction.
- the IR score for image search results and news search results for a new dolphins search query can be multiplied by 2.3 and 0.8, respectively, while the IR score for web search results remains unmodified.
- the system tracks the number of search results selected SC(Q,CP) (i.e., clicked on) when the selected result is from the corpus in which the query was issued.
- This click data can indicate whether the search results displayed to the user have a high quality, i.e., the search results or type of search results returned were what the user wanted.
- the information provided by the click data differs from the information provided by search fractions. Search fractions provide information about which corpora users are choosing for issuing queries. In other words, search data indicate where users expect to see results of high quality, while click data indicate whether the results displayed are of high quality.
- a measure of relative relevance based on the relative search fraction is used to modify the ranking of search results for a new search corresponding to the search query.
- the measure of relative relevance can be, for example, a scaled or normalized version of the relative search fraction.
- the relative search fraction can be scaled or normalized to generate a multiplier which is suitable for boosting the search results (i.e., produces boosted IR scores within a desired range).
- the relative search fraction can be scaled or normalized to generate a measure of relative relevance which can be combined with other ranking modifier signals.
- the measure of relative relevance is based on both the relative search fraction and the number of clicks on search results from the corpus in which the query was issued.
- the relative search fractions can be generated and stored for a set of most popular search queries.
- the data can be stored in a database or repository. In some implementations, the data or some portion of the data can be loaded into memory for fast lookup of the relevant search fractions.
- the information retrieval system can search the database or memory to determine if the search query has associated relative search fractions. If this information is available for the search query, the system can determine how popular the query is on the various corpora and can boost or lower the IR for search results from each corpus according to the retrieved relative search fraction (or another measure of relative relevance) for the query-corpus pair.
- the measure of relative relevance is also based on statistics for particular search results presented for a given query. For example, for a given search query issued in a first corpus (e.g., web pages on the Internet), the information retrieval system can return a set of search results primarily from the first corpus for presentation in a user interface of a client device, where one or more of the search results presented is from a second corpus.
- the first corpus is chosen as a base corpus. If a user, presented with search results primarily from the first corpus, selects a result from the second corpus, this can indicate that the user finds results from the second corpus more relevant to the given query than results from the first corpus.
- the statistics used to calculate the measure of relative relevance can include statistics on the presentation (impression) and user selection (click) of these search results from the under-represented second corpus.
- the tracking component 2050 of FIG. 2 can be used to record the number of impressions (OI(Q,CP 2 ,CP 1 )) and clicks (OC(Q,CP 2 ,CP 1 )) of these search results from the under-represented corpus (CP 2 ) for a given query issued in a base corpus (CP 1 ).
- the recorded information can be stored in session log(s) 2060 or in search logs.
- the CTR can be used as a direct signal of whether users will click on search results from the under-represented corpus, given the query.
- a particular corpus e.g., the web page corpus
- the CTR can be expressed as OCTR(Q,CP), where CP is the under-represented corpus.
- a click measure can be based on a CTR, where the click measure can be used as a measure of relevance of the corpus to the query.
- the measure of relative relevance is initially based on the relative search fraction. Once a given search query becomes more popular (i.e., more searches for the given query are issued in one or more corpora), a statistically significant CTR measure (e.g., OCTR(Q,CP)) can be computed. The measure of relative relevance can then be based on a combination (e.g., a weighted combination) of the relative search fraction and the CTR measure for a query-corpus pair. In some implementations, the OCTR(Q,CP) is weighted more heavily than the RSF(Q,CP). In other implementations, the measure of relative relevance is only based on the OCTR(Q,CP) or other statistics for the search results from the under-represented corpus for a given query.
- a statistically significant CTR measure e.g., OCTR(Q,CP)
- the measure of relative relevance can then be based on a combination (e.g., a weighted combination) of the relative search fraction and the C
- results are also returned from two or more different corpora.
- a search issued in a web page corpus can return a large number of results from the web page corpus, a small number of results from an image corpus, and a small number of results from a video corpus.
- the measure of relative relevance is based on the number of clicks on search results from a first corpus (BaseC(Q,CP 2 ,CP 1 )) when the search was issued in the first corpus CP 1 and the set of results also includes results from one or more under-represented corpora, including the CP 2 corpus.
- a user issuing a search in a web page corpus might receive ten results from the web page corpus, two results from an image corpus, and one result from a video corpus. If the user clicks on one of the ten results from the web page corpus, two counters for the web page corpus are incremented: BaseC(Q, image, web) and BaseC(Q, video, web). If the user clicks on a result from the under-represented image corpus or the under-represented video corpus, OC(Q, image, web) or OC(Q, video, web), respectively, is incremented.
- the CTR for the first corpus, BaseCTR(Q,CP 2 ,CP 1 ), and the CTR for a second corpus (i.e., an under-represented corpus), OCTR(Q,CP 2 ,CP 1 ) can be used to generate measures of relevance for boosting or lowering the IR scores for search results from each of the two corpora.
- BaseCTR(Q,CP 2 ,CP 1 ) can be expressed as BaseCTR(Q,CP), where CP is the under-represented corpus.
- the IR score for results from the under-represented, second corpus can be boosted or lowered based on a multiplier calculated relative to the base corpus CTR.
- the multiplier can be the ratio of the under-represented corpus CTR, OCTR(Q,CP), to the base corpus CTR, BaseCTR(Q,CP).
- the ratio of the under-represented corpus CTR to the base corpus CTR can be used as a measure of relative relevance of the two corpora to the search query.
- searches for a given query issued in a web page corpus could result in a 30% CTR for image results and a 15% CTR for web page results.
- the multiplier for the IR score for image results is equal to 2 (i.e., the ratio of 30% to 15%).
- a click measure can be based on the number of clicks on search results for a given search query from a corpus, where the click measure can be used as a measure of relevance of the corpus to the query.
- the measure of relative relevance is based on the number of clicks (e.g., SC(Q,CP 2 ) or OC(Q,CP 2 ,CP 1 )) on search results for a given search query from one corpus relative to the number of clicks (e.g., SC(Q,CP 1 ) or BaseC(Q,CP 2 ,CP 1 )) on search results for the given search query from another corpus.
- the relative click fraction can be expressed as RCF(Q,CP), where CP is the non-base corpus.
- the measure of relative relevance is based on a combination (e.g., a weighted combination) of the relative search fraction and the relative click fraction for a query-corpus pair.
- the RCF(Q,CP) is weighted more heavily than the RSF(Q,CP).
- the relative click fraction RCF(Q,CP) for a given search query Q is defined as the number of clicks on search results from one corpus CP relative to the number of clicks on search results from all other corpora.
- the number of impressions and clicks of search results from each corpus for a given query can be recorded.
- a user selection of a search result from a particular corpus, given a particular query can be read as an indication that users find results from the particular corpus relevant to the particular query. This is a signal that indicates relevance like the a priori indication of preference by a user selecting a particular corpus for issuing a query.
- CTR statistics can be generated for each query-corpus pair using the impression and click data. The measure of relative relevance can be based on these CTR or click statistics alone or in combination with other statistics (e.g., the relative search fractions described above).
- the number of searches can be subdivided into different levels of granularity.
- information recorded in search logs or in session logs can include the query (Q), the language (L) employed by the user, and the country (C) where the user is likely located (e.g., based on the server used to access the IR system).
- statistics for a query-corpus pair can include the number of searches aggregated by language, by country, by neither (i.e., a global statistic), or by both.
- a query search issued in French by a user connected to a server located in Switzerland can be recorded as (1) a global statistic aggregating the number of query-corpus searches across all countries and all languages, (2) a statistic by language (French) aggregating the number of query-corpus searches across all countries, (3) a statistic by country (Switzerland) aggregating the number of query-corpus searches across all languages, or (4) a statistic by language (French) and country (Switzerland) aggregating the number of query-corpus searches across only the given queries issued in French from Switzerland.
- the global statistic provides the lowest level of granularity while the language/country statistic provides the highest level of granularity in this example.
- search results When multiple levels of granularity of search statistics are available, it is generally preferable to use or weight more heavily the statistic at the highest granularity, e.g., the combined language and country statistic for a given query-corpus pair.
- the general assumption under such an approach is that a user fluent in a particular language and from a particular country will likely find a particular search result more relevant (relative to other search results) if other users fluent in the same language and from the same country find that particular search result relevant.
- the search query is issued from a country or in a language that represents a small proportion of all query traffic, better search results may be generated by weighing more heavily the statistics at the lower levels of granularity (e.g., the global statistic or the statistic based on language). Weighting and combining multiple statistics of varying granularity is described in more detail below.
- the relative search fraction RSF(k,CP 2 ,CP 1 ) for a given query-corpus pair is based on statistics from one level of granularity.
- the system retrieves the corpus search numbers for all three keys and selects the number with the highest level of granularity which passes a test (e.g., greater than a minimum threshold, indicating enough query-corpus searches for the set of key features to provide a reliable statistic).
- the impression, click, and CTR data for the search results from the under-represented corpus or the base corpus can also be stored or retrieved based on the key k set of features.
- this data is stored with other query-corpus search data in a database or repository.
- the relevant data can be accessed in the database or repository using the applicable key.
- R(k,CP) can be updated at regular time intervals by incrementing S(k,CP) and S(k′,CP) as new search log data becomes available, for example, once per day. In practice, there can be many queries where this approach does not capture the desired effect when measured over long time periods.
- the corpus search fraction R(k,CP) is computed by applying an exponential moving average to give greater weight to more recent search data.
- the weights can be computed dynamically as a function of the number of recent search instances observed.
- the database or repository can store the values S [d] (k,CP) and R [d] (k,CP) for each corpus CP.
- a smoothed corpus search fraction R smooth can be computed by weighting and combining the multiple statistics.
- the smoothed corpus search fraction R smooth can employ per-language and per-country fractions (with smoothing therebetween).
- the smoothed corpus search fraction R smooth (k,CP) is calculated using R [d] (k,CP) (the corpus search fraction modified by the exponential decay function).
- a relative search fraction RSF(k,CP 2 ,CP 1 ) or a measure of relative relevance based on, for example, the relative search fraction, the relative click fraction, or a CTR measure, can be output to a ranking engine for ranking of search results for a new search corresponding to the search query.
- the IR score for search results responsive to the query from the particular corpus can be boosted or lowered accordingly.
- the relative search fraction or measure of relative relevance can be passed through, for example, a transform to create a boosting factor that can be applied to the IR scores.
- the measure of relative relevance is a squashed relative search fraction.
- R [d] (k,CP) or R smooth (k,CP) can be used to calculate the relative search fraction.
- RSF squash (k,CP 1 ,CP 1 ) 1 for all keys k
- Other transforms are also possible. For example, a linear form boosting function or an exponential boosting function can be used. Such transforms can cause lower relative search fractions to generate almost no boost (e.g., a boost of about 1), whereas higher relative search fractions can generate a significant boost.
- the transform employed can be adjusted based on the specific measure of relative relevance, and historical data combined with human generated relevance ratings (e.g., employed in a tuning process to select an appropriate boosting transform for a given implementation).
- the measure of relative relevance can be used to modify and improve the ranking of search results generated for a given query, and the modified ranking can be presented to a user (e.g., on a display device in a web browser user interface).
- the selection of queries for query-corpus pair statistics is made through filtering. For example, when session logs or search logs from a single day d are processed, counters for S d (k,CP) are computed for each key k and corpus CP. If the entry for a particular S d (k,CP) is below a threshold T, that S d (k,CP) can be discarded.
- the threshold T can be fixed or varying. For example, T can be set based on the size of the repository or database used to store the query-corpus pair statistics. It should be noted that the number of query-corpus pair statistics selected can be greatly reduced by filtering out entries that only contain data for a single corpus.
- Updates to the query-corpus pair statistics can occur on a regular basis, e.g., daily.
- a “master” database (or repository) can store the query-corpus pair statistics for all corpora aggregated over days ⁇ 1,2, . . . , d ⁇ 1 ⁇ .
- the “master” database can be updated by merging it with another database (or repository) containing query-corpus pair statistics for all corpora for day d generated from session logs or search logs.
- the aggregated query-corpus pair statistics can be retrieved directly from the “master” database.
- the “master” database can spawn various pruned sub-databases which provide reduced sets of query-corpus pair statistics to various applications.
- FIG. 5 shows an example process 5000 for updating query-corpus search pair statistics stored in a database.
- Scripts process 5010 session logs for day d.
- the scripts can accumulate and store query-corpus pair statistics, including S(k,CP), SC(k,Cp), R(k,CP), OI(k,CP), OC(k,CP), BaseC(k,CP), OCTR(k,CP), and BaseCTR(k,CP).
- the query-corpus pair statistics are filtered 5020 to remove pair statistics which are below a threshold T.
- the threshold T can vary based on, for example, the query, the corpus, or the particular statistic (e.g., S(k,CP) versus OCTR(k,CP)).
- the remaining query-corpus pair statistics are stored 5030 in a “recent” database (or repository), where each key k is mapped to a value which can include a list of statistics for one or more corpora.
- the query-corpus pair statistics aggregated over days ⁇ 1,2, . . . , d ⁇ 1 ⁇ in the “master” database are merged 5040 with the query-corpus pair statistics for day d in the “recent” database.
- the updated “master” database contains the query-corpus pair statistics aggregated over days ⁇ 1,2, . . . , d ⁇ .
- the corpus search fractions R(k,CP) are smoothed, generating R smooth (k,CP), after the query-corpus pair statistics are updated.
- multiple key-mapped values which each contain query-corpus pair statistics for an individual corpus are merged to generate a unified key-mapped value which contains query-corpus pair statistics for two or more corpora.
- the “master” database spawns various pruned sub-databases with the updated statistics.
- the measure of relative relevance, mapped by a key, for one or more corpora can be computed and returned using a corpus search boost function.
- An application programming interface (API) for the corpus search boost function can be defined as follows.
- FIG. 6 is a schematic diagram of an example computer system 6050 .
- the system 6050 can be used for performing the actions and methods described above.
- the system 6050 can include a processor 6018 , a memory 6016 , a storage device 6052 , and input/output devices 6054 .
- Each of the components 6018 , 6016 , 6052 , and 6054 are interconnected using a system bus 6056 .
- the processor 6018 is capable of processing instructions within the system 6050 . These instructions can implement one or more aspects of the systems, components, and techniques described above.
- the processor 6018 is a single-threaded processor.
- the processor 6018 is a multi-threaded processor.
- the processor 6018 can include multiple processing cores and is capable of processing instructions stored in the memory 6016 or on the storage device 6052 to display graphical information for a user interface on the input/output device 6054 .
- the memory 6016 is a computer readable medium such as volatile or non-volatile that stores information within the system 6050 .
- the memory 6016 can store processes related to the functionality of the search engine 1030 , for example.
- the storage device 6052 is capable of providing persistent storage for the system 6050 .
- the storage device 6052 can include a floppy disk device, a hard disk device, an optical disk device, or a tape device, or other suitable persistent storage mediums.
- the storage device 6052 can store the various databases described above.
- the input/output device 6054 provides input/output operations for the system 6050 .
- the input/output device 6054 can include a keyboard, a pointing device, and a display unit for displaying graphical user interfaces.
- FIG. 6 The computer system shown in FIG. 6 is but one example.
- embodiments of the subject matter and the functional operations described in this specification can be implemented in digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them.
- Embodiments of the subject matter described in this specification can be implemented as one or more computer program products, i.e., one or more modules of computer program instructions encoded on a tangible program carrier for execution by, or to control the operation of, data processing apparatus.
- the tangible program carrier can be a propagated signal or a computer-readable medium.
- the propagated signal is an artificially generated signal, e.g., a machine-generated electrical, optical, or electromagnetic signal, that is generated to encode information for transmission to suitable receiver apparatus for execution by a computer.
- the computer-readable medium can be a machine-readable storage device, a machine-readable storage substrate, a memory device, a composition of matter effecting a machine-readable propagated signal, or a combination of one or more of them.
- data processing apparatus encompasses all apparatus, devices, and machines for processing data, including by way of example a programmable processor, a computer, or multiple processors or computers.
- the apparatus can include, in addition to hardware, code that creates an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, or a combination of one or more of them.
- a computer program (also known as a program, software, software application, script, or code) can be written in any form of programming language, including compiled or interpreted languages, or declarative or procedural languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, or other unit suitable for use in a computing environment.
- a computer program does not necessarily correspond to a file in a file system.
- a program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub-programs, or portions of code).
- a computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
- the processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform functions by operating on input data and generating output.
- the processes and logic flows can also be performed by, and apparatus can also be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).
- processors suitable for the execution of a computer program include, by way of example, both general and special purpose microprocessors, and any one or more processors of any kind of digital computer.
- a processor will receive instructions and data from a read-only memory or a random access memory or both.
- the essential elements of a computer are a processor for performing instructions and one or more memory devices for storing instructions and data.
- a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks.
- mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks.
- a computer need not have such devices.
- a computer can be embedded in another device, e.g., a mobile telephone, a personal digital assistant (PDA), a mobile audio or video player, a game console, a Global Positioning System (GPS) receiver, to name just a few.
- PDA personal digital assistant
- GPS Global Positioning System
- Computer-readable media suitable for storing computer program instructions and data include all forms of non-volatile memory, media and memory devices, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks; magneto-optical disks; and CD-ROM and DVD-ROM disks.
- semiconductor memory devices e.g., EPROM, EEPROM, and flash memory devices
- magnetic disks e.g., internal hard disks or removable disks
- magneto-optical disks e.g., CD-ROM and DVD-ROM disks.
- the processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
- embodiments of the subject matter described in this specification can be implemented on a computer having a display device, e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor, for displaying information to the user and a keyboard and a pointing device, e.g., a mouse or a trackball, by which the user can provide input to the computer.
- a display device e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor
- keyboard and a pointing device e.g., a mouse or a trackball
- Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form, including acoustic, speech, or tactile input.
- Embodiments of the subject matter described in this specification can be implemented in a computing system that includes a back-end component, e.g., as a data server, or that includes a middleware component, e.g., an application server, or that includes a front-end component, e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described is this specification, or any combination of one or more such back-end, middleware, or front-end components.
- the components of the system can be interconnected by any form or medium of digital data communication, e.g., a communication network. Examples of communication networks include a local area network (“LAN”) and a wide area network (“WAN”), e.g., the Internet.
- LAN local area network
- WAN wide area network
- the computing system can include clients and servers.
- a client and server are generally remote from each other and typically interact through a communication network.
- the relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.
- the search and click data are used to provide suggestions for corpora other than the corpus in which a search query was issued. For example, when a given search query is issued in a base corpus, a list of non-base corpora can be returned along with search results from the base corpus. If one of the listed non-base corpora is selected, search results from the selected non-base corpus can be displayed, where the search results are responsive to the given search query.
Abstract
Description
R(Q,CP)=S(Q,CP)/S(CP)
where S(Q,CP) is the number of searches issued for query Q in the corpus CP in the last M days, and S(CP) is the number of searches issued for all queries in the corpus CP in the last M days. R(Q,CP) is the fraction of the queries issued in the corpus CP represented by the query Q in the last M days.
RSF(Q,CP 2 ,CP 1)=R(Q,CP 2)/R(Q,CP 1)
where R(Q,CP1) is the corpus search fraction for a first corpus in the last M days, and R(Q,CP2) is the corpus search fraction for a second corpus in the last M days. In some implementations, one corpus of the two or more corpora is chosen as the base corpus, and the relative search fractions for the non-base corpora are calculated relative to the base corpus (i.e., the corpus search fraction for the base corpus is the denominator in the relative search fraction calculation). The relative search fraction can then be expressed as RSF(Q,CP), where CP is the second corpus.
R [1](k,CP)=S 1(k,CP)/S 1(k′,CP)
R [d](k,CP)←αN R [d−1](k,CP)+(1−αN)S d(k,CP)/S d(k′,CP)
where N=ΣCPSd(k,CP). Thus, for a key k on day d, the database or repository can store the values S[d](k,CP) and R[d](k,CP) for each corpus CP. The intuition behind the exponent N is that the number of searches on all corpora in the recent data is a measure of the significance of the recent fluctuation. For example, if α=0.999 and there were 1000 searches for all corpora on day d, a weight of 0.9991000≈0.37 can be applied to the data for days {1,2, . . . , d−1}, and a weight of (1−0.37)=0.63 can be applied to the data for day d.
R smooth(k 2 ,CP)=(K Q +S Q,L)/[(K Q /R(k 1 ,CP))+(S Q,L /R(k 2 ,CP))]
where KQ is a constant independent of the query Q (e.g., 25) and SQ,L=ΣCPS(k2,CP). The intuition is that if the data for k2=(Q,L) is significant (i.e., ΣCPS(k2,CP) is high), then the value of Rsmooth(k2,CP) tends towards R(k2,CP), and if the data is insignificant, it tends towards R(k1,CP). Because S(k2,CP) is the number of searches aggregated over all time, this smoothing will only make a significant difference for extremely rare queries for which little data have been collected.
R smooth(k 3 ,CP)=(K Q,L +S Q,L,C)/[(K Q,L /R smooth(k 2 ,CP))+(S Q,L,C /R(k 3 ,CP))]
where KQ,L is a constant independent of the query Q (e.g., 50) and SQ,L,C=ΣCPS(k3,CP). Similar smoothing can also be applied to OCTR(k,CP). Different constants can be used for KQ and KQ,L, or KQ and KQ,L can be equal. In some implementations, the smoothed corpus search fraction Rsmooth(k,CP) is calculated using R[d](k,CP) (the corpus search fraction modified by the exponential decay function).
RSF squash(k,CP 2 ,CP 1)=RSF(k,CP 2 ,CP 1)×J/[RSF(k,CP 2 ,CP 1)+J−1]
where J is a constant, e.g., 40. For this squashing function, RSFsquash(k,CP1,CP1)=1 for all keys k, and RSFsquash(k,CP2,CP1)<J for all keys k. Other transforms are also possible. For example, a linear form boosting function or an exponential boosting function can be used. Such transforms can cause lower relative search fractions to generate almost no boost (e.g., a boost of about 1), whereas higher relative search fractions can generate a significant boost.
#include “header_file.h” |
class CorpusBoostResults; |
class Database_CollectionRT; |
namespace globalsearch { |
class CorpusBoostUtils; |
class CorpusBooster { |
public: |
CorpusBooster( ); |
~CorpusBooster( ); |
// |
// Lookup( ) |
// Given a (query,language,country), computes scores for each |
// corpus based on a batch of lookups to the CorpusBoost database |
// and returns them in CorpusBoostResults. The function returns true |
// iff the lookup is successful. |
// Argument description: |
// squery: | An squery. The function normalizes the query |
// | appropriately for the CorpusBoost database. |
// language: | A language code (“en”, “ja”, “zh-CN” etc.) |
// country: | A two-letter country code (“us”, “jp”, “cn”, etc.) |
// |
bool Lookup(const string& squery, |
const string& language, |
const string& country, |
CorpusBoostResults* results); |
private: |
scoped_ptr<CorpusBoostUtils> utils_; |
scoped_ptr<Database CollectionRT> database_; |
}; |
} // namespace globalsearch |
Claims (24)
Priority Applications (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/022,366 US8359309B1 (en) | 2007-05-23 | 2011-02-07 | Modifying search result ranking based on corpus search statistics |
US13/740,415 US8756220B1 (en) | 2007-05-23 | 2013-01-14 | Modifying search result ranking based on corpus search statistics |
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US75289407A | 2007-05-23 | 2007-05-23 | |
US13/022,366 US8359309B1 (en) | 2007-05-23 | 2011-02-07 | Modifying search result ranking based on corpus search statistics |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US75289407A Continuation | 2007-05-23 | 2007-05-23 |
Related Child Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/740,415 Continuation US8756220B1 (en) | 2007-05-23 | 2013-01-14 | Modifying search result ranking based on corpus search statistics |
Publications (1)
Publication Number | Publication Date |
---|---|
US8359309B1 true US8359309B1 (en) | 2013-01-22 |
Family
ID=47521793
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/022,366 Expired - Fee Related US8359309B1 (en) | 2007-05-23 | 2011-02-07 | Modifying search result ranking based on corpus search statistics |
US13/740,415 Active US8756220B1 (en) | 2007-05-23 | 2013-01-14 | Modifying search result ranking based on corpus search statistics |
Family Applications After (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/740,415 Active US8756220B1 (en) | 2007-05-23 | 2013-01-14 | Modifying search result ranking based on corpus search statistics |
Country Status (1)
Country | Link |
---|---|
US (2) | US8359309B1 (en) |
Cited By (26)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20120278339A1 (en) * | 2009-07-07 | 2012-11-01 | Yu Wang | Query parsing for map search |
US20130173571A1 (en) * | 2011-12-30 | 2013-07-04 | Microsoft Corporation | Click noise characterization model |
US20140105488A1 (en) * | 2012-10-17 | 2014-04-17 | Microsoft Corporation | Learning-based image page index selection |
US20140143222A1 (en) * | 2012-11-16 | 2014-05-22 | Google Inc. | Ranking signals for sparse corpora |
US8738596B1 (en) * | 2009-08-31 | 2014-05-27 | Google Inc. | Refining search results |
US8793246B1 (en) * | 2013-03-08 | 2014-07-29 | Fmr Llc | Identifying ranking scores for domains of interest |
US8832088B1 (en) * | 2012-07-30 | 2014-09-09 | Google Inc. | Freshness-based ranking |
WO2014176161A1 (en) * | 2013-04-23 | 2014-10-30 | Google Inc. | Ranking signals in mixed corpora environments |
US8909655B1 (en) * | 2007-10-11 | 2014-12-09 | Google Inc. | Time based ranking |
WO2015153511A1 (en) * | 2014-03-29 | 2015-10-08 | Thomson Reuters Global Resources | Improved method, system and software for searching, identifying, retrieving and presenting electronic documents |
WO2015175835A1 (en) * | 2014-05-14 | 2015-11-19 | Alibaba Group Holding Limited | Click through ratio estimation model |
EP3011754A1 (en) * | 2013-06-17 | 2016-04-27 | Google, Inc. | Enhanced program guide |
US20160210292A1 (en) * | 2015-01-16 | 2016-07-21 | Popsugar Inc. | Computer database access system and method for categorizing by style ranking |
US9633082B2 (en) | 2012-10-29 | 2017-04-25 | Alibaba Group Holding Limited | Search result ranking method and system |
US9690828B1 (en) * | 2015-12-21 | 2017-06-27 | International Business Machines Corporation | Collaborative search of databases |
WO2019034956A1 (en) * | 2017-08-17 | 2019-02-21 | International Business Machines Corporation | Domain-specific lexical analysis |
US10437902B1 (en) * | 2013-04-17 | 2019-10-08 | A9.Com, Inc. | Extracting product references from unstructured text |
US10445326B2 (en) * | 2015-12-31 | 2019-10-15 | Samsung Electronics Co., Ltd. | Searching based on application usage |
US10445423B2 (en) | 2017-08-17 | 2019-10-15 | International Business Machines Corporation | Domain-specific lexically-driven pre-parser |
CN110491394A (en) * | 2019-09-12 | 2019-11-22 | 北京百度网讯科技有限公司 | Wake up the acquisition methods and device of corpus |
US10740781B2 (en) | 2017-10-31 | 2020-08-11 | Ebates Performance Marketing, Inc. | System, method, and computer program for providing notification of a cashback reward from a shopping portal using online screen and email analysis |
US10970755B2 (en) | 2016-10-13 | 2021-04-06 | Ebates Performance Marketing, Inc. | System, method, and computer program for providing a wish list user interface within a web browser that alerts users to changes in multifactor-based prices |
US11113351B2 (en) * | 2019-06-17 | 2021-09-07 | Td Ameritrade Ip Company, Inc. | Aggregated search engine query analysis |
US20220207010A1 (en) * | 2019-07-02 | 2022-06-30 | Walmart Apollo, Llc | Systems and methods for interleaving search results |
EP4047505A4 (en) * | 2020-10-28 | 2023-01-18 | Comac Beijing Aircraft Technology Research Institute | Interactive retrieval method and apparatus, and computer device and storage medium |
US11568468B2 (en) | 2019-08-08 | 2023-01-31 | Rakuten Group, Inc. | System, method, and computer program for providing similar product recommendations for non-merchant publishers based on publisher preferences |
Families Citing this family (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9098569B1 (en) * | 2010-12-10 | 2015-08-04 | Amazon Technologies, Inc. | Generating suggested search queries |
US11675787B2 (en) | 2019-03-15 | 2023-06-13 | International Business Machines Corporation | Multiple search collections based on relevancy value |
Citations (66)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5265065A (en) | 1991-10-08 | 1993-11-23 | West Publishing Company | Method and apparatus for information retrieval from a database by replacing domain specific stemmed phases in a natural language to create a search query |
US5920854A (en) | 1996-08-14 | 1999-07-06 | Infoseek Corporation | Real-time document collection search engine with phrase indexing |
US6067565A (en) | 1998-01-15 | 2000-05-23 | Microsoft Corporation | Technique for prefetching a web page of potential future interest in lieu of continuing a current information download |
US6134532A (en) | 1997-11-14 | 2000-10-17 | Aptex Software, Inc. | System and method for optimal adaptive matching of users to most relevant entity and information in real-time |
US6185558B1 (en) | 1998-03-03 | 2001-02-06 | Amazon.Com, Inc. | Identifying the items most relevant to a current query based on items selected in connection with similar queries |
US6202058B1 (en) | 1994-04-25 | 2001-03-13 | Apple Computer, Inc. | System for ranking the relevance of information objects accessed by computer users |
US6327590B1 (en) | 1999-05-05 | 2001-12-04 | Xerox Corporation | System and method for collaborative ranking of search results employing user and group profiles derived from document collection content analysis |
US20020034292A1 (en) | 2000-08-22 | 2002-03-21 | Tuoriniemi Veijo M. | System and a method to match demand and supply based on geographical location derived from a positioning system |
US6363378B1 (en) | 1998-10-13 | 2002-03-26 | Oracle Corporation | Ranking of query feedback terms in an information retrieval system |
US20020103790A1 (en) | 2001-01-30 | 2002-08-01 | Wang Shirley S. | Utility for cross platform database query |
US6480843B2 (en) | 1998-11-03 | 2002-11-12 | Nec Usa, Inc. | Supporting web-query expansion efficiently using multi-granularity indexing and query processing |
US6490575B1 (en) | 1999-12-06 | 2002-12-03 | International Business Machines Corporation | Distributed network search engine |
US20030167252A1 (en) | 2002-02-26 | 2003-09-04 | Pliant Technologies, Inc. | Topic identification and use thereof in information retrieval systems |
US6671681B1 (en) | 2000-05-31 | 2003-12-30 | International Business Machines Corporation | System and technique for suggesting alternate query expressions based on prior user selections and their query strings |
US20040006740A1 (en) | 2000-09-29 | 2004-01-08 | Uwe Krohn | Information access |
US20040039734A1 (en) | 2002-05-14 | 2004-02-26 | Judd Douglass Russell | Apparatus and method for region sensitive dynamically configurable document relevance ranking |
US6725259B1 (en) | 2001-01-30 | 2004-04-20 | Google Inc. | Ranking search results by reranking the results based on local inter-connectivity |
US20040093325A1 (en) | 2002-11-07 | 2004-05-13 | International Business Machines Corporation | System and method for location influenced network search |
US6738764B2 (en) | 2001-05-08 | 2004-05-18 | Verity, Inc. | Apparatus and method for adaptively ranking search results |
US6792416B2 (en) | 1999-09-21 | 2004-09-14 | International Business Machines Corporation | Managing results of federated searches across heterogeneous datastores with a federated result set cursor object |
US20040186828A1 (en) | 2002-12-24 | 2004-09-23 | Prem Yadav | Systems and methods for enabling a user to find information of interest to the user |
US20040199419A1 (en) | 2001-11-13 | 2004-10-07 | International Business Machines Corporation | Promoting strategic documents by bias ranking of search results on a web browser |
US20050004889A1 (en) | 1999-12-08 | 2005-01-06 | Bailey David R. | Search engine system and associated content analysis methods for locating web pages with product offerings |
US20050015366A1 (en) | 2003-07-18 | 2005-01-20 | Carrasco John Joseph M. | Disambiguation of search phrases using interpretation clusters |
US20050060310A1 (en) | 2003-09-12 | 2005-03-17 | Simon Tong | Methods and systems for improving a search ranking using population information |
US20050060311A1 (en) | 2003-09-12 | 2005-03-17 | Simon Tong | Methods and systems for improving a search ranking using related queries |
US6873982B1 (en) | 1999-07-16 | 2005-03-29 | International Business Machines Corporation | Ordering of database search results based on user feedback |
US20050102282A1 (en) | 2003-11-07 | 2005-05-12 | Greg Linden | Method for personalized search |
US6912505B2 (en) | 1998-09-18 | 2005-06-28 | Amazon.Com, Inc. | Use of product viewing histories of users to identify related products |
US20050160083A1 (en) | 2004-01-16 | 2005-07-21 | Yahoo! Inc. | User-specific vertical search |
US20050192946A1 (en) | 2003-12-29 | 2005-09-01 | Yahoo! Inc. | Lateral search |
US6944612B2 (en) | 2002-11-13 | 2005-09-13 | Xerox Corporation | Structured contextual clustering method and system in a federated search engine |
US6944609B2 (en) | 2001-10-18 | 2005-09-13 | Lycos, Inc. | Search results using editor feedback |
US20050240576A1 (en) * | 2003-06-10 | 2005-10-27 | John Piscitello | Named URL entry |
US20050240580A1 (en) | 2003-09-30 | 2005-10-27 | Zamir Oren E | Personalization of placed content ordering in search results |
US20050256848A1 (en) | 2004-05-13 | 2005-11-17 | International Business Machines Corporation | System and method for user rank search |
US6970863B2 (en) | 2001-09-18 | 2005-11-29 | International Business Machines Corporation | Front-end weight factor search criteria |
US20050289140A1 (en) | 1999-12-08 | 2005-12-29 | Ford James L | Search query processing to provide category-ranked presentation of search results |
US7035812B2 (en) * | 1999-05-28 | 2006-04-25 | Overture Services, Inc. | System and method for enabling multi-element bidding for influencing a position on a search result list generated by a computer network search engine |
US7043471B2 (en) * | 2001-08-03 | 2006-05-09 | Overture Services, Inc. | Search engine account monitoring |
US20060106793A1 (en) | 2003-12-29 | 2006-05-18 | Ping Liang | Internet and computer information retrieval and mining with intelligent conceptual filtering, visualization and automation |
US7072886B2 (en) | 2001-05-15 | 2006-07-04 | Nokia Corporation | Method and business process to maintain privacy in distributed recommendation systems |
US7085761B2 (en) | 2002-06-28 | 2006-08-01 | Fujitsu Limited | Program for changing search results rank, recording medium for recording such a program, and content search processing method |
US20060200556A1 (en) | 2004-12-29 | 2006-09-07 | Scott Brave | Method and apparatus for identifying, extracting, capturing, and leveraging expertise and knowledge |
US7113939B2 (en) | 1999-09-21 | 2006-09-26 | International Business Machines Corporation | Architecture to enable search gateways as part of federated search |
US7146361B2 (en) | 2003-05-30 | 2006-12-05 | International Business Machines Corporation | System, method and computer program product for performing unstructured information management and automatic text analysis, including a search operator functioning as a Weighted AND (WAND) |
US20060294100A1 (en) | 2005-03-03 | 2006-12-28 | Microsoft Corporation | Ranking search results using language types |
US20070038659A1 (en) | 2005-08-15 | 2007-02-15 | Google, Inc. | Scalable user clustering based on set similarity |
US20070112730A1 (en) | 2005-11-07 | 2007-05-17 | Antonino Gulli | Sampling Internet user traffic to improve search results |
US7222127B1 (en) | 2003-11-14 | 2007-05-22 | Google Inc. | Large scale machine learning systems and methods |
US20070130370A1 (en) | 2005-12-06 | 2007-06-07 | Emeka Akaezuwa | Portable search engine |
US20070156677A1 (en) | 1999-07-21 | 2007-07-05 | Alberti Anemometer Llc | Database access system |
US7254587B2 (en) * | 2004-01-12 | 2007-08-07 | International Business Machines Corporation | Method and apparatus for determining relative relevance between portions of large electronic documents |
US20070214131A1 (en) | 2006-03-13 | 2007-09-13 | Microsoft Corporation | Re-ranking search results based on query log |
US7346839B2 (en) | 2003-09-30 | 2008-03-18 | Google Inc. | Information retrieval based on historical data |
US7379951B2 (en) | 2002-05-31 | 2008-05-27 | Microsoft Corporation | Support for real-time queries concerning current state, data and history of a process |
US20080183660A1 (en) | 2007-01-30 | 2008-07-31 | Google Inc. | Content identification expansion |
US7444327B2 (en) * | 2004-01-09 | 2008-10-28 | Microsoft Corporation | System and method for automated optimization of search result relevance |
US7516146B2 (en) | 2003-05-15 | 2009-04-07 | Microsoft Corporation | Fast adaptive document filtering |
US7542969B1 (en) * | 2004-11-03 | 2009-06-02 | Microsoft Corporation | Domain knowledge-assisted information processing |
US7565363B2 (en) | 1999-04-01 | 2009-07-21 | Anwar Mohammed S | Search engine with user activity memory |
US7577643B2 (en) | 2006-09-29 | 2009-08-18 | Microsoft Corporation | Key phrase extraction from query logs |
US7725463B2 (en) * | 2004-06-30 | 2010-05-25 | Microsoft Corporation | System and method for generating normalized relevance measure for analysis of search results |
US7925498B1 (en) | 2006-12-29 | 2011-04-12 | Google Inc. | Identifying a synonym with N-gram agreement for a query phrase |
US8001136B1 (en) | 2007-07-10 | 2011-08-16 | Google Inc. | Longest-common-subsequence detection for common synonyms |
US8037086B1 (en) | 2007-07-10 | 2011-10-11 | Google Inc. | Identifying common co-occurring elements in lists |
Family Cites Families (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7219090B2 (en) * | 2003-04-25 | 2007-05-15 | Overture Services, Inc. | Method and system for blending search engine results from disparate sources into one search result |
US20060136245A1 (en) * | 2004-12-22 | 2006-06-22 | Mikhail Denissov | Methods and systems for applying attention strength, activation scores and co-occurrence statistics in information management |
US7689622B2 (en) * | 2007-06-28 | 2010-03-30 | Microsoft Corporation | Identification of events of search queries |
-
2011
- 2011-02-07 US US13/022,366 patent/US8359309B1/en not_active Expired - Fee Related
-
2013
- 2013-01-14 US US13/740,415 patent/US8756220B1/en active Active
Patent Citations (70)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5265065A (en) | 1991-10-08 | 1993-11-23 | West Publishing Company | Method and apparatus for information retrieval from a database by replacing domain specific stemmed phases in a natural language to create a search query |
US6202058B1 (en) | 1994-04-25 | 2001-03-13 | Apple Computer, Inc. | System for ranking the relevance of information objects accessed by computer users |
US5920854A (en) | 1996-08-14 | 1999-07-06 | Infoseek Corporation | Real-time document collection search engine with phrase indexing |
US6134532A (en) | 1997-11-14 | 2000-10-17 | Aptex Software, Inc. | System and method for optimal adaptive matching of users to most relevant entity and information in real-time |
US6067565A (en) | 1998-01-15 | 2000-05-23 | Microsoft Corporation | Technique for prefetching a web page of potential future interest in lieu of continuing a current information download |
US6185558B1 (en) | 1998-03-03 | 2001-02-06 | Amazon.Com, Inc. | Identifying the items most relevant to a current query based on items selected in connection with similar queries |
US6912505B2 (en) | 1998-09-18 | 2005-06-28 | Amazon.Com, Inc. | Use of product viewing histories of users to identify related products |
US6363378B1 (en) | 1998-10-13 | 2002-03-26 | Oracle Corporation | Ranking of query feedback terms in an information retrieval system |
US6480843B2 (en) | 1998-11-03 | 2002-11-12 | Nec Usa, Inc. | Supporting web-query expansion efficiently using multi-granularity indexing and query processing |
US7565363B2 (en) | 1999-04-01 | 2009-07-21 | Anwar Mohammed S | Search engine with user activity memory |
US6327590B1 (en) | 1999-05-05 | 2001-12-04 | Xerox Corporation | System and method for collaborative ranking of search results employing user and group profiles derived from document collection content analysis |
US7035812B2 (en) * | 1999-05-28 | 2006-04-25 | Overture Services, Inc. | System and method for enabling multi-element bidding for influencing a position on a search result list generated by a computer network search engine |
US6873982B1 (en) | 1999-07-16 | 2005-03-29 | International Business Machines Corporation | Ordering of database search results based on user feedback |
US20070156677A1 (en) | 1999-07-21 | 2007-07-05 | Alberti Anemometer Llc | Database access system |
US6792416B2 (en) | 1999-09-21 | 2004-09-14 | International Business Machines Corporation | Managing results of federated searches across heterogeneous datastores with a federated result set cursor object |
US7113939B2 (en) | 1999-09-21 | 2006-09-26 | International Business Machines Corporation | Architecture to enable search gateways as part of federated search |
US6490575B1 (en) | 1999-12-06 | 2002-12-03 | International Business Machines Corporation | Distributed network search engine |
US20050004889A1 (en) | 1999-12-08 | 2005-01-06 | Bailey David R. | Search engine system and associated content analysis methods for locating web pages with product offerings |
US20060167864A1 (en) | 1999-12-08 | 2006-07-27 | Bailey David R | Search engine system for locating web pages with product offerings |
US20050289140A1 (en) | 1999-12-08 | 2005-12-29 | Ford James L | Search query processing to provide category-ranked presentation of search results |
US7395259B2 (en) * | 1999-12-08 | 2008-07-01 | A9.Com, Inc. | Search engine system and associated content analysis methods for locating web pages with product offerings |
US6671681B1 (en) | 2000-05-31 | 2003-12-30 | International Business Machines Corporation | System and technique for suggesting alternate query expressions based on prior user selections and their query strings |
US20020034292A1 (en) | 2000-08-22 | 2002-03-21 | Tuoriniemi Veijo M. | System and a method to match demand and supply based on geographical location derived from a positioning system |
US20040006740A1 (en) | 2000-09-29 | 2004-01-08 | Uwe Krohn | Information access |
US20020103790A1 (en) | 2001-01-30 | 2002-08-01 | Wang Shirley S. | Utility for cross platform database query |
US6725259B1 (en) | 2001-01-30 | 2004-04-20 | Google Inc. | Ranking search results by reranking the results based on local inter-connectivity |
US6738764B2 (en) | 2001-05-08 | 2004-05-18 | Verity, Inc. | Apparatus and method for adaptively ranking search results |
US7072886B2 (en) | 2001-05-15 | 2006-07-04 | Nokia Corporation | Method and business process to maintain privacy in distributed recommendation systems |
US7043471B2 (en) * | 2001-08-03 | 2006-05-09 | Overture Services, Inc. | Search engine account monitoring |
US6970863B2 (en) | 2001-09-18 | 2005-11-29 | International Business Machines Corporation | Front-end weight factor search criteria |
US6944609B2 (en) | 2001-10-18 | 2005-09-13 | Lycos, Inc. | Search results using editor feedback |
US20040199419A1 (en) | 2001-11-13 | 2004-10-07 | International Business Machines Corporation | Promoting strategic documents by bias ranking of search results on a web browser |
US20030167252A1 (en) | 2002-02-26 | 2003-09-04 | Pliant Technologies, Inc. | Topic identification and use thereof in information retrieval systems |
US20040039734A1 (en) | 2002-05-14 | 2004-02-26 | Judd Douglass Russell | Apparatus and method for region sensitive dynamically configurable document relevance ranking |
US7379951B2 (en) | 2002-05-31 | 2008-05-27 | Microsoft Corporation | Support for real-time queries concerning current state, data and history of a process |
US7085761B2 (en) | 2002-06-28 | 2006-08-01 | Fujitsu Limited | Program for changing search results rank, recording medium for recording such a program, and content search processing method |
US20040093325A1 (en) | 2002-11-07 | 2004-05-13 | International Business Machines Corporation | System and method for location influenced network search |
US6944612B2 (en) | 2002-11-13 | 2005-09-13 | Xerox Corporation | Structured contextual clustering method and system in a federated search engine |
US20040186828A1 (en) | 2002-12-24 | 2004-09-23 | Prem Yadav | Systems and methods for enabling a user to find information of interest to the user |
US7516146B2 (en) | 2003-05-15 | 2009-04-07 | Microsoft Corporation | Fast adaptive document filtering |
US7146361B2 (en) | 2003-05-30 | 2006-12-05 | International Business Machines Corporation | System, method and computer program product for performing unstructured information management and automatic text analysis, including a search operator functioning as a Weighted AND (WAND) |
US20050240576A1 (en) * | 2003-06-10 | 2005-10-27 | John Piscitello | Named URL entry |
US7401072B2 (en) * | 2003-06-10 | 2008-07-15 | Google Inc. | Named URL entry |
US20050015366A1 (en) | 2003-07-18 | 2005-01-20 | Carrasco John Joseph M. | Disambiguation of search phrases using interpretation clusters |
US20050060310A1 (en) | 2003-09-12 | 2005-03-17 | Simon Tong | Methods and systems for improving a search ranking using population information |
US20050060311A1 (en) | 2003-09-12 | 2005-03-17 | Simon Tong | Methods and systems for improving a search ranking using related queries |
US20050240580A1 (en) | 2003-09-30 | 2005-10-27 | Zamir Oren E | Personalization of placed content ordering in search results |
US7346839B2 (en) | 2003-09-30 | 2008-03-18 | Google Inc. | Information retrieval based on historical data |
US20050102282A1 (en) | 2003-11-07 | 2005-05-12 | Greg Linden | Method for personalized search |
US7231399B1 (en) | 2003-11-14 | 2007-06-12 | Google Inc. | Ranking documents based on large data sets |
US7222127B1 (en) | 2003-11-14 | 2007-05-22 | Google Inc. | Large scale machine learning systems and methods |
US20060106793A1 (en) | 2003-12-29 | 2006-05-18 | Ping Liang | Internet and computer information retrieval and mining with intelligent conceptual filtering, visualization and automation |
US20050192946A1 (en) | 2003-12-29 | 2005-09-01 | Yahoo! Inc. | Lateral search |
US7444327B2 (en) * | 2004-01-09 | 2008-10-28 | Microsoft Corporation | System and method for automated optimization of search result relevance |
US7254587B2 (en) * | 2004-01-12 | 2007-08-07 | International Business Machines Corporation | Method and apparatus for determining relative relevance between portions of large electronic documents |
US20050160083A1 (en) | 2004-01-16 | 2005-07-21 | Yahoo! Inc. | User-specific vertical search |
US20050256848A1 (en) | 2004-05-13 | 2005-11-17 | International Business Machines Corporation | System and method for user rank search |
US7725463B2 (en) * | 2004-06-30 | 2010-05-25 | Microsoft Corporation | System and method for generating normalized relevance measure for analysis of search results |
US7542969B1 (en) * | 2004-11-03 | 2009-06-02 | Microsoft Corporation | Domain knowledge-assisted information processing |
US20060200556A1 (en) | 2004-12-29 | 2006-09-07 | Scott Brave | Method and apparatus for identifying, extracting, capturing, and leveraging expertise and knowledge |
US20060294100A1 (en) | 2005-03-03 | 2006-12-28 | Microsoft Corporation | Ranking search results using language types |
US20070038659A1 (en) | 2005-08-15 | 2007-02-15 | Google, Inc. | Scalable user clustering based on set similarity |
US20070112730A1 (en) | 2005-11-07 | 2007-05-17 | Antonino Gulli | Sampling Internet user traffic to improve search results |
US20070130370A1 (en) | 2005-12-06 | 2007-06-07 | Emeka Akaezuwa | Portable search engine |
US20070214131A1 (en) | 2006-03-13 | 2007-09-13 | Microsoft Corporation | Re-ranking search results based on query log |
US7577643B2 (en) | 2006-09-29 | 2009-08-18 | Microsoft Corporation | Key phrase extraction from query logs |
US7925498B1 (en) | 2006-12-29 | 2011-04-12 | Google Inc. | Identifying a synonym with N-gram agreement for a query phrase |
US20080183660A1 (en) | 2007-01-30 | 2008-07-31 | Google Inc. | Content identification expansion |
US8001136B1 (en) | 2007-07-10 | 2011-08-16 | Google Inc. | Longest-common-subsequence detection for common synonyms |
US8037086B1 (en) | 2007-07-10 | 2011-10-11 | Google Inc. | Identifying common co-occurring elements in lists |
Non-Patent Citations (45)
Title |
---|
Agichtein, et al; Improving Web Search Ranking by Incorporating User Behavior Information; Aug. 2006; Proceedings of the Twenty-Ninth Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, p. 19-26. |
Agichtein, et al; Learning User Interaction Models for Predicting Web Search Result Performances; Aug. 2006; Proceedings of the Twenty-Ninth Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, p. 3-10. |
Bar-Ilan, Mat-Hassan, Levene; "Methods for comparing rankings of search engine results"; Computer Networks: The International Journal of Computer and Telecommunications Networking, vol. 50, Issue 10 (Jul. 2006). |
Bar-Llan, Keenoy, Levene, Yaari; "Presentation Bias is Significant in Determing User Preseference for Search Results-A User X Study"; Journal of the American Society for Information Science and Technology, vol. 60, Issue 1 (p. 135-149) (Sep. 2008). |
Boyan et al., "A Machine Learning Architecture for Optimizing Web Search Engines", Aug. 1996; Internet-based information systems-Workshop Technical Report-American Association for Artificial Intelligence, p. 1-8. |
Burke, Robin, "Integrating Knowledgebased and Collaborative-filtering Recommender Systems", AAAI Technical Report WS-99-01. Compilation copyright ©1999, AAAI (www.aaai.org), pp. 69-72. |
Cutrell, et al., "Eye tracking in MSN Search: Investigating snippet length, target position and task types", 2007; Conference on Human Factors in Computing Systems-Proceedings of the SIGCHI Conference on Human Factors in Computing Systems. |
Diligenti, et al., "Users, Queries and Documents: A Unified Representation for Web Mining", wi-iat, vol. 1, 2009 IEEE/WIC/ACM International Joint Conference on Web Intelligence and Intelligent Agent Technology, 2009, pp. 238-244. |
Google News archive, Jul. 8, 2003, Webmasterworld.com, [online] Retrieved from the Internet http://www.webmasterwolrd.com/forum3/15085.htm [retrieved on Nov. 20, 2009] 3 pages. |
Gre{hacek over (e)}ar, Miha, User Profiling: Collaborative Filtering, SIKDD 2004, Oct. 12-15, 2004, Ljubljana, Slovenia, 4 pages. |
Hofmann, Thomas, Latent Semantic Models for Collaborative Filtering, ACM Transactions on Information Systems, vol. 22, No. 1, Jan. 2004, pp. 89-115. |
Joachims T., "Evaluating retrieval performance using clickthrough data", Proceedings of the SIGIR Workshop on Mathematical/Formal Methods in Information Retrieval; Aug. 12-15, 2002; Tampere, Finland; 2002. |
Joachims, "Optimizing search engines using clickthrough data", 2002; Proceedings of the ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, p. 133-142. |
Joachims. Radlinski; "Search Engines that Learn from Implict Feedback"; Aug. 2007, IEEE Computer Society. |
Kelly, et al., "Implicit Feedback for Inferring User Preference: A Bibliography", SIGIR Forum, vol. 37, No. 2 (2003), pp. 18-28. |
Lemire, Daniel, "Scale and Translation Invariant Collaborative Filtering Systems, Published in Information Retrieval", 8(1), pp. 129-150, 2005. |
Linden, Greg et al., Amazon.com Recommendations: Item-to-Item Collaborative Filtering, [online], http://computer.org/internet/, IEEE Internet Computing, Jan.-Feb. 2003, IEEE Computer Society, pp. 76-80. |
Lu, Kuen S., Examiner, U.S. Patent Office, U.S. Appl. No. 11/556,143, filed Nov. 2, 2006, in Office Action mailed Jan. 25, 2010, 14 pages. |
Mueller, Kurt A., Examiner, U.S. Patent Office, U.S. Appl. No. 11/685,095, filed Mar. 12, 2007, in Office Action mailed Feb. 8, 2010, 31 pages. |
Nicole, Kristen, Heeii is StumbleUpon Plus Google Suggestions, [online], Retrieved from the Internet http://mashable.com/2007/05/15/heeii/, 11 pages. |
Po-Hsiang Wang, et al. QueryFind: Search Ranking Based on Users' Feedback and Expert's Agreement, Mar. 28-31, 2004, IEEE International Conference on e-Technology, 10.1109/EEE.2004.1287326, p. 299-304. |
Radlinski et al., Query Chains: Learning to Rank from Implicit Feedback, KDD '05, Aug. 21-24, 2005, Chicago, Illinois, USA, 10 pages. |
Schwab, et al., Adaptivity through Unobstrusive Learning, 2002, 16(3), pp. 5-9. |
Stoilova, Lubomira et al., GiveALink: Mining a Semantic Network of Bookmarks for Web Search and Recommendation, LinkKDD '05, Aug. 21, 2005, Chicago, IL, USA, 8 pages. |
U.S. Appl. No. 10/726,345, filed Dec. 3, 2003, Pearson et al. |
U.S. Appl. No. 10/878,926, filed Jun. 28, 2004, Battle et al. |
U.S. Appl. No. 11/096,726, filed Mar. 31, 2005, Lamping et al. |
U.S. Appl. No. 11/556,086, filed Nov. 2, 2006, Diligenti et al. |
U.S. Appl. No. 11/556,100, filed Nov. 2, 2006, Diligenti et al. |
U.S. Appl. No. 11/556,143, filed Nov. 2, 2006, Kim et al. |
U.S. Appl. No. 11/582,767, filed Oct. 17, 2006, Baker et al. |
U.S. Appl. No. 11/647,888, filed Dec. 29, 2006, Baker et al. |
U.S. Appl. No. 11/651,282, filed Jan. 9, 2007, Heymans. |
U.S. Appl. No. 11/685,095, filed Mar. 12, 2007, Kim et al. |
U.S. Appl. No. 11/686,288, filed Mar. 14, 2007, Diligenti et al. |
U.S. Appl. No. 11/742,447, filed Apr. 30, 2007, Stets et al. |
U.S. Appl. No. 11/781,155, filed Jul. 20, 2007, Diligenti. |
U.S. Appl. No. 11/841,313, filed Aug. 20, 2007, Corduneanu et al. |
U.S. Appl. No. 12/166,617, filed Jul. 2, 2008, Yang. |
U.S. Appl. No. 12/331,872, filed Dec. 10, 2008, Le et al. |
U.S. Patent Office, U.S. Appl. No. 11/556,086, filed Nov. 2, 2006, in Office Action mailed Jun. 23, 2010, 19 pages. |
Xiao, et al., Measuring Similarity of Interests for Clustering Web-Users, ADC, 2001, p. 107-114. |
Xie et al., Web User Clustering from Access Log Using Belief Function, K-CAP '01, Oct. 22-23, 2001, Victoria, British Columbia, Canada, pp. 202-208. |
Yu et al., Selecting Relevant Instances for Efficient and Accurate Collaborative Filtering, CIKM '01, Nov. 5-10, 2001, Atlanta, Georgia, pp. 239-246. |
Zeng et al., Similarity Measure and Instance Selection for Collaborative Filtering, WWW '03, May 20-24, 2003, Budapest, Hungary, pp. 652-658. |
Cited By (51)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8909655B1 (en) * | 2007-10-11 | 2014-12-09 | Google Inc. | Time based ranking |
US20120278339A1 (en) * | 2009-07-07 | 2012-11-01 | Yu Wang | Query parsing for map search |
US8745065B2 (en) * | 2009-07-07 | 2014-06-03 | Google Inc. | Query parsing for map search |
US8738596B1 (en) * | 2009-08-31 | 2014-05-27 | Google Inc. | Refining search results |
US20130173571A1 (en) * | 2011-12-30 | 2013-07-04 | Microsoft Corporation | Click noise characterization model |
US9355095B2 (en) * | 2011-12-30 | 2016-05-31 | Microsoft Technology Licensing, Llc | Click noise characterization model |
US8832088B1 (en) * | 2012-07-30 | 2014-09-09 | Google Inc. | Freshness-based ranking |
US20140105488A1 (en) * | 2012-10-17 | 2014-04-17 | Microsoft Corporation | Learning-based image page index selection |
US9070046B2 (en) * | 2012-10-17 | 2015-06-30 | Microsoft Technology Licensing, Llc | Learning-based image webpage index selection |
US9633082B2 (en) | 2012-10-29 | 2017-04-25 | Alibaba Group Holding Limited | Search result ranking method and system |
US20140143222A1 (en) * | 2012-11-16 | 2014-05-22 | Google Inc. | Ranking signals for sparse corpora |
US9779140B2 (en) * | 2012-11-16 | 2017-10-03 | Google Inc. | Ranking signals for sparse corpora |
US8793246B1 (en) * | 2013-03-08 | 2014-07-29 | Fmr Llc | Identifying ranking scores for domains of interest |
US10437902B1 (en) * | 2013-04-17 | 2019-10-08 | A9.Com, Inc. | Extracting product references from unstructured text |
CN105247517A (en) * | 2013-04-23 | 2016-01-13 | 谷歌公司 | Ranking signals in mixed corpora environments |
US9405803B2 (en) | 2013-04-23 | 2016-08-02 | Google Inc. | Ranking signals in mixed corpora environments |
WO2014176161A1 (en) * | 2013-04-23 | 2014-10-30 | Google Inc. | Ranking signals in mixed corpora environments |
CN105247517B (en) * | 2013-04-23 | 2019-05-14 | 谷歌有限责任公司 | Mix the ranking signal in corpus lab environment |
EP3011754A1 (en) * | 2013-06-17 | 2016-04-27 | Google, Inc. | Enhanced program guide |
US11042592B2 (en) | 2014-03-29 | 2021-06-22 | Camelot Uk Bidco Limited | Method, system and software for searching, identifying, retrieving and presenting electronic documents |
WO2015153511A1 (en) * | 2014-03-29 | 2015-10-08 | Thomson Reuters Global Resources | Improved method, system and software for searching, identifying, retrieving and presenting electronic documents |
GB2541566A (en) * | 2014-03-29 | 2017-02-22 | Thomson Reuters Global Resources | Improved method, system and software for searching, identifying, retrieving and presenting electronic documents |
US10140295B2 (en) | 2014-03-29 | 2018-11-27 | Camelot Uk Bidco Limited | Method, system and software for searching, identifying, retrieving and presenting electronic documents |
US10031913B2 (en) | 2014-03-29 | 2018-07-24 | Camelot Uk Bidco Limited | Method, system and software for searching, identifying, retrieving and presenting electronic documents |
US9971771B2 (en) | 2014-03-29 | 2018-05-15 | Camelot Uk Bidco Limited | Method, system and software for searching, identifying, retrieving and presenting electronic documents |
WO2015175835A1 (en) * | 2014-05-14 | 2015-11-19 | Alibaba Group Holding Limited | Click through ratio estimation model |
TWI677838B (en) * | 2014-05-14 | 2019-11-21 | 香港商阿里巴巴集團服務有限公司 | Method, device and information providing method and system for estimating click-through rate model |
US20150332315A1 (en) * | 2014-05-14 | 2015-11-19 | Alibaba Group Holding Limited | Click Through Ratio Estimation Model |
US11720575B2 (en) * | 2015-01-16 | 2023-08-08 | Rakuten Group, Inc. | Computer database access system and method for categorizing by style ranking |
US20160210292A1 (en) * | 2015-01-16 | 2016-07-21 | Popsugar Inc. | Computer database access system and method for categorizing by style ranking |
US20170255631A1 (en) * | 2015-12-21 | 2017-09-07 | International Business Machines Corporation | Collaborative search of databases |
US9690828B1 (en) * | 2015-12-21 | 2017-06-27 | International Business Machines Corporation | Collaborative search of databases |
US11526522B2 (en) | 2015-12-21 | 2022-12-13 | International Business Machines Corporation | Collaborative search of databases |
US10528575B2 (en) | 2015-12-21 | 2020-01-07 | International Business Machines Corporation | Collaborative search of databases |
US10445326B2 (en) * | 2015-12-31 | 2019-10-15 | Samsung Electronics Co., Ltd. | Searching based on application usage |
US10970755B2 (en) | 2016-10-13 | 2021-04-06 | Ebates Performance Marketing, Inc. | System, method, and computer program for providing a wish list user interface within a web browser that alerts users to changes in multifactor-based prices |
US10769376B2 (en) | 2017-08-17 | 2020-09-08 | International Business Machines Corporation | Domain-specific lexical analysis |
US10445423B2 (en) | 2017-08-17 | 2019-10-15 | International Business Machines Corporation | Domain-specific lexically-driven pre-parser |
GB2579326A (en) * | 2017-08-17 | 2020-06-17 | Ibm | Domain-specific lexical analysis |
US10769375B2 (en) | 2017-08-17 | 2020-09-08 | International Business Machines Corporation | Domain-specific lexical analysis |
US10496744B2 (en) | 2017-08-17 | 2019-12-03 | International Business Machines Corporation | Domain-specific lexically-driven pre-parser |
WO2019034956A1 (en) * | 2017-08-17 | 2019-02-21 | International Business Machines Corporation | Domain-specific lexical analysis |
US11361339B2 (en) | 2017-10-31 | 2022-06-14 | Rakuten Group, Inc. | System, method, and computer program for providing notification of a cashback reward from a shopping portal using online screen and email analysis |
US10740781B2 (en) | 2017-10-31 | 2020-08-11 | Ebates Performance Marketing, Inc. | System, method, and computer program for providing notification of a cashback reward from a shopping portal using online screen and email analysis |
US11113351B2 (en) * | 2019-06-17 | 2021-09-07 | Td Ameritrade Ip Company, Inc. | Aggregated search engine query analysis |
US20220207010A1 (en) * | 2019-07-02 | 2022-06-30 | Walmart Apollo, Llc | Systems and methods for interleaving search results |
US11954080B2 (en) * | 2019-07-02 | 2024-04-09 | Walmart Apollo, Llc | Systems and methods for interleaving search results |
US11568468B2 (en) | 2019-08-08 | 2023-01-31 | Rakuten Group, Inc. | System, method, and computer program for providing similar product recommendations for non-merchant publishers based on publisher preferences |
CN110491394B (en) * | 2019-09-12 | 2022-06-17 | 北京百度网讯科技有限公司 | Awakening corpus obtaining method and device |
CN110491394A (en) * | 2019-09-12 | 2019-11-22 | 北京百度网讯科技有限公司 | Wake up the acquisition methods and device of corpus |
EP4047505A4 (en) * | 2020-10-28 | 2023-01-18 | Comac Beijing Aircraft Technology Research Institute | Interactive retrieval method and apparatus, and computer device and storage medium |
Also Published As
Publication number | Publication date |
---|---|
US8756220B1 (en) | 2014-06-17 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US8359309B1 (en) | Modifying search result ranking based on corpus search statistics | |
US11816114B1 (en) | Modifying search result ranking based on implicit user feedback | |
US9390143B2 (en) | Recent interest based relevance scoring | |
US8738596B1 (en) | Refining search results | |
US11036814B2 (en) | Search engine that applies feedback from users to improve search results | |
US8938463B1 (en) | Modifying search result ranking based on implicit user feedback and a model of presentation bias | |
US8615514B1 (en) | Evaluating website properties by partitioning user feedback | |
US8909652B2 (en) | Determining entity popularity using search queries | |
US8694511B1 (en) | Modifying search result ranking based on populations | |
US9110975B1 (en) | Search result inputs using variant generalized queries | |
US8898153B1 (en) | Modifying scoring data based on historical changes | |
US9092510B1 (en) | Modifying search result ranking based on a temporal element of user feedback | |
US9378247B1 (en) | Generating query refinements from user preference data | |
US8977612B1 (en) | Generating a related set of documents for an initial set of documents | |
US9916366B1 (en) | Query augmentation | |
US8645367B1 (en) | Predicting data for document attributes based on aggregated data for repeated URL patterns | |
US20140149399A1 (en) | Determining user intent from query patterns | |
US20150339311A1 (en) | Query suggestions from documents | |
US9218369B2 (en) | Ranking image search results using hover data | |
US8930350B1 (en) | Autocompletion using previously submitted query data | |
US8959093B1 (en) | Ranking search results based on anchors | |
US9317588B1 (en) | Resource identification from organic and structured content | |
US9623119B1 (en) | Accentuating search results | |
US20070033199A1 (en) | System and method for accessing preferred provider of audio content |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:PROVINE, JOHN R.;BASILE, CLAUDIO;VASSERMAN, ALEXANDER L.;REEL/FRAME:026701/0256Effective date: 20070523 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044101/0405Effective date: 20170929 |
|
FEPP | Fee payment procedure |
Free format text: MAINTENANCE FEE REMINDER MAILED (ORIGINAL EVENT CODE: REM.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
LAPS | Lapse for failure to pay maintenance fees |
Free format text: PATENT EXPIRED FOR FAILURE TO PAY MAINTENANCE FEES (ORIGINAL EVENT CODE: EXP.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
STCH | Information on status: patent discontinuation |
Free format text: PATENT EXPIRED DUE TO NONPAYMENT OF MAINTENANCE FEES UNDER 37 CFR 1.362 |
|
FP | Lapsed due to failure to pay maintenance fee |
Effective date: 20210122 |
US7602991B2 - User definable image reference regions - Google Patents
User definable image reference regions Download PDFInfo
- Publication number
- US7602991B2 US7602991B2 US11/832,599 US83259907A US7602991B2 US 7602991 B2 US7602991 B2 US 7602991B2 US 83259907 A US83259907 A US 83259907A US 7602991 B2 US7602991 B2 US 7602991B2
- Authority
- US
- United States
- Prior art keywords
- interest
- region
- image
- digital image
- user
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Lifetime
Links
- 238000000034 method Methods 0.000 claims abstract description 96
- 238000002156 mixing Methods 0.000 claims abstract description 57
- 238000004422 calculation algorithm Methods 0.000 claims abstract description 36
- 238000012545 processing Methods 0.000 claims abstract description 36
- 230000006870 function Effects 0.000 claims description 248
- 230000004048 modification Effects 0.000 claims description 44
- 238000012986 modification Methods 0.000 claims description 44
- 230000000694 effects Effects 0.000 claims description 42
- 238000013459 approach Methods 0.000 claims description 23
- 239000011159 matrix material Substances 0.000 claims description 20
- 239000013598 vector Substances 0.000 claims description 20
- 230000011218 segmentation Effects 0.000 claims description 16
- 230000008569 process Effects 0.000 claims description 15
- 238000004590 computer program Methods 0.000 claims description 10
- 230000008859 change Effects 0.000 claims description 7
- 238000007667 floating Methods 0.000 claims description 6
- 230000007704 transition Effects 0.000 claims description 4
- 238000005282 brightening Methods 0.000 claims description 2
- 238000010422 painting Methods 0.000 claims description 2
- 230000001419 dependent effect Effects 0.000 description 19
- 241000220225 Malus Species 0.000 description 11
- 230000008901 benefit Effects 0.000 description 8
- 239000003086 colorant Substances 0.000 description 8
- 241000219357 Cactaceae Species 0.000 description 4
- 206010033307 Overweight Diseases 0.000 description 4
- 230000003044 adaptive effect Effects 0.000 description 4
- 235000021016 apples Nutrition 0.000 description 4
- 238000004364 calculation method Methods 0.000 description 4
- 238000006243 chemical reaction Methods 0.000 description 4
- 239000000203 mixture Substances 0.000 description 4
- 238000012937 correction Methods 0.000 description 3
- 230000007423 decrease Effects 0.000 description 3
- 238000009499 grossing Methods 0.000 description 3
- 230000003993 interaction Effects 0.000 description 3
- 235000020825 overweight Nutrition 0.000 description 3
- 102000004901 Iron regulatory protein 1 Human genes 0.000 description 2
- 108090001025 Iron regulatory protein 1 Proteins 0.000 description 2
- 230000006399 behavior Effects 0.000 description 2
- 238000005516 engineering process Methods 0.000 description 2
- 230000000873 masking effect Effects 0.000 description 2
- 238000003909 pattern recognition Methods 0.000 description 2
- 230000000644 propagated effect Effects 0.000 description 2
- 230000009467 reduction Effects 0.000 description 2
- 238000012360 testing method Methods 0.000 description 2
- 101100456831 Caenorhabditis elegans sams-5 gene Proteins 0.000 description 1
- 241000257303 Hymenoptera Species 0.000 description 1
- 230000009471 action Effects 0.000 description 1
- 230000006978 adaptation Effects 0.000 description 1
- 238000004458 analytical method Methods 0.000 description 1
- 238000004891 communication Methods 0.000 description 1
- 230000002860 competitive effect Effects 0.000 description 1
- 230000004424 eye movement Effects 0.000 description 1
- 230000033001 locomotion Effects 0.000 description 1
- 238000005259 measurement Methods 0.000 description 1
- 239000003607 modifier Substances 0.000 description 1
- 230000000877 morphologic effect Effects 0.000 description 1
- 230000007935 neutral effect Effects 0.000 description 1
- 239000003973 paint Substances 0.000 description 1
- 230000002035 prolonged effect Effects 0.000 description 1
- 238000007670 refining Methods 0.000 description 1
- 239000007787 solid Substances 0.000 description 1
- 238000012358 sourcing Methods 0.000 description 1
- 230000000153 supplemental effect Effects 0.000 description 1
- 230000008685 targeting Effects 0.000 description 1
- 238000012800 visualization Methods 0.000 description 1
- 238000005303 weighing Methods 0.000 description 1
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06T—IMAGE DATA PROCESSING OR GENERATION, IN GENERAL
- G06T11/00—2D [Two Dimensional] image generation
- G06T11/60—Editing figures and text; Combining figures or text
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/01—Input arrangements or combined input and output arrangements for interaction between user and computer
- G06F3/048—Interaction techniques based on graphical user interfaces [GUI]
- G06F3/0484—Interaction techniques based on graphical user interfaces [GUI] for the control of specific functions or operations, e.g. selecting or manipulating an object, an image or a displayed text element, setting a parameter value or selecting a range
- G06F3/04845—Interaction techniques based on graphical user interfaces [GUI] for the control of specific functions or operations, e.g. selecting or manipulating an object, an image or a displayed text element, setting a parameter value or selecting a range for image manipulation, e.g. dragging, rotation, expansion or change of colour
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/01—Input arrangements or combined input and output arrangements for interaction between user and computer
- G06F3/048—Interaction techniques based on graphical user interfaces [GUI]
- G06F3/0484—Interaction techniques based on graphical user interfaces [GUI] for the control of specific functions or operations, e.g. selecting or manipulating an object, an image or a displayed text element, setting a parameter value or selecting a range
- G06F3/04847—Interaction techniques to control parameter settings, e.g. interaction with sliders or dials
-
- G06T5/77—
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N1/00—Scanning, transmission or reproduction of documents or the like, e.g. facsimile transmission; Details thereof
- H04N1/46—Colour picture communication systems
- H04N1/56—Processing of colour picture signals
- H04N1/60—Colour correction or control
- H04N1/62—Retouching, i.e. modification of isolated colours only or in isolated picture areas only
- H04N1/622—Retouching, i.e. modification of isolated colours only or in isolated picture areas only with simulation on a subsidiary picture reproducer
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06T—IMAGE DATA PROCESSING OR GENERATION, IN GENERAL
- G06T2200/00—Indexing scheme for image data processing or generation, in general
- G06T2200/24—Indexing scheme for image data processing or generation, in general involving graphical user interfaces [GUIs]
Definitions
- the present invention relates to an application program interface and methods for combining any number of arbitrarily selected image modifications in an image while assigning those modifications easily to an image area and/or image color to provide for optimally adjusting color, contrast, sharpness, and other image-editing functions in the image-editing process.
- the present application is an extension of User Definable Image Reference Points to regions, which may be termed User Definable Image Reference Regions.
- User Definable Image Reference Points are described in U.S. Pat. Nos. 7,031,547; 6,865,300; and 6,728,421, the content of which are incorporated by reference in this disclosure in their entirety.
- Additional image editing tools also exist for reading or measuring color values in the digital image.
- Adobe Photoshop® offers a feature that enables the user to place and move up to four color reference points in an image.
- Such color reference points read properties (limited to the color values) of the image area in which they are placed. It is known to those skilled in the art that the only purpose of such color reference points is to display the associated color values; there is no image operation associated with such reference points.
- the reference points utilized in image-editing software are merely offered as a control tool for measuring an image's color values at a specific point within the image.
- image-editing applications such as Adobe Photoshop®, Corel Draw®, and Pictographics iCorrect 3.0®, allow the user to select a color in the image by clicking on a specific image point during a color enhancement and perform an operation on the specific color with which the selected point is associated.
- the black-point adjustment in Adobe Photoshop® allows the user to select a color in the image and specify the selected color as black, instructing the software to apply a uniform color operation to all pixels of the image, so that the desired color is turned into black.
- This method is not only available for black-point operations, but for pixels that are intended to be white, gray (neutral), skin tone, or sky, etc.
- a method for image processing of a digital image in which a region of interest is defined in the digital image, one or more sets of pixel characteristics are determined for the region of interest, along with an image editing function, and the digital image is processed by applying a mixing function algorithm based on the one or more sets of pixel characteristics and the determined image editing function.
- the processing the digital image includes using the mixing function to determine which pixels that are outside of the region of interest are affected by the image editing function.
- Pixels that are outside of the region of interest and which are spatially and colormetrically more similar to the pixels in the region of interest may be affected to a greater extent by the determined image editing function.
- An out-painting routine may be used on pixels that are outside of the region of interest.
- the image editing function could be selected from the group consisting of a darkening function, a brightening function, and a saturation altering function, among many other possibilities.
- a matrix that includes a plurality of spatial distances and a plurality of pixel characteristic differences is created, each of the plurality of spatial distances is a spatial distance between a pixel that is outside of the region of interest and the region of interest, and each of the plurality of pixel characteristic differences is a difference in pixel characteristic between a pixel that is outside of the region of interest and the region of interest.
- the region of interest may be associated with the coordinates of the one or more defined image reference points.
- a control element can be associated with the region of interest.
- a control element could be selected, for example, from the group consisting of a slider, a button, a checkbox, a text-entry field, a lasso tool, a brush, and a curve.
- a floating text element could be associated with the control element, and it could include, for example, information selected from the group consisting of a purpose of the control element and a value of the control element.
- the location of the control element could be definable by a user, or a computer program. For example, it could be adjacent to the side of the digital image, or in a window other than the window in which the digital image is located.
- the control element can be visually associated with the region of interest using an identifier such as an icon, a number, or a highlighted region on the digital image.
- one or more lines can be added to the user-defined region of interest so the region of interest has a closed shape.
- the shape of the region of interest can be at least partially defined by the digital image's margin.
- the shape of the region of interest can be changed after the region of interest is defined.
- a brush stroke that is applied to the digital image could be used to define the region.
- An effect radius can be used that extends away from the region of interest, and which forms a radius effect shape as a result of the shape of the region of interest.
- the radius effect shape can be further defined by a second line on the digital image that shows where an effect that is associated with the effect radius drops below a predetermined value. A user can change the effect radius.
- a local statistic such as a histogram, an average value, or a variance, based on the pixels that are included in the region of interest can be derived, and displayed on the monitor for viewing by a user.
- An interface can allow a user to modify the local statistic resulting in a modification of the pixel characteristics for pixels in the digital image.
- a computer program can be configured to define the region of interest based on a determination of a region of pixels in the digital image that have characteristics that are similar to a pixel in the digital image that is selected by a user.
- Variations are also possible when two separate regions of interest in the digital image are defined.
- a user could subdivide the digital image into two or more regions of interest, and assign a control element to one or more of the regions of interest.
- Two or more regions of interest that are adjacent to one another in the digital image can be defined, where a smooth transition exists between the pixel characteristic for pixels in the digital image that are located near the two or more adjacent regions of interest.
- Each of two or more regions of interest can have associated with it a control element, and the control element can be configured to allow a user to remove the region of interest that is associated with the control element from the step of processing the digital image.
- the image editing function can have an effect strength value
- a mask can be configured to determine the effect strength value
- the mask could include a local maxima
- the local maxima can be removed from the mask, either by automatic process, or by user intervention.
- Two or more regions of interest may be distinguishable to a user because each of the two or more regions of interest has a unique identifier such as a color or a line style.
- the unique identifier could be chosen by a user, or defined automatically based on the type of image editing function that is performed on the region of interest.
- the region of interest could be defined by a line.
- mixing function algorithms including a Pythagoras distance approach that calculates a geometric, a color curves approach, a segmentation approach, a classification approach, a expanding areas approach, and an offset vector approach.
- a graphic user interface including a first interface that is configured to receive coordinates of one or more regions of interest within the digital image, and a second interface that is configured to receive an image editing function that is associated with either the coordinates of each of the one or more regions of interest, or image characteristics of one or more pixels neighboring the one or more regions of interest.
- FIG. 1 is a screen shot of a digital image in an image processing program, illustrating one embodiment useable in the application program interface of the present invention.
- FIG. 2 is a screen shot of a digital image in an image processing program, illustrating another embodiment useable in the application program interface of the present invention.
- FIG. 3 is a flow chart of the steps of the application of a mixing function in accord with the disclosure.
- FIG. 4 is an illustration of one embodiment of a dialog box useable in the application program interface of the present invention.
- FIG. 5 is an illustration of one embodiment of a dialog box implementing simplified user control over weights useable in the application program interface of the present invention.
- FIG. 6 shows one possible application that allows for image editing using IRPs and IRRs.
- FIG. 7 is an enlarged portion of area 103 of FIG. 6 .
- FIG. 8 shows a series of images illustrating selection of a region.
- FIGS. 9 through 11 show additional embodiments of regions according to the invention.
- FIG. 12 illustrates a method of differential geometry that can be used to define a user-set boundary.
- FIG. 13 illustrates a before-and-after comparison of removing local maxima from a non-binary mask.
- the method and program interface of the present invention is useable as a plug-in supplemental program, as an independent module that may be integrated into any commercially available image processing program such as Adobe Photoshop®, or into any image processing device that is capable of modifying and displaying an image, such as a color copier or a self service photo print kiosk, as a dynamic library file or similar module that may be implemented into other software programs whereby image measurement and modification may be useful, or as a stand alone software program.
- image processing of a digital image may be used for altering any attribute or feature of the digital image.
- the user interface for the current invention may have various embodiments, which will become clear later in this disclosure.
- an implementation of the present invention allows the user to set a variety of types of IRPs in an image, which can be shown as graphic tags 10 floating over the image, as shown in FIG. 1 .
- FIG. 1 is a screen shot of a digital image in an image processing program.
- This method enables the user to move the IRPs in the image for the purpose of adjusting the location of such IRPs and thus the effect of each IRP on the image.
- IRPs could be invisible within the preview area of the image and identified placed elsewhere as information boxes 12 within the interface, as shown in FIG. 2 , but associated with a location (shown by arrow).
- graphic tags 10 do not “float” over the image as in FIG. 1 .
- FIG. 2 is a screen shot of a digital image in an image processing program.
- the IRPs serve as a graphical representation of an image modification that will be applied to an area of the image.
- the application program interface is embodied on a computer-readable medium for execution on a computer for image processing of a digital image.
- a first interface receives the coordinates of each of a plurality of image reference points defined by a user within the digital image
- a second interface receives an image editing function assigned by the user and associated with either the coordinates of each of the plurality of defined image reference points, or the image characteristics of one or more pixels neighboring the coordinates of each of the plurality of defined image reference points.
- the second interface receives an image editing function assigned by the user and associated with both the coordinates of each of the plurality of defined image reference points, and the image characteristics of one or more pixels neighboring the coordinates of each of the plurality of defined image reference points.
- a third interface displays a graphical icon or graphical tag 10 at the coordinates of one or more than one of the plurality of defined image reference points. Additionally optionally, the third interface permits repositioning of the graphical icon.
- a fourth interface displays the assigned image editing function.
- the second interface may further receive an image area associated with the coordinates of one or more than one of the plurality of defined image reference points.
- the second interface may further receive a color area associated with the coordinates of one or more than one of the plurality of defined image reference points.
- the first interface receives the coordinates of a single image reference point defined by a user within the digital image
- the second interface receives an image editing function assigned by the user and associated with both the coordinates of the defined image reference point, and the image characteristics of one or more pixels neighboring the coordinates of the defined image reference point.
- a central function of the present invention is the “Mixing Function,” which modifies the image based on the values and settings of the IRPs and the image modifications associated with the IRPs.
- a “Mixing Function” is an algorithm that defines to what extent a pixel is modified by each of the IRPs and its related image modification function.
- the method for applying the mixing function is shown in FIG. 3 . Begin with receiving 14 the IRPs in the image; test 16 to determine whether abstract IRPs are being used. If so, load 18 the abstract IRPs and then select 20 the first pixel to be processed; if not select 20 the first pixel to be processed. Then apply 22 the mixing function according to this disclosure, and test 24 whether all pixels chosen to be processed have been processed. If so, the method is completed 26 , if not, the next pixel is selected 28 and step 22 is repeated.
- the Pythagoras equation can be used. Those skilled in the art will find that this is more suitable for IRPs that are intended to perform local color correction or similar changes to an image.
- step 22 apply the image modification to a greater extent, if the location of the IRP is close to that of the current pixel, or apply it to a lesser extent, if the location of the IRP is further away from the current pixel, using the Pythagoras equation to measure the distance, often also referred to as distance in Euclidian space.
- a mixing function could be created with the use of color curves. To create the function:
- Step 22 . 1 . 1 Begin with the first channel of the image (such as the Red channel).
- Step 22 . 1 . 3 Apply this function to all pixels of the selected channel.
- Step 22 . 1 . 4 If all channels have not been modified, select the next channel and proceed with step 22 . 1 . 2 .
- the mixing function can be created using segmentation. To create the function:
- Step 22 . 2 . 1 Segment the image using any appropriate segmentation algorithm.
- Step 22 . 2 . 2 . Begin with IRP 1.
- Step 22 . 2 . 3 Apply the filter associated with that IRP to the segment where it is located.
- Step 22 . 2 . 4 Select the next IRP.
- Step 22 . 2 . 5 Unless all IRPs have been processed, proceed with step 22 . 2 . 3 .
- the mixing function can be created using multiple segmentation. To create the function:
- Step 22 . 3 . 2 Begin with IRP 1.
- Step 22 . 3 . 3 Apply the image modification of that IRP at 1/nth opacity to all pixels in the segment that contains the current IRP of the first segmentation, then apply the image modification at 1/nth opacity to all pixels in the segment containing the IRP of the second segmentation. Continue for all n segmentations.
- Step 22 . 3 . 4 Select the next IRP.
- Step 22 . 3 . 5 Unless all IRPs have been processed, proceed with step 22 . 3 . 3 .
- a classification method from pattern recognition science may be used to create another embodiment of the mixing function.
- Step 22 . 4 . 1 Choose a set of characteristics, such as saturation, x-coordinate, y-coordinate, hue, and luminance.
- Step 22 . 4 . 2 Using existing methods of pattern recognition, classify all pixels of the image, i.e., every pixel is assigned to an IRP based on the characteristics, and assuming that the IRPs are centers of clusters.
- Step 22 . 4 . 3 Modify each pixel with the image modification associated with the IRP to which the pixel has been classified.
- a pixel will not match the attributes of one IRP to a degree of 100%.
- One pixel's attributes might, for example, match one IRP to 50%, another IRP to 30% and a third IRP only to 20%.
- the algorithm would apply the effect of the first IRP to a degree of 50%, the second IRP's effect at 30%, and the third IRP's effect to 20%.
- an expanding areas method could be used to create a mixing function. To create the function:
- Step 22 . 5 . 1 Associate each IRP with an “area” or location within the image. Initially, this area is only the pixel where the IRP is positioned.
- Step 22 . 5 . 2 Apply the following to all IRP areas: Consider all pixels that touch the area. Among those, find the one whose attributes (color, saturation, luminosity) are closest to the initial pixel of the area. While comparing the attributes, minimize for the sum of differences of all attributes. Add this pixel to the area and assign the current area size in pixels to it. The initial pixel is assigned with a value of 1, the next added pixel is assigned a value of 2, the next with a value of 3, etc., until each pixel has been assigned a value.
- attributes color, saturation, luminosity
- Step 22 . 5 . 3 Repeat step 22 . 5 . 2 until all areas have expanded to the full image size.
- Step 22 . 5 . 4 Apply all modifications of all IRPs to that pixel while increasing the application for those with smaller values.
- a mixing function uses a set of attributes for each pixel (luminosity, hue, etc.). These attributes are compared to the attributes of the area where an IRP is positioned, and the Mixing Function applies those IRPs image modifications more whose associated attributes are similar to the actual pixel, and those IRPs image modifications less whose associated characteristics are very different from the actual pixel.
- a “Pixel-Difference-Based IRP Image Modification,” from now on called an “IRP Image Modification,” may be represented by a 7-tuple, as shown in Equation 1, where m is the amount of IRPs that will be made use of, and the number n is the amount of analyzing functions as explained later.
- the first value, F 1 . . . m is a set of the “Performing Functions.” Each of these functions is an image modification function, which may be called with three parameters as shown in Equation 2.
- I′ xy F ( I,x,y ) [2]
- Equation 2 the result I′ xy is the pixel that has been calculated by F.
- I is the image on which F is applied, and x and y are the coordinates of the pixel in I that F is applied to.
- Such a performing function could be “darken pixels by 30%,” for example, as shown in FIG. 1 . In image science, these modifications are often called filters.
- R 1 . . . m is a number of m tuples.
- Each tuple represents values of an IRP, and is a set of pixel characteristics.
- Such a tuple R consists of 2*n+1 values, as in Equation [3]. ((g 1 . . . g n ),g*,(w 1 . . . w n )) [3]
- F 1 . . . m and R 1 . . . m together represent the IRPs that the user has created. I will explain later how the IRPs that the user has placed can be converted into the functions and values F 1 . . . m and R 1 . . . m . Later in this disclosure I indicate that a function F and a tuple R are “associated” with each other and with an IRP if they F and R together represent an IRP.
- the third value I in Equation 1 is the image with the pixels I xy .
- This image can be of any type, i.e., grayscale, Lab, CMYK, RGB, or any other image representation that allows Performing Functions (Equation [2]) or analyzing functions (Equation [4]) to be performed on the image.
- Equation 1 The fourth element A 1 . . . n in Equation 1 is a set of n “Analyzing Functions” as represented in Equation [4].
- a n ( I,x,y ) k [4]
- Analyzing Functions in this disclosure refer to functions that calculate characteristics of an image, and must not be confused with the mathematical term “analytic functions.”
- the result of an Analyzing Function applied to a pixel will for further reference in this disclosure be called a “Characteristic” of the pixel.
- the Analyzing Functions can analyze the color of a point x, y in the image I, the structure of the point x, y in the image I, and the location of a point x, y in the image I itself.
- the fifth element D in Equation 1 is a “Difference Function” which can compare two vectors of n values against each other and provides a single number that is larger the more the two vectors of n values differ and zero if the two sets of n numbers are identical. In doing so, the function D is capable of weighing each individual number of the two sets with a weight vector (w 1 . . . n ) as in Equation [5].
- d D (( a 1 . . . n ), ( b 1 . . . n ), ( w 1 . . . n )) [5]
- *w n [7] D (( a 1 . . . n ), ( b 1 . . . n ), ( w 1 . . . n )) 2 ( a 1 *w 1 ⁇ b 1 *w 1 ) 2 + . . . +( a n *w n ⁇ b n *w n ) 2 [8]
- D* measures the difference of a 1 . . . n and b 1 . . . n weighed with w 1 . . . n , and adds the real number g* to the result.
- V is an “Inversion Function” that has the following characteristics with V:
- Equation [12] the function in Equation [12] is used, where t is any number that is approximately between 1 and 1000.
- V ( x ) 0.5 (x/t) [12]
- the Inversion function will be used later in this disclosure to calculate an “Inverse Difference” between two tuples a 1 . . . n and b 1 . . . n by calculating V(D*((a 1 . . . n ), (b 1 . . . n ), (w 1 . . . n ), g*)) or V(D ((a 1 . . . n ), (b 1 . . . n ), (w 1 . . . n ))) or V( D *((a 1 . . . n ), (b 1 . . . .
- This Inverse Difference is to provide a high value if similarity between the tuples a 1 . . . n and b 1 . . . n is detected, and a low value, if the tuples a 1 . . . n and b 1 . . . n are different.
- the seventh element, C 1 . . . m , in equation [1] is a set of m “Controlling Functions”. Each of those Controlling Functions has m parameters and needs to suit the following conditions:
- C i (p 1 . . . p m ) is high if p i has a high value compared to the mean of p 1 . . . p m
- C i (p 1 . . . p m ) is low if p i has a low value compared to the mean of p 1 . . . p m
- C i (p 1 . . . p m ) C ⁇ (i) (p ⁇ (1) . . . p ⁇ (m) ) with ⁇ being any permutation ⁇ :(1 . . . m) ⁇ ( ⁇ (1) . . . ⁇ (m)).
- Equation [13] A recommended equation for such a controlling function would be as shown in Equation [13].
- C i ( p 1 . . . p m ) p i /( p 1 +p 2 + . . . +p m ) [13]
- a controlling function C i is to provide a large number (close to 1) if the i th element of the parameters p 1 . . . p m is high relative to the other parameters, and a small value (close to 0) if the i th element of the parameters p 1 . . . p m is relatively low, and to “down-scale” a tuple of m elements so that their sum is 1.0, while the relations between the elements of the m-tuple are constrained. If the Controlling Functions are applied to a set of m Inverse Differences, the m results of the Controlling Functions will be referred to as “Controlled Inverse Differences” later in this disclosure.
- the last four elements of the tuple (A, D, V, C) are functions that are defined by the programmer when a system using IRPs is created, and are predefined or only slightly adjustable by the user.
- a system may give the user control over the functions A, D, V and C; and there can be certain components of the first two elements F 1 . . . m and R 1 . . . m that will be set by the application without user influence. This will become clearer later in this disclosure.
- FIG. 4 provides a sample image of an image in a dialog box an image processing program, for the purposes of illustrating modifications to an image using the current invention.
- graphic tag 30 representing IRP R 1 in FIG. 4 placed on the left apple, will be to increase saturation
- graphic tag 32 representing IRP R 2 placed on the right apple, will be decrease saturation
- graphic tag 34 representing IRP R 3 placed on the sky, will darken its associated image component.
- F 1 . . . F 3 three performing functions F 1 . . . F 3 are necessary, where F 1 increases the saturation, F 2 decreases the saturation, and F 3 is an image darkening image modification.
- the system should typically allow the user to set such a Performing Function before or after the user places an IRP in the image.
- the user first defines the type of the performing function (such as “sharpen,” or “darken,” or “increase saturation,” etc.) and then the user defines the behavior of the function (such as “sharpen to 100%,” or “darken by 30 levels,” etc.).
- IRPs in the current invention are used to store Characteristics of an individual pixel or a particular area in an image. As such, using the current example of modifying FIG. 4 , three IRPs are necessary: an IRP that stores the Characteristics of the first apple, an IRP that stores the Characteristics of the second apple, and an IRP that stores the Characteristics for the sky.
- the user may have control over the values of R after they were initially filled. This control may be allowed to varying extents, such as weights only versus all variables.
- both apples will be modified differently.
- both apples have the same color and the same structure, and each only differs in its location.
- the sky, containing the third IRP, has a different location than the apples, and also a different color.
- I xy(r) refers to the red channel's value of the image I at the location x,y and so forth.
- a 1 ( I,x,y ) x [15a]
- a 2 ( I,x,y ) y [15b]
- a 3 ( I,x,y ) I xy(r) [15c]
- a 4 ( I,x,y ) I xy(g) [15d]
- a 5 ( I,x,y ) I xy(b) [15e]
- a 1 and A 2 are Location Analyzing Functions and A 3 through A 5 are Color Analyzing Functions.
- a 3 through A 5 which only provide the red, green, and blue values, are suitable functions for a set of color-dependent analytical functions. For even better performance it is recommended to derive functions that calculate luminosity, saturation, etc., independently. Using the channels of the image in Lab color mode is appropriate. However, the following Analyzing Functions are also examples of appropriate Analyzing Functions, where the capitalized variables X, Y, R, G, B represent the maximum possible values for the coordinates or the color channels.
- a 1 ( I,x,y ) x* 100/ X [16a]
- a 2 ( I,x,y ) y* 100/ Y [16b]
- a 3 ( I,x,y ) ( I xy(r) +I xy(g) +I xy(b) )*100/( R+G+B ) [16c]
- a 4 ( I,x,y ) 100*( I xy(r) ⁇ I xy(g) )/( R+G )+50 [16d]
- a 5 ( I,x,y ) 100*( I xy(r) ⁇ I xy(b) )/( R+B )+50 [16e]
- Equations [16] shows Analyzing Functions that are also normalized to a range of 0 . . . 100 (see the description for normalizing Analyzing Functions after equation [4]) Normalizing the Analyzing Functions aids in the implementation, as normalized Analyzing Functions have the advantage that their results always have the same range, regardless of the image size or other image characteristics.
- the Analyzing Functions found in Equations [15] will be used throughout this disclosure when discussing values from R 1 . . . m
- the tuples R of an IRP store the information of the Characteristics of the region to which an operation will be applied, the region of interest. These tuples R acquire the Characteristics typically by applying the n analytical functions to the image location I xy where the IRP was placed, as in equation [14].
- the Difference Function D* will compare the values g 1 . . . g n of each IRP to the results of the n Analyzing Functions for all pixels in the image, using the weights w 1 . . . w n .
- g* is set to zero for this IRP.
- the weights will control the significance of the individual elements of g 1 . . . g 5 . See Equations [6], [7] and [8]. For example, if the weights w 1 . . . w 5 are set to (10,10,1,1,1), the location related information, gained through A 1 and A 2 , will be more significant than the color related information from A 3 through A 5 . (This IRP would be more location dependent than color dependent).
- the second and third IRP could have values such as
- R 2 ((190,100,150,50,50), 0, (1,1,1,1,1))
- R 3 ((100,10,80,80,200), 0, (1,1,1,1,1)).
- Difference Function An abbreviation related to the Difference Function follows.
- the purpose of the Difference Function is to calculate a value that indicates how “different” a pixel in the image is from the Characteristics that a certain IRP is associated with.
- the Difference referred to in this embodiment is always the result of the Difference function, and should not be confused with the “spatial” distance between two pixels in an image.
- equation [22] would be used.
- equation [22] requires that the Inversion Function V does not exceed values of approximately 1.
- the Gaussian Bell curve V(x) e ⁇ x 2 or 1/(x+1) or equation [12] could be such functions.
- Equation [21] When comparing Equation [21] and [22], the terms V(
- each IRP will modify the image to a certain extent regardless whether it is placed amidst many other IRPs or not. Therefore, if Equation [22] is used, placing multiple IRPs in an image area will increase the total amount of image modification in this area.
- the concept of “Abstract IRPs” can be used to enhance the performed image modification, or to change the behavior of the image modification.
- Abstract IRPs are similar to other IRPs as they are pairs of a Performing Function F and a set of values R. Both Abstract IRPs and IRPs may be used together to modify an image. Abstract IRPs, however, are not “user defined” IRPs or IRPs that are placed in the image by the user. The function of an Abstract IRP can be to limit the local “effect” or intensity of an IRP. In this regard, Abstract IRPs are typically not “local”, i.e., they affect the entire image. Abstract IRPs can be implemented in a manner that the user turns a user-controlled element on or off as illustrated later, so that the Abstract IRPs are not presented as IRPs to the user, as shown in FIG. 4 .
- FIG. 4 the user has positioned graphic tags 30 , 32 , and 34 representing IRPs R 1 . . . R 3 .
- Controls 36 , 38 , and 40 indicate a set of three possible user controls.
- the application would use one additional pre-defined Abstract IRP in the image modification.
- Such pre-defined, Abstract IRPs could, for example, be IRPs R 4 through R 6 as described below.
- Abstract IRP R 4 When the check box in control 36 is enabled, Abstract IRP R 4 , is utilized. Without the use of an Abstract IRP, when an image has an area such as the cactus 42 which is free of IRPs, this area will still be filtered by a 100% mix of the effects of all IRPs (see equation [19] and the Controlling Function C). In the current image example, the cactus 42 would be affected by a mix of the IRPs R 1 . . . R 3 , although the user has placed no IRP on the cactus.
- the Abstract IRP could have zero weights and a g* value greater than zero, such as
- R 4 ((0,0,0,0), 50, (0,0,0,0,0))
- will return nothing but 50 whatever the Characteristics of the pixel I xy might be.
- the value of g* should be in the range of 1 to 1000. 50 is a good value to start with.
- this IRP and its R 4 is that pixels in areas free of IRPs, such as in the middle of the cactus 42 , will have a lower Difference to R 4 (which is constantly set to 50) than to R 1 . . . R 3 .
- g* can be lowered, and the value g* in R 4 can be raised to make the “active” IRPs R 1 . . . R 3 more effective.
- a fixed value for g* in R 4 may be implemented if the system that is programmed is designed for image retouchers with average skills for example, and applications designed for advanced users may permit the user to change the setting of g*.
- Abstract IRPs could be used whereby an IRP has weights equaling zero for the location dependent parameters, and values for g 1 . . . g n which would represent either black or white, combined with a Performing Function which does not affect the image.
- the Performing Functions F 5 and F 6 would also be functions that do not perform any image modification, so the IRPs 5 and 6 would ensure that colors such as black and white remain mainly unaffected by the IRPs that the user places.
- these Abstract IRPs can be implemented providing the user with the ability to turn checkboxes or similar user controls on or off. Such checkboxes control the specified function that the Abstract IRPs would have on the image.
- the application uses this Abstract IRP This process is referred to as “load abstract IRPs” in step 18 of FIG. 3 .
- Equation [23] is derived from equation [21]. Equation [22] could also be utilized for this embodiment.
- the current embodiment is useful for a variety of image filter types M, especially those that lead to unwanted image contrast when applied, causing what is known to those skilled in the art as “blown-out areas” of a digital image.
- image filters M could be color to black and white conversions, increasing the overall contrast, inverting the image, applying a strong stylistic effect, a solarization filter, or other strong image modifications.
- the user can modify contrast and color of the image as the image modification M is applied, such as in the example of the black and white conversion, thus accelerating the method of application by the user for the black and white conversion process and providing improved results.
- the user would define such an Offset Vector of an IRP for instance by defining a direction and a length, or by dragging an IRP symbol with a mouse button different from the standard mouse button.
- the mixing function for instance if derived from equation [21], would then be
- the user can easily attach IRPs to regions in the image and at the same time define in which directions the user wants these regions to be distorted or altered.
- the result of the mixing function is an offset matrix that contains information relating to in which direction a pixel of the original image I needs to be distorted to achieve the distorted image I d .
- the benefit of calculating the Offset Matrix this way is that the Offset Matrix adapts to the features of the image, provided that the vectors R 1 . . . m have weights other than zero for pixel luminosity, chrominance, and structure Characteristics.
- the image I d can be calculated the following way:
- a plurality or IRPs can be saved and applied to one or more different images. In batch processing applications, this plurality of IRPs can be stored and applied to multiple images. In such an embodiment, it is important that IRPs whose weights for location-dependent characteristics are zero.
- the user may be provided with simplified control over the weights of an IRP by using a unified control element.
- Equations [15] and Equations [16] five Characteristics are utilized, two of which are location dependent Characteristics sourcing from Location Analyzing Functions.
- This unified control element could be labeled “location weight,” instead of the two elements “horizontal location weight” and “vertical location weight.”
- user control elements may be implemented that display different values for the weights as textual descriptions instead of numbers, as such numbers are often confusing to users. Those skilled in the art will recognize that it may be confusing to users that low values for weights lead to IRPs that have more influence on the image, and vice versa.
- weights for location-dependent Characteristics such as w 1 and w 2 in the current example
- the user could be allowed to choose one out of five pre-defined weights for textual descriptions of different values for the location dependent weights w 1 and w 2 as show in Table 1.
- FIG. 5 illustrates how such simplified user control over weights may be implemented in an image processing program.
- the user control over weights could be simplified to such an extent that there are only two types of weights for IRPs that the user can choose from: “strong” that utilizes weight vectors such as (1,1,1,1,1) and “weak” that utilizes weight vectors such as (3,3,3,3,3). Note: As mentioned before, large weights make the area that an IRP has influence on smaller, and vice versa.
- the user may place IRPs in the sky with an associated enhancement to increase the saturation of an area identified by one or more IRPs.
- the user may place additional IRPs with an assigned function to decrease contrast, identifying changes in contrast and the desired changes in contrast based on the location of each individual IRP.
- IRPs may include a function that weights the intensity of the image-editing function as indicated by the user.
- IRPs could be placed to identify a color globally across the image, and using an associated command, increase the saturation of the identified color.
- IRPs could be used to provide varying degrees of sharpening across a digital image.
- multiple IRP's could be placed within specific image regions or image characteristics, such as the eyes, the skin, and hair of a portrait, and different sharpening intensities assigned to each IRP and applied to the digital image while considering the presence of color and/or contrast and the relative difference of each IRP from one another to provide the desired image adjustment.
- IRRs position reference points
- IRRs can be considered to a certain extent as “selections”, as their basic principle is to allow the user to circle an area of interest.
- IRRs are based upon IRPs, IRRs are significantly different from state-of-the-art selections as that the IRR performs only as a “region of interest”.
- the software does not apply the Performing Function exactly to those pixels of the IRR while excluding those pixels outside the IRR. Instead, the IRR is fed into the mixing function along with the IRPs. This leads to the effect that the Performing Function that is assigned to the IRR is applied adaptively to the image—it will show the same adaptive nature as IRPs.
- the user has more control over an IRR than over an IRP since the effect of an IRR will also roughly adapt to the shape of the Image Reference Region.
- IRRs fit into Mixing Functions in a very similar fashion as IRPs, which will be described later.
- the user interaction of an IRR is actually also similar to an IRP. While positioning an IRP on the image would typically be performed by the user by a mouse click at the point of interest, the region of an IRR can be defined by any suitable method to define a region, for instance:
- the graphical representation of an IRR could be implemented by displaying the margin of the ROI for instance by a dashed line (aka “marching ants”). If an implementation is preferred in which the dialog for parameter input and/or the input for the weights is displayed at the related position in the image (as shown in FIG. 5 ), this can easily be done by showing the related dialog at the margin of the IRR, showing the related dialog in the center of the IRR, or adding an icon to the IRR and showing the dialog connected or close to this icon.
- IRRs and IRPs and the associated Performing Function parameters e.g., image enhancement parameters
- FIG. 6 shows one possible application that allows for image editing using IRPs and IRRs.
- Tab 101 illustrates a means for switching between IRP tools and IRR tools. Note that IRPs and IRRs can coexist on one image (not shown here).
- Buttons 102 shows buttons that allow the user to create, remove, erase or move regions.
- Region 103 shows a region with connected sliders, see FIG. 7 for details.
- Area 104 shows a part of the image that is “outside” the user-drawn region boundaries.
- the image enhancements of the IRRs and IRPs will be blended into the image using a mixing function.
- Region 105 indicates the interior of an IRR, where the effect associated with that region will be applied at 100% or almost 100% weight.
- FIG. 6 shows the preview area, which would by default display a preview of the result and which could be scrollable and have other features known in image editing applications.
- An implementation could also automatically highlight the one or more IRPs or IRRs that influence the pixel that the user's pointing device is currently over (a mixing function will directly provide this information), so that the user can identify or activate the user interfaces of IRPs or IRRs via the image.
- FIG. 7 shows one possible implementation of the user control elements associated with a region. Region boundary 201 illustrates the border of the region, see FIG. 6 .
- Icon 202 represents a graphical icon that allows the user to grab, drag and relocate the user controls within the image, which would move the enhancement controls ( 202 - 205 , 207 - 210 ) but not the region boundary 201 .
- An icon like icon 202 can also be used to display characteristics of the enhancement type via its color, or it can be used to allow the user to show or hide the enhancement controls via a click or a double click.
- Sliders 203 shows sliders representing parameters of an image enhancement
- Icon 204 represents an icon representing a conventional context menu providing more features
- button 205 represents a button that allows the user further editing of the region
- connector 206 represent a flexible graphical connection between the region boundary and enhancement controls
- slider 207 represents a user control allowing the user to control the fuzziness (see “weight vector g” below) of the IRR.
- Title 208 illustrates a textual region description and icon 209 illustrates an icon that may allow the user to enlarge or shrink the interface, or to turn it into a resizable solid window, while descriptions 210 represents textual descriptions of the adjusted image enhancement parameters.
- image enhancement as used in this paragraph is understood as referring to the “Performing Function”.
- an “IRP image modification” is defined as: (F 1 . . . m ,R 1 . . . m , I, A 1 . . . n , D, V, C 1 . . . m ) [Equation 1 repeated]
- an area of interest can be associated with an IRP and the characteristics of a pixel can be derived from a plurality of pixels neighboring the pixel.
- This provides for basic region support, as then the distance function D will compare image pixels against the characteristics of a plurality of pixels neighboring the IRP pixel.
- R 1 . . . m can be either IRPs or IRR, any combination is possible.
- R i represents the user-defined margin, i.e., the slope or shape that the user sees on the screen.
- * is a scalar multiplication, not a matrix multiplication
- ⁇ . . . ⁇ is any norm, such as ⁇ . . . ⁇ 2
- R i is the i-th IRR
- I x,y is a pixel in the image I
- M n is an matrix the same size of I, see below
- C n is a matrix the same size of I, see below
- g is a weight vector as introduced in equation [14]
- g 1 is here a position weight
- g 2 , g 3 , g 4 are weights for the three channels red, green and blue
- IRRs and IRPs can coexist in an image modification as defined in equation [1].
- the image I and the matrix C can be a multiple-channel-image, each channel representing one of the characteristics A 1 . . . n . (Side-note: This would even work for position-dependent characteristics, but from a computational standpoint this wouldn't be wise).
- M n,x,y defines for every pixel a spatial distance between the given point x,y and the closest point along the margin of the region of the IRR R n . Therefore, within R n is an IRR not an IRP:
- the best approach may be an algorithm providing the pseudo-Euclidean distance, for instance as implemented as “BWDIST” in MatLab. More information on such algorithms can be found in Breu, Heinz, Joseph Gil, David Kirkpatrick, and Michael Werman, “Linear Time Euclidean Distance Transform Algorithms,” IEEE Transactions on Pattern Analysis and Machine Intelligence, Vol. 17, No. 5, May 1995, pp. 529-533.
- An even faster approach is to create a matrix that is filled with zeros at the region of interest (IRR) and with ones everywhere else, and to apply a convolution kernel to this area, for instance a large radius Gaussian convolution kernel.
- the values of the convolved matrix can be used as a simple approximation for a distance of a pixel to the IRR.
- C n,x,y is achieved with an inpainting routine by defining the area lying outside the region R n as the area to be inpainted, while the area inside the region is the region with “correct” image pixels that are supposed to remain unchanged.
- the inpainting process inpaints the data outside the region as opposed to (what's normally done) inside the region. It is more an “outpainting” routine than an inpainting routine.
- illustration 701 shows an image
- illustration 702 shows a user-defined region R n lying over the image.
- Illustration 703 shows the mask that is based on the user-defined region.
- Illustration 704 shows the matrix C n , where the pixels outside the area of R n were filled in using an inpainting algorithm.
- Illustration 705 shows M n , where white pixels represent zero distances and darker pixels represent higher distances. A pseudo-Euclidean distance routine was used here.
- Image 706 shows the resulting mask as it may be created using equation [21] or [22].
- the fuzzy margin is a wanted effect; if the user wants to prevent the mask from reaching into the sky then he has to use a second IRP or an IRR to constrain the sky from receiving an image modification.
- the results can be enhanced by applying a median filter to the pixels of the margin before calculating C. (i.e., if the margin has a width of one pixel, a one-dimensional median is needed). This would ensure that little imperfections would not affect the result. For instance, if a region is drawn on a sky and accidentally the line is drawn over a little branch, then the median filter would avoid artifacts in the result.
- While other image editing applications provide a means to make selections “smooth” or “feathered”, the provided invention even allows systems where the user can differentiate between different featherings via different weights. For instance, if a first slider (for instance named “selection smoothness”) is used to control position dependent weights (such as g 1 in equation 25) is implemented, along with a second slider (for instance “detail adaptation strength”) that is used to control the other weights, the user has control over a normal smoothing of the effect of an IRR as well as a detail-dependent smoothing strength of an IRR (same for IRPs as discussed earlier).
- selection smoothness position dependent weights
- a second slider for instance “detail adaptation strength”
- Another method for calculating a colormetrical distance between a given color of a pixel and the colors contained within a region is to create three histograms h r , h g , and h b for the pixels in the region. Then a one-dimensional Gaussian filter can be applied to the histograms. Then the entries in the histogram at the location of the given pixel are a surprisingly good measure for the colormetrical distance between given pixel and region.
- One further refinement of this is to use Lab or YCrCb instead of RGB.
- One further refinement would be to calculate a three-dimensional histogram h rgb and to blur this volume histogram with a three-dimensional Gaussian filter or other convolution filter suitable for smoothing.
- Illustration 801 shows how sliders can be connected to one region and how floating text can be used to illustrate the slider purpose and the current slider value to the users.
- Illustration 802 shows a scenario in which the user has obviously tried to draw a closed line, but the two ends do not match entirely.
- the computer can then assist the user by connecting the two lines automatically, indicated by the dashed line.
- Illustration 803 shows that the ends of such a curve can be connected to the image margin. It may be a good idea to prefer this method if the ends of the curve are closer to the margin than to one another.
- Illustration 804 shows two closed lines in one image that represent one IRR. In other words, the regions do not have to be connected. In an application, the user could define multiple close lines to be one region by holding down a modifier key, for example. Many implementations for this are possible. Note that this is not to be confused with joint and disjoint selections, as described below.
- Illustration 805 shows that regions with holes are also possible.
- Illustrations 806 , 807 and 808 show a process how a user might correct a shape.
- Illustration 806 shows a region.
- Illustration 807 shows an additional line drawn by the user for correction purposes, the ends of which are close to the already existing region.
- Illustration 808 shows the corrected region, where new line is made part of the new region. This means of course that one part of the line of the original region needs to be omitted, indicated by the dashed line in 808 .
- Illustration 809 shows how a region can be created with a brush.
- the thin line in the middle indicates the path along which a user has performed a brush stroke, while the thick line indicates the margin of the resulting region.
- the brush is assumed to have a quite high width, also known as brush tip radius.
- the region will behave comparable to an ordinary brush stroke with a soft margin (or, relating to illustration 801 , like a selection with a soft margin), while higher weights for C will bring out the adaptive nature of this region.
- the weights for C are set to zero, the provided invention has strong benefits over current technologies, since the amount of necessary interaction (mouse clicks, mouse movement, eye movement, masking, selecting tools, selecting region of interest, etc.) is drastically minimized when the controls are spatially and graphically connected to the region of interest.
- Illustration 810 shows a region plus a second, dashed line around the region. This second line indicates the “reach” of a region, defining how far this region reaches into the image. Illustration 810 also indicates that this “reach” or “fuzziness” or “effect radius” as it may be called can be influenced by the user, for instance using a mouse. If the user modifies the broadness of the “reach” of the region, this will affect the internal variable g 1 , which is a weight for the matrix Mn.
- Illustration 811 shows that in an image with many regions it may be a good idea to always position the sliders so that they do not overlap other regions. Therefore (or for other reasons) it may be wise to position the sliders so that they are positioned in some cases to the outside, in other cases to the inside of the region. It may even be allowed to the user that the sliders or image controls can be grabbed and repositioned with the mouse, while staying graphically connected to the region.
- Illustration 812 shows that a region can have advanced controls, such as curves or histograms.
- Other controls suitable to allow user-input of image-editing parameters such as buttons, check boxes, text entry fields, etc., are also possible.
- Illustration 813 shows intelligent region processing. Since most IRRs will enclose many different colors and structures (as opposed to an IRP, which is typically positioned only on one color), it is possible to analyze the structure of the pixels enclosed in the IRR and to use these data to enhance the region. For instance, it is possible that an “Auto-Levels” routine can be applied via an IRR.
- the local statistics could be something like a histogram, average values, or the variance within the region. This will allow the user to modify local histograms. Another method would be:
- the user could use a slider named “spread histogram” reaching from 0% to 100%, and depending on the slider setting, the image modification would spread the histogram within the region (while the effect reaches outside of the region), without the user needing to actually see the histogram.
- Illustration 814 shows that the controls need not be positioned at the location of or superimposed over the regions, they can also be positioned to the side of the image or in a separate window. They can be associated with a certain region via a number, an icon, or by highlighting the region in the image the controls of which are currently being edited.
- Illustration 815 and 816 show that a region can also be suggested to the user by defining the region as that connected region of pixels that are similar (with a certain tolerance) to the pixel that the user clicked on. This means: the user just clicks on the image and the region expands automatically, so that the user then may have a good region already or at least a good starting point for further refining.
- Illustration 817 illustrates that a user may also want to follow a different workflow. He first may want to split up the image into various regions, and then in a second step the user can assign control operations to some or all of the regions. This would function with the same mathematical implementation, but it would allow a more flexible workflow for the user. In other words, the user would first draw separator lines into the image in order to roughly divide the image into regions, and then the user would apply changes, so that a mixing function determines the effect strength in the area of said separator lines. If the separator lines are thin, each distance matrix M can be calculated using a convolution kernel, as explained above.
- Illustration 818 shows that in some cases the regions can touch one another. This is already supported by the provided math. However, it may be desirable that—even although the regions touch—there is a smooth transition added to the area where the regions touch. This can for instance be done by applying a Gaussian blur to the matrixes Ma and Mb, where a,b represent the indices of the two IRRs Ra, Rb which touch. This blurring ensures that even with touching regions, some sort of smooth transition from one effect to the other can be achieved. In other words: This blurring ensures that the adaptive nature of a region does not only occur to the outside of a region, but also a bit towards the inside of a region. To achieve this effect even more, Ca and Cb can also be blurred.
- Illustration 819 shows that in addition to the user-drawn region, the actually affected area can also be shown by showing a second line which denotes the margin in the pixels where the strength of the effect drops under a certain value.
- Illustration 820 shows that a checkbox can be associated with a region.
- the user can define whether or not the user wants a joint vs. a disjoint selection. For instance, if the user paints a region into a sky above trees, the user certainly wants all small patches of sky that are visible between the trees also to be selected. This requires a disjoint selection. However, if the user wants to select just one flower within a field of many, he wants just a single joint selection for the flower, and no patches of selection to affect any pieces of other flowers. The user can adjust this with a checkbox.
- a joint mask is a mask that has no local maxima outside the boundary R n of the region, and it is disjoint otherwise.
- FIG. 13 a shows such a mask U 1 including local maxima (one with value 255 and two with values 254)
- FIG. 13 b shows such a mask U 2 after the routine above was applied.
- the shaded area of maximal value 255 is kept, while local maxima with value 254 to the right are eroded. This process removes isolated patches in the mask without creating a sharp discontinuity.
- the user can use conventional masking tools (such as a lasso, a brush) to blend between U 1 and U 2 .
- conventional masking tools such as a lasso, a brush
- the user would have a tool that empowers him to remove disjoint patches in certain parts of the generated selection while leaving the selection disjoint in other areas. This may be helpful when for instance selecting an object that is fuzzy to its one side and clearly differentiated to its other side.
- a slider can be provided that would then blend uniformly between U 1 and U 2 .
- Illustrations 821 and 822 in FIG. 11 show how regions could be handled so that the line does not distract from the image. While the user can draw a line on the image representing a region, the line can for instance be hidden for the duration of editing, so that the user sees the full image while moving the sliders. In another embodiment, this can be supported by additionally showing an excerpt of the image showing a region in addition to the normal image preview. This can be done in another area of the main window, or in a floating palette, also often called “filter dialog window”.
- Illustration 823 shows that various regions can be shown in different colors or line styles. These colors or line styles can be user-defined, in case the user wants to set his own colors, may depend on the type of effect associated with a region, or may support the user in understanding what is one region and what are different regions (keep in mind that one region can consist of several closed lines).
- Illustration 824 displays a closed region and an “open region”, i.e., a simple line.
- an “open region” i.e., a simple line.
- users could create such lines. These may be very helpful for targeting prolonged objects, such as the stem of a flower, and ensuring that the effect of a closed region is limited at one side.
- illustration 824 shows a closed region with an effect (indicated by a slider moved by the mouse) while below the region there is a line with unmodified sliders. This could constrain the effect of the region from blending too much into the bottom part of the image.
- This invention is not limited to particular hardware described herein, and any hardware presently existing or developed in the future that permits processing of digital images using the method disclosed can be used, including for example, a digital camera system.
- a computer readable medium having contents for causing a computer-based information handling system to perform the steps described herein, and to display the application program interface disclosed herein.
- memory block refers to any possible computer-related image storage structure known to those skilled in the art, including but not limited to RAM, Processor Cache, Hard Drive, or combinations of those, including dynamic memory structures.
- the methods and application program interface disclosed will be embodied in a computer program (not shown) either by coding in a high level language, or by preparing a filter which is complied and available as an adjunct to an image processing program.
- the methods and application program interface is compiled into a plug-in filter that can operate within third party image processing programs such as Adobe Photoshop®.
- Any currently existing or future developed computer readable medium suitable for storing data can be used to store the programs embodying the afore-described interface, methods and algorithms, including, but not limited to hard drives, floppy disks, digital tape, flash cards, compact discs, and DVDs.
- the computer readable medium can comprise more than one device, such as two linked hard drives. This invention is not limited to the particular hardware used herein, and any hardware presently existing or developed in the future that permits image processing can be used.
- Any currently existing or future developed computer readable medium suitable for storing data can be used, including, but not limited to hard drives, floppy disks, digital tape, flash cards, compact discs, and DVDs.
- the computer readable medium can comprise more than one device, such as two linked hard drives, in communication with the processor.
- a method for image processing of a digital image comprising the steps of determining one or more sets of pixel characteristics; determining for each pixel characteristic set, an image editing function; providing a mixing function algorithm embodied on a computer-readable medium for modifying the digital image; and processing the digital image by applying the mixing function algorithm based on the one or more pixel characteristic sets and determined image editing functions.
- the mixing function algorithm comprises a difference function.
- the difference function algorithm calculates a value based on the difference of between pixel characteristics and one of the one or more determined pixel characteristic sets.
- the mixing function algorithm includes a controlling function for normalizing the calculations.
- the method adds the step of determining for each pixel characteristic set, a set of weighting values, and the processing step further comprises applying the mixing function algorithm based on the determined weighting value set.
- a first pixel characteristic set is determined, and at least one characteristic in the first pixel characteristic set is location dependent, and at least one characteristic in the first pixel characteristic set is either color dependent, or structure dependent, or both.
- a first pixel characteristic set is determined, and at least two different characteristics in the first pixel characteristic set are from the group consisting of location dependent, color dependent, and structure dependent.
- a method for processing of a digital image comprising the steps of receiving the coordinates of one or more than one image reference point defined by a user within the digital image; receiving one or more than one image editing function assigned by the user and associated with the coordinates of the one or more than one defined image reference point; providing a mixing function algorithm embodied on a computer-readable medium for modifying the digital image; and processing the digital image by applying the mixing function algorithm based on the one or more than one assigned image editing function and the coordinates of the one or more than one defined image reference point.
- the method may optionally further comprise displaying a graphical icon at the coordinates of a defined image reference point.
- a mixing function algorithm suitable to the invention has been described, and exemplar alternative embodiments are disclosed, including a group consisting of a Pythagoras distance approach which calculates a geometric distance between each pixel of the digital image to the coordinates of the one or more than one defined image reference point, a color curves approach, a segmentation approach, a classification approach, an expanding areas approach, and an offset vector approach.
- the segmentation approach comprises multiple segmentation, and additionally optionally the classification approach adjusts for similarity of pixel attributes.
- the mixing function algorithm may optionally operate as a function of the calculated geometric distance from each pixel of the digital image to the coordinates of the defined image reference points.
- the disclosed method further comprises receiving one or more assigned image characteristics associated with the coordinates of a defined image reference point, and wherein the mixing function algorithm calculates a characteristic difference between the image characteristics of a pixel of the digital image and the assigned image characteristics.
- the mixing function algorithm may also calculate a characteristic difference between the image characteristics of a pixel and the image characteristics of one or more pixels neighboring the coordinates of one or more defined image reference point.
- the method may further comprise receiving one or more weighting values, and the processing step further comprising applying the mixing function algorithm based on weighting values; or further comprise receiving one or more regions of interest associated with the coordinates of one or more defined image reference point; or further comprise the step of providing an application program interface comprising a first interface to receive the coordinates of the one or more defined image reference points, and a second interface to receive the one or more assigned image editing functions.
- a method for processing of a digital image comprising pixels having image characteristics comprising the steps defining the location of image reference points within the digital image; determining image editing functions; and processing the digital image by applying the determined image editing functions based upon either the location of the defined image reference points, or the image characteristics of the pixels at the location of the defined image reference points, or both.
- a method for image processing of a digital image comprising the steps of providing one or more than one image processing filter; setting the coordinates of one or more than one image reference point within the digital image; providing a mixing function algorithm embodied on a computer-readable medium for modifying the digital image; and processing the digital image by applying the mixing algorithm based on the one or more than one image processing filter and the coordinates of the one or more than one set image reference point.
- various filters may be used, including but not limited to a noise reduction filter, a sharpening filter, or a color change filter.
Abstract
Description
(F1 . . . m, R1 . . . m, I, A1 . . . n, D, V, C1 . . . m) [1]
I′ xy =F(I,x,y) [2]
((g1 . . . gn),g*,(w1 . . . wn)) [3]
A n(I,x,y)=k [4]
d=D((a 1 . . . n), (b 1 . . . n), (w 1 . . . n)) [5]
D((a 1 . . . n), (b 1 . . . n), (w 1 . . . n))=∥ (a 1 *w 1 −b 1 *w 1), . . . , (a n *w n −b n *w n) ∥ [6]
where ∥•∥ refers to any norm, such as the distance in Euclidian space, which is also known as ∥•∥2.
D((a 1 . . . n), (b 1 . . . n), (w 1 . . . n))=|a 1 −b 1 |*w 1 +|a 2 −b 2 |*w 2 + . . . +|a n −b n |*w n [7]
D((a 1 . . . n), (b 1 . . . n), (w 1 . . . n))2=(a 1 *w 1 −b 1 *w 1)2+ . . . +(a n *w n −b n *w n)2 [8]
D*((a 1 . . . n), (b 1 . . . n), (w 1 . . . n), g*)=D((a 1 . . . n), (b 1 . . . n), (w 1 . . . n))+g* [9]
-
- V(x)>0 for all x≧0
- V(y)<V(x) for all x<y for all x, y≧0
- lim x→∞ of V(x)=0.
V(x)=0.5(x/t) [12]
C i(p 1 . . . p m)=p i/(p 1 +p 2 + . . . +p m) [13]
g 1 . . . g n =A 1(I,x,y) . . . A n(I,x,y) [14]
g*=0
w1 . . . wn=default value, for example, 1.
A 1(I,x,y)=x [15a]
A 2(I,x,y)=y [15b]
A 3(I,x,y)=I xy(r) [15c]
A 4(I,x,y)=I xy(g) [15d]
A 5(I,x,y)=I xy(b) [15e]
A 1(I,x,y)=x*100/X [16a]
A 2(I,x,y)=y*100/Y [16b]
A 3(I,x,y)=(I xy(r) +I xy(g) +I xy(b))*100/(R+G+B) [16c]
A 4(I,x,y)=100*(I xy(r) −I xy(g))/(R+G)+50 [16d]
A 5(I,x,y)=100*(I xy(r) −I xy(b))/(R+B)+50 [16e]
|R−I xy |=D*((g 1 . . . g n), (A 1(I,x,y), . . . , A n(I,x,y)), (w 1 , . . . , w n), g*) [17]
|R−I xy |=D((g 1 . . . g n), (A 1(I,x,y), . . . , A n(I,x,y)), (w 1 , . . . , w n)) [18]
|R−I xy |=
|R−I xy |=
-
- R5=((0,0,255,255,255), 0, (0,0,1,1,1))
- R6=((0,0,0,0,0), 0, (0,0,1,1,1))
-
- (1) Reserve some memory space for Id, and flag all of its pixels.
- (2) Select the first coordinate (x,y) in I.
- (3) Write the values (such as r,g,b) of the pixel Ixy into the picture Id at the location (x,y)+Sxy, and un-flag the pixel at that location in Id.
- (4) Unless all pixels in I are considered, select next coordinate (x,y) and proceed with step (3).
- (5) Select first pixel in Id that is still flagged.
- (6) Assign the values (such as r,g,b) of the closest non-flagged pixel to this pixel. If multiple non-flagged pixels are equally close, select the values of that pixel that was created using the lowest Offset Vector Sxy.
- (7) If flagged pixels are left, select next flagged pixel in Id and proceed with step (6).
TABLE 1 | |||
w1 | w2 | ||
“global” | 0 | 0 | ||
“almost global” | 0.3 | 0.3 | ||
“default” | 1 | 1 | ||
“local” | 3 | 3 | ||
“very local” | 8 | 8 | ||
-
- allowing the user to define a polygon by successively defining the edges of a polygon with mouse clicks,
- allowing the user to perform brush strokes over the region of interest,
- allowing the user to circle the region of interest with a mouse,
- allowing the user to circle the region of interest with a mouse while supporting the user with a magnetic edge-adapting functionality.
(F1 . . . m,R1 . . . m, I, A1 . . . n, D, V, C1 . . . m) [
|R i −I x,y |=∥M n,x,y *g 1+(I x,y,r −C x,y,r)*g 2+ . . . +(I x,y,b −C x,y,b)*g 4∥ [25]
-
- receive IRR region from user,
- derive local statistics from region pixels,
- display local statistics to user, and
- receive image modification from user,
-
- receive IRR region from user,
- receive user input, and
- derive image modification from user input and local statistics.
Claims (34)
Priority Applications (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US11/832,599 US7602991B2 (en) | 2001-10-24 | 2007-08-01 | User definable image reference regions |
US12/577,176 US8064725B2 (en) | 2001-10-24 | 2009-10-10 | Distortion of digital images using spatial offsets |
Applications Claiming Priority (7)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US33649801P | 2001-10-24 | 2001-10-24 | |
US10/280,897 US6728421B2 (en) | 2001-10-24 | 2002-10-24 | User definable image reference points |
US10/824,664 US6865300B2 (en) | 2001-10-24 | 2004-04-13 | User definable image reference points |
US11/072,609 US7031547B2 (en) | 2001-10-24 | 2005-03-03 | User definable image reference points |
US11/279,958 US7602968B2 (en) | 2001-10-24 | 2006-04-17 | Overlaid graphical user interface and method for image processing |
US82112006P | 2006-08-01 | 2006-08-01 | |
US11/832,599 US7602991B2 (en) | 2001-10-24 | 2007-08-01 | User definable image reference regions |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US11/279,958 Continuation-In-Part US7602968B2 (en) | 2001-10-24 | 2006-04-17 | Overlaid graphical user interface and method for image processing |
Related Child Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US12/577,176 Continuation US8064725B2 (en) | 2001-10-24 | 2009-10-10 | Distortion of digital images using spatial offsets |
Publications (2)
Publication Number | Publication Date |
---|---|
US20080137952A1 US20080137952A1 (en) | 2008-06-12 |
US7602991B2 true US7602991B2 (en) | 2009-10-13 |
Family
ID=46329099
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US11/832,599 Expired - Lifetime US7602991B2 (en) | 2001-10-24 | 2007-08-01 | User definable image reference regions |
US12/577,176 Expired - Fee Related US8064725B2 (en) | 2001-10-24 | 2009-10-10 | Distortion of digital images using spatial offsets |
Family Applications After (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US12/577,176 Expired - Fee Related US8064725B2 (en) | 2001-10-24 | 2009-10-10 | Distortion of digital images using spatial offsets |
Country Status (1)
Country | Link |
---|---|
US (2) | US7602991B2 (en) |
Cited By (23)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20090201310A1 (en) * | 2008-02-11 | 2009-08-13 | Apple Inc. | Adjusting color attribute of an image in a non-uniform way |
US20090297031A1 (en) * | 2008-05-28 | 2009-12-03 | Daniel Pettigrew | Selecting a section of interest within an image |
US20090297034A1 (en) * | 2008-05-28 | 2009-12-03 | Daniel Pettigrew | Tools for selecting a section of interest within an image |
US20100027908A1 (en) * | 2001-10-24 | 2010-02-04 | Nik Software, Inc. | Distortion of Digital Images Using Spatial Offsets From Image Reference Points |
US20100039448A1 (en) * | 2001-10-24 | 2010-02-18 | Nik Software, Inc. | Distortion of Digital Images Using Spatial Offsets |
US20100245584A1 (en) * | 2009-03-31 | 2010-09-30 | Pelco, Inc. | Method and apparatus for creating a zone of interest in a video display |
US20100278424A1 (en) * | 2009-04-30 | 2010-11-04 | Peter Warner | Automatically Extending a Boundary for an Image to Fully Divide the Image |
US20110234654A1 (en) * | 2008-10-02 | 2011-09-29 | Sung-Jin Park | Picture quality control method and image display using same |
US20120206490A1 (en) * | 2011-02-15 | 2012-08-16 | Satoshi Hikida | Print data creating apparatus, print data creating method, and computer program product |
US20120250996A1 (en) * | 2011-03-31 | 2012-10-04 | Casio Computer Co., Ltd. | Image processing apparatus, image processing method, and storage medium |
US20130121569A1 (en) * | 2009-09-14 | 2013-05-16 | Vikas Yadav | Methods and Apparatus for Blending Images |
US8582834B2 (en) | 2010-08-30 | 2013-11-12 | Apple Inc. | Multi-image face-based image processing |
US8619093B2 (en) | 2010-07-20 | 2013-12-31 | Apple Inc. | Keying an image |
US20140040796A1 (en) * | 2009-01-09 | 2014-02-06 | Joseph Tighe | Interacting with graphical work areas |
US8675009B2 (en) | 2010-07-20 | 2014-03-18 | Apple Inc. | Keying an image in three dimensions |
US8743139B2 (en) | 2010-07-20 | 2014-06-03 | Apple Inc. | Automatically keying an image |
US8760464B2 (en) | 2011-02-16 | 2014-06-24 | Apple Inc. | Shape masks |
US8823726B2 (en) | 2011-02-16 | 2014-09-02 | Apple Inc. | Color balance |
US8854370B2 (en) | 2011-02-16 | 2014-10-07 | Apple Inc. | Color waveform |
US9202433B2 (en) | 2012-03-06 | 2015-12-01 | Apple Inc. | Multi operation slider |
US10282055B2 (en) | 2012-03-06 | 2019-05-07 | Apple Inc. | Ordered processing of edits for a media editing application |
US10552016B2 (en) | 2012-03-06 | 2020-02-04 | Apple Inc. | User interface tools for cropping and straightening image |
US10936173B2 (en) | 2012-03-06 | 2021-03-02 | Apple Inc. | Unified slider control for modifying multiple image properties |
Families Citing this family (28)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
WO2010020921A2 (en) * | 2008-08-20 | 2010-02-25 | Koninklijke Philips Electronics N.V. | Blanking of image regions |
US10152951B2 (en) | 2011-02-28 | 2018-12-11 | Varian Medical Systems International Ag | Method and system for interactive control of window/level parameters of multi-image displays |
US9213460B2 (en) * | 2012-01-20 | 2015-12-15 | Cimpress Schweiz Gmbh | Visual editing tool buffer region |
CN103793150B (en) * | 2012-10-31 | 2017-08-25 | 腾讯科技（深圳）有限公司 | Image-selecting method and system |
US9161061B2 (en) | 2013-03-15 | 2015-10-13 | Pictech Management Limited | Data storage and exchange device for color space encoded images |
US9117151B2 (en) * | 2013-03-15 | 2015-08-25 | Pictech Management Limited | Information exchange using color space encoded image |
US9152830B2 (en) * | 2013-03-15 | 2015-10-06 | Pictech Management Limited | Color restoration for color space encoded image |
US9386185B2 (en) | 2013-03-15 | 2016-07-05 | Pictech Management Limited | Encoding large documents using color space encoded image with color correction using a pseudo-euclidean metric in the color space |
US9027842B2 (en) | 2013-03-15 | 2015-05-12 | Pictech Management Limited | Broadcasting independent of network availability using color space encoded image |
US9189721B2 (en) | 2013-03-15 | 2015-11-17 | Pictech Management Limited | Data backup using color space encoded image |
US9161062B2 (en) | 2013-03-15 | 2015-10-13 | Pictech Management Limited | Image encoding and decoding using color space |
US9042663B2 (en) | 2013-03-15 | 2015-05-26 | Pictech Management Limited | Two-level error correcting codes for color space encoded image |
US9014473B2 (en) | 2013-03-15 | 2015-04-21 | Pictech Management Limited | Frame of color space encoded image for distortion correction |
US9159011B2 (en) * | 2013-03-15 | 2015-10-13 | Pictech Management Limited | Information broadcast using color space encoded image |
US9396169B2 (en) | 2013-03-15 | 2016-07-19 | Pictech Management Limited | Combination book with e-book using color space encoded image with color correction using a pseudo-euclidean metric in the color space |
US9027843B2 (en) | 2013-03-15 | 2015-05-12 | Pictech Management Limited | Information exchange display using color space encoded image |
US9129346B2 (en) * | 2013-03-15 | 2015-09-08 | Pictech Management Limited | Image fragmentation for distortion correction of color space encoded image |
US9152613B2 (en) | 2013-03-15 | 2015-10-06 | Pictech Management Limited | Self-publication using color space encoded image |
US8973844B2 (en) | 2013-03-15 | 2015-03-10 | Pictech Management Limited | Information exchange using photo camera as display for color space encoded image |
US9147143B2 (en) | 2013-03-15 | 2015-09-29 | Pictech Management Limited | Book using color space encoded image |
USD745039S1 (en) * | 2013-09-03 | 2015-12-08 | Samsung Electronics Co., Ltd. | Display screen or portion thereof with animated graphical user interface |
USD800756S1 (en) * | 2015-12-24 | 2017-10-24 | Samsung Electronics Co., Ltd. | Display screen or portion thereof with transitional graphical user interface |
EP3460747B1 (en) * | 2017-09-25 | 2023-09-06 | Vestel Elektronik Sanayi ve Ticaret A.S. | Method, processing system and computer program for processing an image |
US10740881B2 (en) * | 2018-03-26 | 2020-08-11 | Adobe Inc. | Deep patch feature prediction for image inpainting |
JP2021093719A (en) * | 2019-12-09 | 2021-06-17 | キヤノン株式会社 | Image processing apparatus, image processing method, and program |
CN110992406B (en) * | 2019-12-10 | 2024-04-30 | 张家港赛提菲克医疗器械有限公司 | Radiotherapy patient positioning rigid body registration algorithm based on region of interest |
US11315291B1 (en) * | 2021-01-29 | 2022-04-26 | International Business Machines Corporation | Shine visualization |
KR102573822B1 (en) * | 2021-02-04 | 2023-09-04 | (주)비케이 | Method for changing style and replaying of vector image |
Citations (18)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
JPH07162677A (en) | 1993-12-08 | 1995-06-23 | Toshiba Corp | Picture input device |
US5506946A (en) | 1991-10-01 | 1996-04-09 | Electronics For Imaging, Inc. | Selective color correction |
JPH1091761A (en) | 1996-09-17 | 1998-04-10 | Fuji Photo Film Co Ltd | Picture processor |
EP0886437A2 (en) | 1997-06-17 | 1998-12-23 | Seiko Epson Corporation | Method and apparatus for colour adjustment |
JPH11146219A (en) | 1997-11-13 | 1999-05-28 | Seiko Epson Corp | Image processing device and method and medium recording image processing program |
JP2000151985A (en) | 1998-11-12 | 2000-05-30 | Konica Corp | Picture processing method and recording medium |
US6175663B1 (en) | 1998-02-24 | 2001-01-16 | Paravision Imaging, Inc. | Method and apparatus for preserving background continuity in images |
JP2001067469A (en) | 1999-08-30 | 2001-03-16 | Nisshinbo Ind Inc | Method for image processing by computer |
US6229544B1 (en) * | 1997-09-09 | 2001-05-08 | International Business Machines Corporation | Tiled image editor |
US6301586B1 (en) * | 1997-10-06 | 2001-10-09 | Canon Kabushiki Kaisha | System for managing multimedia objects |
US6335733B1 (en) * | 1998-05-21 | 2002-01-01 | International Business Machines Corporation | Method and system for displaying and editing a resource schedule |
US6466228B1 (en) * | 1994-05-16 | 2002-10-15 | Apple Computer, Inc. | Pattern and color abstraction in a graphical user interface |
US6480203B1 (en) * | 1999-03-19 | 2002-11-12 | Corel Inc. | System and method for processing an event of a graphical object |
US20030095697A1 (en) * | 2000-11-22 | 2003-05-22 | Wood Susan A. | Graphical user interface for display of anatomical information |
US6710782B2 (en) * | 1994-05-16 | 2004-03-23 | Apple Computer, Inc. | Data driven layout engine |
US6728421B2 (en) * | 2001-10-24 | 2004-04-27 | Nik Multimedia, Inc. | User definable image reference points |
US6941359B1 (en) * | 2001-02-14 | 2005-09-06 | Nortel Networks Limited | Method and system for visually representing network configurations |
US7013028B2 (en) * | 2000-08-09 | 2006-03-14 | Semiconductor Insights Inc. | Advanced schematic editor |
Family Cites Families (63)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4881130A (en) | 1987-12-07 | 1989-11-14 | Ricoh Company, Ltd. | Image editing system for an image recording apparatus with the capability of marking an edited image area in the form of a vector |
GB9010594D0 (en) | 1989-05-17 | 1990-07-04 | Quantel Ltd | Electronic image processing |
DE4206840C2 (en) | 1991-03-05 | 1997-05-22 | Ricoh Kk | Device for generating a composite image |
JP3082289B2 (en) | 1991-05-14 | 2000-08-28 | 富士ゼロックス株式会社 | Image processing device |
JP3138492B2 (en) | 1991-05-15 | 2001-02-26 | 株式会社リコー | Image forming device |
JPH05145735A (en) | 1991-10-16 | 1993-06-11 | Fuji Xerox Co Ltd | Image processor provided with insert synthesizing function |
JPH05108288A (en) | 1991-10-17 | 1993-04-30 | Fuji Xerox Co Ltd | Information classification backup device |
JP2790562B2 (en) | 1992-01-06 | 1998-08-27 | 富士写真フイルム株式会社 | Image processing method |
US5404439A (en) | 1992-04-15 | 1995-04-04 | Xerox Corporation | Time-space object containment for graphical user interface |
EP0566293B1 (en) | 1992-04-15 | 2003-07-16 | Xerox Corporation | Graphical drawing and editing systems and methods therefor |
US5404316A (en) | 1992-08-03 | 1995-04-04 | Spectra Group Ltd., Inc. | Desktop digital video processing system |
US5319742A (en) | 1992-08-04 | 1994-06-07 | International Business Machines Corporation | Image enhancement with mask having fuzzy edges |
US5490239A (en) | 1992-10-01 | 1996-02-06 | University Corporation For Atmospheric Research | Virtual reality imaging system |
US5425137A (en) | 1993-01-26 | 1995-06-13 | Us Jvc Corporation | System and method for processing images using computer-implemented software objects representing lenses |
US5489921A (en) | 1993-04-08 | 1996-02-06 | Linotype-Hell Ag | Method for generating uniform color area definitions with addition and removal operators |
US5471572A (en) | 1993-07-09 | 1995-11-28 | Silicon Graphics, Inc. | System and method for adding detail to texture imagery in computer generated interactive graphics |
US5581670A (en) | 1993-07-21 | 1996-12-03 | Xerox Corporation | User interface having movable sheet with click-through tools |
CA2124624C (en) | 1993-07-21 | 1999-07-13 | Eric A. Bier | User interface having click-through tools that can be composed with other tools |
US5818455A (en) | 1993-07-21 | 1998-10-06 | Xerox Corporation | Method and apparatus for operating on the model data structure of an image to produce human perceptible output using a viewing operation region having explicit multiple regions |
US5542003A (en) | 1993-09-13 | 1996-07-30 | Eastman Kodak | Method for maximizing fidelity and dynamic range for a region of interest within digitized medical image display |
US5473740A (en) | 1993-12-29 | 1995-12-05 | International Business Machines Corporation | Method and apparatus for interactively indicating image boundaries in digital image cropping |
US5734761A (en) | 1994-06-30 | 1998-03-31 | Xerox Corporation | Editing scanned document images using simple interpretations |
US5715416A (en) | 1994-09-30 | 1998-02-03 | Baker; Michelle | User definable pictorial interface for a accessing information in an electronic file system |
US5623592A (en) | 1994-10-18 | 1997-04-22 | Molecular Dynamics | Method and apparatus for constructing an iconic sequence to operate external devices |
JPH08241407A (en) | 1995-01-31 | 1996-09-17 | Internatl Business Mach Corp <Ibm> | Spatial filter processing system of digital color image |
JP3355596B2 (en) | 1995-06-06 | 2002-12-09 | インターナショナル・ビジネス・マシーンズ・コーポレーション | Graphics device and display method |
JPH0951422A (en) | 1995-08-09 | 1997-02-18 | Minolta Co Ltd | Image edit device |
JP3109421B2 (en) | 1995-09-08 | 2000-11-13 | 富士ゼロックス株式会社 | Chart processing equipment |
US5923792A (en) | 1996-02-07 | 1999-07-13 | Industrial Technology Research Institute | Screen display methods for computer-aided data entry |
US5754348A (en) | 1996-05-14 | 1998-05-19 | Planetweb, Inc. | Method for context-preserving magnification of digital image regions |
US6038348A (en) | 1996-07-24 | 2000-03-14 | Oak Technology, Inc. | Pixel image enhancement system and method |
US5949429A (en) | 1996-11-14 | 1999-09-07 | Microsoft Corporation | Method for performing pixel addressing operations for a tiled image |
US6069626A (en) | 1997-02-27 | 2000-05-30 | International Business Machines Corporation | Method and apparatus for improved scrolling functionality in a graphical user interface utilizing a transparent scroll bar icon |
US6072501A (en) | 1997-06-27 | 2000-06-06 | Xerox Corporation | Method and apparatus for composing layered synthetic graphics filters |
US6043824A (en) | 1997-06-27 | 2000-03-28 | Xerox Corporation | Composing layered synthetic graphics filters with limited scopes of operation |
CN1126025C (en) | 1997-08-12 | 2003-10-29 | 松下电器产业株式会社 | Window display |
US6252579B1 (en) | 1997-08-23 | 2001-06-26 | Immersion Corporation | Interface device and method for providing enhanced cursor control with force feedback |
US6018332A (en) | 1997-11-21 | 2000-01-25 | Ark Interface Ii, Inc. | Overscan user interface |
US6330010B1 (en) | 1997-11-21 | 2001-12-11 | Xsides Corporation | Secondary user interface |
US6069629A (en) | 1997-11-25 | 2000-05-30 | Entelos, Inc. | Method of providing access to object parameters within a simulation model |
US6201548B1 (en) | 1998-02-24 | 2001-03-13 | Hewlett-Packard Company | Graphical user interface for image editing |
US6486914B1 (en) | 1998-02-27 | 2002-11-26 | Flashpoint Technology, Inc. | Method and system for controlling user interaction in a digital imaging device using dynamic overlay bars |
US6208753B1 (en) | 1998-02-27 | 2001-03-27 | International Business Machines Corporation | Quality of digitized images through post-scanning reregistration of their color planes |
US6504575B1 (en) | 1998-02-27 | 2003-01-07 | Flashpoint Technology, Inc. | Method and system for displaying overlay bars in a digital imaging device |
US6130676A (en) | 1998-04-02 | 2000-10-10 | Avid Technology, Inc. | Image composition system and process using layers |
US6850249B1 (en) | 1998-04-03 | 2005-02-01 | Da Vinci Systems, Inc. | Automatic region of interest tracking for a color correction system |
US6681056B1 (en) | 1999-03-30 | 2004-01-20 | International Business Machines Corporation | Method and system for digital image acquisition and continuous zoom display from multiple resolutional views using a heterogeneous image pyramid representation |
US6982695B1 (en) | 1999-04-22 | 2006-01-03 | Palmsource, Inc. | Method and apparatus for software control of viewing parameters |
US7136790B1 (en) | 1999-08-09 | 2006-11-14 | General Electric Company | Method, system, and program product for enabling design of products having a visual effect |
US20020118209A1 (en) | 1999-09-21 | 2002-08-29 | Hylen Steve H.L. | Computer program product for introducing painting effects into a digitized photographic image |
US6792158B1 (en) | 1999-10-28 | 2004-09-14 | Hewlett-Packard Development Company, L.P. | System and method for image enhancement |
JP2003521061A (en) | 2000-01-25 | 2003-07-08 | オートデスク，インコーポレイテッド | Method and apparatus for providing and processing access to architectural drawings on the internet |
US7027663B2 (en) | 2000-02-11 | 2006-04-11 | Sony Corporation | Masking tool |
US6677964B1 (en) | 2000-02-18 | 2004-01-13 | Xsides Corporation | Method and system for controlling a complementary user interface on a display surface |
US6804406B1 (en) | 2000-08-30 | 2004-10-12 | Honeywell International Inc. | Electronic calibration for seamless tiled display using optical function generator |
US6868190B1 (en) | 2000-10-19 | 2005-03-15 | Eastman Kodak Company | Methods for automatically and semi-automatically transforming digital image data to provide a desired image look |
AU3072902A (en) | 2000-12-18 | 2002-07-01 | Wireless Valley Comm Inc | Textual and graphical demarcation of location, and interpretation of measurements |
US6801227B2 (en) | 2001-01-16 | 2004-10-05 | Siemens Medical Solutions Health Services Inc. | System and user interface supporting user navigation and concurrent application operation |
US20030020733A1 (en) | 2001-07-24 | 2003-01-30 | Yin Memphis Zhihong | Computer display having selective area magnification |
US7602991B2 (en) | 2001-10-24 | 2009-10-13 | Nik Software, Inc. | User definable image reference regions |
US6897879B2 (en) | 2002-03-14 | 2005-05-24 | Microsoft Corporation | Hardware-enhanced graphics acceleration of pixel sub-component-oriented images |
US7009600B2 (en) | 2002-09-19 | 2006-03-07 | International Business Machines Corporation | Data processing system display screen including an image alteration area |
US7346226B2 (en) | 2003-12-16 | 2008-03-18 | Genesis Microchip Inc. | Method and apparatus for MPEG artifacts reduction |
-
2007
- 2007-08-01 US US11/832,599 patent/US7602991B2/en not_active Expired - Lifetime
-
2009
- 2009-10-10 US US12/577,176 patent/US8064725B2/en not_active Expired - Fee Related
Patent Citations (22)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5506946A (en) | 1991-10-01 | 1996-04-09 | Electronics For Imaging, Inc. | Selective color correction |
US5638496A (en) | 1993-12-08 | 1997-06-10 | Kabushiki Kaisha Toshiba | Color image input apparatus having color image identifying function |
JPH07162677A (en) | 1993-12-08 | 1995-06-23 | Toshiba Corp | Picture input device |
US6710782B2 (en) * | 1994-05-16 | 2004-03-23 | Apple Computer, Inc. | Data driven layout engine |
US6466228B1 (en) * | 1994-05-16 | 2002-10-15 | Apple Computer, Inc. | Pattern and color abstraction in a graphical user interface |
JPH1091761A (en) | 1996-09-17 | 1998-04-10 | Fuji Photo Film Co Ltd | Picture processor |
EP0886437A2 (en) | 1997-06-17 | 1998-12-23 | Seiko Epson Corporation | Method and apparatus for colour adjustment |
US6535301B1 (en) | 1997-06-17 | 2003-03-18 | Seiko Epson Corporation | Image processing apparatus, image processing method, image processing program recording medium, color adjustment method, color adjustment device, and color adjustment control program recording medium |
US6229544B1 (en) * | 1997-09-09 | 2001-05-08 | International Business Machines Corporation | Tiled image editor |
US6301586B1 (en) * | 1997-10-06 | 2001-10-09 | Canon Kabushiki Kaisha | System for managing multimedia objects |
JPH11146219A (en) | 1997-11-13 | 1999-05-28 | Seiko Epson Corp | Image processing device and method and medium recording image processing program |
US6175663B1 (en) | 1998-02-24 | 2001-01-16 | Paravision Imaging, Inc. | Method and apparatus for preserving background continuity in images |
US6335733B1 (en) * | 1998-05-21 | 2002-01-01 | International Business Machines Corporation | Method and system for displaying and editing a resource schedule |
JP2000151985A (en) | 1998-11-12 | 2000-05-30 | Konica Corp | Picture processing method and recording medium |
US6480203B1 (en) * | 1999-03-19 | 2002-11-12 | Corel Inc. | System and method for processing an event of a graphical object |
JP2001067469A (en) | 1999-08-30 | 2001-03-16 | Nisshinbo Ind Inc | Method for image processing by computer |
US7013028B2 (en) * | 2000-08-09 | 2006-03-14 | Semiconductor Insights Inc. | Advanced schematic editor |
US20030095697A1 (en) * | 2000-11-22 | 2003-05-22 | Wood Susan A. | Graphical user interface for display of anatomical information |
US6941359B1 (en) * | 2001-02-14 | 2005-09-06 | Nortel Networks Limited | Method and system for visually representing network configurations |
US6728421B2 (en) * | 2001-10-24 | 2004-04-27 | Nik Multimedia, Inc. | User definable image reference points |
US6865300B2 (en) * | 2001-10-24 | 2005-03-08 | Nik Multimedia, Inc. | User definable image reference points |
US7031547B2 (en) * | 2001-10-24 | 2006-04-18 | Nik Software, Inc. | User definable image reference points |
Non-Patent Citations (1)
Title |
---|
Chiyo Date et al., Sentakuhanni-hen, Mac Fan Special 14, Feb. 22, 2001, pp. 51-70, Mainichi Communications, Japan. |
Cited By (46)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8064725B2 (en) | 2001-10-24 | 2011-11-22 | Nik Software, Inc. | Distortion of digital images using spatial offsets |
US10140682B2 (en) | 2001-10-24 | 2018-11-27 | Google Llc | Distortion of digital images using spatial offsets from image reference points |
US7970233B2 (en) * | 2001-10-24 | 2011-06-28 | Nik Software, Inc. | Distortion of digital images using spatial offsets from image reference points |
US20100027908A1 (en) * | 2001-10-24 | 2010-02-04 | Nik Software, Inc. | Distortion of Digital Images Using Spatial Offsets From Image Reference Points |
US20100039448A1 (en) * | 2001-10-24 | 2010-02-18 | Nik Software, Inc. | Distortion of Digital Images Using Spatial Offsets |
US20150130831A1 (en) * | 2001-10-24 | 2015-05-14 | Google Inc. | Distortion of digital images using spatial offsets from image reference points |
US9471998B2 (en) * | 2001-10-24 | 2016-10-18 | Google Inc. | Distortion of digital images using spatial offsets from image reference points |
US9008420B2 (en) | 2001-10-24 | 2015-04-14 | Google Inc. | Distortion of digital images using spatial offsets from image reference points |
US8625925B2 (en) | 2001-10-24 | 2014-01-07 | Google Inc. | Distortion of digital images using spatial offsets from image reference points |
US9786031B2 (en) * | 2001-10-24 | 2017-10-10 | Google Inc. | Distortion of digital images using spatial offsets from image reference points |
US20100303379A1 (en) * | 2001-10-24 | 2010-12-02 | Nik Software, Inc. | Distortion of digital images using spatial offsets from image reference points |
US20090201310A1 (en) * | 2008-02-11 | 2009-08-13 | Apple Inc. | Adjusting color attribute of an image in a non-uniform way |
US9639965B2 (en) | 2008-02-11 | 2017-05-02 | Apple Inc. | Adjusting color attribute of an image in a non-uniform way |
US8638338B2 (en) | 2008-02-11 | 2014-01-28 | Apple Inc. | Adjusting color attribute of an image in a non-uniform way |
US8280171B2 (en) | 2008-05-28 | 2012-10-02 | Apple Inc. | Tools for selecting a section of interest within an image |
US20090297031A1 (en) * | 2008-05-28 | 2009-12-03 | Daniel Pettigrew | Selecting a section of interest within an image |
US8452105B2 (en) | 2008-05-28 | 2013-05-28 | Apple Inc. | Selecting a section of interest within an image |
US20090297034A1 (en) * | 2008-05-28 | 2009-12-03 | Daniel Pettigrew | Tools for selecting a section of interest within an image |
US8711187B2 (en) * | 2008-10-02 | 2014-04-29 | Lg Electronics Inc. | Picture quality control method and image display using same |
US20110234654A1 (en) * | 2008-10-02 | 2011-09-29 | Sung-Jin Park | Picture quality control method and image display using same |
US20140040796A1 (en) * | 2009-01-09 | 2014-02-06 | Joseph Tighe | Interacting with graphical work areas |
US20100245584A1 (en) * | 2009-03-31 | 2010-09-30 | Pelco, Inc. | Method and apparatus for creating a zone of interest in a video display |
US20100278424A1 (en) * | 2009-04-30 | 2010-11-04 | Peter Warner | Automatically Extending a Boundary for an Image to Fully Divide the Image |
US8885977B2 (en) | 2009-04-30 | 2014-11-11 | Apple Inc. | Automatically extending a boundary for an image to fully divide the image |
US8644644B2 (en) * | 2009-09-14 | 2014-02-04 | Adobe Systems Incorporation | Methods and apparatus for blending images |
US20130121569A1 (en) * | 2009-09-14 | 2013-05-16 | Vikas Yadav | Methods and Apparatus for Blending Images |
US8675009B2 (en) | 2010-07-20 | 2014-03-18 | Apple Inc. | Keying an image in three dimensions |
US8619093B2 (en) | 2010-07-20 | 2013-12-31 | Apple Inc. | Keying an image |
US8743139B2 (en) | 2010-07-20 | 2014-06-03 | Apple Inc. | Automatically keying an image |
US8582834B2 (en) | 2010-08-30 | 2013-11-12 | Apple Inc. | Multi-image face-based image processing |
US20120206490A1 (en) * | 2011-02-15 | 2012-08-16 | Satoshi Hikida | Print data creating apparatus, print data creating method, and computer program product |
US8891864B2 (en) | 2011-02-16 | 2014-11-18 | Apple Inc. | User-aided image segmentation |
US8854370B2 (en) | 2011-02-16 | 2014-10-07 | Apple Inc. | Color waveform |
US8823726B2 (en) | 2011-02-16 | 2014-09-02 | Apple Inc. | Color balance |
US8760464B2 (en) | 2011-02-16 | 2014-06-24 | Apple Inc. | Shape masks |
US9020255B2 (en) * | 2011-03-31 | 2015-04-28 | Casio Computer Co., Ltd. | Image processing apparatus, image processing method, and storage medium |
US20120250996A1 (en) * | 2011-03-31 | 2012-10-04 | Casio Computer Co., Ltd. | Image processing apparatus, image processing method, and storage medium |
US9886931B2 (en) | 2012-03-06 | 2018-02-06 | Apple Inc. | Multi operation slider |
US9202433B2 (en) | 2012-03-06 | 2015-12-01 | Apple Inc. | Multi operation slider |
US10282055B2 (en) | 2012-03-06 | 2019-05-07 | Apple Inc. | Ordered processing of edits for a media editing application |
US10545631B2 (en) | 2012-03-06 | 2020-01-28 | Apple Inc. | Fanning user interface controls for a media editing application |
US10552016B2 (en) | 2012-03-06 | 2020-02-04 | Apple Inc. | User interface tools for cropping and straightening image |
US10936173B2 (en) | 2012-03-06 | 2021-03-02 | Apple Inc. | Unified slider control for modifying multiple image properties |
US10942634B2 (en) | 2012-03-06 | 2021-03-09 | Apple Inc. | User interface tools for cropping and straightening image |
US11119635B2 (en) | 2012-03-06 | 2021-09-14 | Apple Inc. | Fanning user interface controls for a media editing application |
US11481097B2 (en) | 2012-03-06 | 2022-10-25 | Apple Inc. | User interface tools for cropping and straightening image |
Also Published As
Publication number | Publication date |
---|---|
US20100039448A1 (en) | 2010-02-18 |
US20080137952A1 (en) | 2008-06-12 |
US8064725B2 (en) | 2011-11-22 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US7602991B2 (en) | User definable image reference regions | |
US10140682B2 (en) | Distortion of digital images using spatial offsets from image reference points | |
AU2002336660A1 (en) | User definable image reference points | |
US8406482B1 (en) | System and method for automatic skin tone detection in images | |
US20130201202A1 (en) | Media editing with overlaid color adjustment tools | |
US20070172140A1 (en) | Selective enhancement of digital images | |
US10198794B2 (en) | System and method for adjusting perceived depth of an image | |
US20200364913A1 (en) | User guided segmentation network | |
JP6711020B2 (en) | Image processing apparatus, image processing method, image processing system and program | |
CA2768909C (en) | User definable image reference points | |
US8385634B1 (en) | Selecting and applying a color range in an image mask |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: NIK SOFTWARE, INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:KOKEMOHR, NILS;REEL/FRAME:019678/0689Effective date: 20070803 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:NIK SOFTWARE, INC.;REEL/FRAME:031372/0256Effective date: 20130723 |
|
FPAY | Fee payment |
Year of fee payment: 8 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044101/0610Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 12TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1553); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 12 |
EP2316078A2 - Messaging application with multiple viewports for presenting messages in different orders - Google Patents
Messaging application with multiple viewports for presenting messages in different ordersInfo
- Publication number
- EP2316078A2 EP2316078A2 EP09807109A EP09807109A EP2316078A2 EP 2316078 A2 EP2316078 A2 EP 2316078A2 EP 09807109 A EP09807109 A EP 09807109A EP 09807109 A EP09807109 A EP 09807109A EP 2316078 A2 EP2316078 A2 EP 2316078A2
- Authority
- EP
- European Patent Office
- Prior art keywords
- messages
- importance
- client device
- user
- subset
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Withdrawn
Links
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/14—Digital output to display device ; Cooperation and interconnection of the display device with other functional units
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L51/00—User-to-user messaging in packet-switching networks, transmitted according to store-and-forward or real-time protocols, e.g. e-mail
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F15/00—Digital computers in general; Data processing equipment in general
- G06F15/16—Combinations of two or more digital computers each having at least an arithmetic unit, a program unit and a register, e.g. for a simultaneous processing of several programs
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F17/00—Digital computing or data processing equipment or methods, specially adapted for specific functions
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04M—TELEPHONIC COMMUNICATION
- H04M3/00—Automatic or semi-automatic exchanges
- H04M3/42—Systems providing special services or facilities to subscribers
- H04M3/50—Centralised arrangements for answering calls; Centralised arrangements for recording messages for absent or busy subscribers ; Centralised arrangements for recording messages
- H04M3/53—Centralised arrangements for recording incoming messages, i.e. mailbox systems
- H04M3/533—Voice mail systems
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04M—TELEPHONIC COMMUNICATION
- H04M3/00—Automatic or semi-automatic exchanges
- H04M3/42—Systems providing special services or facilities to subscribers
- H04M3/50—Centralised arrangements for answering calls; Centralised arrangements for recording messages for absent or busy subscribers ; Centralised arrangements for recording messages
- H04M3/53—Centralised arrangements for recording incoming messages, i.e. mailbox systems
- H04M3/533—Voice mail systems
- H04M3/53333—Message receiving aspects
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04M—TELEPHONIC COMMUNICATION
- H04M3/00—Automatic or semi-automatic exchanges
- H04M3/42—Systems providing special services or facilities to subscribers
- H04M3/50—Centralised arrangements for answering calls; Centralised arrangements for recording messages for absent or busy subscribers ; Centralised arrangements for recording messages
- H04M3/53—Centralised arrangements for recording incoming messages, i.e. mailbox systems
- H04M3/533—Voice mail systems
- H04M3/53333—Message receiving aspects
- H04M3/5335—Message type or catagory, e.g. priority, indication
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L51/00—User-to-user messaging in packet-switching networks, transmitted according to store-and-forward or real-time protocols, e.g. e-mail
- H04L51/04—Real-time or near real-time messaging, e.g. instant messaging [IM]
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04M—TELEPHONIC COMMUNICATION
- H04M2201/00—Electronic components, circuits, software, systems or apparatus used in telephone systems
- H04M2201/12—Counting circuits
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04M—TELEPHONIC COMMUNICATION
- H04M2201/00—Electronic components, circuits, software, systems or apparatus used in telephone systems
- H04M2201/36—Memories
Definitions
- the disclosed embodiments relate generally to displaying messages, such as email, instant, and voicemail messages. More particularly, the disclosed embodiments relate to systems, methods, and computer programs for displaying ordered messages based on importance factors or scores that are determined from a user's interactions with the messages.
- a user account typically comprises all the messages sent to and from a respective email address or user name.
- some user accounts may be associated with a plurality of email addresses or user names, sometimes called aliases, which together may be considered to be a single logical email address or user name.
- the amount of received email can quickly overwhelm users - making it difficult to sift important messages from unimportant ones.
- message interfaces allow users to organize messages into folders or to apply user-defined labels to messages for easier identification.
- users may order messages in a particular view in accordance with the value of single user-selected message header field, such as message delivery date, sender, or message title.
- message delivery date such as message delivery date, sender, or message title.
- message title such as message delivery date, sender, or message title.
- a system displays messages from a single user account (i.e., the account of a respective user) in multiple viewports.
- Each viewport orders messages based on an importance score that is calculated based on the user's prior interactions with messages in his user account through that viewport.
- Each viewport associated with the user account orders messages using a distinct message importance model.
- a first client device displays messages in a viewport ordered by a first importance score calculation and a second client device displays messages from the same user account in a viewport ordered by a second importance score calculation.
- Importance predictive models are employed to generate the importance scores based on user interactions with messages.
- a client device displays messages in a viewport ordered by a first importance score calculation and displays messages from the same user account in a second viewport ordered by a second importance score calculation.
- a server sends a listing of messages ordered by a first importance score calculation to a first client device and sends another listing of messages from the same user account ordered by a second importance score calculation to a second client device.
- a server sends a listing of messages ordered by a first importance score calculation to a client device and sends another listing of messages from the same user account ordered by a second importance score calculation to the client device.
- Some embodiments provide a computer readable storage medium storing one or more programs having instructions for performing the above described methods. BRIEF DESCRIPTION OF THE DRAWINGS
- Figure 1 is a block diagram illustrating the infrastructure of a client-server network environment according to some embodiments.
- Figure 2 is a flow diagram illustrating a process of providing ordered message lists to multiple clients according to some embodiments.
- Figure 3 is a flow diagram illustrating another process of providing ordered message lists to a single client according to some other embodiments.
- Figure 4 is a flow diagram illustrating a process of generating an ordered message list according to some embodiments.
- Figures 5A-5D are block diagrams illustrating data structures used for generating an ordered message list according to some embodiments.
- Figure 6 is a block diagram of an exemplary client in accordance with some embodiments.
- Figure 7 is a block diagram of an exemplary server in accordance with some embodiments.
- Figure 1 is a block diagram of a system 100 for according to some embodiments.
- One or more clients 103 and a message server 106 are connected to a communication network 104 via any suitable means.
- the communication network 104 may be one or more, or a combination of one or more, local area networks (LANs), wide area networks (WANs), such as the Internet, or the like.
- LANs local area networks
- WANs wide area networks
- the client 103 is any suitable computing device, such as a personal computer, handheld computer, personal digital assistant, cellular-phone, or the like.
- the client 103 includes one or more software applications or interfaces for viewing messages.
- Messages refers to any type of communication messages from one person, station, or group to another, including electronic mail (email) messages, instant messages, voicemail messages, or the like.
- the message server 106 includes a front end server 120, a search engine 122, a search result ranker 124, importance predictive models 126, a message database 128, and a user accounts database 130.
- the search engine 122 communicates with message database 128 to retrieve sets of messages belonging to a particular user account associated with the user accounts database 130.
- a user account comprises all the messages sent to and from a respective email address or user name.
- a respective user account may be associated with a plurality of email addresses or user names, sometimes called aliases, which together may be considered to be a single logical email address or user name for the purposes of this discussion.
- the search engine 122 sends the retrieved set of messages to the search result ranker 124, which organizes the message order according to importance scores calculated for each respective message in the set using importance predictive models 126. In one case the set of messages being returned is all new messages.
- the message database 128 stores messages for users. In some embodiments, a single message database 128 is used per user account, and, in others, messages from multiple users are stored in the same message database 128.
- a single message database 128 is used per user account, and, in others, messages from multiple users are stored in the same message database 128.
- One of ordinary skill in the art will recognize that there are many ways to prevent messages from one user being accessed by other users of the system.
- the importance predictive models 126 calculate importance scores for individual messages in at least one user account.
- One or more importance predictive models 126 is associated with the user account.
- the importance predictive models 126 calculate importance scores for a set of one or more messages in the user account.
- the importance predictive models 126 are generated using machine learning.
- Machine learning comprises a set of techniques, implemented using software tools and computer systems, that generate functions and predictive models (e.g., by determining weights to be applied to components of the functions or predictive models).
- Machine learning is well know to those skilled in the art and is therefore not described in detail in this document.
- a respective predictive model is used to calculate an importance score, or more than one importance score, for each message in a set of messages.
- the model is defined to calculate one or more importance scores for a respective message using one or more message quality signals (sometimes called message quality factors, or message importance factors).
- a respective message quality signal, of a set of predefined message quality signals may be differently weighted in different predictive models, because the weights applied to a respective message quality signal is determined according to user preferences or prior user actions with respect to messages in the user account.
- Examples of message quality signals include: a signal identifying whether the user has read the message, a signal identifying a delay time from receipt of the message to the first time the user has read the message, a signal identifying whether the user has replied to the message, a signal identifying whether the user has forwarded the message, a signal identifying whether the user read the message out of order, a signal indicating the total time the user spent reading a particular message, a signal identifying whether the user has run a search for a message, a signal indicating the number of times the user has read the message, and a signal indicating the affinity of the user to another participant of the message.
- Other message quality signals that may be used for ordering messages in a viewport include signals based on message header information and signals based on other metadata for the messages.
- a viewport is a user interface for viewing and interacting with a set of messages in a user account.
- a client may provide one or more viewports for viewing messages, i.e., different viewports may exist on the same device, such as different message viewing windows on the same personal computer.
- a subset of the available message quality signals and other message signals may be combined (e.g., a linear combination, such as a weighted sum, or non-linear combination) to generate importance scores for a particular viewport, which are then used to order the messages for that viewport.
- the importance predictive models 126 use machine learning to build an initial predictive model of important message characteristics for a particular viewport.
- the model is then applied to each message in a set of messages in order to calculate an importance score for a particular message.
- the set of messages is then ordered using the search result ranker 124, i.e., sorted for the particular viewport.
- the search result ranker 124 may order the messages in order of decreasing importance score.
- a viewport may display all messages in a user account, such as would be displayed when viewing the user's entire message inbox.
- a viewport may display a subset of messages in a user account such as all messages in a particular folder or subfolder.
- a viewport may display a subset of messages in a user account, such as all messages to which a particular label has been applied.
- a viewport may display a custom subset of messages based on messages the user has explicitly selected. The selection of a viewport provides the messages associated with that viewport to an importance predictive model 126.
- a single user account may include more than one importance predictive model
- Each importance predictive model can be used to calculate distinct importance scores for a particular message by utilizing different message quality signals or by different weights to one or more message quality signals. For example, one importance predictive model could be based on the combination of a signal identifying whether a user has replied to a message along with a signal identifying whether a user has forwarded the message. The same user account could include an importance predictive model based on a combination of signals indicating the number of times the user has read a message and a signal indicating the total time spent reading the message. If the user applies each viewport model to the same set (folder, search result, label, etc) of messages, the two viewport models may order the same set of messages differently based on the importance scores independently calculated by each model.
- the mechanisms described below for ordering messages are applied to conversations in lists of conversations, where each conversation is a group of messages that have been grouped together in accordance with predefined criteria.
- a respective conversation may include an initial message as well as one or more messages that are responses to other messages in the conversation, as well as zero or more messages that forward messages or information from messages in the conversation.
- conversations may include only a single message, a list of conversations in a user account will typically be a plurality of conversations with each having two or more messages.
- the importance predictive models and viewport functions described below are applied to the conversations in a list of conversations by applying these mechanisms to each message in each conversation and producing one or more combined importance scores, which are then used to order the conversations.
- the mechanisms described below with respect to message ordering are applied to a subset of the messages in each conversation, in accordance with predefined criteria (e.g., all messages in the conversation when the conversation has N or fewer messages, and otherwise the last N messages in the conversation, or the last message plus the N-I longest messages in the conversation, where N is a predefined value (e.g., five)).
- predefined criteria e.g., all messages in the conversation when the conversation has N or fewer messages, and otherwise the last N messages in the conversation, or the last message plus the N-I longest messages in the conversation, where N is a predefined value (e.g., five)
- Figure 2 is a flowchart of interaction between the client and the server regarding generating and displaying messages ordered by an importance score.
- the selection of a viewport triggers a user request 202 for ordering messages based on an importance score.
- the user request 202 provides information on the selected viewport to the importance predictive models 126 ( Figure 1) and defines the set or subset of messages in the message database 128 the user wishes to view. For example, when the selected viewport is a folder in the user account, the user request 202 includes information identifying the subset of messages belonging to such folder.
- the viewport selection may be made explicitly by the user, such as selecting a folder of messages in a messaging application for viewing.
- the viewport selection may be automatically triggered by a client device that automatically selects an importance-based viewport for display upon launch of a message viewing application.
- the server receives the user request and identifies a set of messages associated with the selected viewport.
- the server calculates 204 an importance score for each message in the selected viewport and generates 204 an ordered message list based on the importance scores.
- the server then sends the generated message list 206 back to the client, which displays 208 the ordered list in the selected viewport.
- a second distinct client device may trigger a user request
- the second request may be for a distinct set of messages from the first request 202, but from the same user account. Alternatively, the second request may be for the exact same messages as the first request, but come from a second client.
- the server calculates 212 an importance score, according to an importance predictive model, for each message in the selected viewport and generates 212 an ordered message list based on the importance scores.
- the server may use the same importance predictive model as in 204 or it may use a distinct importance predictive model depending upon the selected client viewport on the second client.
- the message list is sent 214 back to the requesting second client.
- the second client subsequently displays 216 the generated message list in the selected viewport on the second client.
- the user requests may be based on a manual selection of a viewport by the user or may be selected based on an automatically triggered viewport selection.
- the user may explicitly select either folders with associated viewports or may even select a predefined or custom viewport to be applied to any particular folder or inbox of the user account.
- a particular viewport may be automatically selected for use with that device when the user attempts to view messages.
- the user may have a client application on their cell phone or mobile device that, when launched, automatically selects a particular viewport (e.g., a viewport that displays messages ordered in accordance with their predicted importance to the user).
- the importance predictive models for each user are updated 220 based on recent user interactions with messages through (i.e., while using) the viewports associated with those important predictive models.
- the message status database 416 stores user interactions with messages as further described below. Since each model applies a set of message quality signals to calculate importance scores for messages, updating the models involves retrieving the relevant interaction signals from the message status database 416 ( Figure 4 described below) and applying these signals to the model accordingly. In some embodiments, this process may occur at regular time intervals, such as once every night, while in other embodiments this process may occur more or less frequently.
- a respective model may be updated (based on user interactions with messages through (i.e., while using) the viewport associated with the respective model) at a time that is independent of when other models in the same user account are updated.
- the importance predictive models 126 may aggregate message interaction signals from multiple user accounts. The models adapt over time to determine the strongest indicators of message importance for individual users. Aggregating user interaction signals from multiple users provides another means of building an importance predictive model 126. The model may update itself by retrieving relevant interaction signals stored in the message status database 416 for multiple users and applying these signals to the model accordingly.
- FIG. 3 is a flowchart of another embodiment of the interactions between the client and the server relating to the generation and display of important messages in viewports.
- a user action at a first client device triggers a user request 302 for an importance- score based message list.
- the server receives the first request, calculates importance scores for each message according to a predictive model, and generates an ordered message list at 304.
- the server then sends 306 the generated message list back to the client, which displays 308 the list in the selected message viewport.
- the same client may trigger a second request, at 310, for a different viewport that uses a distinct importance predictive model from that used in the previous step.
- the second request may also be for a distinct set of messages from those requested by the first request 302.
- the second request 310 may be for a message folder different than the one chosen in the first request 302.
- the server receives the second request, calculates importance scores for each message according to a predictive model, and generates an ordered message list at 312.
- the server uses the importance predictive model associated with the selected client viewport.
- This model may be the same importance predictive model as in step 304 or the model could be distinct from the previous importance predictive model.
- a user may associate the same importance predictive model to multiple folders. In that scenario, the server would apply the same importance predictive model to the distinct message lists associated with the first request 302 and the second request 310.
- the server After the server generates the current message list at 312, it sends the ordered message list 314 back to the requesting client.
- the requesting client subsequently displays this ordered message list 316 in the respective message viewport at the client.
- a user may wish to apply different importance predictive models to the same set messages in similar viewports on different clients. For example, a user may wish to view important messages in a particular folder in his account while a home and at work. Messages which are important to the user while he is at work, for example, may differ from messages which are important to him while he is at home. In such a scenario, the selection of the same folder from similar viewports on different clients will order the messages differently by applying different importance predictive models to at least some of the same messages.
- user location context information may describe the user's physical location (e.g., home, work, car, etc.) and may additionally describe the current time of day.
- the physical location information may be defined and selected by the user directly. For example, the user may create different profiles for each location or time of day. Each profile is then associated with a different viewport, and, therefore, importance predictive models.
- the physical location of the client may be automatically determined using well-known positioning technologies, such as the Global Positioning System (GPS).
- GPS Global Positioning System
- the user's cellular-phone may know when the user is at home based on the user's current positioning location, and then associate an appropriate viewport and importance predictive model to the user's messages.
- the second user request 310 may also provide the user's location to the server.
- the server upon receipt of the second request 310, uses such location information to select an appropriate importance predictive model.
- the server may then proceed to generate 312 a message list as described above.
- a user may associate multiple importance predictive models with the same message set.
- Figure 4 is a flowchart of the process for generating an importance ordered message list.
- a user query to generate an importance ordered message list is received by the server at 402.
- the user query is made to the full text index at 404.
- a message list is then retrieved at 404 in response to the user query.
- the resulting message list is inputted to a viewport function 408 that determines individual message importance scores and generates an ordered message list at 410.
- the process may start with the message list 406, as the client may identify a specific set of messages related to a viewport.
- the query 402 and full text index 404 may not be needed to determine the message list 406 for input to the viewport function 408.
- the messages for that folder may be determined using information stored in message database 128, in which case a full text index search is not required to generate message list 406.
- the viewport function 408 determines an importance score for each message in the message list 406 through the use of one or more importance predictive models, a contact list 412, a message database 128, and a message status database 416.
- the message status database 416 stores status information, including information indicating whether a message has been read or not.
- the message status database 416 may also store other status information, such as one or more of the following: the number of times a respective message has been opened or read, the amount of time the user has kept the message open for reading, the number of times the user has responded to the message, the number of times the user has forwarded the message, and so on.
- the models may be used in cooperation with the contact list 412 to calculate an importance score for each message.
- the contact list 412 maintains affinity scores for other message participants which help to identify important users.
- Affinity scores may be used by a respective importance predictive model to boost the importance scores of messages sent by contacts (e.g., people, companies, etc.) in the user's contact list 412. For example, messages from contacts having high affinity scores in the user's contact list may receive a larger importance score boost than messages from contacts with lower affinity score and messages from people or entities not listed in the user's contact list.
- This information may be combined in the viewport function 408 with other portions of the importance score calculation performed by the importance predictive model used by the viewport function.
- Figure 5A depicts an exemplary user account record 502 in the user accounts database 130 ( Figure 1) according to some embodiments.
- Some of the information that can be associated with a user account record 502 includes a message database 128 ( Figure 1), a message status database 416 ( Figure 4), a full text index 404 ( Figure 4), and a contact list 412 ( Figure 4).
- Some of the information may be stored in separate user databases or, in some embodiments, may be stored in a single database for all users.
- Figure 5B depicts an exemplary message record 510 in the message database
- the message record 510 includes a message identifier 512 that uniquely identifies the message.
- the message identifier 512 is associated with a single message.
- the message identifier 512 is associated with a group of messages comprising a conversation.
- Some of the information that can be associated with a message 510 includes metadata 514, header information 520, and content 530.
- the metadata 514 includes information relevant to the message such as label or folder 516 assignments and a timestamp 518.
- Each message in the message database 128 may be assigned to a folder in the user account. Additionally, a user may apply one or more labels 128 to any message in his user account.
- the timestamp 518 provides information indicating the time that the message was received by the user account. The timestamp 518 may be valuable in calculating a user's time spent interacting with that message.
- the header information 520 may include the header information of the message including, for example, information identifying the sender 524 and recipients 522, a message received date and time value (sometimes called a date value or a time value) of the message, and the subject 528. Other information might also be included in the header information, as described in RFC 2822, which is incorporated herein by reference.
- the message content 530 may contain the content of the message. The content 530 may include text, images, and attachments. Those of ordinary skill in the art would recognize other ways to store the message information. For example, an attachment might be stored in another storage structure and a reference to it located in the message 510.
- FIG. 5C depicts an exemplary message status record 534 in the message status database 416 according to some embodiments.
- Each message status record 534 includes a message or conversation identifier and a set of status information for a single message in the message database 128.
- the status information includes one or more timestamps 536 and a set of fields representing the variety of user interactions tracked for the representative message.
- the one or more timestamps 536 may be used in calculating message quality signals indicating a length of time spent by the user performing various message interactions. For example, one timestamp may identify the first time a user read a message while another timestamp may identify the most recent time a user has read a message. The first timestamp may be used to determine the delay between receipt of the message to the user reading the message. The second timestamp may be used to determine the length of time between readings of the message by the user.
- the set of record fields in the message status record 534 correlate to the message quality signals used by importance predictive models 126.
- the set of fields may include the status of whether a particular message has been read, a count of the number of times the message has been read, and a value of the total time a user has spent reading the message.
- the set of fields may also include other message quality signal indicators such as whether a message has been forwarded or whether a message has been replied to.
- Figure 5D depicts an exemplary contact entry 564 in the contact list 412
- Each contact entry 564 represents a single contact with which the user has communicated or may communicate using messages as defined above.
- Each contact entry 564 includes information concerning the name of the contact 566, email contact information of the contact 568, telephone contact information 570, and one or more affinity scores 572 for the contact.
- the one or more affinity scores 572 provide numerical representation of the user's affinity to a particular contact with respect to calculating importance scores for messages.
- the affinity scores may influence the importance score assigned to a message received from a contact (e.g., person, company or other entity) listed in the user's contact list.
- each affinity score 572 is representative of a quantity of communication activity between the contact and the user. Contributions (e.g., communications sent to or sent by a respective contact) to an affinity score may be time weighted, so that more recent contributions are more heavily weighted than older contributions.
- the type of client device and the time of day may influence the weight associated with an affinity score 572 as it is applied by one or more importance predictive models. For example, if the user is viewing messages on his work PDA during work hours, the affinity score 572 for a contact entry 564 representing a supervisor may be assigned greater weight than if the user is viewing messages at his home personal computer on the weekend. Alternately stated, the viewports used in these two contexts may assign different weights to a respective affinity score 572.
- FIG. 6 is a block diagram of a client device 600.
- the device 600 includes one or more processing units (CPU's) 602; one or more network or other communications interfaces 604; memory 606; a user interface 610 (which may include a display 612 and a user input device 614); and one or more communication buses 608 for interconnecting these components.
- the communication buses 608 may include circuitry (sometimes called a chipset) that interconnects and controls communications between system components.
- Memory 606 includes high speed random access memory, such as DRAM, SRAM, DDR RAM or other random access solid state memory devices; and may also include non-volatile memory, such as one or more magnetic disk storage devices, optical disk storage devices, flash memory devices, or other non-volatile solid state storage devices. Memory 606, or alternately the non-volatile memory device(s) within memory 606, comprises a computer readable storage medium. In some embodiments, memory 606 includes mass storage that is remotely located from the central processing unit(s) 602. Also in some embodiments, memory 606 stores the following programs, modules, and data structures, or a subset thereof:
- an operating system 616 that includes procedures for handling various basic system services and for performing hardware dependent tasks
- a communication module 618 that is used for connecting the client device 600 to other computers via the one or more communication network interfaces 604 (wired or wireless), and one or more communication networks 104 ( Figure 1), such as the Internet, other wide area networks, local area networks, metropolitan area networks, and so on;
- a client application 620 for viewing and interacting with messages in viewports, including the display of an importance score-based message list 622;
- FIG. 7 is a block diagram illustrating a message server 700 in accordance with one embodiment of the present invention.
- the message server 700 includes one or more processing units (CPU's) 702; one or more network or other communications interfaces 704; memory 706; and one or more communication buses 708 for interconnecting these components.
- Memory 706 includes high-speed random access memory, such as DRAM, SRAM, DDR RAM or other random access solid state memory devices; and may include non-volatile memory, such as one or more magnetic disk storage devices, optical disk storage devices, flash memory devices, or other non-volatile solid state storage devices.
- Memory 706, or alternately the non-volatile memory device(s) within memory 606, comprises a computer readable storage medium.
- Memory 706 may optionally include one or more storage devices remotely located from the CPU(s) 702.
- memory 706 stores the following programs, modules and data structures, or a subset thereof:
- an operating system 710 that includes procedures for handling various basic system services and for performing hardware dependent tasks
- a network communication module 712 that is used for connecting the message server 700 to other computers via the one or more communication network interfaces 704 (wired or wireless), and one or more communication networks 104 ( Figure 1), such as the Internet, other wide area networks, local area networks, metropolitan area networks, and so on;
- a user account database 130 that includes user account information
- a message database 130 that includes user account information
- a message status database 416 that includes user account information
- a full text index 406 a user contact list 412
- a search engine 122 that is used to provide message list results based on user queries (e.g., queries specifying words or terms that may be located within the content of one or more messages, and/or queries specifying metadata values (e.g., date, folder, label, sender name, participant name, etc.) that may be associated with one or more messages)
- user queries e.g., queries specifying words or terms that may be located within the content of one or more messages, and/or queries specifying metadata values (e.g., date, folder, label, sender name, participant name, etc.) that may be associated with one or more messages)
- a search result ranker 124 that provides functionality to order messages based on importance scores associated with messages
- Each of the above identified elements may be stored in one or more of the previously mentioned memory devices, and corresponds to a set of instructions for performing a function described above.
- the above identified modules or programs i.e., sets of instructions
- memory 706 may store a subset of the modules and data structures identified above.
- memory 706 may store additional modules and data structures not described above.
- Figure 7 shows a "message server,"
- Figure 7 is intended more as functional description of the various features which may be present in a set of servers than as a structural schematic of the embodiments described herein.
- items shown separately could be combined and some items could be separated.
- some items shown separately in Figure 7 could be implemented on single servers and single items could be implemented by one or more servers.
- the actual number of servers used to implement a message server and how features are allocated among them will vary from one implementation to another, and may depend in part on the amount of data traffic that the system must handle during peak usage periods as well as during average usage periods.
Abstract
Description
Claims
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US12/192,055 US8185492B2 (en) | 2008-08-14 | 2008-08-14 | Messaging application with multiple viewports for presenting messages in different orders |
PCT/US2009/053164 WO2010019474A2 (en) | 2008-08-14 | 2009-08-07 | Messaging application with multiple viewports for presenting messages in different orders |
Publications (2)
Publication Number | Publication Date |
---|---|
EP2316078A2 true EP2316078A2 (en) | 2011-05-04 |
EP2316078A4 EP2316078A4 (en) | 2012-12-05 |
Family
ID=41669591
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
EP09807109A Withdrawn EP2316078A4 (en) | 2008-08-14 | 2009-08-07 | Messaging application with multiple viewports for presenting messages in different orders |
Country Status (6)
Country | Link |
---|---|
US (2) | US8185492B2 (en) |
EP (1) | EP2316078A4 (en) |
JP (1) | JP5351964B2 (en) |
KR (1) | KR101413700B1 (en) |
DE (1) | DE202009019142U1 (en) |
WO (1) | WO2010019474A2 (en) |
Families Citing this family (29)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20090210391A1 (en) * | 2008-02-14 | 2009-08-20 | Hall Stephen G | Method and system for automated search for, and retrieval and distribution of, information |
US8868661B2 (en) * | 2008-10-08 | 2014-10-21 | Verizon Patent And Licensing Inc. | Message management based on metadata |
US20100100845A1 (en) * | 2008-10-20 | 2010-04-22 | Ingboo Inc. | Organization and Delivery of Information Updates |
US8224996B2 (en) * | 2008-12-29 | 2012-07-17 | International Business Machines Corporation | Directory viewports |
US9602444B2 (en) * | 2009-05-28 | 2017-03-21 | Google Inc. | Participant suggestion system |
US20120005282A1 (en) * | 2010-07-02 | 2012-01-05 | Microsoft Corporation | Collaborative ranking and filtering of electronic mail messages |
US8555156B2 (en) * | 2010-08-16 | 2013-10-08 | Google Inc. | Inferring that a message has been read |
US20120054642A1 (en) * | 2010-08-27 | 2012-03-01 | Peter Wernes Balsiger | Sorted Inbox User Interface for Messaging Application |
US9619100B2 (en) | 2010-08-30 | 2017-04-11 | Nokia Technologies Oy | Method, apparatus, and computer program product for adapting a content segment based on an importance level |
US8312096B2 (en) | 2010-12-08 | 2012-11-13 | Google Inc. | Priority inbox notifications and synchronization for mobile messaging application |
US9116984B2 (en) * | 2011-06-28 | 2015-08-25 | Microsoft Technology Licensing, Llc | Summarization of conversation threads |
US8751591B2 (en) | 2011-09-30 | 2014-06-10 | Blackberry Limited | Systems and methods of adjusting contact importance for a computing device |
US10733669B2 (en) | 2012-08-02 | 2020-08-04 | Chicago Mercantile Exchange Inc. | Message processing |
US20140059141A1 (en) * | 2012-08-23 | 2014-02-27 | Linkedln Corporation | Electronic messaging system utilizing social classification rules |
US9870344B2 (en) * | 2012-10-02 | 2018-01-16 | Google Inc. | Reassigning ordinal positions of content item slots according to viewport information during resource navigation |
GB201219931D0 (en) * | 2012-11-06 | 2012-12-19 | Truphone Ltd | Management of contact information |
US20140143779A1 (en) * | 2012-11-19 | 2014-05-22 | Raytheon Company | Contextual routing of data elements |
WO2014094198A1 (en) * | 2012-12-17 | 2014-06-26 | Nokia Corporation | Message preloading system |
US9825896B2 (en) | 2014-03-04 | 2017-11-21 | Notion Ai, Inc. | Proposed message disposition viewport apparatus and method for timed operation |
US9887947B2 (en) * | 2015-02-19 | 2018-02-06 | Notion Ai, Inc. | Incentivized message disposition apparatus and time limited method for operation |
US10803391B2 (en) * | 2015-07-29 | 2020-10-13 | Google Llc | Modeling personal entities on a mobile device using embeddings |
US10708151B2 (en) * | 2015-10-22 | 2020-07-07 | Level 3 Communications, Llc | System and methods for adaptive notification and ticketing |
US11016534B2 (en) * | 2016-04-28 | 2021-05-25 | International Business Machines Corporation | System, method, and recording medium for predicting cognitive states of a sender of an electronic message |
US9864732B2 (en) | 2016-05-02 | 2018-01-09 | Google Inc. | User interfaces that facilitate management of formatting of digital content |
US10601760B2 (en) * | 2016-10-24 | 2020-03-24 | Facebook, Inc. | Techniques for device configuration of prospective contacts using messaging history information |
US11115359B2 (en) | 2016-11-03 | 2021-09-07 | Samsung Electronics Co., Ltd. | Method and apparatus for importance filtering a plurality of messages |
US10721202B2 (en) * | 2017-05-29 | 2020-07-21 | International Business Machines Corporation | Broadcast response prioritization and engagements |
US11714522B2 (en) * | 2017-12-08 | 2023-08-01 | Yahoo Assets Llc | Controlling a graphical user interface using a presentation of messages based upon predicted interactions with the messages |
US20210027104A1 (en) * | 2019-07-25 | 2021-01-28 | Microsoft Technology Licensing, Llc | Eyes-off annotated data collection framework for electronic messaging platforms |
Family Cites Families (18)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6654787B1 (en) | 1998-12-31 | 2003-11-25 | Brightmail, Incorporated | Method and apparatus for filtering e-mail |
KR100869624B1 (en) * | 2000-03-16 | 2008-11-21 | 마이크로소프트 코포레이션 | Priorities generation and management |
US6654791B1 (en) | 2000-03-24 | 2003-11-25 | International Business Machines Corporation | Method and apparatus for processing electronic mail using an importance indicator |
US6842775B1 (en) | 2000-08-29 | 2005-01-11 | International Business Machines Corporation | Method and system for modifying mail rules |
US7200606B2 (en) | 2000-11-07 | 2007-04-03 | The Regents Of The University Of California | Method and system for selecting documents by measuring document quality |
US20030187937A1 (en) | 2002-03-28 | 2003-10-02 | Yao Timothy Hun-Jen | Using fuzzy-neural systems to improve e-mail handling efficiency |
US20030195937A1 (en) * | 2002-04-16 | 2003-10-16 | Kontact Software Inc. | Intelligent message screening |
US20050204001A1 (en) * | 2002-09-30 | 2005-09-15 | Tzvi Stein | Method and devices for prioritizing electronic messages |
US7484213B2 (en) * | 2003-07-11 | 2009-01-27 | Boban Mathew | Agent architecture employed within an integrated message, document and communication system |
US7814545B2 (en) * | 2003-07-22 | 2010-10-12 | Sonicwall, Inc. | Message classification using classifiers |
US20050203929A1 (en) | 2004-03-09 | 2005-09-15 | Devapratim Hazarika | System, method and computer program product for prioritizing contacts |
US20050204009A1 (en) | 2004-03-09 | 2005-09-15 | Devapratim Hazarika | System, method and computer program product for prioritizing messages |
US7814155B2 (en) * | 2004-03-31 | 2010-10-12 | Google Inc. | Email conversation management system |
US7941491B2 (en) * | 2004-06-04 | 2011-05-10 | Messagemind, Inc. | System and method for dynamic adaptive user-based prioritization and display of electronic messages |
US7664249B2 (en) * | 2004-06-30 | 2010-02-16 | Microsoft Corporation | Methods and interfaces for probing and understanding behaviors of alerting and filtering systems based on models and simulation from logs |
US20060031340A1 (en) * | 2004-07-12 | 2006-02-09 | Boban Mathew | Apparatus and method for advanced attachment filtering within an integrated messaging platform |
US7889853B2 (en) * | 2004-07-27 | 2011-02-15 | At&T Intellectual Property I, L.P. | Methods, systems, devices, and products for providing ring backs |
US8621024B2 (en) * | 2007-04-24 | 2013-12-31 | Blackberry Limited | System and method for prioritizing and displaying messages |
-
2008
- 2008-08-14 US US12/192,055 patent/US8185492B2/en active Active
-
2009
- 2009-08-07 EP EP09807109A patent/EP2316078A4/en not_active Withdrawn
- 2009-08-07 WO PCT/US2009/053164 patent/WO2010019474A2/en active Application Filing
- 2009-08-07 KR KR1020117005897A patent/KR101413700B1/en active IP Right Grant
- 2009-08-07 JP JP2011523056A patent/JP5351964B2/en active Active
- 2009-08-07 DE DE202009019142.7U patent/DE202009019142U1/en not_active Expired - Lifetime
-
2012
- 2012-05-17 US US13/474,641 patent/US9219619B2/en active Active
Non-Patent Citations (2)
Title |
---|
Dennis Quan ET AL: "A Unified Abstraction for Messaging on the Semantic Web", Cambridge, MA, USA, 1 January 2003 (2003-01-01), XP55042490, Retrieved from the Internet: URL:http://reference.kfupm.edu.sa/content/u/n/a_unified_abstraction_for_messaging_on_t_93194.pdf [retrieved on 2012-10-29] * |
See also references of WO2010019474A2 * |
Also Published As
Publication number | Publication date |
---|---|
JP2011530771A (en) | 2011-12-22 |
KR101413700B1 (en) | 2014-06-30 |
US20120233556A1 (en) | 2012-09-13 |
EP2316078A4 (en) | 2012-12-05 |
WO2010019474A3 (en) | 2010-11-11 |
US9219619B2 (en) | 2015-12-22 |
US8185492B2 (en) | 2012-05-22 |
DE202009019142U1 (en) | 2017-01-20 |
WO2010019474A2 (en) | 2010-02-18 |
US20100042570A1 (en) | 2010-02-18 |
JP5351964B2 (en) | 2013-11-27 |
KR20110055636A (en) | 2011-05-25 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US9219619B2 (en) | Selecting viewports in a messaging application with multiple viewports for presenting messages in different orders | |
US11190474B2 (en) | Method and system for collecting and presenting historical communication data for a mobile device | |
US10963524B2 (en) | Self populating address book | |
US8392836B1 (en) | Presenting quick list of contacts to communication application user | |
US7593925B2 (en) | Method and system for locating contact information collected from contact sources | |
US7562104B2 (en) | Method and system for collecting contact information from contact sources and tracking contact sources | |
KR20060094853A (en) | Method and system for aggregating contact information from multiple contact sources | |
US9479468B2 (en) | Presenting instant messages | |
CN101222446B (en) | Method and system for instant communication system searching and adding friends | |
WO2010037896A1 (en) | Methods, apparatuses, and computer program products for providing activity coordination information | |
WO2012027750A1 (en) | Sorted inbox user interface for messaging application | |
JPH0715497A (en) | Telephone set |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PUAI | Public reference made under article 153(3) epc to a published international application that has entered the european phase |
Free format text: ORIGINAL CODE: 0009012 |
|
17P | Request for examination filed |
Effective date: 20110121 |
|
AK | Designated contracting states |
Kind code of ref document: A2Designated state(s): AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HR HU IE IS IT LI LT LU LV MC MK MT NL NO PL PT RO SE SI SK SM TR |
|
AX | Request for extension of the european patent |
Extension state: AL BA RS |
|
RIN1 | Information on inventor provided before grant (corrected) |
Inventor name: HUDSON, DOUGLAS, T.Inventor name: MAYERS, ERIC, B. |
|
DAX | Request for extension of the european patent (deleted) | ||
A4 | Supplementary search report drawn up and despatched |
Effective date: 20121107 |
|
RIC1 | Information provided on ipc code assigned before grant |
Ipc: G06F 17/00 20060101AFI20121101BHEPIpc: H04L 12/58 20060101ALI20121101BHEPIpc: H04M 3/533 20060101ALI20121101BHEP |
|
RAP1 | Party data changed (applicant data changed or rights of an application transferred) |
Owner name: GOOGLE LLC |
|
17Q | First examination report despatched |
Effective date: 20180713 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: THE APPLICATION IS DEEMED TO BE WITHDRAWN |
|
18D | Application deemed to be withdrawn |
Effective date: 20190501 |
|
P01 | Opt-out of the competence of the unified patent court (upc) registered |
Effective date: 20230519 |
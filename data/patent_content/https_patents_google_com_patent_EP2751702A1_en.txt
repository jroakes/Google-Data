EP2751702A1 - Establishing network connections - Google Patents
Establishing network connectionsInfo
- Publication number
- EP2751702A1 EP2751702A1 EP12828113.6A EP12828113A EP2751702A1 EP 2751702 A1 EP2751702 A1 EP 2751702A1 EP 12828113 A EP12828113 A EP 12828113A EP 2751702 A1 EP2751702 A1 EP 2751702A1
- Authority
- EP
- European Patent Office
- Prior art keywords
- network
- request
- network connection
- available
- computing device
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Granted
Links
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L69/00—Network arrangements, protocols or services independent of the application payload and not provided for in the other groups of this subclass
- H04L69/30—Definitions, standards or architectural aspects of layered protocol stacks
- H04L69/32—Architecture of open systems interconnection [OSI] 7-layer type protocol stacks, e.g. the interfaces between the data link level and the physical level
- H04L69/321—Interlayer communication protocols or service data unit [SDU] definitions; Interfaces between layers
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L12/00—Data switching networks
- H04L12/54—Store-and-forward switching systems
- H04L12/56—Packet switching systems
- H04L12/5691—Access to open networks; Ingress point selection, e.g. ISP selection
- H04L12/5692—Selection among different networks
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/14—Session management
- H04L67/141—Setup of application sessions
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L69/00—Network arrangements, protocols or services independent of the application payload and not provided for in the other groups of this subclass
- H04L69/28—Timers or timing mechanisms used in protocols
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04W—WIRELESS COMMUNICATION NETWORKS
- H04W48/00—Access restriction; Network selection; Access point selection
- H04W48/18—Selecting a network or a communication service
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04W—WIRELESS COMMUNICATION NETWORKS
- H04W76/00—Connection management
- H04W76/10—Connection setup
Definitions
- This document generally relates to establishing network connections from a computing device.
- a network connection between computing devices can be established by opening network sockets that create channels over available network connections for bilateral communication of data between the computing devices.
- mobile computing devices such as smartphones, often run software applications that use network connections to send data to and receive data from other computing devices.
- Mobile computing devices can transmit data over wireless network connections, such as an IEEE 802.1 1 WI-FI connection and/or through a public land mobile network (“PLMN") that uses cellular radiotelephone network standards such as the Enhanced Data GSM Environment (“EDGE”), Code Division Multiple Access (“CDMA”), and/or Long Term Evolution (“LTE”).
- PLMN public land mobile network
- EDGE Enhanced Data GSM Environment
- CDMA Code Division Multiple Access
- LTE Long Term Evolution
- a mobile computing device can establish a network connection that is usable by one or more applications by opening a socket for bilateral communication of data between an application and another computing device. Once a socket is open and a network connection is established, transmission of data between a mobile computing device and another computing device can commence.
- This document generally describes methods, techniques, and systems for establishing network connections and transmitting data between computing devices.
- Computing devices can use information provided with network connection requests to select an optimal network on which to establish the requested connection.
- the computing device may delay establishing a connection within the acceptable delay period until a suitable network is found. Or, if the acceptable delay period expires and no suitable network has been found, the computing device may discard the request.
- Additional implementations can include mechanisms for selecting and / or delaying network connections based on costs.
- the computing device may have a budget that limits the costs associated with network connections.
- the computing device may delay establishing a network connection until a network is available that can service a request at a price within the budget. If no networks are available to service a request within budget, the request can be discarded.
- the computing device can also manage costs by negotiating among networks to service requests at the lowest cost possible. If more than one network can service a request within budget, the computing device may select an optimal network on which to establish a network connection based in part on the network's cost.
- a computer-implemented method includes receiving, at a computing device and from an application installed on the computing device, a request to establish a network connection to transmit and receive data over a network, wherein the request includes information that indicates one or more parameters identified by the application for the requested network connection and data transmission.
- the method can further include delaying, by the computing device, establishing the requested network connection until i) an available network connection is identified that satisfies the one or more parameters provided as part of the request, or ii) a time period specified for the request has expired.
- the method can additionally include, in response to identifying an available network that satisfies the one or more parameters before the time period has expired, establishing the requested network connection for the application using the identified available network.
- the one or more parameters identified by the application can include a minimum network bandwidth parameter that indicates a minimum network bandwidth for the requested network connection and a maximum network latency parameter that indicates a maximum network latency for the requested network connection.
- the available network connection can satisfy the minimum network bandwidth parameter when the available network connection has an available bandwidth that is greater than or equal to the minimum network bandwidth and satisfies the maximum network latency parameter when the available network connection has a current latency that is less than or equal to the maximum network latency.
- the one or more parameters identified by the application can include a total data size parameter that indicates a total size of the data to be transmitted and received for the requested network connection.
- the available network connection can satisfy the total data size parameter when the available network connection has a minimum bandwidth sufficient to transmit and receive the total size of the data within a threshold period of time.
- the one or more parameters identified by the application can include an acceptable delay parameter that indicates a period of time within which the requested network connection is permitted to be delayed.
- the available network connection can satisfy the acceptable delay parameter when the available network connection is identified within the period of time from when the request was received.
- the method can further include ranking the received request among a group of other requests for network connections from other applications installed on the computing device.
- the requested network connection can be established when the received request has at least a threshold ranking among the other requests.
- the requests can be ranked based on at least a cost of transmitting and receiving data for each request.
- the cost of transmitting and receiving each request can be based on a total size of data to be transmitted and received for each request and a cost per data unit to transmit and receive data over one or more available networks.
- the threshold ranking can be determined based on a network connection budget for the computing device that indicates an amount of money that is available for the computing device to spend to transmit and receive data over network connections.
- the requests can be ranked based on at least an inferred importance of each of the requests.
- the inferred importance of each of the requests can be determined based on at least a type of data to be transmitted and an indication of whether a user of the computing device is currently interacting with one or more applications that are associated with each of the requests.
- the method can further include, in response to identifying one or more available networks, requesting bids from the one or more available networks, receiving bids for the one or more available networks, wherein the bids indicate costs for transmitting and receiving the requested data over the one or more available networks, selecting an available network from the one or more available networks based on at least the received bids, and establishing the requested network connection with the selected available network.
- Each of the one or more available networks from which the bids are requested can satisfy the one or more parameters.
- the one or more parameters can include a quality parameter that indicates a plurality of levels of quality that are permitted to be used for the requested network connection and data transmission.
- the method can further include identifying one or more available networks that are able to transmit and receive the requested data at one or more of the plurality of levels of quality specified by the quality parameter, and selecting one of the identified available networks that is able to transmit and receive the requested data at a greatest level of quality from among the plurality of levels of quality.
- the requested network connection can be established using the selected available network.
- a mobile computing device includes a wireless networking antenna and a network connection manager that is programmed to receive a request to establish a network connection to transmit and receive data over a network.
- the request can include information that indicates one or more parameters identified for the requested network connection and data transmission.
- the mobile computing device can further include a request manager that is programmed to i) delay establishing the requested network connection until an available network connection is identified that satisfies the one or more parameters provided as part of the request, and ii) in response to identifying an available network that satisfies the one or more parameters and before a time period specified for the request has expired, establish the requested network connection with the identified available network using the wireless networking antenna.
- the mobile computing device of can further include a connection pricing negotiator that is programmed to request and receive bids from the one or more available networks, wherein the bids indicate costs for transmitting and receiving the requested data over the one or more available networks.
- the mobile computing device can further include a request ranking module that is programmed to rank the received request among a plurality of other requests for network connections based, at least in part, on the bids received by the connection pricing negotiator.
- the network connection manager can further programmed to select one or more requests from among the received request and the plurality of requests based, at least in part, on the ranking generated by the ranking request module.
- a computer program product embodied in a computer readable storage device including instructions that, when executed by one or more computing devices, cause the one or more computing devices to perform operations including receiving, from an application installed on the one or more computing devices, a request to establish a network connection to transmit and receive data over a network, wherein the request includes information that indicates one or more parameters identified by the application for the requested network connection and data transmission.
- the operations can further include delaying establishing the requested network connection until i) an available network connection is identified that satisfies the one or more parameters provided as part of the request, or ii) a time period specified for the request has expired.
- the operations can further include, in response to identifying an available network that satisfies the one or more parameters before the time period has expired, establishing the requested network connection for the application using the identified available network.
- delaying the establishment of a network connection until a network is available that has sufficient capacity (e.g., acceptable bandwidth and latency characteristics) to meet an application's minimum requirements for an effective data communication more efficiently uses both client computing resources and network resources.
- automatic delays in establishing network connections to transmit and receive data can reduce costs to the application's user, for example, by reducing the use of inadequate connections and the costs associated with such usage. Automatic delays can also restrict transmissions until a time when the user's budget allows for network usage.
- users can save money by client computing devices negotiating with one or more available networks to connect to a lowest-cost network that satisfies the parameters of an application's request.
- FIG. 1 is a conceptual diagram of an example system for establishing a requested network connection based on associated connection parameters.
- FIG. 2 illustrates various functional elements of a network connection manager including ranking requests, managing connection budgets, and negotiating prices among available networks.
- FIG. 3 depicts a system diagram of a computing device having a network connection manager interfacing with various data repositories, client applications, and available networks.
- FIGS. 4A-B are flowcharts of example techniques for establishing network connections.
- FIG. 5 is a block diagram of example computing devices.
- This document generally describes techniques, methods, systems, and computer program products for more optimally establishing network connections.
- computing devices such as smartphones often run multiple applications, at times simultaneously, that each require connections to a network to transmit or receive data.
- a user may configure an e-mail application to periodically synchronize with a remote e-mail server and to download recent e-mail messages, which requires the smartphone to connect with the server over a network.
- smartphones today will automatically service the e-mail application's request by immediately opening a socket and transmitting and receiving the e-mail data over any network on which the smartphone is connected. However, immediately establishing a connection is not always necessary or desirable.
- a computing device can manage requests from applications to establish network connections to improve network performance of the device. For instance, a computing device can delay establishing a connection or transmitting and receiving data until a network with sufficient bandwidth becomes available or until performance characteristics (e.g. bandwidth, latency) of currently available network(s) improve to at least a threshold level.
- performance characteristics e.g. bandwidth, latency
- the likelihood that a mobile computing device will encounter networks having varying performance (and/or cost) characteristics over a period of time may be quite high. For instance, as mobile computing devices (e.g. smartphones) travel with their users between home, work, and other locations, for example, computing devices may have access to multiple WI-FI, EDGE, and/or LTE networks depending on where the computing devices are located geographically.
- a mobile computing device that only has access to an EDGE network at a time when an application makes a request to establish a network connection can delay establishing the connection until a later time when the device has access to a faster network, such as a WI-FI or LTE network.
- a variety of techniques can be used to manage competing requests from multiple applications for network connections. For instance, computing devices may receive requests for network connections at or around the same time from multiple applications, but the computing device and/or the available networks may not have sufficient capacity to establish each of the network connections with their associated parameters (e.g., minimum bandwidth, maximum latency). Such competing network connection requests can be ranked according to a variety of factors (e.g., an inferred importance based on whether the request was made in response to user input or from a background process) to identify which, if any, requested network connections a computing device should establish at a given time.
- factors e.g., an inferred importance based on whether the request was made in response to user input or from a background process
- network providers e.g., wireless network providers, internet service providers (ISP)
- ISP internet service providers
- network providers can charge users fees for unlimited use over a period of time; session fees based on the length of time the user accesses the network; session fees proportional to the amount of data transmitted and received; and/or fixed fees that allow any amount of network use up to a predetermined maximum, which can be expressed as a cap on the amount of data that can be transmitted and received over the network by the user's devices.
- computing devices can negotiate pricing with network providers and/or can select network connection requests to establish based on associated costs and available funds for such connections. For example, a user can provide his/her computing device with a monthly budget (e.g., $30/month) for paid network connections and the computing device can use this budget, in addition and/or alternatively to other techniques, to determine which requested network connections to establish.
- a monthly budget e.g., $30/month
- FIG. 1 is a conceptual diagram of an example system for establishing a requested network connection based on associated connection parameters.
- FIG. 1 depicts a network connection manager 1 10 of a client computing device 102 that is configured to delay establishing a requested network connection 106 until a network is found that meets connection parameters 108 provided by an application 104 in association with the request 106.
- an application 104 e.g., email application, web browser application, social network application
- the client computing device 102 provides the request 106 for a network connection at time 0 (100) when there are no networks available that satisfy the parameters 108 for the request 106 (e.g., Network A (1 16) and Network B (120) available at time 0 do not satisfy the parameters 108), and the network connection manager 1 10 delays establishing the requested connection until time 1 (124) when a network becomes available that satisfies the parameters 108 of the request 106 (e.g., Network C (132) available at time 1 satisfies the parameters 108).
- the client computing device 102 can be any of a variety of electronic computing devices, such as smartphones, tablet computing devices, electronic readers, laptop computers, and/or desktop computers.
- the client computing device 102 is depicted as running application 104, which can be one or more computer programs (e.g., software, firmware, hardware) whose operation includes, to some extent, transmitting and/or receiving data over a network.
- the application 104 can be any of a variety of applications, such as web browsers, games, email clients, system update routines, voice over IP (“VoIP”) services.
- the application 104 can be run locally as a standalone application and/or can be run as a thin client on computing device 102 that interacts with another computing device over a network to provide features to a user (e.g., application running in the cloud).
- step A (106) the application 104 produces a request for a network connection 106 that is communicated to a network connection manager 1 10.
- the application 104 can make a call to an application programming interface (API) to establish a network socket that the application 104 can use to communicate to another computing device.
- API application programming interface
- Such an API can include and/or be associated with the network connection manager 1 10, and can direct the call made by the application 104 to the network connection manager 1 10.
- the request 106 from the application 104 can include one or more parameters 108 that specify one or more preferences and/or requirements for the requested network connection 106 (e.g., minimum bandwidth).
- the application 104 can provide the parameters 108 with a call to an API to establish a network socket (e.g., socket(min bandwidth, max latency, max delay)).
- the network connection manager 1 10 can use the parameters 108 to determine how and when to establish a network connection for the request 106.
- the particular parameters 108 may vary among different applications 104, as well as among the various requests 106 produced from an individual application 104.
- the parameters 108 can include any combination of information and/or constraints associated with network connections, such information relating to an identity and/or status of an application, types of data to be transmitted and/or received (e.g., video, text), quantities of data to be transmitted and/or received, minimum bandwidth required for a network connection, a maximum acceptable delay to establish a network connection, and/or a maximum latency allowable for a network connection.
- information relating to an identity and/or status of an application e.g., types of data to be transmitted and/or received (e.g., video, text), quantities of data to be transmitted and/or received, minimum bandwidth required for a network connection, a maximum acceptable delay to establish a network connection, and/or a maximum latency allowable for a network connection.
- types of data to be transmitted and/or received e.g., video, text
- example parameters 108 include an amount of data (three MB) to be transmitted and/or received as part of the requested network connection 106 , a minimum bandwidth of one megabits per second, a maximum latency of one- hundred microseconds (ms), and an acceptable delay of twelve hours for
- the parameters 108 provide the network connection manager 1 10 with information that it can use to determine which requested connections to establish and when to establish them.
- the application 104 can be a digital music and multimedia application (e.g., ITUNES) that makes a request 106 to download an audio file (e.g., song) from a remote server system in response to a user providing input to the application 104 to purchase the audio file.
- ITUNES digital music and multimedia application
- the application 104 can provide the parameters 108 as part of the request 106 based on a variety of factors, such as user specified settings (e.g., user indicated that he/she is willing to wait twelve hours for audio file downloads), a type of data being transmitted and/or received, and/or default configurations for the application 104 (e.g., minimum performance for application 104 requires the parameters 108).
- user specified settings e.g., user indicated that he/she is willing to wait twelve hours for audio file downloads
- default configurations for the application 104 e.g., minimum performance for application 104 requires the parameters 108.
- the client computing device 102 proceeds to check for available networks as depicted in step B (1 12).
- available networks are illustrated as Network A (1 16) and Network B (120).
- LANs local area networks
- WANs wireless area networks
- EDGE EDGE
- CDMA Code Division Multiple Access
- LTE Long Term Evolution
- Mobile computing devices such as smartphones and/or tablet computing devices, also may have access to a host of networks through WI-FI, BLUETOOTH, and/or broadband wireless networks such as EDGE, CDMA, and/or LTE networks.
- the network connection manager 1 10 can cause the client computing device 102 to scan for available networks using one or more network interfaces.
- the client computing device 102 can register various characteristics and/or parameters 1 18 and 122 of the available networks A (1 16) and B (120), respectively.
- the client computing device 102 can determine the network parameters 1 18 and 122 in a variety of ways, such as through classification of the network technology, network signal strength to the device 102, and/or through the receipt of network information and/or parameters provided directly from the networks A and B.
- the client computing device 102 detects two available networks 1 16 and 120 after checking for networks in step B (1 12).
- the parameters 1 18 of Network A (1 16) indicate that the network permits data
- the parameters 122 of Network B (120) indicate that Network B (120) permits data transactions of no more than 2 MB, has a bandwidth of 1 .5 Mb/s, and that its current latency is 120 ms.
- the request 106 made by application 104 is for a 3 MB transaction over a network having at least a 1 Mb/s bandwidth and at most a 100 ms latency.
- the currently available networks A and B at time 0 (100) do not satisfy the parameters 1 18 for the requested network connection 106.
- the bandwidth of Network A (1 16) is inadequate and Network B (120) similarly fails to meet the requirements of the request 106 because it will not transmit or receive more than 2 MB of data and it has an unacceptable latency.
- the client computing device 102 can delay establishing the requested network connection 106 until a later time when a network is available that satisfies the request parameters 108, as shown in step C (1 14).
- Network C Unlike Network A (1 16) and Network B (120) at time 0 (100), Network C (132) satisfies the parameters 108 of the application request 106. For instance, Network C (132) has sufficient data transaction capacity, bandwidth, and sufficiently low latency such that its parameters 134 exceed the threshold network requirements of the application's 104 network connection request 106 and the request's 106 associated parameters 108.
- a network connection may be established. For example, once the computing device 102 finds Network C (132) to be a suitable network to service request 106, the network connection manager 1 10, depicted in step D (136), checks whether the acceptable delay period from the parameters 108 has expired. If the request 106 has expired, then a network connection will not be established. However, in the example of FIG. 1 , the elapsed time between time 0 (100) and time 1 (124) is less than the acceptable delay period of twelve hours; therefore, the client computing device 102, through the network connection manager 1 10, establishes a connection in step F (130) with Network C (132).
- the network connection manager 1 10 can create a network socket for the application 104 and can establish a connection with Network C (132) (e.g., authenticate the client computing device 102 with Network C (132)).
- Network C e.g., authenticate the client computing device 102 with Network C (132)
- the network connection manager 1 10 can notify the requesting application 104 that the requested network connection 106 has been established with an available network and that the application 104 can transmit or receive data using the established connection.
- FIG. 2 is a conceptual diagram that depicts an example client computing device 212 that manages multiple requests 21 1 to establish network connections.
- the example client computing device 212 includes multiple different applications 205 that provide the requests 21 1 for network connections to a network connection manager 214 of the client computing device 212.
- the network connection manager 214 can use a variety of techniques to select which, if any, requested network connections to establish. For instance, the network connection manager 214 can rank the requests 21 1 based on a variety of factors, such as costs for the network connections.
- the client computing device 212 can be any of a variety of appropriate electronic computing devices, such as a laptop computer, a desktop computer, a netbook, a mobile telephone, a smartphone, a tablet computing device, and/or a computer server system.
- the client computing device 212 is depicted as running the applications 205, which can be one or more computer programs (e.g., software, firmware, hardware, or any combination thereof) whose operation includes, to some extent, transmitting and/or receiving data over a network.
- the applications 205 can be any of a variety of applications, such as web browsers, games, e-mail clients, system update routines, and/or VOIP services.
- the applications 205 can be run locally as standalone applications and/or can be run as a thin client on the computing device 212 that interacts with another computing device over a network to provide features to a user (e.g., application running in the cloud).
- the example applications 205 are depicted as including Application A (200), Application B (202), and
- the applications 205 can make and provide the requests 21 1 to the computing device 212 to establish and/or use a network connection.
- the requests 21 1 can include one or more request parameters, such as network constraints associated with the request (e.g., minimum bandwidth, maximum latency); an acceptable delay parameter indicating a timeframe for the device 212 to service the requests 21 1 ; one or more data parameters indicating the quantity of data to be transmitted and/or received; cost constraints indicating how much money and/or how much of a user's network budget the is available for each of the requests 21 1 ; and/or other information that the computing device 212 may use in establishing and using network connections, such as the identity of a requesting application (e.g., e-mail client, game, web browser), information indicating whether the requests 21 1 are based on user input or are part of a background task, and/or whether a user is actively using the applications 205.
- network constraints associated with the request e.g., minimum bandwidth, maximum latency
- an acceptable delay parameter indicating a
- the request 206 from Application A includes parameters indicating that the request 206 is to transmit and/or receive up to 5 MB of data over a network.
- the request 208 from Application B (202) includes parameters indicating that the request 208 is to transmit and/or receive 100 KB of data.
- the request 210 from Application N (202) includes parameters indicating that the request 210 is to transmit and/or receive 500 MB of data.
- the applications 205 can also include information in the requests 21 1 that indicates which transmission qualities are acceptable for a requested network connection.
- an application that receives and plays streaming video content from an Internet video service, such as YOUTUBE may include information indicating that streaming high, medium, or low quality versions of videos is permissible for the network connection.
- some network connections requests may specify that only a particular connection quality is permissible.
- the applications 205 and/or a user can prioritize which quality level is preferred, and which quality levels are permissible. Each quality level may also be associated with different network parameters. For instance, streaming a high quality video may need a network connection having a minimum bandwidth of 5 Mb/s, whereas a low quality video can be streamed using only 1 Mb/s connection.
- the requests 21 1 can include information identifying one or more minimum quality levels for a requested network connection and associated network parameters. Or the requests 21 1 can simply indicate which quality levels are acceptable such that the computing device 212 can infer the network parameters associated with each acceptable quality level.
- the applications A (200), B (202), and N (204) each make a request (206, 208, and 210, respectively) for a network connection.
- Request A (206) includes a quality parameter indicating that a network connection for either a high quality or low quality data transmission is acceptable.
- Request B (208) indicates that a network connection capable of carrying a high quality data transmission is required for the requested network connection.
- the computing device 212 can manage incoming requests 21 1 for network connections and determine when to connect to an available network 239 and which available network(s) to connect to.
- the computing device 212 is depicted as having a network connection manager 214.
- the network connection manager 214 can be located on the computing device 212 as a standalone application, integrated into software, hardware, and/or firmware, or run as a thin client on the computing device 212.
- the network connection manager receives incoming requests 21 1 for network connections and determines how to service the requests by establishing connections to available networks 239.
- the network connection manager 214 includes a connection pricing negotiator 216 that can find and/or negotiate pricing information regarding network connections from one or more of the available networks 239.
- the pricing negotiator 216 may query each available network 239, or just those available networks 239 that satisfy the parameters of one or more requests 21 1 , for the costs of establishing a connection to the networks and/or the costs of servicing the requests 21 1 .
- Step B (226) the connection pricing negotiator 216 sends a request for pricing information to Network A (234), Network B (236), and Network N (238).
- each of the available networks 239 (e.g., Network A (234), Network B (236), and Network N (238)) transmit their pricing information back to the computing device 212 where the network connection manager 214 can use the information in determining which networks to connect to and in other aspects of managing network connections.
- the computing device 212 can also use more sophisticated routines for negotiating prices among one or more available networks 239.
- the connection pricing negotiator 216 can send information to the network that includes more details about the connection requests 21 1 that the device 212 is attempting to establish, such as information about the quantity of data to be transmitted, the type of content to be transmitted (e.g., HTML, audio, video), the anticipated length of time for using the network connection, the bandwidth intended to be used, and other factors that can affect a network's pricing bid.
- pricing negotiations could involve dynamic communications among the computing device 212 and one or more of the available networks 239 to allow the available networks to compete to offer a lowest bid.
- the network connection requests 21 1 can also be ranked in the order in which they are to be serviced. In FIG. 2, ranking takes place in Step D (218) by a request ranking module 220. Ranking can be based on one or more factors such as the importance of a request, the cost of a request, the order and time in which the requests 21 1 were received, and/or the remaining time that a request can be delayed. For example, the request ranking module 220 ranked Request A (206), Request B (208), and Request C (210) based on the cost of each request and the importance of each request. The cost of the requests 21 1 can be determined by the connection pricing negotiator 216.
- the importance of the requests 21 1 can be determined based on factors such as the identity of an application (e.g., e-mail client, game, web browser) that provided the request, information as to whether a request originates from user input or is provided as part of a background task, and/or whether the user is actively using an application from which the request was received. The importance may also be influenced by parameters communicated by the applications 205 in the requests 21 1 itself.
- Request ranking module 220 shows, for instance, that a low-quality connection for Request A (206) is ranked first due to its combination of low cost and high importance.
- Request B (206) is ranked second despite having a lower cost than low-quality Request A (206) because it is only of medium importance.
- Request B (208) is ranked higher than a high-quality version of Request A (206) because of its substantially lower cost, despite have a lower importance than Request A (206).
- the computing device 212 can also use a budget to manage how network connections are established and/or which requests 21 1 are serviced. For instance, the costs of establishing network connections and using network resources can sometimes exceed the costs that a user desires to spend over a given time period (e.g., an hour, a day, a week, a month). The user can provide the computing device 212 with a budget that limits the expenses the device 212 can spend on network connections.
- a budget can be implemented in various forms including daily and/or monthly allowances.
- the network connection manager 214 includes a budget manager 224 that restricts establishing network connections which would cause the budget to be exceeded.
- the budget in FIG. 2 includes $15 to spend on network connections monthly. In a 30-day month, this equates to an average of $0.50 available to spend daily. A user can exceed a daily or monthly budget, for instance, if the user instructs the computing device 212 to do so.
- $0.42 have been carried over from previous days when the amount(s) spent on network connections fell below the budgeted maximum. Combining the amount rolled-over and the daily allocation gives a total of $0.92 to spend on network connections for the day.
- the user and/or the computing device 212 can reserve portions of the budget for use by one or more applications. For example, security software may perform periodic checks for updates or an e-mail client may periodically ping a remote server and download new e-mails. To ensure that enough money is budgeted each day for these tasks, some portion of the budget can be dedicated to those requests.
- the user may indicate which applications or tasks should have a reserved budget and the size of the reserves, or they may be inferred by the computing device 212, such as by tracking and analyzing which programs historically have required frequent use and the associated costs.
- a reserve budget can be maintained based on other factors as well, such as estimations of how much additional network use will be required for the remainder of the day. In FIG.
- the budget manager 224 manages the costs of establishing and/or using network connections in order to stay within a budget.
- the network connection manager 214 proceeds through the requests 21 1 in ranked order selects requests to use for network connections, as indicated by Step E (222), and establishes a connection on one or more of the available networks 239 for requests that are permitted within the available budget.
- Step F (240) the computing device 212 establishes a connection with Network B (236) to service low-quality Request A (206) at a cost of $0.05, and then a connection is made with Network A (234) to service Request B (208) at a cost of $0.03. No connection is made for Request C (210) because the connection cost would exceed the available budget after servicing Request A (206) and Request B (208).
- the connection might be made, for instance, if a user granted special permission to exceed the budget.
- FIG. 3 is a system diagram of a computing device 300 that may be used to implement the systems and methods described in this document.
- the computing device 300 can be any of a variety of appropriate electronic devices, such as cellular phones, smartphones, tablet computing devices, desktop computers, laptop computers, personal digital assistants, servers, and other like devices.
- the computing device 300 can be similar to the computing devices 102 and 212 described above with regard to FIGS. 1 and 2, respectively.
- the computing device 300 can include an input/output (“I/O") interface 302 that connects the computing device 300 to one or more of a plurality of available networks 326, such as Network A (328), Network B (330), and/or any other available network, as indicated by Network N (332).
- the I/O interface 302 can transmit data from the computing device 300 to available network(s) 326 and receive data on a computing device 300 from available network(s) 326.
- the I/O interface 302 can be a wired and/or wireless interface.
- a wired I/O interface 302 can be any of a variety of interfaces including Ethernet, IEEE 1394, parallel port, PS/2, serial port, USB, VGA, Digital Visual Interface (DVI), and/or USB.
- a wireless I/O interface 302 can be any of a variety of interfaces including an IEEE 802.1 1 WI-FI transceiver, a 3G radio transceiver, an LTE radio transceiver, a BLUETOOTH transceiver, and/or others.
- the computing device 300 can connect to one or more available networks 326 via the I/O interface 302.
- Network A (328), Network B (330), and Network N (332) represent a range of available networks 326 to which the computing device 302 may connect.
- the available networks 326 can include wired networks and/or wireless networks, such as local area networks ("LANs”), wireless area networks ("WANs”), and/or broadband wireless networks such as EDGE, CDMA, and/or LTE networks.
- the available networks 326 have been similarly represented in FIG. 1 as Networks A and B (1 16 and 120, respectively), and in FIG. 2 as the available networks 239.
- the computing device 300 can run one or more applications 303.
- the applications 303 may be one or more computer programs, including software, firmware, and/or hardware.
- the operation of one or more of the applications 303 can include, to some extent, transmitting and/or receiving data over a network.
- one or more of the data repositories 320, 322, 324 can be stored in volatile memory media, such as a random access memory (“RAM") device, and/or the data repositories 320, 322, 324 can be stored in non-volatile memory media such as a compact disc ("CD”), DVD, hard-disk drive, FLASH memory, EPROM, EEPROM, magnetic disk drive, or holographic storage.
- volatile memory media such as a random access memory (“RAM”) device
- non-volatile memory media such as a compact disc (“CD”), DVD, hard-disk drive, FLASH memory, EPROM, EEPROM, magnetic disk drive, or holographic storage.
- the data repositories 320, 322, 324 may be stored locally on the computing device 300, in removable memory such as an SD card, and/or can be stored remotely, such as on a server.
- a request data repository 320 can include stored information regarding requests for network connections that the applications 303 have provided.
- the information associated with the network connection requests can be stored in the request data repository 320, such as the identity of the requesting program; a timestamp marking a time when the request was received; the request's cost and importance as described above with regard to FIG. 2; parameters associated with the request such as the parameters 108 described above with regard to FIG. 1 including data size, minimum bandwidth, acceptable delay, and maximum latency; and/or any combination thereof.
- a budget data repository 322 can include information relating to a budget that limits and/or manages the costs expended on network connections.
- the budget data repository 322 can include data representing a monthly budget, a daily budget, carryover amounts, reserved budgets for one or more applications 303, and/or a current total daily budget.
- the budget data repository 322 can include data similar to the budget data shown and described above in budget manager 224 in FIG. 2.
- An available network data repository 324 can include information relating to available networks 326.
- the available network data repository 324 may include information regarding which networks 326 are presently available, historical data regarding available networks 326, and/or parameters associated with one or more available networks 326 such as the type of network (e.g., IEEE 802.1 1 g, IEEE 802.1 1 ⁇ , Ethernet LAN, CDMA, LTE) and/or network characteristics (e.g. latency, bandwidth, signal strength).
- the type of network e.g., IEEE 802.1 1 g, IEEE 802.1 1 ⁇ , Ethernet LAN, CDMA, LTE
- network characteristics e.g. latency, bandwidth, signal strength
- the computing device 300 can include also include a network connection manager 310 which can manage requests for network connections and determine when and how to service the requests.
- the network connection manager 310 may comprise one or more computer programs which may be software, firmware, and/or hardware.
- the network connection manager 310 can be similar to the network connection manager 105 described above with regard to FIG. 1 and the network connection manager 214 with regard to FIG. 2.
- the network connection manager 310 can include access to requests provided by applications 303.
- the connection manager 310 can access stored data used in managing the establishment of network connections from resources such as the request data repository 320, budget data repository 322, and/or the available network data repository 324.
- the network connection manager 310 can include a variety of functional aspects including a connection pricing negotiator 312, a request ranking module 314, a request delay manager 316, a budget manager 318, and/or any combination thereof.
- the connection pricing negotiator 312 can find and/or negotiate pricing information from one or more of the available networks 326.
- the connection pricing negotiator 312 can perform operations that are similar to those described above with regard to the connection pricing negotiator 216 described with regard to FIG. 2.
- the request ranking module 314 can manage one or more requests from the applications 303 by sorting and/or ranking the requests based on factors including a known or estimated cost for servicing the request, an importance associated with the request, and/or any combination thereof.
- the request ranking module 314 can perform operations that are similar to those described above with regard to as the request ranking module 220 described above with regard to FIG. 2.
- the request delay manager 316 can manage the requests that are pending in the request data repository 320 and can remove requests from the repository 320 that have exceeded their acceptable delay. When a request is removed from the repository 320, an application that provided the request can be notified that the network connection manager 310 was unable to fulfill the request.
- the request delay manager 316 can perform operations that are similar to those described above with regard as the network connection manager 1 10 described above with regard to FIG. 1 .
- the budget manager 318 can manage the costs of establishing and/or using network connections in order to stay within a budget.
- the budget manager 318 can perform operations that are similar to those described above with regard as the budget manager 224 described above with regard to FIG. 2.
- the networks A-N (328-332) can each include one or more wireless access points (e.g., wireless transceivers, cellular network towers, wireless routers, wireless range extenders/repeaters) from which wireless signals for the networks A- N (328-332) are transmitted and received.
- wireless access points e.g., wireless transceivers, cellular network towers, wireless routers, wireless range extenders/repeaters
- the networks A-N (328-332) are depicted in FIG. 3 as being associated with example access points 334-338.
- Each of the networks A-N (328-332) can be associated with (include) multiple access points.
- the networks A-N can also each be associated with computer systems that manage network access and use by client computing devices, such as the computing device 300.
- the network A 328 is associated with a computer system 340 and the network N 332 is associated with computer system 342.
- the computer systems 340 and 342 can each include one or more computing devices, such as a desktop computer, a computer server, a distributed computing system (e.g., cloud computing system, networked computer servers), and/or other appropriate computing devices.
- the network B 330 can be associated with a computer system similar to the computer systems 340 and 342.
- the computer systems 340 and 342 are depicted as including bid generators (344 and 346), network monitor units (348 and 350), and access control units (352 and 354).
- the bid generators 344 and 346 can generate bids for client computing devices, such as the computing device 300, that are requesting access to the networks 328 and 332.
- the bids generated by the bid generators 344 and 346 can be based a variety of information, such as predetermined pricing information (e.g., predetermined pricing ranges within which bids are bound, pricing schedules based on data quantities and transmission speed), current network usage
- the bid generators 344 and 346 can provide bids to the computing device 300 using the access points 334 and 338, respectively.
- the network monitor units 348 and 350 of the computer systems 340 and 342, respectively, can monitor and determine current network usage statistics for the networks A and N (328 and 332).
- the network monitor units 348 can collect usage statistics (e.g., latency information, used bandwidth, available bandwidth) from various components of the networks 328 and 332, such as usage information from routers, switches, access points, and/or other appropriate computing devices.
- the network monitor units 348 and 350 can provide network usage statistics to the bid generators 344 and 346, which can generate bids based on current usage information.
- the network monitor units 348 and 350 may additionally and/or alternatively provide some network usage statistics to client computing devices, such as the computing device 300, to inform the client computing devices as to current network conditions for the networks 328 and 332, which the client computing devices can use to determine whether to establish network connections with the networks 328 and 332 using the access points 334 and 338.
- the access control units 352 and 354 can control access to the networks 328 and 332 by client computing devices, such as the computing device 300, through the access points 334 and 338.
- the access control units 352 and 354 can instruct the access points 334 and 338 to restrict access to only client computing devices which are currently authorized to use the networks 328 and 332, which may be indicated by various identifying information provided by the client computing devices, such as unique identifiers (e.g., MAC addresses, usernames) and/or authentication information (e.g., authorization credentials).
- unique identifiers e.g., MAC addresses, usernames
- authentication information e.g., authorization credentials
- the access control units 352 and 354 may restrict access to the networks 328 and 332 to client computing devices that have accepted bids from the bid generator 344 and for which a payment method has been established (e.g., credit card has been verified, debit account has been identified with sufficient available balance).
- a payment method e.g., credit card has been verified, debit account has been identified with sufficient available balance
- FIGS. 4A-B are flowcharts of example techniques 400 and 450 for establishing network connections.
- an example computing device 402 determines for a period of time whether to establish a connection with available networks based on one or more parameters (e.g., minimum bandwidth, maximum latency).
- an example computing device 452 determines whether to establish one or more requested networks connections with one or more available networks based on bids that are obtained for the available networks.
- the example techniques 400 and 450 can be combined, in whole or in part.
- the computing device 402 can be any of a variety of appropriate computing devices, such as the computing device 102, the computing device 212, and/or the computing device 300.
- the networks A (404) and B (406) can be any of a variety of appropriate wireless networks, such as the networks 1 16, 120, and 132; the networks 234, 236, and 238; and/or the networks 328, 330, and 332.
- the networks A (404) and B (406) can each include one or more access points, such as the access points 334-338, and can include one or more associated computer systems, such as the computer systems 340 and 342.
- the computing device 402 can receive a request to establish a network connection (408).
- the computing device 102 receives a request (106) to establish a network connection from the application 104.
- the received request can include one or more parameters for the requested network connection, such as the example parameters 108 discussed above with regard to FIG. 1 .
- the computing device 402 can detect available networks (410).
- the computing device 402 can use a wireless transceiver to scan for beacon signals from nearby networks, such as a wireless beacon signal that is transmitted by the network A 404 (412).
- the computing device 402 can transmit a request to the network A 404 current network information (e.g., available bandwidth, current latency).
- the network A (404) can receive the request from the computing device 402 (416) and, in response to receiving the request, can identify current network information (418).
- the network monitor unit 348 of the computer system 340 can identify current network information for the network A 328.
- the network A (404) can provide the current network information (420) and the computing device 402 can receive the current information for the network A 404 (422).
- the computing device 402 can determine whether the network A satisfies the parameters for the network connection that were included in the request to establish the network connection (424). For example, the network connection manager 1 10 of the client computing device 102 can compare the requested parameters 108 with the current network information 1 18 and 122 for the networks 1 16 and 1 18, respectively, to determine whether to establish a connection with the networks 1 16 and/or 1 18. When the current network information does not satisfy the parameters set forth in the request, the computing device 402 can delay establishing a network connection (426).
- the computing device 402 can determine whether a permissible duration of time to establish the requested network connection has expired (432). For example, the network connection manager 1 10 of the client computing device 102 can check whether an acceptable delay for establishing a network connection requested by the application 104 has elapsed in response to detecting the presence of network C (132). In response to determining that the duration of time for the request has not expired, the computing device 402 can request network information from the network B 406 (434).
- the computing device 402 can discard the request and/or provide an indication to the requesting entity (e.g., an application, a user, another computing device that is tethered to the computing device 402) that the requested network connection was not established based on a time period for the request having expired.
- the network B (406) can receive the request from the computing device 402 (436), identify current network information for the network B (438), and can provide the current network information to the computing device 402 (440), which the computing device can receive (442) and use to determine whether the network B satisfies the parameters set forth in the request (444).
- the steps 434- 444 for network B (406) can be similar to the steps 414-424 for network A (404).
- the network B (406) has current network conditions (e.g., available bandwidth, latency) that satisfy the parameters of the request, similar to the current network conditions of the network C (132) satisfying the parameters 108 of the request described above with regard to FIG. 1 .
- the computing device 402 can establish a network connection with the network B (446).
- Establishing a connection can include the computing device 402 transmitting information to the network B (406) that indicates a request from the computing device 402 to use the network B (406) and any additional information that may be requested by the network B (406) for access, such as payment information and/or identifying information for the computing device 402 and/or an associated user.
- the computing device 452 can be any of a variety of appropriate computing devices, such as the computing device 102, the computing device 212, the computing device 300, and/or the computing device 402.
- the networks A (454) and B (456) can be any of a variety of appropriate wireless networks, such as the networks 1 16, 120, and 132; the networks 234, 236, and 238; the networks 328, 330, and 332; and/or the networks 404 and 406.
- the networks A (454) and B (456) can each include one or more access points, such as the access points 334-338, and can include one or more associated computer systems, such as the computer systems 340 and 342.
- the computing device 452 receives requests to establish network connections from one or more requesting entities (458), such as one or more applications, users of the computing device 452, services that are running on the computing device 452, and/or devices that are tethered to the computing device 452.
- the requests received by the computing device 452 can each be received separately over a period of time.
- the client computing device 212 receives the requests 206-210 from the applications 200-204.
- the computing device 452 can detect available wireless networks (460), such as the network A (454) and the network B (456), based on beacon signals that are transmitted by the networks A and B (462a-b). In response to detecting that networks A and B are within range of the computing device 452, the computing device 452 can provide requests for bids to the networks A and B (464).
- requests for bids can include information that identifies parameters for the network connection requests that were received by the computing device 452.
- the requests for network connection requests can each include one or more connection parameters, such as a minimum
- connection bandwidth a maximum latency, a connection quality, and/or an amount of data to be transmitted.
- the computing device 452 can provide at least a portion of the network connection parameters for the received requests to the networks A and B (454 and 456) as part of the requests for bids.
- the networks A and B (454 and 456) can receive the requests (466a- b), can identify current use information for the networks (468a-b), and based, at least in part, on the current use information can generate bids to provide to the computing device 452 (470a-b).
- the computer systems 340 and 342 can use the network monitor units 348 and 350 to identify the current use of the networks 328 and 332, and can use the access control units 352 and 354 to identify future commitments network use by other computing devices.
- the bid generators 344 and 346 can generate bids based, at least in part, on the information identified by the network monitor units 348 and 350, and the information identified by the access control units 352 and 354.
- the networks A and B (454 and 456) can wirelessly transmit the generated bids to the computing device 452 (472a-b).
- the computing device 452 can receive the bids (474) and can proceed to use the bid information and/or other information regarding the requests to rank the received requests to determine which, if any of the requested network connections, should be established. For instance, the computing device 452 can determine the importance of the requests (476), determine the costs for requests based on the received bids from the networks A and B (478), and/or determine timeframes within which the requests will expire (480). Based on such information (e.g., request importance, costs, expiration timeframe), the computing device 452 can rank the requests. For example, the request ranking module of the client computing device 212 can rank the requests 1 -5 based on determined costs (determined based on the pricing information 228-232 from the networks 234-238) and determined importance of the requests 1 -5.
- the request ranking module of the client computing device 212 can rank the requests 1 -5 based on determined costs (determined based on the pricing information 228-232 from the networks 234-238) and determined importance of the requests 1 -5.
- the computing device 452 can access budget information for the computing device 452 and/or one or more users associated with the computing device 452 (484) and, based on the ranked requests and the budget information, can select one or more of the requests (486).
- the budget manager 224 of the client computing device 212 can use the information from the request ranking module 220 and budget information (e.g., monthly budget, avg. daily spend amount, carry-over amount, reserved budget information, and/or remaining budget for current time period) to select one or more of the requests.
- the computing device 452 can establish one or more connections with the networks A and/or B for the selected requests (488). [0085] FIG.
- FIG. 5 is a block diagram of computing devices 500, 550 that may be used to implement the systems and methods described in this document, as either a client or as a server or plurality of servers.
- Computing device 500 is intended to represent various forms of digital computers, such as laptops, desktops,
- Computing device 550 is intended to represent various forms of mobile devices, such as personal digital assistants, cellular telephones, smartphones, and other similar computing devices. Additionally computing device 500 or 550 can include Universal Serial Bus (USB) flash drives.
- USB flash drives may store operating systems and other applications.
- the USB flash drives can include input/output components, such as a wireless transmitter or USB connector that may be inserted into a USB port of another computing device.
- the components shown here, their connections and relationships, and their functions, are meant to be exemplary only, and are not meant to limit implementations described and/or claimed in this document.
- Computing device 500 includes a processor 502, memory 504, a storage device 506, a high-speed interface 508 connecting to memory 504 and highspeed expansion ports 510, and a low speed interface 512 connecting to low speed bus 514 and storage device 506.
- Each of the components 502, 504, 506, 508, 510, and 512 are interconnected using various busses, and may be mounted on a common motherboard or in other manners as appropriate.
- the processor 502 can process instructions for execution within the computing device 500, including instructions stored in the memory 504 or on the storage device 506 to display graphical information for a GUI on an external input/output device, such as display 516 coupled to high speed interface 508.
- multiple processors and/or multiple buses may be used, as appropriate, along with multiple memories and types of memory.
- multiple computing devices 500 may be connected, with each device providing portions of the necessary operations (e.g., as a server bank, a group of blade servers, or a multi-processor system).
- the memory 504 stores information within the computing device 500.
- the memory 504 is a volatile memory unit or units.
- the memory 504 is a non-volatile memory unit or units.
- the memory 504 may also be another form of computer-readable medium, such as a magnetic or optical disk.
- the storage device 506 is capable of providing mass storage for the computing device 500.
- the storage device 506 may be or contain a computer-readable medium, such as a floppy disk device, a hard disk device, an optical disk device, or a tape device, a flash memory or other similar solid state memory device, or an array of devices, including devices in a storage area network or other configurations.
- a computer program product can be tangibly embodied in an information carrier.
- the computer program product may also contain instructions that, when executed, perform one or more methods, such as those described above.
- the information carrier is a computer- or machine-readable medium, such as the memory 504, the storage device 506, or memory on processor 502.
- the high speed controller 508 manages bandwidth-intensive operations for the computing device 500, while the low speed controller 512 manages lower bandwidth-intensive operations.
- the high-speed controller 508 is coupled to memory 504, display 516 (e.g., through a graphics processor or accelerator), and to high-speed expansion ports 510, which may accept various expansion cards (not shown).
- low-speed controller 512 is coupled to storage device 506 and low-speed expansion port 514.
- the computing device 500 may be implemented in a number of different forms, as shown in the figure. For example, it may be implemented as a standard server 520, or multiple times in a group of such servers. It may also be implemented as part of a rack server system 524. In addition, it may be
- computing device 500 may be combined with other components in a mobile device (not shown), such as device 550.
- a mobile device not shown
- Each of such devices may contain one or more of computing device 500, 550, and an entire system may be made up of multiple computing devices 500, 550 communicating with each other.
- Computing device 550 includes a processor 552, memory 564, an input/output device such as a display 554, a communication interface 566, and a transceiver 568, among other components.
- the device 550 may also be provided with a storage device, such as a microdrive or other device, to provide additional storage.
- a storage device such as a microdrive or other device, to provide additional storage.
- the processor 552 can execute instructions within the computing device 550, including instructions stored in the memory 564.
- the processor may be implemented as a chipset of chips that include separate and multiple analog and digital processors. Additionally, the processor may be implemented using any of a number of architectures.
- the processor 552 may be a CISC (Complex Instruction Set Computers) processor, a RISC (Reduced Instruction Set Computer) processor, or a M ISC (Minimal Instruction Set Computer) processor.
- the processor may provide, for example, for coordination of the other components of the device 550, such as control of user interfaces, applications run by device 550, and wireless communication by device 550.
- Processor 552 may communicate with a user through control interface 558 and display interface 556 coupled to a display 554.
- the display 554 may be, for example, a TFT (Thin-Film-Transistor Liquid Crystal Display) display or an OLED (Organic Light Emitting Diode) display, or other appropriate display technology.
- the display interface 556 may comprise appropriate circuitry for driving the display 554 to present graphical and other information to a user.
- the control interface 558 may receive commands from a user and convert them for submission to the processor 552.
- an external interface 562 may be provide in communication with processor 552, so as to enable near area communication of device 550 with other devices.
- External interface 562 may provide, for example, for wired communication in some implementations, or for wireless communication in other implementations, and multiple interfaces may also be used.
- the memory 564 stores information within the computing device 550.
- the memory 564 can be implemented as one or more of a computer-readable medium or media, a volatile memory unit or units, or a non-volatile memory unit or units.
- Expansion memory 574 may also be provided and connected to device 550 through expansion interface 572, which may include, for example, a SIMM (Single In Line Memory Module) card interface.
- SIMM Single In Line Memory Module
- expansion memory 574 may provide extra storage space for device 550, or may also store applications or other information for device 550.
- expansion memory 574 may include instructions to carry out or supplement the processes described above, and may include secure information also.
- expansion memory 574 may be provide as a security module for device 550, and may be programmed with instructions that permit secure use of device 550.
- secure applications may be provided via the SIMM cards, along with additional information, such as placing identifying information on the SIMM card in a non-hackable manner.
- the memory may include, for example, flash memory and/or NVRAM memory, as discussed below.
- a computer program product is tangibly embodied in an information carrier.
- the computer program product contains instructions that, when executed, perform one or more methods, such as those described above.
- the information carrier is a computer- or machine-readable medium, such as the memory 564, expansion memory 574, or memory on processor 552 that may be received, for example, over transceiver 568 or external interface 562..
- Device 550 may communicate wirelessly through communication interface 566, which may include digital signal processing circuitry where necessary. Communication interface 566 may provide for communications under various modes or protocols, such as GSM voice calls, SMS, EMS, or MMS messaging, CDMA, TDMA, PDC, WCDMA, CDMA2000, or GPRS, among others. Such communication may occur, for example, through radio-frequency transceiver 568. In addition, short- range communication may occur, such as using a Bluetooth, WiFi, or other such transceiver (not shown). In addition, GPS (Global Positioning System) receiver module 570 may provide additional navigation- and location-related wireless data to device 550, which may be used as appropriate by applications running on device 550.
- GPS Global Positioning System
- Device 550 may also communicate audibly using audio codec 560, which may receive spoken information from a user and convert it to usable digital information. Audio codec 560 may likewise generate audible sound for a user, such as through a speaker, e.g., in a handset of device 550. Such sound may include sound from voice telephone calls, may include recorded sound (e.g., voice messages, music files, etc.) and may also include sound generated by applications operating on device 550.
- Audio codec 560 may receive spoken information from a user and convert it to usable digital information. Audio codec 560 may likewise generate audible sound for a user, such as through a speaker, e.g., in a handset of device 550. Such sound may include sound from voice telephone calls, may include recorded sound (e.g., voice messages, music files, etc.) and may also include sound generated by applications operating on device 550.
- the computing device 550 may be implemented in a number of different forms, as shown in the figure. For example, it may be implemented as a cellular telephone 580. It may also be implemented as part of a smartphone 582, personal digital assistant, or other similar mobile device.
- Various implementations of the systems and techniques described here can be realized in digital electronic circuitry, integrated circuitry, specially designed ASICs (application specific integrated circuits), computer hardware, firmware, software, and/or combinations thereof.
- ASICs application specific integrated circuits
- These various implementations can include implementation in one or more computer programs that are executable and/or interpretable on a programmable system including at least one programmable processor, which may be special or general purpose, coupled to receive data and instructions from, and to transmit data and instructions to, a storage system, at least one input device, and at least one output device.
- the systems and techniques described here can be implemented on a computer having a display device (e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor) for displaying information to the user and a keyboard and a pointing device (e.g., a mouse or a trackball) by which the user can provide input to the computer.
- a display device e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor
- a keyboard and a pointing device e.g., a mouse or a trackball
- Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback (e.g., visual feedback, auditory feedback, or tactile feedback); and input from the user can be received in any form, including acoustic, speech, or tactile input.
- the systems and techniques described here can be implemented in a computing system that includes a back end component (e.g., as a data server), or that includes a middleware component (e.g., an application server), or that includes a front end component (e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the systems and techniques described here), or any combination of such back end, middleware, or front end components.
- the components of the system can be interconnected by any form or medium of digital data communication (e.g., a communication network). Examples of communication networks include a local area network ("LAN”), a wide area network (“WAN”), peer-to-peer networks (having ad- hoc or static members), grid computing infrastructures, and the Internet.
- LAN local area network
- WAN wide area network
- peer-to-peer networks having ad- hoc or static members
- grid computing infrastructures and the Internet.
- the computing system can include clients and servers.
- a client and server are generally remote from each other and typically interact through a communication network.
- the relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.
Abstract
Description
Claims
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US201161530395P | 2011-09-01 | 2011-09-01 | |
PCT/US2012/053660 WO2013033702A1 (en) | 2011-09-01 | 2012-09-04 | Establishing network connections |
Publications (3)
Publication Number | Publication Date |
---|---|
EP2751702A1 true EP2751702A1 (en) | 2014-07-09 |
EP2751702A4 EP2751702A4 (en) | 2015-03-25 |
EP2751702B1 EP2751702B1 (en) | 2018-05-16 |
Family
ID=47756955
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
EP12828113.6A Active EP2751702B1 (en) | 2011-09-01 | 2012-09-04 | Establishing network connections |
Country Status (4)
Country | Link |
---|---|
US (1) | US8650325B2 (en) |
EP (1) | EP2751702B1 (en) |
CN (1) | CN104067255B (en) |
WO (1) | WO2013033702A1 (en) |
Families Citing this family (27)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20110280247A1 (en) * | 2010-05-17 | 2011-11-17 | Google Inc. | System and method for reducing latency via multiple network connections |
US20130107783A1 (en) * | 2011-10-26 | 2013-05-02 | At&T Intellectual Property I, L.P | Intelligent Hot Spot and Tethering |
US9838287B2 (en) | 2012-01-27 | 2017-12-05 | Microsoft Technology Licensing, Llc | Predicting network data consumption relative to data usage patterns |
KR20130120291A (en) * | 2012-04-25 | 2013-11-04 | 주식회사 아이디어웨어 | Wireless terminal device and method for network traffic reduction |
US20140068212A1 (en) * | 2012-09-04 | 2014-03-06 | Microsoft Corporation | Device backups and updates in view of data usage statistics |
GB2506870B (en) * | 2012-10-09 | 2014-11-12 | Gos Networks Ltd | Method for the reduction of signalling traffic on mobile devices |
KR102002407B1 (en) | 2013-05-07 | 2019-07-23 | 삼성전자주식회사 | Method and apparatus for transmitting contents in a portable terminal |
US9301245B2 (en) * | 2013-06-14 | 2016-03-29 | Qualcomm Incorporated | Toll path routing protocol |
US9369342B2 (en) | 2013-11-15 | 2016-06-14 | Microsoft Technology Licensing, Llc | Configuring captive portals with a cloud service |
US9554323B2 (en) * | 2013-11-15 | 2017-01-24 | Microsoft Technology Licensing, Llc | Generating sequenced instructions for connecting through captive portals |
US10382305B2 (en) | 2013-11-15 | 2019-08-13 | Microsoft Technology Licensing, Llc | Applying sequenced instructions to connect through captive portals |
US10057302B2 (en) | 2013-11-15 | 2018-08-21 | Microsoft Technology Licensing, Llc | Context-based selection of instruction sets for connecting through captive portals |
CN112954741B (en) * | 2013-12-26 | 2024-03-15 | 索尼公司 | Mobile terminal and realization method for cooperative transmission between mobile terminals |
US10412230B2 (en) * | 2014-07-14 | 2019-09-10 | Google Llc | System and method for retail SIM marketplace |
KR102274950B1 (en) * | 2014-09-11 | 2021-07-08 | 삼성전자주식회사 | Apparatus and method for multi-network access in wireless communication system |
US10769533B2 (en) * | 2015-09-04 | 2020-09-08 | Baidu Usa Llc | Systems and methods for efficient neural network deployments |
US10200272B1 (en) | 2015-09-30 | 2019-02-05 | Alarm.Com Incorporated | Dynamic availability-based wireless data transmission |
EP3174248A1 (en) | 2015-11-26 | 2017-05-31 | R3 - Reliable Realtime Radio Communications GmbH | Communication system |
US10028133B2 (en) * | 2016-10-24 | 2018-07-17 | General Motors Llc | Timing delivery of over-the-air data to a vehicle |
CN108234149B (en) * | 2016-12-09 | 2023-01-24 | 沈阳美行科技股份有限公司 | Network request management method and device |
WO2018201394A1 (en) * | 2017-05-04 | 2018-11-08 | 北京小米移动软件有限公司 | Method and device for accessing base station |
US10972575B2 (en) * | 2017-06-02 | 2021-04-06 | Huawei Technologies Co., Ltd. | Method and system for supporting edge computing |
EP3637861B1 (en) * | 2018-10-10 | 2021-12-22 | Telia Company AB | Selection of a mobile communication network service |
US11883737B2 (en) | 2019-09-27 | 2024-01-30 | Qualcomm Incorporated | Methods and apparatuses for game state based network interface management |
CN110768903A (en) * | 2019-10-28 | 2020-02-07 | 北京字节跳动网络技术有限公司 | Method, device, terminal and storage medium for optimizing network connection |
US11432201B2 (en) | 2020-06-26 | 2022-08-30 | T-Mobile Usa, Inc. | Network application programming interface (API) exposure |
US11886767B2 (en) * | 2022-06-17 | 2024-01-30 | T-Mobile Usa, Inc. | Enable interaction between a user and an agent of a 5G wireless telecommunication network using augmented reality glasses |
Citations (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
WO1998029975A2 (en) * | 1997-01-03 | 1998-07-09 | Cellport Labs, Inc. | Communications channel selection |
US20050059397A1 (en) * | 2003-09-16 | 2005-03-17 | Wen Zhao | Methods and apparatus for selecting a wireless network based on quality of service (QoS) criteria associated with an application |
US20090061853A1 (en) * | 2007-08-27 | 2009-03-05 | Thomas Anschutz | Communication devices that utilize various communication networks to satisfy communication needs of device applications |
US20110151924A1 (en) * | 2009-12-17 | 2011-06-23 | Miller Rosemarie B | Method and apparatus for providing layered wireless networks |
Family Cites Families (35)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6289322B1 (en) | 1998-03-03 | 2001-09-11 | Checkfree Corporation | Electronic bill processing |
CA2077061C (en) * | 1991-11-22 | 1998-04-21 | Mark J. Baugher | Scheduling system for distributed multimedia resources |
US5479411A (en) | 1993-03-10 | 1995-12-26 | At&T Corp. | Multi-media integrated message arrangement |
US5699511A (en) * | 1995-10-10 | 1997-12-16 | International Business Machines Corporation | System and method for dynamically varying low level file system operation timeout parameters in network systems of variable bandwidth |
US6058309A (en) | 1996-08-09 | 2000-05-02 | Nortel Networks Corporation | Network directed system selection for cellular and PCS enhanced roaming |
US6148197A (en) | 1998-03-06 | 2000-11-14 | Sbc Technology Resources, Inc. | Intelligent roaming system with over the air programming |
US7076447B1 (en) | 1999-06-10 | 2006-07-11 | Inphonic, Inc. | Systems and methods for aggregating buyers for the purchase of telecommunication services via a network |
US6965948B1 (en) * | 1999-11-12 | 2005-11-15 | Telefonaktiebolaget Lm Ericsson (Publ) | Method and apparatus for selective network access |
US6381315B1 (en) | 1999-12-02 | 2002-04-30 | Eli Nhaissi | Universal exchange for making least-cost non-local telephone calls |
US7444669B1 (en) | 2000-05-05 | 2008-10-28 | Microsoft Corporation | Methods and systems for providing variable rates of service for accessing networks, methods and systems for accessing the internet |
US6690936B1 (en) | 2000-10-31 | 2004-02-10 | Telefonaktiebolaget Lm Ericsson (Publ) | Air-interface efficiency in wireless communication systems |
WO2002041580A1 (en) | 2000-11-14 | 2002-05-23 | Siemens Aktiengesellschaft | Device and method for selecting network accesses |
US7433929B2 (en) * | 2000-12-29 | 2008-10-07 | At&T Mobility Ii Llc | Intelligent network selection based on quality of service and applications over different wireless networks |
US20020111915A1 (en) | 2001-02-12 | 2002-08-15 | Clemens Christopher Donald | Payment management |
US20020138398A1 (en) | 2001-03-26 | 2002-09-26 | Kalin Dan M. | Automated bandwidth exchange node system |
US20020169716A1 (en) | 2001-05-08 | 2002-11-14 | Johnson Jack J. | Bidding tor telecommunications traffic and billing for service |
US8818833B2 (en) * | 2002-02-14 | 2014-08-26 | International Business Machines Corporation | Method and system for managing service requests across multiple systems |
JP3828444B2 (en) * | 2002-03-26 | 2006-10-04 | 株式会社日立製作所 | Data communication relay device and system |
JP2006506880A (en) | 2002-11-20 | 2006-02-23 | インターナショナル・ビジネス・マシーンズ・コーポレーション | Method for managing network resources for wireless communication |
FI20030827A0 (en) | 2003-06-03 | 2003-06-03 | Nokia Corp | Transmission of price information in a telecommunication system |
US6931109B1 (en) * | 2003-06-12 | 2005-08-16 | Sprint Communications Company L.P. | Link selection parameter modification for network access selection |
US7466655B1 (en) * | 2003-09-16 | 2008-12-16 | Cisco Technology, Inc. | Ant-based method for discovering a network path that satisfies a quality of service equipment |
US7526765B2 (en) * | 2003-11-26 | 2009-04-28 | International Business Machines Corporation | Method and apparatus for on-demand resource allocation and job management |
JP2006033105A (en) | 2004-07-13 | 2006-02-02 | Aruze Corp | Media communication apparatus and program |
US7417962B2 (en) | 2004-09-15 | 2008-08-26 | Alcatel Lucent | QoS capable mobile ad-hoc network device |
US8565185B2 (en) | 2005-04-13 | 2013-10-22 | Toshiba America Research, Inc. | Framework of media-independent pre-authentication support for PANA |
US20060256772A1 (en) | 2005-05-12 | 2006-11-16 | Yahoo! Inc. | Selecting a network for routing real-time audio |
US20070253449A1 (en) * | 2005-12-22 | 2007-11-01 | Arnab Das | Methods and apparatus related to determining, communicating, and/or using delay information |
US7907938B2 (en) | 2006-08-31 | 2011-03-15 | Alcatel-Lucent Usa Inc. | Apparatus and method for data transmission in a wireless communications network |
US7885654B2 (en) | 2006-10-10 | 2011-02-08 | Apple Inc. | Dynamic carrier selection |
US7792491B2 (en) * | 2006-10-18 | 2010-09-07 | Matthew Robert Whitten | Wireless printing using a mobile computing device |
US8438267B2 (en) | 2006-12-28 | 2013-05-07 | At&T Intellectual Property Ii, L.P. | Internet-wide scheduling of transactions |
US8036367B2 (en) | 2007-03-19 | 2011-10-11 | Google Inc. | Flexible communication systems and methods |
US8238243B2 (en) * | 2009-02-12 | 2012-08-07 | Arcsoft, Inc. | System and method for network optimization by managing low priority data transfers |
US8713578B2 (en) * | 2009-03-25 | 2014-04-29 | International Business Machines Corporation | Managing job execution |
-
2012
- 2012-09-04 WO PCT/US2012/053660 patent/WO2013033702A1/en active Application Filing
- 2012-09-04 EP EP12828113.6A patent/EP2751702B1/en active Active
- 2012-09-04 CN CN201280053732.6A patent/CN104067255B/en active Active
- 2012-09-28 US US13/631,168 patent/US8650325B2/en active Active
Patent Citations (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
WO1998029975A2 (en) * | 1997-01-03 | 1998-07-09 | Cellport Labs, Inc. | Communications channel selection |
US20050059397A1 (en) * | 2003-09-16 | 2005-03-17 | Wen Zhao | Methods and apparatus for selecting a wireless network based on quality of service (QoS) criteria associated with an application |
US20090061853A1 (en) * | 2007-08-27 | 2009-03-05 | Thomas Anschutz | Communication devices that utilize various communication networks to satisfy communication needs of device applications |
US20110151924A1 (en) * | 2009-12-17 | 2011-06-23 | Miller Rosemarie B | Method and apparatus for providing layered wireless networks |
Non-Patent Citations (1)
Title |
---|
See also references of WO2013033702A1 * |
Also Published As
Publication number | Publication date |
---|---|
WO2013033702A1 (en) | 2013-03-07 |
CN104067255B (en) | 2016-12-28 |
CN104067255A (en) | 2014-09-24 |
US8650325B2 (en) | 2014-02-11 |
US20130060653A1 (en) | 2013-03-07 |
EP2751702A4 (en) | 2015-03-25 |
EP2751702B1 (en) | 2018-05-16 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US8650325B2 (en) | Establishing network connections | |
JP5716090B2 (en) | Method and apparatus for reducing data transmission overhead | |
US9161200B2 (en) | Managing network data transfers in view of multiple data usage plans | |
US9031531B2 (en) | Distributed computing task costing with a mobile device | |
US9414360B2 (en) | Multi-mode device (MMD) middleware for cloud spectrum services spectrum allocation | |
US20150257038A1 (en) | Devices, systems, and methods for sharing network capacity | |
US20110235592A1 (en) | Network resource leasing | |
TW201216750A (en) | Battery power management for a mobile device | |
US9843454B2 (en) | Techniques for contextual mobile data access | |
WO2017054138A1 (en) | Method and device for automatically selecting network according to tariff standard, server, and terminal | |
US20160192344A1 (en) | Techniques for peer-to-peer network sharing | |
US8681725B2 (en) | System imposed throttled transmission | |
US20210352041A1 (en) | Domain-name acquisition method, website access method, and server | |
US10284491B2 (en) | Increased network resources in exchange for sharing of device resources | |
WO2015081023A1 (en) | Systems and methods for conducting reverse auctions to improve qoe of networked applications | |
US9538349B2 (en) | System and method for managing access to a service for a communication device | |
US9026077B2 (en) | Delayed delivery with bounded interference in a cellular data network | |
US20230231813A1 (en) | Enhanced network with data flow differentiation | |
US10728911B2 (en) | Wireless communication device | |
CA2792629C (en) | System and method for managing access to a service for a communication device | |
Wang et al. | User-Oriented Network Selection in Heterogeneous Integrated Networks |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PUAI | Public reference made under article 153(3) epc to a published international application that has entered the european phase |
Free format text: ORIGINAL CODE: 0009012 |
|
17P | Request for examination filed |
Effective date: 20140326 |
|
AK | Designated contracting states |
Kind code of ref document: A1Designated state(s): AL AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HR HU IE IS IT LI LT LU LV MC MK MT NL NO PL PT RO RS SE SI SK SM TR |
|
DAX | Request for extension of the european patent (deleted) | ||
A4 | Supplementary search report drawn up and despatched |
Effective date: 20150224 |
|
RIC1 | Information provided on ipc code assigned before grant |
Ipc: H04W 48/18 20090101ALN20150218BHEPIpc: H04L 29/08 20060101ALI20150218BHEPIpc: H04W 76/02 20090101ALN20150218BHEPIpc: H04L 12/54 20130101AFI20150218BHEPIpc: H04L 29/06 20060101ALN20150218BHEP |
|
17Q | First examination report despatched |
Effective date: 20160208 |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R079Ref document number: 602012046468Country of ref document: DEFree format text: PREVIOUS MAIN CLASS: G06F0015160000Ipc: H04L0012540000 |
|
RAP1 | Party data changed (applicant data changed or rights of an application transferred) |
Owner name: GOOGLE LLC |
|
GRAP | Despatch of communication of intention to grant a patent |
Free format text: ORIGINAL CODE: EPIDOSNIGR1 |
|
RIC1 | Information provided on ipc code assigned before grant |
Ipc: H04W 76/02 20090101ALN20171106BHEPIpc: H04L 29/06 20060101ALN20171106BHEPIpc: H04L 29/08 20060101ALI20171106BHEPIpc: H04L 12/54 20130101AFI20171106BHEPIpc: H04W 48/18 20090101ALN20171106BHEP |
|
INTG | Intention to grant announced |
Effective date: 20171123 |
|
GRAS | Grant fee paid |
Free format text: ORIGINAL CODE: EPIDOSNIGR3 |
|
GRAA | (expected) grant |
Free format text: ORIGINAL CODE: 0009210 |
|
AK | Designated contracting states |
Kind code of ref document: B1Designated state(s): AL AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HR HU IE IS IT LI LT LU LV MC MK MT NL NO PL PT RO RS SE SI SK SM TR |
|
REG | Reference to a national code |
Ref country code: GBRef legal event code: FG4D |
|
REG | Reference to a national code |
Ref country code: CHRef legal event code: EP |
|
REG | Reference to a national code |
Ref country code: IERef legal event code: FG4D |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R096Ref document number: 602012046468Country of ref document: DE |
|
REG | Reference to a national code |
Ref country code: ATRef legal event code: REFRef document number: 1000530Country of ref document: ATKind code of ref document: TEffective date: 20180615 |
|
REG | Reference to a national code |
Ref country code: NLRef legal event code: FP |
|
REG | Reference to a national code |
Ref country code: FRRef legal event code: PLFPYear of fee payment: 7 |
|
REG | Reference to a national code |
Ref country code: LTRef legal event code: MG4D |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: FIFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180516Ref country code: BGFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180816Ref country code: SEFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180516Ref country code: NOFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180816Ref country code: ESFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180516Ref country code: LTFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180516 |
|
PGFP | Annual fee paid to national office [announced via postgrant information from national office to epo] |
Ref country code: DEPayment date: 20180920Year of fee payment: 7 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: HRFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180516Ref country code: GRFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180817Ref country code: LVFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180516Ref country code: RSFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180516 |
|
REG | Reference to a national code |
Ref country code: ATRef legal event code: MK05Ref document number: 1000530Country of ref document: ATKind code of ref document: TEffective date: 20180516 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: SKFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180516Ref country code: EEFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180516Ref country code: CZFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180516Ref country code: ROFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180516Ref country code: ATFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180516Ref country code: DKFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180516Ref country code: PLFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180516 |
|
REG | Reference to a national code |
Ref country code: CHRef legal event code: PKFree format text: BERICHTIGUNGEN |
|
RIC2 | Information provided on ipc code assigned after grant |
Ipc: H04W 48/18 20090101ALN20171106BHEPIpc: H04W 76/02 20090101ALN20171106BHEPIpc: H04L 12/54 20130101AFI20171106BHEPIpc: H04L 29/06 20060101ALN20171106BHEPIpc: H04L 29/08 20060101ALI20171106BHEP |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R097Ref document number: 602012046468Country of ref document: DE |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: ITFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180516Ref country code: SMFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180516 |
|
PLBE | No opposition filed within time limit |
Free format text: ORIGINAL CODE: 0009261 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: NO OPPOSITION FILED WITHIN TIME LIMIT |
|
26N | No opposition filed |
Effective date: 20190219 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: MCFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180516 |
|
REG | Reference to a national code |
Ref country code: CHRef legal event code: PL |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: SIFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180516 |
|
REG | Reference to a national code |
Ref country code: BERef legal event code: MMEffective date: 20180930 |
|
REG | Reference to a national code |
Ref country code: IERef legal event code: MM4A |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: LUFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20180904 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: IEFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20180904 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: LIFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20180930Ref country code: BEFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20180930Ref country code: CHFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20180930 |
|
PGFP | Annual fee paid to national office [announced via postgrant information from national office to epo] |
Ref country code: FRPayment date: 20190925Year of fee payment: 8Ref country code: NLPayment date: 20190926Year of fee payment: 8 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: ALFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180516 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: MTFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20180904 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: TRFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180516 |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R119Ref document number: 602012046468Country of ref document: DE |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: PTFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180516Ref country code: HUFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMIT; INVALID AB INITIOEffective date: 20120904 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: CYFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180516Ref country code: MKFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20180516 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: DEFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20200401Ref country code: ISFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180916 |
|
REG | Reference to a national code |
Ref country code: NLRef legal event code: MMEffective date: 20201001 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: NLFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20201001 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: FRFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20200930 |
|
P01 | Opt-out of the competence of the unified patent court (upc) registered |
Effective date: 20230506 |
|
PGFP | Annual fee paid to national office [announced via postgrant information from national office to epo] |
Ref country code: GBPayment date: 20230927Year of fee payment: 12 |
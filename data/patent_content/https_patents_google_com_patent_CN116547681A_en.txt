CN116547681A - Dynamic language model for continuously evolving content - Google Patents
Dynamic language model for continuously evolving content Download PDFInfo
- Publication number
- CN116547681A CN116547681A CN202180075824.3A CN202180075824A CN116547681A CN 116547681 A CN116547681 A CN 116547681A CN 202180075824 A CN202180075824 A CN 202180075824A CN 116547681 A CN116547681 A CN 116547681A
- Authority
- CN
- China
- Prior art keywords
- mechanical
- resonator
- state
- control circuit
- clause
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Pending
Links
- 238000000034 method Methods 0.000 claims abstract description 195
- 241000282326 Felis catus Species 0.000 claims description 103
- 238000003860 storage Methods 0.000 claims description 42
- 230000005540 biological transmission Effects 0.000 claims description 29
- 238000010168 coupling process Methods 0.000 claims description 29
- 238000005859 coupling reaction Methods 0.000 claims description 29
- 230000008878 coupling Effects 0.000 claims description 28
- 230000000087 stabilizing effect Effects 0.000 claims description 18
- 230000001427 coherent effect Effects 0.000 claims description 17
- 230000005284 excitation Effects 0.000 claims description 8
- 230000003993 interaction Effects 0.000 claims description 6
- 239000002887 superconductor Substances 0.000 claims description 3
- 239000010409 thin film Substances 0.000 claims description 2
- 230000009286 beneficial effect Effects 0.000 abstract description 2
- 238000009826 distribution Methods 0.000 abstract description 2
- 238000010801 machine learning Methods 0.000 abstract 2
- 238000005259 measurement Methods 0.000 description 196
- 239000002096 quantum dot Substances 0.000 description 175
- 208000011580 syndromic disease Diseases 0.000 description 112
- 230000005283 ground state Effects 0.000 description 90
- 238000012937 correction Methods 0.000 description 84
- 230000008569 process Effects 0.000 description 47
- 239000011159 matrix material Substances 0.000 description 44
- 238000000605 extraction Methods 0.000 description 28
- 239000003381 stabilizer Substances 0.000 description 22
- 238000002360 preparation method Methods 0.000 description 20
- 230000000875 corresponding effect Effects 0.000 description 18
- 238000001514 detection method Methods 0.000 description 18
- 238000010586 diagram Methods 0.000 description 17
- 238000001356 surgical procedure Methods 0.000 description 15
- 230000006835 compression Effects 0.000 description 13
- 238000007906 compression Methods 0.000 description 13
- 230000006870 function Effects 0.000 description 13
- 238000013459 approach Methods 0.000 description 10
- 230000006641 stabilisation Effects 0.000 description 10
- 238000011105 stabilization Methods 0.000 description 10
- 238000002347 injection Methods 0.000 description 9
- 239000007924 injection Substances 0.000 description 9
- 230000009466 transformation Effects 0.000 description 9
- 239000013598 vector Substances 0.000 description 9
- 230000008859 change Effects 0.000 description 8
- 230000004907 flux Effects 0.000 description 8
- 238000010606 normalization Methods 0.000 description 8
- 238000004088 simulation Methods 0.000 description 8
- 230000004044 response Effects 0.000 description 7
- 238000004891 communication Methods 0.000 description 6
- 230000001965 increasing effect Effects 0.000 description 6
- 238000005516 engineering process Methods 0.000 description 5
- 238000002156 mixing Methods 0.000 description 5
- 230000003287 optical effect Effects 0.000 description 5
- 239000003990 capacitor Substances 0.000 description 4
- 230000000295 complement effect Effects 0.000 description 4
- 238000013461 design Methods 0.000 description 4
- 230000007246 mechanism Effects 0.000 description 4
- 239000002245 particle Substances 0.000 description 4
- 230000002093 peripheral effect Effects 0.000 description 4
- 238000012360 testing method Methods 0.000 description 4
- 230000006399 behavior Effects 0.000 description 3
- 230000000694 effects Effects 0.000 description 3
- 230000008030 elimination Effects 0.000 description 3
- 238000003379 elimination reaction Methods 0.000 description 3
- 239000000463 material Substances 0.000 description 3
- 230000001404 mediated effect Effects 0.000 description 3
- 238000012986 modification Methods 0.000 description 3
- 230000004048 modification Effects 0.000 description 3
- 239000002086 nanomaterial Substances 0.000 description 3
- 230000010355 oscillation Effects 0.000 description 3
- 238000005381 potential energy Methods 0.000 description 3
- 238000012545 processing Methods 0.000 description 3
- 230000002441 reversible effect Effects 0.000 description 3
- 230000001629 suppression Effects 0.000 description 3
- 239000000725 suspension Substances 0.000 description 3
- 229920002430 Fibre-reinforced plastic Polymers 0.000 description 2
- RHTNTTODYGNRSP-UHFFFAOYSA-N Tolazoline hydrochloride Chemical compound Cl.C=1C=CC=CC=1CC1=NCCN1 RHTNTTODYGNRSP-UHFFFAOYSA-N 0.000 description 2
- 230000008901 benefit Effects 0.000 description 2
- 230000015572 biosynthetic process Effects 0.000 description 2
- 239000002131 composite material Substances 0.000 description 2
- 239000013078 crystal Substances 0.000 description 2
- 230000007423 decrease Effects 0.000 description 2
- 230000007547 defect Effects 0.000 description 2
- 238000006073 displacement reaction Methods 0.000 description 2
- 239000000835 fiber Substances 0.000 description 2
- 239000011151 fibre-reinforced plastic Substances 0.000 description 2
- 239000004973 liquid crystal related substance Substances 0.000 description 2
- 238000004519 manufacturing process Methods 0.000 description 2
- 238000013507 mapping Methods 0.000 description 2
- 238000000691 measurement method Methods 0.000 description 2
- 239000000203 mixture Substances 0.000 description 2
- 230000003071 parasitic effect Effects 0.000 description 2
- 238000005086 pumping Methods 0.000 description 2
- 238000013139 quantization Methods 0.000 description 2
- 230000005610 quantum mechanics Effects 0.000 description 2
- 230000009467 reduction Effects 0.000 description 2
- 239000000243 solution Substances 0.000 description 2
- 230000001360 synchronised effect Effects 0.000 description 2
- 238000003786 synthesis reaction Methods 0.000 description 2
- 101000937345 Amaranthus caudatus Trypsin/subtilisin inhibitor Proteins 0.000 description 1
- 238000012935 Averaging Methods 0.000 description 1
- 238000010521 absorption reaction Methods 0.000 description 1
- 230000009471 action Effects 0.000 description 1
- 230000004075 alteration Effects 0.000 description 1
- 238000004458 analytical method Methods 0.000 description 1
- 238000003491 array Methods 0.000 description 1
- 239000003054 catalyst Substances 0.000 description 1
- 230000001276 controlling effect Effects 0.000 description 1
- 238000007796 conventional method Methods 0.000 description 1
- 230000002596 correlated effect Effects 0.000 description 1
- 238000013501 data transformation Methods 0.000 description 1
- 230000001419 dependent effect Effects 0.000 description 1
- 230000001066 destructive effect Effects 0.000 description 1
- 230000005684 electric field Effects 0.000 description 1
- 230000002708 enhancing effect Effects 0.000 description 1
- 230000005281 excited state Effects 0.000 description 1
- 238000001914 filtration Methods 0.000 description 1
- 239000007943 implant Substances 0.000 description 1
- 238000001802 infusion Methods 0.000 description 1
- 230000010354 integration Effects 0.000 description 1
- 150000002500 ions Chemical class 0.000 description 1
- 238000012886 linear function Methods 0.000 description 1
- 235000021184 main course Nutrition 0.000 description 1
- 239000003550 marker Substances 0.000 description 1
- 230000028161 membrane depolarization Effects 0.000 description 1
- 239000002184 metal Substances 0.000 description 1
- 238000013206 minimal dilution Methods 0.000 description 1
- 230000002085 persistent effect Effects 0.000 description 1
- 230000000644 propagated effect Effects 0.000 description 1
- 238000012887 quadratic function Methods 0.000 description 1
- 230000008439 repair process Effects 0.000 description 1
- 239000004065 semiconductor Substances 0.000 description 1
- 230000003595 spectral effect Effects 0.000 description 1
- 230000003068 static effect Effects 0.000 description 1
- 230000000638 stimulation Effects 0.000 description 1
- 230000001502 supplementing effect Effects 0.000 description 1
- 230000036962 time dependent Effects 0.000 description 1
- 238000000844 transformation Methods 0.000 description 1
- 230000007704 transition Effects 0.000 description 1
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N3/00—Computing arrangements based on biological models
- G06N3/02—Neural networks
- G06N3/08—Learning methods
- G06N3/084—Backpropagation, e.g. using gradient descent
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/20—Natural language analysis
- G06F40/237—Lexical tools
- G06F40/242—Dictionaries
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/20—Natural language analysis
- G06F40/279—Recognition of textual entities
- G06F40/284—Lexical analysis, e.g. tokenisation or collocates
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/30—Semantic analysis
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/40—Processing or translation of natural language
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N3/00—Computing arrangements based on biological models
- G06N3/02—Neural networks
- G06N3/08—Learning methods
- G06N3/088—Non-supervised learning, e.g. competitive learning
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N3/00—Computing arrangements based on biological models
- G06N3/02—Neural networks
- G06N3/04—Architecture, e.g. interconnection topology
- G06N3/044—Recurrent networks, e.g. Hopfield networks
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N3/00—Computing arrangements based on biological models
- G06N3/02—Neural networks
- G06N3/04—Architecture, e.g. interconnection topology
- G06N3/045—Combinations of networks
Abstract
Systems and methods for incremental training of machine learning models to accommodate changes in underlying data distribution are provided. One example setting where the techniques described herein may be beneficial is for incrementally training a natural language model to enable the model to have or adapt to dynamically changing vocabularies. Incremental training is provided as a viable and inexpensive method of adapting a machine learning model to an evolving vocabulary without requiring retraining from the beginning.
Description
Background
Quantum computing utilizes quantum physics laws to process information. Quantum physics is a theory describing real behavior at a basic level. It is the only physical theory that can consistently predict the behavior of microscopic quantum objects such as photons, molecules, atoms, and electrons at present.
Quantum computers are devices that utilize quantum mechanics to allow writing, storing, processing, and reading of information encoded in quantum states (e.g., states of quantum objects). Quantum objects are physical objects that behave according to quantum physics laws. The state of a physical object is a description of the object at a given time.
In quantum mechanics, the state of a two-level quantum system, or simply a qubit, is a list of two complex numbers, where the sum of the absolute values of the complex numbers must be one. Each of these two numbers is referred to as an amplitude or quasi-probability. The square of the amplitude gives the probability that it may be negative. Thus, each of these two numbers corresponds to the square root of the event zero and event one, respectively, will occur. The basic and counterintuitive difference between a probability bit (e.g., a conventional zero bit or one bit) and a qubit is that the probability bit represents the lack of information about a two-level classical system, while the qubit contains the most information about a two-level quantum system.
Quantum computers are based on such qubits (qubits), which may experience phenomena of "superposition" and "entanglement". Superposition allows the quantum system to be in multiple states simultaneously. For example, classical computers are based on bits of zero or one, whereas qubits may be both zero and one, but the probabilities assigned to zero and one are different. Entanglement is a strong correlation between quantum particles, so quantum particles are inseparably bound together even if they are far apart.
Quantum algorithms are reversible transformations that act on qubits in a desired and controlled manner, followed by measurement of one or more qubits. For example, if the system has two qubits, the transformation may modify four digits; for three qubits, this becomes eight digits, and so on. Thus, quantum algorithms act on a list of exponentially growing numbers, determined by the number of qubits. To implement the transformation, for example, the transformation may be broken down into small operations that act on a single qubit or a group of qubits. Such small operations may be referred to as quantum gates, and the arrangement of gates for implementing the transformation may form a quantum circuit.
Different types of qubits can be used in quantum computers, each with different advantages and disadvantages. For example, some quantum computers may include qubits constructed from superconductors, trapped ions, semiconductors, photonics, and the like. Each qubit may experience varying degrees of interference, error, and decoherence. In addition, some qubits may be more useful for generating particular types of quantum circuits or quantum algorithms, while other qubits may be more useful for generating other types of quantum circuits or quantum algorithms. Furthermore, costs, runtime, error rates, availability, etc. may vary from quantum computing technology to quantum computing technology.
For certain types of quantum computation, such as fault tolerant computation of large scale quantum algorithms, the overhead cost of performing such quantum computation can be high. For example, for quantum gates types that are not naturally fault tolerant, the quantum gates may be encoded with error correction codes. However, this may increase the overhead of qubits required to implement a large-scale quantum algorithm. Furthermore, performing successive quantum gates, measurements of the quantum circuit, etc. may introduce error probabilities in the quantum circuit and/or measurements of the quantum circuit.
Drawings
Fig. 1A illustrates a system including a nanomechanical linear resonator and a superconducting quantum interference device (ATS) with asymmetric threads configured to implement mixed acoustic-electric qubits, according to some embodiments.
Fig. 1B illustrates modeling of a storage mode (a) and a dump mode (B) of a mixed phonon qubit according to some embodiments, where the dump mode may be adiabatically eliminated for a large energy decay rate (Kb) that is significantly greater than the binaural sub-coupling rate (g 2), such that the mixed phonon qubit may be modeled as having a single phonon decay rate (K1) and driven by a binaural sub-drive having a binaural sub-decay rate (K2).
Fig. 2 illustrates a foster network representing one-dimensional phonon crystal defect harmonic oscillators (PCDR) according to some embodiments.
Fig. 3 illustrates a system including a plurality of nanomechanical linear resonators and a superconducting quantum interference device (ATS) with asymmetric threads configured to provide multi-mode stabilization to mixed acoustic electrical qubits implemented via the plurality of nanomechanical linear resonators, according to some embodiments.
Fig. 4 illustrates a system including a plurality of nanomechanical linear resonators and a superconducting quantum interference device (ATS) with asymmetric threads configured to provide multi-mode stabilization to mixed acoustic electrical qubits implemented via the plurality of nanomechanical linear resonators, wherein a microwave filter suppresses an associated attenuation process, according to some embodiments.
Fig. 5 illustrates a process for stabilizing a nanomechanical resonator using a superconducting quantum interference device (ATS) with asymmetric threads, according to some embodiments.
Fig. 6 illustrates a process of stabilizing a plurality of nanomechanical resonators using a multiplexed ATS according to some embodiments.
Fig. 7 illustrates data errors that occur when an input error for a set of quantum bits is measured, where the data errors result in a plurality of different syndromes, according to some embodiments.
FIG. 8 illustrates logic for repetition codes in accordance with some embodimentsIs used for measuring the repetition code>Corresponding circuitry of (a) is provided.
Fig. 9 shows a circuit for preparing q=shs, where the CNOT gate is a single physical CNOT and applied if the measurement is-1, according to some embodiments
Fig. 10 shows a circuit for preparing S according to some embodiments, where the CNOT gate is a single physical CNOT and applied if the measurement is-1
Fig. 11A illustrates a circuit for implementing a logic tovley gate using tovley magic state injection, where X and Z radicals are measured, according to some embodiments.
Fig. 11B illustrates a kriford error correction table based on the Z and X measurement basis application of the circuit shown in fig. 11A, according to some embodiments.
Fig. 12 illustrates a circuit for implementing a logic CZ gate using lateral CNOT gates and S gates, according to some embodiments.
Fig. 13 illustrates a method for preparing a calculated ground state |ψ according to some embodiments 1 >Is provided.
FIG. 14 illustrates a method for using a controlled g according to some embodiments A The gate implements the first step of the tovernix preparation circuit in which one or more rounds of Error Correction (EC) are performed using the STOP algorithm.
FIG. 15 shows a circuit for implementing a second step of the Tophori magic preparation, where g, according to some embodiments A The number of measurement repetitions corresponds to the code distance (d) divided by two, where g is measured at each round A Performing a round of repetition code stabilizer measurements in between, and wherein if error detection measurements or g A Any of the measurements is nontrivial, the protocol is aborted and restarted.
FIG. 16 illustrates computing a ground state |ψ according to some embodiments 1 >From the first code distance (d 1 ) To a second code distance (d 2 )。
FIG. 17 illustrates a calculated ground state |ψ for a measurement code distance of three in accordance with some embodiments 1 >G of (2) A Is provided.
FIG. 18 illustrates a method for calculating the ground state |ψ using marker qubit measurements according to some embodiments 1 >G of (2) A Is an alternative circuit to the above.
Figure 19A shows g of a distance 5 repetition code prepared using the GHZ regime according to some embodiments A Implementation of the measurement.
FIG. 19B illustrates a method for implementing g illustrated in FIG. 19A, according to some embodiments A An equivalent circuit of the measurement.
Fig. 20A illustrates high-level steps of a protocol for implementing a STOP algorithm, according to some embodiments.
Fig. 20B illustrates high-level steps for determining parameters (ndiff) used in the STOP algorithm, according to some embodiments.
Fig. 21 illustrates high-level steps of a protocol for growing repeated codes from a first code distance to a second code distance using a STOP algorithm, according to some embodiments.
Fig. 22 illustrates high-level steps for implementing a protocol for a logical toverly gate using a bottom-up approach with toverly magic injection, according to some embodiments.
Fig. 23 illustrates a high level step for extracting low error rate logical toverly gates using multiple toverly states prepared using the bottom-up method described in fig. 22, according to some embodiments.
Fig. 24 illustrates a layout of a plurality of bottom-up tovernix magic states for extracting low error rate logical tovernix, according to some embodiments.
Fig. 25 illustrates a gadget for injecting CCZ gates using |ccz > magic states and a gadget for generalized CCZ injection of unitary matrices, according to some embodiments.
Fig. 26 illustrates a circuit for extracting two low error rate logic tolvaractors (CCZ gates) from eight magic inputs, according to some embodiments.
Fig. 27 illustrates a Li Tingsi basis (Litinski) plot for performing an extracted lattice surgical implementation of eight tovlil magic states to yield two low error rate logical tovlil gates, according to some embodiments.
Fig. 28 illustrates a process for extracting low error rate logical toffei gates from a plurality of noisy toffei magic states, according to some embodiments.
Fig. 29A illustrates a process of extracting two low error rate logical tovernix from eight noisy tovernix states, according to some embodiments.
Fig. 29B illustrates a process of extracting a low error rate logical toverly gate from two noisy toverly magic states, according to some embodiments.
Fig. 30 illustrates an exemplary method of performing a lattice surgery to extract low error rate logical tovley gates from a plurality of noisy tovley magic states, according to some embodiments.
Fig. 31 illustrates a circuit that performs measurement of read qubits for a set of error correction gates concurrently with performing a next round of error correction gates, according to some embodiments.
Fig. 32 illustrates a more detailed circuit for performing measurement of read qubits for a set of error correction gates concurrently with performing a next round of error correction gates, according to some embodiments.
Fig. 33 illustrates a more detailed circuit for performing measurements of read qubits of a set of error correction gates concurrently with performing a next round of error correction gates, wherein the circuit includes compressing auxiliary qubits prior to switching to the read qubits, and wherein the measurements include parity measurements of the read qubits, according to some embodiments.
FIG. 34 is a process flow diagram illustrating an error correction gate that uses a switching operator to excite a read qubit such that a subsequent round of measurement of the read qubit can be applied while performing, in accordance with some embodiments.
Fig. 35 is a process flow diagram illustrating a process for performing measurement of qubits using compression, in accordance with some embodiments.
Fig. 36A is a process flow diagram illustrating one process for compacting cat qubits and measuring the "b" pattern of the compacted cat qubits to determine information about the first pattern of the compacted cat qubits according to some embodiments.
Fig. 36B is a process flow diagram illustrating another process for compacting cat qubits and measuring the "B" pattern of the compacted cat qubits to determine information about the first pattern of the compacted cat qubits according to some embodiments.
Fig. 37 is a process flow diagram showing a process for evolving cat qubits via three or higher mixed hamiltonian and performing homodyne, heterodyne, or optical detection on the evolving cat qubits to measure a measured property of another boson mode of the cat qubits, according to some embodiments.
Fig. 38 is a diagram illustrating the simulation of cat qubits using shifted fokly (where |α|in accordance with some embodiments 2 Process flow diagram of the process of > 1).
FIG. 39 is a block diagram illustrating an exemplary computing device that may be used in at least some embodiments.
Although embodiments are described herein by way of example only with reference to several embodiments and illustrative drawings, those skilled in the art will recognize that the embodiments are not limited to the embodiments or drawings described. It should be understood that the drawings and detailed description thereto are not intended to limit the embodiment to the particular form disclosed, but on the contrary, the invention is to cover all modifications, equivalents and alternatives falling within the spirit and scope as defined by the appended claims. The headings used herein are for organizational purposes only and are not meant to be used to limit the scope of the description or the claims. As used throughout this application, the word "may" is used in a permissive sense (i.e., meaning having the potential to), rather than the mandatory sense (i.e., meaning must). Similarly, the word "include" is meant to include, but not be limited to. The term "or" when used in the claims is intended to be inclusive or rather than exclusive or. For example, the phrase "at least one of x, y, or z" refers to any one of x, y, and z, and any combination thereof.
Detailed Description
The present disclosure relates to methods and apparatus for implementing a generic gatepost of quantum algorithms that are fault tolerant and efficiently use resources.
In many cases, the overhead cost of performing general fault tolerant quantum computing for quantum algorithms can be high. To perform such fault tolerant quantum computing, magic state extraction is typically used. For example, magic state extraction may be used to simulate non-criford gates in a fault tolerant manner. However, since the magic state extraction circuit is not fault tolerant, the cleford operation must be encoded with a large distance code in order to have a failure rate comparable to the magic state being extracted.
To perform quantum computing, it may be desirable to construct a general fault tolerant quantum computer that enables all gates in a general gate set to be implemented with low logic error rates. Furthermore, the overhead cost of achieving such low error rates may need to be low. Transverse doors are a natural way of implementing such fault tolerant doors. However, given any stabilizer code, it is known from the eosin-chenille (Eastin-Knill) theorem that there is always at least one gate in the common gate set that cannot be implemented using a lateral operation at the logic level.
To address this problem, several fault tolerant approaches for implementing gates in a common gate set have been explored. However, magic state extraction is still a prime candidate for implementing a general fault tolerant quantum computer. However, the cost of performing the magic extraction is still high. One of the reasons for the high cost of extracting the magic state is that the cleford circuit for extracting the magic state is generally not fault tolerant. The cleford gates are thus encoded with some error correction code (typically a surface code) to ensure that these gates have a negligible error rate compared to the injected magic state.
In some embodiments, effectively implementing a generic gate set may involve multiple layers of a quantum computer/quantum algorithm. For example, at the lowest level, a building block of a quantum computer may include a nanomechanical resonator controlled using a superconducting quantum interference device with asymmetric threads (SQUID or ATS with asymmetric threads). The nanomechanical resonator may be configured to resonate at one or more frequencies and may be coupled to an ATS, where the ATS controls phonon modes. In addition, the ATS may be coupled to a bandpass filter and then to an open transmission line to enable photons from the ATS to be absorbed by the environment. At the next level, error correction may be implemented for a quantum computer including nanomechanical resonators and ATS. For example, an error correction code may be constructed that utilizes the phonon modes of the ATS and nanomechanical resonators to detect and/or correct errors. At yet another level, the gates may be implemented for quantum computers using error correction codes as inputs or outputs of the gates. In addition, the qubits of the gates can be error corrected. At a higher level, logic gates utilizing one or more physical gates may be constructed. Note that while several protocols described herein, such as STOP algorithm, bottom-up method for preparing tovley, top-down extraction of tovley, measurement techniques, and/or shift-fokly simulation, are described in terms of systems utilizing nanomechanical resonators that implement mixed acoustic electric qubits, in some embodiments other hardware types, such as those that implement electromagnetic qubits, may be used.
Superconducting quantum interference device (ATS) -phonon mixing system with asymmetric threads
In some embodiments, a circuit for a quantum computer may include a nanomechanical linear resonator and a superconducting quantum interference device (SQUID, ATS) with asymmetric threads. The nanomechanical resonator and ATS may be implemented as a qubit that is a mixed acoustic-electric qubit, e.g., as opposed to an electromagnetic qubit. In some embodiments, the nanomechanical resonator and ATS may be located on the same component and may be used to easily scale the system to include additional components with additional nanomechanical resonators that implement additional mixed acoustic electrical qubits. This may also enable scaling of the number of qubits required for a quantum computer by including more or fewer components. This approach may allow for simpler expansion and scaling compared to systems where components implementing qubits are integrated into a single chip and a newly designed chip is required to expand or scale the system to have more or fewer qubits. As used herein, the terms "mechanical," "acoustic," "phonon," and the like may be used to describe mechanical circuits that are distinct from electromagnetic circuits.
In some embodiments, more phonon resonators (e.g., nanomechanical resonators) than electromagnetic resonators may be connected to the same control circuit, e.g., ATS. This is due, at least in part, to the smaller size of the phonon resonators as compared to electromagnetic resonators. However, in such systems, crosstalk between phonon resonators coupled to the same control circuit must be addressed to avoid errors. Multiplexing control of the phonon resonators using a common control circuit (e.g., ATS) is discussed in further detail below.
In some embodiments, the chip structure including the phonon resonators may take the form of a planar circuit having metal components forming a superconducting circuit (e.g., ATS). ATS may be physically connected via leads to very small (e.g., micro-or nano-scale) suspension mechanisms, such as linear nanomechanical resonators. The suspension mechanism may be located on the same chip as the ATS circuitry or may be located on a separate chip that has been heterogeneously integrated by flip-chip or similar components with the bottom chip including the ATS and/or additional suspension mechanisms (e.g., other mechanical resonators).
In some embodiments, the electrical connection to the ATS may be placed on top of the piezoelectric material that has been etched into a pattern to form the nanomechanical resonator. In some embodiments, different variables, such as piezoelectric coefficient, density, etc., may affect the coupling strength of the ATS to the mechanical resonator. This coupling can be expressed in terms of phonon coupling ratio in hamiltonian of the system.
When coupling a nanostructure (e.g., a nanomechanical resonator) to a circuit, very small capacitors are required because the nanostructure components (e.g., nanomechanical resonators) are also very small. Typically in circuits such as ATS circuits, there are other capacitances. Since the capacitors for the nanostructures are very small, these other capacitances in the circuit may reduce the signal voltage and thus dilute the signal directed to one of the nano-components (e.g., the nano-mechanical resonator). However, to address this problem, a high impedance inductor may be coupled in the control circuit between the ATS and the nanomechanical resonator. The high impedance inductor may have a very low parasitic capacitance, so the electric field directed to the nanomechanical resonator may act on the nanomechanical resonator with only minimal dilution caused by the capacitance (e.g., parasitic capacitance) of the inductor. Furthermore, high impedance inductors can suppress loss mechanisms.
In some embodiments, the nonlinear coupling of the nanomechanical harmonic oscillator may be achieved byGiven in +h.c., g 2 Is the coupling ratio between the storage mode (a) and the dump mode (b). In some embodiments, the non-isLinearity can be achieved using SQUIDs (superconducting quantum interference devices) (also referred to herein as "ATS") with asymmetric threads. ATS may include a superconducting quantum interference device (SQUID) separated approximately midway by a linear inductor. In the most general form, ATS potential energy is given by the following equation:
In the above equation, the data of the equation,is the phase difference, phi, across the ATS ∑ ：＝(φ ext，1 +φ ext，2 )/2，φ Δ ：＝(φ ext，1 -φ ext，2 ) 2, and phi ext，1 (φ ext，2 ) Is the magnetic flux passing through the left (right) loop to reduce the quantum of the magnetic fluxIn units of. Here->E j ＝(E j，1 +E j，2 ) 2; and->Is junction asymmetry. By adjusting phi with two separate flux lines ∑ And phi Δ The ATS potential energy may be further simplified. For example, fig. 1A shows an ATS 102 included in a control circuit 100, where the ATS 102 includes separate flux lines 108 and 110. Note that fig. 1A includes the ATS 102 in the control circuit 100, and also includes an enlarged view of the ATS 102 adjacent to the control circuit 102, showing the ATS 102 in more detail. The flux lines may be arranged such that:
and is also provided with
In the above equation, E p (t)＝∈ p，0 cos(ω p t) is a small Alternating Current (AC) component added to a Direct Current (DC) base. At this bias point, and assuming ∈) p (t) | < 1, then with respect toThe above equation for (c) can be simplified as:
using the control circuit 100 shown in fig. 1A, quantum information can be stored in the state of a linear mechanical resonator. For example, quantum information may be stored in storage mode 106. The stored quantum information may also be automatically error corrected by ATS-controlled manually induced binaural actuation and binaural decay. These binaural processes are achieved by a nonlinear interaction between the storage pattern a and the auxiliary pattern b (called dump, e.g., dump pattern 104 shown in FIG. 1A) To induce. The dump mode is designed to have a large energy decay rate K d It can therefore quickly and irreversibly "dump" the photons it contains into the environment. If K d Specific coupling ratio g 2 Much larger (e.g., -10 times or more), then the dump mode may be adiabatically eliminated from the hamiltonian volume, for example as shown in fig. 1B. For example, as shown on the right side of FIG. 1B, via +.>The emitted phonon pair can be accurately modeled as a function of the dissipative element-DA 2 ]The dissipation process described. In addition, if the dump mode is driven linearlyThis provides a stimulation inverse process>The required energy, as shown in fig. 1B, can be modeled as an effective binaural sub-drive in adiabatic elimination. In summary, dynamics can be modeled accurately by the following equation:
wherein α= e/g 2 And->
The steady state of the dynamics of the system shown in FIG. 1B is the coherent state |α>、|-α>Or any arbitrary superposition of the two. This protected subspace can be used to encode qubits by the following logical basis definitions: i0 L >＝|α>，|1 L >＝|-α>. Quantum bits encoded in this manner effectively avoid X-errors (e.g., bit-flipping) because bit-flipping rate varies with code distance |α| 2 Exponentially decaying as long as K 2 |α| 2 ＞＞K 1 Wherein K is 1 Is the ordinary (e.g., single photon) decay rate of the storage mode. Due to |α| 2 1, this condition being substantially equal to K 2 /K 1 > 1. However, Z errors (e.g., phase flipping) may not be protected by this code.
As described above, ATS is formed by splitting SQUID using a linear inductor. The magnetic flux passing through each of the two resulting loops of the ATS may be controlled via two adjacent on-chip flux lines (e.g., flux lines 108 and 110 shown in fig. 1A). These flux lines may be tuned to appropriate values and radio frequency (rf) signals may be transmitted at appropriate frequencies to resonantly activate the desired nonlinear interactions in the nanomechanical resonator. Dump mode 104 may be further strongly coupled to characteristic impedance Z 0 This causes a large energy as requiredAttenuation rate.
In some embodiments, the nanomechanical storage resonator (e.g., memory 106) may be a piezoelectric nanomechanical resonator that supports resonance in the GHz range. These resonances may be coupled to the superconducting circuitry of the control circuit 100 via small superconducting electrodes (e.g., terminals) that are in direct contact or very close to the vibrating piezoelectric region of the nanomechanical resonator. Nonlinear coupling ratio g 2 Dissipation ratio k of double phonons 2 Sum ratio K 2 /K 1 The value of (2) may be calculated as follows:
first, the admittance Y seen at the nanomechanical resonator terminals is calculated using a finite element model solver m (omega). Next, the Forster complex algorithm is used to find the equivalent circuit (discussed further below). Then, the combining circuit is diagonalized and zero-point phase fluctuation phi is calculated a，zp And phi b，zp . Furthermore, the dissipation factor k of the eigenmodes is calculated b And k 1 . Next, calculateIn addition, calculate +.>
In some embodiments, a nanomechanical element, such as a nanomechanical resonator implementing storage mode 106 and dump mode 104, may be represented as an equivalent circuit that accurately captures its linear response. Admittance Y, if seen from the terminals of the mechanical resonator m Known as (ω), then foster synthesis can be used to do this. For example, admittance may be calculated using finite element modeling. In some embodiments, a foster network may be used to accurately represent one-dimensional (e.g., linear) Phonon Crystal Defect Resonators (PCDR), which may be a class of nanomechanical resonators used in some embodiments. In some embodiments, the dump resonator may be modeled as having a fixed impedance, for example 1 kiloohm.
For example, fig. 2 shows a version of the control circuit 100 (e.g., equivalent circuit 200) that has been represented using a foster network. In the simplest form, etcThe tank circuit 200 may be represented as a 'DC capacitance' in series with the LC block (e.g., L represents the inductor of the LC block and C represents the capacitor), with additional resistors inserted to include the loss effect in the resonators. For example, the foster network 210 is modeled as including a capacitor 204, an inductor 206, and a resistor 208. The linear portion of the dump resonator (including the inductor splitting the ATS) may also be denoted as LC block, such as LC block 212. In this representation, the dump resonator (e.g., 212) and the store resonator (e.g., 210) are represented as two linear circuits with linear coupling and thus can be diagnosed by a simple coordinate transformation. For example, FIG. 2 shows a diagnosed circuit representation 214. The resulting class store "And class dump->The eigenmodes all contribute to the overall phase drop of the ATS. For example, a->Thus, these modes can be redefined as +.>Because the inductor has been absorbed into the linear network. The zero phase fluctuation of each mode is given by:
in the above equation, C is the maxwell Wei Dianrong matrix of the circuit. U is diagnostic C -1/2 L -1 C -1/2 Wherein L is -1 Is an inverse inductance matrix. Index k e { a, b } marks the pattern and j marks the node in question. Note that in some cases, the symbol of j may be omitted as it is clear from the context, as described herein, e.g., the node of interest is directly above the ATSIs a node of (a).
The manner in which the ATS is mixed mode is explicit becauseThird order terms in Taylor series expansion of (2) includeTerms in the form, which is the coupling required. This is why ATS is used instead of the normal knot, which has a potential +.>
For analysis, the pump frequency and the drive frequency may be set to ω p ＝2ω a -ω b
And omega d ＝ω b . This causes the itemResonance is entered allowing other terms in the Rotated Wave Approximation (RWA) to be discarded. Coupling is made of->Given. In addition, a frequency of ω is added d ＝ω b Linear drive of (2)To provide the required energy for two-photon driving.
Multimode stabilization/ATS multiplexing
In some embodiments, the scheme described above may be extended for multi-mode cases, where N > 1 storage resonators are coupled simultaneously to a single dump+ats. This may allow the cat subspace of each storage mode to be stabilized individually. For example in the form ofIs a dissipative element of (2). However, in order to avoid simultaneous or coherent loss of phonons from different modes (failure to stabilize the expectation Is needed) incoherent dissipative sub-fields. This can be achieved if the stable pumps and drives for the different modes are deliberately detuned as follows:
wherein->And is also provided with
In the above-mentioned equation(s),and->Is the pump frequency and drive frequency of mode m. By detuning the pumps, the pump operators of different modes can be rotated relative to each other. If the rotation rate is greater than k 2 Form +.>The coherence of (c) disappears in the sense of time averaging. Drive detuning allows the pump and drive to remain synchronized even though the pumps have been detuned with respect to each other.
In some embodiments, multiplexed ATS may be used to simultaneously stabilize mode a 1 And a 2 Wherein the pump has been detuned. Simulations may be performed to determine detuning parameters using a main course of the simulation, such as:
bandwidth restriction
When de-tuning delta and k b The above adjustment effect is optimal when compared with a relatively small one. This is because, unlike the single mode case, in whichThe binaural attenuation of a multimode system is given by:
lorentz suppression factors can be understood as photons/phonons emitted by the dump mode due to the stable mode n at a frequency ω b +Δ n The emitted and thus dumped Lorentzian lines are "filtered" with line width k b . This sets an upper limit on the size of the frequency region that the detuning is allowed to occupy. Furthermore, in some embodiments, to render the dissipation incoherent, the delta is detuned n Can all differ from each other by more than k 2 Is a combination of the amounts of (a) and (b). In the frequency domain plot, the spectral lines associated with photon/phonon emissions from the dump must be fully resolved. This also places a lower limit on the proximity of the different tuning. In this way, since the upper and lower limits are set, the bandwidth limit of the detuning can be determined. In addition, given these limitations, an upper limit on the number of modes that a single dump can stabilize at the same time may also be determined. For example, if detuning is selected as Δ n N delta, where delta-k 2 The maximum mode number that can be stabilized at the same time can be limited to N max ～k b /Δ～k b /k 2 . As another example, for a typical parameter, e.g., k b 2 pi-10 MHz and k 2 This results in a bandwidth limitation that allows for stabilization of about 10 modes simultaneously.
For example, fig. 3 shows a control circuit 300 that includes a single dump resonator 302 that stabilizes a plurality of storage resonators 304.
Enhancing coupling between a dump resonator and one or more storage resonators using high impedance inductors
In some embodiments, the coupling ratio g may be increased by using a high impedance inductor 2 . This is because g 2 Effective impedance Z strongly dependent on the dump resonator d . Example(s)For example g 2 ～Z d 5/2 . Thus, in some embodiments, the use of a large inductor in the ATS may result in a large effective impedance Z d . In some embodiments, the inductor selected for inclusion in the ATS circuit may be sufficiently linear to ensure stability of the dump circuit when driven strongly during settling. For example, the high impedance inductors used may include planar meander or double spiral inductors, spiral inductors with air bridges, arrays with a large number (e.g. greater than 50) of highly transparent josephson junctions, or other suitable high impedance inductors.
Filtering in multimode stabilizing/multiplexing ATS
In some embodiments, microwave filters (e.g., metamaterial waveguides) may be used to mitigate limitations with respect to bandwidth limitations as discussed above. Such filters may also be used to eliminate correlation errors in a multiplexing stabilization implementation. For example, fig. 4 shows a control circuit 400 that includes a single dump resonator 404, a plurality of store resonators 406, and a filter 402.
More specifically, when the same dump resonator and ATS device are used to stabilize multiple storage modes, many cross terms in hamiltonian that would not otherwise occur in a single mode case may occur. For example, these terms take g 2 a j a k b + e -ivt In the form of (a). After adiabatic elimination of B-mode (e.g., as discussed with respect to FIG. 1B), these terms actually become form k 2， eff a j a k e -ivt Is a skip operator of (c). Desired jump procedure with cat subspace alone stabilization leading to each harmonic oscillatorUnlike this, the correlation decay term causes simultaneous phase flipping of resonators j and k. For example, these associated errors may corrupt the error correction of the next layer, such as in repeated or striped surface codes.
In some embodiments, to filter out unwanted terms in the physical hamiltonian that produce effective dissipative energy that causes the associated phase flip, the unwanted terms may be detuned by more than half of the filter bandwidth. This may result in exponential suppression of unwanted items. In other words, the detuning and the filter may be selected such that the detuning of the effective hamiltonian is greater than half the bandwidth of the filter. Furthermore, the filter pattern (along with the dump pattern) may be adiabatically eliminated from the model in a similar manner as discussed in FIG. 1B for the adiabatic elimination of the dump pattern. This may be used to determine the effective dissipative element of a circuit (e.g., control circuit 400) that includes dump resonator 404 and filter 402.
As described above, if the corresponding emitted photon has a frequency outside the filter bandwidth, the associated phase error may be suppressed by the filter. In some embodiments, all of the associated phase errors may be suppressed simultaneously by carefully selecting the frequency of the storage mode. For example, the optimal storage frequency may be determined in consideration of a filter bandwidth usage cost function. For example, in some embodiments, a single ATS/dump may be used to suppress decoherence associated with all valid hamiltonians for the 5 storage modes. In such embodiments, all major sources of random correlated phase errors in cat qubits can be suppressed.
Multi-terminal mechanical harmonic oscillator
In some embodiments, nanomechanical resonators (such as those shown in fig. 1-4) may be designed with multiple terminals, allowing a given nanomechanical resonator to be coupled with more than one ATS/control circuit. For example, a single connection ATS may include a ground terminal and a signal terminal, where the signal terminal is coupled with a control circuit that includes the ATS. In some embodiments, the multi-terminal nanomechanical resonator may include more than one signal terminal, which allows the nanomechanical resonator to be coupled with more than one control circuit/more than one ATS. For example, in some embodiments, the nanomechanical resonator may include three or more terminals such that the nanomechanical resonator is capable of coupling with three or more ATS. If not required, additional terminals may be coupled to ground so that the multi-terminal nanomechanical resonator functions like a single (or fewer) connected nanomechanical resonator. In some embodiments, different signal terminals of the same nanomechanical resonator may be coupled with different ATS, where ATS may be used to implement gates between mechanical resonators, such as a CNOT gate. This may allow, for example, the implementation of a gate for the stability subfunction.
Example physical Gate implementation
Recall that by coupling to shared ATS modeIs>Hamiltonian of the system of composition:
wherein the method comprises the steps ofAnd->Furthermore, the->And->Quantization mode->And->Zero point fluctuation of (a). To simplify the discussion, the pump E is temporarily ignored p (t) small frequency shift caused and assuming that the frequency of the mode is given by its bare frequency (in practice, however, the frequency shift needs to be considered; see below for pump-induced frequency shift). Then, in each mode at its own frequencyIn a rotation coordinate system of the rate rotation, the following is obtained:
wherein the method comprises the steps ofAnd->Quantization mode->And->Zero point fluctuation of (a). Note that a rotating coordinate system has been used in which each mode rotates at its own frequency.
First, the pump E can be used p (t)＝∈ p cos(ω p t) and selecting the pump frequency ω p For the frequency of the mode to be driven (i.e., ω p ＝ω k ) To easily realize the photon mode (i.e) Is driven linearly. Then, by employing only the leading linear term in the sinusoidal potential (e.g., ++>We get the desired linear drive: />
Wherein H' comprises a rapid oscillation term, e.gWhere l+.k, andand other items that spin faster. Since the frequency difference between the different modes is about 100MHz, but ε z The |/(2π) is typically much smaller than 100MHz, so the Rotation Wave Approximation (RWA) can be used to ignore the faster oscillation term.
To avoid driving unwanted higher order terms, a direct drive phonon mode may be chosen, but this increases hardware complexity, rather than using pump e at the ATS node p (t)。
The compensation hamiltonian of the CNOT gate is now continued. For example, the compensated hamiltonian amount of the CNOT gate may have the following form:
without loss of generality, consider patterns(control) and->CNOT gates between (targets). Note that _in>Comprising an opto-mechanical coupling between two phonon modes +.>Control mode->Is a linear drive and target mode of (2)>Is used for the selective frequency shift of (a). In order to achieve opto-mechanical coupling, one may want to pump e p (t)＝∈ p cos(ω p t) directDriving the third term in sinusoidal potential energy +.>However, the direct drive scheme is not suitable for several reasons: due to item->At a frequency omega 1 Rotated, the required pump frequency is represented by omega p ＝ω 1 This is given by the design pair +.>The pump frequencies reserved for linear driving of the modes are the same. Furthermore, item->Rotates at the same frequency as the unwanted cubic term. Therefore, even by directly driving phonon mode +.>To achieve a linear drive, but also cannot be achieved by using the pump frequency omega due to frequency conflicts with other cubic terms p ＝ω 1 To selectively drive the desired opto-mechanical coupling.
In some embodiments, to overcome these frequency oscillation problems, the term is driven non-resonantlyTo achieve opto-mechanical coupling. For example, use time-dependent hamiltonian>Obtaining an effective hamiltonian after time-averaging->Is assumed to be->The overall pattern is small (e.g.)>) And the detuning delta is sufficiently large. Thus giving a hamiltonian amount->This gives
Specifically, by selecting λ= -2α, optomechanical coupling and alsoSelective frequency shifting of modes, e.g.Up to the undesired cross Kerr term->In this variant, the desired selectivity is achieved, since the term +.>With other unwanted items (e.g.)>Wherein k.gtoreq.3) detuning to a frequency difference ω 2 -ω k . Thus, unwanted opto-mechanical coupling can be suppressed by appropriately selecting the detuning ΔNotably, the unwanted cross Kerr term +.>In principle, it is possible to drive another by non-resonant driving with a different detuning Δ' +.ΔThree times item->To compensate.
Finally, a similar approach used in compensating hamiltonian for CNOT gates may also be used for compensating hamiltonian for tovli gates.
Example procedure for implementing an ATS-phonon mixing system
Fig. 5 illustrates a process for stabilizing a nanomechanical resonator using a superconducting quantum interference device (ATS) with asymmetric threads, according to some embodiments.
At block 502, control circuitry of a system including one or more nanomechanical resonators stabilizes phonon pairs of storage modes supplied to the nanomechanical resonators via ATS to drive the nanomechanical resonators such that the storage modes remain in a coherent state. Further, at block 504, the control circuit dissipates phonon/photon pairs from the nanomechanical resonator via an open transmission line of the control circuit coupled with the nanomechanical resonator and the ATS.
Fig. 6 illustrates a process of stabilizing a plurality of nanomechanical resonators using a multiplexed ATS according to some embodiments.
At block 602, a storage mode of a plurality of nanomechanical resonators driven by a multiplexed ATS is selected such that the storage mode is detuned. For example, block 602 may include detuning a storage mode supported by a plurality of nanomechanical resonators from a dump resonator comprising a superconducting quantum interference device with asymmetric threads. At block 604, the pair of phonons is supplied to a first one of the nanomechanical resonators at a first frequency, and at block 606, the pair of phonons is supplied to other ones of the nanomechanical resonators at other frequencies such that frequencies of respective storage modes of the nanomechanical resonators are detuned. For example, blocks 604 and 606 may include applying pumping and driving to the ATS to activate a binaural drive dissipation stabilization for a first one of the nanomechanical resonators and suppress an associated decay process from the plurality of nanomechanical resonators via a microwave band pass filter.
In addition, the storage mode frequency and bandwidth of the filter of the control circuit may be selected such that the detuning of the unwanted term is greater than half the filter bandwidth. Then, at block 608, the associated attenuation term may be filtered from the plurality of nanomechanical resonators using a microwave filter having the determined filter bandwidth properties.
STOP algorithm and preparation of fault tolerant universal gate set, including bottom-up preparation of tovlil gate
In some embodiments, the above-described system for implementing mixed sonoelectrical qubits may be used to implement a generic gate set. In some embodiments, error correction may be used to correct errors and/or noise in such systems. In some embodiments, the STOP algorithm may provide an efficient protocol for providing error detection and/or correction, as described herein. In some embodiments, the above-described systems implementing mixed-sound electrical qubits may introduce noise biased toward phase flip errors. With this knowledge of error bias, error correction protocols (e.g., STOP algorithms) can be used to effectively correct errors. Additionally, error correction may be used to correct errors when preparing toverly using a bottom-up approach (and/or when using a top-down approach as further discussed in the next section), as further discussed below.
In some embodiments, a STOP algorithm may be used to determine when a STOP-measure stabilizer measurement is acceptable as part of an error detection/correction operation while ensuring that the probability of a logic error is low. For example, the STOP algorithm may be used to measure the stabilizer measurement prior to executing the Tooli gate, wherein measurement errors are corrected prior to applying the Tooli gate.
An alternative to using a STOP decoder may be to use a graph-based error correction technique. However, these techniques are generally based on the use of criford gates and are not as useful when tolford gates are applied. For example, these techniques involve measuring data qubits at the end of performing operations for determining errors. However, for non-krifords gates, a single qubit error of an initially input qubit may result in a logic failure that may not be detected using standard graph-based error correction techniques.
In contrast, the STOP algorithm measures the stabilizer of the input data qubit so that error detection and/or correction can be performed before performing an operation (e.g., a non-criford gate). In addition, rather than measuring the stabilizer of the data qubit a fixed number of times, this may not be sufficient in some cases to detect/correct a logic error, or may be unnecessary in other cases, a STOP algorithm may be used to determine when the stabilizer measurement may be stopped, while still ensuring that the probability of a logic error is low. For example, in some embodiments, the STOP algorithm may ensure that the total number of faults is less than the code distance of a repetition coded data qubit (e.g., repetition code) divided by two. Thus, it is known that most of the repeated data qubits are error free and that no logical errors occur, since most of the encoded data qubits are correct. For example, errors can be tolerated as long as the total number of errors is less than the code distance divided by two. In such a case, the errors do not result in logical errors, since most encoded qubits are free of errors. Note that physical errors are different from logical errors. Physical errors act on individual qubits, while logical errors are erroneous logical outputs that are determined based on the physical qubits. A logic error cannot be directly detected and if not, cannot be corrected. For example, an uncorrected physical error may result in a logical error, but if a physical error is not detected, the logical error caused by the physical error cannot be measured without knowing the physical error.
In some embodiments, the STOP algorithm may also be applied to qubits used to perform non-criford gates (e.g., tolford gates). Further, in some embodiments, a STOP algorithm may be used when growing the repetition code from a first code distance to a second code distance, wherein a stabilizer at a boundary between a plurality of code blocks is measured, the code blocks being concatenated to grow the repetition code. The STOP algorithm can be used to determine when repeated measurements of the stabilizer at the boundary can be stopped without introducing a logical error into the extended repetition code.
In some embodiments, when preparing tovlil doors, a STOP algorithm may be used to detect and/or correct for useErrors in the initial calculated ground state for the preparation of tolpal gate. The STOP algorithm can also be used to prepare a Cleveland gate that is applied sequentially to implement the Tooli gate, where the STOP algorithm is used to detect/correct errors in the Cleveland gate. In addition, STOP algorithm can be used at g A Error detection/correction is performed as part of repeatedly measuring the preparation of tovley gate using a bottom-up method, as discussed further below. In some embodiments, g may be measured at each round A Performing a round of error detection.
In some embodiments, the STOP algorithm may follow an algorithm similar to the algorithm shown below:
Set:t＝(d-1)/2；n diff ＝0；countSyn＝1；SynRep＝1
n diff Increase＝0；test＝0
while test＝0{
if n diff ＝t{
test＝1；
}
the error syndrome is measured. Store the error syndrome of the previous round in
synPreviousRound and store the current syndrome at synCurrentRound.
if(countSyn>1){
if(synPreviousRound＝synCurrentRound){
SynRep＝SynRep+1；
n diff Increase＝0；
}else{
SynRep＝0；
if(n diff Increase＝0){
n diiff ＝n！″##+1；
n diff Increase＝1；
}else
n diff Increase＝0
}
}
if(SynRep＝t-n diff +1){
test＝1；
}
countSyn＝countSyn+1；
}
In other words, let S j Is j th th Error syndromes of the round syndrome measurements. The goal of the STOP algorithm is to calculate the minimum number of faults that could lead to a change between two consecutive syndromes. The worst case is that a single two-qubit gate failure results in three different syndrome results. To solve this, let S k-1 Is the syndrome of round k-1. Assume now that the operator is measured using the circuit 700 shown in FIG. 7With input errors E in So that s (E in )＝s k-1 . Furthermore, it is assumed that the last two-qubit gate failure results in error +.>X errors result in the possibility of having syndromes s k-1 Data error XE of (2) in (e.g., data error 702), while Z-error toggles the syndrome result (e.g., measurement result 704), resulting in a possible difference from s k-1 Sum s k+1 Syndrome s of (2) k . Thus, without any other faults, this example shows that a single fault may result in three different syndromes s k-1 、s k Sum s k+1 。
STOP decoder tracks successive syndrome measurements s 1 ，s 2 ，...，s r ' where r is the number of measurement runs k and k+1 (with corresponding syndromes s k Sum s k+1 ) The total number of syndrome measurements in between (r is not fixed), where the resulting syndrome results vary (from variable n diff Represented) has a minimum number of faults of only n diff And is incremented when not incremented in the kth round.
Now assume that there are no more than t= (d-1)/2 faults for the distance d error correction code, if the same syndrome s j Repeating t-n successively diff +1 times, syndrome is correctI.e. no measurement errors). Thus, in this case, syndrome s can be used j To correct errors and terminate the protocol.
Similarly, if n diff And t, there must be at least t errors. Thus, by repeating the syndrome measurement once more (resulting in syndrome s r ) And uses the syndrome for decoding, for s r More than t faults are required to produce error correction. Thus, the STOP decoder will terminate if one of two conditions is met:
1) Continuously obtaining t-n diff Syndrome s +1 times j . In this case s j The syndrome is used for decoding. Or alternatively
2) Variable n diff Increasing to n diff =t. In this case, the syndrome measurement is repeated once more and the repeated syndrome measurement is used for decoding.
Stabilizer operation using repetition codes
In some embodiments, a repetition code may be used to prepare the logically computed ground state. In some embodiments, as described above, stable sub-measurements of repetition codes may be performed using a STOP algorithm. Furthermore, in some embodiments, the methods described herein may be applied to any family of Calderbank-Shor-Steane (CSS) codes.
In some embodiments, the fact that the code is repeated for n qubits is usedFirst prepareLogic +.>Measurement (see FIG. 8) projects the state to |0> L (given +1 results) and |1> L (given-1 results). Logic X applied to data due to measurement errors on auxiliary qubits L ＝X 1 Errors, so X can be repeated by using STOP algorithm L Wherein the syndrome corresponds to the auxiliary qubit measurement and applying the appropriate X according to the final measurement L Correction to achieve fault tolerance. For example, if |0> L Is the expected state and the final measurement at the termination of the STOP algorithm is-1, then X 1 Will be applied to the data. Finally, note that only X errors can be detected
From the auxiliary qubit to the data, but exponentially suppressed by the cat qubit.
In some embodiments, the calculated ground state may be prepared using a method involving only stabilized sub-measurements. For example, from the state Initially, it is Z L All stable states of the repetition code (each with random + -1 results) are measured, resulting in states:
if X k X k+1 Is-1, then a correction can be applied to the dataTo flip the symbol back to +1. However, considering the possibility of measurement errors, all stabilizers must be repeated<X 1 X 2 ，X 2 X 3 ，…，X n-1 X n >Is a measurement of (a). If a physical non-cliford gate is applied before measuring the data, a STOP algorithm may be used to determine when to STOP measuring the syndrome results. Subsequently, a Minimum Weight Perfect Match (MWPM) can be applied to the complete syndrome history to correct errors and apply the appropriate Z correction to repair the code space based on the initial stable sub-measurements. When cleford gate is applied to data qubits to prepare |tof>In the magic state, this second scheme for preparing the calculated ground state can be used with the STOP algorithm.
In addition, it is pointed out that, although notCorrected error E (z) Z L Of (wherein E) (z) Is correctable) can always be |0> L Absorption, thereby resulting in output state |ψ> out ＝E (z) |0> L But with respect to |0> L The fault-tolerant preparation scheme of (and thus the repetition of measurements of all the stabilizing agents a sufficient number of times) is still important. For example, if a single fault resulted in a correctable Z error for weight two (assuming n.gtoreq.5), then a second fault in a subsequent computation portion may be combined with the weight two error, resulting in an uncorrectable data qubit error. Thus, such a preparation protocol is not fault tolerant until the complete code distance.
Implementation of logic cleft gate
Since the CNOT gate is lateral to the repetition code, emphasis can be placed on implementing a set of single-qubit Cleford operations. Recall that the cleford group is generated by the following formula:
wherein->
Note that H and S given above are hadamard and phase gate operators. In some embodiments, S and q=shs may form a generation set for single-qubit cleford operations. In implementing such states, the states may be executedIs the a+1 eigenstate of the bubble operator.
In FIG. 10, a diagram for implementing S is presented L Is a circuit 1000 of (1), wherein the circuit employs i> L As input states and including a lateral CNOT gate and a logical Z-base measurement. If a-1 measurement is obtained, Z is applied to the data L And (5) correcting. Note, however, that measurement errors may result in logic Z L Is erroneously applied to the data. Thus, to ensure the capacityThe circuit of fig. 10 may be repeated and STOP algorithm used to determine when to terminate. The final measurement can then be used to determine if Z is needed L And (5) correcting. Thus, the implementation of S can be summarized as follows:
1. ) Realize the circuit shown in FIG. 10 and set the measurement result as S 1 ；
2. ) The circuit of fig. 10 is repeated and a STOP algorithm is used to determine when to terminate; and
3. ) If the final measurement result S r Let = +1, then nothing is done, otherwise apply Z to the data L ＝Z 1 Z 2 …Z n 。
A circuit 900 for implementing a logic q=shs gate is shown in fig. 9. The circuit is formed by injection of i> L State, lateral CNOT gate composition, and logical X-based measurement is applied to the input data qubit. If the measurement result is-1, then apply Y to the data L . As with the S gate, the application of the circuit in fig. 9 is repeated according to the STOP algorithm to prevent measurement errors. Q (Q) L The complete implementation of (c) is given below:
1. ) Implement the circuit in fig. 9 and set the measurement result as S 1 ；
2. ) The circuit in fig. 9 is repeated and a STOP algorithm is used to determine when to terminate; and
3. ) If the final measurement result S r If = +1, then nothing is done, otherwise apply Y to the data L ＝Y 1 Z 2 …Z n 。
Note that identity can be usedFrom S L And Q L The protocol obtains a logic hadamard gate. Thus neglecting repetition of the circuits of fig. 9 and 10, H L The implementation of (a) requires three logical CNOT gates, two-i> L And one|i> L State, two logical Z-based measurements and one logical X-based measurement. Instead of using two logical hadamard gates and one CNOT gate to obtain the CZ gate, a more efficient circuit is shown in fig. 12. Finally, due to the circuits in fig. 9 and 10 Involving only stable sub-operations and injection i> L The state, and thus the repeated measurement using the STOP algorithm is not absolutely necessary. For example, instead of using the STOP algorithm, the measurements can be repeated a fixed number of times and majority votes can be made. However, at low noise rates, the STOP algorithm may be more efficient because the average number of repetitions of the measurement may be close to t+1, where t= (d-1)/2.
Using repetition codes to grow coded data qubits to larger code distances
In some embodiments, at a distance d 1 Status of repetition code codingIs increased by a distance d 2 Status of repetition code coding->Such protocols can be used to grow |TOF>Magic state, as further described below.
Is provided withTo have a cardinal number->Distance d of (2) 1 A stable subgroup of repetition codes. Similarly, a->Is defined as +.>Wherein->Furthermore, distance d 2 The stable subgroup of repetition codes consists of->Given.
In addition, g i (d1) Is defined as s d1 The ith stable element in (c), and g i (d′1) Is defined asI' th stabilizing stator in (2), thus +.>And->For taking->Increase to->The protocol of (2) is given as follows:
1. ) Preparation state
2. ) Measurement ofAll of the stable stators in (1) result in a state
/>
3. ) Repetition using STOP algorithmAnd apply MWPM to the syndrome history to correct errors and project to code space. If- >Measured as-1 in the first round, then apply the correction +.>
4. ) Preparation stateAnd measure->
5. Repeating s using STOP algorithm d2 And uses MWPM for syndrome history to correct errors. If in the first round the stabilizerWhen measured as-1, apply the correction +.>
The growth scheme involves two blocks, the first being stateIt grows to +.>The second block is related to the state +>Prepared from->A stable set of qubits (steps 1 to 3). The key is to measure the boundary operator between two blocks +.>Thereby effectively combining two blocks into the coding state +.>This is a simple implementation of lattice surgery. To solve this, consider the state before step 4:
in the above equation, |1> d1 ＝X 1 |0> d1 . In addition, in the measurement ofAnd performs correction +.>At the same time, if the measurement result is-1, then |ψ> 3 Is projected to:
multiple rounds of repeated stabilizer measurements in steps 3 and 5 (above) may be required due to random results and measurement errors that may occur when performing the appropriate projections. A graphical representation of the growth scheme is shown in fig. 16.
Fault-tolerant preparation of TOF magic state from bottom to top
In some embodiments, a repetition code may be used to prepare the |tof > magic state, where the |tof > magic state is used to simulate tovlim.
The |TOF > magic state is given by:
it is stabilized by Abelian group
S TOF ＝<g A ，g B ，g C >
Wherein, the liquid crystal display device comprises a liquid crystal display device,
g A ＝X 1 CNOT 2，3
g B ＝X 2 CNOT 1，3
g C ＝Z 3 CZ 1，2
given |TOF>One copy of the magic state, the tolford gate can be simulated using the circuit 1102 in fig. 11A, and the required kriford correction is given in fig. 11B. Note that if the correction involves a stabilizing sub-g C The CZ gate may be implemented using the circuit 1200 of fig. 12. Further, note that for the kriford correction, 0 represents +1 measurement and 1 represents-1 measurement (in X or Z base). The stabilizer g is given in the above equation A 、g B And g C 。
Next, how to prepare |tof fault-tolerant is discussed>Magic state. First, please note the statusFrom g A And g C And (3) stability. This state can be prepared directly using the circuit 1300 in fig. 13. Next, before measuring the data, it will be necessary to use the auxiliary qubit and |ψ 1 >Physical tolpal gate is applied therebetween. Therefore, it is important to prepare state |0 in circuit 1300 of FIG. 13 using the STOP algorithm> L And |1> L As otherwise measurement errors in the last round of auxiliary qubit measurement may lead to logic failure. Once prepared, | +> L 、|1> L And |0> L The CNOT gate 1302 in fig. 13 can be applied laterally.
Now, given |ψ 1 >Can measure g by using circuit 1400 of fig. 14 A To prepare |TOF>Magic state, resulting in state |ψ> out . If the measurement result is +1, then |ψ> out ＝|TOF>. Otherwise, if the measurement is-1, then |ψ> out ＝Z 2 |TOF>. Thus, given a-1 measurement, a logic Z is applied to the second code block L And (5) correcting. Controlled g is shown in FIG. 17 A A more detailed implementation 1700 of the gate 1400. For example, circuit 1700 is shown as a code for measuring code distance d=3. Typically, d tolfori gates are required. Note that for repetition codes, a single CNOT gate is required because of X L ＝X 1 . In addition, due to the lateral CNOT gate, as shown, depending onPhysical tolfori gate was applied sequentially. Note that such circuitry may be used with any Calderbank-holder-stepe (CSS) code. The sequence of tolpali gates will remain unchanged. According to X L More double qubit gates will typically be required for the minimum weight representation of (a).
Note that due to CNOT 1，3 The gate may be done laterally for the repetition code and X on the second code block L Given by a physical X gate on the first qubit of the block, thus controlling g A The circuit can be highly parallelized, thus greatly simplifying its implementation. For example, FIG. 18 shows a method for measuring g A Which requires a flag qubit 1802. Such a circuit reduces the depth of the tolpali gate by half, but at the cost of the additional CNOT gate increasing the time step. The flag qubit may also be used to detect X errors occurring on control qubits of CNOT and tovlil. If an X error occurs, the flag qubit measurement will be-1 instead of +1. As shown in fig. 14, 15 and 17, if the X or Z base measurement is-1 instead of +1, then the entire |tof >The magic preparation protocol is stopped and restarted.
As in the case discussed above with respect to repetition codes, measurement errors on auxiliary qubits result in logic Z 2 Failure, therefore, requires repetition of g A Is a measurement of (a). This can be done deterministically using the STOP algorithm. However, since the circuit depth increases with increasing repetition code distance, and g is controlled A The cost of the gate is high and therefore this solution does not have a threshold, resulting in a rather high logic failure rate. An alternative method is by repeating g for a distance d repetition code A Just (d-1)/2 times to use the error detection scheme. At g A And (3) carrying out one round of error detection on the data quantum bit through measuring the stabilizer of the repetition code. This is shown in fig. 15. If any measurement is nontrivial, then it is used to prepare a |TOF>The magic state protocol will be aborted and reinitialized. In FIG. 19A, a two-dimensional layout of qubits and a method for measuring g is provided A Is compatible with the ATS architecture for distance 5 repetition codes described above. Such a layoutA minimum number of auxiliary qubits are used and can be directly generalized to any repetition code distance. The auxiliary qubit is first used to prepare the GHZ state. Then, the required tovlil and CNOT gates are applied, after which the GHZ state is cleared and the i+measurements are taken >The states assist the qubits. G implementing the d=5 repetition code is shown in fig. 19B A The equivalent circuit 1950 of the measurement.
Note that to take into account the connectivity constraints of the ATS, the lighter gray vertices 1902 need to be swapped with the darker gray vertices 1904 on the second block (as shown in the upper left corner of the grid of fig. 19A). This role switching between auxiliary qubits and data qubits does not result in additional crosstalk errors and is therefore tolerable for the reasons discussed above with respect to filtered multiplexed ATS. Thus, all controlled g in FIG. 15 A Measurement can be achieved using the circuit 1950 in fig. 19B with the qubit layout given in fig. 19A.
Finally, note that FIG. 19B is used to measure g A Is not fault tolerant to X or Y errors. However, since the X and Y errors are assumed to be exponentially suppressed, the flag qubits for detecting X-type error propagation are unnecessary as long as the total number of X or Y error rates times the fault location is below the target level of the algorithm of interest.
Fig. 20A illustrates high-level steps of a protocol for implementing a STOP algorithm, according to some embodiments.
At block 2002, syndrome result measurements are performed on any Calderbank-Shor-Steane code. At block 2004, successive ones of the syndrome results are tracked to generate a syndrome history. At block 2006, if either condition 1 (shown in block 2006A) or condition 2 (shown in block 2006B) is met, the syndrome measurement is stopped. Condition 1 is that the same syndrome result is repeated consecutively a threshold number of times, where the threshold is equal to ((d-1)/2) -n diff . -1. Condition 2 is n diff Equal to (d-1)/2, and when n is reached diff An additional syndrome result has been measured after = (d-1)/2. If any of these conditions are met, the measurement of the syndrome results may be stopped. At block 2008, if condition 1 is satisfied, then repeated corrections are usedThe sub-result performs error correction. Further, at block 2008, if condition 2 is satisfied, error correction is performed using the subsequently measured syndrome results.
FIG. 20B illustrates a method for determining parameters (n diff ) Is a high-level step of (a).
At block 2052, n is initialized with an initial value equal to zero diff . At block 2054, a first round of syndrome result measurements is performed. Further, at block 2056, a second round of syndrome result measurements is performed. At block 2058, a determination is made as to whether the syndrome results measured in the round performed at block 2056 (e.g., the syndrome results of the current round) are different from the syndrome results measured in the previous round. If so, then at block 2060, n is determined diff Whether to increment in the previous round, if not, n is entered at block 2062 diff Increment by one and repeat the process for the syndrome result measurement of the next round. Note, however, that when either condition 1 or condition 2 is satisfied (as shown in blocks 2006A and 2006B), the syndrome measurement is stopped. If the syndrome result measured in the round performed at block 2056 (e.g., the syndrome result of the current round) is the same as the syndrome result measured in the previous round or n is determined at block 2060 diff For the previous round, the process returns to block 2056 and where n is not incremented diff The syndrome results of another round are measured with incrementing.
Fig. 21 illustrates high-level steps of a protocol for growing repeated codes from a first code distance to a second code distance using a STOP algorithm, according to some embodiments.
At block 2102, |ψ is prepared as described above 1 >The state is, for example, the circuit shown in fig. 13. At block 2104, all stable stators S are measured d’1 Resulting in a state |ψ 2 >. This may be done as described above with respect to the stable sub-operation of the repetition code. At block 2106, S is repeatedly measured using the STOP algorithm d’1 And apply the MWPM to the syndrome history to correct errors and project the code into an increased code space. At block 2108, prepare |ψ 3 >Status, and measure X d1 X d1+1 . At the block 2110 of the process,repeated measurement of S using STOP algorithm d2 And apply MWPM to the syndrome history to correct the error.
Fig. 22 illustrates high-level steps for implementing a protocol for a logical toverly gate using a bottom-up approach with toverly magic injection, according to some embodiments.
At block 2202, a fault tolerant computing ground state is prepared using a STOP algorithm, wherein the fault tolerant computing ground state is to be used as an input to a toverly preparation. At block 2204, the CNOT gate is applied laterally to the fault tolerant computing ground state to prepare |ψ 1 >Status of the device. At block 2206, for |ψ 1 >Status, measure g A Obtaining the state |psi out >. If g A With measurement result-1, then a Z correction is applied. Thus, it will |psi 1 >State projection to |toff>In the state. At block 2208, repeat g A So that g is measured A (d-1)/2 times. At g A Error detection is performed between the rounds of measurement. If for g A Or error detection measures a non-trivial value, the protocol is aborted and restarted. At block 2210, if g A Is trivial, then g is based on A Is measured and state |ψ out >To prepare the tovlil magic state (e.g. |TOFF>Status). For example, if g A Is trivial, then |ψ out >＝|TOFF>. At block 2212, the cleford gate sequence shown in circuit 1102 of fig. 11A is applied. Further, the kriford error correction shown in fig. 11B is applied. This may be done as part of a top-down extraction of logical tovley, as described in more detail below, that utilizes the prepared tovley magic state as input to the extraction process.
Top-down extraction process for generating low error rate tovlil gate
As described above, tolfori gate forms a generic gate set for quantum computing when combined with criford population. Alternatively, generalization may be achieved by supplementing the cleft population with a number of high-fidelity tovernix states encoded with suitable quantum error correction codes. For many high threshold error correction codes, such as repetition (for polar bias noise) or surface codes, it is difficult to prepare high fidelity tovernix states. An example of magic state extraction uses coded cleford operations to extract higher fidelity magic states from lower fidelity magic states. For example, the tovory magic state prepared using the bottom-up method described above may be used in a magic state extraction process to produce a lower failure rate tovory magic state.
Conventional methods of magic state extraction use many low fidelity T-magic states as inputs to protocols that output other types of magic states, including TOFF states. However, in some architectures, many noisy TOFF states may be prepared with better fidelity than noisy T states. This is because all Calderbank-holder-stepe (CSS) codes (e.g., surface codes and repetition codes) have transverse CNOT, and this property can be used to robustly prepare TOFF states (as described above for bottom-up methods). However, as target fidelity increases, the probability of success of such "bottom-up preparation" protocols decreases, and so it is desirable to design magic extraction protocols that can further purify noisy TOFF states with low overhead. If the bottom-up TOFF protocol is used to prepare a solution having 10 -5 –10 -6 The TOFF state of the error rate would only require a single round of magic state extraction to achieve 10 for several quantum algorithms -9 –10 -10 Logical error rate. In contrast, for a sample of 10 -3 –10 -4 The T-state of error rate preparation would require two rounds of magic state extraction with secondary error suppression, or a single round 15T-1T protocol with low (1/15) rate, in order to achieve comparable logic error rates.
In some embodiments, to address these issues, a top-down extraction process is performed that uses TOFF or CCZ states without using any T states as feedstock extraction material or as catalyst. In addition, the tri-orthogonal code is not used in a general sense, but provides a new technology for protocol design by describing the CCZ circuit according to a third-order polynomial. Note that the CCZ state is clefu equivalent to the TOFF state, and when using the polynomial form of degree three, it would be beneficial to work with the language of the CCZ state. As an example of these techniques, in some embodiments, it is demonstrated that 8ccz→2ccz extraction can be implemented, equivalent to 8toff→2toff detecting faults on any single TOFF state. In the case where noise on the CCZ state is highly biased towards certain types of faults, a more compact and efficient protocol is possible, as will also be described.
In some embodiments, the extraction processes described herein may be implemented using various architectures, such as 2D architectures using repetition codes, asymmetric surface codes (for biased noise), or conventional square surface codes. The 2D implementation uses the cleford operation required for lattice surgery to perform the appropriate sequence of multiple quantum bit bubble observables (also referred to as multi-patch measurements).
Fig. 23 illustrates high level steps for extracting low error rate logical toverly gates using a plurality of logical toverly gates prepared using the bottom-up method described in fig. 22, according to some embodiments.
For example, at block 2302, a physical Tophori magic state is generated, which may have about 2.8X10 -4 Is a function of the error probability of (1). The error probability can be reduced by an order of magnitude or more by applying the STOP algorithm and error correction techniques described above for the bottom-up approach. For example, block 2304 illustrates error rate reduction achieved by utilizing a bottom-up approach. However, a further reduction in error rate can be achieved by performing a top-down extraction process. For example, block 2306 illustrates that error probability may be reduced to approximately 8x10 by performing a single round of extraction using the tovory magic states prepared in a bottom-up method as input -10 。
Fig. 24 illustrates a layout of a plurality of bottom-up toverly gates for extracting low error rate logical toverly gates, according to some embodiments.
To give an overall view of the extraction process, fig. 24 shows a circuit 2400 that includes qubits that have been prepared to implement a bottom-up (e.g., "BU") magic state. In addition, other qubits of the circuit have also been prepared to implement CCZ magic states (or low error rate tovley magic states/gates). In addition, some qubits implement error checking of the CCZ magic state. For example, each set of check qubits may be associated with a pair of CCZ magic states.
Comprehensive synthesis
First, observe CCZ on qubits i, j and k i，j，k A gate that will perform:
wherein |x>＝|x 1 ，x 2 ，x 3 ，...，x n >The representation is described as a binary string x= (x) 1 ，x 2 ，x 3 ，…，x n ). Is set in the above-described state of the art. More generally, it is contemplated to combine these CCZ gates with a CNOT circuit. For any invertible matrix J, there is a CNOT circuit V such that:
V＝∑ x |x><Jx|。
in combination with these operations, the generalized CCZ gate is given by:
wherein J k Is the kth column vector of J, and J k x＝∑ α [J k ] α x α Is the dot product between the vector and the bit string vector x. Because J is reversible, J k Must be linear independent or not constrained. Furthermore, only three columns of vectors are required to describe the action of a single generalized CCZ gate.
Alternatively, a generalized CCZ gate may be implemented using a single CCZ magic state as shown in 2504 of FIG. 25. The CCZ magic state is:
and it can be used to inject CCZ gates as shown in fig. 25, and can be controlled by the associated vector J 1 、J 2 And J 3 The determined CNOT gate extends to a generalized CCZ gate. Furthermore, the CNOT in CCZ infusion can be replaced with a sequence of multiple-quantum-bit brix measurements, which are fundamental operations in lattice-surgery-based architecture.
In some embodiments, CCZ, CZ, Z, and CNOT gates may be used to form a unitary matrix as shown below:
Wherein J is reversible and f:are some boolean functions that can be expressed as a cubic polynomial. Formally, this can be expressed as shown in the following theorem 1:
theorem 1: let U be the unitary matrix in the form of the above equation with function f such that there is a cubic polynomial representation:
and an integer F i，j，k . From this, a number of different factorization of the polynomial is derived, as follows:
wherein the method comprises the steps ofIs a binary vector (and thus a linear function), and Q is a lower triangular binary matrix (representing a quadratic boolean function). Then there is a circuit consisting of { CCZ, CZ, Z, CNOT } which uses up to ζ copies of the CCZ gates to implement U. We refer to the smallest of this ζ as the third order rank of the polynomial.
CCZ magic state extraction
In some embodiments, a cubic polynomial form is used to develop a method for extracting high fidelity |ccz>Magic state routine. For example, given a source noisy |ccz with Z noise>State, the claiford operation can be used to correct noisy |ccz>State extraction to obtain a smaller number of |ccz's with less noise>Status of the device. Note that given any noise model, |ccz can be rotated>The magic state makes the noise become pure Z noise. In some embodiments, therefore, the circuit is designed to achieve a target unitary matrix, i.e., Which acts on 3k qubits plus some number m of check qubits. However, the proposed design does not minimize the number of CCZ gates in the circuit, but rather allows |ccz>The Z error on the magic state propagates to the check qubit. Thus, by measuring the check qubit at the end of the circuit, a noisy |ccz can be detected>Errors in state.
In order to more accurately understand the error correction properties of a circuit, for example, the following definitions are used:
definition 1: given two boolean functions f and g, which can be expressed as cubic polynomials, they can be said to be cleford-equivalent f-g if and only if there is a boolean function q, which can be expressed as a quadratic function, such that for all x, f (x) =g (x) +q (x).
If f-g, it is apparent that they also have the same triple rank and the associated unitary matrix has the same minimum CCZ count.
Definition 2: given a set of column vectors passing through the equation as used in the above comprehensive discussionA series of zeta generalized CCZ gates, a set of matrices J j Defined as having three columns per matrix, as follows:
if the last example qubit is considered to be a check qubit, then the matrix will be partitioned into C j (bottom m rows) and L j As shown.
Note that c= (C 1 ，C 2 ，C 3 ，...，C ζ ) Sum l= (L 1 ，L 2 ，...，L ζ ) Acts like an X-checksum logical X operator matrix for quantum codes. There is also a need for error symbols for error patterns on the initial magic state.
Definition 3: given a givenMagic state, if it is in state +.>It is said to have error pattern +.>Errors
Given the zeta generalized CCZ gate sequence, the symbols used areTo represent the j|CCZ>State errors, so the joint state is:
if for |CCZ>W, e of state j Is non-zero, then the error is said to have w fault locations.
The concept used above regarding weights and the concatenated string (e 1 ，...，e ζ ) The distinction between the usual hamming weights of (c) is important because noisy |ccz is prepared>Many methods of state will result in having and single qubit errorsQuite probable errors, such as +.>In fact, we will usually know how much |CCZ there is>The state is of interest to any error influence, although it is assumed that the error is in a different |CCZ>The states are uncorrelated. The observations about error propagation in fig. 25 can now be formalized as follows:
given a unitary matrix U implemented by a series of generalized CCZ gates represented by a matrix as in definition 2, the magic states suffer from a berkovich error (e 1 ，...，e ζ ). The resulting unitary matrix on the target qubit is then UZ [ w]WhereinAnd vector->Is that
The last example qubit is identified as a check qubit, w can be divided into two parts as follows:
it is now known how errors are usually propagated, and this knowledge can be applied to specific protocols, for example 2 low error rate logical tovley gates extracted from 8 noisy tovley magic states, or 1 low error rate logical tovley gates extracted from 2 noisy tovley magic states.
Consider a unitary matrix U implemented by a series of generalized CCZ gates represented by a matrix as in definition 2, and the last m quantitiesThe sub-bits are identified as check qubits, andwherein U is C Is Cleiford and->Acting on the check qubits. Consider the following protocol:
1. ) Preparing all qubits in the state |++;
2. ) Performing the cleford inverseAnd any kriford correction from gate implants;
3. ) The last m qubits in the X base are measured.
Then, the X-based measurement in step 4 will yield a +1 result, provided that the magic state error pattern satisfies the following equation:
the protocol output has a trivial error Z u]Magic state of (2)So long as it
Example protocol
Consider a material with J j 2CCZ→1CCZ protocol of matrix:
the corresponding cubic polynomial can be directly verified as follows:
thus the circuit realizesThis is a single CCZ gate and (until kriford) it plays a negligible role in verifying qubits. Only one check qubit->Therefore, it will detect any error pattern, wherein +.>It comprises a single +.sub.f on any input magic state>Errors. However, it cannot detect other single failure error patterns on one magic state, e.g.>
Consider now the 8CCZ 2CCZ protocol that detects any errors on a single input CCZ state. A possible circuit 2602 implementation of this protocol is shown in fig. 26. The protocol uses 3 check qubits and associated J j The matrices are shown in fig. 26, for example, a matrix 2608 corresponding to a first CCZ, a matrix 2610 corresponding to a second CCZ, a matrix 2612 corresponding to a third CZZ, and a matrix 2614 corresponding to an eighth CCZ. Note that there are a total of eight matrices, one for each of the eight CCZs. However, for ease of illustration, only the matrices for CCZs 1-3 and 8 are shown. And calculating a cubic polynomial to obtain:
f(x)＝x 1 x 2 x 3 +x 4 x 5 x 6
it represents two CCZ gates and has a negligible effect on the check qubits. Note that this polynomial has no quadratic component and therefore does not need to be Inverse criford. Regarding error detection capability, note that each check matrix is an identity, so the three-bit error syndrome is v= Σ j e j . Given a fault on a single CCZ state, e j One of the vectors will be non-zero, so v will be non-zero and an error is detected. Conversely, if two CCZ states have the same error pattern, then e j ＝e j′ Not equal to 0, the syndrome will cancel and this will be an undetected error. However, not all two fault errors are undetected. If the magic states j and j' fail, but e j ≠e j′ Then both failure modes will be detected. The intuition of why the above matrix has desirable properties is related to the fact that the matrix is constructed using a subset of codewords from 3 copies of the reed-muller code.
Consider an error model in which a single noisy magic state has an error pattern e j Sum probabilityWe will use the convention +.>The success probability is: />
Where all configurations with trivial syndromes are summed. To determine the fidelity of the output magic state, we should sum all configurations with trivial syndromes and no logic damage to the state. For the leading level, this is dominated by the "no error" case, which in fact gives a certain lower limit to fidelity, so
f≥(1-∈) 8 /P suc
Consider now the depolarization error distribution:
the contribution of the leading order to the success probability can be calculated as follows. Zero fault contribution increases the success probability. We do not count any single fault events because they are all detected. In the event of two faults, we need a pair of (j, j') magic states (of which there are 8 choices 2=28 combinations) to withstand the same non-trivial error pattern e j Of which there are 7 types e j Not equal to 0. This means that there are 196 undetected two failure error modes, which contribute 196 to the success probability (e/7) 2 (1-∈) 6 ＝(196/49)∈ 2 (1-∈) 6 . However, not all undetected error patterns of both faults will result in a logical fault, the contribution to which is (184/49) ∈ 2 (1-∈) 6 . This results in the following approximation:
P suc ≈1-8∈
note that e 2 The foregoing constant factor 3.755 is very small for the extraction protocol. This is because the protocol detects the vast majority of all two failure events.
In some embodiments, the above protocol may be summarized as 3k+2CCZ→kCCZ.
Exemplary implementation of lattice surgery
Fig. 27 illustrates an exemplary implementation of the above protocol using lattice surgery. Throughout, we refer to the input magic error rate as e, and the output error rate is abbreviated as e target ～O(∈ 2 ). As previously described, the generalized CCZ gate may be injected using only multi-bubble measurements. For many error correction codes, such as topological codes and repetition codes, lattice surgery provides a natural way to measure multiple quantum bit bubble operators. The following examples relate to processing bit flipping and phase flipping noise using thin surface codes with asymmetric distances. When there is asymmetry, we use the bit flipping distanceLeaving a smaller contract. This also includes the restriction that the repetition code is one as the bit flip distance.
Lattice-surgical methods use some of the auxiliary qubits as communication paths between logical qubits. When performing multi-patch measurements, these qubits are temporarily brought into an error correction code for d m And (5) performing round error correction. d, d m The value of (2) must be large enough that the probability of error during multi-patch measurements is small enough. d, d m The larger the measurement error can be prevented. However, the errors during measurement are equivalent to single-qubit bubble errors on the magic state. Thus d m Must be large enough so that the probability of measurement error is less than O (e). However, the measurement error probability need not be less than the expected fidelity of the output magic state. However, logical qubits labeled 1 through 6 are required to have a distance d for bit flipping x And has a distance d for phase deflection z Wherein these distances are large enough that the logical error rate is lower than O (∈) and the code of the code is encoded 2 )。
The logical qubits marked 7 to 9 are check qubits of the protocol and have a distance d to bit flip x And has a distance d 'for phase inversion' z Is encoded by a code of (a). If a Z logic error is present on a check qubit at any point, this can be swapped to the end of the circuit and will be detected, provided that it is the only error. Therefore, we can set d' z ＜d z Only d 'is needed' z Is large enough that Z logic may occur below O (e). In surface codes, the space/qubit cost is 2d z d x The total space cost of qubits 1 to 9 and wiring auxiliary space is therefore:
N 1 ＝14d x (2d x +2d z +d′ z )
in addition, L responsible for the preparation of the input tolpali or CCZ state 0 The cost space of the block is N 0 . We will need 8 such CCZ states, but in fig. 27 the injection process is divided into two batches of 4 CCZ states. Therefore we need at least 4L 0 blocks, but since the success probability pf per L0 block is limitedSome redundancy is therefore required to ensure a high probability of success (otherwise there is a slight time delay). Given a factor R redundancy, we therefore use 4R copies of the L0 block, with a probability of all failure being approximately The size of the L0 block will depend on the underlying protocol used, in the case of an underlying protocol 3d' z . If factor R redundancy is required, the total L0 space requirement is:
N 0 ＝3Rd′ z
in fig. 27, a layout is shown, where r=3. Note that if 2Rd' z ＝7d x As shown in fig. 27, the L0 block is aligned neatly with the auxiliary wiring area. If all L0 blocks cannot be adjacent to the routing area, a different layout (e.g., with two columns of LO blocks) needs to be used.
The time cost of the whole extraction protocol is 10d m A code period. Most of this cost is due to multi-patch measurements. Recall that in fig. 27, the injection process is divided into two batches of 4 CCZ states. In each batch, there are several injection events interspersed, which is possible because all involved gates are swapped. Note also that the protocol uses multi-patch measurements and single-qubit measurements, but single-qubit measurements can be implemented within 1 code period, and thus the cost is negligible. Assuming a surface code architecture, where each code period employs 4 tcntot, where tcntot is the CNOT gate time, giving a total of 40d m tcnto time cost.
Fig. 28 illustrates a process for extracting a low error rate logical toffei gate from a plurality of noisy toffei magic states/toffei Li Men, according to some embodiments.
At block 2802, a plurality of tovory magic/noisy tovory doors are prepared using a bottom-up process or other suitable process. At block 2804, a low error rate logical toverly gate is extracted from the plurality of toverly magic states/toverly Li Men prepared at block 2802. At block 2806, check qubits are measured to check for errors, where the check qubits are associated with the extracted low error rate logic toverly gate. At block 2808, in response to verifying that the check qubit does not indicate an error, a low error rate logical tovley gate operation is performed using the extracted low error rate logical tovley gate.
Fig. 29A illustrates a process of extracting two low error rate logical toverly gates from eight noisy toverly magic states/toverly gates, according to some embodiments.
At block 2902, 8 noisy tovley magic states/tovley gates are selected for extracting low error rate logical tovley gates. At block 2904, a lattice surgery is performed to extract a low error rate logical tovley gate from the 8 noisy tovley magic states/tovley gates. At block 2906, a logical tovley gate operation is performed using the extracted low error rate logical tovley gate, where the error probability of the low error rate logical tovley gate is twice suppressed compared to the error rate of 8 noisy tovley magic states/tovley gates.
Fig. 29B illustrates a process of extracting a low error rate logical toffei gate from two noisy toffei magic states/toffei Li Men, according to some embodiments.
At block 2952, two noisy tovley magic states/tovley gates are selected for extracting low error rate logical tovley gates. At block 2954, a lattice surgery is performed to extract a low error rate logical tovley gate from the 2 noisy tovley magic states/tovley gates. At block 2956, a logical toverly gate operation is performed using the extracted low error rate logical toverly gate, wherein the probability of polar noise of the low error rate logical toverly gate is twice suppressed as compared to the polar noise of 2 noisy toverly magic states/toverly gates.
Fig. 30 illustrates an exemplary method of performing a lattice surgery to extract a low error rate logical tovley gate from a plurality of noisy tovley magic states/tovley Li Men, according to some embodiments.
At block 3002, multiple quantum bit bubble operator measurements are performed during lattice surgery for extracting low error rate logical tovley from noisy tovley magic/tovley Li Men, where for each J k Where k=1, 2,3,..the following is performedAnd (3) step (c). For example, at block 3004, for each k value, a measurement is made Wherein Z is k Brix Z, which represents the kth qubit acting on the magic state, and Z [ J ] k ]Is effected by binary vector J k An indexed algorithmic quantum bit string of bubble-benefit operators. Also, at block 3006, for each k, X on the kth qubit of the magic state is measured. At block 3008, for each "-1" result measured in step 3006, use Z [ J ] k ]Updating the cliford correction coordinate system. Then, at block 3010, the cliford correction coordinate system is updated by the correction given in the figure using the measurement results from step 3004.
High fidelity measurement
In some embodiments, low measurement errors and/or faster error correction may be achieved by using an additional read mode that is interrogated when the next error correction cycle is performed. For example, the circuit 3100 shown in fig. 31 includes readout qubits that enable measurements 3106 to be performed on the first round of error correction gates 3106 while the second round of error correction gates 3104 are performed (e.g., simultaneously).
Note that while some examples included herein are directed to mixed acousto-electric qubits and the architecture described in fig. 1-30, in some embodiments, such measurement techniques may be applied to other architectures.
Consider the fault tolerant operation of a quantum computer in which the properties (e.g., stability) of a data qubit are repeatedly measured. In a given error correction cycle, this typically involves two steps. First, the gate acts between the data qubit and the auxiliary qubit, and then the auxiliary qubit is measured. After the measurement of the auxiliary qubit, another error correction cycle may be performed.
In some embodiments, faster error correction cycles and lower measurement errors may be achieved by swapping auxiliary qubits (which would normally be directly interrogated) to additional read qubits (which may be some other gate that achieves the same purpose as SWAP, such as isswap, SWAP breaking down into CNOTS, etc.). Then, readout is performed on the readout qubits while the rest of the error correction is performed.
This approach not only reduces error correction cycle time, but also reduces idle errors on the data qubits. This is because the data qubits are in an idle state only during the exchange, which is typically a short duration required to perform the measurement. Furthermore, since idling is not a problem when performing measurements on read-out qubits, more repeated measurements can be made, which also improves measurement fidelity. For example, a complete error correction cycle time may be used to collect as many measurements as possible to increase measurement fidelity or to perform a single measurement with a long integration time during the next cycle time.
For example, in a traditional surface code architecture with transmon, the measurement is typically much slower than the gate. The error correction cycle time can be quickened by using the scheme. In addition, one may have more time to drive/integrate depending on the situation, thus enabling higher fidelity measurements without compromising the threshold due to large idle errors.
In some embodiments, the additional readout mode may be a boson mode. In such an embodiment, for the measurement of the read mode, repeated individual parity measurements are performed, and then the final result is determined by majority voting. Enabling more repeated measurements may improve the fidelity of the final result.
Fig. 32 shows a more specific example in which compression is further added. After the CNOT gate entangles the auxiliary qubit 3204 with the data qubit 3202, the auxiliary qubit is compressed. Compression involves moving the steady state alpha of dissipation-stabilized auxiliary qubits from an initial alpha initial Decrease of i to some |alpha final | a. The invention relates to a method for producing a fibre-reinforced plastic composite. Compression prevents single photon loss events whose occurrence is proportional to the average number of bosons in the readout mode. Once the pattern is compressed, SWAP 3212 is performed, which transitions the excitation from auxiliary qubit 3204 to boson read pattern 3206 (which may be phonon pattern). To achieve high fidelity readout, bosons are used The QND parity measurement is repeated for readout mode 3206. Each individual parity measurement is achieved by coupling the read mode dissipation to a transmon qubit 3208.
In some embodiments, during the parity measurement of the boson mode, the purpose is to determine whether there are an even number of photons or an odd number of photons in the resonator. Even during measurement, single photon loss can change the parity, potentially leading to incorrect readout. For a dissipation stabilization system, one simple way to improve measurement fidelity is to perform a compression operation 3214 prior to measurement.
In the particular case of systems stabilized by two photon dissipation, this involves dissipating the sub-Become->Wherein |alpha final |＜|α initial | a. The invention relates to a method for producing a fibre-reinforced plastic composite. This is done by changing α (t) from an initial value to a final value. In most cases, a sufficiently abrupt change is acceptable because there is no need to maintain phase coherence between parity states.
It is evident that, without compression, with the average photon number (α 2 ) The degree of distortion is significantly reduced because the measurement is more sensitive to single photon losses that change the parity. By adding compression, this problem is corrected.
For example, fig. 33 shows parity measurement 3302 taken after compression.
In some embodiments, where a is a qubit pattern and b is another pattern for readout, compression may follow the following procedure:
1 compressing qubits to α=0, mapping +cat states to |0>And map-cat state to |1>，
2. ) At Hamiltonian volumeThe (homodyne/heterodyne) b-mode is evolved and measured to determine whether the qubit is in the +cat state or the-cat state. If the qubit is in the-cat state, there is a drive on the b-mode implemented by hamiltonian, and if the qubit is in the +cat state, there is no drive on the b-mode. This form of hamiltonian can be derived resonantly and non-resonantly from the form of a three-wave hybrid hamiltonian:
in some embodiments, other hamiltonian amounts may be used, e.gOr (b)
In some embodiments, boson mode may use a mixed hamiltonian of three or more waves at ±|α>Read out in the matrix. In some embodiments, the program for such readout may be included in hamiltonianLower evolution and measurement (homodyne/heterodyne) b-mode to be at ±|α>Boson pattern was measured in the base. This form of hamiltonian can be derived resonantly and non-resonantly from the form of a three-wave hybrid hamiltonian:
In some embodiments, other hamiltonian amounts may be used, e.gOr (b)Etc.
FIG. 34 is a process flow diagram illustrating an error correction gate that uses a switching operator to excite a read qubit such that a subsequent round of measurement of the read qubit can be applied while performing, in accordance with some embodiments.
At block 3402, a set of error correction gates is applied between the data qubits and the auxiliary qubits of the stored quantum information. At block 3404, an exchange is performed between the auxiliary qubit and the readout qubit. At block 3406, one or more measurements are made of the read qubit. At block 3408, another set of error correction gates is applied between the data qubits and auxiliary qubits of the stored quantum information, with or without waiting for the measurement at block 3406 to complete. At block 3410, after the measurement at block 3406 is complete, another exchange is performed between the auxiliary qubit and the readout qubit. And, at block 412, one or more measurements are made of the readout qubit. Note that this process may be repeated for additional rounds of error correction.
Fig. 35 is a process flow diagram showing a process for performing measurement of auxiliary qubits without requiring a transmon qubit using a three-wave or higher wave mixed hamiltonian using compression or evolution, according to some embodiments.
For example, one or more data qubits storing quantum information may be entangled with auxiliary qubits. At block 3502, the qubit (e.g., the auxiliary qubit) is compressed before performing the readout on the qubit such that phonons or photons are dissipated from the qubit while preserving a measured observability of the qubit. Then, at block 3504, a readout is performed of the measured observables of the compressed qubits.
Fig. 36A is a process flow diagram illustrating one process for compacting cat qubits and measuring b-modes of the compacted cat qubits to determine information about first modes of the compacted cat qubits according to some embodiments.
At block 3602, the cat qubit is compressed such that phonons or photons are dissipated from the cat qubit. This may be achieved, for example, by adjusting the steady state dissipation ratio, which may be driven by ATS, for example. At block 3604, the cat qubit evolves under a hamiltonian amount that couples multiple excitations of the cat qubit to a second mode (b-mode) of the cat qubit. Then, at block 3606, a second pattern (e.g., b-pattern) of cat qubits is measured to determine information about the first pattern (e.g., a-pattern) of cat qubits.
Fig. 36B is a process flow diagram illustrating another process for compressing qubits and measuring the "B" pattern of the compressed cat qubits to determine information about the first pattern of the compressed cat qubits, according to some embodiments.
At block 3652, compression is performed in a system where the "a" mode is a qubit mode and the "b" mode is a readout mode. Compression includes compressing the qubit to α=0 such that the +cat state maps to |0>And-cat state mapping to |1>.. At block 3654, the system evolves at a hamiltonian amount that originates from a three wave or higher hybrid hamiltonian amount. For example, hamiltonian volumeAt block 3656, a measurement of the "b" mode is performed to determine whether the qubit is in the +cat state or the-cat state. For example, a (homodyne/heterodyne) measurement of b-mode is performed to determine whether the qubit is in +cat state or-cat state. If the qubit is in the-cat state, there is a drive on the "b" mode implemented by hamiltonian, and if the qubit is in the +cat state, there is no drive on the "b" mode.
Fig. 37 is a process flow diagram showing a process for evolving cat qubits via three or higher mixed hamiltonian and performing homodyne, heterodyne, or optical detection on the evolving cat qubits to measure a measured property of another boson mode of the cat qubits, according to some embodiments.
At block 3702, the cat qubit evolves under a hamiltonian amount that couples the phase of the cat qubit to a measurable property of another boson mode of the cat qubit, wherein the hamiltonian amount is selected from a three wave or higher mixed hamiltonian amount. At block 3704, homodyne, heterodyne, or optical detection of another boson mode is performed to determine the phase of the cat qubit.
Modeling cat qubits using shifted Fock (Fock) basis
Fock is an algebraic structure used to construct a quantum state space for a variable or unknown number of identical particles based on individual particles in the Hilbert space. For example, fock's base may be used to model the behavior of cavities or phonon resonators using n-dimensional state ladder. For example, fock groups can be used to model photon number states, where the ground state represents a vacuum condition without any photons present. However, by moving the Focus, the Hilbert space can be truncated to contain a finite (rather than infinite) number of photon states. Thus, the simulation can be simplified such that truncated hilbert space is simulated instead of infinite hilbert space that cannot be effectively simulated. For example, the shifted Fock-based simulation may replace the vacuum state with one or more coherent states. For example, the shift operator may be applied to a vacuum state condition such that the lowest shift fock state corresponds to the lowest operator of the lowest state of the cat qubit.
For example, a large cat qubit (with a large |α) is simulated using a conventional (e.g., non-shifted) Fock basis due to the need to simulate a large number (even infinite) of states 2 I > 1)) may be invalid. In contrast, in some embodiments, simulations may be performed using shifted Fock bases, which may be used to describe the kitten's state in a more compact manner than in the case of Chang Yongfu g bases. More specifically, annihilation operators can be constructed in shifted Fock bases
Recall that the cat state is composed of two coherent state components |±α>The two coherent state components can be understood as displacement vacuum statesIn the displaced Focus, the 2d displaced Focus state +.>Serving as a ground state, whichWhere n is {0,., d-1}. Note that while the displaced fock states in each ± α branch are orthogonally normalized, the displaced fock states in different branches are not necessarily orthogonal to each other. Therefore, orthonormal to the displaced Fock states is required.
The non-orthonormal ground state may be defined as follows:
wherein% n ，+>And |psi n ，->With even and odd parity of the excitation numbers, respectively. Note that the non-orthonormal states are grouped into even and odd branches instead of + -alpha branches. Thus, in the ground state manifold (n=0), the ground state is normalized Equivalent to cat qubit |. + -.)>Rather than computing the ground state |0/1>. For example:
any two ground states in different branches are made orthogonal to each other using an even/odd branching convention, so that orthogonal normalization can be performed separately in each parity sector. Note that:
wherein the method comprises the steps ofIs the displacement operator in the common Fock base +.>Is a matrix element of (a):
here the number of the elements is the number,is a generalized Laguerre polynomial. Due to->If m+n < |alpha| 2 D is then m，n (2α) is negligible. In this case, the ground state |φ n ，±>Almost orthonormal. To estimate the phase flip (or Z) error rate within the small-order error, the state |φ is typically ignored n ，±>Is a non-orthogonal property of (2). However, this is often not the case if the Z error rate is to be estimated with very high accuracy, or if the bit flip (or X) error rate needs to be estimated. In these cases, it may be necessary to consider the state |φ n ，±>Is a non-orthogonal property of (2). />
In such embodiments, the ground state |φ is normalized by applying a Galamer-Schmitt orthogonalization procedure n ，±>Orthogonal normalization is performed. More specifically, given a non-orthonormal ground state |φ n，± >From the ground state |phi 0，± >Starting to build d orthonormal ground states in each parity sector:
Is determined in a generalized manner. In the basic case (k=0),
for all the m is more than or equal to 1 and less than or equal to d-1,
and thus the logical |± > state of the cat qubit is given by:
in general, where 1.ltoreq.k.ltoreq.d-1, giveFor all 0.ltoreq.m.ltoreq.d-1 and 0.ltoreq.n.ltoreq.k-1. Thus, at this point, c ± Is known. Is provided with->Is a d x k matrix by obtaining a matrix c ± Obtained from the first k columns of (c). Given->We assign c ± K+1 columns of (2), as follows:
for m is more than or equal to 0 and less than or equal to k-1,
andfor all m > k.
A shift Fock ground state |psi of 2d orthonormal is constructed n，± >Then, the operator in the orthonormal basis needs to be determined(e.g.)>) Is a matrix element of (a). For this purpose, let |φ n >＝|φ n ，+>And phi n+d >＝|φ n，- >For ε {0,.,. Sup.d-1 }, we also define |ψ similarly n >And |psi n+d >. Hypothesis operator->Non-orthonormal ground state |phi n >The transformation is as follows:
O m，n non-orthonormal base |phi n >Operator in (a)Is a matrix element of (a). Thus, in the orthonormal basis, the operator +.>The matrix elements of (2) are given by:
where Φ and c are 2d×2d matrices, they are defined as:
/>
d x d matrix phi ± And c ± The matrix elements of (2) are given above.
Consider annihilation operatorNote that it returns non-orthonormal to ground state |phi n，± >The transformation is as follows:
Here, ±parity is flipped toAnd (5) parity check. Thus, in a non-orthonormal basis, the matrix elements of the annihilation operator are given by:
wherein the method comprises the steps ofIs the Paulori X operator, and->Is a truncated annihilation operator of size x d. Thus, orthonormal
Base |psi n，± >The matrix elements of annihilation operators in (a) can be represented by the above with respect to O' m，n The given transformation results.
Recall that i ψ n，± >Is a complementary ground state. In order to find matrix elements of the operators in the computational ground state, the matrix may be passed through a hadamard operatorConjugation is performed. Thus, in the orthonormal basis, the annihilation operator is given by:
here, the subscript SF denotes the role of the annihilation operator in shifting the fock basis. Approximate expressionCan be used for analyzing big cat qubits (wherein |alpha|under perturbation state 2 > 1), wherein the cat qubit state may sometimes be excited to a first excited state manifold (n=1), butWill decay rapidly back to the ground state manifold (n=0). Finally, note that parity operator ++>By defining the ground state in shifting the Fock groupAccurately give, for example, |ψ n，+ >(|φ n，- >) With even (odd) excitation number parity.
Fig. 38 is a diagram illustrating the simulation of cat qubits using shifted fokly (where |α|in accordance with some embodiments 2 Process flow diagram of the process of > 1).
At block 3802, a non-orthogonal normalized ground state is defined as described above. At block 3804, the ground state is orthonormal to construct a 2d orthonormal shifted fock ground state as described above. At block 3806, matrix elements of operators in the orthonormal basis are determined as described above.
Embodiments of the present disclosure may be described in terms of the following clauses:
clause 1. A method for modeling toverly encoded in any Calderbank-shell-Steane code, the method comprising:
preparing the computed ground state in a fault tolerant manner by applying a STOP algorithm to determine when syndrome measurements of stabilized sub-sets of repeated codes of the computed ground state can be stopped such that a probability of failure of the computed ground state is below a threshold level;
transversely applying a CNOT gate to the prepared calculated ground state to prepare |ψ 1 >A state;
measurement of |psi 1 >State cleford stabilizer g A And if the cleford stabilizes the g A Applying a logic Z correction, wherein the Keliford stabilized stator g is measured, if the measurement result of (1) A And based on a cleford stabilizing stator g A Is applied to the measurement results of the (2) and the (c) is a logical Z correction preparation state |ψ out >；
Repeating |psi 1 >State cleford stabilizer g A Measuring a threshold number of times;
Preparing a tovorexant state in response to determining that the criford stabilizing sub-gA measurement is trivial; and
a series of criford gates are applied to the logic input states ψ> L And a prepared toffei magic state to simulate a logical toffei gate, wherein a kriford error correction is applied to the outputs of the series of krifords applied to the logical input.
Clause 2. The method of clause 1, wherein applying the STOP algorithm comprises:
tracking successive syndrome results;
calculating a minimum number of faults that can cause the tracked sequence of consecutive syndrome results;
stopping the STOP algorithm if any of the following conditions are met:
1) The same syndrome result is repeated a threshold number of times in succession, where the threshold is equal to the difference between one of the following:
the code distance of one of the computed ground states being prepared is reduced by one, where the result of the subtraction is divided by two; and
a currently calculated minimum number of faults that can cause a sequence of consecutive syndrome results to be tracked; or (b)
2) The currently calculated minimum number of faults that can cause a tracked consecutive syndrome sequence is equal to the code distance of one of the calculated ground states being prepared minus one, wherein the result of the subtraction is divided by two, and wherein a further round of syndrome measurement is then performed; and
The repeated syndrome is utilized if condition 1 is met or the syndrome for the subsequently performed syndrome measurement is utilized if condition 2 is met, wherein the utilized syndrome is used for error correction of one of the calculated ground states being prepared.
Clause 3 the method of clause 2, wherein:
for the |ψ 1 >State repetition the cliford stabilizing stator g A Comprises repeating said measuring such that said Cleford stabilizerg A The number of times measured is equal to (d-1)/2, where d is the code distance of one of the a fault tolerant computing ground states.
Clause 4. The method of clause 3, wherein in the cleft stabilizing sub-g A Error detection is performed between corresponding measurements of (a).
Clause 5 the method of any of clauses 1 to 4, further comprising:
the tovernix state is grown from a first code distance to a second code distance, wherein a stability number is measured using the STOP algorithm, and a Minimum Weight Perfect Match (MWPM) is applied to a measurement syndrome history generated from measuring the stability number to correct errors.
Clause 6. A method, the method comprising:
measuring the syndrome result of the auxiliary quantum bit of any Calderbank-Shor Steane code;
Tracking successive ones of the measurement syndrome results;
calculating a minimum number of faults that can cause the tracked sequence of consecutive syndrome results;
stopping measuring the syndrome result if any of the following conditions is met:
1) The same syndrome result is repeated a threshold number of times in succession, where the threshold is equal to the difference between one of the following:
the code distance of the arbitrary Calderbank-Shor-Steane code is reduced by one, wherein the result of the subtraction is divided by two; and
a currently calculated minimum number of faults that can cause a sequence of consecutive syndrome results to be tracked; or (b)
2) The currently calculated minimum number that can cause a failure of the tracked consecutive syndrome sequence is equal to the code distance minus one, wherein the result of the subtraction is divided by two, and wherein a further round of syndrome measurement is then performed; and
and if condition 1 is satisfied, using the repeated syndrome results, or if condition 2 is satisfied, using syndrome results for a subsequently performed syndrome measurement, wherein the syndrome results used are used to correct the arbitrary Calderbank-Shor-Steane code.
Clause 7. The method of clause 6, wherein:
the arbitrary Calderbank-Shor-Steane code is an n-qubit repetition code;
Measuring the syndrome result includes measuring Z at an auxiliary qubit of the n-qubit repetition code L The method comprises the steps of carrying out a first treatment on the surface of the And is also provided with
Error correcting an n-qubit arbitrary Calderbank-Shor-Steane code further includes based on measured Z at auxiliary qubits of the n-qubit repetition code L And apply X L The correction is performed such that,
wherein the error correction preparation is performed to calculate a ground state for implementing a criford gate.
The method of clause 6 or clause 7, further comprising:
growing the arbitrary Calderbank-shell-stepe code from a first code distance to a second code distance, wherein a STOP algorithm is used to measure a stability number and a Minimum Weight Perfect Match (MWPM) is applied to a measurement syndrome history generated from measuring the stability number to correct errors, wherein the STOP algorithm comprises the measurement syndrome result, the tracking consecutive ones of the measurement results, the calculating a minimum number of faults, the stopping of the measurement if condition 1 or condition 2 is met, and the error correction.
Clause 9. The method of clause 8, wherein the growing the arbitrary Calderbank-holder-stepane code from a first code distance to a second code distance comprises:
lattice surgery is performed to merge two code blocks together, wherein the measuring includes measuring a boundary operator between the two code blocks being merged.
The method of any one of clauses 6 to 9, further comprising:
preparing the computed ground state in a fault tolerant manner by applying a STOP algorithm to determine when syndrome measurements of stabilized sub-sets of repeated codes of the computed ground state can be stopped such that a probability of failure of the computed ground state is below a threshold level;
wherein:
encoding the calculated ground state using the arbitrary Calderbank-holder-stepe code; and is also provided with
Applying the STOP algorithm includes performing the measurement syndrome, the tracking consecutive ones of the measurements, the calculating a minimum number of faults, the stopping the measurement if condition 1 or condition 2 is met, and the correcting errors.
Clause 11 the method of clause 10, further comprising:
transversely applying a CNOT gate to the prepared calculated ground state to prepare |ψ 1 >A state;
measurement of |psi 1 >State cleford stabilizer g A And if the cleford stabilizes the g A Applying a logic Z correction, wherein the Keliford stabilized stator g is measured, if the measurement result of (1) A And based on a cleford stabilizing stator g A Is applied to the measurement results of the (2) and the (c) is a logical Z correction preparation state |ψ out >；
Repeating |psi 1 >State cleford stabilizer g A Measuring a threshold number of times;
in response to determining the Cleford stabilization stator g A The measurement is trivial and the tovlil magic state is prepared; and
a series of criford gates was applied to |ψ 1 >State and prepared tovery magic state to simulate tovery gate, wherein the output of the series of kriful gates applied to the logic input applies kriful error correction.
The method of clause 11, wherein:
for the |ψ 1 >State repetition the cliford stabilizing stator g A The threshold number of measurements includes repeating the measurements such that the cleford stabilizes the sub-g A The number of times measured is equal to (d-1)/2, where d is the code distance of one of the a fault tolerant computing ground states.
Clause 13 the method of clause 12, wherein in the cleft stabilizing amount g A Error detection is performed between corresponding measurements of (a).
Clause 14 the method of clause 13, further comprising:
the tovernix state is grown from a first code distance to a second code distance, wherein a stability number is measured using the STOP algorithm, and a Minimum Weight Perfect Match (MWPM) is applied to a measurement syndrome history generated from measuring the stability number to correct errors.
The method of any of clauses 6-14, wherein the arbitrary Calderbank-holder-stephane code and auxiliary qubits are implemented using a system comprising:
A mechanical linear resonator; and
a control circuit coupled to the mechanical linear resonator,
wherein the control circuit is configured to stabilize an arbitrary coherent state superposition (cat state) of the mechanical linear resonator to store quantum information of the Calderbank-shell-stepe code, wherein to stabilize the arbitrary cat state the control circuit is configured to:
exciting phonons in the mechanical linear resonator by driving a respective stored pattern of the mechanical linear resonator; and
phonons from the mechanical linear resonator are dissipated via an open-circuit transmission line coupled to the control circuit, the open-circuit transmission line configured to absorb photons from a dump mode of the control circuit.
The method of clause 16, 15, wherein the control circuit comprises:
a superconducting quantum interference device (ATS) with an asymmetric thread coupled with the mechanical linear resonator.
Clause 17. A system, the system comprising:
a mechanical resonator; and
a control circuit coupled with the mechanical resonator, wherein the control circuit is configured to stabilize an arbitrary coherent state superposition (cat state) of the mechanical resonator to store quantum information; and
One or more computing devices storing program instructions that, when executed, cause the control circuitry to:
measuring a syndrome result of an auxiliary qubit storing one or more qubits of quantum information, wherein the auxiliary qubit and the one or more qubits storing the quantum information are implemented via one or more of the mechanical resonators;
tracking successive ones of the measurement syndrome results;
calculating a minimum number of faults that can cause the tracked sequence of consecutive syndrome results;
stopping measuring the syndrome result if any of the following conditions is met:
1) The same syndrome result is repeated a threshold number of times in succession, where the threshold is equal to the difference between one of the following:
the code distance of the one or more qubits storing quantum information is reduced by one, wherein the result of the subtraction is divided by two; and
a currently calculated minimum number of faults that can cause a sequence of consecutive syndrome results to be tracked; or (b)
2) The currently calculated minimum number that can cause a failure of the tracked consecutive syndrome sequence is equal to the code distance minus one, wherein the result of the subtraction is divided by two, and wherein a further round of syndrome measurement is then performed; and
The repeated syndrome is utilized if condition 1 is satisfied or syndrome results for subsequently performed syndrome measurements are utilized if condition 2 is satisfied, wherein the utilized syndrome results are used to error correct the stored quantum information.
The system of clause 17, wherein the one or more computing devices are further configured to implement:
preparing the computation ground state in a fault tolerant manner by applying a STOP algorithm to the fault tolerant computation ground state to determine when syndrome measurements of stabilized sub-sets of repeated codes of the computation ground state can be stopped such that a probability of failure of the computation ground state is below a threshold level;
wherein:
applying the STOP algorithm includes performing the measurement syndrome, the tracking consecutive ones of the measurements, the calculating a minimum number of faults, the stopping the measurement if condition 1 or condition 2 is met, and the correcting errors.
The system of clause 17 or clause 18, wherein the one or more computing devices are further configured to implement:
transversely applying a CNOT gate to the prepared calculated ground state to prepare |ψ 1 >A state;
measurement of |psi 1 >State cleford stabilizer g A And if the cleford stabilizes the g A Applying a logic Z correction, wherein the Keliford stabilized stator g is measured, if the measurement result of (1) A And based on a cleford stabilizing stator g A Is applied to the measurement results of the (2) and the (c) is a logical Z correction preparation state |ψ out ＞；
Repeating |psi 1 >State cleford stabilizer g A Measuring a threshold number of times;
in response to determining the Cleford stabilization stator g A The measurement is trivial and the tovlil magic state is prepared; and
applying a series of criford gates to logic input state |ψ> L And a prepared toffei magic state to simulate toffei gates, wherein the output of the series of cleford gates applied to the logic input applies cleford error correction.
The system of clause 19, wherein the one or more computing devices are further configured to implement:
the tovernix state is grown from a first code distance to a second code distance, wherein a stability number is measured using the STOP algorithm, and a Minimum Weight Perfect Match (MWPM) is applied to a measurement syndrome history generated from measuring the stability number to correct errors.
Clause 21 a method of preparing tovorinose for quantum computing, the method comprising:
preparing a plurality of tovernix states, wherein a calculated ground state for preparing the tovernix states is encoded using a repetition code;
Extracting tovorinostat from two or more of the prepared tovorinostat states, wherein extracting the tovorinostat comprises preparing check qubits associated with the tovorinostat, wherein the check qubits indicate whether there is an error in the extracted tovorinostat; and
a logical toverly gate operation is performed with the extracted toverly gate in response to verifying that the check qubit does not indicate an error.
The method of clause 22, wherein extracting the tovorinostat from the two or more of the prepared tovorinostat states comprises:
performing a multi-round lattice surgical operation between a selected set of qubits of the tovley magic state of the plurality of tovley magic states and the extracted qubits of tovley gate; and is also provided with
Wherein each of the multiple rounds of lattice surgery acts on at least one of the check qubits associated with the extracted toverly.
Clause 23 the method of clause 21 or clause 22, wherein the extracted toverly has less than 1x10 -6 Is a failure rate of (a).
The method of any one of clauses 21 to 23, wherein the extracted tovorinose is extracted using 8 of the tovorinose states.
Clause 25 the method of clause 24, wherein the error probability of two extracted toverly gates is less than the highest error probability of the respective one of the 8 toverly magic states minus a power of two.
The method of clause 26, clause 21, wherein the extracted tovliw gate is extracted using 2 of the tovliw magic states.
Clause 27 the method of clause 26, wherein when the 2 tovernix states have high biased noise, the error probability of the extracted tovernix is reduced by a power of two compared to the corresponding error rate of the 2 tovernix states.
Clause 28 the method of clause 21, wherein the extracted tovorinose is extracted using 8 of the tovorinose states, and
wherein when the 8 tovernix states have high biased noise, the error probability of the extracted tovernix is reduced by a power of three compared to the error rate of a respective one of the 8 tovernix states.
Clause 29. The method of clause 21, wherein a single round of extraction is performed to extract the tovernix states, and wherein the single round of extraction comprises performing a plurality of lattice surgical operations.
The method of any one of clauses 21 to 29, wherein the tovorrichness state and the extracted tovorrichness gate are implemented using a system comprising:
a mechanical linear resonator; and
one or more control circuits coupled to the mechanical linear resonator,
wherein the one or more control circuits are configured to stabilize an arbitrary coherent state superposition (cat state) of the mechanical resonator to store the tovernix state and the extracted quantum information of tovernix, wherein to stabilize the arbitrary cat state, the one or more control circuits are configured to:
exciting phonons in the mechanical resonator by driving respective stored modes of the mechanical resonator; and
phonons from the mechanical resonator are dissipated via one or more respective open-circuit transmission lines coupled to the one or more control circuits of the mechanical resonator, wherein the open-circuit transmission lines are configured to absorb photons from the respective one or more control circuits.
Clause 31, a system, the system comprising:
a mechanical resonator; and
one or more control circuits coupled with the mechanical resonator, wherein the one or more control circuits are configured to stabilize any coherent state superposition (cat state) of the mechanical resonator to store quantum information; and
One or more computing devices storing program instructions that, when executed, cause the one or more control circuits to:
preparing a plurality of tovlil magic states;
extracting tovorinostat from two or more of the prepared tovorinostat states, wherein extracting the tovorinostat comprises preparing check qubits associated with the tovorinostat, wherein the check qubits indicate whether there is an error in the extracted tovorinostat; and
a logical toverly gate operation is performed with the extracted toverly gate in response to verifying that the check qubit does not indicate an error.
The system of clause 32, wherein the extracted tovorinostat comprises two extracted tovorinostat extracted using 8 of the tovorinostat states.
Clause 33 the system of clause 32, wherein the error probability of the two extracted toverly gates is less than the highest error probability of the respective one of the 8 toverly magic states minus a power of two.
Clause 34 the system of clause 31, wherein the extracted tovorinostat is extracted using 2 of the tovorinostat states.
Clause 35 the system of clause 34, wherein when the 2 tovernix states have high biased noise, the error probability of the extracted tovernix is reduced by a power of two compared to the corresponding error rate of the 2 tovernix states.
Clause 36 the system of clause 31, wherein the extracted tovorinose is extracted using 8 of the tovorinose states; and is also provided with
Wherein when the 8 tovernix states have high biased noise, the error probability of the extracted tovernix is reduced by a power of three compared to the error rate of a respective one of the 8 tovernix states.
The system of any of clauses 31-36, wherein the plurality of tovernix states used as inputs are stabilized using a STOP algorithm, wherein to apply the STOP algorithm, the one or more computing devices are configured to:
tracking successive syndrome results;
calculating a minimum number of faults that can cause the tracked sequence of consecutive syndrome results;
stopping the STOP algorithm if any of the following conditions are met:
1) The same syndrome result is repeated a threshold number of times in succession, where the threshold is equal to the difference between one of the following:
The code distance of one of the fault tolerant computing ground states is reduced by one, wherein the result of the subtraction is divided by two; and
a currently calculated minimum number of faults that can cause a sequence of consecutive syndrome results to be tracked; or (b)
2) The currently calculated minimum number of faults that can cause a tracked consecutive syndrome sequence is equal to the code distance of one of the fault tolerant computing ground states minus one, wherein the result of the subtraction is divided by two, and wherein a further round of syndrome measurement is then performed; and
the repeated syndrome is utilized if condition 1 is met or the syndrome for subsequently performed syndrome measurement is utilized if condition 2 is met, wherein the utilized syndrome is used to correct one of the fault tolerant computing ground states.
The system of any one of clauses 31 to 37, wherein a respective one of the one or more control circuits comprises:
a superconducting quantum interference device (ATS) with an asymmetric thread coupled with a respective one of the mechanical resonators.
Clause 39 a method of extracting a logical toverly gate from a plurality of toverly magic states, the method comprising:
Performing a plurality of rounds of lattice surgery operations between a selected set of qubits of the tovley magic states of the plurality of tovley magic states and the extracted qubits of tovley gate; and is also provided with
Wherein each of the multiple rounds of lattice surgery acts on at least one of the check qubits associated with the extracted toverly.
Clause 40. The method of clause 39, wherein
The extracted tovlil is extracted using 8 of the tovlil magic states; and is also provided with
The error probability of the extracted tovery gate is less than the highest error probability of the respective one of the 8 tovery magic states minus a power of two.
Clause 41, a method of modeling cat qubits, the method comprising:
defining a ground state of the cat qubit;
orthonormal to a defined ground state to construct a 2d orthonormal shifted fock ground state for the cat qubit; and
matrix elements of operators in the orthonormal shifted Fock ground state are determined.
Clause 42 the method of clause 41, wherein prior to performing the orthogonal normalization, the defined ground states are defined such that the defined ground states are grouped into even and odd branches.
Clause 43 the method of clause 42, wherein in the ground state, the orthogonalized version of the defined ground state is equivalent to the complementary ground state of the cat qubit expressed as |++ > or |- > instead of the computed ground state expressed as |0> or |1 >.
Clause 44 the method of clause 43, wherein the defined ground states in different parity sectors are orthogonal to each other such that the orthogonal normalization is performed in the respective parity sectors, respectively.
Clause 45 the method of clause 41, further comprising:
the determined matrix elements of the operator are applied to simulate cat qubits in the 2d orthonormal shifted Focus state.
Clause 46 the method of any of clauses 41 to 45, wherein the cat qubit being simulated is a mixed acoustic electric qubit implemented using a linear mechanical resonator.
Clause 47 the method of any of clauses 41 to 45, wherein the cat qubit being modeled is implemented using an electromagnetic resonator.
Clause 48, one or more non-transitory computer-readable media storing program instructions that, when executed on or across one or more processors, cause the one or more processors to:
Defining a ground state of a cat qubit to be simulated;
orthonormal to a defined ground state to construct a 2d orthonormal shifted fock ground state for the cat qubit; and
matrix elements of operators in the orthonormal shifted Fock ground state are determined.
Clause 49, the one or more non-transitory computer-readable media of clause 48, wherein the program instructions, when executed on or across the one or more processors, further cause the one or more processors to:
the determined matrix elements of the operator are applied to simulate cat qubits in the 2d orthonormal shifted Focus state.
Clause 50 the one or more non-transitory computer-readable media of clause 48, wherein prior to performing the orthogonal normalization, the defined ground states are defined such that the defined ground states are grouped into even and odd branches.
Clause 51 the one or more non-transitory computer-readable media of clause 48, wherein in a ground state, the orthogonalized version of the defined ground state is equivalent to a complementary ground state of the cat qubit expressed as |++ > or |- > instead of a computing ground state expressed as |0> or |1 >.
Clause 52 the one or more non-transitory computer readable media of clause 48, wherein the defined ground states are orthogonal to each other such that the orthogonal normalization is performed separately in the corresponding parity sector.
Clause 53 a system, the system comprising:
a memory storing program instructions; and
one or more processors, wherein the program instructions, when executed on or across the one or more processors, cause the one or more processors to:
defining a ground state of a cat qubit to be simulated;
orthonormal to a defined ground state to construct a 2d orthonormal shifted fock ground state for the cat qubit; and
matrix elements of operators in the orthonormal shifted Fock ground state are determined.
Clause 54 the system of clause 53, wherein the program instructions, when executed on or across the one or more processors, further cause the one or more processors to:
the determined matrix elements of the operator are applied to simulate cat qubits in the 2d orthonormal shifted Focus state.
Clause 55 the system of clause 53, wherein prior to performing the orthogonal normalization, the defined ground states are defined such that the defined ground states are grouped into even and odd branches.
Clause 56 the system of clause 53, wherein in the ground state, the orthogonalized version of the defined ground state is equivalent to the complementary ground state of the cat qubit expressed as |++ > or |- > instead of the computed ground state expressed as |0> or |1 >.
Clause 57 the system of clause 53, wherein the defined ground states are orthogonal to each other such that the orthogonal normalization is performed separately in the corresponding parity sector.
The system of any one of clauses 53 to 57, wherein the cat qubit to be emulated is implemented using a mechanical resonator.
Clause 59 the system of any of clauses 53 to 57, wherein the cat qubit to be emulated is implemented using an electromagnetic resonator.
Clause 60 the system of any of clauses 53 to 57, wherein the cat qubit to be emulated is implemented in a system comprising one or more mechanical resonators and one or more electromagnetic resonators.
Clause 61, a method of measuring auxiliary qubits with error correction of stored quantum information, wherein a set of one or more error correction gates are applied between one or more data qubits storing the quantum information and the auxiliary qubits to entangle the auxiliary qubits with the one or more data qubits, the method comprising:
Transferring the excitation of the auxiliary qubit to a further readout qubit using a SWAP gate or other sequence of one or more gates performing a SWAP function;
performing one or more measurements on the readout qubits; and
another set of one or more error correction gates is applied between the one or more data qubits storing the quantum information and the auxiliary qubit while performing at least some of the one or more measurements on the read-out qubits.
Clause 62 the method of clause 61, wherein the data qubit, the auxiliary qubit, and the readout qubit are implemented using a mechanical resonator.
Clause 63. The method of clause 62, wherein the exchange gate is mediated by a superconducting quantum interference device (ATS) with asymmetric threads.
Clause 64 the method of clause 61, wherein the data qubits, the auxiliary qubits, and the readout qubits are implemented using boson mode.
Clause 65 the method of clause 61, wherein the amount of time the one or more data qubits are idle when the switch gate is performed is less than the amount of time required to perform the one or more measurements on the read qubits.
Clause 66 the method of clause 65, wherein the one or more measurements of the readout qubit:
including repeated measurements taken after performing the switch gate or other gates performing switch functions; and is also provided with
The switching gate operation is repeated until substantially the same time as the switching gate operation is performed for the next round of error correction, which is performed after another set of one or more error correction gates is applied.
Clause 67 the method of clause 66, wherein the multiple repeated measurements of the read-out qubit comprise repeated QND (quantum non-destructive) parity measurements of the read-out qubit.
Clause 68 the method of clause 65, wherein the read qubit is a higher order mode of an auxiliary oscillator of the auxiliary qubit.
Clause 69 the method of clause 68, wherein the auxiliary oscillator is a lambda/2 oscillator, and wherein the mode of reading the qubits is twice the fundamental mode of the auxiliary oscillator.
Clause 70, a method of measuring boson qubits, wherein the measurement is affected by a single photon loss event, the method comprising:
compressing the boson qubit prior to performing a readout on the boson qubit such that phonons or photons are dissipated from the boson qubit while preserving a measured observability of the boson qubit; and
After the compression, a readout is performed of the measured observability of the compressed boson qubits.
The method of clause 70, wherein compressing the boson qubit comprises:
changing the dissipative sub-parameter such that the average photon number or average phonon number (alpha) of the boson qubit is from alpha initial The value is reduced to alpha final Value of |alpha final |<|α initial |。
Clause 72 the method of clause 70, wherein:
compressing the boson qubit includes changing a steady state of a two-photon dissipation process of the boson qubit; and is also provided with
Performing a read-out of the measured observables of the compressed boson qubits includes performing a parity read-out of the compressed boson qubits.
The method of any one of clauses 70 to 72, wherein the boson qubit is implemented using a system comprising:
a mechanical resonator; and
a control circuit coupled to the mechanical resonator,
wherein the control circuit is configured to stabilize an arbitrary coherent state superposition (cat state) of the mechanical resonators to store quantum information, wherein to stabilize the arbitrary cat state the control circuit is configured to:
Exciting phonons in the mechanical resonator by driving respective stored modes of the mechanical resonator; and
phonons are dissipated via an open-circuit transmission line coupled to the control circuit, the open-circuit transmission line configured to absorb photons from a dump mode of the control circuit.
The method of clause 74, 73, wherein the control circuit comprises:
an asymmetrically threaded superconducting quantum interference device (ATS) coupled with the mechanical resonator, and
wherein compressing the boson qubit comprises changing a steady state of two-photon dissipation controlled by the ATS.
Clause 75. A method of performing a measurement on a first pattern (a) representing quantum information stored in a cat qubit, the method comprising:
compressing the cat qubit such that an even number of phonons or photons are dissipated from the cat qubit;
evolving the cat qubit at a hamiltonian that couples multiple excitations of the cat qubit to a change in a measurable property of another mode (b); and
measuring said another pattern (b).
The method of clause 76, 75, wherein:
The measurement is a parity check to determine the cat qubit;
compressing the cat qubit includes compressing the cat qubit such that an average photon number or average phonon number (α) of the cat qubit is reduced to zero, wherein even cat states map to |0> and odd cat states map to |1>;
said Ha Midu amount is selected from the group consisting of a three-wave or higher wave mixed hamiltonian amount correlating the number of phonons or photons with a change in said another mode (b); and is also provided with
The other mode (b) is measured using homodyne, heterodyne or photo detection.
Clause 77 the method of clause 75, wherein the hamiltonian amount selected from the three-wave or higher wave mixed hamiltonian amount comprises
Clause 78 the method of clause 75, wherein the hamiltonian amount selected from the three-wave or higher wave mixed hamiltonian amount comprises
Clause 79 the method of clause 75, wherein the hamiltonian amount selected from the three-wave or higher wave mixed hamiltonian amount comprisesAnd the product of the term affecting said other pattern (b) in a measurable manner.
The method of clause 80, wherein:
the cat qubit is implemented via a mechanical resonator;
the other mode (b) is a dump mode; and is also provided with
The Ha Midu amount is selected from a three-wave or higher-wave mixing hamiltonian amount that relates the average phonon number or the average photon number to a change in the other mode (b), wherein the three-wave mixing is mediated by ATS.
Clause 81. A method of performing a measurement of quantum information in a cat qubit, the method comprising:
evolving under hamiltonian, which couples the phase of the alpha ("a" mode) of the cat qubit to a measurable property of another boson mode ("b" mode), wherein the Ha Midu quantity is achieved via a three wave or higher mixed hamiltonian; and
homodyne, heterodyne or light detection is performed on the "b" mode to determine the state of the "a" mode,
wherein the cat qubit is implemented using a system comprising:
a mechanical resonator; and
comprising a control circuit with an asymmetrically threaded superconducting quantum interference device (ATS) coupled to the mechanical resonator,
wherein the control circuit is configured to stabilize an arbitrary coherent state superposition (cat state) of the mechanical resonators to store quantum information, wherein to stabilize the arbitrary cat state the control circuit is configured to:
Exciting phonons in the mechanical resonator by driving respective stored modes of the mechanical resonator; and
phonons are dissipated via an open-circuit transmission line coupled to the control circuit, the open-circuit transmission line configured to absorb photons from a dump mode of the control circuit.
Clause 82. The method of clause 81, wherein:
the Ha Midu amount is derived from an ATS-mediated three-wave mixing hamiltonian amount;
the "a" mode is implemented via a mechanically stored resonator; and is also provided with
The "b" mode is implemented via an electromagnetic resonator.
Clause 83. The method of clause 82, wherein the hamiltonian amount for reading comprises:
or (b)
Clause 84 a system, the system comprising:
a mechanical linear resonator; and
a control circuit coupled to the mechanical linear resonator,
wherein the control circuit is configured to stabilize an arbitrary coherent state superposition (cat state) of the mechanical linear resonator to store quantum information, wherein to stabilize the arbitrary cat state the control circuit is configured to:
exciting phonons in the mechanical linear resonator by driving a stored pattern of the mechanical linear resonator; and
Phonons from the mechanical linear resonator are dissipated via an open-circuit transmission line coupled to the control circuit, the open-circuit transmission line configured to absorb photons from a dump mode of the control circuit.
Clause 85 the system of clause 84, wherein the control circuit comprises:
an asymmetrically threaded superconducting quantum interference device (ATS) coupled with the mechanical resonator.
The system of clause 86, 85, further comprising:
one or more additional mechanical linear resonators coupled to the control circuit, wherein the control circuit is configured to stabilize respective states of cats of the mechanical linear resonators and the one or more additional mechanical linear resonators via a single ATS and a single open transmission line.
Clause 87 the system of clause 86, wherein the stored pattern of the corresponding mechanical linear resonator is detuned such that phonons supplied to the corresponding mechanical linear resonator are supplied in an incoherent manner.
The system of clause 88, wherein the pumping of the respective mechanical linear resonator is separated by a frequency bandwidth that is greater than the binaural sub-dissipation ratio of the respective mechanical linear resonator.
Clause 89 the system of clause 88, wherein the control circuit further comprises:
one or more microwave filters configured to filter out a correlation decay term that, if not filtered out, results in simultaneous phase flipping of storage modes of two or more of the mechanical linear resonators.
The system of any of clauses 85 to 89, wherein the control circuit further comprises:
a high impedance inductor is used as part of the ATS coupled to the mechanical linear resonator.
Clause 91 the system of clause 90, wherein the high impedance inductor comprises:
planar meander or double spiral inductors;
a spiral inductor having one or more air bridges;
a josephson junction array; or (b)
Thin film superconductors with high dynamic inductance.
The system of any of clauses 85-91, wherein at least some of the mechanical linear resonators include three or more terminals, the system further comprising:
two or more additional superconducting quantum interference devices (ATS) with asymmetric threads,
Wherein a given one of the mechanical linear resonators comprising three or more terminals is coupled with three or more ATS via the respective three or more terminals.
Clause 93. A method of stabilizing a coherent state superposition (cat state) of a mechanical resonator, the method comprising:
exciting phonons in the mechanical resonator by driving a stored pattern of the mechanical resonator; and
phonons from the mechanical resonator are dissipated via an open-circuit transmission line coupled to a control circuit, the open-circuit transmission line configured to absorb photons from a dump mode of the control circuit.
Clause 94 the method of clause 93, wherein the phonons are excited in the mechanical resonator and are dissipated from the mechanical resonator in pairs comprising two phonons.
Clause 95 the method of clause 94, wherein the excitation and dissipation of the phonon pairs is induced via a nonlinear interaction between a storage mode of the mechanical resonator and a dump mode of the control circuit, wherein a square of the storage mode of the mechanical resonator is induced via a binaural coupling rate (g 2 ) The dump mode coupled to the control circuit, and wherein a decay rate of phonons absorbed via the open-circuit transmission line is about the coupling rate (g 2 ) Ten times or more than that of the other.
Clause 96 the method of clause 94, wherein the control circuit comprises an asymmetrically threaded superconducting quantum interference device (ATS) coupled with the mechanical resonator, wherein the ATS is configured such that a pair of bimorphs is excited in the mechanical resonator.
Clause 97 the method of clause 96, further comprising:
causing phonons to be excited in one or more additional mechanical resonators by driving respective stored modes of the one or more additional mechanical resonators; and
dissipating phonons from the one or more additional mechanical resonators via the open-circuit transmission line, the open-circuit transmission line configured to absorb the photons from the dump mode of the control circuit,
wherein the use of a single ATS causes the phonon to be excited in the mechanical resonator and the one or more additional mechanical resonators.
The method of clause 98, wherein the storage mode of the corresponding mechanical resonator is detuned.
Clause 99. The method of clause 98, wherein the storage modes of the respective mechanical resonators are spaced apart by a frequency bandwidth greater than a binaural sub-dissipation rate of the dump mode of the control circuit.
The method of clause 99, further comprising:
the associated attenuation terms of the storage modes of two or more of the mechanical resonators are filtered out via one or more microwave filters.
Clause 101. A method of stabilizing a coherent state superposition (cat state) of a plurality of resonators storing quantum information, the method comprising:
exciting pairs of two phonons or pairs of two photons in respective ones of the respective resonators by driving respective storage modes of the respective resonators via a single asymmetrically threaded superconducting quantum interference device (ATS); and
dissipating pairs of two photons from a dump mode of a control circuit comprising the ATS, wherein the control circuit is coupled with a corresponding resonator, and wherein an open transmission line is coupled to the dump mode of the control circuit.
Clause 102. The method of clause 101, wherein the resonator is a mechanical resonator.
Clause 103. The method of clause 101, wherein the resonator is an electromagnetic resonator.
Clause 104. A method, the method comprising:
implementing a multiple quantum bit gate between a control qubit and a target qubit in a system comprising a harmonic oscillator and an asymmetrically threaded superconducting quantum interference device (ATS), wherein implementing the multiple quantum bit gate comprises:
Implementing a linear drive of a phonon mode of a cat qubit of the gate, wherein the cat qubit is implemented via one resonator of the system;
coordinating hamiltonian interactions, wherein the Ha Midu quantity interactions comprise a compensating hamiltonian for a multi-qubit gate, and wherein the compensating hamiltonian comprises a frequency shift of a target mode and a control mode at a driven mechanical resonator, wherein the control mode and the target mode are coupled via an opto-mechanical coupling.
The method of clause 105, wherein the setting of the multiple-quantum bit gate comprises a plurality of resonators of the resonators coupled to the ATS, wherein the ATS is shared by the plurality of resonators.
Clause 106 the method of clause 104, wherein the opto-mechanical coupling is accomplished by non-resonantly driving the resonator and the ATS.
Clause 107 the method of clause 106, wherein the non-resonantly driving the harmonic oscillator and the ATS avoids frequency conflicts.
Clause 108. The method of clause 104, wherein the multiple quantum bit gate is a CNOT gate.
Clause 109 the method of clause 104, wherein the multiple quantum bit gate is toverly gate.
The method of clause 110, wherein the resonator is a mechanical resonator.
Clause 111 the method of clause 104, wherein the resonator is an electromagnetic resonator.
Illustrative computer System
FIG. 39 is a block diagram illustrating an exemplary computing device that may be used in at least some embodiments.
Fig. 39 illustrates such a general purpose computing device 3900 that may be used in any of the embodiments described herein. In the illustrated embodiment, computing device 3900 includes one or more processors 3910 coupled to a system memory 3920 (which may include non-volatile and volatile memory modules) via an input/output (I/O) interface 3930. Computing device 3900 also includes a network interface 3940 coupled to I/O interface 3930.
In various embodiments, computing device 3900 may be a single processor system including one processor 3910, or a multi-processor system including several processors 3910 (e.g., two, four, eight, or another suitable number). Processor 3910 may be any suitable processor capable of executing instructions. For example, in various embodiments, the processor 3910 may be a general purpose or embedded processor implementing any of a variety of Instruction Set Architectures (ISAs) (e.g., x86, powerPC, SPARC, or MIPS ISAs or any other suitable ISA). In a multiprocessor system, each processor 3910 may generally, but need not necessarily, implement the same ISA. In some implementations, a Graphics Processing Unit (GPU) may be used in place of or in addition to a conventional processor.
The system memory 3920 may be configured to store instructions and data that are accessible to the one or more processors 3910. In at least some embodiments, the system memory 3920 may include volatile and nonvolatile portions; in other embodiments, only volatile memory may be used. In various embodiments, the volatile portion of system memory 3920 may be implemented using any suitable memory technology, such as Static Random Access Memory (SRAM), synchronous dynamic RAM, or any other type of memory. For the non-volatile portion of system memory (e.g., which may include one or more NVDIMMs), a flash-based memory device, including a NAND flash device, may be used in some embodiments. In at least some embodiments, the non-volatile portion of the system memory can include a power source, such as a supercapacitor or other power storage device (e.g., a battery). In various embodiments, any of memristor-based resistive random access memory (ReRAM), three-dimensional NAND technology, ferroelectric RAM, magnetoresistive RAM (MRAM), or various types of Phase Change Memory (PCM) may be used at least for the non-volatile portion of the system memory. In the illustrated embodiment, program instructions and data (e.g., those methods, techniques, and data described above) that implement one or more desired functions are shown stored as code 3925 and data 3926 within system memory 3920.
In some embodiments, I/O interface 3930 may be configured to coordinate I/O traffic between processor 3910, system memory 3920, and any peripheral devices in the device, including network interface 3940 or other peripheral interfaces such as various types of persistent and/or volatile storage devices. In some embodiments, I/O interface 3930 may perform any necessary protocol, timing, or other data transformations to convert data signals from one component (e.g., system memory 3920) into a format suitable for use by another component (e.g., processor 3910). In some embodiments, I/O interface 3930 may include support for devices attached through various types of peripheral buses, such as variants of the Peripheral Component Interconnect (PCI) bus standard or the Universal Serial Bus (USB) standard. In some embodiments, the functionality of I/O interface 3930 may be split into two or more separate components, such as a north bridge and a south bridge. Also, in some implementations, some or all of the functionality of I/O interface 3930 (e.g., an interface to system memory 3920) may be incorporated directly into processor 3910.
The network interface 3940 may be configured to allow data to be exchanged between the computing device 3900 and other devices 3960 (e.g., other computer systems or devices) attached to the one or more networks 3950. In various embodiments, the network interface 3940 may support communication via any suitable wired or wireless general-purpose data network (e.g., multiple types of ethernet networks). In addition, network interface 3940 may support communication via a telecommunications/telephony network (e.g., an analog voice network or a digital fiber communication network), via a storage area network (e.g., a fibre channel SAN), or via any other suitable type of network and/or protocol.
In some embodiments, system memory 3920 may represent one embodiment of a computer-accessible medium configured to store at least a subset of program instructions and data for implementing the methods and apparatus discussed in the context of fig. 1-38. However, in other embodiments, program instructions and/or data may be received, transmitted, or stored on different types of computer-accessible media. In general, computer-accessible media may include non-transitory storage media or memory media such as magnetic or optical media, e.g., magnetic disks or DVD/CDs coupled to computing device 3900 via I/O interface 3930. Non-transitory computer-accessible storage media may also include any volatile or non-volatile media such as RAM (e.g., SDRAM, DDR SDRAM, RDRAM, SRAM, etc.), ROM, etc., that may be included in some embodiments of computing device 3900 as system memory 3920 or another type of memory. In some embodiments, a plurality of non-transitory computer readable storage media may collectively store program instructions that, when executed on or across one or more processors, implement at least a subset of the methods and techniques described above. The computer-accessible media may also include transmission media or signals such as electrical, electromagnetic, or digital signals conveyed via a communication medium (e.g., a network and/or wireless link, such as may be implemented via network interface 3940). Some or all of the plurality of computing devices (e.g., shown in fig. 39) may be used to implement the functionality described in the various embodiments; for example, software components running on various different devices and servers can cooperate to provide the described functionality. In some embodiments, portions of the described functions may be implemented using a storage device, a network device, or a special purpose computer system in addition to or in lieu of a general purpose computer system. As used herein, the term "computing device" refers to at least all of these types of devices, and is not limited to these types of devices.
Conclusion(s)
Various embodiments may also include receiving, transmitting, or storing instructions and/or data embodied in accordance with the foregoing description on a computer-accessible medium. In general, the computer-accessible medium may include: storage media or memory media such as magnetic media or optical media, for example, magnetic disks or DVD/CD-ROMs; volatile or nonvolatile media such as RAM (e.g., SDRAM, DDR, RDRAM, SRAM, etc.), ROM, etc.; and a transmission medium or signal (e.g., an electrical, electromagnetic, or digital signal) conveyed via a communication medium such as a network and/or wireless link.
The various methods as shown in the figures and described herein represent exemplary embodiments of the methods. The method may be implemented using software, hardware or a combination thereof. The order of the methods may be varied and various elements may be added, rearranged, combined, omitted, modified, etc.
Various modifications and alterations will become apparent to those skilled in the art having the benefit of this disclosure. It is intended that all such modifications and changes be covered and, therefore, the above description is to be regarded in an illustrative rather than a restrictive sense.
Claims (22)
1. A system, the system comprising:
a mechanical linear resonator; and
A control circuit coupled to the mechanical linear resonator,
wherein the control circuit is configured to stabilize an arbitrary coherent state superposition (cat state) of the mechanical linear resonator to store quantum information, wherein to stabilize the arbitrary cat state the control circuit is configured to:
exciting phonons in the mechanical linear resonator by driving a stored pattern of the mechanical linear resonator; and
phonons from the mechanical linear resonator are dissipated via an open-circuit transmission line coupled to the control circuit, the open-circuit transmission line configured to absorb photons from a dump mode of the control circuit.
2. The system of claim 1, wherein the control circuit comprises:
a superconducting quantum interference device (ATS) with asymmetric threads coupled to the mechanical linear resonator.
3. The system of claim 2, the system further comprising:
one or more additional mechanical linear resonators coupled to the control circuit, wherein the control circuit is configured to stabilize respective states of cats of the mechanical linear resonators and the one or more additional mechanical linear resonators via a single ATS and a single open transmission line.
4. A system as claimed in claim 3, wherein the storage mode of a respective mechanical linear resonator is detuned such that the phonons supplied to the respective mechanical linear resonator are supplied in an incoherent manner.
5. The system of claim 4, wherein the pumps of the respective mechanical linear resonators are separated by a frequency bandwidth that is greater than a binaural sub-dissipation ratio of the respective mechanical linear resonators.
6. The system of claim 5, wherein the control circuit further comprises:
one or more microwave filters configured to filter out a correlation decay term that, if not filtered out, results in simultaneous phase flipping of storage modes of two or more of the mechanical linear resonators.
7. The system of any of claims 2 to 6, wherein the control circuit further comprises:
a high impedance inductor is used as part of the ATS coupled to the mechanical linear resonator.
8. The system of claim 7, wherein the high impedance inductor comprises:
planar meander or double spiral inductors;
a spiral inductor having one or more air bridges;
A josephson junction array; or (b)
Thin film superconductors with high dynamic inductance.
9. A system as claimed in any one of claims 2 to 8, wherein at least some of the mechanical linear resonators include three or more terminals, the system further comprising:
two or more additional superconducting quantum interference devices (ATS) with asymmetric threads,
wherein a given one of the mechanical linear resonators comprising three or more terminals is coupled with three or more ATS via the respective three or more terminals.
10. A method of stabilizing a coherent state superposition (cat state) of mechanical resonators, the method comprising:
exciting phonons in the mechanical resonator by driving a stored pattern of the mechanical resonator; and
phonons from the mechanical resonator are dissipated via an open-circuit transmission line coupled to a control circuit, the open-circuit transmission line configured to absorb photons from a dump mode of the control circuit.
11. A method as claimed in claim 10, wherein the phonons are excited in the mechanical resonator and dissipated from the mechanical resonator in pairs comprising two phonons.
12. The method of claim 11, wherein the excitation and dissipation of the phonon pairs is induced via a nonlinear interaction between the storage mode of the mechanical resonator and the dump mode of the control circuit, wherein a square of the storage mode of the mechanical resonator is coupled to the dump mode of the control circuit via a binaural coupling rate (g 2), and wherein an attenuation rate of absorbed photons via the open-circuit transmission line is about ten times the coupling rate (g 2) or greater.
13. A method as claimed in claim 11 or claim 12, wherein the control circuit comprises an asymmetrically threaded superconducting quantum interference device (ATS) coupled with the mechanical resonator, wherein the ATS is configured such that a pair of bimorphs is excited in the mechanical resonator.
14. The method of claim 13, the method further comprising:
causing phonons to be excited in one or more additional mechanical resonators by driving respective stored modes of the one or more additional mechanical resonators; and
dissipating phonons from the one or more additional mechanical resonators via the open-circuit transmission line, the open-circuit transmission line configured to absorb the photons from the dump mode of the control circuit,
Wherein the use of a single ATS causes the phonon to be excited in the mechanical resonator and the one or more additional mechanical resonators.
15. A method as claimed in claim 14, wherein the storage modes of the respective mechanical resonators are detuned.
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US202063093524P | 2020-10-19 | 2020-10-19 | |
US63/093,524 | 2020-10-19 | ||
PCT/US2021/055578 WO2022086939A1 (en) | 2020-10-19 | 2021-10-19 | Dynamic language models for continuously evolving content |
Publications (1)
Publication Number | Publication Date |
---|---|
CN116547681A true CN116547681A (en) | 2023-08-04 |
Family
ID=78536678
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN202180075824.3A Pending CN116547681A (en) | 2020-10-19 | 2021-10-19 | Dynamic language model for continuously evolving content |
Country Status (4)
Country | Link |
---|---|
US (1) | US20230401382A1 (en) |
EP (1) | EP4214643A1 (en) |
CN (1) | CN116547681A (en) |
WO (1) | WO2022086939A1 (en) |
Families Citing this family (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US11475210B2 (en) | 2020-08-31 | 2022-10-18 | Twilio Inc. | Language model for abstractive summarization |
US11809804B2 (en) * | 2021-05-26 | 2023-11-07 | Twilio Inc. | Text formatter |
-
2021
- 2021-10-19 US US18/249,275 patent/US20230401382A1/en active Pending
- 2021-10-19 CN CN202180075824.3A patent/CN116547681A/en active Pending
- 2021-10-19 WO PCT/US2021/055578 patent/WO2022086939A1/en active Application Filing
- 2021-10-19 EP EP21805808.9A patent/EP4214643A1/en active Pending
Also Published As
Publication number | Publication date |
---|---|
WO2022086939A1 (en) | 2022-04-28 |
EP4214643A1 (en) | 2023-07-26 |
US20230401382A1 (en) | 2023-12-14 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US11321627B1 (en) | Fault-tolerant quantum hardware using hybrid acoustic-electrical qubits | |
Chamberland et al. | Building a fault-tolerant quantum computer using concatenated cat codes | |
JP7446622B2 (en) | Quantum information processing using asymmetric error channels | |
US11468219B2 (en) | Toffoli gate preparation for a quantum hardware system comprising hybrid acoustic-electrical qubits | |
Devitt et al. | Quantum error correction for beginners | |
KR102632759B1 (en) | Hardware-efficient fault-tolerant computation using superconducting circuits | |
US11436398B2 (en) | Simulating large cat qubits using a shifted fock basis | |
CN116547681A (en) | Dynamic language model for continuously evolving content | |
CN116547679A (en) | Fault tolerant quantum hardware using mixed acousto-electric qubits | |
WO2009117003A1 (en) | Efficient decoupling schemes for quantum systems using soft pulses | |
Shee et al. | Qubit-efficient encoding scheme for quantum simulations of electronic structure | |
US11580436B2 (en) | Stabilizer measurement decoding using additional edges to identify errors caused by cross-talk | |
WO2022103666A9 (en) | Fault-tolerant quantum hardware using hybrid acoustic-electrical qubits | |
Grimaldi et al. | Spintronics-compatible approach to solving maximum-satisfiability problems with probabilistic computing, invertible logic, and parallel tempering | |
Bohdanowicz et al. | Good approximate quantum LDPC codes from spacetime circuit Hamiltonians | |
US11741279B2 (en) | Toffoli gate distillation from Toffoli magic states | |
Nickerson | Practical fault-tolerant quantum computing | |
Novais et al. | Hamiltonian formulation of quantum error correction and correlated noise: effects of syndrome extraction in the long-time limit | |
Boykin et al. | Algorithms on ensemble quantum computers | |
Pérez | Quantum error mitigation and autonomous correction using dissipative engineering and coupling techniques | |
Prabhu et al. | New magic state distillation factories optimized by temporally encoded lattice surgery | |
Guillaud | Repetition Cat Qubits | |
US20230186132A1 (en) | CONTROL CIRCUIT COMPRISING SYMMETRIC ASYMMETRIC THREADED SUPERCONDUCTING QUANTUM INTERFERENCE DEVICES (SYMMETRIC ATSs) | |
Paetznick | Resource optimization for fault-tolerant quantum computing | |
US11983601B2 (en) | Hybrid bacon-shor surface codes in a concatenated cat-qubit architecture |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
SE01 | Entry into force of request for substantive examination |
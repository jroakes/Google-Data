US6973332B2 - Apparatus and method for forming compound words - Google Patents
Apparatus and method for forming compound words Download PDFInfo
- Publication number
- US6973332B2 US6973332B2 US10/692,621 US69262103A US6973332B2 US 6973332 B2 US6973332 B2 US 6973332B2 US 69262103 A US69262103 A US 69262103A US 6973332 B2 US6973332 B2 US 6973332B2
- Authority
- US
- United States
- Prior art keywords
- word
- combinations
- words
- compound
- score
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Lifetime, expires
Links
- 238000000034 method Methods 0.000 title claims abstract description 95
- 150000001875 compounds Chemical class 0.000 title claims abstract description 20
- 238000011156 evaluation Methods 0.000 claims description 6
- 238000004891 communication Methods 0.000 claims description 2
- 230000006870 function Effects 0.000 description 25
- 230000007704 transition Effects 0.000 description 19
- 238000010586 diagram Methods 0.000 description 14
- 238000013479 data entry Methods 0.000 description 4
- 230000033001 locomotion Effects 0.000 description 4
- 230000008569 process Effects 0.000 description 4
- 238000012545 processing Methods 0.000 description 4
- 239000000470 constituent Substances 0.000 description 3
- 230000000007 visual effect Effects 0.000 description 3
- 206010048669 Terminal state Diseases 0.000 description 2
- 238000007792 addition Methods 0.000 description 2
- 230000005540 biological transmission Effects 0.000 description 2
- 230000008859 change Effects 0.000 description 2
- 238000005094 computer simulation Methods 0.000 description 2
- 238000013507 mapping Methods 0.000 description 2
- 230000009471 action Effects 0.000 description 1
- 230000015572 biosynthetic process Effects 0.000 description 1
- 238000006243 chemical reaction Methods 0.000 description 1
- 238000013461 design Methods 0.000 description 1
- 238000004880 explosion Methods 0.000 description 1
- 239000004973 liquid crystal related substance Substances 0.000 description 1
- 239000011159 matrix material Substances 0.000 description 1
- 230000007246 mechanism Effects 0.000 description 1
- 238000012986 modification Methods 0.000 description 1
- 230000004048 modification Effects 0.000 description 1
- 238000002360 preparation method Methods 0.000 description 1
- 238000012913 prioritisation Methods 0.000 description 1
- 230000011218 segmentation Effects 0.000 description 1
- 230000003068 static effect Effects 0.000 description 1
- 238000006467 substitution reaction Methods 0.000 description 1
- 238000012360 testing method Methods 0.000 description 1
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04B—TRANSMISSION
- H04B1/00—Details of transmission systems, not covered by a single one of groups H04B3/00 - H04B13/00; Details of transmission systems not characterised by the medium used for transmission
- H04B1/38—Transceivers, i.e. devices in which transmitter and receiver form a structural unit and in which at least one part is used for functions of transmitting and receiving
- H04B1/40—Circuits
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/01—Input arrangements or combined input and output arrangements for interaction between user and computer
- G06F3/02—Input arrangements using manually operated switches, e.g. using keyboards or dials
- G06F3/023—Arrangements for converting discrete items of information into a coded form, e.g. arrangements for interpreting keyboard generated codes as alphanumeric codes, operand codes or instruction codes
- G06F3/0233—Character input methods
- G06F3/0237—Character input methods using prediction or retrieval techniques
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/20—Natural language analysis
- G06F40/274—Converting codes to words; Guess-ahead of partial word inputs
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04M—TELEPHONIC COMMUNICATION
- H04M1/00—Substation equipment, e.g. for use by subscribers
- H04M1/02—Constructional features of telephone sets
- H04M1/23—Construction or mounting of dials or of equivalent devices; Means for facilitating the use thereof
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04M—TELEPHONIC COMMUNICATION
- H04M1/00—Substation equipment, e.g. for use by subscribers
- H04M1/72—Mobile telephones; Cordless telephones, i.e. devices for establishing wireless links to base stations without route selection
- H04M1/724—User interfaces specially adapted for cordless or mobile telephones
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04M—TELEPHONIC COMMUNICATION
- H04M2250/00—Details of telephonic subscriber devices
- H04M2250/70—Details of telephonic subscriber devices methods for entering alphabetical characters, e.g. multi-tap or dictionary disambiguation
Definitions
- the present invention relates to the field of text entry systems that provide convenient and accurate processes for character and word input. More particularly, the present invention relates to a text entry system having intelligent formation capabilities of compound words that maximize the accuracy of the predictive text entry.
- Portable electronic devices such as a radiotelephone, typically have only twelve or so keys for entering the numbers “0” through “9” and symbols “*” and “#”. It is quite challenging to design a portable electronic device that permits a user to input the numerous characters of a particular language using the limited number of keys in a standard keypad.
- FIG. 1 is a perspective view of an exemplary portable electronic device in accordance with the present invention.
- FIG. 2 is a block diagram of exemplary internal components of the portable electronic device of FIG. 1 .
- FIG. 3 is an exemplary diagram illustrating an operation of a predict combinations procedure that may be executed by the internal components of FIG. 2 .
- FIG. 4 is a pseudo code diagram of a predict combinations procedure that may be executed by the internal components of FIG. 2 .
- FIG. 5 is a pseudo code diagram of a move procedure that may be called by the predict combinations procedure of FIG. 4 .
- FIG. 6 is a pseudo code diagram of a compare combinations procedure that may be executed by the internal components of FIG. 2 .
- FIG. 7 is a word list representing a comparison of exemplary word combinations based on FIG. 4 .
- FIG. 8 is a word table representing another comparison of exemplary word combinations based on FIG. 4 .
- the present invention is a user interface of a portable electronic device that provides for data entry of phonetic and ideographic characters as well as strokes of ideographic characters and, thus, applies to any language having letters, characters and/or words.
- the preferred embodiments, as shown in the drawings and described herein, are directed to a radiotelephone for wireless communication of voice and/or data signals and provides for data entry of Roman, phonetic and ideographic characters.
- the present invention may be used for any type of electronic device such as, but not limited to, paging devices, computers, handheld devices, personal digital assistants, and the like.
- a foldable, portable electronic device 100 having a top section 110 and a bottom section 112 movably joined at a joint section 114 .
- the top section 110 includes an earpiece aperture 116 and a display 118
- the bottom section 112 includes a user interface 120 , a microphone aperture 122 , and a visual indicator 124 .
- the device 100 also includes other components of a radiotelephone (shown in FIG. 2 ) as described below, such as an antenna, power supply, external connectors, additional controls, and the like.
- the user interface 120 of the present invention includes function keys 126 and keypad 128 .
- the function keys 126 are located at an upper portion of the bottom section 112 and include menu selection keys 130 , 132 , 134 , directional keys 136 (i.e., up, down, left and right), a message retrieval key 138 , a memory key 140 , a call answer key 142 , a clear function key 144 , and a call termination key 146 .
- the function keys 126 of the present invention are not limited to those provided for the device 100 and may include other programmed or user-programmable control buttons such as volume control keys, voice recording keys, device setup controls, and the like.
- the keypad 128 of the device 100 are located at a lower portion of the bottom section and include ten numeric keys, namely keys “1” through “9” and “0”, as well as a “*” key and a “#” key for a total of 12 keys. As shown in FIG. 1 , the keypad comprises a matrix of four rows in which each row includes three keys, similar to a typical telephone keypad. Although not shown in FIG. 1 , the keypad 128 may also be used to input other types of symbols, such as Roman characters, phonetic characters, ideographic characters, and strokes of characters.
- a typical set of keys of the keypad may associate characters A, B, C and 2 with key 2; D, E, F and 3 with key 3; G, H, I and 4 with key 4; J, K, Land 5 with key 5; M, N, O and 6 with key 6; P, Q, R, S and 7 with key 7; T, U, V and 8 with key 8; and W, X, Y, Z and 9 with key 9.
- each key may be used to input a number or character, depending upon the input mode of the device.
- the input mode of the device may be determined by selection of one or more function keys, such as the menu selection keys 130 , 132 , 134 .
- the display 118 of the device provides various types of information to the user. Certain indicators are provided for general operation of the device, such as the signal strength indicator 156 and power indicator 160 of the device 100 . Other indicators are provided for operation of the menu selection keys 130 , 132 , 134 of the function keys. For example, as shown by the device 100 in FIG. 1 , there are three menu selection keys 130 , 132 , 134 provided at the top of the upper portion of the bottom section 112 . Also, a bottom area of the display 118 is reserved for one to three menu selection indicators 162 , 164 , 166 that correspond to one or more of the menu selection keys 130 , 132 , 134 .
- the preferred embodiment includes an antenna 202 ; a transceiver 204 ; a processor 206 ; output devices 208 , 210 ; and input devices 212 , 214 .
- the internal components 200 Upon reception of wireless signals, the internal components 200 detect the signals through the antenna 202 to producing detected voice and/or data signals.
- the transceiver 204 coupled to the antenna 202 , converts the detected signals into electrical baseband signals and demodulates the electrical baseband signals to recover incoming information, such as voice and/or data, transmitted by the wireless signals.
- the processor 206 formats the incoming information for output to the output devices 208 , 210 .
- the processor 206 formats outgoing information and conveys it to the transceiver 204 for modulation of a carrier and conversion into modulated signals.
- the transceiver 204 conveys the modulated signals to the antenna 202 for transmission to a remote transceiver (not shown).
- the input and output devices may include a variety of visual, audio and/or motion devices.
- the output devices may include, but are not limited to, visual outputs 208 (such as liquid crystal displays and light emitting diode indicators), audio outputs 210 (such as speakers, alarms and buzzers), and motion outputs (such as vibrating mechanisms).
- the input devices may include, but are not limited to, mechanical inputs 212 (such as keyboards, keypads, selection buttons, touch pads, capacitive sensors, motions sensors, and switches), and audio inputs 214 (such as microphones).
- the top and/or bottom sections 112 , 114 of the device 100 may includes a switch that is responsive to movement of the sections relative to each other and actuates one or more functions of the device as a result.
- the internal components 200 of the portable electronic device 100 further include a memory portion 216 for storing and retrieving data.
- the processor 206 may perform various operations to store, manipulate and retrieve information in the memory portion 216 .
- the processor 206 may search the memory 226 for previously stored data by entering search elements or symbols from the user devices 212 , 214 . During search, the processor 206 compares stored data with the input search elements or symbols. If one or more matches are found, the matched data are provided to the output devices 208 , 210 or further processed by the processor 206 .
- the memory portion 216 stores a database or dictionary 218 of words or symbols that are considered to be complete words or characters in-and-of themselves.
- a word or character may be formed by either finding it in the database 218 or combining two or more words or symbols, i.e., two or more shorter words form a longer word.
- the processor 206 may reference the database 218 when predicting the words or characters desired by a user based on input received at the user interface 120 .
- the internal components 200 of the portable electronic device 100 may further include a component interface 220 and a power supply 222 .
- Accessories and additional components may be coupled to the component interface 220 to provide additional functionality and capabilities to the device 100 .
- the power supply 222 provides power to the internal components 200 so that they may function correctly, such as a battery.
- the exemplary tree diagram illustrates how the predict combinations procedure 400 may produce a plurality of predicted combinations from a certain set of inputs at the user interface 120 .
- the predict combinations procedure 400 may generate the following predicted combinations from a single set of inputs: “ask” following nodes 302 , 304 , 306 and 308 ; “aside” following nodes 302 , 304 , 306 , 310 , 312 and 314 ; “park” following nodes 302 , 316 , 318 , 320 and 322 ; “parking” following nodes 302 , 316 , 318 , 320 , 322 , 324 , 326 and 328 ; “ball” following nodes 302 , 330 , 332 , 334 and 336 ; and “ballet” following nodes 302 , 330 , 332 , 334 , 336 , 338 and 340 .
- the prediction combinations procedure 400 may try to identify combinations beginning with the first key, e.g., key “7”, and also try to identify combinations beginning with a subsequent key, e.g., key “2”.
- the prediction combinations procedure 400 is capable of considering and identifying word combinations that make-up a portion of an input as well as the input in its entirety.
- the computational model is a function utilizing variables and functions including, but not limited to, a set of states, an alphabet of a database, a currentState variable, a set of terminal states, and a transition function.
- the set of states may include all potential predictions in the form of paths and their junctions, such as a starting point.
- the alphabet of the database includes all characters available for a particular language or language type.
- the currentState variable includes all new states and all restarted states of the set of states.
- the set of terminal states is a subset of the set of states and includes ending points of the paths.
- the transition function defines how the predict procedure 400 switches between two consecutive states and is preferably a function of the set of states and the alphabet of the database.
- the predict procedure 400 includes an unambiguous transition function that provides forward progress as well as conditional restarting at every point. In doing so, the predict procedure 400 allows for the creation of compound words, i.e., new words based on existing words in a database. Once new words are identified, they are considered along with the existing words for future analysis.
- the predict procedure 400 initiates its search for word combinations at line 402 , in which dictionary information and a given input are utilized by the procedure.
- the dictionary information may be stored at database 218 and the input may be received as a sequence of virtual keys from the user interface 120 .
- the predict procedure 400 may be executed by an electronic circuit that includes a processor, memory and user interface, such as the processor 206 , the input devices 212 and the memory portion 216 shown in FIG. 2 .
- the predict procedure 400 starts by initializing certain variables at lines 404 through 414 .
- the processor 206 sets the currentState variables to a dictionary root at line 404 , set TimesReset and Score to zero at lines 406 & 408 , set the Character String to an empty value at line 410 , indicate that the current node is the starting node at line 412 , and set variable i to its initial value (in preparation of a subsequent loop), which may be stored in the memory portion 216 .
- the predict procedure 400 then moves sequentially through input states, as represented by a first loop function based on length of input at line 416 and the steps encompassed by the first loop, i.e., lines 416 through 426 .
- the first loop is executed for each character or symbol of the received input.
- the Allowed Transitions is set to a resolved mapping of the current input at line 418 .
- key 2 may be mapped to letters A, B and C as well as the number 2.
- the mapping will vary from language to language and from device to device based on the number of characters or symbols to be mapped and the number of input possibilities available at the user interface.
- the hypotheses are set to zero to initialize the destination nodes at line 420 . All of the above variables may be stored in the memory portion 216 by the processor 206 .
- a state is basically a position inside a word.
- a dictionary root is a position in every word such that all characters of the word follow.
- the predict procedure 400 moves sequentially through all states stored in the startNodes variable based on the length of these states, as represented by line 422 and the steps encompassed by the second loop, i.e., lines 424 through 434 .
- the second loop is executed for each state stored in the startNodes variable. Thereafter, the predict procedure executes based on certain parameters.
- the transition function 500 requires two parameters, namely a currentState variable, i.e., startNode, which is available and a character on input mapped to a corresponding key, i.e., allowedTransitions, to set New States.
- a currentState variable i.e., startNode
- a character on input mapped to a corresponding key i.e., allowedTransitions
- the transition function 500 executes a loop to process new nodes.
- the transition function 500 executes the loop for each character of the allowedTransitions at line 508 . This is not just a temporary location but a temporary node (which is added to new nodes at step 516 ).
- the transition function 500 then identifies a new node based on the vertex reached from a startNode by following a directed edge of the current character or input at line 508 .
- the transition function 500 stores the timesReset value and the score value of the startNode at temporary locations at lines 510 and 512 in order to keep these old values.
- the transition function 500 then concatenates the old string with the edge at line 514 . Thereafter, the node is added to the results at line 516 . Finally, the newly processed nodes are returned to the predict procedure 400 at line 518 .
- the predict procedure 400 determines whether the currently considered substates include of a complete word at line 426 . This check is performed to determine whether it makes sense to reset the current start state. For example, the processor 206 may compare the substates of the startNodes variable to the database 218 of the memory portion 216 to determine whether any matches occur. If so, the predict procedure 400 also includes non-deterministic hypotheses. Accordingly, the predict procedure 400 prepares to restart the hypothesis by setting a current node to a dictionary root at line 428 , setting a temporary string variable at line 429 , and increments a TimesReset variable to track the number of times a complete word is identified for a particular path analyzed for the input at line 430 .
- the predict procedure 400 then grades the complete portion before restarting by adding a grade associated with the node to a score for the current combination at line 432 .
- Various methods of grading the substates may be applied, such as likelihood of occurrence based on frequency of usage.
- the predict procedure 300 would also calculate a combined score for this substate with any other previously identified substate, if any, for the currently considered input.
- the predict procedure 400 utilized the transition function to determine the restarted states in view of the newly discovered complete word in line 434 .
- the predict procedure 400 stores all generated hypotheses at line 436 so that they may be used for subsequent steps. Thereafter, the loop of line 422 continues until all possibilities have been considered. Otherwise, if a complete word is not identified at line 426 , then the predict procedure 400 moves on to the next size of substates by returning to line 422 and determining whether these substates of incrementally larger size include a complete word at line 426 once again.
- the new currentState variables are compiled in a list of currentState variables for processing at a later stage, as described below.
- the predict procedure 400 continues to identity and process complete words, via loop 426 , until all possible word combinations for every possible path, via loop 416 , of the input have been reviewed and a complete list of currentState variables is created.
- the predict procedure 400 then grades all results after processing all virtual keys at lines 438 and 440 .
- the predict procedure 400 returns all accumulated strings and terminates at line 442 .
- the predict procedure 400 may limit or otherwise adjust the number of hypotheses made available for subsequent stages to prevent an exponential explosion of the amount of hypotheses. Such limitation or adjustment may be based on the processing capabilities of the device utilizing this predict procedure 400 .
- the general operation of the predict procedure 400 may be explained as follows.
- a particular match or known combination is found by traversing a dictionary path throughout an entire character sequence. The match fails for a particular match if a transition is not available for the match.
- Other matches may be successful, because each key may be mapped to several characters, e.g., key 2 is mapped to characters A, B, C, & 2.
- key 2 is mapped to characters A, B, C, & 2.
- “ca” is one of the matched combinations after processing the first two key entries.
- the machine explores the third key entry, i.e. 7, by analyzing all transitions mapped to this character, such as “p”, “q”,“r”,“s” and “7”.
- the machine may identify one or more words. For the above example, the machine may identify the words “car”, “cap” and “car”.
- the machine is capable of eliminating certain combinations based on the likelihood of forming a known combination. For example, the likelihood of finding a match for any word starting with “caq” is low, so the machine may dismiss this possibility.
- this compare procedure 600 analyzes two or more currentState variables of the currentState variables list, created by the predict procedure 400 shown in FIG. 4 , and prioritizes the currentState variables based on one or more criteria.
- the compare procedure 600 represented by FIG. 6 prioritizes two or more currentState variables based on the number of words combined to form each word combination, whether each word combination is complete, and scores associated with each word combination.
- the compare procedure 600 includes, but is not limited to, the criteria represented by FIG. 6 . Also, if multiple criteria are utilized, the criteria themselves may be prioritized so that some criteria weigh more heavily on the final decision than other criteria.
- the compare procedure 600 starts by identifying two currentState variables, i.e., state “a” and state “b”, from the currentState variables list.
- the compare procedure 600 determines whether the two states have the same number of TimesReset at line 602 . In other words, the word combination of state “a” is compared to the word combination of state “b” to determine whether they include the same number of smaller words.
- the compare procedure 600 determines which state has the lesser number of TimesReset at line 604 , thus the lesser number of smaller words and is more likely to be the word combination desired by the user. For example, if the number of smaller words of state “a” is less than the number of smaller words of state “b”, then the compare procedure 600 determines that state “a” should have a higher priority than state “b” at line 604 . Thus, the hypothesis “state ‘a’ is better than state ‘b’” returns a TRUE result, and the compare procedure 600 terminates.
- the compare procedure 600 determines that state “b” should have a higher priority than state “a”. In other words, the hypothesis “state ‘a’ is better than state ‘b’” returns a FALSE result, and the compare procedure 600 terminates.
- the compare procedure 600 moves on to line 606 to determine whether the end of the input has been reached, because complete words are preferred. If so, the compare procedure 600 determines whether the two states produce similar results when analyzed for completeness at lines 608 through 612 . In particular, the compare procedure 600 determines whether state “a” is complete at line 608 ; the result is TRUE if state “a” is complete, FALSE if state “a” is not complete.
- the compare procedure 600 determines whether state “b” is complete at line 610 ; the result is TRUE if state “b” is complete, FALSE if state “b” is not complete. Also, at line 610 , the compare procedure determines whether states “a” and “b” generated the same result for completeness. If state “a” is a word combination in its entirety and state “b” is not a word combination in its entirety, or vice versa, then the result in determining the completeness of state “a” is the final result at line 612 ; TRUE if state “a” is complete but state “b” is not complete, FALSE if state “a” is not complete but state “a” is complete. The compare procedure 600 determines which state is a word combination in its entirety and, thus, is more likely to be the word combination desired by the user. Thereafter, the compare procedure 600 terminates.
- both state “a” and state “b” are word combinations in their entirety or neither state “a” nor state “b” is word combinations in its entirety, then another criteria must be used to determine which state should have higher priority.
- the compare procedure 600 moves on to line 614 to determine which state is associated with a higher score.
- any type of method for scoring or grading substates may be applied, such as likelihood of occurrence based on historical frequency. If state “a” has a higher score than state “b”, then the compare procedure 600 determines that state “a” should have a higher priority than state “b”.
- the compare procedure 600 determines whether the score for “a” is higher than the score for “b”. If the hypothesis “state ‘a’ is better than state ‘b’” is true, then the compare procedure 600 returns a TRUE result. On the other hand, for this example, if state “a” does not have a higher score than state “b”, then the hypothesis “state ‘a’ is better than state ‘b’” returns a FALSE result. Thereafter, the compare procedure 400 terminates.
- the compare procedure 400 is executed by the processor 206 and utilizes the memory portion 216 .
- the last criteria to be considered by the compare procedure 600 may not clearly determine the better state, i.e., the state with higher priority.
- the score of state “a” may be equal to the score of state “b” and, thus, state “a” and state “a” are equal based on all criteria considered by the compare procedure 400 .
- a default decision may be predetermined in order to accomplish the prioritization. For example, as shown in FIG.
- FIGS. 7 and 8 there are provided a word list and word table representing a comparison of exemplary word combinations.
- the word list of FIG. 7 and the word table of FIG. 8 are presented herein as examples to further describe the capabilities of the components and procedures shown in FIGS. 1 through 6 and described above. Accordingly, the specific elements shown in FIGS. 7 and 8 and described hereafter should not be used to limit the scope of the present invention.
- FIG. 7 exemplifies a full string evaluation that may be accomplished by utilizing the present invention.
- the full string evaluation analyzes an entire virtual key sequence or string after each key selection of the user interface 120 .
- the full string evaluation segments the string into possible substrings that match entries in the database 218 and weighs them according to their likelihood. Based on one or more criteria, the string combinations are prioritized. For example, the string combination having the fewest complete segments and/or the highest combined likelihood may be selected as the best choice or selection.
- each of a first key 702 , a second key 704 and a sixth key 712 represents characters A, B, C and 2; each of a third key, a fourth key and an eighth key represents characters J, K, L and 5; and each of a fifth key and a seventh key represents characters P, Q, R, S and 7.
- a first key 702 , a second key 704 and a sixth key 712 represents characters A, B, C and 2;
- each of a third key, a fourth key and an eighth key represents characters J, K, L and 5;
- each of a fifth key and a seventh key represents characters P, Q, R, S and 7.
- the first possible word combination includes the smaller words “calls” 718 and “ask” 720
- the second possible word combination includes the smaller words “ball” and “park” 724
- the third possible word combination includes the smaller words “all” 728 and “par” 730
- the fourth possible word combination includes the smaller words “balls” 734 and “ark” 736 .
- the present invention may prioritize these possible word combinations by selecting the most probable segmentation as indicated by resulting area 738 .
- the currentState variables that include word combinations would be compared two-at-a-time, starting at the top of the list. So long as the earlier currentState variable has a higher priority that a later currentState variable, the order of the list does not change and the compare procedure 600 continues to move down the list. If a later currentState variable has a higher priority that an earlier currentState variable, then the order of the two states is reversed and the currentState variable with the higher priority continues to move up the list until it is compared to another currentState variable having an even higher priority. Then, the operation returns to the point where analyzed currentState variables meet non-analyzed currentState variables and continues to compare states two-at-a-time. This operation continues until the entire list has been analyzed and sorted.
- the compare procedure 600 may compare the first possible word combination 718 , 720 to the second possible word combination 722 , 724 and determine that the TimesReset are equal and the completeness of each currentState variable is equal.
- the second possible word combination 722 , 724 may receive a higher priority than the first possible word combination 718 , 720 based on likelihood of occurrence and, thus, the order of these combinations may be reversed.
- the compare procedure 600 may compare the first possible word combination 718 , 720 to the third possible word combination 728 , 730 and determine that the TimesReset are equal.
- the compare procedure 600 may consider the currentState variable of the first possible word combination 718 , 720 to be a word combination in its entirety but it may consider the currentState variable of the third possible word combination 728 , 730 to be otherwise because the currentState variable includes at least one addition character, i.e., character “a” 726 and character “o” 732 .
- the order of the first possible word combination 718 , 720 and the third possible word combination 728 , 730 would not change. Thereafter, the third possible word combination 728 , 730 would be compared to the possible word combination.
- FIG. 8 exemplifies the determination of sort order based on the orthographical structure of results.
- the word table of FIG. 8 includes columns for possible word combinations 802 , constituents or segmented smaller words 804 , score 806 for the corresponding word combination, rank 808 of the corresponding word combination, reason 810 for priority placement for the corresponding word combination, and a sample dictionary 812 for storing smaller words.
- the possible word combinations 802 may be input received at the user input 120 .
- the constituents and score may be determined by a predict procedure, such as the predict procedure 400 shown in FIG. 4 .
- the score for each word combination is determined by determining a score for each shorter word of the word combination and combining the scores of all shorter words of the word combination.
- the score for each shorter word may be determined by probability or some other method of evaluation.
- the rank or priority may be determined by a compare procedure, such as the compare procedure shown in FIG. 6 .
- the sample dictionary may be a possible equivalent of the database 218 stored in the memory portion 216 .
- the procedures described herein are preferably designed for static dictionaries, i.e., databases where information and its properties such as frequency stay unchanged and preference adjustments for dynamic learning can be also considered. At any time, a selection may be made between two or more results and the procedures may split decisions in several stages. First, the procedures consider how well the generated word or sequence of words may fit a particular language. If one of the compared results is better than another, then the better result is considered to be more preferable. Second, if all compared entries prove to be equal in the context of the fitting test, they are sorted according to the calculated frequency.
- Results are broken into constituents and their completeness. For example, in referenced to FIG. 8 , suppose a user desires to type the compound word “ballgame” at the user interface 120 . After selecting all eight buttons (2-2-5-5-4-2-6-3), there are 3 8 , i.e., 6561 , possible combinations. Typical examples include, but are not limited to, “ballgame” 814 , “aallgame” 816 , “ballhcof” 818 , and “callhand” 820 . The first word, “ballgame” 814 , is given a high priority or rank 808 since it consists of two consecutive complete, and widely used, words.
- the second and third words, “aallgame” 816 and “ballhcof” 818 are less likely to be preferred by a user because they have greater TimesReset than the first word “ballgame” 814 , i.e., the second word includes three segments and the third word includes four segments. Also, neither the second or third word is complete, i.e., a combinations of valid words. Similar to the first word “ballgame “ 814 ”, the fourth word “callhand” 820 is also given a higher priority or rank 808 than the second and third words 816 , 818 . However, the fourth word “call hand” 820 has a lower priority or rank 808 than the first word “ballgame” because it received a lower score than the first word based on probability of occurrence.
Abstract
Description
Claims (15)
Priority Applications (8)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US10/692,621 US6973332B2 (en) | 2003-10-24 | 2003-10-24 | Apparatus and method for forming compound words |
EP04788872A EP1676375B1 (en) | 2003-10-24 | 2004-09-22 | Apparatus and method for forming compound words |
PCT/US2004/030892 WO2005043770A1 (en) | 2003-10-24 | 2004-09-22 | Apparatus and method for forming compound words |
RU2006117766/09A RU2334269C2 (en) | 2003-10-24 | 2004-09-22 | Device and method of complex words creation |
AT04788872T ATE513260T1 (en) | 2003-10-24 | 2004-09-22 | APPARATUS AND METHOD FOR FORMING COMPOUND WORDS |
CNB2004800312629A CN100499383C (en) | 2003-10-24 | 2004-09-22 | Apparatus and method for forming compound words |
BRPI0415606A BRPI0415606B1 (en) | 2003-10-24 | 2004-09-22 | wireless communication device and method for performing a full-string evaluation of compound words |
KR1020067007704A KR101073752B1 (en) | 2003-10-24 | 2006-04-21 | Apparatus and method for forming compound words |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US10/692,621 US6973332B2 (en) | 2003-10-24 | 2003-10-24 | Apparatus and method for forming compound words |
Publications (2)
Publication Number | Publication Date |
---|---|
US20050096085A1 US20050096085A1 (en) | 2005-05-05 |
US6973332B2 true US6973332B2 (en) | 2005-12-06 |
Family
ID=34549905
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US10/692,621 Expired - Lifetime US6973332B2 (en) | 2003-10-24 | 2003-10-24 | Apparatus and method for forming compound words |
Country Status (8)
Country | Link |
---|---|
US (1) | US6973332B2 (en) |
EP (1) | EP1676375B1 (en) |
KR (1) | KR101073752B1 (en) |
CN (1) | CN100499383C (en) |
AT (1) | ATE513260T1 (en) |
BR (1) | BRPI0415606B1 (en) |
RU (1) | RU2334269C2 (en) |
WO (1) | WO2005043770A1 (en) |
Cited By (31)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20050017954A1 (en) * | 1998-12-04 | 2005-01-27 | Kay David Jon | Contextual prediction of user words and user actions |
US20050107099A1 (en) * | 2001-06-21 | 2005-05-19 | Petra Schutze | Method and device for transmitting information |
US20050195171A1 (en) * | 2004-02-20 | 2005-09-08 | Aoki Ann N. | Method and apparatus for text input in various languages |
US20060009964A1 (en) * | 2004-06-25 | 2006-01-12 | Gabriele Ciminelli | Text messaging device |
US20060274051A1 (en) * | 2003-12-22 | 2006-12-07 | Tegic Communications, Inc. | Virtual Keyboard Systems with Automatic Correction |
US20070016614A1 (en) * | 2005-07-15 | 2007-01-18 | Novy Alon R J | Method and apparatus for providing structured data for free text messages |
US20070100861A1 (en) * | 2005-10-31 | 2007-05-03 | Novy Alon R J | Interacting with a computer-based management system |
US20070156618A1 (en) * | 2005-12-09 | 2007-07-05 | Tegic Communications, Inc. | Embedded rule engine for rendering text and other applications |
US20070168176A1 (en) * | 2006-01-13 | 2007-07-19 | Vadim Fux | Handheld electronic device and method for disambiguation of compound text input and that employs N-gram data to limit generation of low-probability compound language solutions |
US20070250469A1 (en) * | 2006-04-19 | 2007-10-25 | Tegic Communications, Inc. | Efficient storage and search of word lists and other text |
US20080235003A1 (en) * | 2007-03-22 | 2008-09-25 | Jenny Huang-Yu Lai | Disambiguation of telephone style key presses to yield chinese text using segmentation and selective shifting |
US20080291059A1 (en) * | 2007-05-22 | 2008-11-27 | Longe Michael R | Multiple predictions in a reduced keyboard disambiguating system |
WO2009023439A2 (en) | 2007-08-10 | 2009-02-19 | Motorola, Inc. | Electronic device with morphing user interface |
US20090150322A1 (en) * | 2007-12-07 | 2009-06-11 | Microsoft Corporation | Predicting Candidates Using Information Sources |
US7712053B2 (en) | 1998-12-04 | 2010-05-04 | Tegic Communications, Inc. | Explicit character filtering of ambiguous text entry |
US7720682B2 (en) | 1998-12-04 | 2010-05-18 | Tegic Communications, Inc. | Method and apparatus utilizing voice input to resolve ambiguous manually entered text input |
US7750891B2 (en) | 2003-04-09 | 2010-07-06 | Tegic Communications, Inc. | Selective input system based on tracking of motion parameters of an input device |
US7778818B2 (en) | 2000-05-26 | 2010-08-17 | Tegic Communications, Inc. | Directional input system with automatic correction |
US7821503B2 (en) | 2003-04-09 | 2010-10-26 | Tegic Communications, Inc. | Touch screen and graphical user interface |
US7881936B2 (en) | 1998-12-04 | 2011-02-01 | Tegic Communications, Inc. | Multimodal disambiguation of speech recognition |
US7880730B2 (en) | 1999-05-27 | 2011-02-01 | Tegic Communications, Inc. | Keyboard system with automatic correction |
US20110196671A1 (en) * | 2006-01-13 | 2011-08-11 | Research In Motion Limited | Handheld electronic device and method for disambiguation of compound text input and for prioritizing compound language solutions according to quantity of text components |
US20110193735A1 (en) * | 2004-08-31 | 2011-08-11 | Research In Motion Limited | Handheld electronic device and associated method employing a multiple-axis input device and reinitiating a text disambiguation session upon returning to a delimited word |
US8095364B2 (en) | 2004-06-02 | 2012-01-10 | Tegic Communications, Inc. | Multimodal disambiguation of speech recognition |
US20120081296A1 (en) * | 2005-07-28 | 2012-04-05 | Research In Motion Limited | Handheld electronic device with disambiguation of compound word text input |
US8201087B2 (en) | 2007-02-01 | 2012-06-12 | Tegic Communications, Inc. | Spell-check for a keyboard system with automatic correction |
US8225203B2 (en) | 2007-02-01 | 2012-07-17 | Nuance Communications, Inc. | Spell-check for a keyboard system with automatic correction |
US8504606B2 (en) | 2005-11-09 | 2013-08-06 | Tegic Communications | Learner for resource constrained devices |
US8583440B2 (en) | 2002-06-20 | 2013-11-12 | Tegic Communications, Inc. | Apparatus and method for providing visual indication of character ambiguity during text entry |
US20140249813A1 (en) * | 2008-12-01 | 2014-09-04 | Adobe Systems Incorporated | Methods and Systems for Interfaces Allowing Limited Edits to Transcripts |
US8938688B2 (en) | 1998-12-04 | 2015-01-20 | Nuance Communications, Inc. | Contextual prediction of user words and user actions |
Families Citing this family (10)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20050275619A1 (en) * | 2004-06-09 | 2005-12-15 | Chwan-Jaw Kao | Apparatus for cursor control and method thereof |
EP1755020A1 (en) | 2005-07-28 | 2007-02-21 | 2012244 Ontario Inc. | Handheld electronic device with disambiguation of compound word text input |
EP1808747A1 (en) | 2006-01-13 | 2007-07-18 | 2012244 Ontario Inc. | Handheld electronic device and method for disambiguation of compound text input |
EP1808746B1 (en) * | 2006-01-13 | 2012-08-01 | Research In Motion Limited | Handheld electronics device and method for disambiguation of compound text input and that employs n-gram data to limit generation of low-probability compound language solutions |
EP1808750A1 (en) * | 2006-01-13 | 2007-07-18 | 2012244 Ontario Inc. | Handheld electronic device and method for disambiguation of compound text input and for prioritizing compound language solutions according to completeness of text components |
US7880646B2 (en) * | 2006-01-13 | 2011-02-01 | Research In Motion Limited | Handheld electronic device and method for disambiguation of compound text input and employing different groupings of data sources to disambiguate different parts of input |
US7545290B2 (en) | 2006-01-13 | 2009-06-09 | Research In Motion Limited | Handheld electronic device and method for disambiguation of compound text input and for prioritizing compound language solutions according to completeness of text components |
ATE452361T1 (en) * | 2006-01-13 | 2010-01-15 | Research In Motion Ltd | PORTABLE ELECTRONIC DEVICE HAVING METHOD FOR TEXT DISAMBIGUATION OF COMPOUND WORDS |
KR100724141B1 (en) * | 2006-12-29 | 2007-05-31 | 주식회사 네오패드 | Apparatus for Hangul output and method thereof |
CN102375817A (en) * | 2010-08-06 | 2012-03-14 | 腾讯科技（深圳）有限公司 | Method and device for acquiring self-created words |
Citations (10)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4701851A (en) * | 1984-10-24 | 1987-10-20 | International Business Machines Corporation | Compound word spelling verification |
US5815093A (en) | 1996-07-26 | 1998-09-29 | Lextron Systems, Inc. | Computerized vehicle log |
US6223059B1 (en) * | 1999-02-22 | 2001-04-24 | Nokia Mobile Phones Limited | Communication terminal having a predictive editor application |
US20020039899A1 (en) * | 1995-12-11 | 2002-04-04 | Openwave Systems Inc. | Method and architecture for an interactive two-way data communication network |
US20030036411A1 (en) * | 2001-08-03 | 2003-02-20 | Christian Kraft | Method of entering characters into a text string and a text-editing terminal using the method |
US6542170B1 (en) | 1999-02-22 | 2003-04-01 | Nokia Mobile Phones Limited | Communication terminal having a predictive editor application |
US20030104839A1 (en) * | 2001-11-27 | 2003-06-05 | Christian Kraft | Communication terminal having a text editor application with a word completion feature |
US20030234821A1 (en) * | 2002-03-25 | 2003-12-25 | Agere Systems Inc. | Method and apparatus for the prediction of a text message input |
US20040093567A1 (en) * | 1998-05-26 | 2004-05-13 | Yves Schabes | Spelling and grammar checking system |
US20040177179A1 (en) * | 2003-03-03 | 2004-09-09 | Tapio Koivuniemi | Input of data |
Family Cites Families (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
EP1213643A1 (en) * | 2000-12-05 | 2002-06-12 | Inventec Appliances Corp. | Intelligent dictionary input method |
-
2003
- 2003-10-24 US US10/692,621 patent/US6973332B2/en not_active Expired - Lifetime
-
2004
- 2004-09-22 AT AT04788872T patent/ATE513260T1/en not_active IP Right Cessation
- 2004-09-22 RU RU2006117766/09A patent/RU2334269C2/en active
- 2004-09-22 BR BRPI0415606A patent/BRPI0415606B1/en active IP Right Grant
- 2004-09-22 CN CNB2004800312629A patent/CN100499383C/en active Active
- 2004-09-22 EP EP04788872A patent/EP1676375B1/en active Active
- 2004-09-22 WO PCT/US2004/030892 patent/WO2005043770A1/en active Application Filing
-
2006
- 2006-04-21 KR KR1020067007704A patent/KR101073752B1/en active IP Right Grant
Patent Citations (10)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4701851A (en) * | 1984-10-24 | 1987-10-20 | International Business Machines Corporation | Compound word spelling verification |
US20020039899A1 (en) * | 1995-12-11 | 2002-04-04 | Openwave Systems Inc. | Method and architecture for an interactive two-way data communication network |
US5815093A (en) | 1996-07-26 | 1998-09-29 | Lextron Systems, Inc. | Computerized vehicle log |
US20040093567A1 (en) * | 1998-05-26 | 2004-05-13 | Yves Schabes | Spelling and grammar checking system |
US6223059B1 (en) * | 1999-02-22 | 2001-04-24 | Nokia Mobile Phones Limited | Communication terminal having a predictive editor application |
US6542170B1 (en) | 1999-02-22 | 2003-04-01 | Nokia Mobile Phones Limited | Communication terminal having a predictive editor application |
US20030036411A1 (en) * | 2001-08-03 | 2003-02-20 | Christian Kraft | Method of entering characters into a text string and a text-editing terminal using the method |
US20030104839A1 (en) * | 2001-11-27 | 2003-06-05 | Christian Kraft | Communication terminal having a text editor application with a word completion feature |
US20030234821A1 (en) * | 2002-03-25 | 2003-12-25 | Agere Systems Inc. | Method and apparatus for the prediction of a text message input |
US20040177179A1 (en) * | 2003-03-03 | 2004-09-09 | Tapio Koivuniemi | Input of data |
Cited By (77)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9626355B2 (en) | 1998-12-04 | 2017-04-18 | Nuance Communications, Inc. | Contextual prediction of user words and user actions |
US7712053B2 (en) | 1998-12-04 | 2010-05-04 | Tegic Communications, Inc. | Explicit character filtering of ambiguous text entry |
US8938688B2 (en) | 1998-12-04 | 2015-01-20 | Nuance Communications, Inc. | Contextual prediction of user words and user actions |
US20050017954A1 (en) * | 1998-12-04 | 2005-01-27 | Kay David Jon | Contextual prediction of user words and user actions |
US7720682B2 (en) | 1998-12-04 | 2010-05-18 | Tegic Communications, Inc. | Method and apparatus utilizing voice input to resolve ambiguous manually entered text input |
US7881936B2 (en) | 1998-12-04 | 2011-02-01 | Tegic Communications, Inc. | Multimodal disambiguation of speech recognition |
US7679534B2 (en) | 1998-12-04 | 2010-03-16 | Tegic Communications, Inc. | Contextual prediction of user words and user actions |
US9400782B2 (en) | 1999-05-27 | 2016-07-26 | Nuance Communications, Inc. | Virtual keyboard system with automatic correction |
US8294667B2 (en) | 1999-05-27 | 2012-10-23 | Tegic Communications, Inc. | Directional input system with automatic correction |
US9557916B2 (en) | 1999-05-27 | 2017-01-31 | Nuance Communications, Inc. | Keyboard system with automatic correction |
US8466896B2 (en) | 1999-05-27 | 2013-06-18 | Tegic Communications, Inc. | System and apparatus for selectable input with a touch screen |
US8441454B2 (en) | 1999-05-27 | 2013-05-14 | Tegic Communications, Inc. | Virtual keyboard system with automatic correction |
US8576167B2 (en) | 1999-05-27 | 2013-11-05 | Tegic Communications, Inc. | Directional input system with automatic correction |
US7880730B2 (en) | 1999-05-27 | 2011-02-01 | Tegic Communications, Inc. | Keyboard system with automatic correction |
US8972905B2 (en) | 1999-12-03 | 2015-03-03 | Nuance Communications, Inc. | Explicit character filtering of ambiguous text entry |
US8381137B2 (en) | 1999-12-03 | 2013-02-19 | Tegic Communications, Inc. | Explicit character filtering of ambiguous text entry |
US8782568B2 (en) | 1999-12-03 | 2014-07-15 | Nuance Communications, Inc. | Explicit character filtering of ambiguous text entry |
US8990738B2 (en) | 1999-12-03 | 2015-03-24 | Nuance Communications, Inc. | Explicit character filtering of ambiguous text entry |
US7778818B2 (en) | 2000-05-26 | 2010-08-17 | Tegic Communications, Inc. | Directional input system with automatic correction |
US8976115B2 (en) | 2000-05-26 | 2015-03-10 | Nuance Communications, Inc. | Directional input system with automatic correction |
US20050107099A1 (en) * | 2001-06-21 | 2005-05-19 | Petra Schutze | Method and device for transmitting information |
US8583440B2 (en) | 2002-06-20 | 2013-11-12 | Tegic Communications, Inc. | Apparatus and method for providing visual indication of character ambiguity during text entry |
US7821503B2 (en) | 2003-04-09 | 2010-10-26 | Tegic Communications, Inc. | Touch screen and graphical user interface |
US7750891B2 (en) | 2003-04-09 | 2010-07-06 | Tegic Communications, Inc. | Selective input system based on tracking of motion parameters of an input device |
US8237681B2 (en) | 2003-04-09 | 2012-08-07 | Tegic Communications, Inc. | Selective input system and process based on tracking of motion parameters of an input object |
US8456441B2 (en) | 2003-04-09 | 2013-06-04 | Tegic Communications, Inc. | Selective input system and process based on tracking of motion parameters of an input object |
US8237682B2 (en) | 2003-04-09 | 2012-08-07 | Tegic Communications, Inc. | System and process for selectable input with a touch screen |
US20060274051A1 (en) * | 2003-12-22 | 2006-12-07 | Tegic Communications, Inc. | Virtual Keyboard Systems with Automatic Correction |
US8570292B2 (en) | 2003-12-22 | 2013-10-29 | Tegic Communications, Inc. | Virtual keyboard system with automatic correction |
US7636083B2 (en) | 2004-02-20 | 2009-12-22 | Tegic Communications, Inc. | Method and apparatus for text input in various languages |
US20050195171A1 (en) * | 2004-02-20 | 2005-09-08 | Aoki Ann N. | Method and apparatus for text input in various languages |
US8095364B2 (en) | 2004-06-02 | 2012-01-10 | Tegic Communications, Inc. | Multimodal disambiguation of speech recognition |
US9786273B2 (en) | 2004-06-02 | 2017-10-10 | Nuance Communications, Inc. | Multimodal disambiguation of speech recognition |
US8606582B2 (en) | 2004-06-02 | 2013-12-10 | Tegic Communications, Inc. | Multimodal disambiguation of speech recognition |
US8311829B2 (en) | 2004-06-02 | 2012-11-13 | Tegic Communications, Inc. | Multimodal disambiguation of speech recognition |
US7693552B2 (en) | 2004-06-25 | 2010-04-06 | Nokia Corporation | Text messaging device |
US20060009964A1 (en) * | 2004-06-25 | 2006-01-12 | Gabriele Ciminelli | Text messaging device |
US20090099838A1 (en) * | 2004-06-25 | 2009-04-16 | Nokia Corporation | Text messaging device |
US7502632B2 (en) * | 2004-06-25 | 2009-03-10 | Nokia Corporation | Text messaging device |
US20110193735A1 (en) * | 2004-08-31 | 2011-08-11 | Research In Motion Limited | Handheld electronic device and associated method employing a multiple-axis input device and reinitiating a text disambiguation session upon returning to a delimited word |
US9256297B2 (en) * | 2004-08-31 | 2016-02-09 | Blackberry Limited | Handheld electronic device and associated method employing a multiple-axis input device and reinitiating a text disambiguation session upon returning to a delimited word |
WO2007009168A1 (en) * | 2005-07-15 | 2007-01-25 | Think Software Pty Ltd | Method and apparatus for providing structured data for free text messages |
US20070016614A1 (en) * | 2005-07-15 | 2007-01-18 | Novy Alon R J | Method and apparatus for providing structured data for free text messages |
US20120081296A1 (en) * | 2005-07-28 | 2012-04-05 | Research In Motion Limited | Handheld electronic device with disambiguation of compound word text input |
US7669138B2 (en) | 2005-10-31 | 2010-02-23 | Liaise, Inc. | Interacting with a computer-based management system |
US20070100861A1 (en) * | 2005-10-31 | 2007-05-03 | Novy Alon R J | Interacting with a computer-based management system |
US8504606B2 (en) | 2005-11-09 | 2013-08-06 | Tegic Communications | Learner for resource constrained devices |
US20070156618A1 (en) * | 2005-12-09 | 2007-07-05 | Tegic Communications, Inc. | Embedded rule engine for rendering text and other applications |
US7587378B2 (en) | 2005-12-09 | 2009-09-08 | Tegic Communications, Inc. | Embedded rule engine for rendering text and other applications |
US20070168176A1 (en) * | 2006-01-13 | 2007-07-19 | Vadim Fux | Handheld electronic device and method for disambiguation of compound text input and that employs N-gram data to limit generation of low-probability compound language solutions |
US8090572B2 (en) | 2006-01-13 | 2012-01-03 | Research In Motion Limited | Handheld electronic device and method for disambiguation of compound text input and that employs N-gram data to limit generation of low-probability compound language solutions |
US20110196671A1 (en) * | 2006-01-13 | 2011-08-11 | Research In Motion Limited | Handheld electronic device and method for disambiguation of compound text input and for prioritizing compound language solutions according to quantity of text components |
US7698128B2 (en) * | 2006-01-13 | 2010-04-13 | Research In Motion Limited | Handheld electronic device and method for disambiguation of compound text input and that employs N-gram data to limit generation of low-probability compound language solutions |
US8265926B2 (en) | 2006-01-13 | 2012-09-11 | Research In Motion Limited | Handheld electronic device and method for disambiguation of compound text input and that employs N-gram data to limit generation of low-probability compound language solutions |
US8515740B2 (en) | 2006-01-13 | 2013-08-20 | Research In Motion Limited | Handheld electronic device and method for disambiguation of compound text input and that employs N-gram data to limit generation of low-probability compound language solutions |
US8515738B2 (en) * | 2006-01-13 | 2013-08-20 | Research In Motion Limited | Handheld electronic device and method for disambiguation of compound text input and for prioritizing compound language solutions according to quantity of text components |
US20100153096A1 (en) * | 2006-01-13 | 2010-06-17 | Vadim Fux | Handheld Electronic Device and Method for Disambiguation of Compound Text Input and That Employs N-Gram Data to Limit Generation of Low-Probability Compound Language Solutions |
US20090037371A1 (en) * | 2006-04-19 | 2009-02-05 | Tegic Communications, Inc. | Efficient storage and search of word lists and other text |
US8676779B2 (en) | 2006-04-19 | 2014-03-18 | Tegic Communications, Inc. | Efficient storage and search of word lists and other text |
US8204921B2 (en) | 2006-04-19 | 2012-06-19 | Tegic Communications, Inc. | Efficient storage and search of word lists and other text |
US7580925B2 (en) | 2006-04-19 | 2009-08-25 | Tegic Communications, Inc. | Efficient storage and search of word lists and other text |
US20070250469A1 (en) * | 2006-04-19 | 2007-10-25 | Tegic Communications, Inc. | Efficient storage and search of word lists and other text |
US8225203B2 (en) | 2007-02-01 | 2012-07-17 | Nuance Communications, Inc. | Spell-check for a keyboard system with automatic correction |
US8201087B2 (en) | 2007-02-01 | 2012-06-12 | Tegic Communications, Inc. | Spell-check for a keyboard system with automatic correction |
US8892996B2 (en) | 2007-02-01 | 2014-11-18 | Nuance Communications, Inc. | Spell-check for a keyboard system with automatic correction |
US9092419B2 (en) | 2007-02-01 | 2015-07-28 | Nuance Communications, Inc. | Spell-check for a keyboard system with automatic correction |
US8103499B2 (en) * | 2007-03-22 | 2012-01-24 | Tegic Communications, Inc. | Disambiguation of telephone style key presses to yield Chinese text using segmentation and selective shifting |
US20080235003A1 (en) * | 2007-03-22 | 2008-09-25 | Jenny Huang-Yu Lai | Disambiguation of telephone style key presses to yield chinese text using segmentation and selective shifting |
US9086736B2 (en) | 2007-05-22 | 2015-07-21 | Nuance Communications, Inc. | Multiple predictions in a reduced keyboard disambiguating system |
US20080291059A1 (en) * | 2007-05-22 | 2008-11-27 | Longe Michael R | Multiple predictions in a reduced keyboard disambiguating system |
US8299943B2 (en) | 2007-05-22 | 2012-10-30 | Tegic Communications, Inc. | Multiple predictions in a reduced keyboard disambiguating system |
US8692693B2 (en) | 2007-05-22 | 2014-04-08 | Nuance Communications, Inc. | Multiple predictions in a reduced keyboard disambiguating system |
WO2009023439A2 (en) | 2007-08-10 | 2009-02-19 | Motorola, Inc. | Electronic device with morphing user interface |
US7953692B2 (en) | 2007-12-07 | 2011-05-31 | Microsoft Corporation | Predicting candidates using information sources |
US20090150322A1 (en) * | 2007-12-07 | 2009-06-11 | Microsoft Corporation | Predicting Candidates Using Information Sources |
US8972269B2 (en) * | 2008-12-01 | 2015-03-03 | Adobe Systems Incorporated | Methods and systems for interfaces allowing limited edits to transcripts |
US20140249813A1 (en) * | 2008-12-01 | 2014-09-04 | Adobe Systems Incorporated | Methods and Systems for Interfaces Allowing Limited Edits to Transcripts |
Also Published As
Publication number | Publication date |
---|---|
BRPI0415606A (en) | 2006-12-05 |
EP1676375B1 (en) | 2011-06-15 |
RU2334269C2 (en) | 2008-09-20 |
CN100499383C (en) | 2009-06-10 |
US20050096085A1 (en) | 2005-05-05 |
BRPI0415606B1 (en) | 2018-05-08 |
WO2005043770A1 (en) | 2005-05-12 |
KR101073752B1 (en) | 2011-10-13 |
CN1871781A (en) | 2006-11-29 |
RU2006117766A (en) | 2007-11-27 |
KR20060090710A (en) | 2006-08-14 |
EP1676375A4 (en) | 2007-02-28 |
EP1676375A1 (en) | 2006-07-05 |
ATE513260T1 (en) | 2011-07-15 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US6973332B2 (en) | Apparatus and method for forming compound words | |
US20040163032A1 (en) | Ambiguity resolution for predictive text entry | |
US6864809B2 (en) | Korean language predictive mechanism for text entry by a user | |
RU2377664C2 (en) | Text input method | |
KR100552085B1 (en) | Reduced keyboard disambiguating system | |
US7885814B2 (en) | Text information display apparatus equipped with speech synthesis function, speech synthesis method of same | |
US20040153975A1 (en) | Text entry mechanism for small keypads | |
US7143043B1 (en) | Constrained keyboard disambiguation using voice recognition | |
CN107544684B (en) | Candidate word display method and device | |
US20030048894A1 (en) | Method and apparatus for alphanumeric data entry | |
CN107680585A (en) | A kind of Chinese word cutting method, Chinese word segmentation device and terminal | |
CN109710732A (en) | Information query method, device, storage medium and electronic equipment | |
GB2373907A (en) | predictive text algorithm | |
US7369843B2 (en) | Portable cellular phone having function of searching for operational function and method for searching for operational function in portable cellular phone | |
KR20090007343A (en) | Alphanumeric data entry apparatus and method using multicharacter kets of a keypad | |
CN114360510A (en) | Voice recognition method and related device | |
CN116010572A (en) | Processing method and device of man-machine conversation, storage medium and electronic equipment | |
CN111009247B (en) | Speech recognition correction method, device and storage medium | |
US20220075941A1 (en) | Artificial intelligence system and method for providing auto-complete suggestions | |
JP2004021321A (en) | Dictionary data retrieving method, dictionary data retrieving device and dictionary data retrieving program | |
JPH0991386A (en) | Document analyzing device and morpheme analyzing method | |
JP5261133B2 (en) | Character string converter with dictionary search function | |
CN117612556A (en) | Data processing method, device and equipment | |
KR20000000144A (en) | Method for selecting functions of electronic apparatus |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: MOTOROLA, INC., ILLINOISFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:MIRKIN, EUGENE A.;NAGEL, JENS;REEL/FRAME:014639/0390Effective date: 20031023 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
AS | Assignment |
Owner name: MOTOROLA MOBILITY, INC, ILLINOISFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MOTOROLA, INC;REEL/FRAME:025673/0558Effective date: 20100731 |
|
AS | Assignment |
Owner name: MOTOROLA MOBILITY LLC, ILLINOISFree format text: CHANGE OF NAME;ASSIGNOR:MOTOROLA MOBILITY, INC.;REEL/FRAME:029216/0282Effective date: 20120622 |
|
FPAY | Fee payment |
Year of fee payment: 8 |
|
AS | Assignment |
Owner name: GOOGLE TECHNOLOGY HOLDINGS LLC, CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MOTOROLA MOBILITY LLC;REEL/FRAME:034625/0001Effective date: 20141028 |
|
FPAY | Fee payment |
Year of fee payment: 12 |
EP2596441A2 - Predictive query suggestion caching - Google Patents
Predictive query suggestion cachingInfo
- Publication number
- EP2596441A2 EP2596441A2 EP11735962.0A EP11735962A EP2596441A2 EP 2596441 A2 EP2596441 A2 EP 2596441A2 EP 11735962 A EP11735962 A EP 11735962A EP 2596441 A2 EP2596441 A2 EP 2596441A2
- Authority
- EP
- European Patent Office
- Prior art keywords
- query
- suggestions
- client device
- characters
- input
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Ceased
Links
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/957—Browsing optimisation, e.g. caching or content distillation
- G06F16/9574—Browsing optimisation, e.g. caching or content distillation of access to content, e.g. by caching
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/10—File systems; File servers
- G06F16/14—Details of searching files based on file metadata
- G06F16/144—Query formulation
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/10—File systems; File servers
- G06F16/14—Details of searching files based on file metadata
- G06F16/148—File search processing
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/10—File systems; File servers
- G06F16/14—Details of searching files based on file metadata
- G06F16/156—Query results presentation
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/10—File systems; File servers
- G06F16/17—Details of further file system functions
- G06F16/173—Customisation support for file systems, e.g. localisation, multi-language support, personalisation
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/24—Querying
- G06F16/242—Query formulation
- G06F16/2425—Iterative querying; Query formulation based on the results of a preceding query
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/24—Querying
- G06F16/245—Query processing
- G06F16/2453—Query optimisation
- G06F16/24534—Query rewriting; Transformation
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/30—Information retrieval; Database structures therefor; File system structures therefor of unstructured textual data
- G06F16/33—Querying
- G06F16/332—Query formulation
- G06F16/3322—Query formulation using system suggestions
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/30—Information retrieval; Database structures therefor; File system structures therefor of unstructured textual data
- G06F16/33—Querying
- G06F16/3331—Query processing
- G06F16/3332—Query translation
- G06F16/3338—Query expansion
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/951—Indexing; Web crawling techniques
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/953—Querying, e.g. by the use of web search engines
- G06F16/9538—Presentation of query results
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/953—Querying, e.g. by the use of web search engines
- G06F16/9535—Search customisation based on user profiles and personalisation
Definitions
- This specification relates to query suggestions.
- the Internet provides access to a wide variety of resources.
- Example resources include video files, image files, audio files, or Web pages including content for particular subjects, book articles, or news articles.
- a search system can select one or more resources in response to receiving a search query.
- a search query is data that a user submits to a search engine to satisfy the user's informational needs.
- the search system selects and scores resources based on their relevance to the search query and on their importance relative to other resources to provide search results that link to the selected resources.
- the search results are typically ordered according to the scores, and provided in a search results page.
- Search systems can provide search suggestions to users to help users satisfy their informational needs.
- the term "query suggestion" is suggested data that can be used to refine a search or refine a search strategy.
- a query suggestion can be another search query, keywords, or topics to which a search query or keyword belongs.
- a query suggestion is often used as an additional query, e.g., the query suggestion can be processed by the search system as a query in response to a user selection of the query suggestion.
- Some search systems provide query suggestions as the user is typing so that the user can select a query suggestion without requiring typing the entire query. These systems typically send suggestion requests to a search engine with each keystroke, and the search engine provides query suggestions with prefixes that match the entered characters.
- This suggestion service is also offered on mobile devices. However, mobile devices often need to deal with much higher network latency, and the performance of the suggestion service can degrade as latency increases. Often the latency may be such that the suggestions received do not match the current query prefix entered, which tends to degrade the user experience rather than improve it.
- one innovative aspect of the subject matter described in this specification can be embodied in methods that include the actions of receiving from a client device a request for a search resource; providing to the client device in response to the request the search resource, the search resource including: first instructions that cause the client device to generate a search interface that includes a first query input field, initial query suggestions, and second instructions that cause the client device to: store the initial query suggestions in a suggestion store on the client device, compare query characters input in the first query input field to the query suggestions stored in the suggestion store, select query suggestions that match the query characters input in the first query input field based on the comparison; and display the selected query suggestions as query suggestions for the query characters input into the first query input field.
- Other embodiments of this aspect include corresponding systems, apparatus, and computer programs, configured to perform the actions of the methods, encoded on computer storage devices.
- another aspect of the subject matter described in this specification can be embodied in methods that include the actions of providing a request for a search resource from a search engine; receiving the search resource in response to the request the search resource, the search resource including: first instructions that cause the client device to generate a search interface that includes a first query input field, initial query suggestions, and second instructions that cause the client device to: store the initial query suggestions in a suggestion store on the client device, compare query characters input in the first query input field to the query suggestions stored in the suggestion store, select query suggestions that match the query characters input in the first query input field based on the comparison; and display the selected query suggestions as query suggestions for the query characters input into the first query input field.
- Other embodiments of this aspect include corresponding systems, apparatus, and computer programs, configured to perform the actions of the methods, encoded on computer storage devices.
- Fig. 1 is a block diagram of a query suggestion system in data communication with a client device.
- Fig. 2 is a flow diagram of an example process for determining initial query suggestions to be provided with a search interface resource.
- Fig. 3 is a flow diagram of an example process for providing initial query suggestions with a search engine interface resource.
- Fig. 4 is a flow diagram of an example process for receiving and requesting query suggestions from a client device.
- Fig. 5 is a flow diagram of an example process for providing query suggestion requests from a client device to a search engine, and processing the query suggestions received.
- Fig. 1 is a block diagram of a query suggestion system 100 in data
- a computer network 102 such as a local area network (LAN), a wide area network (WAN), the Internet, or a combination thereof, connects publishers 104, the client device 106, and a search system 1 10.
- a publisher 104 is any web site that hosts and provides electronic access to a resource by use of the network 102.
- a web site can be a collection of one or more resources 105 associated with a domain name.
- An example web site is a collection of web pages formatted in hypertext markup language (HTML) that can contain text, graphic images, multimedia content, and programming elements, such as scripts.
- HTML hypertext markup language
- a resource is any data that can be provided by the publisher 104 over the network 102 and that is addressed by a resource address.
- Resources include HTML pages, word processing documents, portable document format (PDF) documents, images, video, and feed sources, to name just a few.
- the resources may include content, such as words, phrases, pictures, and so on, and may include embedded information, such as meta (or metadata) information and hyperlinks and/or embedded instructions (such as JavaScript scripts).
- Each resource has an addressable storage location that can be uniquely identified. The addressable location is addressed by a resource locator, such as a universal resource locator (URL).
- URL universal resource locator
- a client device 106 is an electronic device that is under control of a user and is capable of requesting and receiving resources over the network 102.
- Example client devices 106 include personal computers, laptop computers, mobile communication devices, and other devices that can send and receive data over the network 102.
- a client device 106 typically includes a user application, such as a web browser, to facilitate the sending and receiving of data over the network 102.
- the search system 110 includes a search engine 118 for searching resources.
- the search engine 1 18 identifies the resources by crawling the publishers 104 and indexing the resources 105 provided by the publishers 104.
- the indexed and, optionally, cached copies of the resources 105 are stored in a resource index 112.
- the resource index 112 can include various types of indexes for resources 105, including keyword-based indexes, location-based indexes, and other indexes.
- the client device 106 submits search queries to the search engine 1 18.
- the search engine 118 uses the resource index 1 12 to identify resources that are relevant to the queries.
- the search engine 118 identifies resources, generates search results that identify the resources, and returns the search results to the client device 106.
- a search result 1 11 identifies a resource that is responsive to the query and includes a resource locator for the resource.
- An example search result 11 1 can include a web page title, a snippet (or portion) of text extracted from the web page, and the URL of the web page.
- the search results are ranked based on scores related to the resources 105 identified by the search results, such as information retrieval ("IR") scores, and optionally, a quality score of each resource relative to other resources.
- the IR scores are computed from dot products of feature vectors corresponding to a search query and a resource 105, and the ranking of the search results is based on initial relevance scores that are a combination of the IR scores and the quality scores.
- the search results are ordered according to these initial relevance scores and provided to the client device 106 according to the order.
- the client device 106 receives the search results pages and renders the pages for presentation to users, such as in the users' browsers.
- the resource 105 that the search result 11 1 references is provided to the requesting client device 106.
- the queries submitted from client devices are stored in query logs 114.
- Click data for the queries and the web pages referenced by the search results are stored in click logs 116.
- the click data define actions taken responsive to search results provided by the search engine 1 18.
- the query logs 114 and click logs 116 can be used to map queries submitted by the client devices to web pages that were identified in search results and the actions taken by users (i.e., data that are associated with the identifiers from the search requests so that a search history for each identifier can be accessed). If time data are also stored, then the relative times at which those actions were taken and when the queries were submitted can also be determined.
- the click logs 116 and query logs 114 can thus be used by the search engine to track the sequence of queries submitted by the client devices, the actions taken (e.g., by the user) in response to the queries, and how often the queries are submitted.
- the search system 110 can determine and provide query suggestions while the user is typing in a query.
- the user of the client device 106 can be entering a query that begins "new y"
- the search system 1 10 can provide suggested query completions, or suggestions, such as "new york,” “new york city,” “new york times,” and so on.
- the suggestions can appear, for example, in a suggestions box within the user's web browser, such as adjacent to the search box in which the user has begun typing the query. If the suggestions box contains the query that the user intended and is recognized as such by the user, the user can select (e.g., click on) the suggestion, and the suggestion can replace the user's partial query in the search box. As a result, the user need not enter the entire query.
- This process of query suggestions can operate well on a user's personal computer or other computing device that has network bandwidth to handle query suggestions relatively quickly.
- some mobile communication devices such as mobile phones and smart phones, may have a higher network latency as compared to the latency of a wired connection to a desktop PC.
- the suggestion process can be so slow that it interferes with the process of the user typing in a query.
- One reason for this is when suggestions arrive after the user has typed additional keystrokes, the delay can have the effect of making some suggestions inapplicable to the currently- entered query.
- the search system 1 10 can predict suggestions well before they may otherwise be predictable from partially-entered queries alone. For example, the search system 1 10 can use a user's query history in order to begin determining likely suggestions well before the user's client device 106 would display them. Suggestions provided by the search system 1 10 can be provided to the client device 106, which then can use caching and local storage to make the suggestions available on the client device 106 before they are needed.
- the search system 110 includes a suggest aggregator 127 and a suggest server 128.
- the suggest aggregator 127 is a server-side code module that can generate aggregated sets of selections for partial queries based on what the user has typed or is most likely to type.
- the suggest server 128 is a server-side code module that can provide complete suggested queries for one specific partial query.
- the suggest aggregator 127 and the suggest server 128 can communicate using an individual suggestion request/response interface 129.
- the suggest aggregator 127 can send a request (e.g., a partial query) to the suggest server 128, and in response, the suggest server 128 can return a corresponding response (e.g., suggestions that match the partial query).
- the suggest aggregator 127 and the suggest server 128 can be combined into a single component.
- the suggest aggregator 127 also communicates with the search engine 1 18. For example, based on queries that the search engine 118 receives (e.g., from a user's browser 130), the search engine 118 can send a request for common/related suggestions 131 to the suggest aggregator 127. In response, the suggest aggregator 127 can identify suggestions (e.g., by interfacing with the suggest server 128) and send aggregated suggestions 132 to the search engine 118. As a result, pre-cached suggestions can be included in the search pages that the search engine 1 18 provides to the client device 106 for use in the browser 130. Working together, the search engine 118, the suggest aggregator 127 and the suggest server 128 provide the server-side processing used for generating suggestions within the system 100.
- a typical flow can be as follows.
- a user executing the browser 130 on the client device 106 can request an HTML search page.
- the user may be using the browser 130 for the first time (e.g., on a brand new mobile communication device), or the user may have browsed several times before on his client device 106 and is simply starting a new browsing session.
- the search page that is provided includes, in some implementations, initial query suggestions.
- the suggestions can be based on past queries of all users, using information stored in the query logs 1 14. Using these suggestions, the search system 1 10 can provide a search page with pre-cached suggestions 136 to the user's browser 130 even before the user begins entering a query.
- the client device 106 receives the search page with pre-cached suggestions 136.
- the search page includes additional instructions, e.g., JavaScript code 140, that is able to manage search history and a cache of many partial queries and associated suggestions.
- the search page also includes a set of the most likely suggestions based on the first few characters that the user is likely to type in his query. Suggestions received from the search system 110 are stored in local storage 142 within the browser 130.
- the suggestion cache in local storage 142 is checked to see if it contains the partial query. If so, then the suggestions for that partial query can be displayed immediately to the user in the browser 130.
- a request e.g., a request for suggestions with look-ahead 134
- the suggest aggregator 127 is also sent to the suggest aggregator 127 to get aggregated suggestions 135 for additional partial queries based on what the user has typed so far and is most likely to type next. In this way, the system 100 can frequently stay ahead of the user and have suggestions available for any partial query before the user has typed it. The performance can improve over time as the cache grows, particularly since many users tend to execute similar (or even identical) queries over time.
- the communications may experience high latency, the presences of the pre-cached suggestions allows for the generation of query suggestions even if additional suggestions are not timely received from the search system 1 10. If the additional suggestions are timely received (i.e., received at a time when the suggestions are still relevant to the partial query being input, such as having prefixes matching the partial query), they can be display as suggestions. However, if the additional suggestions are not timely received (i.e., received at a time when the suggestions are no longer relevant to the partial query being input, such as having prefixes that do not match the partial query), then the suggestions can be stored in the local storage 142 for later use as possible suggestions.
- the search engine 118 can also provide search results with additional pre-cached suggestions 144, which are based on previous related queries that users have entered.
- the previous query can be the query that is used to identify the search results provided with the search results page.
- the search engine 1 18 Based on this query (e.g., "new york times") that accompanies the corresponding search results (e.g., responsive to the query "new york times"), the search engine 1 18 provides related suggestions (e.g., "LA times", New York Post,” etc.).
- the search engine 1 18 can use information about past user queries from the query logs 114 and a history of user interactions with corresponding web pages from the click logs 1 16.
- the search results with additional pre-cached suggestions 144 can be stored by the browser 130 as an HTML search results page with additional suggestions based on previous queries 146.
- This process of pre-caching suggestions can continue as the user keeps typing in characters of the query.
- the browser 130 can stay ahead of whatever the user types, even on mobile communication devices that may have a higher network latency.
- the cached suggestions can remain several keystrokes (e.g., two or more) ahead of the user. This can prevent displaying "stale" suggestions, or in other words, suggestions that had been based on the user's partial query two or three keystrokes ago that are no longer applicable.
- the local storage 142 can store any kind of suggestion-related data that may be needed on the client device 106.
- the local storage 142 can include HTML, HTML5, Google Gears, simple JavaScript objects, or any other cached information needed to support and display suggestions on the user's browser 130.
- suggestions provided by the search system 1 10 are in the form of key value pairs, and the pre-cached suggestions stored in local storage 142 are stored as key value pairs.
- a key value pair can be a query input sequence (e.g., a partial query) and the query suggestions that have initial query characters that match the query input sequences.
- one key value pair can be the input sequence "ne” and the query suggestions such as "new york,” “new york city,” “new york times,” “Nebraska football” and so on.
- storing pre-cached suggestions in this way can speed up the process by which the browser 130 accesses and displays suggestions based on the user's current partial query.
- Fig. 2 is a flow diagram of an example process 200 for determining initial query suggestions to be provided with a search interface resource.
- the search interface resource is a page in which a user enters a search query, such as a home page for a search engine host.
- the search system 110 preferably perform the steps of the process 200 prior to query time, i.e., in a back-end process separate from processing user queries input by users. Once the initial query suggestions are determined, the initial suggestions are provided with the search interface resource.
- Query log data that includes queries submitted by users and the frequency with which each query was submitted are accessed (202).
- the search system 110 can access the query logs 1 14.
- the information accessed includes specific queries that were entered previously by multiple users, the selections of search results, and the frequency at which the queries were entered.
- Most likely sequences of initial query characters are determined from the query log data (204). The determination can be based on complete previous queries and their frequencies that are stored in the query logs 114. In some implementations, query frequencies that are used to determine most likely sequences are limited to a specific time period, such as the last year or the last month.
- most likely queries are determined from the most likely sequence and the query log data (206). For example, for the likely sequence of "new,” the search system 110 can determine that the queries “new york times” and “new york city,” each having been entered at a very high relative frequency, are the most likely queries. By comparison, the search system 110 can determine that the query "new day rising,” having been previously at a relatively low frequency, is a less likely query for the sequence "new.” The process is repeated for other most likely sequences (e.g., "abc,” "xyz,” etc.).
- query frequency analysis can be used to determine most likely sequences and most likely queries by looking at historical queries in the user's country and language and calculating the most likely initial sequences of characters. A large cache hit ratio can be achieved for the first few characters with just a small amount of pre-cached data.
- the most likely queries determined for each of the most likely sequences of initial query characters are designated as the initial query suggestions (208).
- the most likely queries can be used to generate the pre-cached suggestions 136 that are provided with the search page 140.
- the most likely queries determined for each of the most likely sequences are grouped together.
- the queries can have likelihood scores assigned to them, and the scores can be used to sequence the suggestions in descending order of likelihood.
- the list of suggestions provided by the search system 1 10 can present the most likely suggestion (e.g., "new york times") first, followed by the second most likely suggestion (e.g., "new york yankees"), and so on.
- the browser 130 displays the suggestions in order of likelihood that the suggestions are what the user intended. In other implementations, the suggestions can be displayed in other orders, such as alphabetically.
- the process 200 can be also used by the search system 1 10 for generating additional suggestions based on partial queries received from user devices.
- the additional suggestions are provided subsequent to the initial suggestions (e.g., with a search results page, for example).
- the search system 1 10 can use various techniques for processing the partial queries, including query frequency analysis as describe above, prefix analysis, and letter frequency analysis.
- Prefix analysis can examine a partial query and determine the most likely complete queries based on analyzing historical query data. This technique can predict the most likely intermediate partial queries (e.g., "new" or "new york”) in order to generate suggestions that are pre-cached for those partial queries without having to make a network request for each character the user types.
- Letter frequency analysis can be used to predict the most likely following letters by processing historical queries based on, for example, the final (e.g., last-entered) letter of a partial query. For example, whenever an English user types "q,” it is highly likely that the following letter will be "u” even if the rest of the query is unique and does not lend itself to prefix analysis. Thus, the response for a partial query ending in "q” would also include suggestions for the same partial query followed by "u,” without requiring another request that includes the letter "u.”
- the search system 1 10 can process complete queries received from the user to provide additional query suggestions. For example, the search system 1 10 can use related search analysis to identify query suggestions. Related search analysis, when given a full query executed by the user, can predict other queries that the user is likely to type. The queries can be included as pre-cached suggestions for those queries in the HTML search results page so that they are available if the user types those queries without requiring a network request.
- the client device can also use query histories to generate the query suggestions on the client.
- Query histories can be used to generate suggestions based on the likelihood that users are very likely to repeat previous queries.
- a user's previous queries can be cached locally (e.g., in local storage 142) so they can be displayed without a network request.
- locally cached queries can include timestamps and frequencies, and queries with low frequency counts or those that have not been used recently (e.g., in the last month or year, etc.) can be purged to free up cache space.
- Fig. 3 is a flow diagram of an example process 300 for providing initial query suggestions with a search engine interface resource.
- the search system 1 10 for example, can perform the steps of the process 300, which is a server-oriented process.
- the process 300 describes how the search system 1 10 provide the initial set of pre- cached queries to the client device, and how the search system 110 provide additional sets of pre-cached queries to the client device.
- a request for a search resource is received from a client device (302).
- the search system 110 receives a request for a search resource page from the client device 106.
- the request can be sent from the user's browser 130 that is running on the client device 106, for example, as the user starts a browser application and navigates to a home page of the search system 110.
- the search resource is provided to the client device in response to the request for the search resource (304). Included with the search resource are first instructions that cause the client device to generate a search interface that includes a first query input field, and initial query suggestions. As an example, the search system 1 10 can send the search page with pre-cached suggestions 136 to the client device 106.
- the search page can be in the form of HTML code that is executable on the user's browser 130.
- the suggestions can be the suggestions determined by the process 200, described above.
- the search resource also includes second instructions, such as JavaScript code, that cause the client device to store the initial query suggestions in a suggestion store on the client device.
- the second instructions After the search resource is rendered on the client device, and as the user enters a query, the second instructions also cause the client device to compare query characters input in a query input field to the query suggestions stored in the suggestion store, and select query suggestions that match the query characters input in the first query input field based on the comparison.
- the client device executing the second instructions, then displays the selected query suggestions as query suggestions for the query characters input into the first query input field.
- the user may select one of the suggested queries, or may continue to enter a query. Eventually the user will enter a query (either by selecting one of the suggestions or typing in the query) and cause the client device to send the query to the search system 110.
- a request (e.g., a request for suggestions with look-ahead 134) is also sent to the suggest aggregator 127 to get additional aggregated suggestions 135 for additional partial queries based on what the user has typed so far and is most likely to type next. If the additional suggestions are timely received, they can be display as suggestions; and if the additional suggestions are not timely received, then the suggestions can be stored in the local storage 142 for later use as possible suggestions.
- a query is received from the client device (306).
- the search system 110 can receive a query from the client device 106. The query can be a complete query that the user has either typed in or selected from the suggestions, or some combination of the two.
- a search results resource is provided in response to the query received from the client device (308).
- the search results resource includes third instructions that cause the client device to generate a search results page that displays search results referencing resources determined to be responsive to the query, and additional query suggestions.
- the search system 110 can provide the search results resource to the client device 106 in the form of search results with additional pre-cached suggestions 144.
- the search results resource includes HTML code that the client device 106 can use to display search results in the browser 130. Additionally, the search results resource can include additional query suggestions, which the search system 110 can obtain using information from the query logs 114, as described above, or from another query suggestion service. In some implementations, the additional pre-cached suggestions are based on the query that was selected and used to identify the search results for the search results resource.
- the search results resource also includes fourth instructions, such as JavaScript code, that cause the client device to store the additional query suggestions in the suggestion store on the client device. As a result, the pre-cached suggestions begin to include query suggestions that are more relevant to the user's interests, and the user's browser 130 can start displaying personalized pre- cached suggestions.
- Fig. 4 is a flow diagram of an example process 400 for receiving and requesting query suggestions from a client device.
- the client device 106 can perform the steps of the process 400, for example, and in interaction with the search system 1 10 for some of the steps.
- a request is provided, the request being for a search resource from a search engine (402).
- the client device 106 can provide a request to the search system 110 for a search resource.
- the request can be sent from the user's browser 130 that is running on the client device 106, for example, as the user starts a browser application and navigates to a home page of the search system 110.
- the search resource is received in response to the request the search resource
- the client device 106 can receive the search page with pre- cached suggestions 136 from the search system 1 10.
- the search page can include instructions that enable the client device to generate a search interface that includes a query input field and initial query suggestions.
- the search page can be in the form of HTML code that is executable on the user's browser 130.
- the search page can also include second instructions, e.g., JavaScript code, that can process the pre-cached suggestions as describe above.
- Initial query suggestions are stored in a suggestion store on the client device (406).
- the client device 106 executing the second instructions, stores the initial query suggestions in the local storage 142. In this way, queries that the user is likely to select from suggestions are available and pre-cached on the client device 106.
- Query characters input in the first query input field are compared to the query suggestions stored in the suggestion store (408).
- query characters that the user enters into the query input field are compared to the query suggestions stored in the local storage 142.
- the user's partial query “ne” can be compared to suggestions (e.g., "new york times” and others) stored in the local storage 142.
- Query suggestions that match the query characters input in the first query input field are selected based on the comparison (410). For example, the client device 106 can select query suggestions that match the query characters input in the first query input field based on the comparison. In this case, the suggestion "new york times" and other suggestions starting with “ne" are selected because they match the partial query "ne.”
- the selected query suggestions are displayed as query suggestions for the query characters input into the first query input field (412).
- the selected query suggestions can be displayed in a suggestions box that is adjacent to the first query input field.
- the user's browser 130 can also display suggestions, such as "new york times" and others that match the partial query.
- the browser can obtain the suggestions from local storage 142. If the user types additional characters into the query, the suggestions obtained from local storage can change to match the current partial query.
- the local storage 142 in addition to the local storage 142 containing query suggestions that have been recently pre-cached (e.g., based on the user's current user session and partial query), the local storage 142 can contain query suggestions that were saved, for example, based on queries recently entered into the browser, such as in a pre-determined time period (e.g., within the last month).
- process 400 is described in the context of receiving a search resource (e.g., a home page of the search system), the process 400 can also be applied in the context of receiving a search results page that includes additional query suggestions.
- a search resource e.g., a home page of the search system
- Fig. 5 is a flow diagram of an example process 500 for providing query suggestion requests from a client device to a search engine, and processing the query suggestions received.
- the client device 106 for example, can perform the steps of the process 500.
- the query characters that are input in the first query input field are provided to the search system 1 10 as a query suggestion request (502).
- a user can input a partial query "ne" into a query input field of a search resource or search results resource (e.g., search box on a search page or search results page).
- the client device 106 can send the input as a request for suggestions with look-ahead 134 to the search system 110.
- the client device 106 may already have some pre-cached suggestions stored in the local storage 142, some of which may be related to the user's current partial query, and may process these pre-cached suggestions to determine query suggestions to present to the user.
- additional query suggestions are received from the data processing apparatus (504).
- the client device 106 can receive the aggregated suggestions 135 from the search system 1 10.
- the suggestions received can be generated by the search system 1 10 using, for example, query logs 1 14 and click logs 116, as described above, or be received from a separate suggest service. If the additional suggestions are timely received (i.e., received at a time when the suggestions are still relevant to the partial query being input, such as having prefixes matching the partial query), they can be display as suggestions. However, if the additional suggestions are not timely received (i.e., received at a time when the suggestions are no longer relevant to the partial query being input, such as having prefixes that do not match the partial query), then the suggestions can be stored in the local storage 142 for later use as possible suggestions.
- the additional query suggestions are stored in the suggestion store (506). For example, regardless of the source of the suggestions that the client device 106 receives, the suggestions can be cached in local storage 142. From that point on, the pre-cached suggestions stored in local storage 142 can be used by the browser 130 to display suggestions that match the user's current partial query. Further, the suggestions can be available on the client device 106 for later processing of query suggestions. ⁇ 6.0 Pre-Caching Location Specific Suggestions
- the suggest aggregator 127 accounts for location data indicating the location of the client device 106, and uses the location data to provide location specific query suggestions for caching.
- the local storage 142 associates location specific query suggestions by their location, e.g., locations LI, L2...Ln.
- the location specific query suggestions are used to augment the query suggestions provided above, which are not necessarily location specific, i.e., the location specific query suggestions are used to augment the location independent query suggestions.
- the pre-cached suggestions 136 provided with the search page, and the additional suggestions provided with the search results pages include location independent query suggestions and location specific query suggestions.
- a location independent query suggestion is a query suggestion that is eligible to be displayed as a query suggestion regardless of the location of the client device.
- a location specific query suggestion is a query suggestion that is associated with a location or area and is only eligible to be displayed as a query suggestion when the client device is within that location or area.
- Location specific query suggestions are generated in a similar manner as described above, except that the location specific query suggestions are specific to particular locations. For example, a process for determining an initial set of location specific query suggestions, and for determining additional location specific query suggestions, performs steps that are similar to those as described in Fig. 2, except that that queries that are processed are limited to queries received from devices within the particular location.
- the relevant location information for the query suggestions is provided from location data provided by the client device, e.g., a GPS coordinate, an IP addresses that is resolved to a certain regional area, etc.
- location data e.g., a GPS coordinate, an IP addresses that is resolved to a certain regional area, etc.
- the user device will include location independent query suggestions and location specific query suggestions that are specific to the Mountain View, California area (indicated by the location LI).
- location LI location independent query suggestions and location specific query suggestions that are specific to the Mountain View, California area
- the user enjoys dining in barbecue restaurants, and, while in Mountain View, begins to enter the text "barbeque" as a query.
- query suggestions matching the entered string will be provided from location independent query suggestions and from only one location specific set of query suggestions, i.e., the query suggestions associated with the location LI .
- These latter query suggestions include, for example, the names of restaurants in the Mountain View, California area, and other matching queries that are specific to the location of Mountain View California.
- the user When the user uses the client device 106 for the first time in the Atlanta, Georgia area, the user will be provided a set of Atlanta specific initial query suggestions with the search page, and will be provided with additional Atlanta specific query suggestions with each search results page provided.
- Location independent query suggestions can also be provided as well. Accordingly, when the user begins into the search query "barbecue" while in Atlanta, query suggestions matching the entered string will be provided from location independent query suggestions and from only one location specific set of query suggestions, i.e., the query suggestions associated with the location L2.
- These latter query suggestions include, for example, the names of restaurants in the Atlanta, Georgia area, and other matching queries that are specific to the location of Atlanta, Georgia.
- the processing of the location specific query suggestions for display to the user can, in some implementations, be done according to a filtering process. For example, assume the request for the search resource includes location data identifying the current location of the client device 106. In addition to the location independent query suggestions, a set of initial query suggestions include location specific query suggestions that are specific to the current location of the client device are also provided. Likewise, the query suggestions that are provided with search results pages also include location specific query suggestions specific to the current location of the client device. When selecting query suggestions for display to the user, the client device, executing the instructions in the browser, excludes location specific query suggestions that are not specific to the current location of the client device. Thus, as described above, when the user is in the Atlanta, Georgia area, location specific query suggestions for Mountain View, California, will not be provided, as these query suggestions are not specific to the current location of Atlanta, Georgia.
- Embodiments of the subject matter and the operations described in this specification can be implemented in digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them.
- Embodiments of the subject matter described in this specification can be implemented as one or more computer programs, i.e., one or more modules of computer program instructions, encoded on computer storage medium for execution by, or to control the operation of, data processing apparatus.
- the program instructions can be encoded on an artificially-generated propagated signal, e.g., a machine-generated electrical, optical, or electromagnetic signal, that is generated to encode information for transmission to suitable receiver apparatus for execution by a data processing apparatus.
- a computer storage medium can be, or be included in, a computer-readable storage device, a computer-readable storage substrate, a random or serial access memory array or device, or a combination of one or more of them.
- a computer storage medium is not a propagated signal
- a computer storage medium can be a source or destination of computer program instructions encoded in an artificially-generated propagated signal.
- the computer storage medium can also be, or be included in, one or more separate physical components or media (e.g., multiple CDs, disks, or other storage devices).
- the operations described in this specification can be implemented as operations performed by a data processing apparatus on data stored on one or more computer- readable storage devices or received from other sources.
- data processing apparatus encompasses all kinds of apparatus, devices, and machines for processing data, including by way of example a
- the apparatus can include special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC
- the apparatus can also include, in addition to hardware, code that creates an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, a cross-platform runtime environment, a virtual machine, or a combination of one or more of them.
- the apparatus and execution environment can realize various different computing model infrastructures, such as web services, distributed computing and grid computing infrastructures.
- a computer program (also known as a program, software, software application, script, or code) can be written in any form of programming language, including compiled or interpreted languages, declarative or procedural languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, object, or other unit suitable for use in a computing environment.
- a computer program may, but need not, correspond to a file in a file system.
- a program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub-programs, or portions of code).
- a computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
- the processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform actions by operating on input data and generating output.
- the processes and logic flows can also be performed by, and apparatus can also be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).
- processors suitable for the execution of a computer program include, by way of example, both general and special purpose microprocessors, and any one or more processors of any kind of digital computer.
- a processor will receive instructions and data from a read-only memory or a random access memory or both.
- the essential elements of a computer are a processor for performing actions in accordance with instructions and one or more memory devices for storing instructions and data.
- a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks.
- mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks.
- a computer need not have such devices.
- a computer can be embedded in another device, e.g., a mobile telephone, a personal digital assistant (PDA), a mobile audio or video player, a game console, a Global Positioning System (GPS) receiver, or a portable storage device (e.g., a universal serial bus (USB) flash drive), to name just a few.
- Devices suitable for storing computer program instructions and data include all forms of non-volatile memory, media and memory devices, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks; magneto-optical disks; and CD-ROM and DVD-ROM disks.
- the processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
- a computer having a display device, e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor, for displaying information to the user and a keyboard and a pointing device, e.g., a mouse or a trackball, by which the user can provide input to the computer.
- a display device e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor
- keyboard and a pointing device e.g., a mouse or a trackball
- Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form, including acoustic, speech, or tactile input.
- a computer can interact with a user by sending documents to and receiving documents from a device that is used by the user; for example, by sending web pages to a
- Embodiments of the subject matter described in this specification can be implemented in a computing system that includes a back-end component, e.g., as a data server, or that includes a middleware component, e.g., an application server, or that includes a front-end component, e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described in this specification, or any combination of one or more such back-end, middleware, or front-end components.
- the components of the system can be interconnected by any form or medium of digital data communication, e.g., a communication network.
- Examples of communication networks include a local area network (“LAN”) and a wide area network (“WAN”), an inter-network (e.g., the Internet), and peer-to-peer networks (e.g., ad hoc peer-to-peer networks).
- LAN local area network
- WAN wide area network
- inter-network e.g., the Internet
- peer-to-peer networks e.g., ad hoc peer-to-peer networks.
- the computing system can include clients and servers.
- a client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.
- a server transmits data (e.g., an HTML page) to a client device (e.g., for purposes of displaying data to and receiving user input from a user interacting with the client device).
- client device e.g., for purposes of displaying data to and receiving user input from a user interacting with the client device.
- Data generated at the client device e.g., a result of the user interaction
Abstract
Description
Claims
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US12/841,571 US8560562B2 (en) | 2010-07-22 | 2010-07-22 | Predictive query suggestion caching |
PCT/US2011/044496 WO2012012396A2 (en) | 2010-07-22 | 2011-07-19 | Predictive query suggestion caching |
Publications (1)
Publication Number | Publication Date |
---|---|
EP2596441A2 true EP2596441A2 (en) | 2013-05-29 |
Family
ID=44628954
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
EP11735962.0A Ceased EP2596441A2 (en) | 2010-07-22 | 2011-07-19 | Predictive query suggestion caching |
Country Status (7)
Country | Link |
---|---|
US (2) | US8560562B2 (en) |
EP (1) | EP2596441A2 (en) |
JP (1) | JP5745627B2 (en) |
KR (1) | KR101708448B1 (en) |
CN (1) | CN103221951B (en) |
AU (1) | AU2011282258B2 (en) |
WO (1) | WO2012012396A2 (en) |
Families Citing this family (62)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8688674B2 (en) * | 2008-02-14 | 2014-04-01 | Beats Music, Llc | Fast search in a music sharing environment |
US11048765B1 (en) | 2008-06-25 | 2021-06-29 | Richard Paiz | Search engine optimizer |
US11379473B1 (en) | 2010-04-21 | 2022-07-05 | Richard Paiz | Site rank codex search patterns |
US10936687B1 (en) | 2010-04-21 | 2021-03-02 | Richard Paiz | Codex search patterns virtual maestro |
US11423018B1 (en) | 2010-04-21 | 2022-08-23 | Richard Paiz | Multivariate analysis replica intelligent ambience evolving system |
AU2011291544B2 (en) | 2010-08-19 | 2015-03-26 | Google Llc | Predictive query completion and predictive search results |
US10423672B2 (en) * | 2010-10-04 | 2019-09-24 | Excalibur Ip, Llc | Network resource-specific search assistance |
US20120096019A1 (en) * | 2010-10-15 | 2012-04-19 | Manickam Ramesh Kumar | Localized and cultural domain name suggestion |
US8639679B1 (en) * | 2011-05-05 | 2014-01-28 | Google Inc. | Generating query suggestions |
DE102011101146A1 (en) * | 2011-05-11 | 2012-11-15 | Abb Technology Ag | Multi-level method and device for interactive retrieval of device data of an automation system |
US20120290926A1 (en) * | 2011-05-12 | 2012-11-15 | Infinote Corporation | Efficient document management and search |
US8645825B1 (en) | 2011-08-31 | 2014-02-04 | Google Inc. | Providing autocomplete suggestions |
US20130282709A1 (en) * | 2012-04-18 | 2013-10-24 | Yahoo! Inc. | Method and system for query suggestion |
US9684395B2 (en) * | 2012-06-02 | 2017-06-20 | Tara Chand Singhal | System and method for context driven voice interface in handheld wireless mobile devices |
US9298730B2 (en) * | 2012-07-04 | 2016-03-29 | International Medical Solutions, Inc. | System and method for viewing medical images |
US20140129973A1 (en) * | 2012-11-08 | 2014-05-08 | Microsoft Corporation | Interaction model for serving popular queries in search box |
US20140149447A1 (en) * | 2012-11-29 | 2014-05-29 | Usablenet, Inc. | Methods for providing web search suggestions and devices thereof |
CN103885990B (en) * | 2012-12-24 | 2019-07-05 | 腾讯科技（武汉）有限公司 | Searching method and system |
US9311416B1 (en) * | 2012-12-31 | 2016-04-12 | Google Inc. | Selecting content using a location feature index |
US11809506B1 (en) | 2013-02-26 | 2023-11-07 | Richard Paiz | Multivariant analyzing replicating intelligent ambience evolving system |
US11741090B1 (en) | 2013-02-26 | 2023-08-29 | Richard Paiz | Site rank codex search patterns |
US20140279993A1 (en) * | 2013-03-14 | 2014-09-18 | Microsoft Corporation | Clarifying User Intent of Query Terms of a Search Query |
US20150213041A1 (en) * | 2013-03-15 | 2015-07-30 | Google Inc. | Search suggestion rankings |
US9881102B2 (en) | 2013-04-22 | 2018-01-30 | Microsoft Technology Licensing, Llc | Aggregating personalized suggestions from multiple sources |
TWI480752B (en) * | 2013-07-16 | 2015-04-11 | Inventec Corp | Web information searching system and method thereof |
US8631325B1 (en) | 2013-08-09 | 2014-01-14 | Zoomdata, Inc. | Real-time data visualization of streaming data |
US9430573B2 (en) * | 2014-01-14 | 2016-08-30 | Microsoft Technology Licensing, Llc | Coherent question answering in search results |
CN105302827B (en) * | 2014-06-30 | 2018-11-20 | 华为技术有限公司 | A kind of searching method and equipment of event |
JP6364086B2 (en) | 2014-08-22 | 2018-07-25 | 株式会社日立製作所 | Self-produced information processing system and method |
US10114862B2 (en) * | 2014-08-29 | 2018-10-30 | International Business Machines Corporation | Suggestion of a broad-spectrum list of grouped natural language search query terms |
US9880714B2 (en) | 2014-10-30 | 2018-01-30 | Ebay Inc. | Dynamic loading of contextual ontologies for predictive touch screen typing |
DE102014224415A1 (en) * | 2014-11-28 | 2016-06-02 | Siemens Aktiengesellschaft | A method for computer-aided processing of requests for analyzing data in a data store |
US20160180726A1 (en) * | 2014-12-17 | 2016-06-23 | International Business Machines Corporation | Managing a question and answer system |
US9251276B1 (en) | 2015-02-27 | 2016-02-02 | Zoomdata, Inc. | Prioritization of retrieval and/or processing of data |
US10169467B2 (en) * | 2015-03-18 | 2019-01-01 | Microsoft Technology Licensing, Llc | Query formulation via task continuum |
US20170031998A1 (en) * | 2015-07-31 | 2017-02-02 | Linkedln Corporation | Organizational directory access client and server leveraging local and network search |
US10389842B2 (en) | 2015-09-18 | 2019-08-20 | International Business Machines Corporation | Mobile device cache updating |
US10423683B2 (en) | 2016-05-02 | 2019-09-24 | Microsoft Technology Licensing, Llc | Personalized content suggestions in computer networks |
US20180081893A1 (en) * | 2016-09-19 | 2018-03-22 | Ebay Inc. | Prediction-based instant search |
CN108008832A (en) * | 2016-10-31 | 2018-05-08 | 北京搜狗科技发展有限公司 | A kind of input method and device, a kind of device for being used to input |
US9942312B1 (en) | 2016-12-16 | 2018-04-10 | Zoomdata, Inc. | System and method for facilitating load reduction at a landing zone |
US10824678B2 (en) * | 2017-06-03 | 2020-11-03 | Apple Inc. | Query completion suggestions |
US10645146B2 (en) | 2017-06-13 | 2020-05-05 | Google Llc | Transmitting high latency digital components in a low latency environment |
US20190018885A1 (en) * | 2017-07-12 | 2019-01-17 | Linkedin Corporation | Index aware typeahead in searches |
US10606895B2 (en) | 2017-07-12 | 2020-03-31 | Microsoft Technology Licensing, Llc | Multiple entity aware typeahead in searches |
US11676220B2 (en) | 2018-04-20 | 2023-06-13 | Meta Platforms, Inc. | Processing multimodal user input for assistant systems |
US11886473B2 (en) | 2018-04-20 | 2024-01-30 | Meta Platforms, Inc. | Intent identification for agent matching by assistant systems |
US11307880B2 (en) | 2018-04-20 | 2022-04-19 | Meta Platforms, Inc. | Assisting users with personalized and contextual communication content |
US11715042B1 (en) | 2018-04-20 | 2023-08-01 | Meta Platforms Technologies, Llc | Interpretability of deep reinforcement learning models in assistant systems |
US10782986B2 (en) | 2018-04-20 | 2020-09-22 | Facebook, Inc. | Assisting users with personalized and contextual communication content |
US10606851B1 (en) * | 2018-09-10 | 2020-03-31 | Palantir Technologies Inc. | Intelligent compute request scoring and routing |
US10409641B1 (en) | 2018-11-26 | 2019-09-10 | Palantir Technologies Inc. | Module assignment management |
US11120007B2 (en) | 2018-11-26 | 2021-09-14 | Palantir Technologies Inc. | Module expiration management |
CN109582693A (en) * | 2018-11-26 | 2019-04-05 | 成都四方伟业软件股份有限公司 | Mathematical logic expression processing method and device based on WEB |
JP7474459B2 (en) * | 2019-04-16 | 2024-04-25 | 株式会社ユニバーサルエンターテインメント | Information provision system and information provision method |
US11514053B2 (en) | 2019-04-16 | 2022-11-29 | Microsoft Technology Licensing, Llc | Caching of potential search results |
US11151167B2 (en) | 2019-05-10 | 2021-10-19 | Georgetown University | Cache optimization via topics in web search engines |
US10503792B1 (en) | 2019-05-10 | 2019-12-10 | Georgetown University | Cache optimization via topics in web search engines |
CN110442593B (en) * | 2019-08-12 | 2022-02-01 | 四川长虹电器股份有限公司 | Cross-application sharing method based on user search information |
WO2021229353A1 (en) * | 2020-05-11 | 2021-11-18 | Samel Siddharth Mohan | System and method to detect affiliated partners of an entity based on a query keyword |
IL300850A (en) * | 2020-08-27 | 2023-04-01 | Liveperson Inc | Context-sensitive conversational interface |
KR20230097323A (en) | 2021-12-24 | 2023-07-03 | 박민수 | Silica gel rubber gloves to remove moisture inside the gloves |
Citations (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20050283468A1 (en) * | 2004-06-22 | 2005-12-22 | Kamvar Sepandar D | Anticipated query generation and processing in a search engine |
US20060253427A1 (en) * | 2005-05-04 | 2006-11-09 | Jun Wu | Suggesting and refining user input based on original user input |
WO2007078768A1 (en) * | 2005-12-20 | 2007-07-12 | Yahoo! Inc. | Providing predicted search queries and predictive search results |
Family Cites Families (34)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
JP2001249933A (en) * | 2000-03-06 | 2001-09-14 | Nippon Telegr & Teleph Corp <Ntt> | Retrieval word input complementing method and device and recording medium having program for executing the method stored thereon |
US6564213B1 (en) * | 2000-04-18 | 2003-05-13 | Amazon.Com, Inc. | Search query autocompletion |
JP2004070547A (en) * | 2002-08-05 | 2004-03-04 | Sony Ericsson Mobilecommunications Japan Inc | Dictionary-creating method and device, and dictionary-creating system |
US6947930B2 (en) * | 2003-03-21 | 2005-09-20 | Overture Services, Inc. | Systems and methods for interactive search query refinement |
US8086619B2 (en) * | 2003-09-05 | 2011-12-27 | Google Inc. | System and method for providing search query refinements |
GB2406399A (en) * | 2003-09-23 | 2005-03-30 | Ibm | Seaching within a computer network by entering a search term and optional URI into a web browser |
US7240049B2 (en) | 2003-11-12 | 2007-07-03 | Yahoo! Inc. | Systems and methods for search query processing using trend analysis |
US8972444B2 (en) | 2004-06-25 | 2015-03-03 | Google Inc. | Nonstandard locality-based text entry |
US20060059134A1 (en) * | 2004-09-10 | 2006-03-16 | Eran Palmon | Creating attachments and ranking users and attachments for conducting a search directed by a hierarchy-free set of topics |
US20060106769A1 (en) * | 2004-11-12 | 2006-05-18 | Gibbs Kevin A | Method and system for autocompletion for languages having ideographs and phonetic characters |
US7461059B2 (en) * | 2005-02-23 | 2008-12-02 | Microsoft Corporation | Dynamically updated search results based upon continuously-evolving search query that is based at least in part upon phrase suggestion, search engine uses previous result sets performing additional search tasks |
WO2006113506A2 (en) * | 2005-04-15 | 2006-10-26 | Perfect Market Technologies, Inc. | Search engine with suggestion tool and method of using same |
US7577646B2 (en) * | 2005-05-02 | 2009-08-18 | Microsoft Corporation | Method for finding semantically related search engine queries |
US8200687B2 (en) * | 2005-06-20 | 2012-06-12 | Ebay Inc. | System to generate related search queries |
JP4773761B2 (en) * | 2005-07-25 | 2011-09-14 | ヤフー株式会社 | Information search server, information search method, information search program |
JP4781741B2 (en) * | 2005-07-25 | 2011-09-28 | ヤフー株式会社 | Information retrieval system, information retrieval program |
US7747639B2 (en) | 2005-08-24 | 2010-06-29 | Yahoo! Inc. | Alternative search query prediction |
US7672932B2 (en) * | 2005-08-24 | 2010-03-02 | Yahoo! Inc. | Speculative search result based on a not-yet-submitted search query |
US20100076994A1 (en) * | 2005-11-05 | 2010-03-25 | Adam Soroca | Using Mobile Communication Facility Device Data Within a Monetization Platform |
US7676517B2 (en) | 2005-10-14 | 2010-03-09 | Microsoft Corporation | Search results injected into client applications |
US20070162481A1 (en) * | 2006-01-10 | 2007-07-12 | Millett Ronald P | Pattern index |
KR100754768B1 (en) * | 2006-04-06 | 2007-09-03 | 엔에이치엔(주) | System and method for providing recommended word of adjustment each user and computer readable recording medium recording program for implementing the method |
US20070276813A1 (en) * | 2006-05-23 | 2007-11-29 | Joshua Rosen | Online Advertisement Selection and Delivery Based on Search Listing Collections |
US20090043741A1 (en) * | 2007-08-09 | 2009-02-12 | Dohyung Kim | Autocompletion and Automatic Input Method Correction for Partially Entered Search Query |
KR101132450B1 (en) * | 2007-11-28 | 2012-03-30 | 엔에이치엔(주) | Realtime rush keyword and adaptive system |
US8719256B2 (en) * | 2008-05-01 | 2014-05-06 | Chacha Search, Inc | Method and system for improvement of request processing |
US8312032B2 (en) * | 2008-07-10 | 2012-11-13 | Google Inc. | Dictionary suggestions for partial user entries |
US20100106854A1 (en) * | 2008-10-29 | 2010-04-29 | Hostway Corporation | System and method for controlling non-existing domain traffic |
JP5515284B2 (en) * | 2008-12-11 | 2014-06-11 | 日本電気株式会社 | Information processing apparatus, program, and information processing method |
JP2010152616A (en) * | 2008-12-25 | 2010-07-08 | Baidu Japan Inc | Retrieval management system, retrieval management method, and program |
US20100185644A1 (en) * | 2009-01-21 | 2010-07-22 | Microsoft Corporatoin | Automatic search suggestions from client-side, browser, history cache |
US8275759B2 (en) * | 2009-02-24 | 2012-09-25 | Microsoft Corporation | Contextual query suggestion in result pages |
US9015148B2 (en) * | 2009-09-21 | 2015-04-21 | Microsoft Corporation | Suggesting related search queries during web browsing |
US8560561B2 (en) * | 2010-01-07 | 2013-10-15 | Microsoft Corporation | Location aware search page elements |
-
2010
- 2010-07-22 US US12/841,571 patent/US8560562B2/en active Active
-
2011
- 2011-07-19 WO PCT/US2011/044496 patent/WO2012012396A2/en active Application Filing
- 2011-07-19 CN CN201180042833.9A patent/CN103221951B/en active Active
- 2011-07-19 JP JP2013520800A patent/JP5745627B2/en active Active
- 2011-07-19 AU AU2011282258A patent/AU2011282258B2/en active Active
- 2011-07-19 EP EP11735962.0A patent/EP2596441A2/en not_active Ceased
- 2011-07-19 KR KR1020137004430A patent/KR101708448B1/en active IP Right Grant
-
2013
- 2013-09-13 US US14/026,553 patent/US9323808B1/en active Active
Patent Citations (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20050283468A1 (en) * | 2004-06-22 | 2005-12-22 | Kamvar Sepandar D | Anticipated query generation and processing in a search engine |
US20060253427A1 (en) * | 2005-05-04 | 2006-11-09 | Jun Wu | Suggesting and refining user input based on original user input |
WO2007078768A1 (en) * | 2005-12-20 | 2007-07-12 | Yahoo! Inc. | Providing predicted search queries and predictive search results |
Also Published As
Publication number | Publication date |
---|---|
AU2011282258B2 (en) | 2015-04-30 |
KR101708448B1 (en) | 2017-02-20 |
US20120023120A1 (en) | 2012-01-26 |
CN103221951B (en) | 2017-02-15 |
CN103221951A (en) | 2013-07-24 |
WO2012012396A3 (en) | 2012-10-04 |
JP2013535729A (en) | 2013-09-12 |
AU2011282258A1 (en) | 2013-01-31 |
JP5745627B2 (en) | 2015-07-08 |
KR20130132757A (en) | 2013-12-05 |
US9323808B1 (en) | 2016-04-26 |
WO2012012396A2 (en) | 2012-01-26 |
US8560562B2 (en) | 2013-10-15 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US9323808B1 (en) | Predictive query suggestion caching | |
US11514035B1 (en) | Query refinements using search data | |
JP5572596B2 (en) | Personalize the ordering of place content in search results | |
US9183277B1 (en) | Providing intent sensitive search results | |
TWI452476B (en) | Method,computer readable storage media,and system for relevancy sorting of user's browser history | |
US9336277B2 (en) | Query suggestions based on search data | |
US8504547B1 (en) | Customizing image search for user attributes | |
US9116992B2 (en) | Providing time series information with search results | |
US9679079B2 (en) | Search query suggestions based in part on a prior search and searches based on such suggestions | |
JP4962945B2 (en) | Bookmark / tag setting device | |
US20100082658A1 (en) | Systems and methods for surfacing contextually relevant information | |
US8959093B1 (en) | Ranking search results based on anchors | |
US9251202B1 (en) | Corpus specific queries for corpora from search query | |
CN109952571B (en) | Context-based image search results | |
US20150161267A1 (en) | Deduplication in Search Results | |
US20150169643A1 (en) | Providing supplemental search results in repsonse to user interest signal | |
WO2016135534A1 (en) | System and method for operating a browsing application | |
US9110943B2 (en) | Identifying an image for an entity | |
EP3238105A1 (en) | Application partial deep link to a corresponding resource | |
US9390183B1 (en) | Identifying navigational resources for informational queries |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PUAI | Public reference made under article 153(3) epc to a published international application that has entered the european phase |
Free format text: ORIGINAL CODE: 0009012 |
|
17P | Request for examination filed |
Effective date: 20130124 |
|
AK | Designated contracting states |
Kind code of ref document: A2Designated state(s): AL AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HR HU IE IS IT LI LT LU LV MC MK MT NL NO PL PT RO RS SE SI SK SM TR |
|
DAX | Request for extension of the european patent (deleted) | ||
17Q | First examination report despatched |
Effective date: 20160418 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: EXAMINATION IS IN PROGRESS |
|
RAP1 | Party data changed (applicant data changed or rights of an application transferred) |
Owner name: GOOGLE LLC |
|
APBK | Appeal reference recorded |
Free format text: ORIGINAL CODE: EPIDOSNREFNE |
|
APBN | Date of receipt of notice of appeal recorded |
Free format text: ORIGINAL CODE: EPIDOSNNOA2E |
|
APBR | Date of receipt of statement of grounds of appeal recorded |
Free format text: ORIGINAL CODE: EPIDOSNNOA3E |
|
APAF | Appeal reference modified |
Free format text: ORIGINAL CODE: EPIDOSCREFNE |
|
APBX | Invitation to file observations in appeal sent |
Free format text: ORIGINAL CODE: EPIDOSNOBA2E |
|
APBZ | Receipt of observations in appeal recorded |
Free format text: ORIGINAL CODE: EPIDOSNOBA4E |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R003 |
|
APBT | Appeal procedure closed |
Free format text: ORIGINAL CODE: EPIDOSNNOA9E |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: THE APPLICATION HAS BEEN REFUSED |
|
18R | Application refused |
Effective date: 20211018 |
|
P01 | Opt-out of the competence of the unified patent court (upc) registered |
Effective date: 20230519 |
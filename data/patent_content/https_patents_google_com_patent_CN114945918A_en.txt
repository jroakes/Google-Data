CN114945918A - Privacy-preserving virtual e-mail system - Google Patents
Privacy-preserving virtual e-mail system Download PDFInfo
- Publication number
- CN114945918A CN114945918A CN202180009075.4A CN202180009075A CN114945918A CN 114945918 A CN114945918 A CN 114945918A CN 202180009075 A CN202180009075 A CN 202180009075A CN 114945918 A CN114945918 A CN 114945918A
- Authority
- CN
- China
- Prior art keywords
- email address
- user
- new virtual
- identity server
- virtual email
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Pending
Links
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L63/00—Network architectures or network communication protocols for network security
- H04L63/08—Network architectures or network communication protocols for network security for authentication of entities
- H04L63/083—Network architectures or network communication protocols for network security for authentication of entities using passwords
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L63/00—Network architectures or network communication protocols for network security
- H04L63/08—Network architectures or network communication protocols for network security for authentication of entities
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F21/00—Security arrangements for protecting computers, components thereof, programs or data against unauthorised activity
- G06F21/30—Authentication, i.e. establishing the identity or authorisation of security principals
- G06F21/31—User authentication
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F21/00—Security arrangements for protecting computers, components thereof, programs or data against unauthorised activity
- G06F21/60—Protecting data
- G06F21/62—Protecting access to data via a platform, e.g. using keys or access control rules
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q10/00—Administration; Management
- G06Q10/10—Office automation; Time management
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q10/00—Administration; Management
- G06Q10/10—Office automation; Time management
- G06Q10/107—Computer-aided management of electronic mailing [e-mailing]
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q20/00—Payment architectures, schemes or protocols
- G06Q20/38—Payment protocols; Details thereof
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q20/00—Payment architectures, schemes or protocols
- G06Q20/38—Payment protocols; Details thereof
- G06Q20/382—Payment protocols; Details thereof insuring higher security of transaction
- G06Q20/3821—Electronic credentials
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q20/00—Payment architectures, schemes or protocols
- G06Q20/38—Payment protocols; Details thereof
- G06Q20/385—Payment protocols; Details thereof using an alias or single-use codes
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L51/00—User-to-user messaging in packet-switching networks, transmitted according to store-and-forward or real-time protocols, e.g. e-mail
- H04L51/48—Message addressing, e.g. address format or anonymous messages, aliases
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L63/00—Network architectures or network communication protocols for network security
- H04L63/04—Network architectures or network communication protocols for network security for providing a confidential data exchange among entities communicating through data packet networks
- H04L63/0407—Network architectures or network communication protocols for network security for providing a confidential data exchange among entities communicating through data packet networks wherein the identity of one or more communicating identities is hidden
- H04L63/0421—Anonymous communication, i.e. the party's identifiers are hidden from the other party or parties, e.g. using an anonymizer
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L63/00—Network architectures or network communication protocols for network security
- H04L63/14—Network architectures or network communication protocols for network security for detecting or protecting against malicious traffic
- H04L63/1441—Countermeasures against malicious traffic
- H04L63/1483—Countermeasures against malicious traffic service impersonation, e.g. phishing, pharming or web spoofing
Abstract
Methods, systems, and apparatus, including computer programs encoded on computer storage media, are described for creating and using virtual email addresses for user privacy protection and data security. In one aspect, the method comprises: the method includes receiving login credentials from a user device and at an identity server mapped to a first e-mail address of a first set of user information values, detecting a trigger event by the identity server, creating, by the identity server, a new virtual e-mail address separate from the first e-mail address and mapped to a second set of user information values different from the first set of user information values in response to detecting the trigger event, detecting, by the identity server, a request for credentials from a requesting entity, and transmitting, by the identity server, the new virtual e-mail address as new login credentials to the requesting entity in response to detecting the request.
Description
Cross Reference to Related Applications
Priority of U.S. application No.63/121,087 entitled PRIVACY-preserving virtual e-mail system, filed on 3.12.2020, this application claims priority, the disclosure of which is incorporated herein by reference.
Technical Field
The present description relates to data processing and email addresses linked to user information and capable of being used as identifiers for authentication and/or authorization purposes.
Background
The email address provides a way for the user to communicate over the internet. Typically, a user has one or more email addresses for various purposes. For example, a user may have a work email address for communicating with work colleagues, and a user may have a personal email address for communicating with friends outside of the work.
Disclosure of Invention
In general, one innovative aspect of the subject matter described in this specification can be embodied in methods that include receiving login credentials from a user device and at an identity server that are mapped to a first email address of a first set of user information values, detecting, by the identity server, a trigger event, in response to detecting the trigger event, creating, by the identity server, a new virtual email address that is separate from the first email address and that is mapped to a second set of user information values that is different from the first set of user information values, detecting, by the identity server, a request for credentials from a requesting entity, and in response to detecting the request, transmitting, by the identity server, the new virtual email address as new login credentials to the requesting entity.
These and other embodiments can each optionally include one or more of the following features. In some embodiments, the triggering event is one of a user input and a predetermined condition defined by the identity server.
In some embodiments, the login credentials are provided in the form of text input, audio input, or visual input.
In some embodiments, transmitting the new virtual email address as login credentials to the requesting entity comprises: transmitting, by the tokenization application programming interface, data representing the new virtual email address through the tokenization API, wherein the data representing the new virtual email is a token that cannot be traced back to the first email address.
In some embodiments, the method comprises: updating, by the identity server and based on the new virtual email address, the database by creating a database entry that maps the new virtual email address to the second set of user information values. In some implementations, the method further includes receiving input from the user device indicating a change to the new virtual email address, and updating, by the identity server and based on the input indicating the change to the new virtual email address, the database entry.
In some implementations, the request for credentials includes data indicating that the user device has accessed a web page having one or more text fields for entering credentials.
Other embodiments of this aspect include corresponding systems, apparatus, and computer programs, configured to perform the actions of the methods, encoded on computer storage devices.
Users typically have a primary email address that they use for many purposes, including receiving emails and acting as an identifier to create third party accounts, among other purposes. Due to the convenience for users, there is an increasing interest in using email addresses as identifiers. By allowing the use of an email address as an identifier for authentication and/or authorization purposes, a user can simply enter their email address to grant an application, content provider, or other entity access to any requested user information.
However, because a user will typically use a single primary email address over the course of many years, the primary email address may be associated with a large amount of user-specific information that accumulates throughout the time the user owns the email address of a mail. A user may not wish to grant a requesting entity access to the full set of information associated with their primary email address. The requesting entity can include, for example, a content provider or a governmental organization. Further, users may wish to create temporary identities when queried, and may not wish their activities to be stored and accessed. For example, using a shared computer to plan a surprise trip, someone who would like to get married to the other half during the trip may not want their other half to have access to their recent trip planning activities. In this case, using the email address as a temporary identifier rather than other types of identifiers (e.g., third party cookies) can help prevent data or other information from being leaked to unintended parties.
The following description discusses various techniques and systems for protecting the privacy of users as they browse the internet or use local applications on their devices while still enabling a personalized experience that results in a more efficient system by reducing the number of network requests that users must make to reach the online information they are looking for (reducing the required computing resources, required server access, required data transfer, and consumed user device battery resources).
The virtual email system allows users to create and manage virtual email addresses to be used as identifiers in place of cookies. Virtual email addresses can be used as a way to maintain identity that is convenient for users to use, and provide them with a degree of control over which data is being collected, how data is being collected, and how data is being used. By using a virtual e-mail address identifier separated from the user's primary identity by a protective layer, and by allowing the user to control information associated with a particular virtual e-mail identifier, the described system provides a convenient solution for the user that preserves or even improves the privacy available to them and allows requesting entities to access user information to which the user has granted access rights. The user can create a new virtual email address and adjust privacy settings at any time. The described system allows a user to control the data that is collected and the length of time that the data can be maintained on a granular basis. For example, the described system allows a user to create virtual email addresses at various levels of security, privacy, and protection, thereby improving data security.
The described system is able to automatically detect situations in which a new virtual email address should be generated, providing users with a seamless experience that provides them with control over how and when their data can be used without requiring the user to manually implement measures each time the user may want a new virtual email address.
The virtual email address can then be provided to a security API that performs, for example, tokenization of the virtual email address identifier to provide a layer of protection between the virtual email address and the requesting entity. The token can then be used for identification, authorization and/or authentication purposes.
Particular embodiments of the subject matter described in this specification can be implemented to realize one or more of the following advantages. For example, protecting user data using tokenization techniques prevents user information available to entities participating in a process from being leaked to other entities. In addition, by implementing other layers of protection (including encryption), the structure of the virtual e-mail management system prevents entities from accessing any information beyond that necessary for authentication or authorization. For example, the virtual email system can maintain separation between virtual email addresses such that the primary email address is not accessible by entities granted access to a virtual email address that maps to the primary email address. The techniques discussed throughout this document also enable personalized content selection, internet browsing and application usage, and other activities to be performed while preventing any system involving a content delivery or requesting entity from being able to track individual users across different websites, data integration platforms, time periods, and the like.
The techniques discussed herein include transmitting data using encoded data or tokens instead of actual data for purposes of authentication and/or authorization, such that computing systems participating in the processes discussed herein do not have access to the underlying data, but are still able to perform the operations of the processes using these codes. Using code instead of actual data protects the data even if the data is compromised, e.g., stolen or revealed to another entity, thereby improving data security.
The system also automatically generates a virtual email address for the user based on the triggering event, reducing the amount of input required by the user and reducing delays in content presentation. By automatically generating the virtual email address, the system reduces the necessary Central Processing Unit (CPU) cycles required to perform the process, for example, by not having to encrypt and decrypt a large number of inputs from the user, reduces the latency of performing the process, which is critical to implementations that use the process to select content for presentation on the user device, and makes the overall process more efficient. In addition, data can be cached locally at a particular computing system, thereby reducing latency for future requests for any cached data. Reducing latency also reduces the number of errors that occur while the user device waits for such content to arrive. Since content often needs to be provided in milliseconds and provided to mobile devices connected over a wireless network, reducing the delay in selecting and providing content based on user information is critical to preventing errors and reducing user frustration. By automatically generating a virtual email address and then using the email address for authentication and/or authorization, the system provides a seamless experience for the user.
The described techniques also provide a simplified process for maintaining a high level of privacy. By implementing a unified management system for various user identifiers that map to a user's single primary email address, the system provides a high standard for user privacy without requiring substantial changes to the input required by the user or to the authentication and/or authorization process of the requesting entity.
The details of one or more embodiments of the subject matter described in this specification are set forth in the accompanying drawings and the description below. Other features, aspects, and advantages of the subject matter will become apparent from the description, the drawings, and the claims.
Drawings
FIG. 1 is a block diagram of an example environment for a virtual email address system for privacy protection.
FIG. 2 depicts a data flow for a process of generating a virtual email address.
FIG. 3 depicts a tree structure of email addresses generated and managed by a virtual email address system.
FIG. 4 is a flow diagram of an example process of generating a virtual email address.
FIG. 5 is a block diagram of an example computer system.
Like reference numbers and designations in the various drawings indicate like elements.
Detailed Description
The following description relates to providing users with control over the generation and management of email address identifiers. Because a user will typically retain the same primary email address for a long period of time and will typically not delete the email address, it is typically linked to a large amount of user information collected during that time. In addition, the primary email address can be used as a credential to log into an application or website, which the user can use as a credential to log into many of his accounts or to access other data.
A user may not wish to provide every requesting entity, such as a website, vendor, content provider, etc., with all data linked to their primary email address, or to allow such entities to collect user data based on their primary email address over time. However, creating a new email address to serve as a credential for each new requesting entity and managing information can be tedious, time consuming, and uses more computing resources than automated techniques for generating and using multiple email addresses.
To address this problem, the described system generates a virtual email address to be used as an identifier, for example, where a user may wish to limit the amount or type of information provided to a requestor and/or the amount of time the requestor has access to the information. The system can automatically detect an event or condition that triggers the creation of a virtual email address for the user, and also allow the user to manually initiate the creation of a new virtual email address. Users can also access the system through their user devices, communicate with different applications, websites, and request entities through Application Programming Interfaces (APIs).
The virtual e-mail address is provided to a database storing user profile information. The profile information is organized in a database by email address. For example, the profile information can be indexed by email address. Once the virtual email address is linked to the profile information within the database, the virtual email address can be used as an identifier or other credential for authentication and/or authorization purposes. As described in further detail below, the user can manage the setting of the email address or delete the email address at any time.
FIG. 1 is a block diagram of an example environment 100 for a privacy-preserving virtual email address system 125. The example environment 100 includes a network 102, such as a Local Area Network (LAN), a Wide Area Network (WAN), the Internet, or a combination thereof. Network 102 connects Electronic document server 104 ("Electronic document Servers"), user devices 106, security API 120, virtual email address system 125 (which includes privacy identity server 130 and identity database 140), and data integrator 150. The example environment 100 may include many different electronic document servers 104, user devices 106, and data integrators 150.
The user device 106 is an electronic device capable of requesting and receiving resources (e.g., electronic documents) over the network 102. Example user devices 106 include personal computers, wearable devices, smart speakers, tablet devices, mobile communication devices (e.g., smart phones), smart appliances, gaming systems, and other devices capable of sending and receiving data over the network 102. In some implementations, the user device can include a speaker that outputs audible information to the user and a microphone that receives audible input (e.g., spoken input) from the user. The user device can also include a digital assistant that provides an interactive voice interface for submitting input and/or receiving output provided in response to the input. The user device can also include a display for presenting visual information (e.g., text, images, and/or video). The user device 106 typically includes a user application, such as a web browser, to facilitate sending and receiving data over the network 102, but a native application executed by the user device 106 can also facilitate sending and receiving data over the network 102.
The user device 106 includes software such as a browser or operating system. In some implementations, the software allows a user to access information over a network, such as network 102, retrieve the information from a server and display the information on a display of user device 106. In some embodiments, the software manages the hardware and software resources of the user device 106 and provides common services for other programs on the user device 106. The software can act as an intermediary between the program and the hardware of the user device. In this particular example, the application 112 running on the user device 106 is software that allows the user to access information over the network 102.
An electronic document is data that presents a collection of content at a user device 106. Examples of electronic documents include web pages, word processing documents, Portable Document Format (PDF) documents, images, video, audio, search result pages, streaming video game content, and feed sources. Local applications (e.g., "application apps"), such as applications installed on a mobile computing device, a tablet computing device, or a desktop computing device, are also examples of electronic documents. Electronic documents 105 ("Electronic documents") can be provided by Electronic document server 104 to user devices 106. For example, the electronic document server 104 can include a server hosting a publisher's website. In this example, the user device 106 can initiate a request for a given publisher web page, and the electronic document server 104 hosting the given publisher web page can respond to the request by sending machine hypertext markup language (HTML) code that initiates presentation of the given web page at the user device 106.
Electronic documents can include a variety of content. For example, the electronic document 105 can include static content (e.g., text or other specified content) that is within the electronic document itself and/or does not change over time. The electronic document can also include dynamic content that can change over time or on a per-request basis. For example, a publisher of a given electronic document can maintain a data source that is used to populate portions of the electronic document. In this example, the given electronic document can include a tag or script that causes the user device 106 to request content from a data source when the given electronic document is processed (e.g., rendered or executed) by the user device 106. The user device 106 integrates content obtained from the data source into the presentation of the given electronic document to create a composite electronic document that includes the content obtained from the data source. The media content referred to herein is a digital content.
For each user, the application and content provider can maintain identification, authentication, and/or authorization information for each user accessing their data. Typically, this information is stored and categorized using a small piece of data called a cookie that is stored on the user device. However, cookies are typically created and stored by each application creator or content provider and can be used to compile a record of a person's historical activities without input from the user regarding the type or amount of information that can be collected, the amount of time information can be retained, or regarding who can share information with. In addition, the security of cookies typically depends on the security of the publishing website, which can be different. These attributes of cookies can provide privacy and security risks to users.
The secure API 120 facilitates transmission of sensitive data to third parties, which replace the received data with non-sensitive placeholders. For example, the security API 120 can perform tokenization to replace the received data with a token. The security API 120 can be used to protect and desensitize data by replacing received data with irrelevant values. For example, unrelated values can have the same size and format. The token can retain elements of the original data and then be provided for an authentication or authorization process, and the original data is stored in a secure token vault. Tokenized data provides advantages over other forms of protection in that the tokenized data is indecipherable and irreversible. Since there is no mathematical relationship between the token and the original received data, the token cannot be returned to its original form.
The identity server 130 is a server that allows email addresses to be created and managed. In some implementations, the identity server 130 can be used to create and manage both virtual and actual email addresses. The identity server 130 includes an email management module 132 and a user interface 134. The identity server 130 can be implemented as one or more processors. In some embodiments, the identity server 130 can be a single server. The identity server 130 can also be implemented as a distributed system, with components located on different networked computers.
The email management module 132 implements, for example, an email management module that generates virtual email addresses at particular times. For example, the email management module 132 can detect an event that triggers the generation of a virtual email. These events, also referred to as trigger events, can be specified by the user, the identity server 130, and/or the requesting entity, among other entities. For example, the email management module 132 can detect that the current user has navigated to a website that they have never visited before, and that the website is requesting credentials. The email management module 132 can then determine that the access of the website has not been previously accessed by the user, and that the request for credentials is a triggering event specified by the identity server 130 and generate a new virtual email address that is linked to the user's primary email. The new virtual email address can be provided to a new web site, for example, instead of the user's existing email address.
The email management module 132 can generate or modify a virtual email address with certain parameters. For example, the email management module 132 can generate a virtual email address having a particular privacy protection level, having a particular set of user information, and linked to the user's primary email address. In some implementations, there can be multiple layers of email addresses between a particular virtual email address and the user's primary email address. The structure in which the email address linked with the user's main email address is stored can be in the form of, for example, a tree structure. The connection between the tree structure and each email address is described in detail below with respect to fig. 3.
The user interface 134 of the identity server 130 allows a user to provide input to the email management module 132. For example, the user interface 134 allows a user to perform operations such as initiating the generation of a new virtual email address, initiating an input creation parameter for a new virtual email address, changing an existing email address parameter, and deleting an existing email address, among other operations. The identity server 130 can provide the user interface 134 to the client device 106 and/or update the user interface 134 at the user device 106. For example, the identity server 130 can provide for the user device 106 to generate a user interface and display data to the user of the user device 106.
The identity database 140 uses the user's personal identifier to store user information. For example, identity database 140 can be an email-based information storage system, where the information is user information linked to a particular email address. In this example, the personal identifier is a particular email address. The information can include metrics determined based on a user of a particular email address having provided authorized data to the requesting entity to collect. For example, the information can include location information of the user and the average amount of time that the user has spent visiting a particular coffee shop the last month.
The data integrator 150 combines data from different sources and provides a user with a unified view of the data that can be more informative or useful than the original presentation of the data. The data integrator 150 merges different types of data and allows a user to perform actions such as querying or analyzing the data. Within the system 100, the data integrator 150 receives and processes data for use by another user, such as a requesting entity.
FIG. 2 depicts a data flow 200 of a process for generating a virtual email address in the example environment of FIG. 1. The operations of data flow 200 are performed by various components of system 100. For example, the operations of the data flow 200 can be performed by the user device 106 communicating with the identity server 130 through the security API 120.
The flow begins at step a, where the user logs into their primary email address. For example, the user can log into the user's main email address, exampleemail address @ exampledomain. Users can log into their email addresses through the user device 106. For example, a user can log into their email address using an email client on the user device 106. In some implementations, users can log into their email addresses through the application 112. Application 112 can be an internet browser integrated with an email client, and application 112 can be, for example, a web browser through which a user can access a web-based email client.
The flow continues with step B where the user is able to log in to the application facilitating internet browsing through the authorization criteria. For example, the user can log into the application 112 through an authorization standard such as oAuth, an open authorization standard. The standard allows a user to log into a third party application, website, or other destination using an email address. For example, a user can log into application 112, a web browser, using their primary email address, exampleemail address @ exampledomain. The authorization criteria can perform token exchange using, for example, the security API 120.
The flow continues to step C where the user is able to browse websites and other destinations using an application that facilitates internet browsing and identify themselves to their browsing destinations using their primary email address. For Example, a user can use the application 112 to browse the internet and use their main email address, exampleemail address @ exampledomain.
The flow continues with step D where a new virtual e-mail address is generated for the user. A virtual e-mail address can be created, as described with respect to step D-1, where the user manually initiates the generation of a new virtual e-mail address, or as described with respect to step D-2, where the identity server 130 automatically initiates the generation of a new virtual address.
In step D-1, the user can initiate generation of a unique email address and specify parameters of the email address. For example, a user can click on a button, icon, or other control within user interface 134 and enter "News Websites email Address" as a new local section into a text field, "News Websites" as its destination into another text field, and select their name and location from a list of selectable items as information that can be accessed by the requesting entity for which the virtual email address is used as an identifier. In this way, the user can control which virtual email address is used for various purposes. User interface 134 provides an email generation and administration UI that allows users to edit their information and indicate which data they wish to share with the requesting entity. Users can remove or change their email addresses and attributes at any time via the user interface 134.
For example, the user interface 134 allows a user to create, edit, and delete email addresses. User interface 134 can provide users with an organized view of their email addresses, for example, sorted according to their particular attributes. User interface 134 provides filtering and sorting options that allow users to view a subset of their email addresses. In some implementations, the user interface 134 can present a tree view of their email addresses to the user. This structure will be described in detail below with reference to fig. 3.
In some implementations, a random local portion of a new virtual email address can be selected for the user and presented for approval. In some implementations, users can create their own local portion that is different from the local portion of their primary email address. The new virtual email address can be hosted by the same domain as the primary email address. In some implementations, the new virtual email address is hosted by a domain that is different from the domain hosting the primary email address.
The user can manually access the user interface 134 by selecting a shortcut or activating the identity server 130. For example, the user can select the user interface 134 from their desktop on the user device 106. The user can access the user interface 134 for launching or accessing an application through various other methods, including through audio input, gestures, touch input, and the like. For example, the user can speak a trigger word into the personal assistant device to initiate the user interface 134.
In some implementations, the user interface 134 can be triggered for display to the user. The user interface 134 can be triggered for display based on specific triggering events specified by the user, the identity server 130, and/or the data integrator 150, among other things. For example, the user interface 134 can be triggered for display to the user when the user visits a shopping website that requests credentials from the user. The user is able to access any creation and management functions provided by the identity server 130 through the user interface 134 whenever presented. In some implementations, a particular view of the user interface 134 is presented for a particular trigger event. For example, when a user accesses a website on a blacklist of websites maintained by the identity server 130, the user can be provided with a specific, short list of actions that includes navigating away and locking all email addresses and user information from being accessed. In another example, when a user accesses a non-blacklisted website, a list of virtual email addresses that can be used for the website can be presented. In this manner, the user is able to select one of the email addresses to provide to the website in a simple and efficient manner.
In some implementations, the user interface 134 can display user information stored and linked to a particular email address. The user interface 134 can also display a history of using a particular email address as an identifier. For example, the user interface 134 can display websites, destinations, and other requesting entities that have access to a particular email address as the user's identity.
In step D-2, wherein an e-mail managing module, such as e-mail managing module 132, is able to automatically create a new virtual e-mail address with specific attributes for the user. The email management module 132 can implement various default triggering events or conditions for creating a new virtual email address. For example, the email management module 132 can create default trigger conditions to create a new virtual email address for one-time use, one website use, one data integrator use, and the like. The email management module 132 can also specify when a virtual email address including any associated user data should be deleted. For example, if an email address is created for one-time use, the email management module 132 can specify that the email address should be deleted immediately after use. The email management module 132 can specify a trigger event, time, condition, etc. that initiates deletion of the email address. The email management module 132 is also capable of editing email address settings and attributes. For example, the email management module 132 can update email addresses to reduce access to or remove user information.
In some implementations, the email management module can use temporary email addresses that never collect, store, or provide user data. This type of temporary email address can be used in situations where unsafe or undesirable information is collected or exchanged. In this example, no user information for the user may be associated with the temporary email address.
The email management module improves the user experience by automatically detecting opportunities and situations where a new virtual email address can or should be used as an identifier for the user. In addition to providing a seamless and simple user experience, the identity server 130 and user interface 134 allow the user to exercise control over the automatically created email addresses by providing the user with the option to continue using the newly created email address, to edit properties of one or more email addresses, and the like.
The email management module uses signals about the user and their activities and destinations to determine the triggering event. The trigger event can be predetermined or detected when it occurs. For example, the email management module can determine that a new virtual email address should be created each time the user enters the search term combination, and the new virtual email address should be deleted after the session is ended, based on the user history of initiating the creation of a new virtual email address each time the user uses the search terms "best," "surprise," "vacation," "location," and deleting the virtual email address after the session is ended. In another example, the email management module can determine based on a user's activities including visiting various jewelry store websites and clicking on different types of engagement rings. Email creation can then create a new virtual email address to be used whenever it is detected that the user is visiting a jewelry store website, so that this type of activity is linked only to virtual email addresses created specifically for that purpose.
The email management module can trigger the display of the user interface 134 to the user to display the new virtual email address and its parameters to the user for approval or for information to the user upon creation of the new virtual email address. For example, the email management module can create a new virtual email address when the identity server 130 detects that the user has entered the search terms "best," "surprise," "vacation," "location" through the triggered display of the application 112, web browser, and user interface 134 including the newly created email address and its parameters. The user can then approve the creation and continued use of the newly created virtual email address, dismiss the user interface 134 to continue using the existing default email address for the triggering case, select a different email address to use, navigate away from the search, and so forth.
The trigger event can be time-based. For example, the email management module can specify a trigger event to delete email addresses with a particular set of attributes every week. The trigger condition can be the visit of a particular website or destination. For example, the email management module can specify a trigger event to create a new virtual email address when accessing the Shopping For Cute Bird Stuff's website, if not already mapped to that website. The triggering event can be the closing of a browsing session. For example, the email management module can specify a trigger event to create a new virtual email address when a new browsing session is opened and delete the current email address when the browsing session is closed. The triggering event can be the launching of a particular application. For example, upon launching a web browsing application different from the web browsing application 112 through which the user logged into their primary email address in step 1, the email management module can specify a trigger event to create a new virtual email address. The trigger condition can be based on a characteristic of the user equipment 106. For example, when a user has logged in using a user device 106 that they typically do not use or that is not used, the email management module can specify a trigger event to create a new virtual email address.
Time-based triggering events can be used to reclaim and/or update email addresses at a specified frequency. That is, email addresses can be removed from use and returned to service according to a specified frequency. This can limit the likelihood that an entity can use a combination of email address attributes and other user identification information to determine the identity of the user, such as a cookie associated with the user or a user group identifier that identifies a user interest group that includes the user as a member.
In some implementations, the frequency with which email addresses are reclaimed can be determined and/or adjusted based on information related to the user. For example, the frequency can be based on a measure of the user's online activity (e.g., how often or how long the user spends on the network), the amount of third-party content provided to the user, the amount of a database that includes information about the user, and so forth. For example, email addresses of more active users may be reclaimed more frequently than email addresses of less active users, because it is more likely that a larger number of entities have access to email addresses and other information related to more active users than less active users. Thus, without more frequent reclamation, the entity will have a better chance of knowing the identity of a more active user than a less active user.
The email address can also be updated after being used for the user. For example, a user can choose to use a particular email address when visiting a particular website. In response, the email management module can prevent use of the email address for a specified duration and then update the email address for further use by the user after the duration expires. The email management module can be integrated with a database of requesting entities to detect when email addresses are used and recorded. Alternatively, the user can provide data to the email management module indicating that a particular email address is used, for example, using user interface 134. In another example, the user interface 134 can report to the email management module when the user selects a particular email address for the requesting entity.
In some implementations, multiple users can share an email address. Each user can have a subaccount within the email address. This can protect individual user privacy by not linking email addresses to specific users accessing the website using a shared email address.
A plurality of users can be grouped, e.g., assigned, to an e-mail address based on an interest category of the e-mail address and user information indicating that the user is interested in the interest category. For example, the user's online activity can be analyzed, e.g., using privacy security techniques on the user's user device, to determine one or more categories of interest to the user. The email management module can receive one or more interest categories of the user from the user device of the user and compare the interest categories to interest categories for various email addresses. If there is a match, the email management module can assign an email address to the user and include the email address in a list of email addresses that can be used when the user visits the website.
For example, each user who determines to be interested in a puppy can be assigned the email address "puppies @ example. Each of these users can then use the email address to access a website and/or other electronic resources. In this manner, the website will not be able to identify individual users, but will be able to customize content for the user, for example, by providing puppy-related content or other content that is also of interest to users who are interested in the puppy.
In some implementations, the email management module can maintain a list of websites where a trigger event is defined. For example, the email management module can maintain a blacklist of websites for which it is recommended to create new virtual email addresses without user accessible information. In some implementations, the email management module can generate a score for each website based on attributes such as the category of content provided, the third party generated trust score, the number of visitors over a period of time, the trustworthiness of the visitor, and the like. For example, the mail management module may be capable of implementing a scoring mechanism ranging from 0 to 100, with 100 being the most trustworthy. In this example, the email management module can assign a score of 10 to the website from which users often order merchandise but have issued complaints that they did not receive merchandise and that they have begun receiving spam at the email address they used as a credential for the website. User visits to websites with scores that satisfy a threshold, e.g., by being less than or equal to the threshold, can be triggering events.
In some implementations, the email management module can be triggered by other inputs or events, such as defined audio input from a user. For example, if the user claps to switch to a different email address identity or create a new virtual email address. When a user has granted access to a camera of their device and/or defined a gesture as a triggering event, the triggering event can include a visual input from the user. For example, if the user blinks twice quickly, or performs special gestures such as waving his hand in a particular way, the email management module can detect these gestures and trigger the generation of a new virtual email address.
In some implementations, the game player user's email management module can create a new virtual email address for each game to maintain anonymity in the online setting. For example, a user can log into a streaming game platform using an email address as an identifier. The email management module can create a different virtual email address for each type of game (e.g., Role Playing Game (RPG), trivia game, tactical game, etc.) the user is playing.
Because the user's primary email address and all linked virtual email addresses are masked from third party requesting entities but are visible to the identity server 130, the identity server 130 can use the stored structure, as described in detail with respect to fig. 3, to defend against malicious or fraudulent activity by the user in the masquerading of a surface anonymous email address, which is a virtual email address created by the system.
In addition, the system provides flexibility to the user, allowing the user to access resources anonymously. For example, a user can create a separate email account to send an email. The user can have one email account for sending personal email and one email account for sending email to work colleagues and for applying for work. Because some email accounts may have different settings and limitations, such as a limit on the number of daily emails, a user has more flexibility by having different email accounts because the number of personal emails sent does not affect the number of work emails that the user can send.
In some implementations, the email management module 132 analyzes the aggregate behavior of the users of the identity server 130 using machine learning. For example, the email management module 132 can determine that a user of the identity server 130 will typically create a new virtual email address when visiting certain types of websites, such as blogs, for the first time, and will reuse the same virtual email address for subsequent visits and similar websites. In another example, the email management module 132 can determine that the average user deleted all virtual email addresses every month while retaining their primary email addresses. The e-mail management module 132 uses these learning behaviors to specify trigger events and conditions.
The email management module is capable of detecting and analyzing email address specific activities, resolving and classifying interactions and actions performed using a particular email address as an identifier. For example, when a user logs into their home email address and visits a travel website that suggests nearby hot events, the email management module can initiate an update of the user's information to update their location.
In some implementations, the user can specify, through the user interface 134, a set of automatic actions that the identity server 130 should perform when a trigger event is detected. For example, the user can provide input through the user interface 134 indicating that a new virtual email address should be created daily and automatically used for identification, authentication, and/or authorization purposes during the day that the requesting entity requests credentials or information from the user. The user can also specify that the new virtual email address should be deleted at the end of the day.
The flow continues to step E where the identity server 130 provides the new E-mail address identity to the identity database 140. For example, the identity server 130 can pass specified information or types of information made available to the requesting entity to the identity database 140 through the user's new virtual email address identity.
The identity database 140 stores this user information in a user profile organized by email address. A user of user device 106 can access, edit, and/or delete information within identity database 140 via user interface 134. In some implementations, the user can directly access the data stored within the identity database 140 through the user interface 134. In other embodiments, the user is able to perform operations through the user interface 134 that cause the identity server 130 to access, edit, and/or delete information within the identity database 140.
The flow continues to step F where the identity server 130 communicates the user selected email address identity and associated user information to the requesting entity. The email address identity can be communicated to the requesting entity, such as the content provider described with respect to step F-1 or the data integrator described with respect to step F-2. The e-mail address identity can be the new virtual e-mail address identity created in step D or a different e-mail address identity specified by the user.
In step F-1, the identity server 130 communicates the user-selected email address identity to the requesting entity through the secure API 120. In this particular example, the requesting entity is an electronic document server 104 that can be, for example, a content provider or a content publisher. For example, the requesting entity can be an online store that maintains a website through which the user can create an account and purchase goods.
In step F-2, the identity server 130 communicates the user-selected email address identity to the requesting entity through the secure API 120. In this particular example, the requesting entity is a data integrator 150 that is capable of integrating and compiling data and performing data analysis on the data.
By communicating the user-selected email address identity to the requesting entity, the identity server 130 can perform authentication and/or authorization processes to provide user information and/or credentials to the requesting entity.
For example, the identity server 130 can communicate to the requesting entity, via the user's email address, the specified information or type of information that is made available to the requesting entity. The communication can be performed with the entity regardless of the platform and/or format used by the requesting entity through a security system, such as the security API 120. The communication can be performed with the entity regardless of the platform and/or format used by the requesting entity through the security API 120 capable of performing the security token exchange.
FIG. 3 depicts a tree structure 300 of email addresses generated and managed by a virtual email address system, such as the virtual email address system 125 of FIG. 1. As depicted in fig. 1 and 2, the email addresses within the tree structure 300 are email addresses of users of user devices 106 belonging to the system. The tree structure 300 can be stored, for example, within the identity database 140.
The tree structure 300 is a structure that depicts links and relationships between users of the user's device's primary email address and virtual email addresses associated with the user's primary email address.
The email address 310 is a virtual email address news web. Email address 320 is the virtual email address for the month, mmyyyemail. For example, an email address 320 can be created and used for a particular month of a particular year. The email addresses 310 and 320 are second level email addresses that are directly linked to the primary email address 302 and are at a lower level than the top level email address 302.
Email addresses 312 and 314 are virtual email addresses for a particular news web site: site1.news websites. exampleemail address @ exampledomain.com and site2.news websites. exampleemail address @ exampledomain.com. Email addresses 322 and 324 are virtual email addresses for a particular date:
d1. mmyyy. exampleemail address @ exampledomain.com and d2. mmyyy. exampleemail address @ exampledomain.com. The email addresses 312, 314, 322, and 324 are third level email addresses linked to the primary email address 302 by the second level email addresses 310 and 320 and are at a lower level than the second level email addresses 310 and 320.
The email address 326 is a virtual email address for one-time use on a specific date, ontime.d2. mmyyy. exampleemail address @ exampledomain.com. Email address 326 is a fourth level email address linked to primary email address 302 by third level email address 324 and second level email address 320. In this particular example, email address 326 is a bottom level email address and is at a lower level than third level email addresses 312, 314, 322, and 324.
There is a protection layer and an encryption layer between each level of email addresses. For example, while the tree structure 300 clearly shows the associations between each email address and between levels of email addresses, and these relationships are maintained by the virtual email address system, the system only provides the requesting entity with the email address specified by the user, e.g., for that entity or for purposes associated with that entity (e.g., the requesting entity's news website is intended to be a news website). There may not be any mechanism for receiving a requestor of a user's email address through a tokenization process or exchange. This method of storing email addresses protects the privacy of the user of the virtual email address system by preventing a requesting entity, such as a corporate entity, government entity, or data integrator, from tracking email address identifiers to primary email addresses 302 at any level other than the top level.
By creating levels of email addresses each of which guards each other, the virtual email address system cuts off lower level email addresses from the top level primary email address 302. Each email address is guarded against other addresses such that user data associated with each email address is inaccessible to lower level email addresses. That is, the user data associated with the email address 310 and the email address 310 itself are not provided to the requesting entity that will receive the email address 312 or the email address 314.
The identity server 130 can update the tree structure 300 when a user accesses, creates, edits and/or deletes data in the identity database 140 via the user interface 134. The user can access the emails within the tree structure 300 one by one or the user can access more than one email at a time. For example, a user can periodically delete each bottom level email linked to their primary email address.
In some implementations, the virtual email address can be reclaimed. For example, the deleted virtual email address can be released back into the pool of available email addresses. As described above, virtual email addresses can be reclaimed at a specified frequency, which can be dynamically adjusted.
Fig. 4 is a flow diagram of an example process 400 for generating a virtual email address. In some implementations, the process 400 can be performed by one or more systems. For example, the process 400 can be implemented by the identity server 130 and/or the user device 106 of fig. 1-3. In some implementations, the process 400 can be implemented as instructions stored on a computer-readable medium, which may be non-transitory, and when the instructions are executed by one or more servers, the instructions can cause the one or more servers to perform the operations of the process 400.
In some embodiments, the login credentials are provided in the form of: text input, audio input, or visual input. For example, a user of the user device 106 can enter their login credentials through a text field, provide a voice sample, perform a gesture, and so forth.
In some embodiments, the triggering event can be a user input or a predetermined condition defined by the identity server. For example, the identity server 130 can detect a user click on a user interface element through the user interface 134 to indicate that the user wishes to initiate creation of a new virtual email address.
In response to detecting the triggering event, process 400 continues with the creation, by the identity server, of a new virtual email address that is separate from the first email address and that maps to a second set of user information values that is different from the first set of user information values (406). For example, the identity server 130 can create a new virtual email address that is separate from the primary email address. The new virtual email address is linked to the primary email address within the identity server 130, but the relationship cannot be determined by a third party, such as the requesting entity, as described above with respect to fig. 2 and 3.
In some implementations, the request for credentials can be data indicating that the user device has accessed a web page having one or more text fields for entering credentials. For example, the identity server 130 can simply detect that the user device 106 has navigated to a web page having one or more text fields or other user interface elements through which credentials, such as contact information or can be entered.
In response to detecting the request, process 400 continues with transmitting, by the identity server, the new virtual email address as a login credential to the requesting entity (410). For example, the identity server 130 provides the new virtual email address to the requesting entity, such as a business that owns the website the user visits.
In some embodiments, transmitting the new virtual email address as login credentials to the requesting entity comprises: the data representing the new virtual email address through the tokenization API is transmitted through the tokenization application programming interface and is a token that cannot be traced back to the first email address. For example, the identity server 130 can transmit the new virtual email address as an identifier to the requesting entity through the security API 120.
The identity server function updates the database based on the new virtual email address by creating a database entry that maps the new virtual email address to the second set of user information values. For example, the identity server 130 can update the identity database 140 based on the new virtual email address by creating a database entry that maps the new virtual email address to a set of user information that is made available to the requesting entity for which the user provided the new virtual email address as an identifier.
In some implementations, the process 400 includes receiving input from the user device indicating a change to the new virtual email address, and then updating, by the identity server and based on the input indicating the change to the new virtual email address, the database entry. For example, the identity server 130 can receive an input from the user device 106 via the user interface 134 indicating that the user wants to delete a new virtual email address, and the identity server 130 can delete an entry within the identity database 140.
FIG. 5 is a block diagram of an example computer system 500 that can be used to perform the operations described above. The system 500 includes a processor 510, a memory 520, a storage device 530, and an input/output device 540. Each of the components 510, 520, 530, and 540 can be interconnected, for example, using a system bus 550. Processor 510 is capable of processing instructions for execution within system 500. In one implementation, the processor 510 is a single-threaded processor. In another implementation, the processor 510 is a multi-threaded processor. The processor 510 is capable of processing instructions stored in the memory 520 or on the storage device 530.
The memory 520 stores information within the system 500. In one implementation, the memory 520 is a computer-readable medium. In one implementation, the memory 520 is a volatile memory unit or units. In another implementation, the memory 520 is a non-volatile memory unit or units.
The storage device 530 is capable of providing mass storage for the system 500. In one implementation, the storage device 530 is a computer-readable medium. In various different implementations, the storage device 530 can include, for example, a hard disk device, an optical disk device, a storage device shared by multiple computing devices over a network (e.g., a cloud storage device), or some other mass storage device.
The input/output device 540 provides input/output operations for the system 500. In one embodiment, the input/output devices 540 can include one or more of a network interface device, such as an Ethernet card, a serial communication device, such as, and RS-232 port, and/or a wireless interface device, such as, and 802.11 card. In another embodiment, the input/output devices can include driver devices configured to receive input data and transmit output data to other input/output devices, such as a keyboard, a printer, and a display device 560. However, other implementations can also be used, such as mobile computing devices, mobile communication devices, set-top box television client devices, and so forth.
Although an example processing system has been described in fig. 5, implementations of the operation of the subject matter and the functions described in this specification can be implemented in other types of digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them.
The media does not necessarily correspond to a file. The media may be stored in a portion of a file containing other documents, in a single file dedicated to the document in question, or in multiple coordinated files.
Where the techniques discussed throughout this document collect and/or use information about a user, a user (such as an end user, content generator, or content provider, among other types of users) may be provided with controls that allow the user to make selections as to whether and when the systems, programs, or features described herein may be able to collect user information (e.g., about the user's social network, social behavior, or activity, profession, the user's preferences, or the user's current location), and whether to send content or communications from a server to the user. In addition, certain data may be processed in one or more ways before it is stored or used, so that personally identifiable information is removed. For example, the identity of the user may be processed such that any personal identity information of the user cannot be determined, or the geographic location of the user may be generalized (such as at a city, zip code, or state level) with location information obtained such that a particular location of the user cannot be determined. Thus, the user may have control over which information about the user is collected, how the information is used, and which information is provided to the user.
Embodiments of the subject matter and the operations described in this specification can be implemented in digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them. Embodiments of the subject matter described in this specification can be implemented as one or more computer programs, i.e., one or more modules of computer program instructions encoded on computer storage medium(s), for execution by, or to control the operation of, data processing apparatus. Alternatively or in addition, the program instructions can be encoded on an artificially generated propagated signal, e.g., a machine-generated electrical, optical, or electromagnetic signal, that is generated to encode information for transmission to suitable receiver apparatus for execution by data processing apparatus. The computer storage medium can be, or be included in, a computer-readable storage device, a computer-readable storage substrate, a random or serial access memory array or device, or a combination of one or more of them. Further, while the computer storage medium is not a propagated signal, the computer storage medium can be a source or destination of computer program instructions encoded in an artificially generated propagated signal. The computer storage medium can also be, or be included in, one or more separate physical components or media (e.g., multiple CDs, disks, or other storage devices). The methods described in this specification may be computer-implemented methods.
The operations described in this specification can be implemented as operations performed by data processing apparatus on data stored on one or more computer-readable storage devices or received from other sources.
The term "data processing apparatus" encompasses all types of apparatus, devices, and machines for processing data, including by way of example a programmable processor, a computer, a system on a chip, or a plurality of the foregoing, or a combination of the foregoing. The apparatus can comprise special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit). The apparatus can include, in addition to hardware, code for creating an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, a cross-platform runtime environment, a virtual machine, or a combination of one or more of them. The apparatus and execution environment are capable of implementing a variety of different computing model infrastructures, such as Web services, distributed computing and grid computing infrastructures.
A computer program (also known as a program, software application, script, or code) can be written in any form of programming language, including compiled or interpreted languages, declarative or procedural languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, object, or other unit suitable for use in a computing environment. The computer program may, but need not, correspond to a file in a file system. A program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub programs, or portions of code). A computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
The processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform actions by operating on input data and generating output. The processes and logic flows can also be performed by, and apparatus can also be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).
Processors suitable for the execution of a computer program include, by way of example, both general and special purpose microprocessors. Generally, a processor will receive instructions and data from a read-only memory or a random access memory or both. The essential elements of a computer are a processor for performing actions in accordance with the instructions and one or more memory devices for storing instructions and data. Generally, a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks. However, a computer need not have such devices. Moreover, the computer can be embedded in another device, e.g., a mobile telephone, a Personal Digital Assistant (PDA), a mobile audio or video player, a game console, a Global Positioning System (GPS) receiver, or a portable storage device (e.g., a Universal Serial Bus (USB) flash drive), to name a few. Devices suitable for storing computer program instructions and data include all forms of non-volatile memory, media and storage devices, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks; magneto-optical disks; and CD-ROM and DVD-ROM disks. The processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
To provide for interaction with a user, embodiments of the subject matter described in this specification can be implemented on a computer having a display device, e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor, for displaying information to the user and a keyboard and a pointing device, e.g., a mouse or a trackball, by which the user can provide input to the computer. Other types of devices can also be used to provide for interaction with a user; for example, feedback provided to the user can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; input from the user can also be received in any form, including acoustic, speech, or tactile input. In addition, computers can interact with users by sending and receiving documents to and from devices used by the users; for example, by sending a Web page to a Web browser on the user's client device in response to a request received from the Web browser.
Embodiments of the subject matter described in this specification can be implemented in a computing system that includes a back end component, e.g., as a data server, or that includes a middleware component, e.g., an application server, or that includes a front end component, e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described is this specification, or any combination of one or more such back end, middleware, or front end components. The components of the system can be interconnected by any form or medium of digital data communication, e.g., a communication network. Examples of communication networks include a local area network ("LAN") and a wide area network ("WAN"), an internetwork (e.g., the internet), and a peer-to-peer network (e.g., an ad hoc peer-to-peer network).
The computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other. In some embodiments, the server transmits data (e.g., HTML pages) to the client device (e.g., for purposes of displaying data to a user interacting with the client device and receiving user input from a user interacting with the client device). Data generated at the client device (e.g., a result of the user interaction) can be received at the server from the client device.
While this specification contains many specifics of particular implementations, these should not be construed as limitations on the scope of any invention or of what may be claimed, but rather as descriptions of features specific to particular embodiments of particular inventions. Certain features that are described in this specification in the context of separate embodiments can also be implemented in combination in a single embodiment. Conversely, various features that are described in the context of a single embodiment can also be implemented in multiple embodiments separately or in any suitable subcombination. Moreover, although features may be described above as acting in certain combinations and even initially claimed as such, one or more features from a claimed combination can in some cases be excised from the combination, and the claimed combination may be directed to a subcombination or variation of a subcombination.
Similarly, while operations are depicted in the drawings in a particular order, this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order, or that all illustrated operations be performed, to achieve desirable results. In some cases, multitasking and parallel processing may be advantageous. Moreover, the separation of various system components in the embodiments described above should not be understood as requiring such separation in all embodiments, and it should be understood that the described program components and systems can generally be integrated in a single software product or packaged into multiple software products.
Thus, particular embodiments of the present subject matter have been described. Other embodiments are within the scope of the following claims. In some cases, the actions recited in the claims can be performed in a different order and still achieve desirable results. In addition, the processes depicted in the accompanying figures do not necessarily require the particular order shown, or sequential order, to achieve desirable results. In some embodiments, multitasking and parallel processing may be advantageous.
The following is a list of non-limiting aspects of the present disclosure:
receiving, from the user device and at the identity server, login credentials that map to a first email address of the first set of user information values;
detecting, by the identity server, a triggering event;
creating, by the identity server, a new virtual email address that is separate from the first email address and that maps to a second set of user information values that is different from the first set of user information values in response to detecting the triggering event;
detecting, by the identity server, a request for credentials from a requesting entity; and
transmitting, by the identity server, the new virtual email address as a new login credential to the requesting entity in response to detecting the request.
The method of aspect 1, wherein the triggering event is one of: user input and predetermined conditions defined by the identity server.
Aspect 3. the method of aspect 1 or aspect 2, wherein the login credentials are provided in the form of: text input, audio input, or visual input.
Aspect 4 the method of any of aspects 1-3, wherein transmitting the new virtual email address as login credentials to the requesting entity comprises:
transmitting, by the tokenization application programming interface, data representing the new virtual email address through the tokenization API,
wherein the data representing the new virtual email address is a token that cannot be traced back to the first email address.
Aspect 5 the method of any of aspects 1-3, wherein transmitting the new virtual email address as login credentials to the requesting entity comprises:
transmitting, by a tokenization application programming interface, data representing the new virtual email address through a tokenization API such that the data representing the new virtual email address is a token that cannot be traced back to the first email address.
Aspect 6 the method of any of aspects 1-5, further comprising:
updating, by the identity server and based on the new virtual email address, a database by creating a database entry that maps the new virtual email address to the second set of user information values.
Aspect 7 the method of aspect 6, further comprising:
receiving an input from the user device indicating a change to the new virtual email address; and
updating, by the identity server and based on the input indicating the change to the new virtual email address, the database entry.
Aspect 8 the method of any of aspects 1-7, wherein the request for credentials includes data indicating that the user device has accessed a web page having one or more text fields for entering credentials.
Aspect 9. a system, comprising:
one or more processors; and
one or more memory elements comprising instructions that, when executed, cause the one or more processors to perform operations comprising:
receiving, from the user device and at the identity server, login credentials that map to a first email address of the first set of user information values;
detecting, by the identity server, a triggering event;
creating, by the identity server, a new virtual email address that is separate from the first email address and that maps to a second set of user information values that is different from the first set of user information values in response to detecting the triggering event;
detecting, by the identity server, a request for credentials from a requesting entity; and
transmitting, by the identity server, the new virtual email address as a new login credential to the requesting entity in response to detecting the request.
Aspect 10 the system of aspect 9, wherein the triggering event is one of: user input and predetermined conditions defined by the identity server.
The system of aspect 9 or 10, wherein the login credentials are provided in the form of: text input, audio input, or visual input.
Aspect 12 the system of any of aspects 9 to 11, wherein transmitting the new virtual email address as login credentials to the requesting entity comprises:
transmitting, by a tokenization application programming interface, data representing the new virtual email address through a tokenization API, wherein the data representing the new virtual email address is a token that cannot be traced back to the first email address.
Aspect 13 the system of any of aspects 9 to 11, wherein transmitting the new virtual email address as login credentials to the requesting entity comprises:
transmitting, by the tokenization application programming interface, data representing the new virtual email address through the tokenization API,
such that the data representing the new virtual email address is a token that cannot be traced back to the first email address.
Aspect 14. the system of any of aspects 9 to 13, the operations further comprising:
updating, by the identity server and based on the new virtual email address, a database by creating a database entry that maps the new virtual email address to the second set of user information values.
The system of aspect 15, the operations further comprising:
receiving an input from the user device indicating a change to the new virtual email address; and
updating, by the identity server and based on the input indicating the change to the new virtual email address, the database entry.
Aspect 16 the system of any of aspects 9 to 15, wherein the request for credentials includes data indicating that the user device has accessed a web page having one or more text fields for entering credentials.
An aspect 17 is a computer storage medium encoded with instructions that, when executed by a distributed computing system, cause the distributed computing system to perform operations comprising:
receiving, from the user device and at the identity server, login credentials that map to a first email address of the first set of user information values;
detecting, by the identity server, a triggering event;
creating, by the identity server, a new virtual email address that is separate from the first email address and that maps to a second set of user information values that is different from the first set of user information values in response to detecting the triggering event;
detecting, by the identity server, a request for credentials from a requesting entity; and
transmitting, by the identity server, the new virtual email address as a new login credential to the requesting entity in response to detecting the request.
The computer storage medium of aspect 17, wherein the triggering event is one of: user input and predetermined conditions defined by the identity server.
Aspect 19 the computer storage medium of aspect 17 or 18, wherein the login credentials are provided in the form of: text input, audio input, or visual input.
Aspect 20 the computer storage medium of any of aspects 17 to 19, wherein transmitting the new virtual email address as login credentials to the requesting entity comprises:
transmitting, by the tokenization application programming interface, data representing the new virtual email address through the tokenization API,
wherein the data representing the new virtual email address is a token that cannot be traced back to the first email address.
Aspect 21 the computer storage medium of any of aspects 17 to 19, wherein transmitting the new virtual email address as login credentials to the requesting entity comprises:
transmitting, by a tokenization application programming interface, data representing the new virtual email address through a tokenization API such that the data representing the new virtual email address is a token that cannot be traced back to the first email address.
The computer storage medium of any of aspects 17 to 21, the operations further comprising:
updating, by the identity server and based on the new virtual email address, a database by creating a database entry that maps the new virtual email address to the second set of user information values.
The computer storage medium of aspect 22, the operations further comprising:
receiving an input from the user device indicating a change to the new virtual email address; and
updating, by an identity server and based on the input indicating the change to the new virtual email address, the database entry.
Claims (20)
1. A method, comprising:
receiving, from the user device and at the identity server, login credentials that map to a first email address of the first set of user information values;
detecting, by the identity server, a triggering event;
creating, by the identity server, a new virtual email address that is separate from the first email address and that maps to a second set of user information values that is different from the first set of user information values in response to detecting the triggering event;
detecting, by the identity server, a request for credentials from a requesting entity; and
transmitting, by the identity server, the new virtual email address as a new login credential to the requesting entity in response to detecting the request.
2. The method of claim 1, wherein the triggering event is one of: user input and predetermined conditions defined by the identity server.
3. The method of claim 1, wherein the login credentials are provided in the form of: text input, audio input, or visual input.
4. The method of claim 1, wherein transmitting the new virtual email address as login credentials to the requesting entity comprises:
transmitting, by the tokenization application programming interface, data representing the new virtual email address through the tokenization API,
wherein the data representing the new virtual email address is a token that cannot be traced back to the first email address.
5. The method of claim 1, further comprising:
updating, by the identity server and based on the new virtual email address, a database by creating a database entry that maps the new virtual email address to the second set of user information values.
6. The method of claim 5, further comprising:
receiving an input from the user device indicating a change to the new virtual email address; and
updating, by the identity server and based on the input indicating the change to the new virtual email address, the database entry.
7. The method of claim 1, wherein the request for credentials comprises data indicating that the user device has accessed a web page having one or more text fields for entering credentials.
8. A system, comprising:
one or more processors; and
one or more memory elements comprising instructions that, when executed, cause the one or more processors to perform operations comprising:
receiving, from the user device and at the identity server, login credentials that map to a first email address of the first set of user information values;
detecting, by the identity server, a triggering event;
in response to detecting the triggering event, creating, by the identity server, a new virtual email address that is separate from the first email address and that maps to a second set of user information values that is different from the first set of user information values;
detecting, by the identity server, a request for credentials from a requesting entity; and
transmitting, by the identity server, the new virtual email address as a new login credential to the requesting entity in response to detecting the request.
9. The system of claim 8, wherein the triggering event is one of: user input and predetermined conditions defined by the identity server.
10. The system of claim 8, wherein the login credentials are provided in the form of: text input, audio input, or visual input.
11. The system of claim 8, wherein transmitting the new virtual email address as login credentials to the requesting entity comprises:
transmitting, by the tokenization application programming interface, data representing the new virtual email address through the tokenization API,
wherein the data representing the new virtual email address is a token that cannot be traced back to the first email address.
12. The system of claim 8, the operations further comprising:
updating, by the identity server and based on the new virtual email address, a database by creating a database entry that maps the new virtual email address to the second set of user information values.
13. The system of claim 12, the operations further comprising:
receiving an input from the user device indicating a change to the new virtual email address; and
updating, by the identity server and based on the input indicating the change to the new virtual email address, the database entry.
14. The system of claim 8, wherein the request for credentials includes data indicating that the user device has accessed a web page having one or more text fields for entering credentials.
15. A non-transitory computer storage medium encoded with instructions that, when executed by a distributed computing system, cause the distributed computing system to perform operations comprising:
receiving, from the user device and at the identity server, login credentials that map to a first email address of the first set of user information values;
detecting, by the identity server, a triggering event;
in response to detecting the triggering event, creating, by the identity server, a new virtual email address that is separate from the first email address and that maps to a second set of user information values that is different from the first set of user information values;
detecting, by the identity server, a request for credentials from a requesting entity; and
transmitting, by the identity server, the new virtual email address as a new login credential to the requesting entity in response to detecting the request.
16. The non-transitory computer storage medium of claim 15, wherein the triggering event is one of: user input and predetermined conditions defined by the identity server.
17. The non-transitory computer storage medium of claim 15, wherein the login credentials are provided in the form of: text input, audio input, or visual input.
18. The non-transitory computer storage medium of claim 15, wherein transmitting the new virtual email address as login credentials to the requesting entity comprises:
transmitting, by the tokenization application programming interface, data representing the new virtual email address through the tokenization API,
wherein the data representing the new virtual email address is a token that cannot be traced back to the first email address.
19. The non-transitory computer storage medium of claim 15, the operations further comprising:
updating, by the identity server and based on the new virtual email address, a database by creating a database entry that maps the new virtual email address to the second set of user information values.
20. The non-transitory computer storage medium of claim 19, the operations further comprising:
receiving an input from the user device indicating a change to the new virtual email address; and
updating, by the identity server and based on the input indicating the change to the new virtual email address, the database entry.
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US202063121087P | 2020-12-03 | 2020-12-03 | |
US63/121,087 | 2020-12-03 | ||
PCT/US2021/061525 WO2022119999A1 (en) | 2020-12-03 | 2021-12-02 | Privacy-preserving virtual email system |
Publications (1)
Publication Number | Publication Date |
---|---|
CN114945918A true CN114945918A (en) | 2022-08-26 |
Family
ID=79259433
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN202180009075.4A Pending CN114945918A (en) | 2020-12-03 | 2021-12-02 | Privacy-preserving virtual e-mail system |
Country Status (6)
Country | Link |
---|---|
US (1) | US20230074364A1 (en) |
EP (1) | EP4062303B1 (en) |
JP (1) | JP7405996B2 (en) |
KR (1) | KR20220108179A (en) |
CN (1) | CN114945918A (en) |
WO (1) | WO2022119999A1 (en) |
Cited By (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN115801719A (en) * | 2022-12-28 | 2023-03-14 | 中国联合网络通信集团有限公司 | Mail processing method, device, equipment and readable storage medium |
Family Cites Families (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6973481B2 (en) * | 2001-03-23 | 2005-12-06 | Emailias Llc | System and method for creating and managing forwarding email address |
US9634997B2 (en) * | 2014-07-10 | 2017-04-25 | Storycloud Incorporated | Automatic generation and registration of alter-ego web service accounts |
US10511493B1 (en) | 2017-07-27 | 2019-12-17 | Anonyome Labs, Inc. | Apparatus and method for managing digital identities |
-
2021
- 2021-12-02 CN CN202180009075.4A patent/CN114945918A/en active Pending
- 2021-12-02 WO PCT/US2021/061525 patent/WO2022119999A1/en unknown
- 2021-12-02 EP EP21836674.8A patent/EP4062303B1/en active Active
- 2021-12-02 JP JP2022543559A patent/JP7405996B2/en active Active
- 2021-12-02 US US17/795,918 patent/US20230074364A1/en active Pending
- 2021-12-02 KR KR1020227023818A patent/KR20220108179A/en not_active Application Discontinuation
Cited By (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN115801719A (en) * | 2022-12-28 | 2023-03-14 | 中国联合网络通信集团有限公司 | Mail processing method, device, equipment and readable storage medium |
Also Published As
Publication number | Publication date |
---|---|
WO2022119999A1 (en) | 2022-06-09 |
JP2023511322A (en) | 2023-03-17 |
EP4062303A1 (en) | 2022-09-28 |
KR20220108179A (en) | 2022-08-02 |
JP7405996B2 (en) | 2023-12-26 |
EP4062303B1 (en) | 2023-07-19 |
US20230074364A1 (en) | 2023-03-09 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US10862843B2 (en) | Computerized system and method for modifying a message to apply security features to the message's content | |
US10904261B2 (en) | Intelligent personal information management system | |
US10354083B2 (en) | Social network site including trust-based wiki functionality | |
US10129211B2 (en) | Methods and/or systems for an online and/or mobile privacy and/or security encryption technologies used in cloud computing with the combination of data mining and/or encryption of user's personal data and/or location data for marketing of internet posted promotions, social messaging or offers using multiple devices, browsers, operating systems, networks, fiber optic communications, multichannel platforms | |
US20180255090A1 (en) | Blockchain web browser interface | |
US9311679B2 (en) | Enterprise social media management platform with single sign-on | |
US8819009B2 (en) | Automatic social graph calculation | |
US10176340B2 (en) | Abstracted graphs from social relationship graph | |
US8776177B2 (en) | Dynamic content preference and behavior sharing between computing devices | |
US20090064303A1 (en) | Transferable restricted security tokens | |
US20090070852A1 (en) | Social Network Site Including Invitation Functionality | |
US9747463B2 (en) | Securing access to business information | |
US20150112995A1 (en) | Information retrieval for group users | |
Limba et al. | Secure personal data administration in the social networks: the case of voluntary sharing of personal data on the Facebook | |
US20140108132A1 (en) | Preserving electronic advertisements identified during a computing session | |
US10382528B2 (en) | Disposition actions in digital asset management based on trigger events | |
Xu et al. | Privacy protection in mobile recommender systems: A survey | |
US20220400112A1 (en) | Apparatuses, methods, and computer program products for centralized access permissions management of a plurality of application instances | |
JP7405996B2 (en) | A virtual email system that preserves your privacy | |
US20140280038A1 (en) | Delivering a filtered search result | |
Libert et al. | Preserving Needles in the Haystack: A search engine and multi-jurisdictional forensic documentation system for privacy violations on the web | |
JP7301223B2 (en) | Privacy-preserving data collection and analysis | |
US20160266779A1 (en) | Insight extraction, discovery and distribution | |
Pantelic et al. | Cookies Implementation Analysis and the Impact on User Privacy Regarding GDPR and CCPA Regulations. Sustainability 2022, 14, 5015 | |
Anwar | Privacy requirements of social networking services |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
SE01 | Entry into force of request for substantive examination |
US11917128B2 - Motion field estimation based on motion trajectory derivation - Google Patents
Motion field estimation based on motion trajectory derivation Download PDFInfo
- Publication number
- US11917128B2 US11917128B2 US17/090,094 US202017090094A US11917128B2 US 11917128 B2 US11917128 B2 US 11917128B2 US 202017090094 A US202017090094 A US 202017090094A US 11917128 B2 US11917128 B2 US 11917128B2
- Authority
- US
- United States
- Prior art keywords
- reference frame
- motion
- frame
- motion vector
- encoded
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active, expires
Links
- 230000033001 locomotion Effects 0.000 title claims abstract description 429
- 238000009795 derivation Methods 0.000 title description 4
- 239000013598 vector Substances 0.000 claims abstract description 220
- 238000000034 method Methods 0.000 claims abstract description 125
- 230000008569 process Effects 0.000 claims abstract description 79
- 230000003287 optical effect Effects 0.000 claims description 56
- 238000005259 measurement Methods 0.000 claims description 16
- 238000010586 diagram Methods 0.000 description 28
- 230000015654 memory Effects 0.000 description 27
- 238000012545 processing Methods 0.000 description 24
- 230000006870 function Effects 0.000 description 19
- 238000004891 communication Methods 0.000 description 10
- 238000001914 filtration Methods 0.000 description 10
- 238000002156 mixing Methods 0.000 description 7
- 238000013459 approach Methods 0.000 description 6
- 230000006835 compression Effects 0.000 description 6
- 238000007906 compression Methods 0.000 description 6
- 150000001875 compounds Chemical class 0.000 description 4
- 238000013139 quantization Methods 0.000 description 4
- 230000005540 biological transmission Effects 0.000 description 3
- 230000000903 blocking effect Effects 0.000 description 3
- 230000000694 effects Effects 0.000 description 3
- 230000001131 transforming effect Effects 0.000 description 3
- 238000012935 Averaging Methods 0.000 description 2
- 208000037170 Delayed Emergence from Anesthesia Diseases 0.000 description 2
- 238000004364 calculation method Methods 0.000 description 2
- 230000008859 change Effects 0.000 description 2
- 238000004590 computer program Methods 0.000 description 2
- 238000013461 design Methods 0.000 description 2
- 238000001514 detection method Methods 0.000 description 2
- 238000012986 modification Methods 0.000 description 2
- 230000004048 modification Effects 0.000 description 2
- 230000002123 temporal effect Effects 0.000 description 2
- PXFBZOLANLWPMH-UHFFFAOYSA-N 16-Epiaffinine Natural products C1C(C2=CC=CC=C2N2)=C2C(=O)CC2C(=CC)CN(C)C1C2CO PXFBZOLANLWPMH-UHFFFAOYSA-N 0.000 description 1
- 238000004458 analytical method Methods 0.000 description 1
- 238000000137 annealing Methods 0.000 description 1
- 238000003491 array Methods 0.000 description 1
- 230000001413 cellular effect Effects 0.000 description 1
- 239000003086 colorant Substances 0.000 description 1
- 230000008867 communication pathway Effects 0.000 description 1
- 230000006837 decompression Effects 0.000 description 1
- 239000004973 liquid crystal related substance Substances 0.000 description 1
- 238000013507 mapping Methods 0.000 description 1
- 230000001373 regressive effect Effects 0.000 description 1
- 239000004065 semiconductor Substances 0.000 description 1
- 239000007787 solid Substances 0.000 description 1
- 238000012546 transfer Methods 0.000 description 1
- 230000009466 transformation Effects 0.000 description 1
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/102—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the element, parameter or selection affected or controlled by the adaptive coding
- H04N19/103—Selection of coding mode or of prediction mode
- H04N19/105—Selection of the reference unit for prediction within a chosen coding or prediction mode, e.g. adaptive choice of position and number of pixels used for prediction
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/134—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the element, parameter or criterion affecting or controlling the adaptive coding
- H04N19/136—Incoming video signal characteristics or properties
- H04N19/137—Motion inside a coding unit, e.g. average field, frame or block difference
- H04N19/139—Analysis of motion vectors, e.g. their magnitude, direction, variance or reliability
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/169—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding
- H04N19/17—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding the unit being an image region, e.g. an object
- H04N19/172—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding the unit being an image region, e.g. an object the region being a picture, frame or field
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/50—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using predictive coding
- H04N19/503—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using predictive coding involving temporal prediction
- H04N19/51—Motion estimation or motion compensation
- H04N19/573—Motion compensation with multiple frame prediction using two or more reference frames in a given prediction direction
Definitions
- Digital video streams may represent video using a sequence of frames or still images.
- Digital video can be used for various applications including, for example, video conferencing, high definition video entertainment, video advertisements, or sharing of user-generated videos.
- a digital video stream can contain a large amount of data and consume a significant amount of computing or communication resources of a computing device for processing, transmission or storage of the video data.
- Various approaches have been proposed to reduce the amount of data in video streams, including compression and other encoding techniques.
- One technique for compression uses a reference frame to generate a prediction block corresponding to a current block to be encoded. Differences between the prediction block and the current block can be encoded, instead of the values of the current block themselves, to reduce the amount of data encoded.
- This disclosure relates generally to encoding and decoding video data and more particularly relates to motion field estimation based on motion trajectory derivation. This disclosure describes encoding and decoding methods and apparatuses.
- a method includes reconstructing a first reference frame and a second reference frame using frame data encoded to a bitstream to which an encoded frame is also encoded.
- Motion trajectory information is determined by concatenating one or more motion vectors of the first reference frame and one or more motion vectors of the second reference frame.
- a motion field estimate for the encoded frame is determined using the motion trajectory information.
- a co-located reference frame is determined using the motion field estimate.
- An inter-prediction process for decoding the encoded frame is then performed using a motion vector derived from the co-located reference frame.
- a method includes reconstructing a first reference frame and a second reference frame using frame data encoded to a bitstream to which an encoded frame is also encoded.
- Motion trajectory information is determined by concatenating motion vectors of the first reference frame and of the second reference frame.
- a co-located reference frame is determined based on the motion trajectory information.
- An inter-prediction process for decoding the encoded frame is then performed using a motion vector derived using the co-located reference frame.
- a method includes reconstructing a first reference frame and a second reference frame using frame data encoded to a bitstream to which an encoded frame is also encoded.
- a motion field estimate for the encoded frame is determined using motion vector information associated with the first reference frame and with the second reference frame.
- a co-located reference frame is determined using the motion field estimate.
- An inter-prediction process for decoding the encoded frame is then performed using a motion vector derived using the co-located reference frame.
- FIG. 1 is a schematic of a video encoding and decoding system.
- FIG. 2 is a block diagram of an example of a computing device that can implement a transmitting station or a receiving station.
- FIG. 3 is a diagram of a typical video stream to be encoded and subsequently decoded.
- FIG. 4 is a block diagram of an encoder according to implementations of this disclosure.
- FIG. 5 is a block diagram of a decoder according to implementations of this disclosure.
- FIG. 6 is a block diagram of an example of a reference frame buffer.
- FIG. 7 is a diagram of a group of frames in a display order of a video sequence.
- FIG. 8 is a diagram of an example of a coding order for the group of frames of FIG. 7 .
- FIG. 9 is a diagram used to explain the linear projection of a motion field according to the teachings herein.
- FIG. 10 is a flowchart diagram of a process for motion compensated prediction of a video frame using an optical flow reference frame generated using optical flow estimation.
- FIG. 11 is a flowchart diagram of a process for generating an optical flow reference frame.
- FIG. 12 is a diagram that illustrates the process of FIG. 11 .
- FIG. 13 is a diagram that illustrates object occlusion.
- FIG. 14 is a flowchart diagram of a process for motion compensated prediction of a video frame using a co-located reference frame determined using motion field estimation.
- FIG. 15 is a diagram used to explain a first example of motion vector concatenation according to the teachings herein.
- FIG. 16 is a diagram used to explain a second example of motion vector concatenation according to the teachings herein.
- a video stream can be compressed by a variety of techniques to reduce bandwidth required transmit or store the video stream.
- a video stream can be encoded into a bitstream, which involves compression, which is then transmitted to a decoder that can decode or decompress the video stream to prepare it for viewing or further processing. Compression of the video stream often exploits spatial and temporal correlation of video signals through spatial and/or motion compensated prediction.
- Inter-prediction uses one or more motion vectors to generate a block (also called a prediction block) that resembles a current block to be encoded using previously encoded and decoded pixels. By encoding the motion vector(s), and the difference between the two blocks, a decoder receiving the encoded signal can re-create the current block. Inter-prediction may also be referred to as motion compensated prediction.
- Each motion vector used to generate a prediction block in the inter-prediction process refers to a frame other than a current frame, i.e., a reference frame.
- Reference frames can be located before or after the current frame in the sequence of the video stream, and may be frames that are reconstructed before being used as a reference frame. In some cases, there may be three reference frames used to encode or decode blocks of the current frame of the video sequence. One is a frame that may be referred to as a golden frame. Another is a most recently encoded or decoded frame. The last is an alternative reference frame that is encoded or decoded before one or more frames in a sequence, but which is displayed after those frames in an output display order.
- the alternative reference frame is a reference frame usable for backwards prediction.
- One or more forward and/or backward reference frames can be used to encode or decode a bock.
- the efficacy of a reference frame when used to encode or decode a block within a current frame can be measured based on a resulting signal-to-noise ratio or other measures of rate-distortion.
- the pixels that form prediction blocks are obtained directly from one or more of the available reference frames.
- the reference pixel blocks or their linear combinations are used as prediction for the given coding block in the current frame.
- This direct, block-based prediction does not capture the true motion activity available from the reference frames. For this reason, motion compensated prediction accuracy can suffer.
- motion vectors are conventionally used only in connection with the processing of a block or frame with which the motion vector is associated.
- the implementations of this disclosure address problems such as these, in particular, by using motion vectors of previously reconstructed frames may to determine a motion field estimation of a current or encoded frame.
- a reference frame co-located with a current frame that uses a per-pixel motion field generated using a motion field estimation representative of the true motion activities in the video signal may be used.
- a co-located frame that allows tracking of complicated non-translational motion activity may be interpolated, which is beyond the capability of conventional block based motion compensated prediction directly from reference frames.
- Use of such a reference frame can improve prediction quality.
- a motion field estimation of a current frame to be encoded or an encoded frame to be decoded may be determined using motion information available to the encoder or decoder and without additional side information.
- a motion field estimate may be determined by deriving a motion trajectory from one or more available motion vectors, for example, by concatenating such motion vectors to form the motion trajectory.
- the motion field estimate can then be used in one or more ways to improve coding efficiency.
- the motion field estimate can be used for motion vector prediction, co-located reference frame interpolation, and/or other purposes.
- FIG. 1 is a schematic of a video encoding and decoding system 100 .
- a transmitting station 102 can be, for example, a computer having an internal configuration of hardware such as that described in FIG. 2 .
- the processing of the transmitting station 102 can be distributed among multiple devices.
- a network 104 can connect the transmitting station 102 and a receiving station 106 for encoding and decoding of the video stream.
- the video stream can be encoded in the transmitting station 102 and the encoded video stream can be decoded in the receiving station 106 .
- the network 104 can be, for example, the Internet.
- the network 104 can also be a local area network (LAN), wide area network (WAN), virtual private network (VPN), cellular telephone network or any other means of transferring the video stream from the transmitting station 102 to, in this example, the receiving station 106 .
- LAN local area network
- WAN wide area network
- VPN virtual private network
- the receiving station 106 in one example, can be a computer having an internal configuration of hardware such as that described in FIG. 2 . However, other suitable implementations of the receiving station 106 are possible. For example, the processing of the receiving station 106 can be distributed among multiple devices.
- an implementation can omit the network 104 .
- a video stream can be encoded and then stored for transmission at a later time to the receiving station 106 or any other device having a non-transitory storage medium or memory.
- the receiving station 106 receives (e.g., via the network 104 , a computer bus, and/or some communication pathway) the encoded video stream and stores the video stream for later decoding.
- a real-time transport protocol is used for transmission of the encoded video over the network 104 .
- a transport protocol other than RTP may be used, e.g., a Hypertext Transfer Protocol (HTTP) based video streaming protocol.
- HTTP Hypertext Transfer Protocol
- the transmitting station 102 and/or the receiving station 106 may include the ability to both encode and decode a video stream as described below.
- the receiving station 106 could be a video conference participant who receives an encoded video bitstream from a video conference server (e.g., the transmitting station 102 ) to decode and view and further encodes and transmits its own video bitstream to the video conference server for decoding and viewing by other participants.
- FIG. 2 is a block diagram of an example of a computing device 200 that can implement a transmitting station or a receiving station.
- the computing device 200 can implement one or both of the transmitting station 102 and the receiving station 106 of FIG. 1 .
- the computing device 200 can be in the form of a computing system including multiple computing devices, or in the form of one computing device, for example, a mobile phone, a tablet computer, a laptop computer, a notebook computer, a desktop computer, and the like.
- a CPU 202 in the computing device 200 can be a central processing unit.
- the CPU 202 can be any other type of device, or multiple devices, capable of manipulating or processing information now-existing or hereafter developed.
- the disclosed implementations can be practiced with one processor as shown, e.g., the CPU 202 , advantages in speed and efficiency can be achieved using more than one processor.
- a memory 204 in computing device 200 can be a read only memory (ROM) device or a random access memory (RAM) device in an implementation. Any other suitable type of storage device or non-transitory storage medium can be used as the memory 204 .
- the memory 204 can include code and data 206 that is accessed by the CPU 202 using a bus 212 .
- the memory 204 can further include an operating system 208 and application programs 210 , the application programs 210 including at least one program that permits the CPU 202 to perform the methods described here.
- the application programs 210 can include applications 1 through N, which further include a video coding application that performs the methods described here.
- Computing device 200 can also include a secondary storage 214 , which can, for example, be a memory card used with a mobile computing device. Because the video communication sessions may contain a significant amount of information, they can be stored in whole or in part in the secondary storage 214 and loaded into the memory 204 as needed for processing.
- a secondary storage 214 can, for example, be a memory card used with a mobile computing device. Because the video communication sessions may contain a significant amount of information, they can be stored in whole or in part in the secondary storage 214 and loaded into the memory 204 as needed for processing.
- the computing device 200 can also include one or more output devices, such as a display 218 .
- the display 218 may be, in one example, a touch sensitive display that combines a display with a touch sensitive element that is operable to sense touch inputs.
- the display 218 can be coupled to the CPU 202 via the bus 212 .
- Other output devices that permit a user to program or otherwise use the computing device 200 can be provided in addition to or as an alternative to the display 218 .
- the output device is or includes a display
- the display can be implemented in various ways, including by a liquid crystal display (LCD), a cathode-ray tube (CRT) display or light emitting diode (LED) display, such as an organic LED (OLED) display.
- LCD liquid crystal display
- CRT cathode-ray tube
- LED light emitting diode
- OLED organic LED
- the computing device 200 can also include or be in communication with an image-sensing device 220 , for example a camera, or any other image-sensing device 220 now existing or hereafter developed that can sense an image such as the image of a user operating the computing device 200 .
- the image-sensing device 220 can be positioned such that it is directed toward the user operating the computing device 200 .
- the position and optical axis of the image-sensing device 220 can be configured such that the field of vision includes an area that is directly adjacent to the display 218 and from which the display 218 is visible.
- the computing device 200 can also include or be in communication with a sound-sensing device 222 , for example a microphone, or any other sound-sensing device now existing or hereafter developed that can sense sounds near the computing device 200 .
- the sound-sensing device 222 can be positioned such that it is directed toward the user operating the computing device 200 and can be configured to receive sounds, for example, speech or other utterances, made by the user while the user operates the computing device 200 .
- FIG. 2 depicts the CPU 202 and the memory 204 of the computing device 200 as being integrated into one unit, other configurations can be utilized.
- the operations of the CPU 202 can be distributed across multiple machines (wherein individual machines can have one or more of processors) that can be coupled directly or across a local area or other network.
- the memory 204 can be distributed across multiple machines such as a network-based memory or memory in multiple machines performing the operations of the computing device 200 .
- the bus 212 of the computing device 200 can be composed of multiple buses.
- the secondary storage 214 can be directly coupled to the other components of the computing device 200 or can be accessed via a network and can comprise an integrated unit such as a memory card or multiple units such as multiple memory cards.
- the computing device 200 can thus be implemented in a wide variety of configurations.
- FIG. 3 is a diagram of an example of a video stream 300 to be encoded and subsequently decoded.
- the video stream 300 includes a video sequence 302 .
- the video sequence 302 includes a number of adjacent frames 304 . While three frames are depicted as the adjacent frames 304 , the video sequence 302 can include any number of adjacent frames 304 .
- the adjacent frames 304 can then be further subdivided into individual frames, e.g., a frame 306 .
- the frame 306 can be divided into a series of planes or segments 308 .
- the segments 308 can be subsets of frames that permit parallel processing, for example.
- the segments 308 can also be subsets of frames that can separate the video data into separate colors.
- a frame 306 of color video data can include a luminance plane and two chrominance planes.
- the segments 308 may be sampled at different resolutions.
- the frame 306 may be further subdivided into blocks 310 , which can contain data corresponding to, for example, 16 ⁇ 16 pixels in the frame 306 .
- the blocks 310 can also be arranged to include data from one or more segments 308 of pixel data.
- the blocks 310 can also be of any other suitable size such as 4 ⁇ 4 pixels, 8 ⁇ 8 pixels, 16 ⁇ 8 pixels, 8 ⁇ 16 pixels, 16 ⁇ 16 pixels, or larger. Unless otherwise noted, the terms block and macroblock are used interchangeably herein.
- FIG. 4 is a block diagram of an encoder 400 according to implementations of this disclosure.
- the encoder 400 can be implemented, as described above, in the transmitting station 102 such as by providing a computer software program stored in memory, for example, the memory 204 .
- the computer software program can include machine instructions that, when executed by a processor such as the CPU 202 , cause the transmitting station 102 to encode video data in the manner described in FIG. 4 .
- the encoder 400 can also be implemented as specialized hardware included in, for example, the transmitting station 102 .
- the encoder 400 is a hardware encoder.
- the encoder 400 has the following stages to perform the various functions in a forward path (shown by the solid connection lines) to produce an encoded or compressed bitstream 420 using the video stream 300 as input: an intra/inter prediction stage 402 , a transform stage 404 , a quantization stage 406 , and an entropy encoding stage 408 .
- the encoder 400 may also include a reconstruction path (shown by the dotted connection lines) to reconstruct a frame for encoding of future blocks.
- the encoder 400 has the following stages to perform the various functions in the reconstruction path: a dequantization stage 410 , an inverse transform stage 412 , a reconstruction stage 414 , and a loop filtering stage 416 .
- Other structural variations of the encoder 400 can be used to encode the video stream 300 .
- respective frames 304 can be processed in units of blocks.
- respective blocks can be encoded using intra-frame prediction (also called intra-prediction) or inter-frame prediction (also called inter-prediction).
- intra-frame prediction also called intra-prediction
- inter-frame prediction also called inter-prediction
- a prediction block can be formed.
- intra-prediction a prediction block may be formed from samples in the current frame that have been previously encoded and reconstructed.
- inter-prediction a prediction block may be formed from samples in one or more previously constructed reference frames. The designation of reference frames for groups of blocks is discussed in further detail below.
- the prediction block can be subtracted from the current block at the intra/inter prediction stage 402 to produce a residual block (also called a residual).
- the transform stage 404 transforms the residual into transform coefficients in, for example, the frequency domain using block-based transforms.
- the quantization stage 406 converts the transform coefficients into discrete quantum values, which are referred to as quantized transform coefficients, using a quantizer value or a quantization level. For example, the transform coefficients may be divided by the quantizer value and truncated.
- the quantized transform coefficients are then entropy encoded by the entropy encoding stage 408 .
- the entropy-encoded coefficients, together with other information used to decode the block, which may include for example the type of prediction used, transform type, motion vectors and quantizer value, are then output to the compressed bitstream 420 .
- the compressed bitstream 420 can be formatted using various techniques, such as variable length coding (VLC) or arithmetic coding.
- VLC variable length coding
- the compressed bitstream 420 can also be referred to as an encoded video stream or encoded video bitstream, and the terms will be used interchangeably herein.
- the reconstruction path in FIG. 4 can be used to ensure that the encoder 400 and a decoder 500 (described below) use the same reference frames to decode the compressed bitstream 420 .
- the reconstruction path performs functions that are similar to functions that take place during the decoding process that are discussed in more detail below, including dequantizing the quantized transform coefficients at the dequantization stage 410 and inverse transforming the dequantized transform coefficients at the inverse transform stage 412 to produce a derivative residual block (also called a derivative residual).
- the prediction block that was predicted at the intra/inter prediction stage 402 can be added to the derivative residual to create a reconstructed block.
- the loop filtering stage 416 can be applied to the reconstructed block to reduce distortion such as blocking artifacts.
- encoder 400 can be used to encode the compressed bitstream 420 .
- a non-transform based encoder can quantize the residual signal directly without the transform stage 404 for certain blocks or frames.
- an encoder can have the quantization stage 406 and the dequantization stage 410 combined in a common stage.
- FIG. 5 is a block diagram of a decoder 500 according to implementations of this disclosure.
- the decoder 500 can be implemented in the receiving station 106 , for example, by providing a computer software program stored in the memory 204 .
- the computer software program can include machine instructions that, when executed by a processor such as the CPU 202 , cause the receiving station 106 to decode video data in the manner described in FIG. 5 .
- the decoder 500 can also be implemented in hardware included in, for example, the transmitting station 102 or the receiving station 106 .
- the decoder 500 similar to the reconstruction path of the encoder 400 discussed above, includes in one example the following stages to perform various functions to produce an output video stream 516 from the compressed bitstream 420 : an entropy decoding stage 502 , a dequantization stage 504 , an inverse transform stage 506 , an intra/inter prediction stage 508 , a reconstruction stage 510 , a loop filtering stage 512 and a deblocking filtering stage 514 .
- Other structural variations of the decoder 500 can be used to decode the compressed bitstream 420 .
- the data elements within the compressed bitstream 420 can be decoded by the entropy decoding stage 502 to produce a set of quantized transform coefficients.
- the dequantization stage 504 dequantizes the quantized transform coefficients (e.g., by multiplying the quantized transform coefficients by the quantizer value), and the inverse transform stage 506 inverse transforms the dequantized transform coefficients to produce a derivative residual that can be identical to that created by the inverse transform stage 412 in the encoder 400 .
- the decoder 500 can use the intra/inter prediction stage 508 to create the same prediction block as was created in the encoder 400 , e.g., at the intra/inter prediction stage 402 .
- the prediction block can be added to the derivative residual to create a reconstructed block.
- the loop filtering stage 512 can be applied to the reconstructed block to reduce blocking artifacts.
- the deblocking filtering stage 514 is applied to the reconstructed block to reduce blocking distortion, and the result is output as the output video stream 516 .
- the output video stream 516 can also be referred to as a decoded video stream, and the terms will be used interchangeably herein.
- Other variations of the decoder 500 can be used to decode the compressed bitstream 420 .
- the decoder 500 can produce the output video stream 516 without the deblocking filtering stage 514 .
- FIG. 6 is a block diagram of an example of a reference frame buffer 600 .
- the reference frame buffer 600 stores reference frames used to encode or decode blocks of frames of a video sequence.
- the reference frame buffer 600 includes reference frames identified as a last frame LAST_FRAME 602 , a golden frame GOLDEN_FRAME 604 , and an alternative reference frame ALTREF_FRAME 606 .
- the frame header of a reference frame includes a virtual index 608 to a location within the reference frame buffer 600 at which the reference frame is stored.
- a reference frame mapping 612 maps the virtual index 608 of a reference frame to a physical index 614 of memory at which the reference frame is stored.
- One or more refresh flags 610 can be used to remove one or more of the stored reference frames from the reference frame buffer 600 , for example, to clear space in the reference frame buffer 600 for new reference frames, where there are no further blocks to encode or decode using the stored reference frames, or where a new frame is encoded or decoded and identified as a reference frame.
- the number of reference positions within the reference frame buffer 600 , the types, and the names used are examples only.
- the reference frames stored in the reference frame buffer 600 can be used to identify motion vectors for predicting blocks of frames to be encoded or decoded. Different reference frames may be used depending on the type of prediction used to predict a current block of a current frame. For example, in bi-prediction, blocks of the current frame can be forward predicted using either frames stored as the LAST_FRAME 602 or the GOLDEN_FRAME 604 , and backward predicted using a frame stored as the ALTREF_FRAME 606 .
- the reference frame buffer 600 can store up to eight reference frames, wherein each stored reference frame may be associated with a different virtual index 602 of the reference frame buffer. Although three of the eight spaces in the reference frame buffer 600 are used by frames designated as the LAST_FRAME 602 , the GOLDEN_FRAME 604 , and the ALTREF_FRAME 606 , five spaces remain available to store other reference frames. For example, one or more available spaces in the reference frame buffer 600 may be used to store further alternative reference frames, in particular the interpolated reference frame described herein.
- the alternative reference frame designated as the ALTREF_FRAME 606 may be a frame of a video sequence that is distant from a current frame in a display order, but is encoded or decoded earlier than it is displayed.
- the alternative reference frame may be ten, twelve, or more (or fewer) frames after the current frame in a display order.
- Further alternative reference frames can be frames located nearer to the current frame in the display order.
- An alternative reference frame may not correspond directly to a frame in the sequence. Instead, the alternative reference frame may be generated using one or more of the frames having filtering applied, being combined together, or being both combined together and filtered.
- An alternative reference frame may not be displayed. Instead, it can be a frame or portion of a frame generated and transmitted for use only for prediction (i.e., it is omitted when the decoded sequence is displayed).
- the reference frame buffer 600 is shown as being able to store up to eight reference frames, other implementations of the reference frame buffer 600 may be able to store additional or fewer reference frames.
- the available spaces in the reference frame buffer 600 may be used to store frames other than alternative reference frames.
- the available spaces may store a second last frame (i.e., the first frame before the last frame) and/or a third last frame (i.e., a frame two frames before the last frame) as additional forward prediction reference frames.
- a backward frame may be stored as an additional backward prediction reference frame.
- FIG. 7 is a diagram of a group of frames in a display order of the video sequence.
- the group of frames is preceded by a frame 700 , which can be referred to as a key frame or an overlay frame in some cases, and comprises eight frames 702 - 716 .
- No block within the frame 700 is inter predicted using reference frames of the group of frames.
- the frame 700 is a key (also referred to as intra-predicted frame) in this example, which refers to its status that predicted blocks within the frame are only predicted using intra prediction.
- the frame 700 can be an overlay frame, which is an inter-predicted frame that can be a reconstructed frame of a previous group of frames.
- an inter-predicted frame at least some of the predicted blocks are predicted using inter prediction.
- the number of frames forming each group of frames can vary according to the video spatial/temporal characteristics and other encoded configurations, such as the key frame interval selected for random access or error resilience, for example.
- the coding order for each group of frames can differ from the display order. This allows a frame located after a current frame in the video sequence to be used as a reference frame for encoding the current frame.
- a decoder such as the decoder 500
- the group coding structure assigns different roles that respective frames within the group may play in the reference buffer (e.g., a last frame, an alternative reference frame, etc.) and defines or indicates the coding order for the frames within a group.
- FIG. 8 is a diagram of an example of a coding order for the group of frames of FIG. 7 .
- the coding order of FIG. 8 is associated with a first group coding structure whereby a single backward reference frame is available for each frame of the group. Because the encoding and decoding order is the same, the order shown in FIG. 8 is generally referred to herein as a coding order.
- the key or overlay frame 700 is designated the golden frame in a reference frame buffer, such as the GOLDEN_FRAME 604 in the reference frame buffer 600 .
- the frame 700 is intra-predicted in this example, so it does not require a reference frame, but an overlay frame as the frame 700 , being a reconstructed frame from a previous group, also does not use a reference frame of the current group of frames.
- the final frame 716 in the group is designated an alternative reference frame in a reference frame buffer, such as the ALTREF_FRAME 606 in the reference frame buffer 600 .
- the frame 716 is coded out of the display order after the frame 700 so as to provide a backward reference frame for each of the remaining frames 702 - 714 .
- the frame 700 serves as an available reference frame for blocks of the frame 716 .
- FIG. 8 is only one example of a coding order for a group of frames.
- Other group coding structures may designate one or more different or additional frames for forward and/or backward prediction.
- an available reference frame may be a reference frame that is interpolated using optical flow estimation.
- the reference frame is referred to as a co-located reference frame herein because the dimensions are the same as the current frame.
- the co-located block i.e., the block having the same pixel dimensions and same address in the co-located reference frame
- a motion search may be performed to determine a prediction block for a current block.
- optical flow estimation can result in a reference frame that improves the precision of motion compensated prediction for a current frame, and hence improve video compression performance.
- This interpolated reference frame may also be referred to herein as an optical flow reference frame.
- FIG. 9 is a diagram used to explain the linear projection of a motion field according to the teachings herein.
- the optical flow (also called a motion field) of the current frame may be estimated using the nearest available reconstructed (e.g., reference) frames before and after the current frame.
- the reference frame 1 is a reference frame that may be used for forward prediction of the current frame 900
- the reference frame 2 is a reference frame that may be used for backward prediction of the current frame 900 .
- the immediately preceding, or last, frame 704 e.g., the reconstructed frame stored in the reference frame buffer 600 as the LAST_FRAME 602
- the frame 716 e.g., the reconstructed frame stored in the reference frame buffer 600 as the ALTREF_FRAME 606
- motion vectors may be projected between the pixels in the reference frames 1 and 2 to the pixels in the current frame 900 assuming that the motion field is linear in time.
- the index for the current frame 900 is 3
- the index for the reference frame 1 is 0,
- the index for the reference frame 2 is 716.
- a projected motion vector 904 for a pixel 902 of the current frame 900 is shown.
- the display indexes of the group of frames of FIG. 7 would show that the frame 704 is temporally closer to the frame 706 than the frame 716 . Accordingly, the single motion vector 904 shown in FIG.
- the projected motion field 906 is linear between the reference frame 1 , the current frame 900 , and the reference frame 2 .
- Selecting the nearest available reconstructed forward and backward reference frames and assuming a motion field for respective pixels of the current frame that is linear in time allows generation of the interpolated reference frame using optical flow estimation to be performed at both an encoder and a decoder (e.g., at the intra/inter prediction stage 402 and the intra/inter prediction stage 508 ) without transmitting extra information.
- a decoder e.g., at the intra/inter prediction stage 402 and the intra/inter prediction stage 508
- different frames may be used as designated a priori between the encoder and decoder.
- identification of the frames used for the optical flow estimation may be transmitted. Generation of the interpolated frame is discussed in more detail below.
- FIG. 10 is a flowchart diagram of a method or process 1000 for motion compensated prediction of a frame of a video sequence using an optical flow reference frame generated using optical flow estimation.
- the optical flow reference frame may also be referred to as a co-located reference frame herein.
- the process 1000 can be implemented, for example, as a software program that may be executed by computing devices such as transmitting station 102 or receiving station 106 .
- the software program can include machine-readable instructions that may be stored in a memory such as the memory 204 or the secondary storage 214 , and that, when executed by a processor, such as CPU 202 , may cause the computing device to perform the process 1000 .
- the process 1000 can be implemented using specialized hardware or firmware. Some computing devices may have multiple memories or processors, and the operations described in the process 1000 can be distributed using multiple processors, memories, or both.
- a current frame to be predicted is determined.
- Frames may be coded, and hence predicted, in any encoder order, such as in the coding order shown in FIG. 8 .
- the frames to be predicted may also be referred to as a first, second, third, etc. frame.
- the label of first, second, etc. does not indicate an order of the frames, instead the label is used to distinguish one current frame from another herein.
- the frame is processed in units of blocks in a block coding order, such as a raster scan order.
- the frame is also processed in units of blocks according to receipt of their encoded residuals within an encoded bitstream.
- forward and backward reference frames are determined.
- the forward and backward reference frames are the nearest reconstructed frames before and after (e.g., in display order) the current frame, such as the current frame 900 .
- the process 1000 ends. The current frame is then processed without considering an optical flow reference frame.
- an optical flow reference frame is generated using the reference frames at 1006 . Generating the optical flow reference frame is described in more detail with reference to FIGS. 11 - 13 .
- the optical flow reference frame may be stored at a defined position within the reference frame buffer 600 .
- a prediction process is performed for the current frame using the optical flow reference frame generated at 1006 .
- the prediction process can include generating a prediction block from the optical flow reference frame for predicting a current block of the frame. Generating the prediction block in either an encoder or a decoder can include selecting the co-located block in the optical flow reference frame as the prediction block.
- generating the prediction block can include performing a motion search within the optical flow reference frame to select the best matching prediction block for the current block.
- generating the prediction block can include using a motion vector decoded from the encoded bitstream to generate the prediction block using pixels of the optical flow reference frame.
- the prediction block is generated at the encoder, the resulting residual can be further processed, such as using the lossy encoding process described with regard to the encoder 400 of FIG. 4 .
- the prediction block is generated at the decoder, the decoded residual for the current block from the encoded bitstream can be combined with the prediction block to form a reconstructed block as described by example with regard to the decoder 500 of FIG. 5 .
- the process 1000 may form part of a rate distortion loop for the current block that uses various prediction modes, including one or more intra prediction modes and both single and compound inter prediction modes using the available prediction frames for the current frame.
- a single inter prediction mode uses only a single forward or backward reference frame for inter prediction.
- a compound inter prediction mode uses both a forward and a backward reference frame for inter prediction.
- the rate e.g., the number of bits
- the distortion may be calculated as the differences between pixel values of the block before encoding and after decoding. The differences can be a sum of absolute differences or some other measure that captures the accumulated error for blocks of the frames.
- the prediction process at 1008 may be repeated for all blocks of the current frame until the current frame is encoded or decoded.
- J data is the data penalty based on the brightness constancy assumption (i.e., the assumption that an intensity value of a small portion of an image remains unchanged over time despite a position change).
- J spatial is the spatial penalty based on the smoothness of the motion field (i.e., the characteristic that neighboring pixels likely belong to the same object item in an image, resulting in substantial the same image motion).
- the Lagrangian parameter ⁇ controls the importance of the smoothness of the motion field. A large value for the parameter ⁇ results in a smoother motion field and can better account for motion at a larger scale. In contrast, a smaller value for the parameter ⁇ may more effectively adapt to object edges and the movement of small objects.
- E x , E y , and E t are derivatives of pixel values of reference frames with respect to the horizontal axis x, the vertical axis y, and time t (e.g., as represented by frame indexes).
- the horizontal axis and the vertical axis are defined relative to the array of the pixels forming the current frame, such as the current frame 900 , and the reference frames, such as the reference frames 1 and 2 .
- E x (index r2 ⁇ index cur ) ⁇ E x (r1) /(index r2 ⁇ index r1 )+(index cur ⁇ index r1 ) ⁇ E x (r2) /(index r2 ⁇ index r1 ) (3)
- E y (index cur ⁇ index r1 ) ⁇ E y (r1) /(index r2 ⁇ index r1 )+(index cur ⁇ index r1 ) ⁇ E y (r2) /(index r2 ⁇ index r1 ) (4)
- E t E (r2) ⁇ E (r1) (5)
- variable E (r1) is a pixel value at a projected position in the reference frame 1 based on the motion field of the current pixel location in the frame being encoded.
- variable E (r2) is a pixel value at a projected position in the reference frame 2 based on the motion field of the current pixel location in the frame being encoded
- variable index r1 is the display index of the reference frame 1 , where the display index of a frame is its index in the display order of the video sequence.
- variable index r2 is the display index of the reference frame 2
- variable index cur is the display index of the current frame 900 .
- the variable E x (r1) is the horizontal derivative calculated at the reference frame 1 using a linear filter.
- the variable E x (r2) is the horizontal derivative calculated at the reference frame 2 using a linear filter.
- the variable E y (r1) is the vertical derivative calculated at the reference frame 1 using a linear filter.
- the variable E y (r2) is the vertical derivative calculated at the reference frame 2 using a linear filter.
- the linear filter used for calculating the horizontal derivative is a 7-tap filter with filter coefficients [ ⁇ 1/60, 9/60, ⁇ 45/60, 0, 45/60, ⁇ 9/60, 1/60].
- the filter can have a different frequency profile, a different number of taps, or both.
- the linear filter used for calculating the vertical derivatives may be the same as or different from the linear filter used for calculating the horizontal derivatives.
- ⁇ u is the Laplacian of the horizontal component u of the motion field
- ⁇ v is the Laplacian of the vertical component v of the motion field.
- FIG. 11 is a flowchart diagram of a method or process 1100 for generating an optical flow reference frame.
- the process 1100 can implement step 1006 of the process 1000 .
- the process 1100 can be implemented, for example, as a software program that may be executed by computing devices such as transmitting station 102 or receiving station 106 .
- the software program can include machine-readable instructions that may be stored in a memory such as the memory 204 or the secondary storage 214 , and that, when executed by a processor, such as CPU 202 , may cause the computing device to perform the process 1100 .
- the process 1100 can be implemented using specialized hardware or firmware. As described above, multiple processors, memories, or both, may be used.
- the estimated motion vectors from the current frame to the reference frames can be used to initialize the optical flow estimation for the current frame.
- all pixels within the current frame are assigned an initialized motion vector. They define initial motion fields that can be utilized to warp the reference frames to the current frame for a first processing level to shorten the motion lengths between reference frames.
- one or more spatial neighbors having an initialized motion vector may be used. For example, an average of the available neighboring initial motion vectors may be used.
- reference frame 2 may be used to predict a pixel of reference frame 1 , where reference frame 1 is the last frame before the current frame being coded. That motion vector, projected on to the current frame using linear projection in a similar manner as shown in FIG. 9 , results in a motion field mv cur at the intersecting pixel location, such as the motion field 906 at the pixel location 902 .
- FIG. 11 refers to a first processing level because there are desirably multiple processing levels to the process 1100 .
- FIG. 12 is a diagram that illustrates the process 1100 of FIG. 11 .
- the following description uses the phrase motion field. This phrase is intended to collectively refer to the motion field for respective pixels unless otherwise clear from the context. Accordingly, the plural “motion fields” and “motion field” may be used interchangeably when referring to more than one motion field. Further, the phrase optical flow may be used interchangeably with the phrase motion field when referring to the movement of a single pixel.
- a pyramid, or multi-layered, structure may be used.
- the reference frames are scaled down to one or more different scales.
- the optical flow is first estimated to obtain a motion field at the highest level (the first processing level) of the pyramid, i.e., using the reference frames that are scaled the most.
- the motion field is upscaled and used to initialize the optical flow estimation at the next level. This process of upscaling the motion field, using it to initialize the optical flow estimation of the next level, and obtaining the motion field continues until the lowest level of the pyramid is reached (i.e., until the optical flow estimation is completed for the reference frames at full scale).
- the Lagrangian parameter ⁇ is set for solving the Lagrangian function (1).
- the process 1100 uses multiple values for the Lagrangian parameter ⁇ .
- the first value at which the Lagrangian parameter ⁇ is set at 1104 may be a relatively large value, such as 100.
- the reference frames are warped to the current frame according to the motion field for the current processing level. Warping the reference frames to the current frame may be performed using subpixel location rounding. It is worth noting that the motion field mv cur that is used at the first processing level is downscaled from its full resolution value to the resolution of the level before performing the warping. Downscaling a motion field is discussed in more detail below.
- each pixel in a warped image E warped (r1) is calculated as the referenced pixel given by the motion vector mv r1 .
- Subpixel interpolation may be performed using a conventional subpixel interpolation filter.
- two warped reference frames exist.
- the two warped reference frames are used to estimate the motion field between them at 1108 .
- Estimating the motion field at 1108 can include multiple steps.
- the derivatives E x , E y , and E t are calculated using the functions (3), (4), and (5). Then, if there are multiple layers, the derivatives are downscaled to the current level. As shown in FIG. 12 , the reference frames are used to calculate the derivatives at the original scale to capture details.
- the downscaled derivatives at each level l may be calculated by averaging within a 2 1 by 2 1 block. It is worth noting that, because calculating the derivatives as well as averaging them are both linear operations, the two operations may be combined in a single linear filter to calculate the derivatives at each level l. This can lower complexity of the calculations.
- 2D two-dimensional
- the motion field for the current frame is updated or refined using the estimated motion field between the warped reference frames.
- the current motion field may be updated by adding the estimated motion field on a pixel-by-pixel basis.
- a query is made at 1110 to determine whether there are additional values for the Lagrangian parameter ⁇ available. Smaller values for the Lagrangian parameter ⁇ can address smaller scales of motion. If there are additional values, the process 1100 can return to 1104 to set the next value for the Lagrangian parameter ⁇ . For example, the process 1100 can repeat while reducing the Lagrangian parameter ⁇ by half in each iteration.
- the motion field estimation estimated at 1108 is the current motion field for warping the reference frames at 1106 in this next iteration. Then, the motion field is again estimated at 1108 .
- the processing at 1104 , 1106 , and 1108 continues until all of the possible Lagrangian parameters at 1110 are processed. In an example, there are three levels to the pyramid as shown in FIG. 12 , so the smallest value for the Lagrangian parameter ⁇ is 25. This repeating processing while modifying the Lagrangian parameter may be referred to as annealing the Lagrangian parameter.
- the process 100 advances to 1112 to determine whether there are more processing levels to process at 1112 . If there are additional processing levels at 1112 , the process advances to 1114 , where the motion field is upscaled before processing the next layer using each of the available values for the Lagrangian parameter ⁇ starting at 1104 .
- the optical flow is first estimated to obtain a motion field at the highest level of the pyramid. Thereafter, the motion field is upscaled and used to initialize the optical flow estimation at the next level. This process of upscaling the motion field, using it to initialize the optical flow estimation of the next level, and obtaining the motion field continues until the lowest level of the pyramid is reached (i.e., until the optical flow estimation is completed for the derivatives calculated at full scale) at 1112 .
- the process advances to 1116 .
- the number of levels can be three, such as in the example of FIG. 12 .
- the warped reference frames are blended to form the optical flow reference frame E (cur) .
- the warped reference frames blended at 1116 may be the full-scale reference frames that are warped again according to the process described at 1106 using the motion field estimation estimated at 1108 .
- the full-scale reference frames may be warped twice ⁇ once using the initial upscaled motion field from the previous layer of processing and again after the motion field is refined at the full-scale level.
- Optional occlusion detection may be performed as part of the blending. Occlusion of objects and background commonly occurs in a video sequence, where parts of the object appear in one reference frame but are hidden in the other. Generally, the optical flow estimation method described above cannot estimate the motion of the object in this situation because the brightness constancy assumption is violated. If the size of the occlusion is relatively small, the smoothness penalty function may estimate the motion quite accurately. That is, if the undefined motion field at the hidden part is smoothed by the neighboring motion vectors, the motion of the whole object can be accurate.
- FIG. 13 is a diagram that illustrates object occlusion.
- the occluded part of object A shows in reference frame 1 and is hidden by object B in reference frame 2 .
- the referenced pixel from reference frame 2 is from object B.
- using only the warped pixel from the reference frame 1 is desirable. Accordingly, using a technique that detects occlusions, instead of or in addition to the above blending, may provide a better blending result, and hence a better reference frame.
- the motion vector of the occluded part of object A points to object B in reference frame 2 .
- the first situation is that the warped pixel values E warped (r1) and E warped (r2) are very different because they are from two different objects.
- the second situation is that the pixels in object B are referenced by multiple motion vectors, which are for object B in the current frame and for the occluded part of object A in the current frame.
- N ref (r2) /N ref (r1) is greater than a threshold T ref .
- N ref (r2) is the total number of times that the referenced pixel in the reference frame 1 is referenced by any pixel in the current co-located frame. Given the existence of subpixel interpolation described above, N ref (r2) is counted when the reference subpixel location is within one pixel length of the interested pixel location. Moreover, if mv r2 points to a subpixel location, the weighted average of N ref (r2) of the four neighboring pixels as the total number of references for the current subpixel location. N ref (r1) is similarly defined.
- an occlusion can be detected in the first reference frame using the first warped reference frame and the second warped reference frame. Then, the blending of the warped reference frames can include populating pixel positions of the optical flow reference frame corresponding to the occlusion with pixel values from the second warped reference frame. Similarly, an occlusion can be detected in the second reference frame using the first warped reference frame and the second warped reference frame. Then, the blending of the warped reference frames can include populating pixel positions of the optical flow reference frame corresponding to the occlusion with pixel values from the first warped reference frame
- FIG. 14 is a flowchart diagram of a process 1400 for motion compensated prediction of a video frame using a co-located reference frame determined using motion field estimation.
- the process 1400 can be implemented, for example, as a software program that may be executed by computing devices such as transmitting station 102 or receiving station 106 .
- the software program can include machine-readable instructions that may be stored in a memory such as the memory 204 or the secondary storage 214 , and that, when executed by a processor, such as CPU 202 , may cause the computing device to perform the process 1400 .
- the process 1400 can be implemented using specialized hardware or firmware. Some computing devices may have multiple memories or processors, and the operations described in the process 1400 can be distributed using multiple processors, memories, or both.
- the process 1400 may be performed during an encoding process, such as performed using the encoder 400 shown in FIG. 4 , or during a decoding process, such as performed using the decoder 500 shown in FIG. 5 .
- the process 1400 may be partially performed as part of a reconstruction loop of an encoder, such as using the dequantization stage 410 , the inverse transform stage 412 , the reconstruction stage 414 , and/or the loop filtering stage 416 shown in FIG. 4 , as well as using a prediction stage of the encoder, such as using the intra/inter prediction stage 402 shown in FIG. 4 .
- information used for the prediction may be derived from the reconstruction loop of the encoder.
- the process 1400 when performed during a decoding process, may be performed using conventional aspects of a decoder used to reconstruct reference frames and perform prediction against an encoded frame, such as the entropy decoding stage 502 , the dequantization stage 504 , the inverse transform stage 506 , the reconstruction stage 510 , and the intra/inter prediction stage 508 shown in FIG. 5 .
- information used for the prediction may be derived from a bitstream to which the reference frames and encoded frame are encoded, such as the compressed bitstream 420 shown in FIGS. 4 - 5 .
- a first reference frame and a second reference frame are reconstructed.
- reconstructing the first and second reference frames may include at least dequantizing, inverse transforming, and then reconstructing the reference frames from respective quantized transform coefficients processed at the encoder.
- reconstructing the first and second reference frames may include at least dequantizing, inverse transforming, and then reconstructing the reference frames from reference frame data encoded to a bitstream.
- motion trajectory information is determined using motion vectors of the first reference frame and the second reference frame.
- the motion trajectory information includes concatenated motion vectors produced by concatenating motion vectors of the first reference frame and motion vectors of the second reference frame.
- the concatenated motion vectors form a trajectory which intersects the first reference frame, the second reference frame, and the current/encoded frame.
- the motion trajectory information further includes indications of locations of the frame being encoded or decoded at which those concatenated motion vectors point.
- the motion vectors of the first reference frame and/or of the second reference frame may be signaled within the bitstream.
- Concatenating motion vectors of the first reference frame and motion vectors of the second reference frame may include interpolating motion vectors using motion vectors of a first set of motion vectors associated with the first frame and motion vectors of a second set of motion vectors associated with the second frame, extrapolating motion vectors using motion vectors of the first set of motion vectors and motion vectors of the second set of motion vectors, or otherwise joining motion vectors of the first set of motion vectors and motion vectors of the second set of motion vectors.
- a first motion vector may point from a location within a first reference frame and a second motion vector may point from that location within the first reference frame to a location within the current or encoded frame.
- Those first and second motion vectors may be joined and directly used as a motion trajectory for the current or encoded frame.
- the motion trajectory information may indicate a motion trajectory according to those first and second motion vectors.
- FIG. 15 illustrates an example of motion vector concatenation between a first reference frame 1500 , a second reference frame 1502 , and a current/encoded frame 1504 , in which a first motion vector 1506 points from a location within the first reference frame 1500 to a location within the second reference frame 1502 and a second motion vector 1508 points from that same location within the second reference frame 1502 to a location within the current/encoded frame 1504 .
- the second motion vector 1508 may be an already available motion vector, such as where the second motion vector 1508 was previously derived.
- the second motion vector 1508 may have been previously derived using the second reference frame 1502 and a third reference frame (not shown).
- the second motion vector 1508 after derivation, may thus be projected to the current/encoded frame 1504 .
- a motion vector resulting from concatenating the first motion vector 1506 and the second motion vector 1508 may be used as the motion trajectory for the current/encoded frame 1504 .
- the motion trajectory information for the current/encoded frame 1504 indicates a motion trajectory according to the first motion vector 1506 and the second motion vector 1508 .
- the current/encoded frame 1504 may be located in between the first reference frame 1500 and the second reference frame 1502 .
- that motion vector may be directly used as the motion trajectory for the current/encoded frame 1504 .
- the determination of the motion trajectory information may be performed without concatenating motion vectors.
- the motion trajectory information may be determined using more than two reference frames.
- a third reference frame may be reconstructed, and motion vectors of the third reference frame may be concatenated along with motion vectors of each of the first and second reference frames to determine the motion trajectory information.
- motion vectors each pointing between two of the more than two reference frames may be interpolated or extrapolated to determine interpolated motion vectors or extrapolated motion vectors, as the case may be.
- FIG. 16 illustrates an example of motion vector concatenation between a first reference frame 1600 , a second reference frame 1602 , a third reference frame 1604 , and a current/encoded frame 1606 , in which a first motion vector 1608 points from a location within the first reference frame 1600 to a location within the third reference frame 1604 and a second motion vector 1610 points from a location within the second reference frame 1602 to that same location within the third reference frame 1604 .
- An interpolated motion vector 1612 pointing between the first reference frame 1600 and the second reference frame 1602 may be determined by interpolating between the first motion vector 1608 and the second motion vector 1610 .
- the interpolated motion vector 1612 may be used as the motion trajectory for the current/encoded frame 1606 . In some implementations, where the current/encoded frame is not in between the reference frames, an extrapolated motion vector may instead be determined.
- a motion field estimate for the frame undergoing encoding or decoding is determined using the motion trajectory information.
- the motion field estimate is a two-dimensional array of motion vectors.
- the motion field estimate is determined using the motion trajectory information by placing motion vectors concatenated from motion vectors of the first and second reference frames within certain locations of the motion field estimate. For example, the location within the motion field estimate of a motion vector may be based on a pixel to which the motion vector points within the frame being encoded or decoded.
- one or more motion vectors may be unavailable at locations of the motion field estimate.
- a motion vector may be missing or omitted from the motion field estimate, such as because it was not derived from pixels of the reference frames.
- an unavailable motion vector may be interpolated using one or more neighboring motion vectors within the motion field estimate. For example, motion derived from pixels neighboring a co-located location within the first reference frame and the second reference frame may be interpolated to derive a motion vector. The derived motion vector may then be represented at the corresponding location of the motion field estimate.
- the one or more neighboring motion vectors may be weighted according to a relative importance for interpolating the previously unavailable motion vector. For example, weights can be determined for motion vector interpolation for the motion field estimate, in which motion vectors having greater weights are considered to be more important for use in interpolating an unavailable motion vector.
- the relative importance of a neighboring motion vector may be based on one or more aspects including, but not limited to, a magnitude and/or direction of the neighboring motion vector on its own or relative to other neighboring motion vectors, similarities between pixel intensities at co-located pixels of the reference frames, or the like.
- a co-located reference frame for the frame undergoing encoding or decoding is determined using the motion field estimate.
- the co-located reference frame may be directly interpolated using the motion field estimate.
- determining the co-located reference frame may include interpolating motion information using the motion field estimate and pixel information using the first reference frame and the second reference frame.
- the co-located reference frame may be used to adjust an offset between the first reference frame and the second reference frame.
- the motion vector 1612 shown in FIG. 16 is linearly projected to determine a motion field estimate for the current/encoded frame 1606 . This may assume that an object corresponding to that motion moves in constant velocity and direction. However, it may be the case that the motion of that object actually curves. In such a case, an extra step of inter prediction may be performed to correct for potential offsets from the actual motion trajectory to the linear projection of the motion vector 1612 .
- a motion model e.g., translational, affine, homographic, warped, etc.
- an inter-prediction process is performed for the frame undergoing encoding or decoding using the co-located reference frame.
- the inter-prediction process may be performed using a motion vector derived from the co-located reference frame, such as described below.
- the prediction process can include generating a prediction block from a reference block of the co-located reference frame and using a motion vector associated with that reference block.
- generating the prediction block in either an encoder or a decoder can include selecting the reference block or a co-located block, to the extent different, in the co-located reference frame as the prediction block.
- the prediction process at 1410 may be repeated for all blocks of the frame undergoing encoding or decoding until the frame is encoded or decoded.
- generating the prediction block can include performing a motion search within the co-located reference frame to select the best matching prediction block for the current block.
- generating the prediction block can include using a motion vector derived from the motion field estimate to generate the prediction block using pixels of the co-located reference frame.
- the prediction block is generated at the encoder, the resulting residual can be further processed, such as using the lossy encoding process described with regard to the encoder 400 of FIG. 4 .
- the prediction block is generated at the decoder, the decoded residual for the current block from the encoded bitstream can be combined with the prediction block to form a reconstructed block as described by example with regard to the decoder 500 of FIG. 5 .
- the process 1400 may form part of a rate distortion loop for the current block that uses various prediction modes, including one or more intra prediction modes and both single and compound inter prediction modes using the available prediction frames for the current frame.
- a single inter prediction mode uses only a single forward or backward reference frame for inter prediction.
- a compound inter prediction mode uses both a forward and a backward reference frame for inter prediction.
- the rate e.g., the number of bits
- the distortion may be calculated as the differences between pixel values of the block before encoding and after decoding. The differences can be a sum of absolute differences or some other measure that captures the accumulated error for blocks of the frames.
- the motion vector derived for the inter-prediction process may be derived according to a quality measurement evaluated for the motion vector. For example, quality measurements may be evaluated for multiple motion vectors of a pixel of the co-located reference frame. The motion vector used for the inter-prediction process may thus derived responsive to determining that the quality measurement evaluated for the motion vector is a highest one of the quality measurements.
- each motion vector represented within the motion field estimate may have a quality measurement.
- the quality measurement may be determined in one or more ways including, but not limited to, based on a difference between associated reference blocks, smoothness with respect to neighbor motion vectors, or the like. If the quality of a motion vector within the motion field estimate is low, such as based on a defined value range or a threshold comparison, the motion vector may be less useful for the inter-prediction process performed for the frame undergoing encoding or decoding.
- a ranking may be performed based on the quality measurement of the motion vectors to select the best available motion vector within the motion field estimate, which will be the motion vector derived from the motion field estimate and used for the inter-prediction process performed for the frame undergoing encoding or decoding.
- some or all of the motion vectors within the motion field estimate may be weighted based on their respective quality measurements. In some cases, the weighting may be used for the ranking, such as to select the best available motion vector.
- the process 1400 when performed during decoding, may further include decoding, from the bitstream, one or more syntax elements indicating whether to determine the motion field estimate using motion vector information of one or more reference frames.
- the one or more syntax elements may be encoded at the frame-level, including to a frame header of the encoded frame being decoded. In such a way, the decision on whether to determine a motion field estimate for a given frame as set forth in the process 1400 may be signaled within the bitstream.
- the motion trajectory information is determined at 1404 responsive to the one or more syntax elements indicating to determine the motion field estimate using the motion vector information.
- the process 1400 continues to 1404 , and then eventually to 1406 , 1408 , and 1410 .
- the process 1400 may instead proceed to decode the encoded frame using an optical flow reference frame generated based on an optical flow estimation of the encoded frame, the first reference frame, and the second reference frame.
- the optical flow reference fame may be determined and the optical flow estimation may be performed as disclosed herein, for example, with respect to the process 1000 and the process 1100 , respectively of FIGS. 10 - 11 .
- the process 1400 may omit determining the co-located reference frame.
- a motion vector may be derived directly from the motion field estimate and used for the inter-prediction process at 1410 .
- the co-located reference frame may still be determined, such as to adjust an offset between the first reference frame and the second reference frame.
- the motion field estimate may be used for purposes beyond deriving a motion vector for performing the inter-prediction process described at 1410 .
- the motion field estimate may be used for motion vector prediction.
- each of the processes 1000 , 1100 , and 1400 is depicted and described as a series of steps or operations. However, the steps or operations in accordance with this disclosure can occur in various orders and/or concurrently. Additionally, other steps or operations not presented and described herein may be used. Furthermore, not all illustrated steps or operations may be required to implement a method in accordance with the disclosed subject matter.
- encoding and decoding illustrate some examples of encoding and decoding techniques. However, it is to be understood that encoding and decoding, as those terms are used in the claims, could mean compression, decompression, transformation, or any other processing or change of data.
- example is used herein to mean serving as an example, instance, or illustration. Any aspect or design described herein as “example” is not necessarily to be construed as preferred or advantageous over other aspects or designs. Rather, use of the word “example” is intended to present concepts in a concrete fashion.
- the term “or” is intended to mean an inclusive “or” rather than an exclusive “or”. That is, unless specified otherwise, or clear from context, “X includes A or B” is intended to mean any of the natural inclusive permutations. That is, if X includes A; X includes B; or X includes both A and B, then “X includes A or B” is satisfied under any of the foregoing instances.
- Implementations of the transmitting station 102 and/or the receiving station 106 can be realized in hardware, software, or any combination thereof.
- the hardware can include, for example, computers, intellectual property (IP) cores, application-specific integrated circuits (ASICs), programmable logic arrays, optical processors, programmable logic controllers, microcode, microcontrollers, servers, microprocessors, digital signal processors or any other suitable circuit.
- IP intellectual property
- ASICs application-specific integrated circuits
- programmable logic arrays optical processors
- programmable logic controllers programmable logic controllers
- microcode microcontrollers
- servers microprocessors, digital signal processors or any other suitable circuit.
- signal processors should be understood as encompassing any of the foregoing hardware, either singly or in combination.
- signals and “data” are used interchangeably. Further, portions of the transmitting station 102 and the receiving station 106 do not necessarily have to be implemented in the same manner.
- the transmitting station 102 or the receiving station 106 can be implemented using a general purpose computer or general purpose processor with a computer program that, when executed, carries out any of the respective methods, algorithms and/or instructions described herein.
- a special purpose computer/processor can be utilized that contains other hardware for carrying out any of the methods, algorithms, or instructions described herein.
- the transmitting station 102 and the receiving station 106 can, for example, be implemented on computers in a video conferencing system.
- the transmitting station 102 can be implemented on a server and the receiving station 106 can be implemented on a device separate from the server, such as a hand-held communications device.
- the transmitting station 102 can encode content using an encoder 400 into an encoded video signal and transmit the encoded video signal to the communications device.
- the communications device can then decode the encoded video signal using a decoder 500 .
- the communications device can decode content stored locally on the communications device, for example, content that was not transmitted by the transmitting station 102 .
- Other suitable transmitting and receiving implementation schemes are available.
- the receiving station 106 can be a generally stationary personal computer rather than a portable communications device and/or a device including an encoder 400 may also include a decoder 500 .
- implementations of the present disclosure can take the form of a computer program product accessible from, for example, a computer-usable or computer-readable medium.
- a computer-usable or computer-readable medium can be any device that can, for example, tangibly contain, store, communicate, or transport the program for use by or in connection with any processor.
- the medium can be, for example, an electronic, magnetic, optical, electromagnetic, or a semiconductor device. Other suitable mediums are also available.
Abstract
Description
J=J data +λJ spatial (1)
J data=(E x u+E y v+E t)2
E x=(indexr2−indexcur)·E x (r1)/(indexr2−indexr1)+(indexcur−indexr1)·E x (r2)/(indexr2−indexr1) (3)
E y=(indexcur−indexr1)·E y (r1)/(indexr2−indexr1)+(indexcur−indexr1)·E y (r2)/(indexr2−indexr1) (4)
E t =E (r2) −E (r1) (5)
J spatial=(Δu)2+(Δv)2 (3)
mv cur =−mv r1 +mv r2
mv cur =−mv r1·(indexr2−indexr1)/(indexcur−indexr1), or
mv cur =mv r2·(indexr2−indexr1)/(indexr2−indexcur).
mv r1=(indexcur−indexr1)/(indexr2−indexr1)·mv cur
mv r2=(indexr2−indexcur)/(indexr2−indexr1)·mv cur
E (cur) =E warped (r1)·(indexr2−indexcur)/(indexr2−indexr1)+E warped (r2)·(indexcur−indexr1)/(indexr2−indexr1)
E(cur)=Ewarped (r2)
Claims (25)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US17/090,094 US11917128B2 (en) | 2017-08-22 | 2020-11-05 | Motion field estimation based on motion trajectory derivation |
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US15/683,684 US11284107B2 (en) | 2017-08-22 | 2017-08-22 | Co-located reference frame interpolation using optical flow estimation |
US17/090,094 US11917128B2 (en) | 2017-08-22 | 2020-11-05 | Motion field estimation based on motion trajectory derivation |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US15/683,684 Continuation-In-Part US11284107B2 (en) | 2017-08-22 | 2017-08-22 | Co-located reference frame interpolation using optical flow estimation |
Publications (2)
Publication Number | Publication Date |
---|---|
US20210144364A1 US20210144364A1 (en) | 2021-05-13 |
US11917128B2 true US11917128B2 (en) | 2024-02-27 |
Family
ID=75845509
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US17/090,094 Active 2037-11-06 US11917128B2 (en) | 2017-08-22 | 2020-11-05 | Motion field estimation based on motion trajectory derivation |
Country Status (1)
Country | Link |
---|---|
US (1) | US11917128B2 (en) |
Citations (24)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6097854A (en) | 1997-08-01 | 2000-08-01 | Microsoft Corporation | Image mosaic construction system and apparatus with patch-based alignment, global block adjustment and pair-wise motion-based local warping |
US20040252759A1 (en) | 2003-06-13 | 2004-12-16 | Microsoft Corporation | Quality control in frame interpolation with motion analysis |
USRE39279E1 (en) | 1991-11-08 | 2006-09-12 | Matsushita Electric Industrial Co., Ltd. | Method for determining motion compensation |
US20060233253A1 (en) * | 2005-03-10 | 2006-10-19 | Qualcomm Incorporated | Interpolated frame deblocking operation for frame rate up conversion applications |
US20080204592A1 (en) | 2007-02-22 | 2008-08-28 | Gennum Corporation | Motion compensated frame rate conversion system and method |
US20090148058A1 (en) * | 2007-12-10 | 2009-06-11 | Qualcomm Incorporated | Reference selection for video interpolation or extrapolation |
US20110149106A1 (en) * | 2009-12-21 | 2011-06-23 | Olympus Imaging Corp. | Generating a synthesized image from a plurality of images |
US20110249734A1 (en) * | 2010-04-09 | 2011-10-13 | Segall Christopher A | Methods and Systems for Intra Prediction |
US8184200B1 (en) * | 2008-04-22 | 2012-05-22 | Marvell International Ltd. | Picture rate conversion system for high definition video |
US20120237114A1 (en) | 2011-03-16 | 2012-09-20 | Electronics And Telecommunications Research Institute | Method and apparatus for feature-based stereo matching |
US20130070856A1 (en) * | 2010-06-04 | 2013-03-21 | Kazushi Sato | Image processing apparatus and method |
US20130114002A1 (en) * | 2011-10-25 | 2013-05-09 | Microsoft Corporation | Estimating Quality of a Video Signal |
US20130121416A1 (en) | 2010-07-21 | 2013-05-16 | Dolby Laboratories Licensing Corporation | Reference Processing Using Advanced Motion Models for Video Coding |
US20140037982A1 (en) | 2003-06-16 | 2014-02-06 | Lam Research Corporation | Method for Strengthening Adhesion Between Dielectric Layers Formed Adjacent to Metal Layers |
JP2014511054A (en) | 2011-02-18 | 2014-05-01 | シーメンス アクチエンゲゼルシヤフト | Coding method and image coding apparatus for compressing image sequence |
US20140307982A1 (en) | 2013-04-16 | 2014-10-16 | The Government Of The United States Of America, As Represented By The Secretary Of The Navy | Multi-frame super-resolution of image sequence with arbitrary motion patterns |
US20150078456A1 (en) | 2013-07-31 | 2015-03-19 | Nokia Corporation | Method and apparatus for video coding and decoding |
US20150339806A1 (en) | 2014-05-26 | 2015-11-26 | Fujitsu Limited | Image denoising method and image denoising apparatus |
US20160286232A1 (en) * | 2015-03-27 | 2016-09-29 | Qualcomm Incorporated | Deriving motion information for sub-blocks in video coding |
US20170094305A1 (en) | 2015-09-28 | 2017-03-30 | Qualcomm Incorporated | Bi-directional optical flow for video coding |
WO2017133661A1 (en) | 2016-02-05 | 2017-08-10 | Mediatek Inc. | Method and apparatus of motion compensation based on bi-directional optical flow techniques for video coding |
US20180376166A1 (en) | 2017-06-23 | 2018-12-27 | Qualcomm Incorporated | Memory-bandwidth-efficient design for bi-directional optical flow (bio) |
US20190068991A1 (en) | 2017-08-22 | 2019-02-28 | Google Llc | Co-Located Reference Frame Interpolation Using Optical Flow Estimation |
US20200029071A1 (en) | 2016-10-11 | 2020-01-23 | Electronics And Telecommunications Research Institute | Image encoding/decoding method and apparatus and recording medium for storing bitstream |
-
2020
- 2020-11-05 US US17/090,094 patent/US11917128B2/en active Active
Patent Citations (24)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
USRE39279E1 (en) | 1991-11-08 | 2006-09-12 | Matsushita Electric Industrial Co., Ltd. | Method for determining motion compensation |
US6097854A (en) | 1997-08-01 | 2000-08-01 | Microsoft Corporation | Image mosaic construction system and apparatus with patch-based alignment, global block adjustment and pair-wise motion-based local warping |
US20040252759A1 (en) | 2003-06-13 | 2004-12-16 | Microsoft Corporation | Quality control in frame interpolation with motion analysis |
US20140037982A1 (en) | 2003-06-16 | 2014-02-06 | Lam Research Corporation | Method for Strengthening Adhesion Between Dielectric Layers Formed Adjacent to Metal Layers |
US20060233253A1 (en) * | 2005-03-10 | 2006-10-19 | Qualcomm Incorporated | Interpolated frame deblocking operation for frame rate up conversion applications |
US20080204592A1 (en) | 2007-02-22 | 2008-08-28 | Gennum Corporation | Motion compensated frame rate conversion system and method |
US20090148058A1 (en) * | 2007-12-10 | 2009-06-11 | Qualcomm Incorporated | Reference selection for video interpolation or extrapolation |
US8184200B1 (en) * | 2008-04-22 | 2012-05-22 | Marvell International Ltd. | Picture rate conversion system for high definition video |
US20110149106A1 (en) * | 2009-12-21 | 2011-06-23 | Olympus Imaging Corp. | Generating a synthesized image from a plurality of images |
US20110249734A1 (en) * | 2010-04-09 | 2011-10-13 | Segall Christopher A | Methods and Systems for Intra Prediction |
US20130070856A1 (en) * | 2010-06-04 | 2013-03-21 | Kazushi Sato | Image processing apparatus and method |
US20130121416A1 (en) | 2010-07-21 | 2013-05-16 | Dolby Laboratories Licensing Corporation | Reference Processing Using Advanced Motion Models for Video Coding |
JP2014511054A (en) | 2011-02-18 | 2014-05-01 | シーメンス アクチエンゲゼルシヤフト | Coding method and image coding apparatus for compressing image sequence |
US20120237114A1 (en) | 2011-03-16 | 2012-09-20 | Electronics And Telecommunications Research Institute | Method and apparatus for feature-based stereo matching |
US20130114002A1 (en) * | 2011-10-25 | 2013-05-09 | Microsoft Corporation | Estimating Quality of a Video Signal |
US20140307982A1 (en) | 2013-04-16 | 2014-10-16 | The Government Of The United States Of America, As Represented By The Secretary Of The Navy | Multi-frame super-resolution of image sequence with arbitrary motion patterns |
US20150078456A1 (en) | 2013-07-31 | 2015-03-19 | Nokia Corporation | Method and apparatus for video coding and decoding |
US20150339806A1 (en) | 2014-05-26 | 2015-11-26 | Fujitsu Limited | Image denoising method and image denoising apparatus |
US20160286232A1 (en) * | 2015-03-27 | 2016-09-29 | Qualcomm Incorporated | Deriving motion information for sub-blocks in video coding |
US20170094305A1 (en) | 2015-09-28 | 2017-03-30 | Qualcomm Incorporated | Bi-directional optical flow for video coding |
WO2017133661A1 (en) | 2016-02-05 | 2017-08-10 | Mediatek Inc. | Method and apparatus of motion compensation based on bi-directional optical flow techniques for video coding |
US20200029071A1 (en) | 2016-10-11 | 2020-01-23 | Electronics And Telecommunications Research Institute | Image encoding/decoding method and apparatus and recording medium for storing bitstream |
US20180376166A1 (en) | 2017-06-23 | 2018-12-27 | Qualcomm Incorporated | Memory-bandwidth-efficient design for bi-directional optical flow (bio) |
US20190068991A1 (en) | 2017-08-22 | 2019-02-28 | Google Llc | Co-Located Reference Frame Interpolation Using Optical Flow Estimation |
Non-Patent Citations (22)
Title |
---|
"Introduction to Video Coding Part 1: Transform Coding", Mozilla, Mar. 2012, 171 pp. |
"Overview VP7 Data Format and Decoder", Version 1.5, On2 Technologies, Inc., Mar. 28, 2005, 65 pp. |
"VP6 Bitstream and Decoder Specification", Version 1.02, On2 Technologies, Inc., Aug. 17, 2006, 88 pp. |
"VP6 Bitstream and Decoder Specification", Version 1.03, On2 Technologies, Inc., Oct. 29, 2007, 95 pp. |
"VP8 Data Format and Decoding Guide, WebM Project", Google On2, Dec. 1, 2010, 103 pp. |
A. Alshin et al., "Bi-directional optical flow for improving motion compensation", 2010 Picture Coding Symposium (PCS 2010), Nagoya, Japan, Dec. 8-10, 2010 (IEEE, Piscataway, NJ), pp. 422-425. |
Alexander Alshin et al., "Bi-directional Optical Flow for Future Video Codec", 2016 Data Compression Conference (DCC), IEEE, Mar. 30, 2016, pp. 83-90. |
Bankoski et al., "VP8 Data Format and Decoding Guide draft-bankoski-vp8-bitstream-02", Network Working Group, Internet-Draft, May 18, 2011, 288 pp. |
Bankoski et al., "VP8 Data Format and Decoding Guide", Independent Submission RFC 6389, Nov. 2011, 305 pp. |
Bankoski, et al., "Technical Overview of VP8, An Open Source Video Codec for the Web", Jul. 11, 2011, 6 pp. |
International Search Report and Written Opinion in PCT/US2018/032054, dated Jul. 23, 2018, 14 pgs. |
J. Chen et al., "Algorithm description of Joint Exploration Test Model 7 (JEM7)", Joint Video Exploration Team (JVET) of ITU-T SG 16 WP 3 and ISO/IEC JTC1/SC29/WG11, 7th Meeting, Torino, Italy, Jul. 13-21, 2017 (url: http://phenix.int-evry.fr/jvet/, document No. JVET-G1001 (Aug. 19, 2017), 48 pgs. |
Series H: Audiovisual and Multimedia Systems, Coding of moving video: Implementors Guide for H.264: Advanced video coding for generic audiovisual services, International Telecommunication Union, Jul. 30, 2010, 15 pp. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services—Coding of moving video, Advanced video coding for generic audiovisual services, Amendment 1: Support of additional colour spaces and removal of the High 4:4:4 Profile, International Telecommunication Union, Jun. 2006, 16 pp. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services—Coding of moving video, Advanced video coding for generic audiovisual services, International Telecommunication Union, Version 11, Mar. 2009. 670 pp. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services—Coding of moving video, Advanced video coding for generic audiovisual services, International Telecommunication Union, Version 12, Mar. 2010, 676 pp. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services—Coding of moving video, Advanced video coding for generic audiovisual services, Version 1, International Telecommunication Union, May 2003, 282 pp. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services—Coding of moving video, Advanced video coding for generic audiovisual services, Version 3, International Telecommunication Union, Mar. 2005, 343 pp. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services—Coding of moving video, Advanced video coding for generic audiovisual services, Version 8, International Telecommunication Union, Nov. 1, 2007, 564 pp. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services—Coding of moving video, Amendment 2: New profiles for professional applications, International Telecommunication Union, Apr. 2007, 75 pp. |
Sun, Deqing et al.; "Learning Optical Flow"; ECCV 2008, Part III, LNC 5304; pp. 83-97. |
Yi Chin et al., "Dense true motion field compensation for video coding", 2013 IEEE International Conference on Image Processing, IEEE, (Sep. 15, 2013), pp. 1958-1961. |
Also Published As
Publication number | Publication date |
---|---|
US20210144364A1 (en) | 2021-05-13 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US11284107B2 (en) | Co-located reference frame interpolation using optical flow estimation | |
KR102400078B1 (en) | Optical flow estimation for motion compensated prediction in video coding | |
US11876974B2 (en) | Block-based optical flow estimation for motion compensated prediction in video coding | |
US10555000B2 (en) | Multi-level compound prediction | |
US10116957B2 (en) | Dual filter type for motion compensated prediction in video coding | |
US11025950B2 (en) | Motion field-based reference frame rendering for motion compensated prediction in video coding | |
US10582212B2 (en) | Warped reference motion vectors for video compression | |
US10694205B2 (en) | Entropy coding of motion vectors using categories of transform blocks | |
Andris et al. | A proof-of-concept framework for PDE-based video compression | |
US10419777B2 (en) | Non-causal overlapped block prediction in variable block size video coding | |
US20220191480A1 (en) | Adaptive gop structure using temporal dependencies likelihood | |
US11917128B2 (en) | Motion field estimation based on motion trajectory derivation | |
CN111886868B (en) | Method and apparatus for adaptive temporal filtering for substitute reference frame rendering | |
WO2023205371A1 (en) | Motion refinement for a co-located reference frame | |
CN118055253A (en) | Optical flow estimation for motion compensated prediction in video coding | |
WO2023287418A1 (en) | Reference motion vector candidate bank |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
FEPP | Fee payment procedure |
Free format text: ENTITY STATUS SET TO UNDISCOUNTED (ORIGINAL EVENT CODE: BIG.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:XU, YAOWU;LI, BOHAN;HAN, JINGNING;REEL/FRAME:054311/0962Effective date: 20201030 |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: DOCKETED NEW CASE - READY FOR EXAMINATION |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: NON FINAL ACTION MAILED |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: RESPONSE TO NON-FINAL OFFICE ACTION ENTERED AND FORWARDED TO EXAMINER |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: NON FINAL ACTION MAILED |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: FINAL REJECTION MAILED |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: DOCKETED NEW CASE - READY FOR EXAMINATION |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: NOTICE OF ALLOWANCE MAILED -- APPLICATION RECEIVED IN OFFICE OF PUBLICATIONS |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: NOTICE OF ALLOWANCE MAILED -- APPLICATION RECEIVED IN OFFICE OF PUBLICATIONS |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: PUBLICATIONS -- ISSUE FEE PAYMENT VERIFIED |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: AWAITING TC RESP, ISSUE FEE PAYMENT VERIFIED |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: PUBLICATIONS -- ISSUE FEE PAYMENT VERIFIED |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
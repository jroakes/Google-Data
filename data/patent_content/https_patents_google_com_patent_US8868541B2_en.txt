US8868541B2 - Scheduling resource crawls - Google Patents
Scheduling resource crawls Download PDFInfo
- Publication number
- US8868541B2 US8868541B2 US13/011,426 US201113011426A US8868541B2 US 8868541 B2 US8868541 B2 US 8868541B2 US 201113011426 A US201113011426 A US 201113011426A US 8868541 B2 US8868541 B2 US 8868541B2
- Authority
- US
- United States
- Prior art keywords
- resource
- crawl
- interval
- resources
- determining
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Fee Related, expires
Links
- 238000000034 method Methods 0.000 claims abstract description 26
- 238000004590 computer program Methods 0.000 claims abstract description 14
- 230000008859 change Effects 0.000 claims description 67
- 230000009193 crawling Effects 0.000 claims description 30
- 238000012545 processing Methods 0.000 claims description 26
- 230000004044 response Effects 0.000 claims description 7
- 238000005096 rolling process Methods 0.000 claims description 6
- 230000000007 visual effect Effects 0.000 claims description 5
- 238000009877 rendering Methods 0.000 claims 3
- 230000036541 health Effects 0.000 abstract description 6
- 238000004891 communication Methods 0.000 description 8
- 238000013500 data storage Methods 0.000 description 6
- 230000008569 process Effects 0.000 description 6
- 238000010586 diagram Methods 0.000 description 4
- 238000012544 monitoring process Methods 0.000 description 4
- 238000013515 script Methods 0.000 description 4
- 230000008901 benefit Effects 0.000 description 3
- 230000007423 decrease Effects 0.000 description 3
- 230000003993 interaction Effects 0.000 description 3
- 230000003287 optical effect Effects 0.000 description 3
- 230000000644 propagated effect Effects 0.000 description 3
- 230000003247 decreasing effect Effects 0.000 description 2
- 230000006870 function Effects 0.000 description 2
- 238000000926 separation method Methods 0.000 description 2
- 101100129500 Caenorhabditis elegans max-2 gene Proteins 0.000 description 1
- 238000013459 approach Methods 0.000 description 1
- 230000005540 biological transmission Effects 0.000 description 1
- 238000004364 calculation method Methods 0.000 description 1
- 230000001419 dependent effect Effects 0.000 description 1
- 239000012634 fragment Substances 0.000 description 1
- 230000008571 general function Effects 0.000 description 1
- 230000003862 health status Effects 0.000 description 1
- 230000000977 initiatory effect Effects 0.000 description 1
- 239000004973 liquid crystal related substance Substances 0.000 description 1
- 230000007774 longterm Effects 0.000 description 1
- 238000007726 management method Methods 0.000 description 1
- 238000010295 mobile communication Methods 0.000 description 1
- 239000004065 semiconductor Substances 0.000 description 1
- 230000001953 sensory effect Effects 0.000 description 1
- 239000000758 substrate Substances 0.000 description 1
- 238000012546 transfer Methods 0.000 description 1
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/951—Indexing; Web crawling techniques
Definitions
- This specification relates to scheduling resource crawls.
- Having fixed or limited computing system resources e.g., central processing unit time, memory space, and storage space
- balancing the allocation of crawl resources between web pages can sometimes lead to crawling some web pages more often than necessary (e.g., if the content has not changed), and crawling other web pages less often than necessary, and thus, contributing to a miss rate for content updates.
- a framework is provided for scheduling resource crawls such that a crawl scheduler determines the health of a document, i.e., whether it can be crawled, the popularity of the document, and the frequency of “interesting,” i.e., substantive, content changes, and based on this information, estimates an appropriate crawl interval for each web resource to improve crawl resource utilization.
- one innovative aspect of the subject matter described in this specification can be embodied in methods that include the actions of crawling a plurality of resources multiple times to determine a respective change frequency for each resource wherein the change frequency is based at least partly on detected changes to the resource; associating one of a plurality of different groups with each of the resources based at least partly on the resource's respective change frequency, wherein each group corresponds to a plurality of unique crawling intervals within a time range for the group, and wherein each resource in the plurality resources will be crawled at least as frequently as specified by a maximum crawling interval for the respective group; and determining a subscription count for a first resource in the plurality of resources and, based at least partly on the subscription count, associating the first resource with a specific crawling interval for the associated group, wherein the first resource will be crawled with a frequency specified by the specific crawling interval or a lesser frequency.
- Other embodiments of this aspect include corresponding systems, apparatus, and computer programs, configured to perform the actions of the methods,
- the detected changes can be one or more changes to a prominent section of a rendered version of the resource.
- the acts can include crawling the first resource with a crawl frequency less than or equal to the frequency specified by the specific crawling interval, such that the crawl frequency is based at least partly on whether previous crawl attempts were successful.
- the acts can include determining whether previous crawl attempts were successful, and based on a negative determination, crawling the first resource at a crawl frequency less than the frequency specified by the specific crawl interval.
- Crawling the plurality of resource multiple times to determine the respective change frequency for each resource can include: determining a difference in time between a detected change to the resource and a previously detected change to the resource; and calculating a rolling average based on the difference in time.
- the acts can include crawling the first resource with a crawl frequency less than or equal to the frequency specified by the specific crawling interval, such that the crawl frequency is based at least partly on whether a change to the first resource was detected in a previous crawl attempt, and, in some cases, can include determining an elapsed time since a previously detected change to the first resource, determining whether a change to the first resource was detected, and adjusting the crawl frequency to correspond to the elapsed time if no change was detected.
- FIG. 1 is a block diagram illustrating an example web feed subscription system serviced by a crawl scheduler.
- FIGS. 2A-2C are flow charts illustrating an example technique for managing crawl resources.
- FIG. 3 is a block diagram of an example crawl scheduler.
- Crawled documents are typically downloaded and indexed for use by search engines and other applications, including, for example, web feed generation systems, as described below.
- Documents are typically re-crawled, for example, according to a crawl refresh policy, to monitor and refresh the downloaded content with updated information.
- Crawl refresh policies are typically designed to balance the need for refreshing collected information, and the number of documents that can be actively managed and maintained.
- a web crawler can process up to 2 million documents per hour and is configured to retrieve updated content every two hours, a maximum of four million documents could be retrieved and processed by the web crawler at a given time.
- the refresh period is increased to every four hours, the number of documents that can be retrieved and processed by the web crawler may be doubled.
- the probability that the downloaded documents will become stale before the next crawl cycle may also increase.
- the maximum number of documents that can be downloaded in a given time period may be reduced by expending resources to crawl inaccessible documents. Further, expending resources to refresh downloaded documents that are updated much less frequently unnecessarily limits the total number of documents that can be maintained by the web crawler.
- crawl resource utilization can be improved.
- a crawl resource scheduler determines the health or accessibility of the resource based upon stored data indicating the success of a prior crawl attempt. If the prior crawl attempt was successful, the web resource is determined to be healthy and a crawl request is issued to a web crawler. If the prior crawl attempt was unsuccessful, a determination is made as to whether to permanently discontinue attempts to crawl the web resource and/or whether to extend the crawl interval.
- an error count is maintained to limit the number of crawl attempts made after consecutive failures.
- the error count is reset after a successful crawl attempt.
- the number of crawl attempts allowed after consecutive failures may depend on the cause or type of failure as indicated by the reply status returned by the web crawler after each crawl attempt (e.g., those attributable to external server issues such as Domain Name Service issues, time-outs, capacity limits).
- the crawl resource scheduler determines an appropriate minimum crawl interval based on, for example, the popularity of the web resource. For example, in some implementations, the crawl interval is determined based on a subscription count (i.e., the number of web feed subscribers) for the web resource. Based on the subscription count, the web resource is associated with one of a number of ranges, or buckets, having an associated crawl interval. For example, web resources having a subscription count of 0 to 10 may be associated with a first bucket having an associated crawl interval of 30 minutes, while web resources having a subscription count of 11 or more may be associated with a second bucket having an associated crawl interval of 15 minutes.
- the policy may be extended by adding more buckets, and by scaling the crawl intervals associated with each bucket.
- each bucket is associated with a range of crawl intervals and web resources within each bucket are prioritized based on their corresponding subscription counts such that the shortest crawl intervals are allocated to the web resources having the highest subscription counts within the bucket. In this way, the available crawl resources can be utilized to service the largest number of subscribers at the least possible expense of missing updates to less popular web resources.
- the crawl rate for each resource is set to be inversely proportional to the web resource's subscription count such that as a web resource's subscription count increases, the crawl interval associated with the web resource follows a monotonically decreasing function, thereby resulting in increased crawl rates.
- the crawl rate of the web resource decreases.
- the utilization of crawl resources is also improved by determining an appropriate crawl interval based on the frequency of interesting content changes, for example, based on whether a web feed is generated by a web feed generation system as described below.
- the minimum crawl interval as determined based a web resource's popularity, is modified or increased to correspond to the frequency of interesting content changes to the web resource.
- a web resource may be reprioritized within the bucket if the crawl rate allocated based on popularity is significantly different from the frequency of interesting content changes to the web resource.
- only web resources within buckets having the smallest craw intervals, and therefore, the highest cost in terms of crawl resources are reprioritized.
- web resources may first be prioritized based on the frequency of interesting content changes to the web resource. Then, web resources having an allocated crawl interval greater than one-half of the corresponding change frequency are promoted once for every web resource having a shorter crawl interval and a lower popularity score, until either the shortest crawl interval in the bucket is allocated to the web resource or the allocated crawl interval is no longer greater than one-half of the corresponding change frequency. In some cases, a web resource may be reassigned to another bucket if the change rate is significantly different from the available crawl rates within the bucket.
- a web resource's change rate is significantly higher than the available crawl rates, such as a change rate of every hour and a bucket having a crawl rate range of once a day to once every 2 days, then the web resource is bumped into a higher priority bucket and scaled accordingly.
- crawl intervals based on popularity are counter balanced by the frequency if an interesting content change is detected to improve crawl resource utilization while avoiding an unnecessary increase in the probability that less popular web resources will go stale before the next crawl.
- FIG. 1 is a block diagram illustrating an example web resource system 100 including software components: a web feed generation system (WFGS) 110 , a crawler 120 , and a crawl scheduler 130 .
- WFGS 110 generates web feeds 111 for client devices 106 based on requests 109 , e.g., subscription requests identifying a web resource 105 to be monitored for content changes.
- a network 102 e.g., the Internet, connects websites 104 , client devices 106 , and system 100 .
- Websites 104 include one or more web resources 105 associated with a domain name and hosted by one or more servers.
- An example website is a collection of web pages formatted in hypertext markup language (HTML) that can contain text, images, multimedia content, and programming elements, e.g., scripts.
- HTML hypertext markup language
- Each website 104 for example, is maintained by a publisher, e.g., an entity that manages and/or owns the website.
- a web resource 105 is any data that can be provided by a website 104 or by a process such as an executing software program, for example, over the network 102 and that is associated with a web resource address such as a Uniform Resource Locator (URL), for instance.
- a web resource can be provided in one or more pieces (e.g., file fragments) or as a stream.
- Web resources 105 include HTML pages, eXtensible Markup Language (XML) documents, word processing documents, PDF documents, images, audio content, video, and feed sources, to name just a few.
- Web resources 105 can include content, e.g., words, phrases, and images and may include embedded information, e.g., meta information and hyperlinks or “links,” and/or embedded instructions (e.g., JavaScript scripts).
- a client device 106 is an electronic device capable of requesting and receiving web resources 105 over network 102 .
- Example client devices 106 include personal computers, mobile communication devices, smart phones, tablet computers, server systems, and other devices that can send and receive data over network 102 .
- Client device 106 typically includes a user application, e.g., a web browser, to facilitate the sending and receiving of data over network 102 and/or a web server application for re-publishing the data, e.g., for use by other client devices 106 .
- WFGS 110 identifies updated content in web resources 105 and generates a web feed 111 containing text snippets of the updated content.
- WFGS 110 is implemented such that only interesting content changes generate a web feed 111 .
- Interesting content changes are detected, for example, by determining the importance of the web resource section containing the updated content.
- the importance of the section is based on one or more signals, including, for example, the prominence of the section within the rendered page layout in which the updated content is displayed.
- visual layout information is determined, including, for example, the overall page width/height, section level width/height, whether the resource contains a prominent section, the ratio between regular text size and anchor text within the page, and for vertically aligned sections, the number of total columns, the width of each column, and each column's parameters (e.g., overall height of column, largest cell within the column).
- This information is then used to determine the relative importance of each section and/or the resource.
- the ratio between regular text size and anchor text within a webpage is typically useful in distinguishing a portal page (where most of the page content consists of anchors) from a regular page (where most of the content consists of text/images).
- a section having a section width greater than 50% of the overall page width and a section height greater than 50% of the overall page height indicates the section is a predominant section within the page and is, therefore, likely to be more important than a section having a much smaller height ratio located at the bottom of the page (e.g., a footer section).
- Crawled web resources 105 are indexed and, optionally, cached in data storage 112 .
- Data storage 112 also stores information associated with each web resource, including, for example, information related to the number of subscription requests associated with the web resource (i.e., a subscription count), and information related to previous crawl attempts.
- the information related to previous crawl attempts includes, for example, the number of consecutive errors, and the N most recent crawl histories, where each crawl history includes the service status reply (e.g., an HTTP response status code such as error code “403-Forbidden” or “404-Not Found”) received by crawler 120 , and the length of time to complete a crawl request (e.g., from the time the web resource is first selected for processing until crawler 120 returns updated content or returns a failed status reply).
- the service status reply e.g., an HTTP response status code such as error code “403-Forbidden” or “404-Not Found
- Web resources 105 are crawled by crawler 120 to retrieve updated content provided by web resource 105 .
- the crawl policy for each web resource is determined by crawl scheduler 130 based on, for example, the crawl status of the web resource and an estimated crawl interval.
- the crawl status e.g., Healthy, Dead, Temporarily Dead
- the next or new crawl interval is estimated based on, for example, the popularity of the web resource, the frequency of interesting changes to content provided by the web resource, and crawl status of the web resource.
- FIGS. 2A-2C illustrate an example technique for scheduling resource crawls.
- a crawl status for the selected web resource is determined ( 205 ) and if the crawl status is “Dead” ( 210 ), no further processing of the web resource is performed and the next web resource is selected ( 215 ). Otherwise, the previously estimated crawl interval is determined (e.g., by retrieving the information from data storage 112 ) and a determination is made as to whether a previously estimated crawl interval for the current web resource has elapsed. For example, as illustrated in FIG. 2A , the amount of time t that has elapsed since the last crawl attempt and the previously estimated crawl interval (eCI) are determined ( 220 , 225 ) and compared ( 230 ).
- t is not greater than (or, optionally, equal to) eCI, no further processing of the web resource is necessary and a determination is made with respect to the next web resource.
- Alternative techniques for determining whether the estimated crawl interval has elapsed may also be implemented, including, for example, comparing a current clock reference to an estimated clock time computed based on prior crawl history and the previously estimated crawl interval.
- the error count n is incremented ( 260 ) and compared to a threshold representing a maximum number of allowed failures (max) ( 265 ).
- a threshold representing a maximum number of allowed failures (max)
- Alternative techniques for determining whether a threshold value has been met or exceeded may be used, including, for example, decrementing a number of allowed failed attempts each time a crawl attempt fails and comparing the value with a minimum threshold to determine if the threshold value has been exceeded or met.
- the monitored value is modified such that it approaches the relevant limit or threshold.
- the next crawl interval is estimated ( 250 ), for example, by extending the previous crawl interval, as described below, and a crawl request is issued for the web resource ( 255 ). If the comparison between n and max is positive (i.e., n>max), a determination is made as to whether the crawl status associated with the web resource is set to “Temporarily Dead” ( 270 ). If this determination is positive, the crawl status for the web resource is set to “Dead” ( 275 ), and no further processing of the web resource is performed.
- the cause or type of failure for at least one of the recent failed attempts is determined ( 280 ), e.g., by accessing the crawl history associated with the web resource and stored in, for example, data storage 112 , and a determination is made as to whether one or more of the failures was due to external server issues ( 282 ), i.e., DNS issues, time outs, capacity limits. If this determination is negative, the crawl status for the web resource is set to “Dead” ( 284 ), and no further processing of the web resource is performed.
- the crawl status for the web resource is set to “Temporarily Dead” ( 285 ) and the next crawl interval is set to an extended period of time (e.g., ten times the previous crawl interval, or some other value) ( 290 ).
- the extended period of time may be predetermined based on a system setting or dynamically determined based on a calculation or a recognized pattern or function.
- the crawl interval is increased by multiplying the previous crawl interval by a factor, e.g., 1.2, and the maximum number of attempts is set to 3.
- the number of failed attempts n is set to a value that will provide additional crawl attempts at a reasonable rate (e.g., 0, max/2, max ⁇ 2, or some other value) before the crawl status for the web resource is set to “Dead.” If, as discussed above, other criterion or techniques are used to determine if a limit related to crawl attempt failures has been reached or exceeded, n is modified such that one or more crawl attempts are carried out at a reasonable rate after the extended period of time has elapsed. In some implementations, a crawl request is also issued for the web resource ( 297 ) prior to selecting the next web resource. Otherwise, no further processing of the web resource is performed and the next web resource is selected.
- a reasonable rate e.g., 0, max/2, max ⁇ 2, or some other value
- the techniques disclosed herein reduce the time a crawler spends crawling web resources that are not crawl-able for any number of reasons, including, for example, the web resource being offline, the crawler being blocked by a robots.txt file, the crawler being rejected due to a capacity limit of web resource being reached, or various other issues.
- an initial crawl rate e.g., the fastest crawl rate allowed for a particular web resource
- modifying the crawl rate to optimize the use of crawl resources for example, by assigning a new crawl rate after the previous crawl interval has elapsed in accordance with the popularity and/or change frequency of the web resource (i.e., the frequency at which interesting changes are made to the content provided by the web resource), as described above with respect to FIGS. 2A-2C .
- a crawl interval is assigned to the web resource, for example, based on the popularity of the web resource, for example, based on the number of users subscribing to a web feed for the web resource such that more popular web resources are deemed to be more important. For example, as described above, web resources having less than a threshold number of subscribers, e.g., less than 11 subscribers, may be assigned a crawl interval of 30 minutes, and web resources having more subscribers may be assigned a crawl interval of 15 minutes.
- Other signals may also be used to determine the popularity of the web resource or importance of the web resource to a group of users, and/or to modify such a determination, including, for example, available crawl capacity, available storage capacity, a probability of missing an interesting content change, an estimated frequency of interesting content changes, how often the generated web feed is viewed, and the amount of time required to process and crawl the web resource (e.g., based on past attempts).
- the crawl interval is determined based on subscription counts for each web resource by associating the web resource with one of a number of bins, or buckets, each having one or more crawl intervals associated with it.
- web resources having 0 to 10 subscribers are assigned to a first bucket having an associated crawl interval of 30 minutes
- web resources having 11 or more subscribers are assigned to a bucket having an associated crawl interval of 15 minutes.
- additional buckets are included.
- crawl intervals assigned to web resources within a bucket are scaled based on information associated with the corresponding web resource and a comparison of similar information associated with other web resources within the bucket.
- web resources within a bucket having a fixed range of crawl intervals are prioritized based on a corresponding subscription count such that web resources having higher subscription counts receive the shorter crawl intervals available within the bucket. Further, in some instances, web resources within a bucket are prioritized such that web resources having a higher change frequency are assigned the shorter crawl intervals within the bucket and web resources having a lower change frequency are assigned the longer crawl intervals.
- crawl resources may be used to satisfy the largest number of web feed subscribers, at the possible expense of missing interesting updates to less popular web resources.
- a web resource's crawl interval and priority within a bucket are based on a combination of signals, including, for example, subscription count and change frequency. For example, in some cases, if the change frequency of a web resource is significantly higher than the crawl rates available within the assigned bucket, the web resource is reassigned to another bucket. For example, if interesting changes are made to the content of a web resource at a rate twenty times faster than the fastest crawl rate available within the assigned bucket, the web resource is reassigned to a bucket having higher crawl rates and, in some implementations, is prioritized within that bucket based on the subscription count of the web resource, and/or other characteristics.
- web resources having high subscription counts and change frequencies that are significantly lower than the slowest crawl rates in the assigned bucket are reassigned to a bucket associated with crawl rates corresponding to the change frequency.
- crawl interval assignments based on popularity are counter balanced by the change frequency of the web resource such that crawl resources utilized by popular web resources having lower change frequencies can be reallocated to less popular web resources that are updated more frequently.
- the crawl rate for each web resource is calculated based on the popularity of the web resource such that the estimated crawl interval is inversely proportional to the subscription count of the web resource.
- the crawl interval decreases monotonically, resulting in higher crawl rates.
- web resources with a decreasing viewing percentage are assigned longer crawl intervals, resulting in slower crawl rates.
- Other techniques for determining the crawl interval include calculating the crawl interval based on linear and non-linear combinations of normalized and/or weighted signals such that the crawl interval is dependent on signals, such as, e.g., the error count (n), the subscription count, the frequency of interesting changes to the content provided by the web resource, and/or signals derived therefrom.
- signals such as, e.g., the error count (n), the subscription count, the frequency of interesting changes to the content provided by the web resource, and/or signals derived therefrom.
- the examples herein refer primarily to these signals in determining crawl intervals, other web resource characteristics may also be used, in lieu of, or in addition to these, including, for example, the last time a user subscribed for feeds for the web resource, the percentage of subscribers that view the feed generated for the web resource, the number of page views for the web resource, or a combination of these.
- the error count n is used in determining the initial crawl rates and/or in modifying the crawl rate. For example, in some instances, the estimated crawl interval is increased exponentially each time a crawl attempt fails until a maximum number of attempts or allowed failures is reached or exceeded (e.g., n>8). In other examples, web resources are assigned to bins having an assigned range of crawl intervals based, at least in part, on corresponding error counts.
- the change frequency refers to the frequency of (or interval between) interesting changes to the content provided by the web resource.
- the change frequency for a web resource is determined, for example, by monitoring whether a snippet is generated by WFGS 110 after updated content is retrieved by crawler 120 and if so, calculating the time interval since the last snippet was generated.
- the change frequency (or an associated time interval) is stored, for example, in data storage 112 , or other storage, and is used to calculate a rolling average of the amount of time between interesting changes.
- more weight is given to more recent time differences to appropriately reflect the change frequency of web resources which were dormant for a long period of time but then became highly active, and vis-a-versa. For example, if a page initially has a change rate of once an hour, but then sees no updates for 2 weeks, this extended period of no updates will extend the change rate to include a period of 2 weeks without change. If this lack of change continues, the change rate eventually becomes 2 weeks, or some other limit.
- a rolling average provides a short term rough estimate of how frequently the page changes overall, and thus, enables the estimated change rate to converge upon the actual change rate of the web resource. For example, for portal pages which are typically updated regularly, the observed change rate is expected to converge to the actual change rate, modulo permitted crawling capacity. Other web resources might experience a more elaborate change rate life cycle, where first there are a frequency set of updates to the page and then changes taper off. Therefore, some implementations take into account additional details to obtain a more accurate, long term estimate, for example, by categorizing web resources into classes and estimating a template change rate for each class of web resources. By analyzing several web resources within the same category, a general function of this change is estimated and used to provide better convergence.
- one or more of the techniques described above are modified in view of having a fixed amount of crawl capacity available, where each web resource crawl uses some amount of a fixed resource.
- the associated cost per unit time to crawl a web resource and an estimated miss rate for interesting updates is used in assigning crawl interval ranges to the multiple buckets/bins and criteria for categorizing web resources in to each of the buckets.
- FIG. 3 is a schematic diagram of an example crawl scheduler 300 .
- the system generally consists of a server 302 .
- the server 302 is optionally connected to one or more web resource clients 390 through a network 380 .
- the server 302 consists of one or more data processing apparatus. While only one data processing apparatus is shown in FIG. 3 , multiple data processing apparatus can be used.
- the server 302 includes various modules, e.g. executable software programs, including a crawl status monitor 304 for determining the health status of web resources, a change frequency estimator 306 for estimating the frequency of interesting changes to each web resource, and a crawl rate (or crawl interval) estimation module 308 for processing signals related to a web resource's health, crawl history, change rate, etc.
- Each module runs as part of the operating system on the server 302 , runs as an application on the server 302 , or runs as part of the operating system and part of an application on the server 302 , for instance.
- the software modules can be distributed on one or more data processing apparatus connected by one or more networks or other suitable communication mediums.
- the server 302 also includes hardware or firmware devices including one or more processors 312 , one or more additional devices 314 , a computer readable medium 316 , a communication interface 318 , and, optionally, one or more user interface devices 320 .
- Each processor 312 is capable of processing instructions for execution within the server 302 .
- the processor 312 is a single or multi-threaded processor.
- Each processor 312 is capable of processing instructions stored on the computer readable medium 316 or on a storage device such as one of the additional devices 314 .
- the server 302 uses its communication interface 318 to communicate with one or more resource clients 390 , for example, over a network 380 .
- Examples of user interface devices 320 include a display, a camera, a speaker, a microphone, a tactile feedback device, a keyboard, and a mouse.
- the server 302 can store instructions that implement operations associated with the modules described above, for example, on the computer readable medium 316 or one or more additional devices 314 , for example, one or more of a floppy disk device, a hard disk device, an optical disk device, or a tape device.
- Embodiments of the subject matter and the operations described in this specification can be implemented in digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them.
- Embodiments of the subject matter described in this specification can be implemented as one or more computer programs, e.g., one or more modules of computer program instructions, encoded on computer storage medium for execution by, or to control the operation of, data processing apparatus.
- the program instructions can be encoded on an artificially-generated propagated signal, e.g., a machine-generated electrical, optical, or electromagnetic signal, that is generated to encode information for transmission to suitable receiver apparatus for execution by a data processing apparatus.
- a computer storage medium can be, or be included in, a computer-readable storage device, a computer-readable storage substrate, a random or serial access memory array or device, or a combination of one or more of them.
- a computer storage medium is not a propagated signal, a computer storage medium can be a source or destination of computer program instructions encoded in an artificially-generated propagated signal.
- the computer storage medium can also be, or be included in, one or more separate physical components or media (e.g., multiple CDs, disks, or other storage devices).
- the operations described in this specification can be implemented as operations performed by a data processing apparatus on data stored on one or more computer-readable storage devices or received from other sources.
- the term “data processing apparatus” encompasses all kinds of apparatus, devices, and machines for processing data, including by way of example a programmable processor, a computer, a system on a chip, or multiple ones, or combinations, of the foregoing
- the apparatus can include special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).
- the apparatus can also include, in addition to hardware, code that creates an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, a cross-platform runtime environment, a virtual machine, or a combination of one or more of them.
- the apparatus and execution environment can realize various different computing model infrastructures, such as web services, distributed computing and grid computing infrastructures.
- a computer program (also known as a program, software, software application, script, or code) can be written in any form of programming language, including compiled or interpreted languages, declarative or procedural languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, object, or other unit suitable for use in a computing environment.
- a computer program may, but need not, correspond to a file in a file system.
- a program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub-programs, or portions of code).
- a computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
- the processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform actions by operating on input data and generating output.
- the processes and logic flows can also be performed by, and apparatus can also be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).
- processors suitable for the execution of a computer program include, by way of example, both general and special purpose microprocessors, and any one or more processors of any kind of digital computer.
- a processor will receive instructions and data from a read-only memory or a random access memory or both.
- the essential elements of a computer are a processor for performing actions in accordance with instructions and one or more memory devices for storing instructions and data.
- a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks.
- mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks.
- a computer need not have such devices.
- a computer can be embedded in another device, e.g., a mobile telephone, a personal digital assistant (PDA), a mobile audio or video player, a game console, a Global Positioning System (GPS) receiver, or a portable storage device (e.g., a universal serial bus (USB) flash drive), to name just a few.
- Devices suitable for storing computer program instructions and data include all forms of non-volatile memory, media and memory devices, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks; magneto-optical disks; and CD-ROM and DVD-ROM disks.
- the processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
- a computer having a display device, e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor, for displaying information to the user and a keyboard and a pointing device, e.g., a mouse or a trackball, by which the user can provide input to the computer.
- a display device e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor
- keyboard and a pointing device e.g., a mouse or a trackball
- Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form, including acoustic, speech, or tactile input.
- a computer can interact with a user by sending documents to and receiving documents from a device that is used by the user; for example, by sending web pages to a
- Embodiments of the subject matter described in this specification can be implemented in a computing system that includes a back-end component, e.g., as a data server, or that includes a middleware component, e.g., an application server, or that includes a front-end component, e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described in this specification, or any combination of one or more such back-end, middleware, or front-end components.
- the components of the system can be interconnected by any form or medium of digital data communication, e.g., a communication network.
- Examples of communication networks include a local area network (“LAN”) and a wide area network (“WAN”), an inter-network (e.g., the Internet), and peer-to-peer networks (e.g., ad hoc peer-to-peer networks).
- LAN local area network
- WAN wide area network
- inter-network e.g., the Internet
- peer-to-peer networks e.g., ad hoc peer-to-peer networks.
- the computing system can include clients and servers.
- a client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.
- a server transmits data (e.g., an HTML page) to a client device (e.g., for purposes of displaying data to and receiving user input from a user interacting with the client device).
- client device e.g., for purposes of displaying data to and receiving user input from a user interacting with the client device.
- Data generated at the client device e.g., a result of the user interaction
Abstract
Description
Claims (17)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/011,426 US8868541B2 (en) | 2011-01-21 | 2011-01-21 | Scheduling resource crawls |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/011,426 US8868541B2 (en) | 2011-01-21 | 2011-01-21 | Scheduling resource crawls |
Publications (2)
Publication Number | Publication Date |
---|---|
US20130144858A1 US20130144858A1 (en) | 2013-06-06 |
US8868541B2 true US8868541B2 (en) | 2014-10-21 |
Family
ID=48524761
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/011,426 Expired - Fee Related US8868541B2 (en) | 2011-01-21 | 2011-01-21 | Scheduling resource crawls |
Country Status (1)
Country | Link |
---|---|
US (1) | US8868541B2 (en) |
Cited By (14)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20140222621A1 (en) * | 2011-07-06 | 2014-08-07 | Hirenkumar Nathalal Kanani | Method of a web based product crawler for products offering |
US20140280554A1 (en) * | 2013-03-15 | 2014-09-18 | Yahoo! Inc. | Method and system for dynamic discovery and adaptive crawling of content from the internet |
US20150082438A1 (en) * | 2013-11-23 | 2015-03-19 | Universidade Da Coruña | System and server for detecting web page changes |
CN106294364A (en) * | 2015-05-15 | 2017-01-04 | 阿里巴巴集团控股有限公司 | Realize the method and apparatus that web crawlers captures webpage |
CN108228431A (en) * | 2018-01-04 | 2018-06-29 | 北京中关村科金技术有限公司 | A kind of method and system of configurationization reptile quality-monitoring |
CN108804680A (en) * | 2018-06-12 | 2018-11-13 | 北京智明星通科技股份有限公司 | A kind of game resource method for sorting, apparatus and system |
US10510121B2 (en) | 2013-08-16 | 2019-12-17 | United Stated Automobile Association (USAA) | System and method for performing dwelling maintenance analytics on insured property |
US10552911B1 (en) | 2014-01-10 | 2020-02-04 | United Services Automobile Association (Usaa) | Determining status of building modifications using informatics sensor data |
US10614525B1 (en) | 2014-03-05 | 2020-04-07 | United Services Automobile Association (Usaa) | Utilizing credit and informatic data for insurance underwriting purposes |
US10713726B1 (en) | 2013-01-13 | 2020-07-14 | United Services Automobile Association (Usaa) | Determining insurance policy modifications using informatic sensor data |
US11087404B1 (en) | 2014-01-10 | 2021-08-10 | United Services Automobile Association (Usaa) | Electronic sensor management |
US11416941B1 (en) | 2014-01-10 | 2022-08-16 | United Services Automobile Association (Usaa) | Electronic sensor management |
US11847666B1 (en) | 2014-02-24 | 2023-12-19 | United Services Automobile Association (Usaa) | Determining status of building modifications using informatics sensor data |
US11966939B1 (en) | 2021-09-03 | 2024-04-23 | United Services Automobile Association (Usaa) | Determining appliance insurance coverage/products using informatic sensor data |
Families Citing this family (20)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9081760B2 (en) * | 2011-03-08 | 2015-07-14 | At&T Intellectual Property I, L.P. | System and method for building diverse language models |
US8862569B2 (en) * | 2012-01-11 | 2014-10-14 | Google Inc. | Method and techniques for determining crawling schedule |
JP5782560B2 (en) * | 2012-03-02 | 2015-09-24 | 富士通株式会社 | Node and communication control method |
US20130283097A1 (en) * | 2012-04-23 | 2013-10-24 | Yahoo! Inc. | Dynamic network task distribution |
US9501849B2 (en) * | 2012-05-11 | 2016-11-22 | Vmware, Inc. | Multi-dimensional visualization tool for browsing and troubleshooting at scale |
EP2680171A3 (en) * | 2012-06-29 | 2014-01-22 | Orange | Intelligent index scheduling |
CN104657391B (en) * | 2013-11-21 | 2018-08-03 | 阿里巴巴集团控股有限公司 | The processing method and processing device of the page |
CN103761279B (en) * | 2014-01-09 | 2017-02-08 | 北京京东尚科信息技术有限公司 | Method and system for scheduling network crawlers on basis of keyword search |
US10929495B2 (en) * | 2014-02-25 | 2021-02-23 | Ficstar Software, Inc. | System and method for synchronizing information across a plurality of information repositories |
RU2634218C2 (en) * | 2014-07-24 | 2017-10-24 | Общество С Ограниченной Ответственностью "Яндекс" | Method for determining sequence of web browsing and server used |
CN104462492B (en) * | 2014-12-18 | 2018-01-16 | 北京奇虎科技有限公司 | The method and apparatus for capturing question and answer class webpage |
CN106503017A (en) * | 2015-09-08 | 2017-03-15 | 摩贝（上海）生物科技有限公司 | A kind of distributed reptile system task grasping system and method |
CN107193828B (en) * | 2016-03-14 | 2021-08-24 | 百度在线网络技术（北京）有限公司 | Novel webpage crawling method and device |
US11004444B2 (en) * | 2017-09-08 | 2021-05-11 | Amazon Technologies, Inc. | Systems and methods for enhancing user experience by communicating transient errors |
CN108416046B (en) * | 2018-03-15 | 2020-05-26 | 阿里巴巴（中国）有限公司 | Sequence crawler boundary detection method and device and server |
CN109670097B (en) * | 2018-12-05 | 2022-10-28 | 贵阳高新数通信息有限公司 | Method and system for scheduling crawling tasks of bidding related web pages |
US11366862B2 (en) * | 2019-11-08 | 2022-06-21 | Gap Intelligence, Inc. | Automated web page accessing |
CN115048564B (en) * | 2022-08-15 | 2022-11-04 | 中国人民解放军国防科技大学 | Distributed crawler task scheduling method, system and equipment |
WO2024072759A1 (en) * | 2022-09-29 | 2024-04-04 | Google Llc | Crawl algorithm |
CN116668086A (en) * | 2023-05-09 | 2023-08-29 | 广州钛动科技股份有限公司 | Crawler scheduling method, crawler scheduling device, server and storage medium |
Citations (12)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20020013825A1 (en) * | 1997-01-14 | 2002-01-31 | Freivald Matthew P. | Unique-change detection of dynamic web pages using history tables of signatures |
US6351755B1 (en) * | 1999-11-02 | 2002-02-26 | Alta Vista Company | System and method for associating an extensible set of data with documents downloaded by a web crawler |
US20070050338A1 (en) * | 2005-08-29 | 2007-03-01 | Strohm Alan C | Mobile sitemaps |
US20070174440A1 (en) * | 2006-01-24 | 2007-07-26 | Brier John J Jr | Systems and methods for data mining and interactive presentation of same |
US20090249451A1 (en) * | 2008-03-31 | 2009-10-01 | Yahoo!, Inc. | Access to Trusted User-Generated Content Using Social Networks |
US7599920B1 (en) * | 2006-10-12 | 2009-10-06 | Google Inc. | System and method for enabling website owners to manage crawl rate in a website indexing system |
US20100114946A1 (en) * | 2008-11-06 | 2010-05-06 | Yahoo! Inc. | Adaptive weighted crawling of user activity feeds |
US7769742B1 (en) * | 2005-05-31 | 2010-08-03 | Google Inc. | Web crawler scheduler that utilizes sitemaps from websites |
US20100205168A1 (en) * | 2009-02-10 | 2010-08-12 | Microsoft Corporation | Thread-Based Incremental Web Forum Crawling |
US7801881B1 (en) * | 2005-05-31 | 2010-09-21 | Google Inc. | Sitemap generating client for web crawler |
US7930400B1 (en) * | 2006-08-04 | 2011-04-19 | Google Inc. | System and method for managing multiple domain names for a website in a website indexing system |
US8078974B2 (en) * | 2008-06-27 | 2011-12-13 | Microsoft Corporation | Relating web page change with revisitation patterns |
-
2011
- 2011-01-21 US US13/011,426 patent/US8868541B2/en not_active Expired - Fee Related
Patent Citations (26)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20020013825A1 (en) * | 1997-01-14 | 2002-01-31 | Freivald Matthew P. | Unique-change detection of dynamic web pages using history tables of signatures |
US6351755B1 (en) * | 1999-11-02 | 2002-02-26 | Alta Vista Company | System and method for associating an extensible set of data with documents downloaded by a web crawler |
US8037055B2 (en) * | 2005-05-31 | 2011-10-11 | Google Inc. | Sitemap generating client for web crawler |
US20120036118A1 (en) * | 2005-05-31 | 2012-02-09 | Brawer Sascha B | Web Crawler Scheduler that Utilizes Sitemaps from Websites |
US20100262592A1 (en) * | 2005-05-31 | 2010-10-14 | Brawer Sascha B | Web Crawler Scheduler that Utilizes Sitemaps from Websites |
US8037054B2 (en) * | 2005-05-31 | 2011-10-11 | Google Inc. | Web crawler scheduler that utilizes sitemaps from websites |
US7801881B1 (en) * | 2005-05-31 | 2010-09-21 | Google Inc. | Sitemap generating client for web crawler |
US7769742B1 (en) * | 2005-05-31 | 2010-08-03 | Google Inc. | Web crawler scheduler that utilizes sitemaps from websites |
US20100318508A1 (en) * | 2005-05-31 | 2010-12-16 | Brawer Sascha B | Sitemap Generating Client for Web Crawler |
US7653617B2 (en) * | 2005-08-29 | 2010-01-26 | Google Inc. | Mobile sitemaps |
US20070050338A1 (en) * | 2005-08-29 | 2007-03-01 | Strohm Alan C | Mobile sitemaps |
US20100125564A1 (en) * | 2005-08-29 | 2010-05-20 | Google Inc. | Mobile SiteMaps |
US8234266B2 (en) * | 2005-08-29 | 2012-07-31 | Google Inc. | Mobile SiteMaps |
US20070174440A1 (en) * | 2006-01-24 | 2007-07-26 | Brier John J Jr | Systems and methods for data mining and interactive presentation of same |
US7930400B1 (en) * | 2006-08-04 | 2011-04-19 | Google Inc. | System and method for managing multiple domain names for a website in a website indexing system |
US20110179178A1 (en) * | 2006-08-04 | 2011-07-21 | Vanessa Fox | System and Method for Managing Multiple Domain Names for a Website in a Website Indexing System |
US8156227B2 (en) * | 2006-08-04 | 2012-04-10 | Google Inc | System and method for managing multiple domain names for a website in a website indexing system |
US8032518B2 (en) * | 2006-10-12 | 2011-10-04 | Google Inc. | System and method for enabling website owners to manage crawl rate in a website indexing system |
US20100077098A1 (en) * | 2006-10-12 | 2010-03-25 | Vanessa Fox | System and Method for Enabling Website Owners to Manage Crawl Rate in a Website Indexing System |
US7599920B1 (en) * | 2006-10-12 | 2009-10-06 | Google Inc. | System and method for enabling website owners to manage crawl rate in a website indexing system |
US20120023091A1 (en) * | 2006-10-12 | 2012-01-26 | Vanessa Fox | System and Method for Enabling Website Owner to Manage Crawl Rate in a Website Indexing System |
US20090249451A1 (en) * | 2008-03-31 | 2009-10-01 | Yahoo!, Inc. | Access to Trusted User-Generated Content Using Social Networks |
US20120047444A1 (en) * | 2008-06-27 | 2012-02-23 | Microsoft Corporation | Relating web page change with revisitation patterns |
US8078974B2 (en) * | 2008-06-27 | 2011-12-13 | Microsoft Corporation | Relating web page change with revisitation patterns |
US20100114946A1 (en) * | 2008-11-06 | 2010-05-06 | Yahoo! Inc. | Adaptive weighted crawling of user activity feeds |
US20100205168A1 (en) * | 2009-02-10 | 2010-08-12 | Microsoft Corporation | Thread-Based Incremental Web Forum Crawling |
Cited By (35)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20140222621A1 (en) * | 2011-07-06 | 2014-08-07 | Hirenkumar Nathalal Kanani | Method of a web based product crawler for products offering |
US10713726B1 (en) | 2013-01-13 | 2020-07-14 | United Services Automobile Association (Usaa) | Determining insurance policy modifications using informatic sensor data |
US20140280554A1 (en) * | 2013-03-15 | 2014-09-18 | Yahoo! Inc. | Method and system for dynamic discovery and adaptive crawling of content from the internet |
US10510121B2 (en) | 2013-08-16 | 2019-12-17 | United Stated Automobile Association (USAA) | System and method for performing dwelling maintenance analytics on insured property |
US20150082438A1 (en) * | 2013-11-23 | 2015-03-19 | Universidade Da Coruña | System and server for detecting web page changes |
US9614869B2 (en) * | 2013-11-23 | 2017-04-04 | Universidade da Coruña—OTRI | System and server for detecting web page changes |
US10977736B1 (en) | 2014-01-10 | 2021-04-13 | United Services Automobile Association (Usaa) | Determining risks related to activities on insured properties using informatic sensor data |
US11138672B1 (en) | 2014-01-10 | 2021-10-05 | United Services Automobile Association (Usaa) | Determining and initiating insurance claim events |
US10552911B1 (en) | 2014-01-10 | 2020-02-04 | United Services Automobile Association (Usaa) | Determining status of building modifications using informatics sensor data |
US11941702B1 (en) | 2014-01-10 | 2024-03-26 | United Services Automobile Association (Usaa) | Systems and methods for utilizing imaging informatics |
US11532006B1 (en) | 2014-01-10 | 2022-12-20 | United Services Automobile Association (Usaa) | Determining and initiating insurance claim events |
US10679296B1 (en) | 2014-01-10 | 2020-06-09 | United Services Automobile Association (Usaa) | Systems and methods for determining insurance coverage based on informatics |
US10699348B1 (en) | 2014-01-10 | 2020-06-30 | United Services Automobile Association (Usaa) | Utilizing credit and informatic data for insurance underwriting purposes |
US11532004B1 (en) | 2014-01-10 | 2022-12-20 | United Services Automobile Association (Usaa) | Utilizing credit and informatic data for insurance underwriting purposes |
US10740847B1 (en) | 2014-01-10 | 2020-08-11 | United Services Automobile Association (Usaa) | Method and system for making rapid insurance policy decisions |
US10783588B1 (en) | 2014-01-10 | 2020-09-22 | United Services Automobile Association (Usaa) | Identifying and recommending insurance policy products/services using informatic sensor data |
US11526949B1 (en) | 2014-01-10 | 2022-12-13 | United Services Automobile Association (Usaa) | Determining risks related to activities on insured properties using informatic sensor data |
US11068992B1 (en) | 2014-01-10 | 2021-07-20 | United Services Automobile Association (Usaa) | Insurance policy modifications using informatic sensor data |
US11087404B1 (en) | 2014-01-10 | 2021-08-10 | United Services Automobile Association (Usaa) | Electronic sensor management |
US11113765B1 (en) | 2014-01-10 | 2021-09-07 | United Services Automobile Association (Usaa) | Determining appliance insurance coverage/products using informatic sensor data |
US11120506B1 (en) | 2014-01-10 | 2021-09-14 | United Services Automobile Association (Usaa) | Streamlined property insurance application and renewal process |
US11526948B1 (en) | 2014-01-10 | 2022-12-13 | United Services Automobile Association (Usaa) | Identifying and recommending insurance policy products/services using informatic sensor data |
US11151657B1 (en) | 2014-01-10 | 2021-10-19 | United Services Automobile Association (Usaa) | Insurance policy modification based on secondary informatics |
US11164257B1 (en) | 2014-01-10 | 2021-11-02 | United Services Automobile Association (Usaa) | Streamlined property insurance application and renewal process |
US11227339B1 (en) | 2014-01-10 | 2022-01-18 | United Services Automobile Association (Usaa) | Systems and methods for utilizing imaging informatics |
US11416941B1 (en) | 2014-01-10 | 2022-08-16 | United Services Automobile Association (Usaa) | Electronic sensor management |
US11423429B1 (en) | 2014-01-10 | 2022-08-23 | United Services Automobile Association (Usaa) | Determining status of building modifications using informatics sensor data |
US11461850B1 (en) | 2014-01-10 | 2022-10-04 | United Services Automobile Association (Usaa) | Determining insurance policy modifications using informatic sensor data |
US11847666B1 (en) | 2014-02-24 | 2023-12-19 | United Services Automobile Association (Usaa) | Determining status of building modifications using informatics sensor data |
US10614525B1 (en) | 2014-03-05 | 2020-04-07 | United Services Automobile Association (Usaa) | Utilizing credit and informatic data for insurance underwriting purposes |
CN106294364A (en) * | 2015-05-15 | 2017-01-04 | 阿里巴巴集团控股有限公司 | Realize the method and apparatus that web crawlers captures webpage |
CN106294364B (en) * | 2015-05-15 | 2020-04-10 | 阿里巴巴集团控股有限公司 | Method and device for realizing web crawler to capture webpage |
CN108228431A (en) * | 2018-01-04 | 2018-06-29 | 北京中关村科金技术有限公司 | A kind of method and system of configurationization reptile quality-monitoring |
CN108804680A (en) * | 2018-06-12 | 2018-11-13 | 北京智明星通科技股份有限公司 | A kind of game resource method for sorting, apparatus and system |
US11966939B1 (en) | 2021-09-03 | 2024-04-23 | United Services Automobile Association (Usaa) | Determining appliance insurance coverage/products using informatic sensor data |
Also Published As
Publication number | Publication date |
---|---|
US20130144858A1 (en) | 2013-06-06 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US8868541B2 (en) | Scheduling resource crawls | |
US11310331B2 (en) | Optimizing user interface data caching for future actions | |
US10394911B1 (en) | Selecting content for devices specific to a particular user | |
US8495218B1 (en) | Managing system resources | |
US20120066196A1 (en) | Device for determining internet activity | |
US9900227B2 (en) | Analyzing changes in web analytics metrics | |
US9596298B1 (en) | Load balancing in a distributed processing system | |
US8954524B1 (en) | Access to network content | |
US10963920B2 (en) | Web page viewership prediction | |
US9195944B1 (en) | Scoring site quality | |
US8682892B1 (en) | Ranking search results | |
US20180270305A1 (en) | Systems and methods for throttling incoming network traffic requests | |
US10169711B1 (en) | Generalized engine for predicting actions | |
CN109075987B (en) | Optimizing digital component analysis systems | |
US9514194B1 (en) | Website duration performance based on category durations | |
US10261971B2 (en) | Partitioning links to JSERPs amongst keywords in a manner that maximizes combined improvement in respective ranks of JSERPs represented by respective keywords | |
US10594820B2 (en) | Conditionally joining data from cookies | |
JP5231604B2 (en) | Crawl server and method | |
US20150169628A1 (en) | Location detection from queries using evidence for location alternatives | |
US20230065501A1 (en) | Interaction tracking controls | |
US10747821B2 (en) | Optimized digital component analysis system | |
US9098589B1 (en) | Geographic annotation of electronic resources | |
US11055332B1 (en) | Adaptive sorting of results | |
US10430427B2 (en) | Partitioning links to JSERPs amongst keywords in a manner that maximizes combined weighted gain in a metric associated with events of certain type observed in the on-line social network system with respect to JSERPs represented by keywords | |
US9996851B1 (en) | Performance based content item ranking |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:LIN, ZHEN;STEVENS, KEITH;REEL/FRAME:025885/0075Effective date: 20110121 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044277/0001Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551)Year of fee payment: 4 |
|
FEPP | Fee payment procedure |
Free format text: MAINTENANCE FEE REMINDER MAILED (ORIGINAL EVENT CODE: REM.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
LAPS | Lapse for failure to pay maintenance fees |
Free format text: PATENT EXPIRED FOR FAILURE TO PAY MAINTENANCE FEES (ORIGINAL EVENT CODE: EXP.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
STCH | Information on status: patent discontinuation |
Free format text: PATENT EXPIRED DUE TO NONPAYMENT OF MAINTENANCE FEES UNDER 37 CFR 1.362 |
|
FP | Lapsed due to failure to pay maintenance fee |
Effective date: 20221021 |
CN114730236A - Application store user interface - Google Patents
Application store user interface Download PDFInfo
- Publication number
- CN114730236A CN114730236A CN202080080969.8A CN202080080969A CN114730236A CN 114730236 A CN114730236 A CN 114730236A CN 202080080969 A CN202080080969 A CN 202080080969A CN 114730236 A CN114730236 A CN 114730236A
- Authority
- CN
- China
- Prior art keywords
- application
- user interface
- application store
- digital content
- store data
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Granted
Links
- 230000003993 interaction Effects 0.000 claims abstract description 57
- 238000000034 method Methods 0.000 claims abstract description 57
- 238000009434 installation Methods 0.000 claims abstract description 48
- 230000004044 response Effects 0.000 claims abstract description 36
- 230000000694 effects Effects 0.000 claims description 45
- 238000004590 computer program Methods 0.000 abstract description 22
- 230000015654 memory Effects 0.000 description 43
- 230000008569 process Effects 0.000 description 20
- 238000012545 processing Methods 0.000 description 18
- 238000004891 communication Methods 0.000 description 17
- 238000009877 rendering Methods 0.000 description 10
- 230000009471 action Effects 0.000 description 9
- 238000011900 installation process Methods 0.000 description 7
- 230000003287 optical effect Effects 0.000 description 4
- 239000000047 product Substances 0.000 description 4
- 238000010586 diagram Methods 0.000 description 3
- 230000001413 cellular effect Effects 0.000 description 2
- 230000008859 change Effects 0.000 description 2
- 238000005516 engineering process Methods 0.000 description 2
- 230000006870 function Effects 0.000 description 2
- 238000012552 review Methods 0.000 description 2
- 238000013515 script Methods 0.000 description 2
- 238000000926 separation method Methods 0.000 description 2
- 230000005540 biological transmission Effects 0.000 description 1
- 238000012217 deletion Methods 0.000 description 1
- 230000037430 deletion Effects 0.000 description 1
- 239000004973 liquid crystal related substance Substances 0.000 description 1
- 238000010295 mobile communication Methods 0.000 description 1
- 238000012986 modification Methods 0.000 description 1
- 230000004048 modification Effects 0.000 description 1
- 238000003032 molecular docking Methods 0.000 description 1
- 230000000644 propagated effect Effects 0.000 description 1
- 239000004065 semiconductor Substances 0.000 description 1
- 230000001953 sensory effect Effects 0.000 description 1
- 239000007787 solid Substances 0.000 description 1
- 239000000758 substrate Substances 0.000 description 1
- 239000013589 supplement Substances 0.000 description 1
- 230000000153 supplemental effect Effects 0.000 description 1
- 238000012546 transfer Methods 0.000 description 1
- 230000000007 visual effect Effects 0.000 description 1
- 230000001755 vocal effect Effects 0.000 description 1
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04M—TELEPHONIC COMMUNICATION
- H04M1/00—Substation equipment, e.g. for use by subscribers
- H04M1/72—Mobile telephones; Cordless telephones, i.e. devices for establishing wireless links to base stations without route selection
- H04M1/724—User interfaces specially adapted for cordless or mobile telephones
- H04M1/72403—User interfaces specially adapted for cordless or mobile telephones with means for local support of applications that increase the functionality
- H04M1/72406—User interfaces specially adapted for cordless or mobile telephones with means for local support of applications that increase the functionality by software upgrading or downloading
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F8/00—Arrangements for software engineering
- G06F8/60—Software deployment
- G06F8/61—Installation
-
- G—PHYSICS
- G02—OPTICS
- G02F—OPTICAL DEVICES OR ARRANGEMENTS FOR THE CONTROL OF LIGHT BY MODIFICATION OF THE OPTICAL PROPERTIES OF THE MEDIA OF THE ELEMENTS INVOLVED THEREIN; NON-LINEAR OPTICS; FREQUENCY-CHANGING OF LIGHT; OPTICAL LOGIC ELEMENTS; OPTICAL ANALOGUE/DIGITAL CONVERTERS
- G02F1/00—Devices or arrangements for the control of the intensity, colour, phase, polarisation or direction of light arriving from an independent light source, e.g. switching, gating or modulating; Non-linear optics
- G02F1/01—Devices or arrangements for the control of the intensity, colour, phase, polarisation or direction of light arriving from an independent light source, e.g. switching, gating or modulating; Non-linear optics for the control of the intensity, phase, polarisation or colour
- G02F1/13—Devices or arrangements for the control of the intensity, colour, phase, polarisation or direction of light arriving from an independent light source, e.g. switching, gating or modulating; Non-linear optics for the control of the intensity, phase, polarisation or colour based on liquid crystals, e.g. single liquid crystal display cells
- G02F1/133—Constructional arrangements; Operation of liquid crystal cells; Circuit arrangements
- G02F1/1333—Constructional arrangements; Manufacturing methods
- G02F1/13338—Input devices, e.g. touch panels
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/01—Input arrangements or combined input and output arrangements for interaction between user and computer
- G06F3/03—Arrangements for converting the position or the displacement of a member into a coded form
- G06F3/041—Digitisers, e.g. for touch screens or touch pads, characterised by the transducing means
- G06F3/0412—Digitisers structurally integrated in a display
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/01—Input arrangements or combined input and output arrangements for interaction between user and computer
- G06F3/048—Interaction techniques based on graphical user interfaces [GUI]
- G06F3/0481—Interaction techniques based on graphical user interfaces [GUI] based on specific properties of the displayed interaction object or a metaphor-based environment, e.g. interaction with desktop elements like windows or icons, or assisted by a cursor's changing behaviour or appearance
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/01—Input arrangements or combined input and output arrangements for interaction between user and computer
- G06F3/048—Interaction techniques based on graphical user interfaces [GUI]
- G06F3/0484—Interaction techniques based on graphical user interfaces [GUI] for the control of specific functions or operations, e.g. selecting or manipulating an object, an image or a displayed text element, setting a parameter value or selecting a range
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F8/00—Arrangements for software engineering
- G06F8/30—Creation or generation of source code
- G06F8/38—Creation or generation of source code for implementing user interfaces
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F9/00—Arrangements for program control, e.g. control units
- G06F9/06—Arrangements for program control, e.g. control units using stored programs, i.e. using an internal store of processing equipment to receive or retain programs
- G06F9/44—Arrangements for executing specific programs
- G06F9/451—Execution arrangements for user interfaces
-
- H—ELECTRICITY
- H10—SEMICONDUCTOR DEVICES; ELECTRIC SOLID-STATE DEVICES NOT OTHERWISE PROVIDED FOR
- H10K—ORGANIC ELECTRIC SOLID-STATE DEVICES
- H10K59/00—Integrated devices, or assemblies of multiple devices, comprising at least one organic light-emitting element covered by group H10K50/00
- H10K59/40—OLEDs integrated with touch screens
Abstract
Methods, systems, and apparatus, including computer programs encoded on a computer storage medium, for presenting a first application interface within a second application interface. One of the methods includes receiving, by an active application executing on a user device that is not an application store, digital content referencing a second application that is not installed on the user device; obtaining application store data for a second application; providing digital content with an application store user interface to a user interface of an active application, the application store user interface including (i) application store data for a second application, and (ii) an installation element for triggering installation of the second application on a user device from within the active application; detecting a user interaction with an installation element; and in response to detecting the user interaction with the installation element, triggering download of the second application independent of launching the application of the application store.
Description
Background
An application, such as a web browser or other local application, may present content that includes a link to another application. For example, a news application may present content that includes links that send information about news articles using an email application. In response to receiving the data indicating the link selection, the news application may launch an email application to enable sending information about news articles via email.
Disclosure of Invention
The user device may automatically present an application store user interface overlaid over a portion of a user interface of an activity application in the activity application executing on the client device. The application store user interface includes content for the second application to enable installation of the second application on the client device without having to navigate away or close the active application. The user device may automatically present the application store user interface after presenting the video in the active application, after presenting the content (e.g., images), within a predetermined time period, or after another suitable trigger. This may enable the user device to install the second application without having to launch the application store (e.g., in another application), require user input indicating that the user device should present the application store user interface, or both.
In some implementations, the activity application can present the application store user interface as an embedded portion of the activity application's user interface such that the application store user interface is presented directly within the activity application. For example, the activity application can present the content while presenting the application store user interface. The campaign application may present the video or image in a portion of the user interface and the embedded application store user interface in another portion of the user interface in the user interface of the campaign application. In some examples, the embedded application store user interface may be embedded in content (such as an image) displayed in the user interface of the active application. In this specification, the embedded application store user interface may be embedded in content (e.g., images) displayed in the user interface of the campaign application, or directly in the user interface of the campaign application itself.
In these implementations, the embedded application store user interface can include a size control that enables user input to change the size of other portions in which the embedded application store user interface is presented. For example, the activity application may determine a size of a portion of a video or image based on the content of the video or image. When the video or image is square (e.g., at a preferred aspect ratio), the active application may determine the size of the other portion to maintain the square size of the video or image. The active application then presents the embedded application store user interface in the remainder of the active application's user interface.
Upon receiving data indicating a selection of size control of the embedded application store user interface, the active application can dynamically change the size of other portions in which the embedded application store user interface is presented. This may cause more or less information of the embedded application store user interface to be presented in the user interface of the active application.
The subject matter described in this specification can be implemented in various embodiments and can yield one or more of the following advantages. Because the application store user interface is presented as part of the user interface of the application, the active application enables installation of another application without requiring the user device to switch from the active application to a separate instance of the application store, thereby preventing the client device from launching the application store application. This reduces the amount of processor and memory resources that must be used by the client device to present the application store interface, because the client device simply presents the application store interface within an already launched application, rather than having to utilize additional memory and processor cycles to launch another application. In other words, the application store interface may be rendered, displayed, and interacted with within an already launched application (for which computing resources have been reserved) without requiring additional computing resources to be reserved for a separate instance of the application store. Further, by enabling rendering, displaying, and interacting with application store interfaces within an already launched application, the computational overhead associated with running two separate applications can be avoided. Reducing processor and memory usage also reduces battery consumption (which is limited in the context of mobile devices), thereby extending battery life and allowing more operations to be performed in a single charge.
Further, the techniques discussed herein may reduce animations presented on a display of a user device, such as an animation indicating a switch from a first user interface of an application to a second user interface of an application store, which may also reduce processor consumption and power required to modify pixel color, brightness, or both during the animation. The techniques described in this disclosure may reduce the amount of user input received by a user device, for example, when the user device otherwise needs to receive data indicating a selection of a link or other menu option to cause an application store user interface to appear as an overlay user interface over the user interface of the application or as a separate user interface to which the user device switches from the user interface of the application. These techniques may reduce the number of clicks or other user interactions with the user interface, for example, by presenting an overlaid or embedded application store user interface within another application. The techniques may also improve accessibility of information downloaded from an application store by reducing the amount of time required for a user device to navigate to the application store. The techniques described in this disclosure enable the presentation of detailed information of applications retrieved from a real application store database without the need to present application store applications.
These techniques can enable more efficient receipt and processing of user input and provide a graphical shortcut that enables a processor of a user device to more efficiently install another application. Reducing the amount of interaction required to install another application may provide for more efficient utilization of computing resources by one or more of reducing the amount of time that a user device needs to be active, reducing the number of selectable inputs that need to be presented, reducing the number of received inputs that need to be processed, or reducing the amount of data that needs to be retrieved from memory or a remote server. These advantages help to make more efficient use of available processor, memory, battery and bandwidth. Further, the described techniques may extend the functionality and versatility of an already launched application by causing presentation of an application store user interface in response to, for example, recognition or otherwise of an input received within a predetermined time period, when the application store user interface is rendered and displayed after digital content has been displayed in the application user interface for a predetermined time period, or after another suitable trigger. Thus, in this example, rendering and display of the application store user interface is only accomplished based on the identification or other means of user input, and is otherwise avoided, thereby providing further savings and more efficient use of available computing resources.
In general, one aspect of the subject matter described in this specification can be embodied in methods that include the actions of receiving, by an activity application executing on a user device that is not an application store, digital content referencing a second application that is not installed on the user device and displayed in a user interface of the activity application; obtaining, from the one or more servers and by an active application that is not an application store, application store data for a second application that is not installed on the user device; providing, by the campaign application and in a user interface of the campaign application, digital content with an application store user interface comprising (i) application store data for a second application not installed on the user device, and (ii) an installation element for triggering installation of the second application on the user device from within the campaign application; detecting a user interaction with an installation element provided within a user interface of an active application; and in response to detecting the user interaction with the installation element, triggering download of the second application independent of launching the application of the application store. Other embodiments of this aspect include corresponding computer systems, apparatus, computer program products, and computer programs recorded on one or more computer storage devices, each configured to perform the actions of the methods. A system of one or more computers may be configured to perform particular operations or actions by installing software, firmware, hardware, or a combination thereof on the system that in operation causes the system to perform the actions. One or more computer programs may be configured to perform particular operations or actions by including instructions that, when executed by a data processing apparatus, cause the apparatus to perform the actions.
The foregoing and other embodiments may each optionally include one or more of the following features, either alone or in combination. Obtaining the application store data may include receiving, by an active application that is not the application store, application store data for a second application that is not installed on the user device from another system. Providing digital content with the application store user interface can include providing the application store user interface in response to receiving application store data from the other system. Providing digital content with the application store user interface can include displaying digital content with the application store user interface. Providing the digital content with the application store user interface may include providing the digital content and data of the application store user interface to a display unit to cause the display unit to display the digital content and the application store user interface.
In some implementations, providing digital content with the application store user interface including the application store data can include presenting the digital content with the embedded application store user interface including the application store data in a user interface of the activity application. Providing digital content with an application store user interface that includes application store data can include presenting digital content with an overlaid application store user interface that includes application store data. The method may include displaying, by the activity application, digital content in the user interface instead of the application store data; and determining that the presentation time period of the digital content is satisfied. Displaying the digital content with the overlaid application store user interface can be in response to determining that a presentation time period of the digital content is satisfied.
In some implementations, the digital content can include a second application-specific element. The method may include determining, by the active application, that the active application does not detect user interaction with the second application detail element.
Displaying digital content of the application store user interface with the overlay may be in response to determining that the active application does not detect user interaction with the second application detail element; and determining that the presentation time period of the digital content is satisfied.
In some implementations, obtaining the application store data can include obtaining the application store data in a message that includes the digital content. The method may include caching digital content and application store data prior to providing the digital content with the application store user interface; and determining that the presentation criteria are met. Providing the digital content with the application store user interface may be in response to determining that the presentation criteria are satisfied. Determining that the presentation criteria are met may include detecting, by the active application, a user interaction requesting presentation of the digital content. Providing the digital content with the application store user interface may be in response to detecting a user interaction requesting presentation of the digital content.
In some implementations, detecting a user interaction requesting presentation of digital content can include detecting a user interaction requesting presentation of any digital content and not requesting presentation of any application store data. Providing digital content with an application store user interface that includes application store data can be in response to detecting a user interaction requesting presentation of any digital content and not requesting presentation of any application store data. Obtaining the application store data may include obtaining, from another system, application store data selected based on a determination that the second application is not installed on the user device.
The details of one or more implementations of the subject matter described in this specification are set forth in the accompanying drawings and the description below. Other features, aspects, and advantages of the subject matter will become apparent from the description, the drawings, and the claims.
Drawings
FIG. 1 depicts an example environment in which a user device presents an active application user interface including an application store user interface.
2A-B depict examples of user interfaces with embedded application store user interfaces.
FIG. 3 depicts an example of a user interface of an application store user interface with an overlay.
FIG. 4 is a flow chart of a process for presenting digital content along with application store data.
FIG. 5 is a block diagram of a computing system that may be used in conjunction with the computer-implemented methods described herein.
Like reference numbers and designations in the various drawings indicate like elements.
Detailed Description
FIG. 1 depicts an example environment 100 in which a user device 102 presents an active application user interface including an application store user interface. For example, the activity application 108 executing on the user device 102 may present the application store user interface 114 as part of its own user interface 110, even if the activity application 108 is not part of the application store and the activity application itself does not include code for generating the application store user interface 114. As described in more detail below, the activity application 108 can present an application store user interface 114 to enable more efficient installation of another application that is not installed on the user device 102, for example.
As described herein, an active application is an application whose interface is presented on the display of the user device 102, e.g., and is not minimized. For example, the activity application 108 may include an application user interface 110 presented on an integrated display, an external display, or both connected to the user device 102. The active application 108 may provide instructions to a display or a graphics processing unit for presenting an application user interface 110 that causes the receiving device to present the application user interface 110 including an application store user interface 114 on the display.
The user device 102 includes or has access to an application store 104. The application store 104 is an application that enables the user device 102 to install applications on the user device 102. For example, the application store 104 can receive application store data for an application, e.g., from an application store server. The application may be any suitable type of application that is available for installation on user device 102.
The application store 104 can present the application store data in an application store user interface. The application store user interface may include one or more elements that enable a user input to search for an application, obtain more information about an application, install an application, or a combination of these. In some examples, in response to receiving user input indicating to search for an application, the application store 104 retrieves application store data for the application.
Separate from the application store 104, the user device 102 includes one or more applications installed on the user device 102, such as an activity application 108. The one or more applications may be any suitable type of application, such as a banking application, a productivity application, a music player, a social media application, or a game. The one or more applications typically do not include code that enables the respective application to generate an application store user interface without receiving data from an external source, as described in more detail below.
Although the campaign application 108 does not include code to generate the application store user interface, the campaign application 108 is configured to present the digital content providing the application store user interface 114 directly within its application user interface 110. The application store user interface 114 includes an installation element 118 that allows another application to be installed. For example, user interaction with the installation element 118 may trigger or otherwise initiate downloading of another application from within the active application, e.g., without requiring the user device 102 to leave or otherwise minimize the active application 108. Presentation of the application store user interface 114 in the application user interface 110 can reduce computer resources for installing another application on the user device 102 (e.g., by not requiring the user device 102 to launch and present the application store 104).
The application user interface 110 presents the content of the active application 108. The content may include content stored locally on the user device 102, such as content installed with the campaign application 108. The content may include content retrieved from a content server 120 (e.g., a third party system). For example, the active application 108 may request content from the content server 120 when the active application 108 renders dynamic content in the application user interface 110. The dynamic content may include images, videos, content related to embedded files, or other suitable types of dynamic content, which may include advertising content.
In response to receiving the request, the content server 120 selects content for presentation in the application user interface 110. The content server 120 may select content based on the active application 108, the application type of the active application 108, a profile of the user device 102, data indicating applications installed on the user device 102, or other suitable data.
For example, a document editor as the active application 108 may present the document in the application user interface 110. A document may include unsupported content, such as a worksheet or music file embedded in the document, which the document editor cannot render. When the user device 102 does not include an application that provides functionality for unsupported content, the document editor may request application content to enable installation of another application that provides functionality for unsupported content.
When the content server 120 receives an application content request from a document editor, the content server 120 may use data about the user device 102, the document editor, unsupported content, or a combination of two or more of these, to select application content for a worksheet application or a music application depending on the type of unsupported content. The selected application content is for an application that is not installed on the user device 102, for example, when the user device 102 sends a content request to the content server 120. The content server 120 provides the selected application content to the active application 108.
The selected application content may include digital content 112, application store data 116, or both. For example, digital content 112 may reference another application that provides functionality, for example, for unsupported content. Digital content 112 may include a name, image, logo, or other data for another application. Application store data 116 includes data from an application store server about another application. The application store data 116 can include a description of another application, comment data of another application, an interface screenshot of another application, a usage video of another application, or other suitable application store data.
Digital content 112 is data that is different from application store data 116. For example, the digital content 112 may be presented directly by the application's own user interface 110, e.g., without an embedded or overlaid user interface for another application, while the application store data 116 is configured to be presented by the application store or in the application store user interface 114 presented as part of the application's own user interface 110.
The campaign application 108 receives a content response from the content server 120, the content response including the digital content 112 and the application store data 116. In some examples, the campaign application 108 may receive a first response including the digital content 112 from a first server (e.g., content server 120) and a second response including the application store data 116 from a second server (e.g., application store server).
After receiving the content response, the activity application 108 presents the digital content 112 and the application store user interface 114 in the application user interface 110. The application store user interface 114 includes application store data 116 and installation elements 118.
The active application 108 may present the digital content 112 in a content slot (slot) in its application user interface 110. The activity application 108 can present the application store user interface 114 in the same slot. To present the application store user interface 114 in the gap or otherwise in the application user interface 110, the active application 108 may use an application programming interface ("API"), for example, provided by an operating system or another application of the user device 102. For example, the campaign application 108 may use an API provided by google play in Android or Apple in iOS.
When the active application 108 detects a user interaction with an installation element 118 within the active application 108, the active application 108 triggers, launches, or otherwise causes the installation of another application while the active application 108 remains active. For example, interaction with the installation element 118 may cause the activity application 108 to send a request to an application store server for an installation file for another application, to send a request to an operating system of the user device 102 to cause the operating system to install the other application, or both.
Continuing with the above example, the document editor may receive text indicating the name of the worksheet application and the logo of the worksheet application as the digital content 112. As the application store data 116, the document editor may obtain screenshots of the worksheet application, review data of the worksheet application, and an application installation amount (e.g., which indicates how many times the worksheet application has been installed).
The document editor presents the worksheet application name and corresponding flag in the application user interface 110, both as digital content 112. While presenting the digital content 112, the document editor presents the application store data 116 in the application store user interface 114. The document editor may present the digital content 112 and the application store user interface 114 along with unsupported content, e.g., to allow installation of a worksheet application, and then present previously unsupported content.
In some implementations, the campaign application 108 may request content, receive content, or both, that is not immediately presented when received. In these implementations, the campaign application 108 may store the digital content 112, the application store data 116, or both, in the content cache 106. For example, when the active application 108 has a dynamic user interface, the active application 108 may cache content prior to rendering, such that the active application 108 already has dynamic content for rendering and does not have to wait for a response from the content server 120 or another server before rendering the dynamic content.
In some examples, the dynamic content may be a video (e.g., presented as part of a game). The active application 108 may receive video referencing another application as digital content. The campaign application 108 may receive the corresponding application store data for another application. The campaign application 108 may store the video and application store data in the content cache 106 for later use.
When the active application 108 stores data in the content cache 106 for later presentation, the active application 108 does not require activity during the receipt, storage, or both of the data. For example, an application running in the background (e.g., minimized) may receive the digital content 112 and the application store data 116. The application may store the received data in the content cache 106. When the application is active (e.g., active application 108), the application may present digital content 112 and an application store user interface 114 in application user interface 110.
The application store user interface 114 included in the application user interface 110 can have the same or similar format as the user interface of the application store 104. For example, the campaign application 108 may present the application store user interface 114 in the same format (e.g., the same look and feel) as the user interface of the application store 104, even though it is being presented within the campaign application 108.
In some examples, the application store user interface 114 can be customized based on one or more parameters. These parameters may include data of the user device 102, an account of the user device 102, the activity application 108, the digital content 112, a size of an area in which the application store user interface 114 will be presented in the application user interface 110, a location of an area in which the application store user interface 114 will be presented in the application user interface 110, or a combination of two or more of these. This may enable the app store user interface 114 to have a similar look and feel as the user interface of the app store 104 while allowing for customized presentation, for example, assuming that the app store user interface 114 is not presented on the entire display of the user device 102.
The location of the area in which the app store user interface 114 is to be presented may be a location on the display, such as top or bottom or left or right; a location within the user interface; or both. The location within the user interface may be a first content location, a second content location, a third content location, or the like, which may be presented in the application user interface 110 after the active application 108 receives user input indicating a scrolling action or other movement of the application user interface 110 through presentation of the application user interface 110.
In some implementations, the application store data can be selected based on one or more parameters. For example, when the parameter includes data representing the campaign application 108 (e.g., an identifier of the campaign application 108), the content server 120 may select either the first application store data for the first identifier of the first campaign application or the second application store data for the second identifier of the second campaign application. The first active application may be a document editor and the second active application may be a worksheet application. The application represented by both the first application store data and the second application store data may be a music application. In this example, the first application store data may indicate how the music application is used in conjunction with the document editor and the second application store data may indicate how the music application is used in conjunction with the worksheet application. This may enable the content server 120 to provide different application store data 116 based on the context in which the application store data 116 is to be presented in response to content requests received from different user devices 102.
To enable dynamic selection of the application store data 116 based on the context in which the application store data 116 is to be presented, the user device 102 may send one or more parameters to the content server 120 in a content request. For example, the user device 102 (e.g., the campaign application 108) may transmit data for the parameters described above. These parameters may include a view of the presentation, a digital content slot in which the application store user interface 114 is to be presented, or other suitable parameters.
In some examples, the content server 120 may provide the application store data 116, the application store data 116 including a plurality of data sets of a particular data type, such as a plurality of flags or views. The view may be a screenshot of the application represented by the application store data 116. The activity application 108 or another component on the user device 102 can then select data of a particular data type from the plurality of data sets for presentation with the digital content 112. For example, when the application store data 116 includes a first indicia and a second indicia, the activity application 108 can select the first indicia based on the size of the two indicia and the size of the area in which the application store user interface 114 will be presented; a color scheme based on the digital content and the application store user interface 114, such as by selecting a logo that is closest to the color scheme; or based on another suitable choice. This may ensure compatibility of the application store data 116 and the application store interface 114 with the digital content 112, the application user interface 110, the activity application 108, and/or the user device 102. Furthermore, multiple data sets may be provided simultaneously (e.g., in a single message), which may further improve the versatility of the campaign application 108 and enable more efficient provision of data. In particular, the increased computational and bandwidth requirements associated with transmitting multiple messages may be avoided. Furthermore, by providing multiple data sets in advance, latency associated with identifying incompatibilities and requesting additional data sets may be avoided, which may be particularly important when network conditions are poor.
The application store user interface 114 can be overlaid on or embedded in the digital content 112. When the active application 108 presents the overlaid application store user interface 114, the active application 108 can generate two graphical user interface ("GUI") components, a first GUI component for presenting the digital content 112 and a second GUI component for presenting the application store user interface 114.
The activity application 108 can then generate instructions for presenting the two GUI components such that the second GUI component for presenting the application store user interface 114 is overlaid on top of the first GUI component for presenting the digital content 112. The presenting may include changing a color of the presented digital content (e.g., including a gray overlay) to indicate that the second GUI component presenting the application store user interface 114 is the focus of the application user interface 110 and that user interaction with the first GUI component is disabled. The activity application 108 can present the overlaid application store user interface 114 after presenting the digital content 112 for a predetermined period of time, or when another presentation criterion is met, as discussed in more detail below. The area of the application user interface 110 (e.g., digital content 112) on which the application store user interface 114 overlays may not be rendered by the user device 102. This may reduce processing requirements by avoiding rendering content that will be overwritten by other content.
When the campaign application 108 presents the embedded application store user interface 114, the campaign application 108 may generate a single GUI component for presenting both the digital content 112 and the application store user interface 114. The single GUI component then presents both the digital content 112 and the application store user interface 114, as described in more detail below.
2A-B depict an example of a user interface 200 with an embedded application store user interface 202. The user interface 200 includes an embedded application store user interface 202 that is presented concurrently with digital content 204. The digital content 204 may include any suitable type of digital content, such as images or video. Here, the digital content 204 is a video that presents information about another application that may provide additional functionality to an active application (e.g., active application 108) that is presenting the user interface 200 on a display. For example, another application may be a second game that extends over the environment of the first game as the active application 108 or completely unrelated to the active application 108.
The embedded application store user interface 202 can be embedded in any suitable portion of the user interface 200. For example, the embedded application store user interface 202 can be embedded in the digital content 204. In some examples, the embedded application store user interface 202 may be embedded directly in the user interface 200 itself.
The embedded application store user interface 202 can include content size elements 206 a-b. The content size elements 206a-b enable the embedded application store user interface 202 to adjust the amount of content presented in the embedded application store user interface 202, the amount of digital content 204 depicted in the user interface 200, or both.
For example, when the content size element 206a is in a first position, the embedded application store user interface 202 may be at a time period T1During which a first amount of application store data 208a for another application is presented. When the active application detects user interaction with the content size element 206a, for a time period T2During which the content size element is moved from a first location to a second location represented by the content size element 206b, the active application (e.g., the embedded application store user interface 202) can adjust the amount of application store data 208b that is presented. For example, the embedded application store user interface 202 can present additional application store data in response to a user interaction that slides the content size element 206a to the second location 206 b. This may enable additional data 212 about another application to be presented, such as application store data. The additional data 212 may have been received by the user device 102 along with the rest of the application store data 208 b. This may enable more efficient data provision by avoiding the increased computational and bandwidth requirements associated with transmitting multiple messages. Furthermore, the latency associated with receiving user interactions, processing user interactions, requesting additional data, and receiving additional data may be avoided, which is particularly important when network conditions are poor.
The embedded application store user interface 202 includes an installation element 210. The installation element 210 enables installation of another application on a user device that is executing an active application without causing the user device to switch from presenting the active application to presenting the application store. For example, when the embedded application store user interface 202 is at time period T1During which a user interaction with installation element 210 is detected, the active application may cause another application to be installed on the user device. The installation process may include the active application providing the user device with information about the other application, such as an identifier or link of the other application, that the user device uses to download and install the other application.
As shown in fig. 2B, during the time period T3Meanwhile, when the user equipment is downloading another applicationWhen another application is used, installed, or both, the embedded application store user interface 202 can present a progress element 214 indicating the progress of the download process, the installation process, or both. For example, in response to a user interaction selecting the installation element 210, the embedded application store user interface 202 can present a progress element 214. The user interaction to select installation element 210 may be any suitable type of user interaction. The user interaction may be a voice input, such as "mount", touch screen input, track ball input, or mouse input.
The embedded application store user interface 202 can present the cancel element 216 during the download process, the installation process, or both. For example, when a user device initiates a download or installation process, the embedded application store user interface 202 can include a cancel element 216, the cancel element 216 enabling cancellation of the download process, the installation process, or both.
When the digital content 204 is a video, the active application may play the video during the download process, the installation process, or both. For example, when the user device installs another application, the active application may be for a time period T1During which playback of video is started and during a time period T3During which the video continues to play. This may reduce the amount of time required for the user device to play the video and install another application. In these implementations, the user interface 200 may include a stop element to stop video playback. For example, the stop element may be presented with the digital content 204. Since the playing of the video and the installation of another application may be performed simultaneously by the same application, these processes may be performed in a more time-efficient and computing resource-efficient manner.
In a time period T4Meanwhile, after another application has been installed, the embedded application store user interface 202 can present the open element 218 or allow the user to continue using the active application, e.g., in response to user interaction with the close element. The open element enables a user input to cause the user device to open another application, such as to switch to a user interface of the other application. When another application is not currently executing on the user device and the embedded application store user interface 202 detects user interaction with the open element 218The user equipment may then launch the other application. The active application may provide data to the user device that causes the user device to open another application. The data may indicate an identifier of another application or other suitable data.
The use of the user interface 200 with the embedded application store user interface 202 enables an active application that is not an application store to present digital content that references another application and the application store data for the other application without requiring the user device to switch to presenting a separate application store application. This may enable the active application to provide information about the supplemental application while reducing the computer resources required to present the information.
FIG. 3 depicts an example of a user interface 300 of an application store user interface with an overlay. In a time period T1Meanwhile, the user interface 300 depicts digital content 302 of an activity application (e.g., activity application 108). The digital content 302 may provide information about, for example, referencing another application that is a different application than the active application. For example, when the active application is a game, the digital content may include video, images, or both of another game developed by the same developer as the game developer.
The digital content 302 may include an application detail element 304, such as a first installation element 304. When the active application detects user interaction with the application detail element 304, the active application may present an overlaid application store user interface 308.
The active application may be for a time period T when the active application does not detect user interaction with the application details element 304, the close element 306, or both2During which the overlaid application store user interface 308 is presented. The overlaid application store user interface 308 presents application store data 310 for another application. For example, application store data 310 may include a name of another application, a logo, rating data, installation quantity data, a screenshot of another application, or a combination of two or more of these.
The overlaid application store user interface 308 includes a second installation element 312. In contrast to the application details element 304 that enables presentation of the overlaid application store user interface 308, the second installation element 312 can enable installation of another application on the user device executing the active application. For example, when the active application detects user interaction with the second installation element 312, the active application may provide information about the other application to the user device, such as an identifier or download link of the other application. The user device may use the received information to retrieve data of another application, such as installation data. The user device may retrieve the data from the application store server or another suitable system that maintains data for another application in memory. The user equipment may then install another application, for example, using the retrieved data. The overlaid application store user interface 308 can include one or more elements indicating that another application is being installed, e.g., a progress element, a cancel element, or both.
The overlaid application store user interface 308 can include a content size element or another element that enables user interaction with the depicted application store data 310. For example, the element may enable the user to scroll through information about another application, such as a screenshot of the other application, a comment of the other application, or a description of the other application.
When the presentation criteria are satisfied, the active application can present the overlaid application store user interface 308. For example, the active application may present the overlaid application store user interface 308 after determining that a predetermined time period (e.g., 10 seconds) has expired. The predetermined time period may indicate a duration for which the active application presents the digital content 302. In some implementations, the active application can present the overlaid application store user interface 308 after the video included in the digital content 302 ends playing.
When the active application presents the overlaid application store user interface 308, the overlaid application store user interface 308 can inhibit user interaction with the digital content 302, the user interface element of the digital content 302, or both. For example, when the digital content 302 includes the application detail element 304, the close element 306, or both, presentation of the overlaid application store user interface 308 may inhibit user interaction with these elements.
The active application can detect a user interaction requesting that the overlaid application store user interface 308 no longer be presented. The detected user interaction may be a selection of an exit element of the covered application store user interface 308, an area above the covered application store user interface 308 (e.g., where the non-interactable digital content 302 is presented), or another suitable user interaction.
As discussed above with reference to the embedded application store user interface 202, the overlaid application store user interface 308 can open another application after the other application is installed. For example, the overlaid application store user interface 308 may include an install element 312, a cancel element, or an open element depending on the installation phase of another application. When another application is not installed, the overlaid application store user interface 308 can depict an installation element 312. During the download, installation, or both of another application, the overlaid application store user interface 308 can include a cancel element that enables the download process, the installation process, or both to be cancelled. Once another application is installed, the overlaid application store user interface 308 can depict an open element that causes the user device to open the other application.
FIG. 4 is a flow diagram of a process 400 for rendering (e.g., concurrently rendering) digital content with application store data. For example, the process 400 may be used by the activity application 108 from the environment 100.
An activity application executing on a user device receives digital content referencing a second application not installed on the user device for presentation in a user interface of the activity application (402). The active application is not an application store application. Instead, the campaign application presents the application store data, as described in more detail below.
The campaign application may receive digital content from the content server. The content server may select the digital content in response to determining that the second application is not installed on the user device on which the active application is executing. For example, the content server may receive data from the user device identifying one or more applications installed on the user device and select digital content that references applications not installed on the user device, e.g., when the data is sent to the content server.
The active application obtains application store data for a second application that is not installed on the user device (404). The active application is not an application store. The activity application can be configured to provide the application store user interface only in response to receiving application store data for another application from another system. In some examples, the activity application is not configured to provide the application store data in response to a user interaction requesting the application store data.
The campaign application may obtain the application store data from any suitable system. For example, the campaign application may obtain application store data from a content server. The campaign application may obtain the application store data from another server (e.g., an application store server) than the content server from which the campaign application received the digital content.
The system may select the application store data based on a determination that the second application is not installed on the user device. For example, when the system determines that a second application is not installed on the user device, the system may select application store data for the second application and provide the selected application store data to the campaign application. When another system provides digital content to an active application, the system may provide an identifier of a second application to the other system (e.g., a content server).
In some examples, the system may receive an identifier of the second application from another system. For example, when another system determines that a second application is not installed on a user device executing an active application, the other system may provide the system with an identifier of the second application. The system can use the identifier to select application store data and provide the application store data to the campaign application.
The application store data may be any suitable application store data. For example, the application store data may include application review data, application rating data, screenshots, application descriptions, or a combination of two or more of these.
The active application determines whether the presentation criteria have been met (406). For example, the campaign application may determine whether there are user interface element slots to present the digital content and the application store data. The active application may determine whether it has detected a user interaction indicating a request to present the digital content.
The user interaction may indicate a request to present digital content that does not request presentation of the application store data. In these examples, the campaign application may determine whether to present the application store data depending on the type of digital content received and need not obtain the application store data. For example, the active application may determine that the digital content of the second application is not referenced. The campaign application does not obtain the application store data because the campaign application determines not to reference the digital content of the second application. The active application may then render the digital content alone, e.g., without any application store data. However, when the campaign application determines to reference the digital content of the second application, the campaign application may obtain the application store data.
In response to determining that the presentation criteria are not satisfied, the active application maintains the digital content and the application store data in a cache (408). For example, after receiving the digital content and obtaining the application store data, the user device stores the digital content and the application store data in a cache. Once the digital content and application store data are presented by the campaign application, the campaign application may remove or maintain the digital content and application store data in the cache. The campaign application may maintain the digital content and the application store data in the cache prior to rendering the digital content and the application store data when the rendering criteria are not satisfied, e.g., without causing deletion of the digital content and the application store data from the cache.
In some implementations, the campaign application can have presentation criteria that indicate whether the digital content and the application store data should be presented simultaneously. For example, the presentation criteria may indicate a video end event (e.g., when the digital content is a video), a time period (e.g., when the digital content is an image), or both. When the presentation criterion is a video end event, the active application may determine whether the video as digital content has ended playing. When the video has finished playing, the active application may determine that the presentation criteria are met. When the presentation criterion is a time period, the active application may determine whether the digital content (e.g., an image) has been presented for a duration that satisfies (e.g., is equal to) the time period. When the campaign application determines that the digital content has been presented for a duration that satisfies the time period, the campaign application may determine that the presentation criteria are satisfied.
When the campaign application presents the digital content without the application store data, the presentation criteria may include a criterion indicating that the campaign application did not detect user interaction with the digital content, e.g., a selection of an installation element or a second application detail element presented in the digital content. For example, the active application may determine that the active application has not detected user interaction with the second application-specific element. In response, the active application may present an overlaid or embedded application store user interface, e.g., proceeding to step 410 below.
When the campaign application determines that the presentation criteria are not satisfied, the campaign application may continue to present the digital content, e.g., not present the application store data. This may continue until the active application determines that the presentation criteria are satisfied.
In response to determining that the presentation criteria are satisfied, the active application provides the digital content for presentation concurrently with an application store user interface that includes (i) application store data for a second application that is not installed on the user device, and (ii) an installation element that triggers installation of the second application on the user device from within the active application (410). The campaign application may provide digital content for presentation concurrently with the application store user interface. For example, the campaign application may provide digital content for presentation concurrently with the embedded application store user interface or the overlaid application store user interface.
In some implementations, when the campaign application presents the digital content without presenting the application store data and the application store user interface, the campaign application need not detect a user interaction requesting presentation of the application store data or the application store user interface. Alternatively, the activity application automatically presents the application store user interface without user input, e.g., concurrently with the digital content in an overlaid application store user interface.
The campaign application may provide the digital content for presentation concurrently with the application store user interface in any suitable manner. For example, the campaign application may present the digital content on the display simultaneously with the application store user interface. In some examples, the activity application may provide data of the digital content and the application store user interface to the display or the graphical processing unit to cause the display or the graphical processing unit to present the digital content and the application store user interface simultaneously.
The active application detects user interaction with an installation element presented within a user interface of the active application (412). For example, the active application detects a user input selecting an installation element. In some examples, the active application may detect a voice command, such as "install," or receive data identifying the voice command, such as when another application on the user device detects the voice command.
The active application triggers the download of the second application independent of the application that launched the application store (414). For example, the active application provides data to the user device such that the user device downloads the second application. The user device may install the second application on the user device using the downloaded data. In some examples, the user device may launch the second application after installing the second application, e.g., when the active application detects user interaction with an open element presented in the application store user interface after installing the second application. The user device may perform any of these actions without launching an application of the application store.
The order of the steps in process 400 described above is merely illustrative, and presentation of digital content along with application store data may be accomplished in a different order. For example, the campaign application may obtain the application store data prior to or concurrently with receiving the digital content. In some examples, the campaign application obtains the application store data in the same message or group of messages in which the campaign application received the digital content. For example, the campaign application may receive a set of messages from a server (e.g., a content server), each message including the same message identifier, and in combination including data for both the digital content and the application store data.
In some embodiments, process 400 may include additional steps, fewer steps, or some steps may be divided into multiple steps. For example, the active application may perform steps 402-406 and 410 without performing other steps in process 400. In some examples, the active application may perform steps 404 and 410 without performing other steps in the process. In some examples, the active application may perform steps 402, 404, and 410 without performing other steps in process 400. In some examples, the active application may perform steps 402, 404, 410, 412, and 414 without performing other steps in process 400.
In some implementations, the campaign application may request the digital content before receiving the digital content. The request may be a request for digital content and no application store data is requested.
The digital content may be any suitable digital content. For example, the digital content may be a video presented as part of a game. In some examples, the digital content may be an advertisement. For example, when the game is a virtual reality game, the digital content may be part of an advertisement to be presented in a three-dimensional virtual environment, e.g., on a billboard that is part of the virtual environment.
In some implementations, the campaign application may present any suitable data for the embedded or overlaid application, rather than the application store data. For example, the campaign application may receive digital content that references a second application or product. The campaign application may obtain application data (rather than application store data) that also references the second application or product. The active application may then present the digital content in its user interface with a user interface of another application, the latter depicting the application data. In this manner, the active application may present data referencing a second application or product and digital content referencing the same second application or product in a user interface (e.g., whether overlaid or embedded) of another application.
In some implementations, the active application or user device can receive multiple sets of digital content, each set referencing the same second application. When an active application or user device (e.g., two different applications executing on the user device) presents each of the different sets of digital content, the active application may present the same application store data for the second application. For example, the active application may present first digital content, e.g., an image, referencing the second application in the first user interface slot while presenting an application store user interface depicting application store data for the second application. The active application may later present the second digital content, e.g., a video, in the second user interface slot. While presenting the second digital content, the activity application may present an application store user interface that includes the same application store data presented with the first digital content. The activity application may present the second digital content in the same user interface slot as the application store user interface.
For the case where the systems discussed herein utilize personal or device information, the user may be provided with an opportunity to control whether programs or features collect personal information (e.g., information about the user's social network, social actions or activities, profession, the user's preferences, or the user's current location), or whether and/or how to receive content from a content server that may be more relevant to the user. In addition, certain data may be anonymized in one or more ways before it is stored or used, thereby deleting personally identifying information. For example, the identity of the user or the identity of the device may be anonymized such that personally identifiable information of the user or device cannot be determined. In some examples, identification need not be used, but rather the system may use data about applications installed on the device without using or receiving an identifier of the device. Thus, the user can control how the content server collects and uses information about him or her.
A number of embodiments have been described. Nevertheless, it will be understood that various modifications may be made without departing from the spirit and scope of the disclosure. For example, various forms of the flows shown above may be used, with steps reordered, added, or deleted.
Embodiments of the subject matter and the functional operations described in this specification can be implemented in digital electronic circuitry, tangibly embodied in computer software or firmware, in computer hardware, to include the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them. Embodiments of the subject matter described in this specification can be implemented as one or more computer programs, i.e., one or more modules of computer program instructions encoded on a tangible, non-transitory program carrier for execution by, or to control the operation of, data processing apparatus. Alternatively or additionally, the program instructions may be encoded on an artificially generated propagated signal (e.g., a machine-generated electrical, optical, or electromagnetic signal that is generated to encode information for transmission to suitable receiver apparatus for execution by a data processing apparatus). The computer storage medium may be a machine-readable storage device, a machine-readable storage substrate, a random or serial access memory device, or a combination of one or more of them.
The term "data processing apparatus" refers to data processing hardware and includes all kinds of apparatus, devices and machines for processing data, including for example a programmable processor, a computer or multiple processors or computers. The apparatus can also be or further comprise special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit). The apparatus can optionally include, in addition to hardware, code that creates an execution environment for the computer program, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, or a combination of one or more of them.
A computer program, which can also be referred to or described as a program, software, a software application, a module, a software module, a script, or code, can be written in any form of programming language, including compiled or interpreted languages, or declarative or procedural languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, or other unit suitable for use in a computing environment. A computer program may, but need not, correspond to a file in a file system. A program can be stored in a portion of a file that holds other programs or data, such as one or more scripts stored in a markup language document, in a single file dedicated to the program in question, or in multiple coordinated files, such as files that store one or more modules, sub programs, or portions of code. A computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
The processes and logic flows described in this specification can be performed by one or more programmable computers executing one or more computer programs to perform functions by operating on input data and generating output. The processes and logic flows can also be performed by, and apparatus can also be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).
For example, a computer suitable for the execution of a computer program includes a general-purpose or special-purpose microprocessor or both, or any other kind of central processing unit. Generally, a central processing unit will receive instructions and data from a read-only memory or a random access memory or both. The essential elements of a computer are a central processing unit for executing instructions and one or more memory devices for storing instructions and data. Generally, a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks. However, a computer need not have such devices. Further, the computer may be embedded in another device, e.g., a mobile telephone, a smart phone, a Personal Digital Assistant (PDA), a mobile audio or video player, a game console, a Global Positioning System (GPS) receiver, or a portable storage device, e.g., a Universal Serial Bus (USB) flash drive, etc.
Computer readable media suitable for storing computer program instructions and data include all forms of non volatile memory, media and memory devices, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks; magneto-optical disks; as well as CDROM and DVD-ROM discs. The processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
To provide for interaction with a user, embodiments of the subject matter described in this specification can be implemented on a computer having a display device (e.g., an LCD (liquid crystal display), organic light emitting diode (organic light emitting diode), or other monitor) for displaying information to the user and a keyboard and a pointing device (e.g., a mouse or a trackball) by which the user can provide input to the computer. Other types of devices may also be used to provide user interaction with a user; for example, feedback provided to the user can be any form of sensory feedback, such as visual feedback, auditory feedback, or tactile feedback; and input from the user may be received in any form, including acoustic, speech, or tactile input. Further, the computer may interact with the user by sending and receiving documents to and from the device used by the user; for example, by sending a web page to a web browser on the user device in response to a request received from the web browser.
Embodiments of the subject matter described in this specification can be implemented in a computing system that includes a back end component (e.g., as a data server), or that includes a middleware component (e.g., an application server), or that includes a front end component (e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described in this specification), or any combination of one or more such back end, middleware, or front end components. The components of the system can be interconnected by any form or medium of digital data communication, e.g., a communication network. Examples of communication networks include a Local Area Network (LAN) and a Wide Area Network (WAN), such as the Internet.
The computing system may include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other. In some embodiments, the server sends data, such as hypertext markup language (HTML) pages, to the user device, for example, to display data to and receive user input from a user interacting with the user device acting as a client. Data generated at the user device, such as a result of the user interaction, may be received at the server from the user device.
Fig. 5 is a block diagram of a computing device 500, 550, the computing device 500, 550 may be used to implement the systems and methods described in this disclosure as a client or a server or servers. Computing device 500 is intended to represent various forms of digital computers, such as laptops, desktops, workstations, personal digital assistants, servers, blade servers, mainframes, and other appropriate computers. Computing device 550 is intended to represent various forms of mobile devices, such as personal digital assistants, cellular telephones, smartphones, smartwatches, head-mounted devices, and other similar computing devices. The components shown here, their connections and relationships, and their functions, are meant to be exemplary only, and are not meant to limit implementations described and/or claimed in this disclosure.
The memory 504 stores information within the computing device 500. In one implementation, the memory 504 is a computer-readable medium. In one implementation, the memory 504 is a volatile memory unit or units. In another implementation, the memory 504 is a non-volatile memory unit or units.
The storage device 506 is capable of providing mass storage for the computing device 500. In one implementation, the storage device 506 is a computer-readable medium. In various different implementations, the storage device 506 may be a floppy disk device, a hard disk device, an optical disk device, or a tape device, a flash memory or other similar solid state storage device, or an array of devices, including devices in a storage area network or other configurations. In one embodiment, a computer program product is tangibly embodied in an information carrier. The computer program product contains instructions that, when executed, perform one or more methods, such as those described above. The information carrier is a computer-or machine-readable medium, such as the memory 504, the storage device 506, or memory on processor 502.
The high speed controller 508 manages bandwidth-intensive operations for the computing device 500, while the low speed controller 512 manages lower bandwidth-intensive operations. Such allocation of duties is exemplary only. In one embodiment, high-speed controller 508 is coupled to memory 504, display 516 (e.g., through a graphics processor or accelerator), and to high-speed expansion ports 510, which high-speed expansion ports 510 may accept various expansion cards (not shown). In an embodiment, low-speed controller 512 is coupled to storage device 506 and low-speed expansion port 514. The low-speed expansion port, which may include various communication ports (e.g., USB, bluetooth, ethernet, wireless ethernet), may be coupled through, for example, a network adapter to one or more input/output devices, such as a keyboard, a pointing device, a scanner, or a network device such as a switch or router.
As shown, computing device 500 may be implemented in a number of different forms. For example, it may be implemented as a standard server 520, or multiple times in a group of such servers. It may also be implemented as part of a rack server system 524. Further, it may be implemented in a personal computer such as laptop computer 522. Alternatively, components from computing device 500 may be combined with other components in a mobile device (not shown), such as device 550. Each such device may contain one or more computing devices 500, 550, and an entire system may be made up of multiple computing devices 500, 550 communicating with each other.
The processor 552 can process instructions for execution within the computing device 550, including instructions stored in the memory 564. The processor may also include separate analog and digital processors. For example, the processor may provide coordination of the other components of the device 550, such as control of user interfaces, applications run by device 550, and wireless communication by device 550.
The processor 552 may communicate with a user through a control interface 558 and a display interface 556 coupled to a display 554. The display 554 may be, for example, a TFT LCD display or an organic light emitting diode display, or other suitable display technology. The display interface 556 may comprise appropriate circuitry for driving the display 554 to present graphical and other information to a user. The control interface 558 may receive commands from a user and translate them for submission to the processor 552. In addition, an external interface 562 may be provided in communication with the processor 552, so as to enable near field communication of the device 550 with other devices. External interface 562 may provide, for example, for wired communication (e.g., via a docking procedure) or wireless communication (e.g., via bluetooth or other such technologies).
The memory 564 stores information within the computing device 550. In one implementation, the memory 564 is a computer-readable medium. In one implementation, the memory 564 is a volatile memory unit or units. In another implementation, the memory 564 is a non-volatile memory unit. Expansion memory 574 may also be provided and connected to device 550 through expansion interface 572, which may include, for example, a SIMM card interface. Such expansion memory 574 may provide additional storage space for device 550, or may also store applications or other information for device 550. Specifically, expansion memory 574 may include instructions to carry out or supplement the processes described above, and may include secure information also. Thus, for example, expansion memory 574 may be provided as a security module for device 550, and may be programmed with instructions that permit secure use of device 550. In addition, secure applications may be provided via the SIMM card, as well as additional information, such as placing identification information on the SIMM card in a non-hackable manner.
As described below, the memory may include, for example, flash memory and/or MRAM memory. In one embodiment, a computer program product is tangibly embodied in an information carrier. The computer program product contains instructions that, when executed, perform one or more methods, such as those described above. The information carrier is a computer-or machine-readable medium, such as the memory 564, expansion memory 574, or memory on processor 552.
As shown, the computing device 550 may be implemented in a number of different forms. For example, it may be implemented as a cellular telephone 580. It may also be implemented as part of a smartphone 582, personal digital assistant, or other similar mobile device.
Various implementations of the systems and techniques described here can be realized in digital electronic circuitry, integrated circuitry, specially designed ASICs (application specific integrated circuits), computer hardware, firmware, software, and/or combinations thereof. These various implementations can include implementation in one or more computer programs that are executable and/or interpretable on a programmable system including at least one programmable processor, which may be special or general purpose, coupled to receive data and instructions from, and to transmit data and instructions to, a storage system, at least one input device, and at least one output device.
These computer programs (also known as programs, software applications or code) include machine instructions for a programmable processor, and may be implemented in a high-level procedural and/or object-oriented programming language, and/or in assembly/machine language. As used herein, the terms "machine-readable medium," "computer-readable medium" refers to any computer program product, apparatus and/or device (e.g., magnetic discs, optical disks, memory, Programmable Logic Devices (PLDs)) used to provide machine instructions and/or data to a programmable processor, including a machine-readable medium that receives machine instructions as a machine-readable signal. The term "machine-readable signal" refers to any signal used to provide machine instructions and/or data to a programmable processor.
While this specification contains many specific implementation details, these should not be construed as limitations on the scope of what may be claimed, but rather as descriptions of features specific to particular embodiments. Certain features that are described in this specification in the context of separate embodiments can also be implemented in combination in a single embodiment. Conversely, various features that are described in the context of a single embodiment can also be implemented in multiple embodiments separately or in any suitable subcombination. Furthermore, although features may be described above as acting in certain combinations and even initially claimed as such, one or more features from a claimed combination can in some cases be excised from the combination, and the claimed combination may be directed to a subcombination or variation of a subcombination.
Similarly, while operations are depicted in the drawings in a particular order, this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order, or that all illustrated operations be performed, to achieve desirable results. In some cases, multitasking and parallel processing may be advantageous. Moreover, the separation of various system modules and components in the embodiments described above should not be understood as requiring such separation in all embodiments, and it should be understood that the described program components and systems can generally be integrated together in a single software product or packaged into multiple software products.
In each instance where HTML files are mentioned, other file types or formats may be substituted. For example, an HTML file may be replaced by an XML, JSON, plain text, or other type of file. Further, where tables or hash tables are mentioned, other data structures (such as spreadsheets, relational databases, or structured files) may be used.
Specific embodiments of the present invention have been described. Other embodiments are within the scope of the following claims. For example, the steps recited in the claims, described in the specification, or depicted in the drawings may be performed in a different order and still achieve desirable results. In some cases, multitasking and parallel processing may be advantageous.
Claims (15)
1. A computer-implemented method, comprising:
receiving, by an activity application executing on a user device that is not an application store, digital content referencing a second application that is not installed on the user device and displayed in a user interface of the activity application;
obtaining, from one or more servers and by the active application that is not an application store, application store data for the second application that is not installed on the user device;
providing, by the activity application and in a user interface of the activity application, the digital content with an application store user interface that includes (i) application store data for the second application that is not installed on the user device, and (ii) an installation element for triggering installation of the second application on the user device from within the activity application;
detecting a user interaction with the installation element provided within a user interface of the active application; and
in response to detecting user interaction with the installation element, triggering download of the second application independent of launching an application of an application store.
2. The method of claim 1, wherein:
obtaining the application store data comprises receiving, by the active application that is not an application store, the application store data for the second application that is not installed on the user device from another system; and
providing the digital content with the application store user interface includes providing the application store user interface in response to receiving the application store data from another system.
3. The method of any preceding claim, wherein providing the digital content with the application store user interface comprises displaying the digital content with the application store user interface.
4. The method of any preceding claim, wherein providing the digital content with the application store user interface comprises providing data of the digital content and the application store user interface to a display unit to cause the display unit to display the digital content and the application store user interface.
5. The method of any preceding claim, wherein providing the digital content with the application store user interface including the application store data comprises presenting the digital content with an embedded application store user interface including the application store data in a user interface of the activity application.
6. The method of any preceding claim, wherein providing the digital content with the application store user interface including the application store data comprises presenting the digital content with an overlaid application store user interface including the application store data.
7. The method of any preceding claim, comprising:
displaying, by the active application, the digital content in a user interface without displaying the application store data; and
determining that a presentation time period of the digital content is met, wherein the digital content is displayed with the overlaid application store user interface in response to determining that the presentation time period of the digital content is met.
8. The method of any preceding claim, wherein the digital content comprises a second application detail element, the method comprising:
determining, by the campaign application, that the campaign application did not detect user interaction with the second application detail element, wherein displaying the digital content with the overlaid application store user interface is in response to:
determining that the active application does not detect user interaction with the second application detail element; and
determining that the presentation time period of the digital content is satisfied.
9. The method of any preceding claim, wherein obtaining the application store data comprises obtaining the application store data in a message comprising the digital content.
10. The method of any preceding claim, comprising:
caching the digital content and the application store data prior to providing the digital content with the application store user interface; and
determining that presentation criteria are satisfied, wherein providing the digital content with the application store user interface is in response to determining that the presentation criteria are satisfied.
11. The method of any preceding claim, wherein:
determining that meeting the presentation criteria comprises detecting, by the active application, a user interaction requesting presentation of the digital content; and
providing the digital content with the application store user interface is in response to detecting a user interaction requesting presentation of the digital content.
12. The method of any preceding claim, wherein:
detecting a user interaction requesting presentation of the digital content comprises detecting a user interaction requesting presentation of any digital content and not requesting presentation of any application store data; and
providing the digital content with the application store user interface including the application store data is in response to detecting a user interaction requesting presentation of any digital content and not requesting presentation of any application store data.
13. The method of any preceding claim, wherein:
obtaining the application store data comprises obtaining, from another system, the application store data selected based on determining that the second application is not installed on the user device.
14. A non-transitory computer storage medium encoded with instructions that, when executed by one or more computers, cause the one or more computers to perform the method of any preceding claim.
15. A system comprising one or more computers and one or more storage devices having stored thereon instructions operable, when executed by the one or more computers, to cause the one or more computers to perform the method of any of claims 1 to 13.
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
PCT/CN2020/102625 WO2022011668A1 (en) | 2020-07-17 | 2020-07-17 | In-application store user interface |
Publications (2)
Publication Number | Publication Date |
---|---|
CN114730236A true CN114730236A (en) | 2022-07-08 |
CN114730236B CN114730236B (en) | 2024-04-09 |
Family
ID=79554453
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN202080080969.8A Active CN114730236B (en) | 2020-07-17 | 2020-07-17 | Application store user interface |
Country Status (6)
Country | Link |
---|---|
US (1) | US20220398079A1 (en) |
EP (1) | EP4046006A4 (en) |
JP (1) | JP7418573B2 (en) |
KR (1) | KR102644130B1 (en) |
CN (1) | CN114730236B (en) |
WO (1) | WO2022011668A1 (en) |
Citations (9)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20130024854A1 (en) * | 2011-07-21 | 2013-01-24 | Canon Kabushiki Kaisha | Information processing apparatus and controlling method thereof |
US20160162954A1 (en) * | 2014-12-08 | 2016-06-09 | Vungle, Inc. | Systems and methods for providing advertising services to devices with a customized adaptive user experience based on adaptive advertisement format building |
US20160162939A1 (en) * | 2014-12-08 | 2016-06-09 | Vungle, Inc. | Systems and methods for providing advertising services to devices with a customized adaptive user experience |
US20160292732A1 (en) * | 2014-12-08 | 2016-10-06 | Vungle, Inc. | Systems and methods for communicating with devices with a customized adaptive user experience |
CN106162238A (en) * | 2015-04-02 | 2016-11-23 | 万歌有限公司 | For software application is sent to use the system and method for the equipment of advertisement |
CN107004211A (en) * | 2014-12-08 | 2017-08-01 | 万歌有限公司 | The system and method for providing advertising service to the device of the adaptation Consumer's Experience with customization based on adaptive algorithm |
CN107667388A (en) * | 2015-04-02 | 2018-02-06 | 万歌有限公司 | The system and method for the dynamic advertising selection of multiple advertisements or advertising campaign on device |
US20190373320A1 (en) * | 2018-06-03 | 2019-12-05 | Apple Inc. | Setup procedures for an electronic device |
CN110753902A (en) * | 2017-06-02 | 2020-02-04 | 苹果公司 | User interface for downloading applications on an electronic device |
Family Cites Families (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8484100B2 (en) * | 2010-10-19 | 2013-07-09 | Apple Inc. | Method, medium, and system for an integrated application store for a user device |
US9858174B2 (en) * | 2014-09-26 | 2018-01-02 | Oracle International Corporation | Updatable native mobile application for testing new features |
US10318112B2 (en) * | 2016-05-27 | 2019-06-11 | Rovi Guides, Inc. | Systems and methods for enabling quick multi-application menu access to media options |
JP6851836B2 (en) | 2017-01-20 | 2021-03-31 | キヤノン株式会社 | Information processing equipment, information processing methods and programs |
-
2020
- 2020-07-17 US US17/776,684 patent/US20220398079A1/en active Pending
- 2020-07-17 CN CN202080080969.8A patent/CN114730236B/en active Active
- 2020-07-17 EP EP20945153.3A patent/EP4046006A4/en active Pending
- 2020-07-17 KR KR1020227016420A patent/KR102644130B1/en active IP Right Grant
- 2020-07-17 WO PCT/CN2020/102625 patent/WO2022011668A1/en unknown
- 2020-07-17 JP JP2022529356A patent/JP7418573B2/en active Active
Patent Citations (9)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20130024854A1 (en) * | 2011-07-21 | 2013-01-24 | Canon Kabushiki Kaisha | Information processing apparatus and controlling method thereof |
US20160162954A1 (en) * | 2014-12-08 | 2016-06-09 | Vungle, Inc. | Systems and methods for providing advertising services to devices with a customized adaptive user experience based on adaptive advertisement format building |
US20160162939A1 (en) * | 2014-12-08 | 2016-06-09 | Vungle, Inc. | Systems and methods for providing advertising services to devices with a customized adaptive user experience |
US20160292732A1 (en) * | 2014-12-08 | 2016-10-06 | Vungle, Inc. | Systems and methods for communicating with devices with a customized adaptive user experience |
CN107004211A (en) * | 2014-12-08 | 2017-08-01 | 万歌有限公司 | The system and method for providing advertising service to the device of the adaptation Consumer's Experience with customization based on adaptive algorithm |
CN106162238A (en) * | 2015-04-02 | 2016-11-23 | 万歌有限公司 | For software application is sent to use the system and method for the equipment of advertisement |
CN107667388A (en) * | 2015-04-02 | 2018-02-06 | 万歌有限公司 | The system and method for the dynamic advertising selection of multiple advertisements or advertising campaign on device |
CN110753902A (en) * | 2017-06-02 | 2020-02-04 | 苹果公司 | User interface for downloading applications on an electronic device |
US20190373320A1 (en) * | 2018-06-03 | 2019-12-05 | Apple Inc. | Setup procedures for an electronic device |
Also Published As
Publication number | Publication date |
---|---|
KR20220084132A (en) | 2022-06-21 |
EP4046006A4 (en) | 2022-11-09 |
EP4046006A1 (en) | 2022-08-24 |
CN114730236B (en) | 2024-04-09 |
JP2023509820A (en) | 2023-03-10 |
WO2022011668A1 (en) | 2022-01-20 |
KR102644130B1 (en) | 2024-03-07 |
US20220398079A1 (en) | 2022-12-15 |
JP7418573B2 (en) | 2024-01-19 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US11276217B1 (en) | Customized avatars and associated framework | |
US11778430B2 (en) | Layers in messaging applications | |
US11750683B2 (en) | Computer application promotion | |
US10194288B2 (en) | Sticker distribution system for messaging apps | |
US9898174B2 (en) | Previewing expandable content items | |
US9003310B2 (en) | Modifying running of plug-in on hidden tab of browser | |
KR20140078676A (en) | Custom optimization of web pages | |
JP6440828B2 (en) | Visibility detection of digital content | |
CN105930467A (en) | Information processing method and electronic device | |
CN107430514B (en) | Low latency applications using multiple servers | |
CN104704468A (en) | Cross system installation of WEB applications | |
JP2021036433A (en) | Terminal, control method of terminal, and program | |
CN110990075A (en) | Starting method, device and equipment of fast application and storage medium | |
CN110058854B (en) | Method, terminal device and computer-readable medium for generating application | |
CN110083467B (en) | Method and device for processing applet message and computer storage medium | |
KR20150106481A (en) | Method for providing information of keyword in instant messenger, apparatus and system for the same | |
US20120084630A1 (en) | Generating Behavior Information For a Link | |
CN110162350B (en) | Notification bar information display method, notification bar information display device, server and storage medium | |
CN110908629A (en) | Electronic equipment operation method and device, electronic equipment and storage medium | |
CN114730236B (en) | Application store user interface | |
KR20150106180A (en) | Method for extracting of keyword in instant messenger, apparatus and system for the same | |
KR20220112410A (en) | Message system for processing a message having special effects | |
CN111880881A (en) | Resource processing system, resource processing method, electronic device, and medium | |
CN114840162A (en) | Method and device for presenting first screen page, electronic equipment and storage medium | |
KR20140110541A (en) | Method for displaying of list, apparatus and system for the same |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
SE01 | Entry into force of request for substantive examination | ||
GR01 | Patent grant | ||
GR01 | Patent grant |
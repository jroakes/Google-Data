US8805118B2 - Method for automatic alignment of raster data with vector data in a geographic information system - Google Patents
Method for automatic alignment of raster data with vector data in a geographic information system Download PDFInfo
- Publication number
- US8805118B2 US8805118B2 US13/426,284 US201213426284A US8805118B2 US 8805118 B2 US8805118 B2 US 8805118B2 US 201213426284 A US201213426284 A US 201213426284A US 8805118 B2 US8805118 B2 US 8805118B2
- Authority
- US
- United States
- Prior art keywords
- vector
- approximate
- vectors
- raster data
- road
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Fee Related, expires
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V20/00—Scenes; Scene-specific elements
- G06V20/10—Terrestrial scenes
- G06V20/182—Network patterns, e.g. roads or rivers
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V10/00—Arrangements for image or video recognition or understanding
- G06V10/40—Extraction of image or video features
- G06V10/44—Local feature extraction by analysis of parts of the pattern, e.g. by detecting edges, contours, loops, corners, strokes or intersections; Connectivity analysis, e.g. of connected components
- G06V10/443—Local feature extraction by analysis of parts of the pattern, e.g. by detecting edges, contours, loops, corners, strokes or intersections; Connectivity analysis, e.g. of connected components by matching or filtering
Definitions
- the present invention relates to computer-aided registration of raster data with vector data.
- a geographic information system is a system for archiving, retrieving, and manipulating data that has been stored and indexed according to the geographic coordinates of its elements.
- a classic problem for geographic information systems is the registration of misaligned vector data and raster data, the vector data typically representing road information and the raster data typically representing aerial imagery.
- There are a number of causes for the misalignment including obsolete data, projection errors, inaccurate camera models, the absence of a precise terrain model, different data vendors, etc.
- conflation in which a set of control point pairs is specified and the data is warped in a manner so as to align to the control points.
- the present invention relates to methods for aligning raster and vector data.
- a raster/vector aligner receives raster data and an approximate vector of a feature within the raster data.
- the raster/vector aligner generates an edge signal by edge filtering the raster data along a direction of the approximate vector and a smoothness signal by smoothness filtering the raster data along a direction of the approximate vector.
- the raster/vector aligner combines the edge signal and the smoothness signal into a combined signal which is used to generate a translation vector or a signal weight for the feature within the raster data.
- the raster/vector aligner receives raster data and a set of approximate vectors for features within the raster data.
- the raster/vector aligner identifies directions of the vectors and groups the vectors into directional chunks.
- the raster/vector aligner defines search areas of the raster data for each directional chunk, each area encompassing at least one vector in the direction.
- the raster/vector aligner generates translation information for each search area and corresponding vector.
- the raster/vector aligner generates a translation vector and confidence ratio from the translation information of the areas.
- the raster/vector aligner receives raster data and a set of approximate vectors for features within the raster data.
- the raster/vector aligner subdivides the raster data into tiles with corresponding subsets of the approximate vectors.
- the raster/vector aligner generates translation information for each the tile.
- the raster/vector aligner generates global translation information for the raster data from the translation information of the tiles.
- the raster/vector aligner adjusts the raster data based on the global translation information to align with the set of approximate vectors.
- a computer implemented raster/vector aligner may operate on a computer system.
- FIG. 1 is an example image of raster data with overlaid vector data misaligned and the strongest detected road signals by the algorithm.
- FIG. 2 is an example image of raster data with overlaid vector data correctly aligned.
- FIG. 3 is a flow chart diagram of a method for aligning raster and vector data according to an embodiment of the present invention.
- FIG. 4 is a flow chart diagram of a method for aligning raster and vector data according to an embodiment of the present invention.
- FIG. 5 is a flow chart diagram of a method for computing optimal translation and confidence ratio for a single tile according to an embodiment of the present invention.
- FIG. 6 is a flow chart diagram of a method for directional road feature detection according to an embodiment of the present invention.
- FIG. 7 is a flow chart diagram of a method for computing minimum-square optimal translation and confidence ratio according to an embodiment of the present invention.
- FIG. 8 is an image of raster data and filtered images of the same according to an embodiment of the present invention.
- FIG. 10 is an image of graphs of edge filtered raster data according to an embodiment of the present invention.
- FIG. 11 is an image of a graph of the combined filtered raster data and the corresponding raster data according to an embodiment of the present invention.
- FIG. 12 is an image of representations of the aggregated road location signals according to an embodiment of the present invention.
- FIG. 13 is an image of representations of the cost function according to an embodiment of the present invention.
- FIG. 14 is a graph of confidence ratios according to an embodiment of the present invention.
- FIG. 15 is a depiction of a low confidence tile according to an embodiment of the present invention.
- FIG. 16 is a block diagram of a raster data and vector data aligner according to an embodiment of the present invention.
- FIG. 17 is a diagram of an example computer system that can be used to implement an embodiment of the present invention.
- the present invention relates to a computer program product and methods for identifying features from raster data and registration of raster data features with vector data. Examples include, but are not limited to, raster data having satellite images and vector data having road location information.
- FIG. 1 depicts an example of raster data in the form of a satellite image.
- the figure shows street map vectors in blue and detected streets in red. As can be seen in FIG. 1 , many of the street map vectors are misaligned.
- FIG. 2 depicts the same satellite image with aligned road data in blue.
- an overview of the method of aligning raster and vector data is provided as flow diagram 300 in FIG. 3 .
- raster and vector data are inputted.
- street vector data is sorted by their directions.
- the algorithm to automatically align the image and street map has two main parts. First, for each direction, road detection is executed at block 330 . Second, minimum-square best-match equations are solved in block 340 . Finally, in block 350 , a translation vector is computed. This method is depicted in greater detail in flow diagram 400 of FIG. 4 and explained in greater detail below.
- the raster data is scaled to a designed resolution level 17 at block 406 .
- a resolution level of 17 is preferable. However, other resolutions may be used. The benefits of this resolution level are described below.
- the vector and raster data may be overlapped, associating the approximate vectors with their projected locations on the raster data (block 408 ).
- the input raster data and street vector map are subdivided into smaller rectangular tiles with common widths and heights.
- FIG. 5 depicts the algorithm for computing the optimal translation and confidence ratio for each of these tiles. This algorithm is repeated until all tiles are processed (block 414 ). By this subdivision, the mismatch inside each tile is relatively simple and it is possible to approximately align the image tile with the vector tile with a rigid translation. With the consideration of distributed processing and the resource limits of a general computer system, it is also practical and more plausible to process subdivided images instead of very large images.
- the size of the smaller sub-pieces should be limited.
- a sub-piece or a tile has to be large enough to contain a road feature in it.
- the tile size should also be large enough to contain long street segments so that its signal can be stronger than noise signals such as those from buildings, slim parking lots, etc.
- the resolution of the input raster data is also chosen carefully for both precision and efficiency. This approach can be applied over a range of resolution, given that the linear road signal is still present. However, using too low a resolution will sacrifice the precision of the result. Conversely, too high a resolution will make feature recognition unnecessarily expensive because of the large amount of data to be processed.
- the input resolution level is chosen to be 17, which has a resolution of 0.66 meter. Another reason to choose this resolution, besides precision and efficiency, is that the data at this level has the largest coverage in the database.
- the tile size can be set to 4096 ⁇ 4096 pixels, for example. Other tile sizes have also been tested, and the algorithm works for tile sizes as small as 1024 ⁇ 1024 pixels.
- a directional road extraction method is designed based on a mathematical model of road features.
- the physical characteristics of roads and streets in orthogonal aerial images are summarized as follows: (1) straight and linear; (2) long and continuous; (3) often with a certain width; (4) often with parallel boundary; and (5) smoothness along the direction of the road.
- the presented algorithm is based on these characteristics of road features.
- the majority of roads and streets are straight and linear, which indicates that edge detection is helpful in road extraction.
- the continuous feature of road implies that some form of aggregation is applicable to increase the precision and robustness.
- the width and the boundary curb features are more obvious in high resolution imageries, but it still applies to low resolution as well.
- the road width is almost constant within a certain segment of the road regardless of resolution, and usually the road color is different from its two sides.
- the smoothness feature is helpful to distinguish road signals from other signals that happen to be arranged linearly such as buildings.
- a road feature is located within a predefined search buffer nearby a road vector, and second a road feature is located almost parallel to its corresponding road vector.
- a road feature detection algorithm is able to quickly and robustly detect the location of a street from a given street vector and a search buffer within a tile.
- raster data tiles and their corresponding road vectors are inputted from the subdivision block 410 of FIG. 4 (blocks 502 and 504 ), sorted by their direction (block 506 ), and grouped into directional chunks based on their direction (block 508 ) prior to the road feature detection algorithm. This is described in greater detail in the Directional Aggregation section below.
- FIG. 6 depicts the directional road detection algorithm for one of these directional chunks.
- a single vertical street vector is used as the road direction chunk in the explanation. However, the method is not limited to use of a single vector.
- the input road vector direction chunk (block 602 ) is first filtered by a minimum street segment length (block 606 ).
- the next step for directional road detection is to create a rectangular search buffer around each street vector (block 608 ) on the corresponding image tile (block 604 ), where each street vector has a certain direction and length.
- the rectangular search buffer is of the same length as the street vector around which it was created.
- the width of the buffer is determined by a predefined maximum mismatch amount.
- the algorithm will work on the sub-image defined by the buffer. An example of a sub-image defined by a rectangular buffer is depicted in image 801 of FIG. 8 .
- the sub-image is filtered by a roughness filter along the street vector (block 610 ).
- a roughness filter is like an edge filter on the perpendicular direction of the street vector.
- An example of a sub-image filtered by a roughness filter is depicted in image 802 of FIG. 8 .
- the sub-image is also filtered by an edge filter along the street vector direction (block 618 ).
- An example of a sub-image filtered by an edge filter is image 803 of FIG. 8 .
- a smoothness signal is generated. This is done by projecting the roughness filter result along the street vector direction (block 612 ), and applying an inverse transform to make the smoothness signal (block 614 ).
- the roughness filter result is depicted in plot 901 of FIG. 9 .
- the result after an inverse transform is applied is depicted in plot 902 of FIG. 9 .
- An edge signal is also projected. The edge signal is projected by projecting the edge filter result along the street vector direction to generate an edge signal (block 620 ). In an embodiment, the above is repeated for all vectors in the directional chunk (block 624 ) and the roughness filter and edge filter projected results are aggregated across all vectors in the direction chunk (blocks 616 and 622 ).
- a coarse street signal is generated by convolving the edge signal and the smoothness signal (block 626 ).
- the edge filter result is depicted in plot 1001 of FIG. 10 .
- the result after generating the coarse street signal is depicted in plot 1002 of FIG. 10 .
- Noise created by the boundary of a parking lot in the projected edge signal is filtered by the smoothness signal and its strength is reduced in the coarse street signal.
- the street signal is generated by filtering the coarse street signal using a minimum street width filter (block 628 ).
- the filtered coarse street signal is depicted in plot 1101 of FIG. 11 .
- the filtered coarse street signal is overlaid on the sub-image in image 1102 of FIG. 11 for demonstration.
- the peak position of the street signal is the most probable location of the detected street. In an embodiment of the invention, multiple peak locations have been selected for each direction to increase the robustness.
- the directional road detection algorithm is applied to all the road segments defined in the vector data (block 512 ).
- the detection result is not very reliable.
- the imagery or the vector data may be outdated and there may be no road feature to be found to match, or conversely, there may be multiple streets near a certain vector and the correct one may not have the strongest signal.
- the road vectors are sorted by their directions and grouped into discrete direction chunks (blocks 506 and 508 ). For each direction chunk, the projected street signals are all aggregated together before “peak selection” (blocks 616 and 622 of FIG. 6 ). The aggregated signal is more reliable than each individual signal, hence the peak selection result is more robust.
- An optional parameter in aggregation is the estimated width of the road, which is generated from the road type information available in the road vector database. This parameter can be used to give major roads, such as inter-state highways, a priority in matching over local streets.
- FIG. 12 shows the aggregated road location signals of all the directions for the example in FIG. 1 with a constant road width for resolution level 17 imagery.
- a 3D representation of the aggregated road location signals is depicted in plot 1201 of FIG. 12
- a 2D projection of the same is depicted in plot 1202 of FIG. 12 .
- FIG. 7 depicts the minimum-square matching approach to detect the optimal translation vector for each tile. This approach is applied after the possible street locations in all the directions are detected. The results of directional feature detection for each tile and the corresponding vectors (blocks 702 and 704 ) are inputted from the road feature detection (flow diagram 600 of FIG. 6 ).
- a target cost function is defined first to model the mismatch between detected roads and input road vectors. For a certain tile, suppose its corresponding road vectors have I different directions and the search buffer size is r max on both sides of each road vector. For road vectors in the i th direction, ⁇ i is the angle of the perpendicular vector of these roads with the positive x-axis. The angles are then normalized so that ⁇ i ⁇ ( ⁇ /2, ⁇ /2]. In the aggregated directional road signals, assume J i possible road locations have been detected for angle ⁇ i . Let (r, ⁇ ) represent a translation vector with length r ⁇ [ ⁇ r max ,r max ] and direction ⁇ ( ⁇ /2, ⁇ /2], then the cost function can be expressed as:
- L i,j is the j th road signal location for direction ⁇ i
- W i,j is the weight of the j th road signal location for direction ⁇ i
- Matrix L is computed from the results of the directional feature detection at block 708 of FIG. 7 . So the cost function is actually a weighted square sum of the distance between detected locations of road vectors and the translated road vector using a certain translation vector (r, ⁇ ).
- FIG. 13 depicts two 3D representations for function cost(r, ⁇ ) generated for the example in FIG. 1 .
- a 3D mesh is depicted in 1301 , and, to better visualize the minimum value location of the function, the inverse value 3D mesh is depicted in 1302 .
- the weight for each possible location of a road vector is proportional to the detected road signal strength at that location. It is also proportional to the length of the road vector, because the longer the vector is, the higher possibility the algorithm has to detect the road correctly from locally similar noises such as those from buildings, parking lots, etc.
- the filters used in directional road detections are specifically designed for road features, it is reasonable to expect that the detected road signal will have an extraordinarily strong response at the real location of the road in the image, while the majority of signal responses are more like random noises. So another parameter is used in computing the weight, that is, how distinguished the signal response is at the location compared to the average response. For the presented algorithm, the average and the standard deviation of the signal responses for a direction are computed for this purpose.
- R i,j is the detected road signal for direction i at location j
- length i,s is the length of the s th vector of the total S i vectors in direction chunk i.
- Values average(R i ) and std(R i ) are the average and standard deviation values for all road signals in direction i.
- cost( r , ⁇ ) r 2 ( a sin 2 ( ⁇ )+ b cos 2 ( ⁇ )+2 c sin( ⁇ )cos( ⁇ )) ⁇ 2 r ( e cos( ⁇ )+ d sin( ⁇ ))+ C 0 (7)
- ⁇ can be any angle and there will still exist a corresponding r to make a minimum value for cost(a,r).
- This is a degenerated case and will happen when there is only one direction for all the roads in the tile, which rarely occurs in real data.
- it is trivial to find the optimal translation direction, which should be perpendicular to the only direction of the roads, and the translation amount r will be the minimum of all the extrema.
- Equation (6) The solution presented in equation (6) is one of a few stationary points of function cost(r, ⁇ ) and it is necessary to verify it is the optimal global minimum.
- the cost function will have its minimum at the computed stationary point when its second derivatives satisfy the requirements in (8) (below) at the point. For this case, boundary condition does not need to be considered and the global optimal value is either at the computed stationary point or at one of the special cases analyzed in the Special Cases section above.
- the function cost(r, ⁇ ) may have a local maximum at (r 0 , ⁇ 0 ), or does not have an extreme value at the computed stationary point, and it is necessary to check the boundary conditions of function cost( ⁇ ,r) at block 718 .
- cost( ⁇ ,r) is a periodic function for ⁇
- boundary sampling approach does not look efficient, it has little impact on the overall performance of the algorithm because using real data it is very unlikely the algorithm ends up computing boundary samples. In all the several hundreds of experiments using real GIS data, the requirements in (8) are always met so boundary sampling does not contribute to the computational cost.
- the confidence ratio generated from the algorithm, at block 722 is composed of the weighted angle span factor ⁇ , computed at block 706 , and the normalized distance factor ⁇ , computed at block 720 , as follows:
- the normalized distance factor ⁇ is derived from the computed final cost value of the target function cost(r, ⁇ ). It can be efficiently computed using the already computed parameters in equations (5) (block 720 ).
- ⁇ cost ( r 0 , ⁇ 0 ) ⁇ i , j ⁇ W i , j ( 9 )
- the normalized distance factor ⁇ describes the average distance between the detected roads and the input road vector after applying the computed translation. For an ideal situation where the detected roads in all directions perfectly align with the input vector after translation, ⁇ will be zero or infinitely small. If after the computed translation has been applied and some or all of the detected roads still have an offset distance from the target vectors, ⁇ will be of a relatively large value and indicate that something might be wrong.
- the weighted angle span factor is designed to capture the quality of the input vector data.
- the weighted angle span is the largest normalized area defined by two aggregated road vectors (block 706 ).
- the spatial distribution of the road vector data is not uniform. For certain rural areas, very few or no road vector may exist, and the algorithm will have less data to aggregate for road signal detection, especially when the tile size used in subdividing the raster data is small.
- Second is that when all road vectors inside a tile have about the same direction, it is more like the last degenerated case discussed in the Special Cases section above.
- the translation precision will be more vulnerable to noises and local errors because many optimal solutions may exist for the minimum-square match, even though the road detection may still work perfectly. For such cases, the corresponding angle span will be relatively small, and can help to indicate a possible problem.
- tiles with low-confidence ratios may be inspected (block 416 of FIG. 4 ).
- low-confidence tiles may not be manually inspected.
- a global warp method can generate better alignment results by assigning control point weight proportional to its confidence ratio, and computing an approximation warp instead of an interpolation at places of low confidence ratio.
- an automatic registration pipeline can be formed without human interaction.
- the automatic alignment results can be sorted and filtered to find low reliability locations (block 418 ). Then the automatic generated translation at these locations can be manually examined and replaced with a correct translation when necessary (block 420 ).
- FIG. 14 shows the computed confidence ratio for 89 tiles from an example dataset. Those tiles with a confidence ratio of 1.0 are results of empty image or vector data on the boundary of the image, which are safe to be ignored. To inspect the quality, only a few cases with relatively low confidence ratios need to be checked.
- FIG. 15 depicts three representations of the tile with the lowest confidence ratio. The image of this tile is depicted in 1501 . In 1502 , the vector data is overlaid on the tile in blue and the detected streets are overlaid in green and red. For this tile, the algorithm over-translated in the correct direction because there are two parallel streets in the horizontal vector search buffer but only one road vector in the road data, this is depicted in 1503 . Because the lower road is longer and less obstructed, it outweighed the upper road. Upon manual examination, the translation vector for this tile may be replaced with the correct translation.
- a pair of control points is generated using the computed translation vector for that tile (blocks 422 and 424 of FIG. 4 ).
- the source control point is chosen as the center pixel of the tile, and the corresponding target control point is the source control point plus the translation vector for the tile.
- the control points from all tiles form a mesh.
- a thin-plate spline transformation is generated using these control points (block 426 ) and warps the raster data to more closely align with the road data resulting in the final aligned raster and vector data (block 428 ).
- FIG. 16 shows a raster data and vector data aligner 1600 according to an embodiment of the present invention.
- Raster data and vector data aligner 1600 includes a vector direction detector 1602 , edge filter 1604 , roughness filter 1606 , combiner 1608 , feature width detector 1610 and translation generator 1612 .
- Raster data and vector data aligner 1600 can be implemented in by software, firmware, hardware, or a combination thereof, it can be part of any geographical information system.
- Vector direction detector 1602 can detect the direction of an approximate vector of a feature within raster data. In one example vector director detector 1602 can carry out each of the blocks 506 and 508 described above.
- Edge filter 1604 can filter raster data in the detected direction to produce an edge signal. In one example edge filter 1604 can carry out each of the blocks 618 , 620 and 622 described above.
- Roughness filter 1606 can filter raster data in the detected direction to produce a smoothness signal. In one example roughness filter 1606 can carry out each of the blocks 610 , 612 , 614 and 616 described above.
- Combiner 1608 combines the edge signal and the smoothness signal into a combined signal. In one example combiner 1608 can carry out block 626 described above.
- Feature width detector 1610 can filter the combined signal by a feature width before generating the translation information. In one example feature width detector 1610 can carry out block 628 described above.
- Translation generator 1612 uses the combined signal to generate translation information for the raster data. In one example translation generator 1612 can carry out each of the blocks in flow diagram 700 described above.
- FIG. 17 illustrates an example computer system 1700 in which the present invention, or portions thereof, can be implemented as computer-readable code.
- FIG. 17 illustrates an example computer system 1700 in which the present invention, or portions thereof, can be implemented as computer-readable code.
- Various embodiments of the invention are described in terms of this example computer system 1700 . After reading this description, it will become apparent to a person skilled in the relevant art(s) how to implement the invention using other computer systems and/or computer architectures.
- Computer system 1700 includes one or more processors, such as processor 1704 .
- Processor 1704 can be a special purpose or a general purpose processor.
- Processor 1704 is connected to a communication infrastructure 1706 (for example, a bus or network).
- Computer system 1700 also includes a main memory 1708 , and may also include a secondary memory 1710 .
- Main memory 1708 may include, for example, cache, and/or static and/or dynamic RAM.
- Secondary memory 1710 may include, for example, a hard disk drive 1712 and/or a removable storage drive 1714 .
- Removable storage drive 1714 may comprise a floppy disk drive, a magnetic tape drive, an optical disk drive, a flash memory, or the like.
- the removable storage drive 1714 reads from and/or writes to a removable storage unit 1718 in a well known manner.
- Removable storage unit 1718 may comprise a floppy disk, magnetic tape, optical disk, flash memory, etc., which is read by and written to by removable storage drive 1714 .
- removable storage unit 1718 includes a computer usable storage medium having stored therein computer software and/or data.
- secondary memory 1710 may include other similar means for allowing computer programs or other instructions to be loaded into computer system 1700 .
- Such means may include, for example, a removable storage unit 1722 and an interface 1720 .
- Examples of such means may include a program cartridge and cartridge interface (such as that found in video game devices), a removable memory chip (such as an EPROM, or PROM) and associated socket, and other removable storage units 1722 and interfaces 1720 which allow software and data to be transferred from the removable storage unit 1722 to computer system 1700 .
- Computer system 1700 may also includes a main memory 1702 .
- Main memory 1702 may include, for example, cache, and/or static and/or dynamic RAM.
- Main memory 1702 may be separate from main memory 1708 or may be a part thereof.
- Main memory 1702 may be adapted to communicate with display unit 1716 .
- Display unit 1716 may comprise a computer monitor or similar means for displaying graphics, text, and other data received from main memory 1702 .
- Computer system 1700 may also include a communications interface 1724 .
- Communications interface 1724 allows software and data to be transferred between computer system 1700 and external devices.
- Communications interface 1724 may include a modem, a network interface (such as an Ethernet card), a communications port, a PCMCIA slot and card, or the like.
- Software and data transferred via communications interface 1724 are in the form of a plurality of signals, hereinafter referred to as signals 1728 , which may be electronic, electromagnetic, optical, or other signals capable of being received by communications interface 1724 .
- Signals 1728 are provided to communications interface 1724 via a communications path 1726 .
- Communications path 1726 carries signals 1728 and may be implemented using wire or cable, fiber optics, a phone line, a cellular phone link, an RF link or other communications channels.
- Computer program medium and “computer usable medium” are used to generally refer to media such as removable storage unit 1718 , removable storage unit 1722 , a hard disk installed in hard disk drive 1712 , and signals 1728 carried over communications path 1726 .
- Computer program medium and computer usable medium can also refer to memories, such as main memory 1708 and secondary memory 1710 , which can be memory semiconductors (e.g. DRAMs, etc.). These computer program products are means for providing software to computer system 1700 .
- Computer programs are stored in main memory 1708 and/or secondary memory 1710 . Computer programs may also be received via communications interface 1724 . Such computer programs, when executed, enable computer system 1700 to implement the present invention as discussed herein. In particular, the computer programs, when executed, enable processor 1704 to implement the processes of the present invention, such as the steps in the method illustrated by flowchart 400 of FIG. 4 discussed above. Accordingly, such computer programs represent controllers of the computer system 1700 . Where the invention is implemented using software, the software may be stored in a computer program product and loaded into computer system 1700 using removable storage drive 1714 , interface 1720 , hard drive 1712 or communications interface 1724 .
- Embodiments of the invention also may be directed to computer products comprising software stored on any computer usable medium. Such software, when executed in one or more data processing device, causes a data processing device(s) to operate as described herein.
- Embodiments of the invention employ any computer usable or readable medium, known now or in the future. Examples of computer usable mediums include, but are not limited to, primary storage devices (e.g., any type of random access memory), secondary storage devices (e.g., hard drives, floppy disks, CD ROMS, ZIP disks, tapes, magnetic storage devices, optical storage devices, MEMS, nanotechnological storage device, etc.), and communication mediums (e.g., wired and wireless communications networks, local area networks, wide area networks, intranets, etc.).
- primary storage devices e.g., any type of random access memory
- secondary storage devices e.g., hard drives, floppy disks, CD ROMS, ZIP disks, tapes, magnetic storage devices, optical storage devices, MEMS,
Abstract
Description
solve the equations and a possible global minimum cost value can be found for a certain (r,α), while still checking for boundary conditions.
cost(r,α)=(L 1,1 −r cos(α))2+(L 2,1 −r sin(α))2
cost(r,α)=r 2(a sin2(α)+b cos2(α)+2c sin(α)cos(α))−2r(e cos(α)+d sin(α))+C 0 (7)
Claims (16)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/426,284 US8805118B2 (en) | 2007-01-19 | 2012-03-21 | Method for automatic alignment of raster data with vector data in a geographic information system |
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US11/655,292 US7869667B1 (en) | 2007-01-19 | 2007-01-19 | Method for automatic alignment of raster data with vector data in a geographic information system |
US12/888,118 US8160397B1 (en) | 2007-01-19 | 2010-09-22 | Method for automatic alignment of raster data with vector data in a geographic information system |
US13/426,284 US8805118B2 (en) | 2007-01-19 | 2012-03-21 | Method for automatic alignment of raster data with vector data in a geographic information system |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US12/888,118 Division US8160397B1 (en) | 2007-01-19 | 2010-09-22 | Method for automatic alignment of raster data with vector data in a geographic information system |
Publications (2)
Publication Number | Publication Date |
---|---|
US20120177305A1 US20120177305A1 (en) | 2012-07-12 |
US8805118B2 true US8805118B2 (en) | 2014-08-12 |
Family
ID=43415695
Family Applications (3)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US11/655,292 Active 2029-07-05 US7869667B1 (en) | 2007-01-19 | 2007-01-19 | Method for automatic alignment of raster data with vector data in a geographic information system |
US12/888,118 Active US8160397B1 (en) | 2007-01-19 | 2010-09-22 | Method for automatic alignment of raster data with vector data in a geographic information system |
US13/426,284 Expired - Fee Related US8805118B2 (en) | 2007-01-19 | 2012-03-21 | Method for automatic alignment of raster data with vector data in a geographic information system |
Family Applications Before (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US11/655,292 Active 2029-07-05 US7869667B1 (en) | 2007-01-19 | 2007-01-19 | Method for automatic alignment of raster data with vector data in a geographic information system |
US12/888,118 Active US8160397B1 (en) | 2007-01-19 | 2010-09-22 | Method for automatic alignment of raster data with vector data in a geographic information system |
Country Status (1)
Country | Link |
---|---|
US (3) | US7869667B1 (en) |
Cited By (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN108109156A (en) * | 2017-12-25 | 2018-06-01 | 西安电子科技大学 | SAR image Approach for road detection based on ratio feature |
US10013785B2 (en) | 2015-05-22 | 2018-07-03 | MyHEAT Inc. | Methods and systems for object based geometric fitting |
US10949997B2 (en) | 2019-03-08 | 2021-03-16 | Ford Global Technologies, Llc | Vehicle localization systems and methods |
US11721096B2 (en) | 2021-09-23 | 2023-08-08 | Here Global B.V. | Method, apparatus, and system for confirming road vector geometry based on aerial images |
Families Citing this family (14)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7869667B1 (en) * | 2007-01-19 | 2011-01-11 | Google Inc. | Method for automatic alignment of raster data with vector data in a geographic information system |
US8260006B1 (en) * | 2008-03-14 | 2012-09-04 | Google Inc. | System and method of aligning images |
US20090310149A1 (en) * | 2008-06-13 | 2009-12-17 | Kyocera Mita Corporation | Image forming apparatus |
US8271871B2 (en) * | 2009-04-30 | 2012-09-18 | Xerox Corporation | Automated method for alignment of document objects |
US8723886B2 (en) * | 2010-09-08 | 2014-05-13 | Navteq B.V. | Generating a multi-layered geographic image and the use thereof |
US8666195B1 (en) * | 2011-03-15 | 2014-03-04 | Google Inc. | Image alignment |
US8717387B1 (en) | 2011-04-04 | 2014-05-06 | Google Inc. | Correction of misaligned map data from different sources |
US9208601B2 (en) * | 2012-06-10 | 2015-12-08 | Apple Inc. | Computing plausible road surfaces in 3D from 2D geometry |
US9207094B2 (en) * | 2012-06-10 | 2015-12-08 | Apple Inc. | Road height generation for a road network |
US9354067B2 (en) | 2013-12-18 | 2016-05-31 | Qualcomm Incorporated | System, method and/or devices for aligning a movement path with an indoor routing graph |
US9621266B2 (en) * | 2014-03-25 | 2017-04-11 | Osram Sylvania Inc. | Techniques for raster line alignment in light-based communication |
EP3034000A1 (en) * | 2014-12-16 | 2016-06-22 | Agfa Healthcare | Motion correction method in dual energy radiography |
EP3185555B1 (en) * | 2015-12-23 | 2023-07-05 | Université de Genève | Image compression method with negligible and quantifiable information loss and high compression ratio |
US10775174B2 (en) * | 2018-08-30 | 2020-09-15 | Mapbox, Inc. | Map feature extraction system for computer map visualizations |
Citations (8)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5933540A (en) | 1995-05-11 | 1999-08-03 | General Electric Company | Filter system and method for efficiently suppressing noise and improving edge definition in a digitized image |
US20020171650A1 (en) | 1992-10-16 | 2002-11-21 | Mobile Information Systems, Inc. | Apparatus for graphical fleet management |
US6674445B1 (en) | 1999-10-12 | 2004-01-06 | Autodesk, Inc. | Generalized, differentially encoded, indexed raster vector data and schema for maps on a personal digital assistant |
US20070014477A1 (en) | 2005-07-18 | 2007-01-18 | Alexander Maclnnis | Method and system for motion compensation |
US20070014488A1 (en) | 2004-07-09 | 2007-01-18 | Ching-Chien Chen | Automatically and accurately conflating road vector data, street maps, and orthoimagery |
US7564457B2 (en) | 2003-04-30 | 2009-07-21 | Pixar | Shot shading method and apparatus |
US7869667B1 (en) | 2007-01-19 | 2011-01-11 | Google Inc. | Method for automatic alignment of raster data with vector data in a geographic information system |
US8538138B2 (en) * | 2006-06-30 | 2013-09-17 | At&T Intellectual Property Ii, L.P. | Global registration of multiple 3D point sets via optimization on a manifold |
-
2007
- 2007-01-19 US US11/655,292 patent/US7869667B1/en active Active
-
2010
- 2010-09-22 US US12/888,118 patent/US8160397B1/en active Active
-
2012
- 2012-03-21 US US13/426,284 patent/US8805118B2/en not_active Expired - Fee Related
Patent Citations (9)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20020171650A1 (en) | 1992-10-16 | 2002-11-21 | Mobile Information Systems, Inc. | Apparatus for graphical fleet management |
US5933540A (en) | 1995-05-11 | 1999-08-03 | General Electric Company | Filter system and method for efficiently suppressing noise and improving edge definition in a digitized image |
US6674445B1 (en) | 1999-10-12 | 2004-01-06 | Autodesk, Inc. | Generalized, differentially encoded, indexed raster vector data and schema for maps on a personal digital assistant |
US7564457B2 (en) | 2003-04-30 | 2009-07-21 | Pixar | Shot shading method and apparatus |
US20070014488A1 (en) | 2004-07-09 | 2007-01-18 | Ching-Chien Chen | Automatically and accurately conflating road vector data, street maps, and orthoimagery |
US7660441B2 (en) | 2004-07-09 | 2010-02-09 | Southern California, University | System and method for fusing geospatial data |
US20070014477A1 (en) | 2005-07-18 | 2007-01-18 | Alexander Maclnnis | Method and system for motion compensation |
US8538138B2 (en) * | 2006-06-30 | 2013-09-17 | At&T Intellectual Property Ii, L.P. | Global registration of multiple 3D point sets via optimization on a manifold |
US7869667B1 (en) | 2007-01-19 | 2011-01-11 | Google Inc. | Method for automatic alignment of raster data with vector data in a geographic information system |
Non-Patent Citations (8)
Title |
---|
Bookstein, F.L., "Principal Warps: Thin-Plate Splines and the Decomposition of Deformations", IEEE Trans. on Pattern Anal. and Mach. Intel, vol. 11, No. 6, pp. 567-585, Jun. 1989. |
Burt, P.J., et al., Local Correlation Measures for Motion Analysis: a Comparative Study. IEEE Conf. Pattern Recognition Image Processing, 269-274, Jun. 14-17, 1982. |
Chen, C.-C. et al., "Automatically and Accurately Conflating Orthoimagery and Street Maps", GIS '04: Proceedings of the 12th ACM InternationalSymposium on Advances Geographic Information Systems, ACM Press, New York, NY, USA, pp. 47-56, Nov. 12-13, 2004. |
Chen, Ching-Chien et al., "Automatically Annotating and Integrating Spatial Datasets", Department of Computer Science and Information Science Institute, Los Angeles, CA, USA, 18 pgs, 2003. |
Fogel, D.N., et al., "Image Registration using Multiquadric Functions, the Finite Element Method, Bivariate Mapping Polynomials and Thin Plate Spline", Technical Report 96-1, National Center for Geographic Information and Analysis (NCGIA), 63 pgs, Mar. 1996. |
Gonzalez, Rafael C. et al., "Digital Image Processing: Second Edition," Prentice Hall, Inc., 2002, whole book. |
Kybic, Jan, Elastic Image Registration using Parametric Deformation Models, 182 pgs, 2001. |
Yu, Z., et al., "A Novel Two-steps Strategy for Automatic GIS-Image Registration", ICIP, pp. 1711-1714, 2004. |
Cited By (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10013785B2 (en) | 2015-05-22 | 2018-07-03 | MyHEAT Inc. | Methods and systems for object based geometric fitting |
CN108109156A (en) * | 2017-12-25 | 2018-06-01 | 西安电子科技大学 | SAR image Approach for road detection based on ratio feature |
US10949997B2 (en) | 2019-03-08 | 2021-03-16 | Ford Global Technologies, Llc | Vehicle localization systems and methods |
US11721096B2 (en) | 2021-09-23 | 2023-08-08 | Here Global B.V. | Method, apparatus, and system for confirming road vector geometry based on aerial images |
Also Published As
Publication number | Publication date |
---|---|
US20120177305A1 (en) | 2012-07-12 |
US7869667B1 (en) | 2011-01-11 |
US8160397B1 (en) | 2012-04-17 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US8805118B2 (en) | Method for automatic alignment of raster data with vector data in a geographic information system | |
US10325370B1 (en) | Method and system of coregistration of remote sensing images | |
US10930005B1 (en) | Profile matching of buildings and urban structures | |
US10445616B2 (en) | Enhanced phase correlation for image registration | |
US7636455B2 (en) | Digital image edge detection and road network tracking method and system | |
US20040234124A1 (en) | Stereo calibration apparatus and stereo image monitoring apparatus using the same | |
US7912321B1 (en) | Image registration with uncertainty analysis | |
US11157735B2 (en) | Cloud detection in aerial imagery | |
US8396285B2 (en) | Estimating vanishing points in images | |
US11176425B2 (en) | Joint detection and description systems and methods | |
US8971640B1 (en) | Image alignment | |
Gonçalves et al. | CHAIR: Automatic image registration based on correlation and Hough transform | |
WO2011140178A1 (en) | Inverse stereo image matching for change detection | |
US20230095500A1 (en) | Camera Calibration Method | |
US20220148200A1 (en) | Estimating the movement of an image position | |
Zhu et al. | Depth-enhanced feature pyramid network for occlusion-aware verification of buildings from oblique images | |
US10937180B2 (en) | Method and apparatus for depth-map estimation | |
US20080267506A1 (en) | Interest point detection | |
Verykokou et al. | Automatic rough georeferencing of multiview oblique and vertical aerial image datasets of urban scenes | |
CN106778822B (en) | Image straight line detection method based on funnel transformation | |
CN111982152B (en) | Point cloud map quantification method and device, computer equipment and storage medium | |
US10776928B1 (en) | Efficient egomotion estimation using patch-based projected correlation | |
CN114549650A (en) | Camera calibration method and device, electronic equipment and readable storage medium | |
Coulter et al. | Automated co-registration of multitemporal airborne frame images for near real-time change detection | |
EP3602479B1 (en) | Motion imagery corner point sequencer |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:WU, XIAQING;REEL/FRAME:027904/0509Effective date: 20070309 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
CC | Certificate of correction | ||
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044277/0001Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551)Year of fee payment: 4 |
|
FEPP | Fee payment procedure |
Free format text: MAINTENANCE FEE REMINDER MAILED (ORIGINAL EVENT CODE: REM.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
LAPS | Lapse for failure to pay maintenance fees |
Free format text: PATENT EXPIRED FOR FAILURE TO PAY MAINTENANCE FEES (ORIGINAL EVENT CODE: EXP.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
STCH | Information on status: patent discontinuation |
Free format text: PATENT EXPIRED DUE TO NONPAYMENT OF MAINTENANCE FEES UNDER 37 CFR 1.362 |
|
FP | Lapsed due to failure to pay maintenance fee |
Effective date: 20220812 |
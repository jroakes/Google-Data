US8850305B1 - Automatic detection and manipulation of calls to action in web pages - Google Patents
Automatic detection and manipulation of calls to action in web pages Download PDFInfo
- Publication number
- US8850305B1 US8850305B1 US13/407,648 US201213407648A US8850305B1 US 8850305 B1 US8850305 B1 US 8850305B1 US 201213407648 A US201213407648 A US 201213407648A US 8850305 B1 US8850305 B1 US 8850305B1
- Authority
- US
- United States
- Prior art keywords
- action
- calls
- image
- webpage
- threshold number
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Fee Related, expires
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/953—Querying, e.g. by the use of web search engines
- G06F16/9535—Search customisation based on user profiles and personalisation
Definitions
- This disclosure relates generally to the rendering of web pages.
- the website of an organization is an important aspect of its business and identity. With the vast majority of organizations establishing a presence on the web, it is increasingly important that their websites are designed to facilitate quick and efficient user interactions. In the case of an organization that offers some goods or services for sale, it is very important that a visitor to the website quickly recognizes what goods or services are offered for sale. A well designed website can direct a visitor's attention quickly and efficiently to the goods and/or services for sale, and to the next action the visitor is expected to take.
- a “call to action,” as used herein, is a key visual element in a webpage. Calls to action include buttons, check boxes, etc., that invite the user to perform an action on that corresponding call to action, such as, for example, by clicking on them. Calls to action may also include notices and other visual elements on a webpage that do not necessarily invite the user to click on them. The placement of calls to action in an optimal manner in a webpage helps facilitate quick and efficient interaction with visitors.
- Methods, systems, and articles of manufacture for the automatic determining of calls to action in a webpage are disclosed. These include, rendering a web page in a browser, capturing the rendered web page as an image, filtering the image using one or more image filters, and identifying the calls to action in the filtered image using at least one call to action selection criteria.
- the automatically determined calls to action may be reported to the user and/or may be used for automatically rearranging the webpage for improved user interaction.
- FIGS. 1A and 1B illustrate views of a webpage before and after processing in accordance with an embodiment.
- FIG. 2 illustrates a flowchart of a method for determining and reporting the calls to action in a webpage, according to an embodiment.
- FIG. 3 illustrates a flowchart of a method for iteratively evaluating a website and automatically rearranging calls to action in a webpage, according to an embodiment.
- FIG. 4 illustrates a flowchart of a method for rearranging calls to action in a webpage, according to an embodiment.
- FIG. 5 illustrates a flowchart of a method for determining the most prominent calls to action in a webpage, according to an embodiment.
- FIG. 6 illustrates a flowchart of a method for assigning scores to respective calls to action, according to an embodiment.
- FIG. 7 illustrates a system for determining and/or manipulating calls to action in a webpage, according to an embodiment.
- FIG. 8 illustrates a computer system in which embodiments can be executed.
- Embodiments disclosed herein may be used to automatically determine the most prominent calls to action in a webpage.
- a “call to action,” as noted above, is a key visual element in a web page. The effectiveness of a call to action in attracting the attention of those who visit a webpage may be based, at least in part, upon its prominence as a visual element in the webpage.
- a ranked list of calls to action detected in the webpage may be reported to the user, so that the user can determine how the design of the webpage corresponds to the goals for it. For example, the user may determine whether the highest ranked call to action is, as intended, directed to the primary goal of the webpage.
- a ranked list of calls to action detected in the webpage provides an objective view of the most prominent calls to action and a view of the relative effectiveness of the detected calls to action.
- the disclosed methods for automatically evaluating webpages may be significantly faster and more consistent compared to evaluation by human “experts”. By capturing the webpage as an image and then repeatedly applying image filters and feature detection techniques, the calls to action in the webpage are detected in an efficient and effective manner.
- Embodiments may also be used to automatically rearrange calls to action in the webpage so that the webpage is more visually optimized to facilitate quick and efficient interaction with users.
- An iterative process of detecting most prominent calls to action, comparing the detected calls to action to goals, and rearranging the calls to action in the webpage according to rules may be used to fine-tune the webpage design.
- FIGS. 1A and 1B illustrate, respectively, exemplary views 100 and 100 ′ of a webpage before and after processing the webpage according to an embodiment of the present invention.
- the goal for the webpage 100 may be to attract a visitor to click on the “search” button 102 .
- element 102 may not be detected as the most prominent call to action.
- elements 104 and 106 may be ranked higher in visual prominence than 102 due to the characteristics of those elements relative to element 102 .
- the goal of the webpage is to attract the visitor's attention to the search button (element 102 ), and the calls to action determined according to embodiments, showed that element 102 , as it is, is not, the most prominent call to action in the webpage.
- FIG. 1B illustrates the webpage 100 ′ resulting after processing webpage 100 shown in FIG. 1A according to an embodiment.
- the call to action 102 ′ which should be the most prominent call to action consistent with the goals for the webpage, has been made larger so that it is visually more prominent than other detected calls to action.
- the attention of a visitor viewing the webpage of FIG. 1B is immediately directed to element 102 ,′ in a manner consistent with the goals for the webpage.
- FIG. 2 illustrates a flowchart of a method 200 for determining and reporting calls to action in a webpage, according to an embodiment.
- Method 200 can execute, for example, in a computer such as, a personal computer, laptop, tablet, smartphone, server, cloud-computer, or other computing device.
- user input is received to access a webpage.
- a user may input a uniform resource locator (URL) corresponding to the address of the webpage to be evaluated in a browser executing on the computer.
- the input may be entered through an input device directly connected to the computer, or one that is indirectly connected to the computer, such as, through a remote connection.
- URL uniform resource locator
- the webpage corresponding to the URL entered by the user is retrieved.
- the webpage may be retrieved from a web server.
- the webpage may be retrieved from a local file storage.
- method 200 can be used to evaluate webpages before they are deployed to a publically accessible web server.
- the retrieved webpage is rendered in the browser.
- the webpage may be received as a string of hypertext markup language (HTML).
- HTML hypertext markup language
- the browser parses the received HTML and a document object model (DOM) tree may be constructed. Additional hyper-text transfer protocol (HTTP) requests may be initiated to obtain images, stylesheets, JavaScript files and other objects to be displayed in the page. If available, one or more stylesheets may be parsed and necessary rendering information may be attached to the corresponding element in the DOM tree. Any Javascript may be executed, and subsequently the webpage may be rendered in the browser according to the DOM tree and stylesheets.
- HTML hypertext markup language
- the rendered webpage is captured as an image.
- the image capture should be executed only after all elements have been rendered in the webpage.
- the image capture may be performed by using any image capture utility. Some webpage image capture utilities capture only above the fold, and some others capture the area including below the fold. Embodiments may use either an above the fold image or an image that includes a below the fold view of the webpage.
- the captured image (of the webpage) may be stored in any image storage format, such as, but not limited to JPG and TIFF. According to an embodiment, the image is stored in Portable Network Graphics (PNG) format.
- PNG Portable Network Graphics
- one or more filters are applied to the image.
- Filtering may include the application of an image filter, such as a black and white filter, and a feature detection, such as a corner-point detection to detect objects or elements in the image.
- filtering can also include the iterative application of a series of filters and feature detectors.
- the capture of the webpage as an image enables the application of image filters and feature detectors to the captured image.
- This approach of performing filtering and detection upon an image of the webpage may be a more reliable approach to automatic detection of calls to action than approaches that do not first capture the rendered web page to an image.
- the HTML of the webpage may be parsed to identify calls to action based upon tags etc., such an approach may fail to detect many calls to action because not all calls to action will have associated recognizable HTML tags and/or other characteristic recognizable from the HTML stream.
- Capturing the rendered webpage as an image eliminates the need to rely upon the HTML stream of the webpage.
- embodiments may parse the HTML stream to confirm or reject a call to action detected based upon the captured image. For example, an element such as a button including recognizable text string may be detected based upon the image, and then, by parsing the webpage HTML for a tag indicating a button, one may confirm or reject that the webpage includes a button with the particular text string.
- the calls to action are identified from the filtered image of the webpage.
- Call to action selection criteria i.e., criteria based upon which a visual element in the captured image of the webpage is considered a call to action, may be configurable.
- the elements or calls to action identified in step 210 may be evaluated to determine if they are above a particular level of visual prominence to be considered a call to action. For example, each detected element can be assigned a score reflecting its visual prominence, and the score can be compared to a threshold visual prominence score. The elements or calls to action that score above the threshold visual prominence score are considered to be the most prominent calls to action.
- the detected calls to action may be ranked in order of their respective scores.
- the identified calls to action are counted. For example, the number of most prominent calls to action, i.e., those calls to action that scored above the threshold visual prominence score, is determined.
- the threshold number of most prominent calls to action may be configurable. According to another embodiment, the threshold number of most prominent calls to action may be dynamically determined based upon properties of the webpage, including, for example, the overall number of visual elements detected on the webpage. For example, when a large number of visual elements are detected (e.g., greater than 10) on a webpage, it may be considered an indication of a crowded webpage, and, therefore, the threshold number of most prominent calls to action may be set to a low value (e.g., 2) in order to require a higher level of visual prominence for the selected most prominent calls to action. For a webpage that has a small number of detected visual elements (e.g., less than 10), a higher number of elements may be selected as the threshold number of most prominent calls to action.
- a low value e.g. 2
- step 216 If, in step 216 , it is determined that the count is greater than the threshold number of most prominent calls to action, then the processing of method 200 proceeds to step 210 , and steps 210 - 216 can be iteratively executed until the count becomes less than or equal to the threshold number of most prominent calls to action.
- the same or different image filter or series of filters may be applied to the image.
- the same or different feature detector or group of feature detectors can be used to detect features in the image.
- step 216 If, at step 216 , it is determined that the count is less than or equal to the threshold number of most prominent calls to action, then processing of method 200 proceeds to step 218 .
- step 218 a ranked list of the calls to action in the webpage is generated.
- the list includes only the visually most prominent calls to action in the webpage.
- the list may be displayed, printed, stored and/or electronically transmitted to a configured destination.
- the list may be used by a user to manually reorganize the webpage.
- the report can be used to guide an automatic process of rearranging the webpage to facilitate more effective user interaction.
- FIG. 3 illustrates a flowchart of a method 300 for iteratively evaluating a website and for automatically rearranging calls to action in a webpage, according to an embodiment.
- Method 300 can be used, for example, to automatically evaluate a webpage for its calls to action, and then to reorganize the webpage to optimize its layout based on the results of the evaluation.
- Steps 306 - 312 corresponds to steps 206 - 212 , respectively, described above in relation to method 200 .
- the calls to action are identified in the image of the webpage. According to an embodiment, the most prominent calls to action in the webpage are identified.
- processing in method 300 proceeds to step 320 .
- a quality metric is determined for the webpage.
- the quality metric is a measure of how closely matched the detected calls to action are to the goals for the webpage.
- the goals for the webpage may be configured by the user as a ranked list of calls to actions. Then, the quality metric may be based upon the number of calls to action that were both detected and specified in configuration, expressed as a fraction or percentage. According to another embodiment, the quality metric may be based upon the whether or not the top detected call to action matched the configured goals. Other quality metrics may include, but are not limited to, whether or not the top call to action has a score above a configured threshold and/or above a configured level of difference relative to other detected calls to action.
- the quality metric can be compared to one or more quality criteria.
- the quality criteria may be configured. For example, in embodiments in which the quality metric is based upon how many of the detected most prominent calls to action match the goals, the quality criteria may specify that a particular percentage is matched.
- step 324 the webpage is rearranged. Thereafter, steps 306 - 322 may be repeated with the rearranged webpage. Steps 306 - 324 may be iteratively executed to repeatedly rearrange and reevaluate the webpage until the one or more quality criteria are satisfied at step 322 .
- processing of method 300 proceeds to step 326 to optionally generate a report. As described in relation to step 218 above, the report may include a ranked list of calls to action in the reorganized webpage.
- Rearranging the webpage at step 324 may be based upon the calls to action identified at step 312 and configured one or more goals.
- Rearranging the webpage can include, but is not limited to, changing the location, changing the size and/or shape, and/or changing the color, of one or more calls to action.
- the calls to action may be manipulated according to one or more rearranging rules.
- a configured rearranging rule may specify that the call to action identified by the user as the most important should have at least a particular size of whitespace area around it.
- Other rearranging rules may specify relative and/or absolute sizes for the most prominent calls to action.
- a person of skill in the art would understand that numerous other rules may be specified for rearranging calls to action in the webpage.
- FIG. 4 illustrates a flowchart of a method 400 (steps 402 - 404 ) for rearranging calls to action in a webpage, according to an embodiment.
- Method 400 can be used, for example, in performing step 324 of method 300 described above.
- one or more of the detected calls to action are selected to be rearranged.
- detected calls to action that have high scores in the current webpage but are not listed as a goal for the webpage, and detected calls to action that have low scores but are listed high in the goals are selected for rearranging.
- the webpage is reorganized by manipulating respective ones of the selected calls to action from step 402 .
- the rearrangement of the webpage may include changing the location of the particular calls to action in the webpage, and/or changing one or more of the color or size of the call to action.
- the selected calls to action can be reorganized and/or rearranged according to configured rules.
- the rearranging of the webpage can include, generating HTML corresponding to the reorganized webpage.
- This new webpage is subsequently rendered in a browser, captured as an image, and then subjected to processing to detect calls to action.
- the rearranging of the webpage is performed by modifying the image itself to move and/or alter the various calls to action in order to generate a new image, which is then evaluated for calls to action.
- that image and corresponding detected calls to action can be used to generate the HTML for the corresponding rearranged webpage.
- FIG. 5 illustrates a flowchart of a method 500 for determining the calls to action in a webpage, according to an embodiment.
- Method 500 can be used, for example, in performing steps 210 of method 200 and 310 of method 300 .
- Method 500 can be used to repeatedly perform the steps of applying one or more image filters to the image, and detecting features in the image in order to determine calls to action, until the number of detected calls to action are below a configured threshold.
- a filter is selected.
- filters can be selected based upon a predetermined sequence from a pool of available filters.
- Exemplary filters include converting the image to grayscale, increasing the brightness of the image, thresholding the image to change the color of respective pixels based on a comparison of the grayscale value of the pixel and a threshold, convolution filters for at least one of blurring, sharpening, embossing, edge detection, and the like.
- a black and white filter is selected.
- the selected filter is applied to the captured image.
- the captured image may be modified. Further processing of the webpage is based upon the captured image as modified by applying the filter.
- the selected black and white filter is applied to the captured image. After the application of the black and white filter, the image is stored in memory and/or persistent storage for further processing.
- Feature detection is performed upon the image.
- Feature detection may include, but is not limited to, detecting of edges, corners or interest points, and blobs.
- Exemplary feature detection techniques include corner-point detection and edge detection. Other feature detection techniques may be applied.
- the corner-point method of feature detection is applied to the image of the webpage.
- One or more filters, such as a black and white filter, may have already been applied to the image.
- the detected features may be used to determine elements which may be calls to action.
- a corner-point technique may detect one or more of the corners of a rectangular button.
- An element representing the button may be detected based upon the respective corner points detected around that element.
- Step 506 may result in the detection of one or more elements in the web page that may be calls to action.
- the detected elements or calls to action are scored.
- the scoring may include assigning a score to respective ones of the detected elements.
- the assigned score represents a measure of that element's likelihood as a call to action.
- the score assigned to each element may be based upon one or more criteria by which calls to action are determined. Scoring is further described below in relation to method 600 .
- the most prominent of the detected calls to action are determined.
- the prominence of a detected call to action may be based upon its score, as assigned at step 508 above. Determining the most prominent calls to action may include determining those detected calls to action that have a score above a particular threshold (e.g., threshold visual prominence score), and then ranking those calls to action in order of their respective scores. The element with the highest score may be considered as the element that has the highest likelihood to be a call to action.
- a particular threshold e.g., threshold visual prominence score
- the number of detected calls to action that are considered to be most prominent calls to action are compared to a threshold number of most prominent calls to action.
- the threshold number of most prominent calls to action may be configured or may be dynamically determined.
- Step 512 If, at step 512 , it is determined that the number of the detected most prominent calls to action exceeds the threshold number of most prominent calls to action, then processing of method 500 proceeds to step 502 .
- Steps 502 - 512 may be iteratively performed in order to apply one or more of the same or different image filters to the captured image, as modified by the image filters applied in the one or more previous iterations, until the detected number of most prominent calls to action is below the threshold number of most prominent calls to action.
- step 512 When, at step 512 , it is determined that the detected number of most prominent calls to action is no longer above the threshold number of most prominent calls to action, method 500 ends.
- FIG. 6 illustrates a flowchart of a method 600 (steps 602 - 612 ) for assigning scores to respective calls to action, according to an embodiment.
- Method 600 can be used, for example, in performing step 508 of method 500 described above.
- Steps 602 - 612 can be repeated for each detected element for which a score is to be assigned.
- a combined score is determined based upon several characteristics of calls to action. A person of skill in the art would understand, however, that a score can be determined based upon any one or more of the characteristics described below and/or one or more other characteristics.
- a detected feature is selected.
- the next detected feature may be selected according to any ordering of the detected features.
- a size of the detected feature is determined.
- the size of the detected feature may be represented by the area of the corresponding element (e.g., button, radio button, input box, etc.).
- the area may be represented as an absolute value based upon measuring unit or as a percentage or fraction of the total area of the browser display area.
- a distance from the center of the browser display area to the selected detected feature is determined. This distance is sometimes referred to as a measure of gravity corresponding to the detected feature.
- the whitespace around the selected detected feature is determined.
- the whitespace associated with the selected detected feature can be expressed as a measure of the size of the whitespace relative to the size of the selected detected feature.
- the size of the whitespace associated with the selected detected feature can also be expressed as an absolute value.
- a score is calculated for the detected feature based upon one or more of the size of the feature, distance from the center to the feature, and size of associated white space.
- the score may be based on a combination of the above characteristics, for example, a sum or a weighted sum.
- the weights may, for example, be configurable for each characteristic.
- step 612 it is determined whether there are any more detected features for which scores should be assigned.
- FIG. 7 illustrates a system 700 for determining and/or manipulating calls to action in a webpage, according to an embodiment.
- System 700 includes, a browser 702 , a webpage 704 , a webpage image 705 , a rendering module 706 , image capture module 708 , call to action processing module 710 , call to action quality configurations 734 , one or more image filters 752 , one or more image feature detectors 754 , and rearranging rules 756 .
- Call to action processing module 710 includes a filtering module 720 , an element evaluator 728 , a webpage evaluator 730 , a webpage reorganizer 732 , a configuration module 742 , and a reporter module 746 .
- Filtering module 720 includes a pre-filter 722 , a feature detector 724 , and a feature scorer 726 .
- Quality configurations include a quality metric 736 , and quality criteria 738 .
- System 700 may be implemented in a computer, such as the computer system 800 described below in relation to FIG. 8 .
- the rendering module 706 may render webpage 704 in browser 702 .
- Image capture module 708 captures the rendered webpage as an image 705 .
- Call to action quality configurations 734 may be configured to include quality criteria 738 .
- quality criteria include the goal for the webpage, for example, specified as a number of the most prominent calls to action.
- One or more image filters 752 include a black and white filter.
- One or more feature detectors 754 include a corner-point detector.
- Call to action processing module 710 operates to detect and manipulate calls to action.
- Filtering module 720 detects calls to action in webpage image 705 .
- pre-filter module 722 applies one or more filters 752 to the captured image 705 .
- Feature detector 724 operates to detect calls to action in the filtered image using a feature detector 754 such as, for example, a corner-point detector.
- Feature scorer 726 operates to assign scores to the detected most prominent calls to action in a webpage.
- Element evaluator 728 operates to determine the calls to action from the detected elements. For example, element evaluator 728 may determine which detected features are most prominent calls to action based upon a threshold visual prominence score 762 . Filtering module 720 may operate to iteratively apply pre-filter module 722 and feature detector 724 until the number of detected calls to action is less than or equal to a threshold number of most prominent calls to action 764 .
- Webpage evaluator 730 operates to determine a quality metric 736 for the webpage based upon the currently detected most prominent calls to action. The determined quality metric 736 may be compared to configured quality criteria 738 to determine whether the webpage needs to be further reorganized. Webpage reorganizer 732 operates to reorganize the webpage until quality criteria 738 is satisfied. Webpage reorganizer 732 may operate according to rearranging rules 756 . Rearranging rules 756 specify rules according to which webpage rearranging may be achieved. Rearranging rules 756 may include, for example, a rule specifying that the call to action specified as the goal should be rearranged with substantially increased associated whitespace.
- Reporter module 740 operates to generate a report 712 including information associated with the detected calls to action.
- report 712 includes a ranked list of the most prominent calls to action detected for the webpage.
- Configuration module 742 operates to provide for the manual and/or dynamic configuration of parameters including quality criteria 736 , threshold visual prominence score 762 , and threshold number of most prominent calls to action 764 .
- FIG. 8 illustrates a block diagram of a computer system 800 in which embodiments can be executed.
- Computer system 800 can include a server computer, personal computer, laptop computer, tablet computer, smartphone, cloud computer, cluster computer, and/or other computing device.
- Computer system 800 includes a processor 802 , a volatile memory 804 , a persistent storage 806 , an interconnection infrastructure 808 , an input interface 810 , a display 812 , and one or more network interfaces 814 .
- Processor 802 can be a processor, such as, but not limited to, a microprocessor, field programmable gate array (FPGA), or digital signal processor (DSP).
- Volatile memory 804 can include a random access memory (RAM) or like memory.
- Persistent memory 806 can include a persistent data storage medium such as a hard-disk or flash-memory storage device.
- Interconnection infrastructure 808 operates to communicatively couple modules of computer system 800 .
- interconnection infrastructure 808 comprises at least one communications bus.
- Network interface 814 operates to provide connectivity for local or remote networks (not shown) to computer system 800 .
- Network interface 814 may include Ethernet, WIFI, Bluetooth, Cellular Internet, or other connectivity.
Abstract
Description
Claims (15)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/407,648 US8850305B1 (en) | 2011-12-20 | 2012-02-28 | Automatic detection and manipulation of calls to action in web pages |
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US201161577925P | 2011-12-20 | 2011-12-20 | |
US13/407,648 US8850305B1 (en) | 2011-12-20 | 2012-02-28 | Automatic detection and manipulation of calls to action in web pages |
Publications (1)
Publication Number | Publication Date |
---|---|
US8850305B1 true US8850305B1 (en) | 2014-09-30 |
Family
ID=51588334
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/407,648 Expired - Fee Related US8850305B1 (en) | 2011-12-20 | 2012-02-28 | Automatic detection and manipulation of calls to action in web pages |
Country Status (1)
Country | Link |
---|---|
US (1) | US8850305B1 (en) |
Cited By (9)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20130031470A1 (en) * | 2011-07-29 | 2013-01-31 | Yahoo! Inc. | Method and system for personalizing web page layout |
US20140316778A1 (en) * | 2013-04-17 | 2014-10-23 | Honeywell International Inc. | Noise cancellation for voice activation |
CN105528802A (en) * | 2014-10-23 | 2016-04-27 | 优视科技有限公司 | Picture processing method and device |
US9400774B1 (en) * | 2011-01-12 | 2016-07-26 | Optimizely, Inc. | Multi-page website optimization |
US20170236166A1 (en) * | 2015-01-29 | 2017-08-17 | Roman Pavlovich Cheskidov | Online method of creating advertising pages on a website and managing the content of said pages |
US10078626B1 (en) * | 2012-11-27 | 2018-09-18 | Amazon Technologies, Inc. | Automated layout testing of content |
US10747942B1 (en) | 2011-01-12 | 2020-08-18 | Optimizely, Inc. | Systems and methods for website optimization |
US10963731B1 (en) | 2020-10-13 | 2021-03-30 | Fmr Llc | Automatic classification of error conditions in automated user interface testing |
US11269576B2 (en) | 2015-08-11 | 2022-03-08 | Optimizely, Inc. | Determining variations of content to provide to users in variation testing of content |
Citations (15)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5140650A (en) * | 1989-02-02 | 1992-08-18 | International Business Machines Corporation | Computer-implemented method for automatic extraction of data from printed forms |
US5689294A (en) * | 1995-01-03 | 1997-11-18 | Xerox Corporation | Method and apparatus for skipping white spaces in marking devices |
US5710639A (en) * | 1996-01-25 | 1998-01-20 | Kuznicki; William Joseph | Scan line compressed facsimile communication system |
US20020032677A1 (en) * | 2000-03-01 | 2002-03-14 | Jeff Morgenthaler | Methods for creating, editing, and updating searchable graphical database and databases of graphical images and information and displaying graphical images from a searchable graphical database or databases in a sequential or slide show format |
US6470094B1 (en) * | 2000-03-14 | 2002-10-22 | Intel Corporation | Generalized text localization in images |
US6633314B1 (en) * | 2000-02-02 | 2003-10-14 | Raja Tuli | Portable high speed internet device integrating cellular telephone and palm top computer |
WO2003098370A2 (en) * | 2002-05-20 | 2003-11-27 | Tata Infotech Ltd. | Document structure identifier |
US20060103667A1 (en) * | 2004-10-28 | 2006-05-18 | Universal-Ad. Ltd. | Method, system and computer readable code for automatic reize of product oriented advertisements |
US7162493B2 (en) * | 2000-02-23 | 2007-01-09 | Penta Trading Ltd. | Systems and methods for generating and providing previews of electronic files such as web files |
US20080082426A1 (en) * | 2005-05-09 | 2008-04-03 | Gokturk Salih B | System and method for enabling image recognition and searching of remote content on display |
US20080168085A1 (en) * | 2005-03-10 | 2008-07-10 | Nhn Corporation | Method and System for Capturing Image of Web Site, Managing Information of Web Site, and Providing Image of Web Site |
US7496832B2 (en) * | 2005-01-13 | 2009-02-24 | International Business Machines Corporation | Web page rendering based on object matching |
US7657100B2 (en) * | 2005-05-09 | 2010-02-02 | Like.Com | System and method for enabling image recognition and searching of images |
US20100079374A1 (en) * | 2005-06-30 | 2010-04-01 | Koninklijke Philips Electronics, N.V. | Method of controlling a system |
US20100329578A1 (en) * | 2006-01-31 | 2010-12-30 | Sony Corporation | Image processing apparatus |
-
2012
- 2012-02-28 US US13/407,648 patent/US8850305B1/en not_active Expired - Fee Related
Patent Citations (15)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5140650A (en) * | 1989-02-02 | 1992-08-18 | International Business Machines Corporation | Computer-implemented method for automatic extraction of data from printed forms |
US5689294A (en) * | 1995-01-03 | 1997-11-18 | Xerox Corporation | Method and apparatus for skipping white spaces in marking devices |
US5710639A (en) * | 1996-01-25 | 1998-01-20 | Kuznicki; William Joseph | Scan line compressed facsimile communication system |
US6633314B1 (en) * | 2000-02-02 | 2003-10-14 | Raja Tuli | Portable high speed internet device integrating cellular telephone and palm top computer |
US7162493B2 (en) * | 2000-02-23 | 2007-01-09 | Penta Trading Ltd. | Systems and methods for generating and providing previews of electronic files such as web files |
US20020032677A1 (en) * | 2000-03-01 | 2002-03-14 | Jeff Morgenthaler | Methods for creating, editing, and updating searchable graphical database and databases of graphical images and information and displaying graphical images from a searchable graphical database or databases in a sequential or slide show format |
US6470094B1 (en) * | 2000-03-14 | 2002-10-22 | Intel Corporation | Generalized text localization in images |
WO2003098370A2 (en) * | 2002-05-20 | 2003-11-27 | Tata Infotech Ltd. | Document structure identifier |
US20060103667A1 (en) * | 2004-10-28 | 2006-05-18 | Universal-Ad. Ltd. | Method, system and computer readable code for automatic reize of product oriented advertisements |
US7496832B2 (en) * | 2005-01-13 | 2009-02-24 | International Business Machines Corporation | Web page rendering based on object matching |
US20080168085A1 (en) * | 2005-03-10 | 2008-07-10 | Nhn Corporation | Method and System for Capturing Image of Web Site, Managing Information of Web Site, and Providing Image of Web Site |
US20080082426A1 (en) * | 2005-05-09 | 2008-04-03 | Gokturk Salih B | System and method for enabling image recognition and searching of remote content on display |
US7657100B2 (en) * | 2005-05-09 | 2010-02-02 | Like.Com | System and method for enabling image recognition and searching of images |
US20100079374A1 (en) * | 2005-06-30 | 2010-04-01 | Koninklijke Philips Electronics, N.V. | Method of controlling a system |
US20100329578A1 (en) * | 2006-01-31 | 2010-12-30 | Sony Corporation | Image processing apparatus |
Cited By (13)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9842092B1 (en) | 2011-01-12 | 2017-12-12 | Optimizely, Inc. | Multi-page website optimization |
US9400774B1 (en) * | 2011-01-12 | 2016-07-26 | Optimizely, Inc. | Multi-page website optimization |
US10747942B1 (en) | 2011-01-12 | 2020-08-18 | Optimizely, Inc. | Systems and methods for website optimization |
US10902196B1 (en) | 2011-01-12 | 2021-01-26 | Optimizely, Inc. | Systems and methods for website optimization |
US20130031470A1 (en) * | 2011-07-29 | 2013-01-31 | Yahoo! Inc. | Method and system for personalizing web page layout |
US10061860B2 (en) * | 2011-07-29 | 2018-08-28 | Oath Inc. | Method and system for personalizing web page layout |
US10078626B1 (en) * | 2012-11-27 | 2018-09-18 | Amazon Technologies, Inc. | Automated layout testing of content |
US20140316778A1 (en) * | 2013-04-17 | 2014-10-23 | Honeywell International Inc. | Noise cancellation for voice activation |
US9552825B2 (en) * | 2013-04-17 | 2017-01-24 | Honeywell International Inc. | Noise cancellation for voice activation |
CN105528802A (en) * | 2014-10-23 | 2016-04-27 | 优视科技有限公司 | Picture processing method and device |
US20170236166A1 (en) * | 2015-01-29 | 2017-08-17 | Roman Pavlovich Cheskidov | Online method of creating advertising pages on a website and managing the content of said pages |
US11269576B2 (en) | 2015-08-11 | 2022-03-08 | Optimizely, Inc. | Determining variations of content to provide to users in variation testing of content |
US10963731B1 (en) | 2020-10-13 | 2021-03-30 | Fmr Llc | Automatic classification of error conditions in automated user interface testing |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US8850305B1 (en) | Automatic detection and manipulation of calls to action in web pages | |
US20220116347A1 (en) | Location resolution of social media posts | |
US11405344B2 (en) | Social media influence of geographic locations | |
US8988450B1 (en) | Color palette maps for color-aware search | |
US10558679B2 (en) | Systems and methods for presenting a topic-centric visualization of collaboration data | |
CN108694223B (en) | User portrait database construction method and device | |
US20170357913A1 (en) | Automated customized web portal template generation systems and methods | |
CN108205674B (en) | Social APP content identification method, electronic device, storage medium and system | |
CN107690657A (en) | Trade company is found according to image | |
US9720912B2 (en) | Document management system, document management method, and document management program | |
US20130145255A1 (en) | Systems and methods for filtering web page contents | |
US20120005573A1 (en) | Automatically adjusting a webpage | |
US10007680B2 (en) | Content collection search with robust content matching | |
WO2020060632A1 (en) | Converting an image into a structured table | |
CN103577593A (en) | Method and system for video aggregation based on microblog hot topics | |
CN109962975A (en) | Information-pushing method, device, electronic equipment and system based on object identification | |
KR20170073693A (en) | Extracting similar group elements | |
US8346799B1 (en) | Recent content rank adjustment with inverted decay | |
Ilakkuvan et al. | Cameras for public health surveillance: a methods protocol for crowdsourced annotation of point-of-sale photographs | |
CN104615639B (en) | A kind of method and apparatus for providing the presentation information of picture | |
CN103617262B (en) | Picture content attribute identification method and system | |
CN108121741B (en) | Website quality evaluation method and device | |
KR20160091756A (en) | Relative quality index estimation apparatus of the web page using keyword search | |
CN103617261B (en) | Picture content attribute identification method and system | |
JP6838167B2 (en) | Web page main image recognition method and device |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:KENT, JAMES;REEL/FRAME:027778/0916Effective date: 20120227 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044277/0001Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551)Year of fee payment: 4 |
|
FEPP | Fee payment procedure |
Free format text: MAINTENANCE FEE REMINDER MAILED (ORIGINAL EVENT CODE: REM.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
LAPS | Lapse for failure to pay maintenance fees |
Free format text: PATENT EXPIRED FOR FAILURE TO PAY MAINTENANCE FEES (ORIGINAL EVENT CODE: EXP.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
STCH | Information on status: patent discontinuation |
Free format text: PATENT EXPIRED DUE TO NONPAYMENT OF MAINTENANCE FEES UNDER 37 CFR 1.362 |
|
FP | Lapsed due to failure to pay maintenance fee |
Effective date: 20220930 |
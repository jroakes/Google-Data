CN114761948A - Privacy preserving machine learning prediction - Google Patents
Privacy preserving machine learning prediction Download PDFInfo
- Publication number
- CN114761948A CN114761948A CN202080026134.4A CN202080026134A CN114761948A CN 114761948 A CN114761948 A CN 114761948A CN 202080026134 A CN202080026134 A CN 202080026134A CN 114761948 A CN114761948 A CN 114761948A
- Authority
- CN
- China
- Prior art keywords
- user
- client device
- group identifier
- assigned
- temporary group
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Pending
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F17/00—Digital computing or data processing equipment or methods, specially adapted for specific functions
- G06F17/10—Complex mathematical operations
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N5/00—Computing arrangements using knowledge-based models
- G06N5/02—Knowledge representation; Symbolic representation
- G06N5/022—Knowledge engineering; Knowledge acquisition
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/953—Querying, e.g. by the use of web search engines
- G06F16/9535—Search customisation based on user profiles and personalisation
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/953—Querying, e.g. by the use of web search engines
- G06F16/9537—Spatial or temporal dependent retrieval, e.g. spatiotemporal queries
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N20/00—Machine learning
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q30/00—Commerce
- G06Q30/02—Marketing; Price estimation or determination; Fundraising
- G06Q30/0241—Advertisements
- G06Q30/0251—Targeted advertisements
- G06Q30/0269—Targeted advertisements based on user profile or attribute
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q30/00—Commerce
- G06Q30/06—Buying, selling or leasing transactions
- G06Q30/0601—Electronic shopping [e-shopping]
Abstract
Methods, systems, and apparatus, including computer programs encoded on a computer storage medium, for providing digital components to a client device. The method can include assigning a temporary group identifier to the client device based on a current user activity period on the client device, the identifier identifying a particular group from a plurality of different groups that includes the client device. A training set is generated for training a machine learning model that generates user characteristics. A request for a digital component is received from a client device, the request including a temporary group identifier currently assigned to the client device, a subset of the active features, and one or more additional features based on the client device. The machine learning model generates one or more user characteristics based on which one or more digital components are selected and sent to the client device.
Description
Background
This specification relates to data processing and machine learning models.
A client device can use an application (e.g., a web browser, a native application) to access a content platform (e.g., a search platform, a social media platform, or another platform that hosts content). The content platform is capable of displaying digital components (discrete units of digital content or digital information, such as video clips, audio clips, multimedia clips, images, text, or another unit of content) that may be provided by one or more content sources/platforms within an application launched on the client device.
Disclosure of Invention
In general, one innovative aspect of the subject matter described in this specification can be embodied in methods that include the following operations, including: assigning a temporary group identifier to the client device based on a current user activity period on the client device, the temporary group identifier identifying a particular group from a plurality of different groups that includes the client device; generating a training set for a model to be trained, the training set comprising (i) a temporary group identifier assigned to a client device based on a current period of user activity at the client device, (ii) a group feature set of a user to whom the temporary group identifier has been assigned, and (iii) an activity feature set of user activity performed by the user to whom the temporary group identifier has been assigned, wherein the temporary group identifier identifies a particular group comprising the client device from a plurality of different groups; training the model using a training set; receiving a request for a digital component from a given client device, the request including at least: (i) a temporary group identifier currently assigned to a given client device, (ii) a subset of the set of active features, and (iii) one or more additional features, wherein the one or more additional features are based on the client device; generating one or more user characteristics not included in the request by applying the trained model to (i) the temporary group identifier and (ii) the subset of activity features included in the request; selecting one or more digital components based on the one or more user characteristics generated by the trained model; and transmitting the selected one or more digital components to the client device.
Other implementations of this aspect include corresponding apparatus, systems, and computer programs configured to perform aspects of the methods encoded on computer storage devices. These and other implementations can optionally include one or more of the following features.
In some aspects, the group feature set comprises: (i) a plurality of Uniform Resource Locators (URLs), including a plurality of URLs visited by users that have been assigned a temporary group identifier, (ii) a representation of a plurality of URLs visited by users that have been assigned a temporary group identifier. In some aspects, the group feature set may further comprise: (i) a count and/or proportion of URLs visited by users who have been assigned a temporary group identifier, (ii) patterns in digital content presented at URLs visited by users who have been assigned a temporary group identifier.
In some aspects, the group feature set includes one or more aggregated user group demographics that collectively characterize the users in the particular group corresponding to the temporary group identifier, and do not characterize any individual user in the particular group. In some aspects, the group feature set includes an aggregated context prediction, wherein the aggregated context prediction is based on a predicted output of digital content accessed by users that have been assigned a temporary group identifier.
In some aspects, each sample of the training set includes at least: (i) an anonymous identifier of the user that has been assigned the temporary group identifier, (ii) a URL visited by the user when the user was assigned the temporary group identifier.
In some aspects, the set of active features includes: (i) a geographic identifier specifying a source of the request for the digital component, (ii) a time at which the source of the request for the digital component was submitted.
Particular embodiments of the subject matter described in this specification can be implemented to realize one or more of the following advantages. Demographic information about the user is important for providing the user with a personalized online experience, for example, by providing specific digital components related to the user. Typically, the data used to provide the personalized online experience is aggregated using third party cookies (e.g., cookies belonging to a domain different from the domain the client device is accessing), thereby allowing linked browsing activities and other behaviors and/or identifying user tracking data across time, session, and device. However, increasing web traffic does not allow for the use of third-party cookies, perhaps due to privacy preferences of users, lack of browser support for third-party cookies, or due to other degradations, thereby eliminating the possibility of using third-party cookies to aggregate data from multiple different sources. To address the problem of aggregating data from multiple different sources without using third-party cookies (or third-party cookies not available), machine learning models can be trained to predict information aggregated from multiple different sources using third-party cookies. As discussed in detail in this document, the machine learning model can be trained in a manner that increases user privacy relative to the use of third-party cookies. Thus, the use of machine learning models can provide improvements relating to data access and provide a solution to the data aggregation problem caused by browsers blocking third party cookies. Implementing these methods requires training a machine learning model on a data set acquired from a real-world user. The machine learning model is able to learn complex patterns of the training data set, thereby reducing prediction errors with respect to user characteristics. Such an implementation allows delivery of carefully selected digital components based on predicted user characteristics (e.g., demographic information), thereby improving the user experience while maintaining user privacy.
The details of one or more embodiments of the subject matter described in this specification are set forth in the accompanying drawings and the description below. Other features, aspects, and advantages of the subject matter will become apparent from the description, the drawings, and the claims.
Drawings
FIG. 1 is a block diagram of an example environment in which digital components are distributed.
FIG. 2 is a block diagram of an example machine learning model implemented by a user evaluation device.
FIG. 3 is a flow diagram of an example process for distributing digital components using a machine learning model.
FIG. 4 is a block diagram of an example computer system that can be used to perform the described operations.
Detailed Description
This document discloses methods, systems, apparatuses, and computer-readable media that implement machine learning models that are capable of predicting information collected using third-party cookies, without using third-party cookies, while maintaining user privacy. In some cases, the output of the machine learning model can be used to select and distribute digital components to users, thereby providing a personalized online experience.
Typically, a user connected to the internet via a client device can be provided with a digital component. In such a case, the digital component provider may wish to provide the digital components based on data aggregated from a number of different sources, such as the user's online activity and the user's browsing history. However, more and more user selections do not allow for aggregating certain information that was previously collected and used, and some browsers are blocking third party cookies, so digital component selections must be performed without using third party cookies (e.g., cookies from a domain different from the domain of the web page currently viewed by the user). Therefore, there is a need for a solution to aggregate data to enable use in providing a personalized online experience when third party cookies are not available.
New technologies have emerged to distribute digital components to users by assigning them to groups of users when they access or perform specific operations on a resource (e.g., interacting with a specific item displayed on a web page or adding an item to a virtual shopping cart). These user groups are typically created in such a way as to ensure that each user group includes a sufficient number of users, such that no single user can be identified. User characteristics, such as demographic information about the user, remain important for providing a personalized online experience for the user, for example, by providing specific digital components related to the user. However, personalization of content can be difficult due to the unavailability of such information. Therefore, a solution is needed to predict such user information and/or characteristics. These techniques and methods are further explained with reference to fig. 1-4.
FIG. 1 is a block diagram of an example environment 100 in which digital components are distributed for presentation with an electronic document. The example environment 100 includes a network 102, such as a Local Area Network (LAN), a Wide Area Network (WAN), or a combination thereof. Network 102 connects content server 104, client devices 106, digital component server 108, and digital component distribution system 110 (also referred to as a Component Distribution System (CDS)).
The client device 106 is an electronic device capable of requesting and receiving resources over the network 102. Example client devices 106 include personal computers, mobile communication devices, wearable devices, personal digital assistants, and other devices capable of sending and receiving data over the network 102. The client device 106 typically includes a user application 112, such as a web browser, to facilitate sending and receiving data over the network 102, although a native application executed by the client device 106 can also facilitate sending and receiving data over the network 102. The client device 106, and in particular the personal digital assistant, can include hardware and/or software that enables voice interaction with the client device 106. For example, the client device 106 can include a microphone through which a user can submit audio (e.g., voice) input, such as commands, search queries, browsing instructions, smart home instructions, and/or other information. Further, the client device 106 can include a speaker through which audio (e.g., voice) output can be provided to a user. The personal digital assistant can be implemented in any client device 106, examples including a wearable device, smart speaker, home appliance, automobile, tablet device, or other client device 106.
An electronic document is data that presents a set of content at a client device 106. Examples of electronic documents include web pages, word processing documents, Portable Document Format (PDF) documents, images, videos, search result pages, and feed sources. Native applications (e.g., "apps"), such as applications installed on mobile, tablet, or desktop computing devices, are also examples of electronic documents. The electronic document can be provided by the content server 104 to the client device 106. For example, the content server 104 can include a server hosting a publisher's website. In this example, the client device 106 can initiate a request for a given publisher web page, and the content server 104 hosting the given publisher web page can respond to the request by sending machine-executable instructions that initiate rendering of the given web page at the client device 106.
In another example, the content server 104 can include an application server from which the client device 106 can download applications. In this example, the client device 106 is able to download files needed to install the application on the client device 106 and then execute the downloaded application locally. The downloaded application can be configured to present a combination of local content that is part of the application itself, as well as one or more digital components (e.g., content created/distributed by a third party) obtained from the digital component server 108 and inserted into the application when the application is executed at the client device 106.
The electronic document can include a variety of content. For example, the electronic document can include static content (e.g., text or other specified content) that is within the electronic document itself and/or does not change over time. Electronic documents can also include dynamic content that may change over time or upon request. For example, a publisher of a given electronic document can maintain a data source for populating portions of the electronic document. In this example, the given electronic document can include a tag or script such that the client device 106 requests content from the data source when the given electronic document is processed (e.g., rendered or executed) by the client device 106. The client device 106 integrates the content obtained from the data source into a given electronic document to create a composite electronic document that includes the content obtained from the data source.
In some cases, a given electronic document can include a digital component label or digital component script that references the digital component distribution system 110. In these cases, the client device 106 executes the digital component tag or digital component script when a given electronic document is processed by the client device 106. Execution of the digital component tag or digital component script configures the client device 106 to generate a request for a digital component 112 (referred to as a "component request") that is sent over the network 102 to the digital component distribution system 110. For example, a digital component tag or digital component script can cause the client device 106 to generate a packet data request that includes a header and payload data. The digital component request 112 can include event data specifying characteristics, such as the name (or network location) of the server from which media is being requested, the name (or network location) of the requesting device (e.g., client device 106), and/or information that the digital component distribution system 110 can use to select one or more digital components to provide in response to the request. The component request 112 is sent by the client device 106 to a server of the digital component distribution system 110 over the network 102 (e.g., a telecommunications network).
The digital component request 112 can include event data specifying other event characteristics, such as location characteristics of the requested electronic document and the electronic document that can render the digital component. For example, event data specifying a reference (e.g., a Uniform Resource Locator (URL)) to an electronic document (e.g., a web page or application) in which the digital component is to be rendered, available locations of the electronic document that are available for rendering the digital content, sizes of the available locations, and/or media types that are eligible for rendering in those locations can be provided to the digital component distribution system 110. Similarly, event data specifying keywords associated with the electronic document ("document keywords") or entities referenced by the electronic document (e.g., people, places, or things) can also be included in component request 112 (e.g., as payload data) and provided to digital component distribution system 110 to facilitate identification of digital components that are eligible for presentation with the electronic file. The event data can also include search queries submitted from the client device 106 to obtain a search results page and/or data specifying search results and/or text, sound, or other visual content included in the search results.
The component request 112 can also include event data related to other information, such as information that a user of the client device has provided, geographic information indicating the state or area from which the component request was submitted, or other information that provides context of the environment in which the digital component is to be displayed (e.g., a time of day of the component request, a day of the week of the component request, a type of device that is to display the digital component, such as a mobile device or tablet device). The component request 112 can be transmitted over a packet network, for example, and the component request 112 itself can be formatted as packet data having a header and payload data. The header can specify the destination of the packet and the payload data can include any of the information discussed above.
A digital component distribution system 110, which includes one or more digital component distribution servers, selects a digital component to be presented with a given electronic document in response to receiving a component request 112 and/or using information included in the component request 112. In some implementations, the digital components are selected in less than one second to avoid errors that may result from delayed selection of the digital components. For example, the delay in providing the digital component in response to the component request 112 may result in a page load error at the client device 106 or leave portions of the electronic document unfilled even after other portions of the electronic document are presented on the client device 106. Furthermore, as the latency of providing digital components to the client device 106 increases, it is more likely that the electronic document will no longer be presented at the client device 106 when the digital components are transferred to the client device 106, thereby negatively impacting the user's experience of using the electronic document and wasting system bandwidth and other resources. Furthermore, delays in providing the digital component may result in a delivery failure of the digital component, for example, if the electronic document is no longer presented on the client device 106 at the time the digital component is provided.
To facilitate searching of electronic documents, the environment 100 can include a search system 150 that identifies electronic documents by crawling and indexing the electronic documents (e.g., indexing based on the crawled content of the electronic documents). Data about the electronic document can be indexed based on the electronic document associated with the data. The index of electronic documents and optionally cached copies are stored in a search index 152 (e.g., a hardware storage device). The data associated with the electronic document is data representing content included in the electronic document and/or metadata of the electronic document.
The client device 106 can submit a search query to the search system 150 over the network 102. In response, the search system 150 accesses the search index 152 to identify electronic documents that are relevant to the search query. The search system 150 identifies the electronic document in the form of search results and returns the search results to the client device 106 in a search results page. The search results are data generated by the search system 150 that identifies electronic documents that are responsive (e.g., relevant) to a particular search query and that includes an active link (e.g., a hypertext link) that causes the client device to request the data from a specified location in response to user interaction with the search results. Example search results can include a web page title, a portion of a text snippet or image extracted from the web page, and a URL of the web page. Another example search result can include a title of the downloadable application, a text snippet describing the downloadable application, an image describing a user interface of the downloadable application, and/or a URL pointing to a location where the application may be downloaded to client device 106. Another example search result can include a title of the streaming media, a text segment describing the streaming media, an image describing the content of the streaming media, and/or a URL pointing to a location where the streaming media can be downloaded to the client device 106. As with other electronic documents, the search results page can include one or more slots in which digital components (e.g., advertisements, video clips, audio clips, images, or other digital components) can be displayed.
In some implementations, the digital component distribution system 110 is implemented in a distributed computing system including, for example, a server and a collection of multiple computing devices 114 that interconnect and identify and distribute digital components in response to component requests 112. The collection of multiple computing devices 114 operate together to identify a collection of digital components from a corpus of millions of available digital components that qualify for presentation in an electronic document.
In some implementations, the digital component distribution system 110 implements different techniques for selecting and distributing digital components. For example, the digital components can include corresponding distribution parameters that facilitate (e.g., conditional or restrictive) selection/distribution/transmission of the corresponding digital components. For example, the distribution parameters can facilitate transmission of the digital component by requiring the component request to include at least one criterion that matches (e.g., exactly matches or has some pre-specified level of similarity) one of the distribution parameters of the digital component.
In another example, the distribution parameters for a particular digital component can include distribution keywords that must be matched (e.g., by electronic document, document keyword, or term specified in the component request 112) in order for the digital component to qualify for presentation. The distribution parameters can also require that the component request 112 include information specifying a particular geographic region (e.g., country or state) and/or information specifying that the component request 112 originates from a particular type of client device 106 (e.g., mobile device or tablet device) to qualify the component item for presentation. The distribution parameters can also specify qualifying qualification values (e.g., ratings, scores, or some other specified values) for evaluating component items for selection/distribution/transmission (e.g., among other available digital components), as discussed in more detail below. In some cases, the eligibility value can be an amount that will be submitted when a particular event is attributed to a digital component item (e.g., a presentation of a digital component).
The identification of qualified digital components can be segmented into a plurality of tasks 117a-117c, which are then distributed among the computing devices within the set of multiple computing devices 114. For example, different computing devices in the collection 114 can each analyze different digital components to identify various digital components having distribution parameters that match the information included in the component request 112. In some implementations, each given computing device 114 in the set can analyze a different data dimension (or set of dimensions) and communicate (e.g., send) the results of the analysis (Res1-Res 3)118a-118c back to the digital component distribution system 110. For example, the results 118a-118c provided by each computing device 114 in the set can identify a subset of digital component items that are eligible for distribution in response to the component request and/or a subset of digital components having particular distribution parameters. The identification of the subset of digital components can include, for example, comparing the event data to distribution parameters and identifying the subset of digital components having distribution parameters that match at least some characteristics of the event data.
The digital component distribution system 110 aggregates the results 118a-118c received from the set of multiple computing devices 114 and uses information associated with the aggregated results to select one or more digital components to be provided in response to the component request 112. For example, the digital component distribution system 110 can select a set of winning digital components (one or more digital components) based on the results of the one or more digital component evaluation processes. In turn, the digital component distribution system 110 can generate and transmit answer data 120 (e.g., digital data representing an answer) over the network 102, and the client device 106 can integrate the set of winning digital components into a given electronic document such that the set of winning digital components is presented on a display of the client device 106 along with the content of the electronic document.
In some implementations, the client device 106 executes instructions included in the response data 120 that configure and enable the client device 106 to obtain a set of winning digital components from one or more digital component servers 108. For example, the instructions in the response data 120 can include a network location (e.g., URL) and a script such that the client device 106 sends a Server Request (SR)121 to the digital component server 108 to obtain a given winning digital component from the digital component server 108. In response to the server request 121, the digital component server 108 will identify a given winning digital component specified in the server request 121 and send digital component data 122(DI data) to the client device 106 that presents the given winning digital component in an electronic document at the client device 106.
In some cases, the distribution parameters distributed by the digital component can include user characteristics, such as demographic information, user interests, and/or other information that can be used to personalize the user's online experience. In some cases, such characteristics and/or information about the user of the client device 106 are readily available. For example, a content platform such as the content server 104 or the search system 150 may allow a user to register with the content platform by providing such user information. In another example, the content platform can use cookies to identify the client device, and can store information about the user's online activity and/or user characteristics. Historically, third party cookies have been used to provide user features to the digital component distribution system 110 regardless of which domain the user is visiting. However, these and other methods of identifying user characteristics are becoming less popular in order to preserve user privacy. For example, the browser has been redesigned to proactively prevent the use of third party cookies, thereby preventing the digital component distribution system 110 from accessing user characteristics unless the user is accessing a resource in the same domain as the digital component distribution system 110.
To protect user privacy while still being able to determine certain characteristics of the user, the user can be assigned to groups of users based on the digital content accessed by the user during a single browsing session. For example, when a user visits a particular website and interacts with a particular item presented on the website or adds an item to a virtual shopping cart, the user can be assigned to a group of users who visit the same website or other websites that are contextually similar or interested in the same item. To illustrate, if a user of a client device 106 searches for shoes and accesses multiple web pages of different shoe manufacturers, the user can be assigned to a user group of "shoes," which can include identifiers of all users who have accessed a website associated with the shoes. Thus, the user group can represent the interests of the users as a whole without identifying individual users, nor allowing any individual user to be identified. For example, a user group can be identified by a user group identifier for each user in the group. For example, if a user adds shoes to a shopping cart of an online retailer, the user can be added to a group of shoes users having a particular identifier for each user in the group. When a content request is submitted by the device of any user in the group of users, the same specific identifier can be submitted so that each user in the group submits the same specific identifier.
In some implementations, the user's group members can be maintained at the user's client device 106, for example, through a browser-based application, rather than through a digital component provider or content platform or another party. The user group can be specified by a corresponding user group identifier. The user group identifier of the user group can be a description of the group (e.g. a gardening group) or a code representing the group (e.g. a non-descriptive alphanumeric sequence).
In some implementations, the assignment of users to groups of users is a temporary assignment, as the group members of the user can change according to the user's browsing activity. For example, when a user initiates a web browsing session and visits a particular website and interacts with a particular item presented on the website or adds an item to a virtual shopping cart, the user can be assigned to a group of users who visited the same website or other websites that are contextually similar or interested in the same item. However, if a user visits another website and interacts with another type of item presented on another website, the user is assigned to another group of users who visited the other website or other websites that are contextually similar or interested in another item. For example, if a user initiates a browsing session by searching for shoes and visiting multiple web pages of different shoe manufacturers, the user can be assigned to a group of users "shoes," including all users who visited a website associated with the shoes. Assume that 100 users have previously visited a website associated with a shoe. When a user is assigned to the user group "shoes", the total number of users included in the user group is increased to 101. However, if a user searches for hotels and visits multiple web pages for different hotels or travel agencies, the user can delete from the previously assigned user group "shoes" and reassign to a different user group "hotels" or "travel". In this case, the number of users in the user group "shoes" is reduced back to 100 because no other users are added or deleted from the particular user group.
Due to the temporality of the user group assignment, the user group is sometimes referred to as a temporary user group, and the corresponding user group identifier is referred to as a temporary group identifier.
In some implementations, there can be one or more groups of users that are similar in context but differ in one or more characteristics. For example, two users based on respective browsing activities can be assigned user groups "travel-location 1" and "travel-location 2", respectively, where the two user groups are contextually similar, indicating that both users may have an intent to travel, but the destinations are different.
In some implementations, the number and type of user groups is managed and/or controlled by the system (or administrator). For example, the system may implement algorithms and/or machine learning methods to supervise the management of user groups. Typically, the number of user groups and the number of users in each user group varies over time, as the user traffic participating in an active browser session varies over time, and as each individual user is responsible for its respective browsing activity. The application mode of the method can provide provable guarantee for privacy or unidentifiable property of individuals in each user group.
In the event that user characteristics are not available, for example because third party cookies are blocked, the digital component distribution system 110 can include a user evaluation device 170 that predicts information that can be aggregated using third party cookies, such as user characteristics, based on the available information. In some implementations, the user evaluation device 170 implements one or more machine learning models that predict one or more user characteristics based on information (e.g., group identifiers) included in the component request 112.
For example, if a user of the client device 106 loads a website that includes one or more digital component slots using the browser-based application 107, the browser-based application 107 can generate and send a component request 112 for each of the one or more digital component slots. The component request 112 includes a user group identifier corresponding to the user group that includes the identifier of the client device 106, other information (also referred to as additional information) such as geographic information indicating the status or area from which the component request 112 was submitted, or other information that provides context for the environment in which the digital component 112 is to be displayed (e.g., the time of day of the component request, the day of the week of the component request, the type of client device 106 in which the digital component is to be displayed, such as a mobile device or tablet device). Some of this information is obtained from the settings of the client device 106, such as the language settings, time zone settings, client MAC address, etc., included in the component request 112. Other information can be derived from other information included in the component request 112 (e.g., an IP address), which can be used to infer the geographic region of the client device 106.
In some implementations, the component request 112 can also include information about the user and/or browsing activities of similar users within the user's assigned group (also referred to as activity characteristics). For example, a list of URLs visited by the user using the client device 106 or a subset of the list of URLs visited by the user most frequently in a particular browsing session.
The digital component distribution system 110, upon receiving the component request 112, provides the information included in the component request 112 as input to the machine learning model. The machine learning model, after processing the input, generates an output that includes a prediction of one or more user characteristics not included in the component request 112. These one or more user characteristics, as well as other information included in the component request 112, may be used to retrieve the digital component from the digital component server 108. Generating the prediction output of the user characteristic is further described with reference to FIG. 2.
Fig. 2 is a block diagram of an example machine learning model implemented within user evaluation device 170. In general, a machine learning model can be any technique deemed suitable for a particular implementation, such as an Artificial Neural Network (ANN), a Support Vector Machine (SVM), a Random Forest (RF), and so forth, including a plurality of trainable parameters. During the training process, a plurality of training parameters are adjusted while iterating through a plurality of samples of the training data set (a process referred to as optimization) according to the error generated by the loss function. The loss function compares the predicted values of the machine learning model with the true values of the samples in the training set to generate a measure of prediction error.
In some implementations, the user evaluation device 170 can implement multiple machine learning models (e.g., a first model 250 and a second model 260) such that the first model 250 predicts user characteristics (e.g., user demographics, user interests, or some other characteristic), and the second model 260 provides a data representation for input to the first model 250 by processing information related to a group of users.
The first model 250 may include a plurality of sub-machine learning models (also referred to as "sub-models") such that each sub-model predicts a particular user characteristic (e.g., a user demographic, a user interest, or some other characteristic). For example, the first model 250 includes three sub-models: (i) a property 1 model 220, (ii) a property 2 model 230, and (iii) a property 3 model 240. Each of these sub-models predicts the likelihood that a user has different characteristics (e.g., demographic characteristics or user interests). Other implementations may include more or fewer individual submodels to predict the number of user characteristics defined by the system (or administrator). In practice, the sub-models and the second model 260 of the user evaluation device 170 aggregate input data such as the user group ID 202, the additional features 204, the activity features 206, and the group features 210 to form user characteristics.
The machine learning model can accept as input the information included in the component request 112. As described above, the component request 112 can include a user group identifier corresponding to the user group that includes the client device 106, as well as various signals derived from the group identifier, such as average characteristics or aggregate behavior statistics of users within the group and/or other information (also referred to as additional features), such as geographic information indicating the state or region from which the component request 112 was submitted, or other information that provides context of the environment in which the digital component 112 is to be displayed (e.g., a time of day of the component request, a day of the week of the component request, a type of client device 106 that is to display the digital component, such as a mobile device or tablet device). For example, the input 205 includes information included in the component request 112, namely a User Group identifier (User Group ID)202 and a set of additional features 204.
In some implementations, the machine learning model (and/or submodel) implemented within the user evaluation device 170 can accept activity features 206 that are relevant to the user's current online activity. The activity features 206 can include a list of websites previously visited by the user in the current session, previous interactions with digital components presented in the previously visited websites. For example, a list of URLs that link to websites visited by the user of the client device 106. Depending on the particular implementation, the set of activity features 206 can be maintained by a content provider (or digital component provider) or can be provided by the client device 106 by including the set of activity features 206 within the component request 112.
In some implementations, the activity features 206 may include features based on websites visited by the user. In one scenario, websites can be individually divided into categories based on the content of the websites. For example, each website can be divided into categories such as "sports," "news," "e-commerce," and so on. In such an implementation, the website categories that link to the URLs in the URL list can be provided as input to the machine learning model (or sub-model). In another scenario, a website can be assigned one or more tags based on the content of the website. For example, the content of a website can be analyzed using topic modeling techniques and tags added accordingly. In such an implementation, the tags associated with the websites linked to the URLs in the URL list can be provided as input to the machine learning model (or sub-model). In another scenario, websites can be clustered together based on one or more attributes (e.g., tags, topics, keywords associated with each website) such that each website has an associated weight representing the strength of belonging to one or more clusters. These weights can be provided as inputs to a machine learning model (or submodel).
The machine learning model (or submodel) implemented within the user evaluation apparatus 170 is capable of accepting features related to user groups of which the user of the client device 106 is a member. The user evaluation device 170 uses the set of group characteristics 210 as input. In some implementations, the group characteristics 210 can be maintained by a content provider (or digital component provider). For example, the digital component provider and/or the server 108 can periodically maintain and update a plurality of characteristics (also referred to as parameters) of the all-user group based on all active users in the all-user group and previous predictions of users in the all-user group. The set of group characteristics 210 can include information such as the number of users in the group, an aggregation of user demographics in the group of users, an average prediction of user characteristics for the group of users, a list of websites (or URLs) frequently visited by users of the group of users, a similarity of digital content visited by users of the group of users (e.g., a similarity of web content of websites visited by users), and so forth.
Depending on the particular implementation, the machine learning model (and/or submodel) can use one or more input features to generate an output that includes a prediction of user features. For example, the feature 1 model 220 may predict a predicted feature 1272 (e.g., a predicted gender) of the user of the client device 106 as an output. Similarly, the feature 2 model 230 may be a regression model that processes the inputs 205 and 210 and generates as output a predicted feature 2274 (e.g., a predicted age range) of the user of the client device 106. In the same manner, feature model 3240 generates as output the predicted features 3 of the user.
These predicted user characteristics and input characteristics 205 and 210 are used to select digital components provided by the digital component provider and/or the server 108. However, implementing one or more machine learning models (e.g., first model 250 and second model 260) and sub-models (e.g., feature 1 model 220, feature 2 model 230, and feature 3 model 240) by user evaluation device 170 to predict user characteristics requires training the machine learning models.
Depending on the architecture of the machine learning model (or each sub-model), the training process may be different based on the individual learning objectives of each model, or the training process may be the same based on the overall learning objectives. For example, in this particular example, the learning goal of the second model 260 is to process the set of group features 210 and generate as output an intermediate representation that embeds the information provided by the set of group features 210. Similarly, the learning goal of each of the sub-models 220, 230, and 240 implemented within the first model 250 is to process the output of the second model 260 along with the user group ID 202, additional features 204, and activity features 206 to generate outputs including predicted user characteristics 272, 274, and 276, respectively. Depending on the particular implementation, the training process of the machine learning model can be supervised, unsupervised, or semi-supervised, and may also include adjusting a plurality of hyper-parameters associated with the model (a process referred to as hyper-parameter adjustment).
Typically, training a machine learning model requires a training data set comprising a plurality of training samples. The training data set of the machine learning model used to perform the classification includes features taken from the real world and labels for correct labels (ground truth). There are many techniques that can acquire real world data for training data sets. For example, data can be collected using user surveys or from users who are willing to provide information related to their online browsing. In another example, a content platform, such as the content server 104 or the search system 150, may allow a user to register with the content platform by providing user information. In another example, the content platform can identify the client device using a cookie, for example, and can store information about the user's online activity and/or user characteristics.
In some implementations, each sample of the training data set associated with a user includes an anonymous user identifier (an identifier that does not allow identification of the user, e.g., an index of the training data set sample), a user group identifier (user group ID)202 with which the anonymous user is associated, a subset of features from the set of additional features 204, a set of active features 206, a set of group features 210, and one or more known user characteristics (correctly labeled labels) of the anonymous user. In some implementations, each instance of the training data set may also include one or more URLs visited by the anonymous user.
The set of group characteristics 210 may include one or more aggregated user group demographics that collectively characterize users in a particular group. Aggregated user group demographics typically provide collective information for all users in a user group and do not allow for the identification of particular users in a user group, thereby maintaining user privacy. Examples of such aggregated user group demographics include the total number of users in the user group, the gender proportion of users in the user group, the most frequently visited web content (such as URLs or domains) by the group members, the functionality associated with the most frequently visited page content by the group members, and other signals derived from the aggregation of the behavior or real/inferred characteristics of the group members. As described above, during the training process, such information (e.g., gender) about the users in the user group is available in the training dataset (e.g., via cookies). However, such information is not available when the system is online. In such scenarios, such aggregated user group demographics will be observed from the training dataset and taken as input to the machine learning model. For example, assume that the male-female ratio of a user in a particular user group reflected in the training data set is 2/3. The system assumes that the ratio is maintained and uses the same male to female ratio as one of the features in the set of group features 210 while predicting the user characteristics and selecting a digital component for the user.
In some implementations, the set of group characteristics 210 may include an aggregation of one or more context predictions. The aggregation of contextual predictions is an aggregated result of a priori real or predicted user characteristics of users in a particular group of users based on digital content accessed by the users. For example, assume that a machine learning model implemented within user evaluation device 170 generates user characteristics as predictions for each of the past N similar component requests from the same or different users of the same user group. In such a scenario, the system may include the set of all N predicted user characteristics as features in the set of group features 210.
In some implementations, the set of group characteristics 210 may include a list of URLs visited by users of the same user group. For example, such a list may include the most frequently visited URLs or a complete list of URLs visited by users of the user group. In some implementations, the set of group characteristics may include a measure of similarity of web content accessed by users of the group of users. In such implementations, the digital content (website content) can be analyzed to compute semantic similarities between the website content. For example, suppose that users of a particular user group often visit 25 websites. A potential Dirichlet distribution (LDA) model can be implemented to capture topic distributions among 25 web site contents. In general, the LDA model generates a vector representation of each web site's content, which can be used to compute the similarity (e.g., cosine similarity) of the web sites. Other methods of calculating such similarities may include Jaccard similarity, Latent Semantic Analysis (LSA), non-negative matrix factorization, and techniques of different embedding techniques. These features may be based on directly observable user behavior characteristics, or may be output from other machine learning models, e.g., models that provide representations of multiple URLs visited by users of the same user group. Examples of such representations may include a URL, a URL packet, or a thermally encoded embedding of a URL.
Depending on the architecture of the evaluation apparatus 170, upon receiving the component request 112 for a digital component, a machine learning model (e.g., the second model 260) may analyze digital content accessed by other users of a user group and users of client devices 106 belonging to the same user group to compute semantic similarities between the accessed digital content. In such an implementation, the output of such a similarity check can be a score, likelihood, or data representation that provides specific information to other models implemented within the evaluation device 170.
Once the machine learning model (or submodel) is trained, the digital component distribution system 110 can select digital components based on one or more user characteristics predicted by the user evaluation device 170 (or a machine learning model implemented within the user evaluation device 170). For example, assume that a male user belonging to the subgroup "shoes" provides the search query "slippers" via the client device 106 to obtain a search results page and/or data specifying search results and/or text, sound, or other visual content relevant to the search query. Assume that the search results page includes time slots for digital components provided by entities other than the entity that generated and provided the search results. A browser-based application 107 executing on the client device 106 generates a component request 112 for a digital component slot. The digital component distribution system 110, upon receiving the component request 112, provides the information included in the component request 112 as input to a machine learning model implemented by the user evaluation device 170. The machine learning model generates as output a prediction of one or more user characteristics. For example, the sub-machine learning model 220 correctly predicts that the user of the client device 106 is a male based on the learned parameters. Thus, the digital component provider 110 can select digital components associated with a slipper designated for distribution to a male. After selection, the selected digital components are sent to the client device 106 for presentation with the search results in the search results page.
FIG. 3 is a flow diagram of an example process 300 for distributing digital components using a machine learning model. The operations of process 300 performed by the system components described and depicted in fig. 1 and 2 are described below. The following description of the operation of process 300 is for illustration only. The operations of process 300 can be performed by any suitable device or system (e.g., any suitable data processing device). The operations of process 300 can also be implemented as instructions stored on a non-transitory computer readable medium. Execution of the instructions causes one or more data processing devices to perform the operations of process 300.
A client device is assigned a temporary group identifier that identifies a particular group from a plurality of different groups (310). In some implementations, users can be assigned to groups of users based on the digital content they access during a single browsing session, as described with reference to fig. 1. For example, when a user visits a particular website and interacts with a particular item presented on the website or adds an item to a virtual shopping cart, the user can be assigned to a group of users who visited the same website or other websites that are contextually similar or interested in the same item. For example, if a user of a client device 106 searches for shoes and accesses multiple web pages of different shoe manufacturers, the user can be assigned to a user group of "shoes," which can include identifiers of all users who have accessed a website associated with the shoes. Thus, the user group is able to represent the interests of the users as a whole without identifying individual users and without enabling any individual user to be identified. For example, a user group can be identified by a user group identifier for each user in the group. For example, if a user adds shoes to a shopping cart of an online retailer, the user can be added to a group of shoes users having a particular identifier for each user in the group.
A training set is generated that includes the temporary group identifier, the set of group features, and the set of active features (320). In some implementations, each sample of the training data set associated with a User includes an anonymous User identifier (an identifier that does not allow identification of the User, e.g., an index of the training data set sample), a User Group identifier (User Group ID)202 associated with the anonymous User, a subset of features from the set of additional features 204, a set of active features 206, a set of Group features 210, and one or more real User features (correctly labeled labels) of the anonymous User. In some implementations, each instance of the training data set may also include one or more URLs visited by anonymous users.
The set of additional features is typically included within the component request 112. The set of additional features includes information such as geographic information indicating the state or region from which the component request 112 was submitted, or other information that provides context for the environment in which the digital component 112 is to be displayed (e.g., a time of day of the component request, a day of the week of the component request, a type of client device 106 that is to display the digital component, such as a mobile device or tablet device).
The set of activity features 206 can include a list of websites previously visited by the user in the current session, previous interactions with digital components presented in the previously visited websites. For example, a list of URLs that link to websites visited by the user of the client device 106. Depending on the particular implementation, the set of activity features 206 can be maintained by a content provider (or digital component provider) or can be provided by the client device 106 by including the set of activity features 206 within the component request 112.
The set of group characteristics 210 can be maintained by a content provider (or digital component provider). For example, the digital component provider and/or the server 108 can periodically maintain and update a plurality of characteristics (also referred to as parameters) of the all-user group based on all active users in the all-user group and previous predictions of the all-user group. The set of group characteristics 210 may include information such as the number of users in the group, an aggregation of user demographics in the group of users, an average prediction of user characteristics for the group of users, a list of websites (or URLs) frequently visited by users of the group of users, or a similarity of digital content visited by users of the group of users (e.g., a similarity of web page content of websites visited by users), and so forth.
The model is trained using a training set (330). For example, a machine learning model implemented within the user evaluation device 170 is trained on a training data set. Depending on the particular implementation, the training process of the sub-machine learning model can be supervised, unsupervised, or semi-supervised, and may also include adjusting a plurality of hyper-parameters associated with the model (the process referred to as hyper-parameter adjustment). During the training process, as the plurality of samples of the training data set are iterated (a process referred to as optimization), the plurality of training parameters are adjusted based on errors generated by a loss function that compares predicted values of the machine learning model to actual values of the samples in the training set.
The training process depends on the architecture of the machine learning model (or each sub-model). For example, the training process may be different based on individual learning objectives for each model, or the training process may be the same based on overall learning objectives. For example, referring to FIG. 2, the learning goal of the second model 260 is to process the set of group features 210 and generate as output an intermediate representation that embeds the information provided by the set of group features 210. Similarly, the learning goal of each of the sub-models 220, 230, and 240 implemented within the first model 250 is to process the output of the second model 260 along with the user group ID 202, the additional features 204, and the activity features 206 to generate outputs including predicted user characteristics 272, 274, and 276, respectively.
A request for a digital component is received (340). For example, if a user of the client device 106 loads a website that includes one or more digital component slots using the browser-based application 107, the browser-based application 107 can generate and send a component request 112 for each of the one or more digital component slots. In some implementations, the component request 112 includes a User Group identifier (User Group ID)202 corresponding to a User Group that includes an identifier for the client device 106, other information (also referred to as additional features 204), such as geographic information indicating a state or area from which the component request 112 was submitted, or other information that provides context for the environment in which the digital component 112 is to be displayed (e.g., a time of day of the component request, a day of the week of the component request, a type of client device 106 that is to display the digital component, such as a mobile device or tablet device). In some implementations, the component request 112 can also include information about the user's browsing activity (also referred to as activity features 206). For example, a list of URLs that the user visits using the client device 106 or a subset of the list of URLs that the user visits most frequently in a particular browsing session.
The trained model is applied to information included in the request to generate one or more user characteristics not included in the request (350). In some implementations, a machine learning model (and/or submodel) implemented within the user evaluation device 170 can use one or more input features to generate an output that includes a prediction of user characteristics. For example, the feature 1 model 220 may predict as output a predicted feature 1272 (e.g., a predicted gender) of the user of the client device 106. Similarly, the feature 2 model 230 may be a regression model that processes the inputs 205 and 210 and generates as output a predicted feature 2274 (e.g., a predicted age range) of the user of the client device 106. In the same manner, feature model 3240 generates as output the predicted features 3 of the user.
In some implementations, the input features may include a User Group identifier (User Group ID)202, a subset of features from the set of additional features 204, a set of active features 206, and a set of Group features 210.
One or more digital components are selected based on one or more user characteristics generated by the trained model. (360). For example, assume that a male user belonging to the subgroup "shoes" provides the search query "slippers" via the client device 106 to obtain a search results page and/or data specifying search results and/or text, sound, or other visual content related to the search query. Assume that the search results page includes a time slot for the digital component. A browser-based application 107 executing on the client device 106 generates a component request 112 for a digital component slot. The digital component distribution system 110, upon receiving the component request 112, provides the information included in the component request 112 as input to a machine learning model implemented by the user evaluation device 170. The machine learning model generates as output a prediction of one or more user characteristics after processing the input. For example, the sub-machine learning model 220 correctly predicts that the user of the client device 106 is a male based on the learned parameters. Thus, the digital component provider 110 can select digital components associated with slippers having distribution criteria that indicate that the digital components should be distributed to men.
The selected one or more digital components are transmitted to the client device (370). For example, after digital component distribution system 110 selects a digital component based on the predicted user characteristics, the selected digital component is sent to client device 106 for presentation.
FIG. 4 is a block diagram of an example computer system 400 that may be used to perform the operations described above. System 400 includes processor 410, memory 420, storage 430, and input/output device 440. Each of the components 410, 420, 430, and 440 can be interconnected, for example, using a system bus 450. The processor 410 is capable of processing instructions for execution within the system 400. In one implementation, the processor 410 is a single-threaded processor. In another implementation, the processor 410 is a multi-threaded processor. The processor 410 is capable of processing instructions stored in the memory 420 or the storage device 430.
The storage device 430 is capable of providing mass storage for the system 400. In one implementation, the storage device 430 is a computer-readable medium. In various different implementations, the storage device 430 can include, for example, a hard disk device, an optical disk device, a storage device shared by multiple computing devices (e.g., cloud storage devices) over a network, or some other mass storage device.
The input/output device 440 provides input/output operations for the system 400. In one implementation, the input/output devices 440 can include one or more network interface devices, such as an Ethernet card, a serial communication device, such as an RS-232 port, and/or a wireless interface device, such as an 802.11 card. In another implementation, the input/output devices can include driver devices, such as keyboards, printers, and display devices 370 that are configured to receive input data and transmit output data to other input/output devices. However, other implementations can also be used, such as mobile computing devices, mobile communication devices, set-top box television client devices, and so forth.
Although an example processing system is depicted in fig. 4, implementations of the subject matter and the functional operations described in this specification can be implemented in other types of digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their specific structural equivalents, or in combinations of one or more of them.
An electronic document (for brevity, referred to simply as a document) does not necessarily correspond to a file. The documents may be stored in a portion of a file that contains other documents, a single file dedicated to related documents, or multiple coordinated files.
Embodiments of the subject matter and the operations described in this specification can be implemented in digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their equivalents, or in combinations of one or more of them. Embodiments of the subject matter described in this specification can be implemented as one or more computer programs, i.e., one or more modules of computer program instructions, encoded on computer storage media for execution by, or to control the operation of, data processing apparatus. Alternatively, or in addition, the program instructions can be encoded on an artificially generated propagated signal (e.g., a machine-generated electrical, optical, or electromagnetic signal) that is generated to encode information for transmission to suitable receivers for execution by a data processing apparatus. The computer storage medium can be or be included in a computer-readable storage device, a computer-readable storage substrate, a random or serial access memory array or device, or a combination of one or more of them. Further, although the computer storage medium is not a propagated signal, the computer storage medium can be a source or destination of computer program instructions encoded in an artificially generated propagated signal. The computer storage media can also be or be included in one or more separate physical components or media (e.g., multiple CDs, disks, or other storage devices).
The operations described in this specification can be implemented as operations performed by a data processing apparatus on data stored on one or more computer-readable storage devices or received from other sources.
The term "data processing apparatus" encompasses all kinds of apparatus, devices, and machines for processing data, including by way of example a programmable processor, a computer, a system on a chip, or a plurality or combination of the foregoing. An apparatus can comprise special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application specific integrated circuit). The apparatus can include, in addition to hardware, code that creates an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, a cross-platform runtime environment, a virtual machine, or a combination of one or more of them. The apparatus and execution environment are capable of implementing a variety of different computing model infrastructures, such as web services, distributed computing and grid computing architectures.
A computer program (also known as a program, software application, script, or code) can be written in any form of programming language, including compiled or interpreted languages, declarative or procedural languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, object, or other unit suitable for use in a computing environment. The computer program may, but need not, correspond to a file in a file system. A program can be stored in a file that contains portions of other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program, or in multiple coordinated files (e.g., files that store one or more modules, sub programs, or portions of code). A computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
The processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform actions by operating on input data and generating output. The processes and logic flows can also be performed by, and apparatus can also be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).
Processors suitable for the execution of a computer program include, by way of example, both general and special purpose microprocessors. Generally, a processor will receive instructions and data from a read-only memory or a random access memory or both. The essential elements of a computer are a processor for performing actions in accordance with the instructions and one or more memory devices for storing instructions and data. Generally, a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks. However, a computer need not have such a device. Moreover, the computer can be embedded in another device, e.g., a mobile telephone, a Personal Digital Assistant (PDA), a mobile audio or video player, a game player, a Global Positioning System (GPS) receiver, or a portable storage device (e.g., a Universal Serial Bus (USB) flash drive), to name a few. Computer-readable media suitable for storing computer program instructions and data include all forms of non-volatile memory, media and memory devices, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks; magneto-optical disks; and CD-ROM and DVD-ROM disks. The processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
To provide for interaction with a user, embodiments of the subject matter described in this specification can be implemented on a computer having a display device, e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor, for displaying information to the user and a keyboard and a pointing device, e.g., a mouse or a trackball, by which the user can provide input to the computer. Other kinds of devices can also be used to provide interaction with the user, for example, feedback provided to the user can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form, including acoustic, speech, or tactile input. In addition, the computer can interact with the user by sending and receiving documents to and from the device used by the user, for example, by sending web pages to a web browser on the user's device in response to requests received from the web browser.
Embodiments of the subject matter described in this specification can be implemented in a computing system that includes a back-end component, e.g., as a data server, or that includes a middleware component, e.g., an application server, or that includes a front-end component, e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described in this specification, or any combination of one or more such back-end, middleware, or front-end components. The components of the system can be interconnected by any form or medium of digital data communication, e.g., a communication network. Examples of communication networks include local area networks ("LANs") and wide area networks ("WANs"), intranets (e.g., the internet), and peer-to-peer networks (e.g., ad hoc peer-to-peer networks).
The computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other. In some embodiments, the server sends data (e.g., HTML pages) to the client device (e.g., for the purpose of displaying data to and receiving user input from a user interacting with the client device). Data generated at the client device (e.g., a result of the user interaction) can be received at the server from the client device.
While this specification contains many specific implementation details, these should not be construed as limitations on the scope of any inventions or of what may be claimed, but rather as descriptions of features specific to particular embodiments of particular inventions. Certain features that are described in this specification in the context of separate embodiments can also be implemented in combination in a single embodiment. Conversely, various features that are described in the context of a single embodiment can also be implemented in multiple embodiments separately or in any suitable subcombination. Furthermore, although features may be described above as acting in certain combinations and even initially claimed as such, one or more features from a claimed combination can in some cases be excised from the combination, and the claimed combination may be directed to a subcombination or variation of a subcombination.
Similarly, while operations are depicted in the drawings in a particular order, this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order, or that all illustrated operations be performed, to achieve desirable results. In certain situations, multitasking and parallel processing may be advantageous. Moreover, the separation of various system modules and components in the embodiments described above should not be understood as requiring such separation in all embodiments, and it should be understood that the described program components and systems can generally be integrated together in a single software product or packaged into multiple software products.
Thus, particular embodiments of the subject matter have been described. Other embodiments are within the scope of the following claims. In some cases, the actions recited in the claims can be performed in a different order and still achieve desirable results. Further, the processes depicted in the accompanying figures do not necessarily require the particular order shown, or sequential order, to achieve desirable results. In some implementations, multitasking and parallel processing may be advantageous.
Claims (20)
1. A method, comprising:
assigning a temporary group identifier to the client device based on a current user activity period on the client device, the temporary group identifier identifying a particular group from a plurality of different groups that includes the client device;
generating a training set for a model to be trained, the training set comprising (i) a temporary group identifier assigned to a client device based on a current user activity period at the client device, (ii) a group feature set of a user to whom the temporary group identifier has been assigned, and (iii) an activity feature set of a user activity performed by the user to whom the temporary group identifier has been assigned, wherein the temporary group identifier identifies a particular group from a plurality of different groups that includes the client device;
training the model using a training set;
receiving a request for a digital component from a given client device, the request including at least: (i) a temporary group identifier currently assigned to a given client device, (ii) a subset of the active feature set, and (iii) one or more additional features, wherein the one or more additional features are based on the client device;
generating one or more user characteristics not included in the request by applying the trained model to (i) the temporary group identifier and (ii) the subset of activity features included in the request;
selecting one or more digital components based on the one or more user characteristics generated by the trained model; and
the selected one or more digital components are transmitted to the client device.
2. The method of claim 1, wherein the set of feature sets comprises: (i) a plurality of Uniform Resource Locators (URLs), including a plurality of URLs visited by users that have been assigned the temporary group identifier, (ii) a representation of the plurality of URLs visited by users that have been assigned the temporary group identifier.
3. The method of claim 2, wherein the group feature set further comprises: (i) a count and/or proportion of URLs visited by users who have been assigned a temporary group identifier, (ii) patterns in digital content presented at URLs visited by users who have been assigned a temporary group identifier.
4. The method of claim 1, wherein each sample of the training set comprises at least: (i) an anonymous identifier of the user that has been assigned the temporary group identifier, (ii) a URL visited by the user when the user was assigned the temporary group identifier.
5. The method of claim 1, wherein the group feature set comprises one or more aggregated user group demographics that collectively characterize users in a particular group corresponding to the temporary group identifier without characterizing any individual user in the particular group.
6. The method of claim 1, wherein the group feature set comprises an aggregated context prediction, wherein the aggregated context prediction is based on a predicted output of digital content accessed by users that have been assigned a temporary group identifier.
7. The method of claim 1, wherein the active feature set comprises: (i) a geographic identifier specifying a source of the request for the digital component, (ii) a time at which the source of the request for the digital component was submitted.
8. A system, comprising:
assigning a temporary group identifier to the client device based on a current user activity period on the client device, the temporary group identifier identifying a particular group from a plurality of different groups that includes the client device;
generating a training set for a model to be trained, the training set comprising (i) a temporary group identifier assigned to a client device based on a current period of user activity at the client device, (ii) a group feature set of a user to whom the temporary group identifier has been assigned, and (iii) an activity feature set of user activity performed by the user to whom the temporary group identifier has been assigned, wherein the temporary group identifier identifies a particular group comprising the client device from a plurality of different groups;
training the model using a training set;
receiving a request for a digital component from a given client device, the request including at least: (i) a temporary group identifier currently assigned to a given client device, (ii) a subset of the set of active features, and (iii) one or more additional features, wherein the one or more additional features are based on the client device;
generating one or more user characteristics not included in the request by applying the trained model to (i) the temporary group identifier and (ii) the subset of activity features included in the request;
selecting one or more digital components based on the one or more user characteristics generated by the trained model; and
the selected one or more digital components are transmitted to the client device.
9. The system of claim 8, wherein the set of feature sets comprises: (i) a plurality of Uniform Resource Locators (URLs), including a plurality of URLs visited by users that have been assigned a temporary group identifier, (ii) a representation of a plurality of URLs visited by users that have been assigned a temporary group identifier.
10. The system of claim 9, wherein the set of feature sets further comprises: (i) a count and/or proportion of URLs visited by users who have been assigned a temporary group identifier, (ii) patterns in digital content presented at URLs visited by users who have been assigned a temporary group identifier.
11. The system of claim 8, wherein each sample of the training set comprises at least: (i) an anonymous identifier of the user that has been assigned the temporary group identifier, (ii) a URL visited by the user when the user was assigned the temporary group identifier.
12. The system of claim 8, wherein the group feature set includes one or more aggregated user group demographics that collectively characterize users in a particular group corresponding to the temporary group identifier without characterizing any individual user in the particular group.
13. The system of claim 8, wherein the group feature set comprises an aggregated context prediction, wherein the aggregated context prediction is based on a predicted output of digital content accessed by users that have been assigned a temporary group identifier.
14. The system of claim 8, wherein the active feature set comprises: (i) a geographic identifier specifying a source of the request for the digital component, (ii) a time at which the source of the request for the digital component was submitted.
15. A non-transitory computer-readable medium storing instructions that, when executed by one or more data processing apparatus, cause the one or more data processing apparatus to perform operations comprising:
assigning a temporary group identifier to the client device based on a current user activity period on the client device, the temporary group identifier identifying a particular group from a plurality of different groups that includes the client device;
generating a training set for a model to be trained, the training set comprising (i) a temporary group identifier assigned to a client device based on a current period of user activity at the client device, (ii) a group feature set of a user to whom the temporary group identifier has been assigned, and (iii) an activity feature set of user activity performed by the user to whom the temporary group identifier has been assigned, wherein the temporary group identifier identifies a particular group comprising the client device from a plurality of different groups;
training the model using a training set;
receiving a request for a digital component from a given client device, the request including at least: (i) a temporary group identifier currently assigned to a given client device, (ii) a subset of the active feature set, and (iii) one or more additional features, wherein the one or more additional features are based on the client device;
generating one or more user characteristics not included in the request by applying the trained model to (i) the temporary group identifier and (ii) the subset of activity features included in the request;
selecting one or more digital components based on the one or more user characteristics generated by the trained model; and
the selected one or more digital components are transmitted to the client device.
16. The non-transitory computer-readable medium of claim 15, wherein the group feature set comprises: (i) a plurality of Uniform Resource Locators (URLs), including a plurality of URLs visited by users that have been assigned a temporary group identifier, (ii) a representation of a plurality of URLs visited by users that have been assigned a temporary group identifier.
17. The non-transitory computer readable medium of claim 16, the group feature set further comprising: (i) a count and/or proportion of URLs visited by users who have been assigned a temporary group identifier, (ii) patterns in digital content presented at URLs visited by users who have been assigned a temporary group identifier.
18. The non-transitory computer-readable medium of claim 15, wherein each sample of the training set comprises at least: (i) an anonymous identifier of the user that has been assigned the temporary group identifier, (ii) a URL visited by the user when the user was assigned the temporary group identifier.
19. The non-transitory computer-readable medium of claim 15, wherein the group feature set comprises one or more aggregated user group demographics that collectively characterize users in a particular group corresponding to the temporary group identifier, and do not characterize any individual user in the particular group.
20. The non-transitory computer-readable medium of claim 15, wherein the group feature set comprises an aggregated context prediction, wherein the aggregated context prediction is a predicted output based on digital content accessed by users that have been assigned a temporary group identifier.
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
PCT/US2020/055525 WO2022081150A1 (en) | 2020-10-14 | 2020-10-14 | Privacy preserving machine learning predictions |
Publications (1)
Publication Number | Publication Date |
---|---|
CN114761948A true CN114761948A (en) | 2022-07-15 |
Family
ID=73139434
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN202080026134.4A Pending CN114761948A (en) | 2020-10-14 | 2020-10-14 | Privacy preserving machine learning prediction |
Country Status (5)
Country | Link |
---|---|
US (1) | US20220318644A1 (en) |
EP (1) | EP4007960A1 (en) |
JP (1) | JP7237194B2 (en) |
CN (1) | CN114761948A (en) |
WO (1) | WO2022081150A1 (en) |
Family Cites Families (10)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
JP2010170506A (en) | 2009-01-26 | 2010-08-05 | Nec Corp | Device, method and program for estimating user attribute |
JP2010198243A (en) | 2009-02-24 | 2010-09-09 | Oki Electric Ind Co Ltd | Device and method for action prediction |
WO2014145059A2 (en) * | 2013-03-15 | 2014-09-18 | Bell Tyler | Apparatus, systems, and methods for analyzing movements of target entities |
US9491249B2 (en) * | 2013-10-25 | 2016-11-08 | Dorin ROSENSHINE | Integrating offsite activities related to chat and text messaging with online data records |
JP6226846B2 (en) * | 2014-09-19 | 2017-11-08 | ヤフー株式会社 | Information analysis apparatus, information analysis method, and information analysis program |
US10817894B2 (en) * | 2015-08-20 | 2020-10-27 | Avaya, Inc. | System and method for dynamic temporary groups |
US10764380B2 (en) * | 2016-10-20 | 2020-09-01 | Facebook, Inc. | Clustering content items based on a social affinity between users associated with the content items |
US10592578B1 (en) | 2018-03-07 | 2020-03-17 | Amazon Technologies, Inc. | Predictive content push-enabled content delivery network |
US11669431B2 (en) * | 2019-01-11 | 2023-06-06 | Google Llc | Analytics personalization framework |
JP6764980B1 (en) * | 2019-06-21 | 2020-10-07 | 西日本電信電話株式会社 | Attribute estimation device, attribute estimation method and program |
-
2020
- 2020-10-14 EP EP20803367.0A patent/EP4007960A1/en active Pending
- 2020-10-14 US US17/608,221 patent/US20220318644A1/en active Pending
- 2020-10-14 JP JP2021559107A patent/JP7237194B2/en active Active
- 2020-10-14 WO PCT/US2020/055525 patent/WO2022081150A1/en unknown
- 2020-10-14 CN CN202080026134.4A patent/CN114761948A/en active Pending
Also Published As
Publication number | Publication date |
---|---|
JP7237194B2 (en) | 2023-03-10 |
EP4007960A1 (en) | 2022-06-08 |
US20220318644A1 (en) | 2022-10-06 |
WO2022081150A1 (en) | 2022-04-21 |
JP2023502805A (en) | 2023-01-26 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
RU2580516C2 (en) | Method of generating customised ranking model, method of generating ranking model, electronic device and server | |
RU2725659C2 (en) | Method and system for evaluating data on user-element interactions | |
US10445753B1 (en) | Determining popular and trending content characteristics | |
US11551281B2 (en) | Recommendation engine based on optimized combination of recommendation algorithms | |
CN109075987B (en) | Optimizing digital component analysis systems | |
US20240054392A1 (en) | Transfer machine learning for attribute prediction | |
US20170004402A1 (en) | Predictive recommendation engine | |
US20220318644A1 (en) | Privacy preserving machine learning predictions | |
JP7230231B2 (en) | Robust model performance across heterogeneous subgroups within the same group | |
CN109299351B (en) | Content recommendation method and device, electronic equipment and computer readable medium | |
JP2023508251A (en) | Secure management of data distribution restrictions | |
US20230259815A1 (en) | Machine learning techniques for user group based content distribution | |
US20230177543A1 (en) | Privacy preserving machine learning expansion models | |
US20240160678A1 (en) | Distributing digital components based on predicted attributes | |
JP7223164B2 (en) | Data integrity optimization | |
WO2023234938A1 (en) | Distributing digital components based on predicted attributes | |
WO2024039474A1 (en) | Privacy sensitive estimation of digital resource access frequency | |
CN117980921A (en) | Content distribution | |
JP2022517458A (en) | Contribution Incremental Machine Learning Model | |
KR20230066430A (en) | Video clustering and analysis |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
SE01 | Entry into force of request for substantive examination |
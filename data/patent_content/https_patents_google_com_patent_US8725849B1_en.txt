US8725849B1 - Browser cache pre-population - Google Patents
Browser cache pre-population Download PDFInfo
- Publication number
- US8725849B1 US8725849B1 US13/232,121 US201113232121A US8725849B1 US 8725849 B1 US8725849 B1 US 8725849B1 US 201113232121 A US201113232121 A US 201113232121A US 8725849 B1 US8725849 B1 US 8725849B1
- Authority
- US
- United States
- Prior art keywords
- content items
- web content
- particular user
- user
- browser
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active, expires
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/957—Browsing optimisation, e.g. caching or content distillation
- G06F16/9574—Browsing optimisation, e.g. caching or content distillation of access to content, e.g. by caching
Definitions
- Browsers interact with websites by submitting a request for content to the website.
- the website transmits the content to the browser.
- Many browsers include the ability to cache content, in which content previously received from a website is stored by the browser.
- the browser may retrieve the cached content instead of retrieving the content from the website. Caching can be advantageous in reducing network load and increasing the perceived performance of the browser.
- a method may include receiving access pattern information relating to web content items and user-specific information of users that access the web content items.
- the method may further include receiving a request for content items to use in pre-population of a cache of a browser of a client device of a particular user; and determining, based on user-specific information of the particular user and the access pattern information relating to the web content items, one or more of the web content items to transmit to the particular user.
- the method may further include transmitting the determined one or more of the web content items to the cache of the browser of the client device.
- a computer-readable medium may include one or more instructions to receive access pattern information relating to web content items and user-specific information of users that access the web content items; one or more instructions to receive a request for content items to use in pre-population of a cache of a browser associated with a particular user; one or more instructions to determine, based on user-specific information of the particular user and the access pattern information relating to the web content items, one or more of the web content items to transmit to the particular user; and one or more instructions to transmit the determined one or more of the web content items to the cache of the client.
- a server device may include one or more processors; and a memory to store instructions executable by the one or more processors to: generate, based on historical access pattern information obtained from users and for web content items, a set of web content items that are likely to be accessed by a particular user of a client device through a browser program, where the set of web content items are a subset of the web content items; and transmit the set of web content items to the client device to pre-populate a cache of the browser program.
- a computer-readable medium may include one or more instructions to generate, based on historical access pattern information obtained from users and for a plurality of web content items, a set of web content items that are determined to be relatively likely to be accessed by a first user of a client device through a browser program, where the set of web content items are a subset of the web content items; and one or more instructions to transmit the set of web content items to the client device for inclusion in a cache of the browser program.
- a device may include means for receiving access pattern information relating to web content items and user-specific information of users that access the web content items; means for receiving a request for content items to use in pre-population of a cache of a browser of a client device associated with a particular user; means for determining a list of web content items, based on a rate of access of the web content items, by analyzing the access pattern information; means for fetching and storing content corresponding to the list of web content items, where hyper-text transfer protocol (HTTP) header information is stored with the stored content items; means for determining, based on user-specific information of the particular user and the determined rate of access of the web content items, one or more of the web content items, from the list of web content items, to transmit to the client device; and means for transmitting the determined one or more of the web content items, including the HTTP header information, to the cache of the browser of the client device.
- HTTP hyper-text transfer protocol
- FIG. 1 is a diagram illustrating an overview of an example implementation described herein;
- FIG. 2 is a diagram of an example environment in which systems and/or methods described herein may be implemented
- FIG. 3 shows an example of a generic computer device and a generic mobile computer device
- FIG. 4 is a diagram illustrating an example of components of a browser
- FIG. 5 is a flowchart of an example process for obtaining content items for use in pre-populating a browser's cache
- FIG. 6 is a diagram conceptually illustrating an example of access pattern information for web content items
- FIG. 7 is diagram conceptually illustrating components for one example implementation for determining content items for cache pre-population
- FIG. 8 is a flowchart of an example process for pre-populating the cache of a browser.
- FIG. 9 is diagram conceptually illustrating components for one example implementation for determining user-specific content items in response to a received request to pre-populate a browser cache.
- Web traffic tends to follow a long-tail distribution in which the top few hundred websites may account for the majority of non-video web traffic. Much of the content of websites changes slowly over time. For example, company logos, cascading style sheets (CSS), and JavaScript files may be website data that is updated relatively infrequently. Consistent with aspects described herein, a browser's cache may be pre-populated or supplemented with cache data delivered to the browser outside of normal use of the browser (i.e., outside of web browsing activity). The pre-populated or supplemental cache data may be determined based on information relating to the user of the browser.
- FIG. 1 is a diagram illustrating an overview of an example implementation described herein. Assume that a user uses a web browser 110 , which includes a local browser cache 120 , to access websites, such as websites 130 . In FIG. 1 , the example website “spiders.com” is shown being displayed by browser 110 .
- Cache pre-population component 140 may access websites 130 to obtain cacheable browser content. Cache pre-population component 140 may also maintain other information relating to websites 130 , such as information relating to the popularity of websites 130 and/or information relating to users that tend to access websites 130 . Cache pre-population component 140 may also receive information relating to a user of web browser 110 , such as information that can be used to know or infer which websites the user is likely to visit. For example, with the user's express permission, the user's location, demographic information, or other information relating to the user's browsing tendencies, may be used by cache pre-population component 140 to determine websites that the user is likely to visit.
- cache pre-population component 140 may select cacheable content items from one or more websites 130 and transmit the content items to local browser cache 120 .
- the browser's cache hit rate may be immediately increased, which may reduce page load times and, thus, provide for an enhanced web browsing experience.
- FIG. 2 is a diagram of an example environment 200 in which systems and/or methods described herein may be implemented.
- Environment 200 may include multiple clients 205 connected to multiple servers 210 - 220 via a network 230 .
- Two clients 205 and three servers 210 , 215 , and 220 have been illustrated as connected to network 230 for simplicity. In practice, there may be more or fewer clients and servers.
- a client may perform a function of a server
- a server may perform a function of a client.
- Clients 205 may include devices, such as personal computers, wireless telephones, personal digital assistants (PDAs), lap tops, or another type of computation or communication device. Clients 205 may include user interfaces, presented through browsers 207 . Through browser 207 , a user may access web content provided by servers 210 and 215 .
- devices such as personal computers, wireless telephones, personal digital assistants (PDAs), lap tops, or another type of computation or communication device.
- Clients 205 may include user interfaces, presented through browsers 207 . Through browser 207 , a user may access web content provided by servers 210 and 215 .
- Servers 210 , 215 , and 220 may include server devices that gather, process, search, and/or implement services in a manner described herein.
- servers 210 and 215 may be servers that host websites.
- Servers 210 and 215 may respond to requests, such as hyper-text transfer protocol (HTTP) requests, from clients 205 for content items, such as HTML pages, JavaScript files, CSS files, images, or other content items, stored by server 210 / 215 .
- Server 220 which will also be called cache pre-population server 220 herein, may include a server device to transmit cacheable content items from servers 210 / 215 to clients 205 for pre-population of the browser cache at clients 205 . The operation of cache pre-population server 220 will be described in more detail below.
- Additional servers implementing services other than a website or cache pre-population, although not explicitly shown, may also be implemented in environment 200 .
- the additional servers may implement, for example, payment services, shopping services, social networking services, etc.
- servers 210 through 220 are shown as separate components, it may be possible for one or more of servers 210 - 220 to perform one or more of the functions of another one or more of servers 210 - 220 .
- servers 210 - 220 may be possible that two or more of servers 210 - 220 are implemented as a single server. It may also be possible for a single one of servers 210 - 220 to be implemented as two or more separate (and possibly distributed) servers.
- Network 230 may include any type of network, such as a local area network (LAN), a wide area network (WAN), a telephone network (e.g., the Public Switched Telephone Network (PSTN) or a cellular network), an intranet, the Internet, or a combination of networks.
- LAN local area network
- WAN wide area network
- PSTN Public Switched Telephone Network
- FIG. 3 shows an example of a generic computing device 300 and a generic mobile computing device 350 , which may be used with the techniques described here.
- Generic computing device 300 and generic mobile computing device 350 may correspond to, for example, a client 205 and/or a server 210 , 215 , or 220 .
- Computing device 300 is intended to represent various forms of digital computers, such as laptops, desktops, workstations, personal digital assistants, servers, blade servers, mainframes, and other appropriate computers.
- Mobile computing device 350 is intended to represent various forms of mobile devices, such as personal digital assistants, cellular telephones, smart phones, and other similar computing devices.
- the components shown in FIG. 3 their connections and relationships, and their functions, are meant to be examples only, and are not meant to limit implementations of the inventions described and/or claimed in this document.
- Computing device 300 may include a processor 302 , memory 304 , a storage device 306 , a high-speed interface 308 connecting to memory 304 and high-speed expansion ports 310 , and a low speed interface 312 connecting to low speed bus 314 and storage device 306 .
- Each of the components 302 , 304 , 306 , 308 , 310 , and 312 are interconnected using various busses, and may be mounted on a common motherboard or in other manners as appropriate.
- Processor 302 can process instructions for execution within the computing device 300 , including instructions stored in the memory 304 or on the storage device 306 to display graphical information for a graphical user interface (GUI) on an external input/output device, such as display 316 coupled to high speed interface 308 .
- GUI graphical user interface
- multiple processors and/or multiple buses may be used, as appropriate, along with multiple memories and types of memory.
- multiple computing devices 300 may be connected, with each device providing portions of the necessary operations (e.g., as a server bank, a group of blade servers, or a multi-processor system, etc.).
- Memory 304 stores information within the computing device 300 .
- memory 304 includes a volatile memory unit or units.
- memory 304 includes a non-volatile memory unit or units.
- the memory 304 may also be another form of computer-readable medium, such as a magnetic or optical disk.
- the storage device 306 is capable of providing mass storage for the computing device 300 .
- storage device 306 may be or contain a computer-readable medium, such as a floppy disk device, a hard disk device, an optical disk device, or a tape device, a flash memory or other similar solid state memory device, or an array of devices, including devices in a storage area network or other configurations.
- a computer program product can be tangibly embodied in an information carrier.
- the computer program product may also contain instructions that, when executed, perform one or more methods, such as those described herein.
- the information carrier is a computer or machine-readable medium, such as memory 304 , storage device 306 , or memory on processor 302 .
- High speed controller 308 manages bandwidth-intensive operations for the computing device 300 , while low speed controller 312 manages lower bandwidth-intensive operations. Such allocation of functions is exemplary only.
- high-speed controller 308 is coupled to memory 304 , display 316 (e.g., through a graphics processor or accelerator), and to high-speed expansion ports 310 , which may accept various expansion cards (not shown).
- low-speed controller 312 is coupled to storage device 306 and low-speed expansion port 314 .
- the low-speed expansion port which may include various communication ports (e.g., USB, Bluetooth, Ethernet, wireless Ethernet), may be coupled to one or more input/output devices, such as a keyboard, a pointing device, a scanner, or a networking device such as a switch or router, e.g., through a network adapter.
- input/output devices such as a keyboard, a pointing device, a scanner, or a networking device such as a switch or router, e.g., through a network adapter.
- Computing device 300 may be implemented in a number of different forms, as shown in the figure. For example, it may be implemented as a standard server 320 , or multiple times in a group of such servers. It may also be implemented as part of a rack server system 324 . In addition, it may be implemented in a personal computer such as a laptop computer 322 . Alternatively, components from computing device 300 may be combined with other components in a mobile device (not shown), such as mobile computing device 350 . Each of such devices may contain one or more of computing devices 300 , 350 , and an entire system may be made up of multiple computing devices 300 , 350 communicating with each other.
- Mobile computing device 350 may include a processor 352 , memory 364 , an input/output (I/O) device such as a display 354 , a communication interface 366 , and a transceiver 368 , among other components.
- Mobile computing device 350 may also be provided with a storage device, such as a micro-drive or other device, to provide additional storage.
- a storage device such as a micro-drive or other device, to provide additional storage.
- Each of the components 350 , 352 , 364 , 354 , 366 , and 368 are interconnected using various buses, and several of the components may be mounted on a common motherboard or in other manners as appropriate.
- Processor 352 can execute instructions within mobile computing device 350 , including instructions stored in memory 364 .
- Processor 352 may be implemented as a chipset of chips that include separate and multiple analog and digital processors.
- Processor 352 may provide, for example, for coordination of the other components of mobile computing device 350 , such as control of user interfaces, applications run by mobile computing device 350 , and wireless communication by mobile computing device 350 .
- Processor 352 may communicate with a user through control interface 358 and display interface 356 coupled to a display 354 .
- Display 354 may be, for example, a TFT LCD (Thin-Film-Transistor Liquid Crystal Display) or an OLED (Organic Light Emitting Diode) display, or other appropriate display technology.
- Display interface 356 may comprise appropriate circuitry for driving display 354 to present graphical and other information to a user.
- Control interface 358 may receive commands from a user and convert them for submission to the processor 352 .
- an external interface 362 may be provide in communication with processor 352 , so as to enable near area communication of mobile computing device 350 with other devices.
- External interface 362 may provide, for example, for wired communication in some implementations, or for wireless communication in other implementations, and multiple interfaces may also be used.
- Memory 364 stores information within mobile computing device 350 .
- Memory 364 can be implemented as one or more of a computer-readable medium or media, a volatile memory unit or units, or a non-volatile memory unit or units.
- Expansion memory 374 may also be provided and connected to mobile computing device 350 through expansion interface 372 , which may include, for example, a SIMM (Single In Line Memory Module) card interface.
- SIMM Single In Line Memory Module
- expansion memory 374 may provide extra storage space for device 350 , or may also store applications or other information for mobile computing device 350 .
- expansion memory 374 may include instructions to carry out or supplement the processes described above, and may include secure information also.
- expansion memory 374 may be provide as a security module for mobile computing device 350 , and may be programmed with instructions that permit secure use of device 350 .
- secure applications may be provided via the SIMM cards, along with additional information, such as placing identifying information on the SIMM card in a non-hackable manner.
- Expansion memory 374 may include, for example, flash memory and/or NVRAM memory.
- a computer program product is tangibly embodied in an information carrier.
- the computer program product contains instructions that, when executed, perform one or more methods, such as those described above.
- the information carrier is a computer- or machine-readable medium, such as the memory 364 , expansion memory 374 , or memory on processor 352 , that may be received, for example, over transceiver 368 or external interface 362 .
- Mobile computing device 350 may communicate wirelessly through communication interface 366 , which may include digital signal processing circuitry where necessary. Communication interface 366 may provide for communications under various modes or protocols, such as GSM voice calls, SMS, EMS, or MMS messaging, CDMA, TDMA, PDC, WCDMA, CDMA2000, or GPRS, among others. Such communication may occur, for example, through radio-frequency transceiver 368 . In addition, short-range communication may occur, such as using a Bluetooth, WiFi, or other such transceiver (not shown). In addition, GPS (Global Positioning System) receiver module 370 may provide additional navigation- and location-related wireless data to mobile computing device 350 , which may be used as appropriate by applications running on mobile computing device 350 .
- GPS Global Positioning System
- Mobile computing device 350 may also communicate audibly using audio codec 360 , which may receive spoken information from a user and convert it to usable digital information. Audio codec 360 may likewise generate audible sound for a user, such as through a speaker, e.g., in a handset of mobile computing device 350 . Such sound may include sound from voice telephone calls, may include recorded sound (e.g., voice messages, music files, etc.) and may also include sound generated by applications operating on mobile computing device 350 .
- Audio codec 360 may receive spoken information from a user and convert it to usable digital information. Audio codec 360 may likewise generate audible sound for a user, such as through a speaker, e.g., in a handset of mobile computing device 350 . Such sound may include sound from voice telephone calls, may include recorded sound (e.g., voice messages, music files, etc.) and may also include sound generated by applications operating on mobile computing device 350 .
- Mobile computing device 350 may be implemented in a number of different forms, as shown in the figure. For example, it may be implemented as a cellular telephone 380 . It may also be implemented as part of a smart phone 382 , personal digital assistant, or other similar mobile device.
- implementations of the systems and techniques described herein can be realized in digital electronic circuitry, integrated circuitry, specially designed ASICs (application specific integrated circuits), computer hardware, firmware, software, and/or combinations thereof.
- ASICs application specific integrated circuits
- These various implementations can include implementations in one or more computer programs that are executable and/or interpretable on a programmable system including at least one programmable processor, which may be special or general purpose, coupled to receive data and instructions from, and to transmit data and instructions to, a storage system, at least one input device, and at least one output device.
- the systems and techniques described herein can be implemented on a computer having a display device (e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor) for displaying information to the user and a keyboard and a pointing device (e.g., a mouse or a trackball) by which the user can provide input to the computer.
- a display device e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor
- a keyboard and a pointing device e.g., a mouse or a trackball
- Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback (e.g., visual feedback, auditory feedback, or tactile feedback); and input from the user can be received in any form, including acoustic, speech, or tactile input.
- the systems and techniques described herein can be implemented in a computing system that includes a back end component (e.g., as a data server), or that includes a middleware component (e.g., an application server), or that includes a front end component (e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the systems and techniques described here), or any combination of such back end, middleware, or front end components.
- the components of the system can be interconnected by any form or medium of digital data communication (e.g., a communication network). Examples of communication networks include a local area network (“LAN”), a wide area network (“WAN”), and the Internet.
- LAN local area network
- WAN wide area network
- the Internet the global information network
- FIG. 4 is a diagram illustrating an example of components of browser 207 .
- Browser 207 may include a main browser portion 410 and a cache portion (cache) 420 .
- Main browser portion 410 may generally operate to fetch content items, such as web pages specified by uniform resource locators (URLs), and render the content items to present the content to the user.
- URLs uniform resource locators
- main browser portion 410 may first check whether the requested content is in cache 420 . If so, main browser portion 410 may retrieve the content from cache 420 instead of from the resource located over network 230 . If the requested content is not located in cache 420 , the content may be retrieved as normal over network 230 . If the content is cacheable, the content may additionally be stored in cache portion 420 so that the next time that the content is requested, it may be retrieved from cache portion 420 .
- Whether a particular content item is cacheable, and other information relating to the cacheability of the content items, such as the expiration date of a cacheable content item, may be included in header information, such as HTTP header information, of a response from a server 210 / 215 .
- Cache 420 may include a solid state (e.g., disk drive) or volatile memory (e.g., random access memory) cache.
- Cache 420 may be implemented as a database, file structure, or other data structure to store content items that may be requested by a user of browser 207 .
- Table 430 may include a resource identification field 440 , an expiration (EXPIRY) field 450 , and a content field 460 .
- Resource identification field 440 may store an identification for the content item.
- Resource identification field 440 may include, for example, a URL or other resource identifier.
- Expiry field 450 may include information identifying when a particular cache entry is to expire.
- Website creators may designate that certain content items are cacheable but only for a certain period or until a certain date. After that period or date, browsers should discard the content item and retrieve the content item from the website.
- Content field 460 may include the corresponding content item or a local link to the content item (e.g., a link to a location of the content item in a memory). In one implementation, content field 460 may store, in addition to the content item itself (e.g., an HTML file, an image, a JavaScript file, etc.), any corresponding HTTP response headers that were received from servers 215 / 220 .
- FIG. 5 is a flowchart of an example process 500 for obtaining content items for use in pre-populating a browser's cache.
- process 500 may be performed by one or more components of cache pre-population server 140 .
- process 500 may be performed by a device or a combination of devices separate from or in combination with pre-population server 140 .
- Process 500 may include obtaining information relating to access patterns of website content items (block 510 ).
- the access pattern information may relate to a rate of access of cacheable web content items.
- the content items may include any cacheable resource that a user might request from servers 210 / 215 .
- a single web page may be associated with multiple different content items (e.g., different images, JavaScript files, etc.).
- the access pattern information may include, for example, a quantity of times that web content items were accessed and information relating to users that accessed the web content items.
- the access pattern information may include historical (i.e., observed) information that can be obtained in a number of ways. For example, browser toolbars may be used to collect information relating to the rate of access of various websites/resources.
- User link selections as logged by certain sites may also be used to obtain access pattern information.
- user search result selections may be used to derive website access patterns.
- Other sources of web content access pattern information such as data provided by other programs or by third parties, may also or alternatively be used.
- the access pattern information may be obtained from users that provide express consent.
- the access pattern information may include user-specific information.
- the user-specific information may be information that can be used to relate a user to the likelihood that the user will access a particular web content item. For example, for each access of a web content item, one or more user “signals” may be obtained.
- the user-specific signals may be signals that can be used to infer or predict whether the user will access a particular content item.
- One example, of the user-specific signals includes the user's geographic location (e.g., country and/or city). A user's location may be useful because certain web content items are more relevant to particular geographic regions. For example, users in a specific city, such as Seattle, may be more likely to access a website that includes news from the Seattle area.
- user-specific signals may include user demographic information, such as the user's age, gender, employment status, etc.
- user-specific signal is the type of operating system (OS) or browser of the user's client 205 .
- the OS and browser type may be obtained from, for example, information received in HTTP headers.
- Still other types of user-specific information may include the user's IP address, the type of the user's network connection, and/or the ISP (Internet Service Provider) with which the user uses to connect to network 230 .
- Other user-specific signals could also be used.
- FIG. 6 is a diagram conceptually illustrating an example of access pattern information for web content items.
- Access pattern logs 620 may represent, for instance, a database, file, or other structure that is stored by or is accessible by cache pre-population server 140 .
- Access pattern information sources 610 may include any source from which accesses of web content can be determined. As previously mentioned, the accesses to the web content may be associated with user-specific information (user signals) describing the user accessing the web content. Two example sources 610 are shown in FIG. 6 : search engine logs 610 - 1 and browser toolbar logs 610 -K.
- Search engine logs 610 - 1 may represent logs, maintained by a search engine, that describe which links (to web content items) are selected by users that use the search engine.
- Browser toolbar logs 610 -K may represent logs, maintained by a toolbar installed in user browsers that describe which links (to web content items), are selected by users that use the browser.
- the user-specific information may be obtained with the express permission of the user.
- Access pattern logs 620 may represent an aggregation of the access pattern information received from access pattern information sources 610 . Each entry in access pattern logs 620 may represent the request of a cacheable web content item by a user. Access pattern logs 620 is illustrated, in FIG. 6 , as a table including the fields: resource identification field 630 , timestamp field 640 , and user information field 650 .
- Resource identification field 630 may store an identification for the content item that was accessed. Resource identification field 630 may include, for example, a URL or other resource identifier.
- Timestamp field 640 may include time/date information for each entry in access pattern logs 620 .
- User information field 650 may include available user-specific information about the user that accessed the resource for the entry.
- user information field 650 is stored as textual key-value pairs.
- access pattern logs 620 may include additional, fewer, or different fields than those illustrated in FIG. 6 .
- content items that will be used for cache pre-population may be determined (block 520 ).
- the content items may be determined based on web content access pattern information, such as that stored in access pattern logs 620 .
- the determined content items may be content that cache pre-population server 220 determines is likely to be accessed by users.
- a number of techniques could be used to determine content items that are likely to be accessed by users.
- FIG. 7 is diagram conceptually illustrating functional components 700 for one example implementation for determining content items for cache pre-population, as performed in block 520 .
- the components shown in FIG. 7 may be implemented by software and/or hardware of cache pre-population server 220 .
- Components 700 may include content item ranking component 710 and content items list 720 .
- Content item ranking component 710 may receive the content item access patterns from access pattern logs 620 and generate content items list 720 .
- Content items list 720 may represent the set of content items that cache pre-population server 220 may fetch and store from external servers (e.g., servers 210 and 215 ).
- the content items in content items list 720 may be a relatively large set of cacheable content items that are likely to be relevant to many different users. For example, each content item in access pattern logs 620 may be ranked on the relative frequency (rate) with which the content item is requested by all of the users represented in access pattern logs 620 .
- the top 10,000 (or another number) of these content items may be included in content items list 720 .
- the user base represented by access pattern logs 620 may be segmented in which combinations of the user-specific signals may be used to generate multiple user categories (e.g., “Windows OS users in NY City,” “males aged 30-35 on the US West Coast,” etc.). For each category, the most frequently accessed M (where M is an integer) number of content items may be included in content items list 720 .
- content items list 720 may include the content items corresponding to all of the categories. Additionally or alternatively, other techniques could be used to determine content items to fetch and store by cache pre-population server 220 .
- the access rates for the content items may be calculated directly from access pattern logs 620 or the rates can be inferred from the total number of accesses for each web content item, web page, or website, and the sub-resources referred to by those content items, web pages, or websites.
- content item ranking component 710 may determine, on a per-content item basis, the number of instances of a content item in access pattern logs 620 and divide that number by the time period covered by the access pattern logs 620 to obtain an observed rate of historical access.
- the size of the content items may additionally be taken into consideration.
- content item ranking component 710 may rank the content items using a score calculated as the rate of access of the content item divided by the size of the content item. A particular quantity of the highest ranking content items may then be assigned to content item list 720 . Taking the size of the content items into account may make more efficient use of the bandwidth needed to transmit the content items, since larger content items are penalized in favor of smaller content items. Alternatively or additionally, other factors may be considered when ranking the content items, such as a measure of quality relating to the content items, a measure of visibility relating to the content items, the duration until cache expiration of the content items, etc.
- FIG. 7 shows example components 700 , in other implementations, fewer, different, differently arranged, or additional components than depicted in FIG. 7 may be implemented. Additionally, or alternatively, one or more components 700 may perform one or more of the tasks described as being performed by one or more other components 700 .
- cache pre-population server 220 may fetch and store the determined content (e.g., the content items in content items list 720 ) (block 530 ).
- the determined content may be fetched from servers 210 / 215 using, for example, a crawler program or another program.
- the content item as well as the HTTP header information associated with the content item may be fetched from servers 210 / 215 and stored.
- the HTTP header information, associated with cacheability of the content item (e.g., the cache expiration date), may be particularly fetched and stored.
- cache pre-population server 220 may additionally include information about the copyright and redistribution laws that apply to each content item.
- FIG. 8 is a flowchart of an example process 800 for pre-populating a browser's cache.
- process 500 may be performed by one or more components of cache pre-population server 220 .
- the components shown in FIG. 8 may be implemented by software and/or hardware of cache pre-population server 220 .
- Process 800 may include receiving a request for cache pre-population (block 810 ).
- the request may include one or more user-specific signals.
- the user-specific signals may be looked-up based on a user or client associated with the request.
- the request may be associated with a number of different situations.
- browser 207 after initial installation, may contact cache pre-population server 220 to request an initial cache pre-population.
- the pre-population request may be associated with a user downloading an installation file for browser 207 .
- the content items associated with the pre-population request may be downloaded as part of the installation files.
- an installed browser 207 may occasionally transmit browser pre-population requests, such as by automatically transmitting a request or in response to an explicit user instruction. In this situation, the “pre-population” requests may be used to supplement an existing browser cache.
- Process 800 may further include determining a set of user-specific content items in response to the received request (block 820 ).
- the determined content items may be content items that are likely to be requested by the user via browser 207 .
- the content items may include a certain quantity of content items from content items list 720 that are likely to be requested by the user, as determined by an analysis of the user-specific signals received with or obtained from the request in block 810 .
- the determined content items may include a certain total quantity or total size of content items that correspond to the most frequently accessed content items as were previously accessed by all of the users represented in access pattern logs 620 .
- a number of techniques may be used to determine the content items in block 820 .
- a machine learning model e.g., a logistic regression model
- the model may then be used to predict the access rate for the website content items for the particular user.
- a user segmentation technique may be used, in which users are classified into categories and a set of content items are stored for each possible category.
- the user-specific signals may be used to assign the user to a category.
- the content items that were previously assigned to that category may then be determined, in block 820 , for the user associated with the request.
- FIG. 9 is diagram conceptually illustrating functional components 900 for one example implementation for determining user-specific content items in response to the received request, as performed in block 820 .
- the components shown in FIG. 9 may be implemented by software and/or hardware of cache pre-population server 220 .
- Components 900 may include user-specific content item determination component 910 and user-specific content items 920 .
- User-specific content item determination component 910 may receive the user-specific signals associated with the request and generate user-specific content items 920 .
- User-specific content item determination component 910 may use machine learning models to generate user-specific content items 920 .
- content item determination component 910 may use a logistic regression technique or another machine learning technique to learn the access rates for combinations of user-specific signals.
- maximum likelihood may be used to determine, for each content item, a base rate and a set of rate multipliers associated with each discrete value of the user-specific signals (e.g., gender, a location zip code, age range, OS type values, etc.).
- a base rate might be 10 ⁇ 8 accesses per second and the multipliers may be 2.04 for country equal to US, 0.32 for country equal to India, 1.07 for OS equal to Windows, etc.
- the total “score” for this particular content item for a user that is in the US and is using the Windows OS would be equal to 10 ⁇ 8 ⁇ 2.04 ⁇ 1.07.
- a set of the highest scoring content items from content item list 720 may be determined by content item determination component 910 to generate user-specific content items 920 .
- content item determination component 910 may use a segmentation technique in which combinations of the user-specific signals correspond to categories (e.g., “Windows OS users in NY City,” “males aged 30-35 on the US West Coast,” etc.).
- content item determination component 910 may determine the category of the user based on the user-specific signals. Each possible user category may be associated with a set of the highest scoring content items for the users in the category.
- FIG. 9 shows example components 900 , in other implementations, fewer, different, differently arranged, or additional components than depicted in FIG. 9 may be implemented. Additionally, or alternatively, one or more components 900 may perform one or more of the tasks described as being performed by one or more other components 900 .
- the set of user-specific content items may be transmitted to browser 207 (block 830 ).
- the set of user-specific content items may be used to pre-populate or supplement the cache of browser 207 .
- the content items may be transmitted to browser 207 in a number of different ways.
- the set of user-specific content items may have been determined as part of the user downloading and installing of browser 207 , immediately after installation, in the background the first time the user starts browser 207 , or at some other time. If the set of user-specific content items is determined as part of the user downloading and installing of browser 207 , the set of user-specific content items may be downloaded, for example, with the main installation file.
- the set of user-specific content items may also be downloaded as a separate file, as a series of files, by a separate intermediate server, etc.
- the file that contains the set of user-specific content items may be transmitted as a single large file or transmitted as a “trickle” (i.e., in the background with a low bandwidth connection) to the user in which content items are sent in priority order.
- the user of browser 207 or browser 207 itself, may decide how much bandwidth to devote to downloading the set of user-specific content items.
- the set of user-specific content items can be written to physical media (e.g., Blueray disc, hard disks, USB sticks, flash drives, etc.) and directly shipped to the user.
- the set of user-specific content items shipped to the user may be transmitted to browser 207 in a format identical to how the content items would be stored by browser 207 .
- the content items may be compressed and include the HTTP headers associated with the content items.
- Browser 207 or another component at client 205 , may store the content items in the browser's cache, such as cache 420 , potentially depending on available local disk space. If the cache has already reached its maximum capacity, downloading of the set of user-specific content items may be stopped or other actions may be taken (e.g., older content items may be deleted from the cache).
- cache pre-population server 220 may send a list of the content items (e.g., a list of URLs) to browsers 207 .
- Browsers 207 may then directly fetch the content items from servers 210 / 215 .
- Browsers 207 may, for example fetch the content items in a way that does not degrade the experience of the user (e.g., in the background when client 205 is not busy).
- An implementation, described above, may pre-populate or supplement a browser's cache with content items that are selected based on user-specific information. Pre-populating the browser's cache may increase the performance of the browser and improve the user's browsing experience.
- logic or a “component” that performs one or more functions.
- the terms “logic” or “component” may include hardware, such as a processor, an ASIC, or a FPGA, or a combination of hardware and software (e.g., software running on a general purpose processor—creating a specific purpose processor).
Abstract
Description
Claims (26)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/232,121 US8725849B1 (en) | 2011-04-11 | 2011-09-14 | Browser cache pre-population |
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US201161473895P | 2011-04-11 | 2011-04-11 | |
US13/232,121 US8725849B1 (en) | 2011-04-11 | 2011-09-14 | Browser cache pre-population |
Publications (1)
Publication Number | Publication Date |
---|---|
US8725849B1 true US8725849B1 (en) | 2014-05-13 |
Family
ID=50635773
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/232,121 Active 2032-04-13 US8725849B1 (en) | 2011-04-11 | 2011-09-14 | Browser cache pre-population |
Country Status (1)
Country | Link |
---|---|
US (1) | US8725849B1 (en) |
Cited By (18)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20120221932A1 (en) * | 2011-02-24 | 2012-08-30 | George Gleadall | Rendering web content using pre-caching |
US20150026288A1 (en) * | 2013-07-17 | 2015-01-22 | Electronics And Telecommunications Research Institute | Method for accelerating web server by predicting hypertext transfer protocol (http) requests and web server enabling the method |
US20160191650A1 (en) * | 2013-06-06 | 2016-06-30 | Yahoo Inc. | Method and system for dynamic content pre-caching |
US9485640B2 (en) | 2011-03-28 | 2016-11-01 | Google Inc. | Smart cache warming |
US9582603B1 (en) * | 2012-02-27 | 2017-02-28 | Amazon Technologies, Inc. | Managing preloading of data on client systems |
US20170105049A1 (en) * | 2015-10-13 | 2017-04-13 | Home Box Office, Inc. | Resource response expansion |
CN109117447A (en) * | 2017-06-22 | 2019-01-01 | 深圳联友科技有限公司 | A kind of server data access method and device of cache web pages |
US10218786B2 (en) * | 2013-01-16 | 2019-02-26 | Nokia Corporation | Web content communication |
US20190116218A1 (en) * | 2017-10-17 | 2019-04-18 | Microsoft Technology Licensing, Llc | Personalization framework |
US10446142B2 (en) | 2015-05-20 | 2019-10-15 | Microsoft Technology Licensing, Llc | Crafting feedback dialogue with a digital assistant |
US10637962B2 (en) | 2016-08-30 | 2020-04-28 | Home Box Office, Inc. | Data request multiplexing |
US10656935B2 (en) | 2015-10-13 | 2020-05-19 | Home Box Office, Inc. | Maintaining and updating software versions via hierarchy |
US10698740B2 (en) | 2017-05-02 | 2020-06-30 | Home Box Office, Inc. | Virtual graph nodes |
WO2020198178A1 (en) * | 2019-03-28 | 2020-10-01 | Mcafee, Llc | Cached file reputations |
WO2021230786A1 (en) * | 2020-05-15 | 2021-11-18 | Telefonaktiebolaget Lm Ericsson (Publ) | Method of filtering data traffic sent to a user device |
US11190572B1 (en) * | 2019-07-31 | 2021-11-30 | United Services Automobile Association (Usaa) | Method and apparatus for accessing data for large events with a smart mobile application |
US11588898B2 (en) * | 2018-12-06 | 2023-02-21 | Telefonaktiebolaget Lm Ericsson (Publ) | Controlling communication session handling at a user equipment using a script generated by an application server |
US11640429B2 (en) | 2018-10-11 | 2023-05-02 | Home Box Office, Inc. | Graph views to improve user interface responsiveness |
Citations (8)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6182133B1 (en) * | 1998-02-06 | 2001-01-30 | Microsoft Corporation | Method and apparatus for display of information prefetching and cache status having variable visual indication based on a period of time since prefetching |
US20030004995A1 (en) * | 2001-06-29 | 2003-01-02 | International Business Machines Corporation | Graphical web browsing interface for spatial data navigation and method of navigating data blocks |
US7047485B1 (en) * | 1999-11-10 | 2006-05-16 | International Business Machines Corporation | Intelligent pre-caching on a network |
US20090234947A1 (en) * | 2004-09-23 | 2009-09-17 | Decasper Dan S | Advanced content and data distribution techniques |
US20100161831A1 (en) * | 2008-12-19 | 2010-06-24 | David Haas | Optimizing content and communication in multiaccess mobile device exhibiting communication functionalities responsive of tempo spatial parameters |
US20110040718A1 (en) * | 2009-08-13 | 2011-02-17 | Yahoo! Inc. | System and method for precaching information on a mobile device |
US20110238921A1 (en) * | 2010-03-26 | 2011-09-29 | Microsoft Corporation | Anticipatory response pre-caching |
US20120246257A1 (en) * | 2011-03-22 | 2012-09-27 | Research In Motion Limited | Pre-Caching Web Content For A Mobile Device |
-
2011
- 2011-09-14 US US13/232,121 patent/US8725849B1/en active Active
Patent Citations (8)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6182133B1 (en) * | 1998-02-06 | 2001-01-30 | Microsoft Corporation | Method and apparatus for display of information prefetching and cache status having variable visual indication based on a period of time since prefetching |
US7047485B1 (en) * | 1999-11-10 | 2006-05-16 | International Business Machines Corporation | Intelligent pre-caching on a network |
US20030004995A1 (en) * | 2001-06-29 | 2003-01-02 | International Business Machines Corporation | Graphical web browsing interface for spatial data navigation and method of navigating data blocks |
US20090234947A1 (en) * | 2004-09-23 | 2009-09-17 | Decasper Dan S | Advanced content and data distribution techniques |
US20100161831A1 (en) * | 2008-12-19 | 2010-06-24 | David Haas | Optimizing content and communication in multiaccess mobile device exhibiting communication functionalities responsive of tempo spatial parameters |
US20110040718A1 (en) * | 2009-08-13 | 2011-02-17 | Yahoo! Inc. | System and method for precaching information on a mobile device |
US20110238921A1 (en) * | 2010-03-26 | 2011-09-29 | Microsoft Corporation | Anticipatory response pre-caching |
US20120246257A1 (en) * | 2011-03-22 | 2012-09-27 | Research In Motion Limited | Pre-Caching Web Content For A Mobile Device |
Cited By (36)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9065793B2 (en) * | 2011-02-24 | 2015-06-23 | Cbs Interactive Inc. | Rendering web content using pre-caching |
US20120221932A1 (en) * | 2011-02-24 | 2012-08-30 | George Gleadall | Rendering web content using pre-caching |
US10171615B1 (en) | 2011-03-28 | 2019-01-01 | Google Llc | Smart cache warming |
US9485640B2 (en) | 2011-03-28 | 2016-11-01 | Google Inc. | Smart cache warming |
US9582603B1 (en) * | 2012-02-27 | 2017-02-28 | Amazon Technologies, Inc. | Managing preloading of data on client systems |
US11677853B2 (en) | 2012-02-27 | 2023-06-13 | Amazon Technologies, Inc. | Managing preloading of data on client systems |
US10218786B2 (en) * | 2013-01-16 | 2019-02-26 | Nokia Corporation | Web content communication |
US20160191650A1 (en) * | 2013-06-06 | 2016-06-30 | Yahoo Inc. | Method and system for dynamic content pre-caching |
US9467528B2 (en) * | 2013-07-17 | 2016-10-11 | Electronics And Telecommunications Research Institute | Method for accelerating web server by predicting hypertext transfer protocol (HTTP) requests and web server enabling the method |
US20150026288A1 (en) * | 2013-07-17 | 2015-01-22 | Electronics And Telecommunications Research Institute | Method for accelerating web server by predicting hypertext transfer protocol (http) requests and web server enabling the method |
US10446142B2 (en) | 2015-05-20 | 2019-10-15 | Microsoft Technology Licensing, Llc | Crafting feedback dialogue with a digital assistant |
US10623514B2 (en) * | 2015-10-13 | 2020-04-14 | Home Box Office, Inc. | Resource response expansion |
US10277704B2 (en) | 2015-10-13 | 2019-04-30 | Home Box Office, Inc. | Graph for data interaction |
US10412187B2 (en) | 2015-10-13 | 2019-09-10 | Home Box Office, Inc. | Batching data requests and responses |
US11886870B2 (en) | 2015-10-13 | 2024-01-30 | Home Box Office, Inc. | Maintaining and updating software versions via hierarchy |
US20170105049A1 (en) * | 2015-10-13 | 2017-04-13 | Home Box Office, Inc. | Resource response expansion |
US10656935B2 (en) | 2015-10-13 | 2020-05-19 | Home Box Office, Inc. | Maintaining and updating software versions via hierarchy |
US11979474B2 (en) | 2015-10-13 | 2024-05-07 | Home Box Office, Inc. | Resource response expansion |
US10708380B2 (en) | 2015-10-13 | 2020-07-07 | Home Box Office, Inc. | Templating data service responses |
US11533383B2 (en) | 2015-10-13 | 2022-12-20 | Home Box Office, Inc. | Templating data service responses |
US11005962B2 (en) | 2015-10-13 | 2021-05-11 | Home Box Office, Inc. | Batching data requests and responses |
US11019169B2 (en) | 2015-10-13 | 2021-05-25 | Home Box Office, Inc. | Graph for data interaction |
US10637962B2 (en) | 2016-08-30 | 2020-04-28 | Home Box Office, Inc. | Data request multiplexing |
US11360826B2 (en) | 2017-05-02 | 2022-06-14 | Home Box Office, Inc. | Virtual graph nodes |
US10698740B2 (en) | 2017-05-02 | 2020-06-30 | Home Box Office, Inc. | Virtual graph nodes |
CN109117447A (en) * | 2017-06-22 | 2019-01-01 | 深圳联友科技有限公司 | A kind of server data access method and device of cache web pages |
US11075975B2 (en) * | 2017-10-17 | 2021-07-27 | Microsoft Technology Licensing, Llc | Personalization framework |
US20190116218A1 (en) * | 2017-10-17 | 2019-04-18 | Microsoft Technology Licensing, Llc | Personalization framework |
US11640429B2 (en) | 2018-10-11 | 2023-05-02 | Home Box Office, Inc. | Graph views to improve user interface responsiveness |
US11588898B2 (en) * | 2018-12-06 | 2023-02-21 | Telefonaktiebolaget Lm Ericsson (Publ) | Controlling communication session handling at a user equipment using a script generated by an application server |
US11176249B2 (en) | 2019-03-28 | 2021-11-16 | Mcafee, Llc | Cached file reputations |
WO2020198178A1 (en) * | 2019-03-28 | 2020-10-01 | Mcafee, Llc | Cached file reputations |
US11190572B1 (en) * | 2019-07-31 | 2021-11-30 | United Services Automobile Association (Usaa) | Method and apparatus for accessing data for large events with a smart mobile application |
WO2021230786A1 (en) * | 2020-05-15 | 2021-11-18 | Telefonaktiebolaget Lm Ericsson (Publ) | Method of filtering data traffic sent to a user device |
US20230216932A1 (en) * | 2020-05-15 | 2023-07-06 | Telefonaktiebolaget Lm Ericsson (Publ) | Method of Filtering Data Traffic Sent to a User Device |
US11824952B2 (en) * | 2020-05-15 | 2023-11-21 | Telefonaktiebolaget Lm Ericsson (Publ) | Method of filtering data traffic sent to a user device |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US8725849B1 (en) | Browser cache pre-population | |
JP6646781B2 (en) | System, method and storage medium for improving access to search results | |
US10650071B2 (en) | Search and retrieval of keyed data maintained using a keyed database | |
US9141722B2 (en) | Access to network content | |
EP2653987B1 (en) | Displaying web pages without downloading static files | |
US20190080019A1 (en) | Predicting Non-Observable Parameters for Digital Components | |
US20140122697A1 (en) | Providing content to linked devices associated with a user | |
US20120284597A1 (en) | Predicting user navigation events | |
US9064264B2 (en) | Predicting visibility of content items | |
US8954524B1 (en) | Access to network content | |
KR20130028916A (en) | Customizing content displayed for a user based on user preferences of another user | |
US20120005017A1 (en) | Method and system for providing advertisements | |
US9898748B1 (en) | Determining popular and trending content characteristics | |
US9336285B2 (en) | Presenting content in accordance with a placement designation | |
US10341457B2 (en) | Caching system | |
JP2021526245A (en) | Trigger for locational expansion based on inferred intent | |
US9460220B1 (en) | Content selection based on target device characteristics | |
US10726021B2 (en) | Optimized mobile search | |
US9258279B1 (en) | Bookmarking content for users associated with multiple devices | |
US20080033918A1 (en) | Systems, methods and computer program products for supplemental data communication and utilization | |
US20190124082A1 (en) | Cross Device User Identification | |
US20140289219A1 (en) | Ranking search engine results | |
WO2022199494A1 (en) | User interest-based content recommendation method, and terminal device | |
US10887407B2 (en) | Providing fallback results with a front end server | |
CN112204546A (en) | Causal selection preferences |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:LLOYD, MATTHEW;REEL/FRAME:026903/0130Effective date: 20110913 |
|
FEPP | Fee payment procedure |
Free format text: PAYOR NUMBER ASSIGNED (ORIGINAL EVENT CODE: ASPN); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044277/0001Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551)Year of fee payment: 4 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 8TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1552); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 8 |
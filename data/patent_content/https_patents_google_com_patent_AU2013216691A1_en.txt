AU2013216691A1 - System and method for image processing - Google Patents
System and method for image processing Download PDFInfo
- Publication number
- AU2013216691A1 AU2013216691A1 AU2013216691A AU2013216691A AU2013216691A1 AU 2013216691 A1 AU2013216691 A1 AU 2013216691A1 AU 2013216691 A AU2013216691 A AU 2013216691A AU 2013216691 A AU2013216691 A AU 2013216691A AU 2013216691 A1 AU2013216691 A1 AU 2013216691A1
- Authority
- AU
- Australia
- Prior art keywords
- image
- sub
- images
- map
- arrangement
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Granted
Links
Abstract
A computer implemented method of processing an image for display on a mobile communication device includes extracting a portion of an image based on an image map. The image map relates to the portion of the image. The method also includes generating a document that comprises the extracted portion of the image and transmitting the generated document to a remote device for display. The method may also include assigning a selectable link to the extracted portion of the image and receiving a request from the remote device for an initial document having the image and image map. Additionally, the method may include storing in a database the generated document and transmitting the stored generated document in response to future requests for the initial document.
Description
AUSTRALIA Regulation 3.2 Patents Act 1990 Complete Specification Standard Patent APPLICANT: Google Inc. Invention Title: SYSTEM AND METHOD FOR IMAGE PROCESSING The following statement is a full description of this invention, including the best method of performing it known to me: SYSTEM AND METHOD FOR IMAGE PROCESSING TECHNICAL FIELD This application relates to processing an image for display. 5 BACKGROUND As computers and computer networks become more and more able to access a variety of graphical information, people are demanding more ways to obtain that information. Specifically, people now expect to have access, on the road, in the home, or in the office, to information previously available only from 10 a permanently-connected personal computer hooked to an appropriately provisioned network. They want images of current people in the news from their cell phones, e-mail with photographs of family from their personal digital assistants (PDAs), and up-to-date documents with embedded pictures from their palm tops. They also want all of this information when traveling, whether 15 locally, domestically, or internationally, in an easy-to-use, portable device. Portability generally requires a device small in size, which in turn limits the screen area available for displaying content. This limitation may require the portable device to reduce images to an illegible or unrecognizable state when displayed on a small screen. Alternatively, the image may be displayed at a 20 larger size, but a user must scroll to see some parts of the image. Additionally, some images may be associated with image maps that defined portions of the image as "hotspots," or links, a user may select to perform an action, such as navigating to a web page. Some current portable devices do not maintain the link with the defined portions of the image. Instead, 1 the devices separate the links from the image and list them as textual links outside the image. These separated links, however, are no longer associated with the context provided by the image to guide the user in selecting the links. The separation of the links from the graphical context can confuse the user as to the 5 content of the links. SUMMARY This document discloses methods and systems for processing an image for display on a wireless device. In accordance with one aspect, a computer-implemented method of 10 processing an image for display on a mobile communication device is disclosed. The method includes extracting a portion of an image based on an image map, which relates to the portion of the image, generating a document that comprises the extracted portion of the image, and transmitting the generated document to a remote device for display. Additionally, a selectable link may also be assigned to 15 the extracted portion of the image. In one implementation, the method may include receiving a request from the remote device for an initial document that has the image and image map and storing the generated document in a database. The stored generated document may be transmitted in response to future requests for the initial document. The 20 request may also include information associated with display capabilities of the remote device. The method may include modifying dimensions of the extracted portion of the image based on the display capabilities. In addition, the method may include cropping the extracted portion of the image based on the display capabilities. 2 In another implementation, the method may also include retrieving the initial document from a remote web server. The image map may be selected by organizing elements in the initial document into a document object model tree and traversing the tree to locate the image map. The image map may also be 5 selected by serially parsing elements in the initial document to locate the image map. Content of the image map may be generated using a facial recognition algorithm, where the content includes coordinates used to specify the portion of the image for extraction. Also, content of the image map may be generated using an optical character recognition algorithm, where the content comprises 10 coordinates used to specify the portion of the image for extraction. As one example, the image map includes a markup language tag used to specify that the extracted portion of the image should be sized for display on a mobile device browser. An area adjacent to the extracted portion may also be extracted so that a combination of the area and portion are a predetermined size 15 or shape. Also, image data may be generated for display in an area adjacent to the extracted portion so that a combination of the generated image data and the extracted portion are a predetermined size or shape. In yet another implementation, a second portion of the image may be extracted based on the image map and the second portion may be included in the 20 generated document for display on the remote device. A position in which the portions are displayed is based on the image map, where the image map further includes position indicators. Also a position in which the portions are displayed may be based on the content of the image. The second portion and the first portion may be a same size and shape. 3 In accordance with another aspect, a computer implemented system for selecting portions of an image for display on a mobile device is disclosed. The system includes a parser to select an image and an image map from a first electronic document, means for extracting a portion of the image, wherein a 5 position and perimeter of the portion are based on the image map, a document generator to generate a second electronic document comprising the extracted portion of the image, and an interface to transmit the second electronic document to a remote device. In accordance with yet another aspect, a system for extracting a portion 10 of an image for display on a mobile device is disclosed. The system includes an extractor to divide an image into segments based on coordinates associated with the image, a document generator to encode at least one of the segments for display in an electronic document, and an interface to transmit the electronic document to a remote device. 15 The systems and techniques described here may provide one or more of the following advantages. A system may select and extract portions from an image so that a user may more conveniently view the image on a portable device. A system may extract portions of interest in the images to display. Also, a system may enable a remote device to maintain a graphical context for links 20 used within an image map. This maintenance of the graphical context may be possible even if the remote device does not have an algorithm to display image maps. Additionally, the system can be implemented with portable systems, such as cellular telephones, having limited resources, such as memory and processing power. 4 The details of one or more implementations are set forth in the accompanying drawings and the description below. Other features, objects, and advantages of the implementations will be apparent from the description and drawings, and from the claims. Throughout the specification the term "comprising" shall be understood to have a 5 broad meaning similar to the term "including" and will be understood to imply the inclusion of a stated integer or step or group of integers or steps but not the exclusion of any other integer or step or group of integers or steps. This definition also applies to variations on the term "comprising" such as "comprise" and "comprises". The reference to any prior art in this specification is not, and should not be taken as, an 10 acknowledgement or any form of suggestion that the prior art forms part of the common general knowledge in Australia. DESCRIPTION OF DRAWINGS These and other aspects will now be described in detail with reference to the following 15 drawings. FIG. I is a schematic diagram of a system for processing an image to be displayed on a wireless communication device according to one implementation. FIG. 2 is a schematic diagram of an image before and after processing by the system of FIG. I according to one implementation. 20 FIG. 3 is a block diagram of the system of FIG. I showing more detaiL FIG. 4 is a flow chart of exemplary operations that can be performed when processing an image to be displayed on the wireless communication device. FIG. 5 is an exemplary document object model (DOM) tree of a web page including an image. 25 FIG. 6 is a schematic diagram showing hypertext markup language (HTML) code processed for display on the wireless communication device according to one implementation. FIG. 7 is a schematic diagram of a generic computer system. Like reference svmbols in the various drawings indicate like elements. 5 DETAILED DESCRIPTION FIG 1 is a schematic diagram of a system 100 for processing an image 102 to be displayed on a wireless communication device 104 according to one implementation. The processing includes extracting a portion 106A of the 5 image 102 based on an image map (not shown) that specifies the portion 106A of the image 102 to be extracted. The processing further includes generating a document that includes the portion 106A and transmitting the generated document to the remote wireless communication device 104, as represented by the arrow 108. 10 The image 102 may be contained in an initial document having a format, such as a word processing document, a stand alone image file, an electronic mail message, or a web page. In one implementation, the initial document contains an image with an associated image map. The image map may include information, such as coordinates of opposite corners of a rectangle that specify 15 one or more areas within the image that have an action associated with them. For example, the image portion 106A of FIG 1 depicts the northeastern section of the United States. A user may select this image portion 106A and the browser may be directed to a website describing tourism in the Northeast. In some implementations, the processing of the document is initiated by a 20 request, represented by the arrow 110, from the remote wireless communication device 104 for the initial document having the image 102. An image processing system 112 receives the request. A transcoder 114 in the image processing system 112 processes the image 102 and the image processing system 112 transmits the generated document containing the image portion 106A to the 25 wireless communication device 104. 6 In other implementations, the image processing system 112 sends the generated document to the wireless communication device 104 without a request from the wireless communication device 104. For example, an image in an electronic mail message may be processed by the image processing system 112 5 and transmitted to the wireless communication device 104 without being requested by the wireless communication device 104. In some implementations, the image processing system 112 retrieves the initial document from a remote web server 116, as represented by the arrow 118. For example, a user of the wireless communication device 104 may view a list of 10 web page links retrieved from a web search. The list may include a web page link specifying a web page at the remote web server 116 such as: http://www.remotewebserver.com/initialdocument.html. The image processing system 112 may modify the actual Uniform Resource Locator (URL) accessed when the user selects the web link above so that the link 15 is first directed to the image processing system 112, such as in the following URL: http://www.google.com/?u=www.remotewebserver.com/initial-document.html. Here, "www.google.com" is the network address of the image processing system 112. The "?u=www.remotewebserver.com/initialdocument.html" 20 parameter in the URL directs the image processing system 112 to request from the remote web server 116 the initial document located at "www.remotewebserver.com/initialdocument.html," as represented by the arrow 120. The image processing system 112 processes the initial document and transmits the generated document to the wireless communication device 104. 7 FIG 2 is a schematic diagram of the image 102 before and after processing by the system of FIG 1 according to one implementation. For example, the initial document 202 may be a web page describing tourist destinations in different regions of the United States (US). FIG 2 shows an 5 example of an initial document 202 prior to processing and a generated document 204 after processing. The image 102 in the initial document 202 includes an image map containing several areas 206A-E. The areas 206A-E indicate regions of the image 102 that have an action associated with them, such as a hyperlink to another web page, a hyperlink to an electronic mail address, or 10 a hyperlink to a File Transfer Protocol (FTP) site. For example, selecting the Northeast area 206A may take the user to another web page that lists tourist destinations in the northeastern states of the US or it may initiate an electronic mail message with a "To:" field directed to a member of the Northeast US board of tourism. Alternatively, the areas 206A-E 15 may represent regions of particular interest in the image 102. For example, an image of a person may have the person's face as a defined area. Additionally, an image of a group of people may have a defined area around a particular person if the image is accompanied by text mentioning that person. The generated document 204 contains the image portion 106A corresponding to the area 206A 20 in the initial document 202. In the implementation of FIG 2, the generated document 204 also contains other image portions 106B-E corresponding to the other areas 206B-E in the image 102. In the implementation shown in FIG 2, the transcoder 114 in the image processing system 112 may extract the image portions 106A-E from the 25 image 102 using the areas 206A-E in the image map. Particularly, each of the 8 image portions 106A-E corresponds to each of the areas 206A-E in the image map, respectively. FIG. 3 is a block diagram of the system 100 of FIG. 1 showing more detail. FIG 3 shows the image processing system 112 and devices in 5 communication with it. The image processing system 112 may be implemented, for example, as part of an Internet search provider's general system. The image processing system 112 is provided with an interface 352 to allow communications with a network 358, such as the Internet. The image processing system 112 may communicate with various devices, such as the 10 wireless communication device 104 and the remote web server 116. The communication flow for any device may be bidirectional so that the image processing system 112 may receive information, such as commands, from the devices, and may also send information to the devices. Commands and requests received from devices may be provided to a 15 request processor 366, which may interpret a request, associate it with predefined acceptable requests, and pass it on, such as in the form of a command to another component of the image processing system 112 to perform a particular action. For example, in an implementation where the image processing system 112 is part of the Internet search provider's general system, the request 20 may include a search request. The request processor 366 may cause a search engine 370 to generate search results corresponding to the search request. The search engine 370 may use data retrieval and search techniques like those used by the Google PageRankTM system. The results generated by the search engine 370 may then be provided back to the original requester using a response 25 formatter 368, which carries out necessary formatting on the results. 9 The search engine 370 may rely on a number of other components for its proper operation. For example, the search engine 370 may refer to an index 372 of web sites instead of searching the web sites themselves each time a request is made, so as to make the searching much more efficient. The index 372 may be 5 populated using information collected and formatted by a web crawler 376, which may continuously scan potential information sources for changing information. The transcoder 114 may access a system storage 374. The system storage 374 may be one or more storage locations for files needed to operate the system, 10 such as applications, maintenance routines, and management and reporting software. In some implementations, the transcoder 114 may store the generated document 204 in the system storage 374. The image processing system 112 may transmit the stored generated document 204 in response to future requests for the initial document 202. 15 The transcoder 114 may include several components used to process the initial document 202 and the image 102. A parser 302 may select the image 102 and an image map 304 associated with the image 102 from the initial document 202. The parser 302 may decode the entire initial document 202 using an application programming interface (API) to access the content of the initial 20 document 202. For example, if the initial document 202 is a web page, the parser 302 may access the elements, or document objects, of the web page using a document object model (DOM) API. Using the DOM API, the parser 302 may load the document objects from the initial document 202 into memory using a variety of data structures, such as an array, a queue, or a tree. The DOM may 25 allow the document objects to be accessed randomly, or in an order different 10 from the order in which they are specified in the initial document 202. Alternatively, the parser 302 may input the initial document 202 as a series of characters or character strings. The characters or strings may be serially compared with a set of predefined identifiers that specify the existence of an 5 image and its associated image map. The image map 304 may contain one or more markup language tags 305 that define the image map 304. For example, hypertext markup language (HTML) uses the tag "<img>" for an image and "<map>" for an image map. The <map> tag may contain <area> tags that specify the coordinates and 10 hyperlink of each of the areas 206A-E in the image 102 using a "coords" attribute and an "href' attribute, respectively. The <area> tag may also contain a "shape" attribute specifying the shape of the area in the image 102, such as a rectangle, a circle, or a polygon. If the image has an associated image map, the <img> tag may include a "usemap" attribute. When parsing the document 15 content randomly, such as with a DOM, the "usemap" attribute can be used to locate an image map associated with the image. The "usemap" attribute may precede the name of the image map 304, which may be used to locate and access the image map 304 within a data structure, such as the DOM tree 500 shown in FIG. 5. 20 The transcoder 114 may also include an extractor 306 that uses the coordinates contained in the image map 304 to extract the image portion 106A from the image 102. The coordinates may indicate a position and a perimeter of the image portion 106A extracted. The coordinates may be components of a markup language, such as attributes within an HTML tag as described above. 11 In some implementations, a map content generator 310 may provide coordinates 312 of image portions to the extractor 306. The map content generator 310 may contain a facial recognition (FR) module 314 and an optical character recognition (OCR) module 316 that determine the coordinates of faces 5 and text, respectively, within an image or an image portion. The map content generator 310 may contain other modules, such as a module that recognizes areas of high contrast to locate objects within an image (e.g. a dark building against a light colored sky). The coordinates 312 may also supplement or modify the coordinates located in the image map 304. For example, the FR 10 module 314 may determine coordinates of a face located in an image portion defined by an image map. Alternatively, the map content generator 310 may provide the coordinates 312 for an image that does not have an associated image map included in the initial document 202. For example, the OCR module 316 may determine coordinates of text located in an image that has no image map, 15 generate an image map for the image, and populate the image map with the coordinates 312. The transcoder 114 may make further modifications to the extracted portions 106A-E before incorporating the portions 106A-E into the generated document 204. For example, the request 110 from the wireless communications 20 device 104 may include display capability information 318 regarding the physical capabilities of the display in the wireless communication device 104, such as the display's dimensions and resolution. The transcoder 112 may use the display capability information 318 to determine that the image portion 106A is, for example, either too large or too 25 detailed for the wireless communication device 104 to display effectively to the 12 user. In this situation, the map content generator 310 may use modules, such as the FR module 314 and the OCR module 316, to focus on relevant information in the image portion 106A, such as a face or text. The output of the map content generator 310 may include the coordinates 312 that are used by the extractor 306 5 to define how to process the extracted portions. For example, the coordinates 312 may define an area of the image portion 106A that should be cropped. Cropping may include shifting an image so that it is centered on a face or text, and removing surrounding image data so that the resulting cropped image displays at a smaller size. The coordinates 312 may include points along 10 an x and a y axis, where the points define boundaries of the cropped image. In another implementation, the display capability information 318 may be used to determine coordinates 312 generated by the map content generator 310. For example, if the display capability information 318 indicates the image 102 is too large or too detailed for the wireless communication 15 device 104 to display, the FR module 314 and the OCR module 316 could generate the coordinates 312 defining relevant information in the image 102, as described above. In another implementation, the coordinates 312 may be used by the extractor 306 to modify the dimensions of the image 102 or the image 20 portion 106A by magnifying or shrinking the image 102 or the image portion 106A. For example, the FR module 314 or the OCR module 316 may locate a face or text, respectively, in the image 102 and may generate coordinates that define an area around these features. The map content generator 310 may generate a magnification or shrinking factor using the display capability 25 information 318 to determine a size to display the image 102 on the wireless 13 communication device 104. For example, each pixel of the shrunken image may be a weighted sum of linearly corresponding pixels, such as in the following equation: P = P x 3/5+P x 2/5. 5 The weights may be associated with the shrinking factor. For instance, the shrinking factor may be used to look up the weights in an index, or it may be used as a multiplier for a set of weights to produce the appropriate final weights for the shrinking process. For example, the display capability information 318 may contain a 10 resolution of the display used by the wireless communication device 104, such as 480 pixels by 600 pixels. The map content generator 310 may provide a shrinking factor that reduces an image larger than 480 pixels by 600 so that it can fit within the resolution displayed on the wireless communication device 104. 15 The coordinates 312 output from the map content generator 310 may include the points along the x and y axes and the magnification or shrinking factor. The extractor 306 may use the coordinates 312 to determine how to process the image 102 or the image portion 106A. For example, if the coordinates 312 include a shrinking factor, the extractor 306 may selectively 20 remove pixels in the image 102 or the image portion 106A. In some implementations, the map content generator 310 ensures that extracted portions are of a predetermined size and shape. For example, the map content generator 310 may ensure that image data adjacent to a circular image portion is extracted so that the image portion 106A is a rectangular shape. In 25 other implementations, an image data generator 320 generates image data in an 14 area adjacent to an image portion to ensure that the image portion is a predetermined size and shape. For example, the image data generator 320 may add a black rectangular background behind a circular image portion to ensure that the image portion 106A is rectangular. Additionally, the image data 5 generator 320 may determine the color values of the image portion 106A and generate contrasting or complimenting image data for the background behind the image portion 106A. The transcoder 114 may also include a document generator 322. In one implementation, the document generator 322 creates the generated 10 document 204 using the image portion 106A provided by the extractor 306 and content from the initial document 202. For example, the area 206A within the image 102 may have an associated HTML attribute specifying a hyperlink to another web page. The document generator 322 may add a selectable link 324 to the image portion 106A in the generated document 204 corresponding to the 15 hyperlink associated with the area 206A in the initial document 202. If the hyperlink is a link to another web page, the selectable link 324 within the generated document 204 may contain the network address of the image processing system 112. In a manner similar to the search list described above, the hyperlink first directs the web page request to the image processing 20 system 112, where the image processing system 112 will retrieve the web page and forward it to the wireless communication device 104 after processing the web page. For example, the initial document 202 may contain the following hyperlink to another document at a second remote web server 326: http://www.secondwebserver.com/anotherdocument.html. 15 The document generator 322 modifies the hyperlink so that it is first directed to the image processing system 112, such as in the following URL: http://www.google.com/?u=www.secondwebserver.com/anotherdocument.html 5 FIG. 4 is a flow chart of exemplary operations 400 that can be performed when processing an image to be displayed on the wireless communication device 104. For example, the operations 400 can be performed in the image processing system 112. A processor executing instructions stored in a computer program product can perform the operations 400. The operations 400 may begin 10 in optional step 402 with a request for an initial document from a remote device. For example, the user of the wireless communication device 104 may send the request 110 to the image processing system 112 for the initial document 202. In optional step 404, the image processing system 112 receives the request for the initial document. In optional step 406, if a generated document 15 corresponding to the initial document already exists the operations 400 move to step 426. If the generated document does not yet exist the operations 400 move to optional step 408. For example, the image processing system 112 may use an indexed list of generated documents to quickly determine if a generated document exists. In some implementations, multiple generated documents may 20 be stored for each initial document corresponding to possible display capabilities of wireless communication devices. For example, the display capability information 318 may indicate that the wireless communication device 104 is a cell phone with a display resolution of 128 by 128 pixels. This information 318 may be stored along with a document identifier when a document is generated. 25 Subsequent requests may be compared to the document identifier and the display 16 capability information to determine if a new document should be generated. In the case described above, if a different or the same device with a display resolution of 128 by 128 pixels requests the same initial document, the index may be queried to determine if the initial document has a version associated with 5 this pixel resolution. If so, this document can be returned without generating a new document. In optional step 408, the initial document may be requested from the remote web server. In optional step 410, the remote web server receives the request, and, in optional step 412, the remote web server sends a response to the 10 request including the initial document. For example, the image processing system 112 requests a web page, such as www.cnn.com, from the remote web server 116 that hosts the CNNTM web page. The CNNTM web server 116 sends a response that includes the web page for www.cnn.com to the image processing system 112. 15 In step 414, one or more portions of an image contained in the initial document are extracted based on an image map that may be contained in the initial document. For example, the parser 302 within the transcoder 114 identifies the image 102 and the image map 304 contained in the initial document 202. The extractor 306 extracts the image portion 106A using the 20 image map 304. Alternatively, the image map 304 may not be contained in the initial document 102. Instead, the map content generator 310 may generate the image map used by the extractor 306 to extract the image portion 106A. In optional step 416, selectable links are assigned to the image portions. For example, the transcoder 114 may assign the selectable link 324 to the image 25 portion 106A, such as by assigning a hyperlink to the "href" attribute of an 17 anchor <a> tag placed around the <img> tag associated with the image portion 106A. In optional steps 418 and 420, content of the image map may be generated using a facial recognition algorithm and an optical character 5 recognition algorithm, respectively. For example, the FR module 314 or the OCR module 316 or both may provide the coordinates 312 to the extractor 306 of an image portion that focuses on a face or text, respectively. Steps 414 through 420 may occur in a different order. For example, facial recognition and optical character recognition may occur before the image portion is extracted. 10 In step 422, a document including the image portion is generated for the remote device. For example, the document generator 322 creates the generated document 204 using the extracted image portion 106A and the initial document 202. In optional step 424, the generated document is stored in a database that 15 may be accessed in response to subsequent requests for the initial document. For example, the transcoder 114 may store the generated document 204 in the system storage 374. In some implementations, the transcoder 114 may store along with the generated document 204 the display capability information 318 used to modify the images in the generated document 204. 20 In step 426, the generated document is transmitted to the remote device. For example, the interface 352 of the image processing system 112 transmits the generated document 204 through the network 358 to the wireless communication device 104. The operations 400 may complete in step 428, where the generated document is displayed on the remote device. 18 FIG. 5 is an exemplary document object model (DOM) tree 500 of a web page including an image. FIG. 5 shows an exemplary DOM tree 500 for the initial document 202. In one implementation, the initial document 202 is in a hypertext markup language (HTML) format. Each HTML tag in the initial 5 document 202 may be represented by a node in the tree 500. In some implementations, the parser 302 parses the initial document 202 into the DOM tree 500 and traverses the tree 500 to locate the image, the image map, or both. In the example of FIG. 5, the DOM tree 500 contains an <html> node 10 510, a <head> node 522, and a <body> node 524 representing an <html> tag, a <head> tag, and a <body> tag, respectively, in the initial document 202. The <body> node 524 has a child <map> node 532. The <map> node 532 and its children may specify the coordinates of the areas 206A-E used to extract the image portions. The <body> node 524 also has a child <img> 15 node 534. The <img> node 534 is a placeholder for the image 102. The "src" attribute 536 of the <img> node 534 indicates the location and name of the image 102. The "usemap" attribute 538 of the <img> node 534 indicates the name or id of the <map> node 532 associated with the image 102. The <map> node 532 may have several child <area> nodes 542A-C. Each of the 20 <area> nodes 542A-C may have a "coords" attribute 544 specifying the coordinates of the image portion associated with it and an "href' attribute 546 specifying a hyperlink to be executed when the image portion is selected. FIG. 6 is a schematic diagram showing HTML code processed for display on the wireless communication device 104 according to one 25 implementation. FIG. 6 shows the HTML code in the initial document 202 19 before processing by the transcoder 114 in the image processing system 112 and the HTML code in the generated document 204 after processing by the transcoder 114. The initial document 202 may contain a <map> tag 602 whose child <area> tags 604A-E specify the coordinates of and the hyperlinks 5 associated with the areas 206A-E, respectively. The initial document 202 also contains an <img> tag 606, which is a placeholder for the image 102, having a name "usregion.gif," and the associated <map> tag 602, having the name "us region map." In some implementations, the initial document 202 is parsed and loaded 10 into memory, such as in the DOM tree 500 of FIG. 5. Here, the <map> tag 602 corresponds to the <map> node 532 in the DOM tree 500. The <area> tags 604A-E correspond to the <area> nodes 542A-C of the DOM tree 500 and the <img> tag 606 corresponds to the <img> node 534 of the DOM tree 500. 15 The generated document 204 may include the individual <img> tags 608A-E and <a> tags, subsequently referred to as <anchor> tags 610A-E. Each of the new <img> tags 608A-E specifies one of the image portions extracted by the transcoder 114. Here, the names of the <img> tags 608A-E in the "src" attributes include the name of the original image 102 and the 20 coordinates of the <area> tags 604A-E, respectively. Each of the <img> tags 608A-E is a child of the <anchor> tags 610A-E, respectively, which specify the hyperlinks associated with the image portions in the associated "href" attributes. In some implementations, the HTML tag or attributes in the initial 25 document 202 contain information about how a particular device, such as the 20 wireless communication device 104, should size the image 102 for display. For example, the HTML code may include tags that identify content for a particular type of device, such as a <mobile> tag, a <PDA> tag, a <cell phone> tag, and a <motorolav66> tag that identify content for a mobile 5 device, a personal digital assistant, a cell phone, and a specific type of cell phone, respectively. The tags may also identify a particular type of content, such as a <face> tag or a <text> tag that identify a portrait image and text in an image, respectively. The map content generator 310 may use these tags to determine the coordinates 312 provided to the extractor 306. 10 In some implementations, each extracted image portion is sized and shaped the same. For example, the image portions 106A-E may be extracted using the maximum size and shape that can be displayed on the wireless communication device 104. The display capability information 318 may include the dimensions of the display used by the wireless communication 15 device 104. The map content generator 310 may generate magnification and shrinking factors such that two or more of the image portions 206A-E are sized the same as the display dimensions. In some implementations, the image portions are displayed in an order other than the order of the <area> tags 604A-E, such as by grouping image 20 portions by size, shape, type, hyperlink, or other associated information within the HTML. For example, image portions having hyperlinks to the same network address may be listed together. Circular image portions may be listed before rectangular image portions and polygonal image portions. Image portions may be listed in descending or ascending order according to the 25 original size of the areas 206A-E. 21 In some implementations, the content of the image portions is used to order the image portions, such as by grouping faces, text, or text styles together. For example, image portions including bold or large text may be listed before plain or small text. Image portions containing faces may be 5 listed before other image portions that do not contain faces. Referring to FIG. 3, the display order, or positioning, may be dictated by position indicators 308 included in the image map 304 of the initial document 102. For example, the position indicators 308 may specify that faces are displayed first or that the image portion 106A is displayed first, the image 10 portion 106B is displayed next, and the image portion 106C is displayed third. In another implementation, the position indicators 308 may be generated by the map content generator 310 and output for use by the document generator 322, which may use the position indicators 308 to generate the document 204 with the image portions 106A-E in the specified order. 15 FIG. 7 is a schematic diagram of a generic computer system 700. The system 700 can be used in the operations 400 described above, according to one implementation. For example, the system 700 may be included in either or all of the image processing system 112, the wireless communication device 104, the remote web server 116, and the second remote web server 326. 20 The system 700 includes a processor 710, a memory 720, a storage device 730, and an input/output device 740. Each of the components 710, 720, 730, and 740 are interconnected using a system bus 750. The processor 710 is capable of processing instructions for execution within the system 700. In one implementation, the processor 710 is a single-threaded processor. In 25 another implementation, the processor 710 is a multi-threaded processor. The 22 processor 710 is capable of processing instructions stored in the memory 720 or on the storage device 730 to display graphical information for a user interface on the input/output device 740. The memory 720 stores information within the system 700. In one 5 implementation, the memory 720 is a computer-readable medium. In one implementation, the memory 720 is a volatile memory unit. In another implementation, the memory 720 is a non-volatile memory unit. The storage device 730 is capable of providing mass storage for the system 700. In one implementation, the storage device 730 is a computer 10 readable medium. In various different implementations, the storage device 730 may be a floppy disk device, a hard disk device, an optical disk device, or a tape device. The input/output device 740 provides input/output operations for the system 700. In one implementation, the input/output device 740 includes a 15 keyboard and/or pointing device. In another implementation, the input/output device 740 includes a display unit for displaying graphical user interfaces. The features described can be implemented in digital electronic circuitry, or in computer hardware, firmware, software, or in combinations of them. The apparatus can be implemented in a computer program product tangibly 20 embodied in an information carrier, e.g., in a machine-readable storage device or in a propagated signal, for execution by a programmable processor; and method steps can be performed by a programmable processor executing a program of instructions to perform functions of the described implementations by operating on input data and generating output. The 25 described features can be implemented advantageously in one or more 23 computer programs that are executable on a programmable system including at least one programmable processor coupled to receive data and instructions from, and to transmit data and instructions to, a data storage system, at least one input device, and at least one output device. A computer program is a set 5 of instructions that can be used, directly or indirectly, in a computer to perform a certain activity or bring about a certain result. A computer program can be written in any form of programming language, including compiled or interpreted languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, or other unit 10 suitable for use in a computing environment. Suitable processors for the execution of a program of instructions include, by way of example, both general and special purpose microprocessors, and the sole processor or one of multiple processors of any kind of computer. Generally, a processor will receive instructions and data 15 from a read-only memory or a random access memory or both. The essential elements of a computer are a processor for executing instructions and one or more memories for storing instructions and data. Generally, a computer will also include, or be operatively coupled to communicate with, one or more mass storage devices for storing data files; such devices include magnetic 20 disks, such as internal hard disks and removable disks; magneto-optical disks; and optical disks. Storage devices suitable for tangibly embodying computer program instructions and data include all forms of non-volatile memory, including by way of example semiconductor memory devices, such as EPROM, EEPROM, and flash memory devices; magnetic disks such as 25 internal hard disks and removable disks; magneto-optical disks; and CD 24 ROM and DVD-ROM disks. The processor and the memory can be supplemented by, or incorporated in, ASICs (application-specific integrated circuits). To provide for interaction with a user, the features can be implemented 5 on a computer having a display device such as a CRT (cathode ray tube) or LCD (liquid crystal display) monitor for displaying information to the user and a keyboard and a pointing device such as a mouse or a trackball by which the user can provide input to the computer. The features can be implemented in a computer system that includes a 10 back-end component, such as a data server, or that includes a middleware component, such as an application server or an Internet server, or that includes a front-end component, such as a client computer having a graphical user interface or an Internet browser, or any combination of them. The components of the system can be connected by any form or medium of digital 15 data communication such as a communication network. Examples of communication networks include, e.g., a LAN, a WAN, and the computers and networks forming the Internet. The computer system can include clients and servers. A client and server are generally remote from each other and typically interact through a network, 20 such as the described one. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other. Although a few implementations have been described in detail above, other modifications are possible. Portions of this disclosure discuss the 25 electronic documents including HTML, but any number of formats may be 25 processed by the described system including XML (Extensible Markup Language), WML (Wireless Markup Language), PDF (portable Document Format), word processing formats, and image formats. Also, the logic flows depicted in the figures do not require the particular order shown, or sequential 5 order, to achieve desirable results. Also, other steps may be provided, or steps may be eliminated, from the described flows, and other components may be added to, or removed from, the described systems. Accordingly, other implementations are within the scope of the following claims. 26
Claims (20)
1. A method comprising: receiving, at a computer system from a computing device, a request for a first electronic document that includes an image; 5 determining coordinates of a plurality of portions of the image based on optical analysis of the image by the computer system, wherein the optical analysis identifies items in the image that are visually distinct from other items in the image; using the determined coordinates, identifying a plurality of sub-images of the image in a first arrangement, the plurality of sub-images corresponding to the plurality of 0 portions; generating a second electronic document that includes the plurality of sub-images in a second arrangement, the second arrangement being different than the first arrangement, wherein the second arrangement groups the plurality of sub-images based on one or more attributes of the sub-images, wherein the one or more attributes based 5 upon which the sub-images are grouped in the second arrangement include image size and image shape; and providing the second electronic document to the computing device.
2. The method of claim 1, wherein the optical analysis comprises optical character recognition (OCR), and wherein the items identified by the optical analysis comprise text .0 in the image.
3. The method of claim 1, wherein the optical analysis comprises facial recognition, and wherein the items identified by the optical analysis comprise faces in the image.
4. The method of claim 1, wherein the optical analysis comprises optical object recognition, and wherein the items identified by the optical analysis comprise visually 25 distinct objects in the image.
5. The method of claim 4, wherein the optical object recognition identifies objects in the image based on areas of the image that have at least a threshold level of contrast. 27
6. The method of claim 1, further comprising generating an image map for the image based on the determined coordinates; wherein the plurality of sub-images are created based on the generated image map. 5
7. The method of claim 1, further comprising modifying a pre-existing image map that is associated with the image based on the determined coordinates; wherein the plurality of sub-images are created based on the modified image map.
8. The method of claim 7, wherein modifying the pre-existing image map comprises modifying coordinates contained in the pre-existing image map using the determined 0 coordinates.
9. The method of claim 7, wherein modifying the pre-existing image map comprises supplementing coordinates contained in the pre-existing image map with the determined coordinates.
10. The method of claim 7, further comprising: 5 obtaining information that indicates a size of a display of the computing device; based on the obtained information and the pre-existing image map, identifying one or more portions of the image defined by the image map that are too large for the display of the computing device; for each of the identified portions of the image, selecting coordinates in the .0 identified portion that correspond to one or more of the identified items that are at least partially located in the identified portion and that are determined to have at least a threshold level of relevance to a user of the computing device; and cropping the identified portions based on the selected coordinates, wherein sub images corresponding to the identified portions are created based on the cropped 25 identified portions.
11. The method of claim 10, wherein the identified portions are cropped using the selected coordinates so that the one or more identified items determined to have at least the threshold level of relevance are centered in the resulting cropped portions. 28
12. The method of claim 10, wherein the identified portions are cropped to correspond to the size of the display of the computing device.
13. A system for selecting portions of an image for display on a computing device, the system comprising: 5 a computer system; an interface of the computer system that is configured to receive a request from a computing device for a first electronic document that includes an image; means for determining coordinates of a plurality of portions of the image based on optical analysis of the image by the computer system, wherein the optical analysis 0 identifies items in the image that are visually distinct from other items in the image; an image extractor of the computer system that is configured to use the determined coordinates to identify a plurality of sub-images of the image in a first arrangement, the plurality of sub-images corresponding to the plurality of portions; and a document generator of the computer system that is configured to generate a 5 second electronic document that includes the plurality of sub-images in a second arrangement, the second arrangement being different than the first arrangement, wherein the second arrangement groups the plurality of sub-images based on one or more attributes of the sub-images, wherein the one or more attributes based upon which the sub-images are grouped in the second arrangement include image size and image shape; .0 wherein the interface is further configured to provide the generated second electronic document to the computing device.
14. The system of claim 13, further comprising means for generating an image map for the image based on the determined coordinates; wherein the plurality of sub-images are created based on the generated image 25 map.
15. The system of claim 13, further comprising means for modifying a pre-existing image map that is associated with the image based on the determined coordinates; wherein the plurality of sub-images are created based on the modified image map. 29
16. An apparatus comprising a non-transitory computer readable medium encoding instructions that, in response to execution by a computing device, cause the computing device to perform operations comprising: receiving, at a computer system from a computing device, a request for a first 5 electronic document that includes an image; determining coordinates of a plurality of portions of the image based on optical analysis of the image by the computer system, wherein the optical analysis identifies items in the image that are visually distinct from other items in the image; using the determined coordinates, identifying a plurality of sub-images of the 0 image in a first arrangement, the plurality of sub-images corresponding to the plurality of portions; generating a second electronic document that includes the plurality of sub-images in a second arrangement, the second arrangement being different than the first arrangement, wherein the second arrangement groups the plurality of sub-images based 5 on attributes of the sub-images, wherein the one or more attributes based upon which the sub-images are grouped in the second arrangement include image size and image shape; and providing the second electronic document to the computing device.
17. The computer-program product of claim 16, wherein the operations further comprise .0 modifying a pre-existing image map that is associated with the image based on the determined coordinates; wherein the plurality of sub-images are created based on the modified image map.
18. The method of claim 1, wherein the one or more attributes based upon which the sub images are grouped in the second arrangement include content of the sub-images. 25
19. The method of claim 18, wherein the content comprises items that are depicted in the sub-images.
20. The method of claim 1, wherein the second arrangement includes sub-images with similar attributes being grouped together in the second electronic document. 30
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
AU2013216691A AU2013216691B2 (en) | 2005-09-22 | 2013-08-16 | System and method for image processing |
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US11/233,288 | 2005-09-22 | ||
AU2011202378A AU2011202378B2 (en) | 2005-09-22 | 2011-05-23 | System and method for image processing |
AU2013216691A AU2013216691B2 (en) | 2005-09-22 | 2013-08-16 | System and method for image processing |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
AU2011202378A Division AU2011202378B2 (en) | 2005-09-22 | 2011-05-23 | System and method for image processing |
Publications (2)
Publication Number | Publication Date |
---|---|
AU2013216691A1 true AU2013216691A1 (en) | 2013-09-05 |
AU2013216691B2 AU2013216691B2 (en) | 2015-08-06 |
Family
ID=49080569
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
AU2013216691A Ceased AU2013216691B2 (en) | 2005-09-22 | 2013-08-16 | System and method for image processing |
Country Status (1)
Country | Link |
---|---|
AU (1) | AU2013216691B2 (en) |
Family Cites Families (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5721851A (en) * | 1995-07-31 | 1998-02-24 | International Business Machines Corporation | Transient link indicators in image maps |
US20050041858A1 (en) * | 2003-08-21 | 2005-02-24 | International Business Machines Corporation | Apparatus and method for distributing portions of large web pages to fit smaller constrained viewing areas |
-
2013
- 2013-08-16 AU AU2013216691A patent/AU2013216691B2/en not_active Ceased
Also Published As
Publication number | Publication date |
---|---|
AU2013216691B2 (en) | 2015-08-06 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
AU2011202378B2 (en) | System and method for image processing | |
US9411827B1 (en) | Providing images of named resources in response to a search query | |
KR100461019B1 (en) | web contents transcoding system and method for small display devices | |
US7345688B2 (en) | Semantic thumbnails | |
US6857102B1 (en) | Document re-authoring systems and methods for providing device-independent access to the world wide web | |
US20100114854A1 (en) | Map-based websites searching method and apparatus therefor | |
CN111694965B (en) | Image scene retrieval system and method based on multi-mode knowledge graph | |
US20120221587A1 (en) | Method for Generating Search Results and System for Information Search | |
US20140052778A1 (en) | Method and apparatus for mapping a site on a wide area network | |
US20130238968A1 (en) | Automatic Creation of a Table and Query Tools | |
KR20170073693A (en) | Extracting similar group elements | |
AU2013216691B2 (en) | System and method for image processing | |
CN113486148A (en) | PDF file conversion method and device, electronic equipment and computer readable medium | |
CN109902254B (en) | Information input method and device and electronic equipment | |
KR20180022990A (en) | Image-based information retrieval method and apparatus | |
Sano et al. | Web block extraction system based on client-side imaging for clickable image map | |
Augustine et al. | M-Tree based on the Fly Automatic Webpage Adaptation for Small Display Device | |
JP5514002B2 (en) | SEARCH DEVICE, METHOD, AND PROGRAM | |
Kelly | Segmentation and Classification of HTML Documents for Display on Small Screen Devices | |
JP2003288260A (en) | Contents formation method and system |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
FGA | Letters patent sealed or granted (standard patent) | ||
HB | Alteration of name in register |
Owner name: GOOGLE LLCFree format text: FORMER NAME(S): GOOGLE, INC. |
|
MK14 | Patent ceased section 143(a) (annual fees not paid) or expired |
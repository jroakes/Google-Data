HINTERGRUNDBACKGROUND
Innerhalb der Computerumgebung von Unternehmen kam es zu einem wesentlichen Wandel der Speicherarchitektur, insofern als das die zentralisierte Architektur durch verteilte Speichercluster ersetzt wurde. Wenn Unternehmungen auf der Suche nach Wegen sind, die Speicherplatz-Effizienz zu erhöhen, können Speichercluster die von herkömmlichen Computern aufgebaut werden, eine hohe Leistung, Verfügbarkeit und Skalierbarkeit für neue datenintensive Anwendungen zu einem Bruchteil der Kosten im Vergleich zu monolithischen Plattenfeldern bieten. Um das volle Potenzial der Speichercluster freizugeben, werden die Daten über mehrere geografische Standorte repliziert, erhöhen damit die Verfügbarkeit und reduzieren die Netzwerkentfernung zum Kunden.Within the enterprise computing environment, there was a significant change in the storage architecture in that the centralized architecture was replaced by distributed storage clusters. When companies are looking for ways to increase storage space efficiency, storage clusters built on traditional computers can provide high performance, availability, and scalability for new data-intensive applications at a fraction of the cost of monolithic disk arrays. To unlock the full potential of the storage clusters, data replicates across multiple geographic locations, increasing availability and reducing network distance to the customer.
In diesen Systemen können verteilte Objekte und Verweise in verschiedenen Speicherclustern dynamisch erstellt, geklont und gelöscht werden (unter Verwendung eines Multimaster-Modells) und die zugrunde liegende Datenreplikationsschicht behält die Write-Order-Fidelity bei, um sicherzustellen, dass alle Cluster die gleiche Version der Daten erhalten.In these systems, distributed objects and references in different storage clusters can be dynamically created, cloned and deleted (using a multimaster model) and the underlying data replication layer maintains the write-order fidelity to ensure that all clusters share the same version of the Data received.
Einige aktuelle Visualisierungs-, Multimedia- und andere datenintensive Anwendungen verwenden sehr große Objekte – in der Regel Hunderte Gigabyte oder sogar Terabyte groß. Das Hochladen solcher Objekte in ein verteiltes Speichersystem wird in der Regel im Streamingmodus durchgeführt, indem das Objekt in Blöcke aufgeteilt und jeder Block einzeln hochgeladen wird. Dieser Prozess kann lange Verzögerungen beim Upload zur Folge haben, die durch potenzielle Client- und/oder Serverausfälle verschärft werden können. Folglich gewinnt der effiziente verteilte Objekt-Upload im Streamingmodus, der eine Konsistenzgewähr bietet, zunehmend an Bedeutung für die Speicherbranche, angetrieben durch die Anforderungen großer Systeme, die es Clients erlauben, eine Verbindung zu jedem zu einem bestimmten Zeitpunkt verfügbaren Cluster herzustellen. Unter Schutz gestellt werden und Gegenstand des Gebrauchsmusters sind dabei, entsprechend den Vorschriften des Gebrauchsmustergesetzes, lediglich Vorrichtungen wie in den beigefügten Schutzansprüchen definiert, jedoch keine Verfahren. Soweit nachfolgend in der Beschreibung gegebenenfalls auf Verfahren Bezug genommen wird, dienen diese Bezugnahmen lediglich der beispielhaften Erläuterung der in den beigefügten Schutzansprüchen unter Schutz gestellten Vorrichtung oder Vorrichtungen.Some recent visualization, multimedia, and other data-intensive applications use very large objects-typically hundreds of gigabytes or even terabytes in size. Uploading such objects to a distributed storage system is typically done in streaming mode by dividing the object into blocks and uploading each block one at a time. This process can result in long upload delays, which can be exacerbated by potential client and / or server failures. As a result, efficient distributed object uploading in streaming mode that provides consistency is becoming increasingly important to the storage industry, driven by the demands of large systems that allow clients to connect to any cluster available at any given time. Be provided under protection and subject of the utility model are, according to the provisions of the utility model law, only devices as defined in the appended claims, but no method. Wherever in the description, if appropriate, reference is made to methods, these references are merely illustrative of the device or devices set forth in the appended claims.
ZUSAMMENFASSUNGSUMMARY
Laut einer Implementierung könnte ein Verfahren durch ein Geräte oder eine Gruppe an Geräten in einem verteilten System zur Datenreplizierung durchgeführt werden. Das Verfahren kann das Empfangen einer Anforderung zum Upload eines Objekts von einem Client auf einem oder mehreren Geräten umfassen; das Senden einer eindeutigen temporären Kennung für das Objekt durch ein oder mehrere Geräte als Antwort auf die Anforderung; das Empfangen einer Gruppe von Blöcken mit der eindeutigen temporären Kennung auf einem oder mehreren Geräten, wobei die Gruppe von Blöcken das hochgeladene Objekt umfasst; das Erstellen durch ein oder mehrere Geräte eines Eintrags für das Objekt in einem Index für das verteilte Datenreplikationssystem, wobei der Eintrag durch die eindeutige temporäre Kennung verschlüsselt ist; das Empfangen einer Anforderung vom Client auf einem oder mehreren Geräten, das hochgeladene Objekt zu finalisieren; das Rekonstruieren des Objekts auf einem oder mehreren Geräten aus der Gruppe von Blöcken; das Zuweisen einer inhaltsbasierten Kennung zum hochgeladenen Objekt; sowie das Erstellen durch ein oder mehrere Geräte eines weiteren Eintrags für das Objekt in dem Index für das verteilte Datenreplikationssystem, wobei der weitere Eintrag durch die inhaltsbasierte Kennung verschlüsselt ist.According to one implementation, a method could be performed by a device or group of devices in a distributed data replication system. The method may include receiving a request to upload an object from a client to one or more devices; sending a unique temporary identifier for the object by one or more devices in response to the request; receiving a group of blocks having the unique temporary identifier on one or more devices, the group of blocks comprising the uploaded object; creating by one or more devices an entry for the object in an index for the distributed data replication system, the entry being encrypted by the unique temporary identifier; receiving a request from the client on one or more devices to finalize the uploaded object; reconstructing the object on one or more devices from the group of blocks; assigning a content-based identifier to the uploaded object; and creating, by one or more devices, another entry for the object in the index for the distributed data replication system, wherein the further entry is encrypted by the content-based identifier.
Laut einer anderen Implementierung kann ein Gerät in einer Gruppe von Geräten in einem verteilten Datenreplikationssystem Mittel zum Speichern eines Index von Objekten in dem verteilten Datenreplikationssystem umfassen; Mittel zum Empfangen eines Blocks in dem angegebenen Versatz innerhalb eines neuen Objekts für das verteilte Datenreplikationssystem, wobei jede Gruppe von Blöcken die gleiche temporäre Kennung hat; Mittel zum Schreiben der temporären Kennung für das neue Objekt in den Index; Mittel zum Sperren des neuen Objekts, sodass keine weiteren Änderungen des Inhalts des neuen Objektinhalts möglich sind; Mittel zum Berechnen einer inhaltsbasierten Kennung für das neue Objekt; sowie Mittel zum Aktualisieren des Index, die den Zugriff auf das neue Objekt durch die inhaltsbasierte Kennung erlauben.According to another implementation, a device in a group of devices in a distributed data replication system may include means for storing an index of objects in the distributed data replication system; Means for receiving a block in the specified offset within a new object for the distributed data replication system, each group of blocks having the same temporary identifier; Means for writing the temporary identifier for the new object into the index; Means to lock the new object so that no further changes to the contents of the new object content are possible; medium for calculating a content-based identifier for the new object; and means for updating the index allowing access to the new object by the content-based identifier.
Laut einer wieder anderen Implementierung kann ein System einen Speicher zur Speicherung von Anweisungen, einen Datenspeicher von Objekten und einen Index der Objekte im Datenspeicher umfassen. Das System kann auch einen Prozessor zur Ausführung der Anweisungen im Speicher umfassen, um eine Gruppe von Blöcken mit der gleichen eindeutigen temporären Kennung zu empfangen, wobei die Gruppe von Blöcken ein hochzuladendes Objekt umfasst; zum Erstellen eines Eintrag für das Objekts im Index, wobei der Eintrag durch die eindeutige temporäre Kennung verschlüsselt ist; zum Berechnen einer inhaltsbasierten Kennung für das Objekt; zum Erstellen eines weiteren Eintrags für das neue Objekt im Index, wobei der weitere Eintrag durch die permanente inhaltsbasierte Kennung verschlüsselt ist; und zum Aktualisieren des Index, damit dieser von der eindeutigen temporären Kennung auf die inhaltsbasierte Kennung verweist.According to yet another implementation, a system may include memory for storing instructions, data storage of objects, and an index of the objects in the data store. The system may also include a processor for executing the instructions in memory to receive a group of blocks having the same unique temporary identifier, the group of blocks comprising an object to be uploaded; to create an entry for the object in the index, the entry being encrypted by the unique temporary identifier; for calculating a content-based identifier for the object; to create another entry for the new object in the index, the further entry being encrypted by the persistent content-based identifier; and updating the index to reference the content-based identifier from the unique temporary identifier.
Laut noch einer anderen Implementierung kann ein von zwei oder mehr Geräten durchgeführtes Verfahren den Empfang einer Gruppe von Blöcken mit derselben temporären Kennung durch zwei oder mehr Geräte umfassen, wobei die Gruppe von Blöcken ein hochzuladendes Objekt umfasst; das Erstellen an den zwei oder mehr Geräten eines Eintrags für das Objekt in einem replizierten Index, wobei der Eintrag durch die eindeutige temporäre Kennung verschlüsselt ist, und wobei der replizierte Index an jedem der zwei oder mehr Geräte repliziert wird; das Ermitteln durch das initiierende Gerät der zwei oder mehr Geräte, dass eine Vereinigung der Gruppe von Blöcken alle Daten des Objekts enthält; das Erstellen auf zwei oder mehr Geräten eines weiteren Eintrags für das Objekt im replizierten Index, wobei der weitere Eintrag durch die inhaltsbasierte Kennung verschlüsselt ist; sowie das Aktualisieren des Index durch die zwei oder mehr Geräte, damit dieser von der eindeutigen temporären Kennung auf die inhaltsbasierte Kennung verweist.According to yet another implementation, a method performed by two or more devices may comprise receiving a group of blocks having the same temporary identifier by two or more devices, the group of blocks comprising an object to be uploaded; creating at the two or more devices an entry for the object in a replicated index, the entry being encrypted by the unique temporary identifier, and replicating the replicated index at each of the two or more devices; determining, by the initiating device of the two or more devices, that a union of the group of blocks includes all the data of the object; creating on two or more devices a further entry for the object in the replicated index, the further entry being encrypted by the content-based identifier; and updating the index by the two or more devices to reference the content-based identifier from the unique temporary identifier.
Laut einer anderen Implementierung könnte ein durch den Computer lesbarer Speicher Anweisungen umfassen, die vom Computer ausgeführt werden können. Der computerlesbare Speicher kann Anweisungen zum Empfang eines Blocks eines hochgeladenen Objekts am angegebenen Versatz umfassen, wobei das hochgeladene Objekt eine Gruppe von Blöcken mit der gleichen eindeutigen temporären Kennung umfasst; Anweisungen zum Ermitteln, ob die Vereinigung der Gruppe von Blöcken alle Daten des hochgeladenen Objekts enthält; Anweisungen zum Sperren des hochgeladenen Objekts hinsichtlich zukünftiger Änderungen des Inhalts des hochgeladenen Objekts; Anweisungen zum Berechnen einer inhaltsbasierten Kennung für das hochgeladene Objekt; Anweisungen zum Erstellen eines Eintrags für das hochgeladene Objekt in einem replizierten Index, wobei der Eintrag durch die inhaltsbasierte Kennung verschlüsselt wird; sowie Anweisungen zum Aktualisieren des replizierten Index, um Verweise auf die eindeutige temporäre Kennung im replizierten Index von der eindeutigen temporären Kennung in die inhaltsbasierte Kennung zu ändern.According to another implementation, a computer-readable memory could include instructions that can be executed by the computer. The computer readable storage may include instructions for receiving a block of an uploaded object at the specified offset, wherein the uploaded object comprises a group of blocks having the same unique temporary identifier; Instructions for determining if the union of the group of blocks contains all the data of the uploaded object; Instructions to lock the uploaded object for future changes to the content of the uploaded object; Instructions for calculating a content-based identifier for the uploaded object; Instructions for creating an uploaded object entry in a replicated index, wherein the entry is encrypted by the content based identifier; and instructions for updating the replicated index to change references to the unique temporary identifier in the replicated index from the unique temporary identifier to the content-based identifier.
KURZBESCHREIBUNG DER ZEICHNUNGENBRIEF DESCRIPTION OF THE DRAWINGS
Die beiliegenden Zeichnungen, die in diese Spezifikation integriert sind und einen Teil dieser Spezifikation darstellen, veranschaulichen eine oder mehrere der hierin beschriebenen Ausführungsformen und dienen zusammen mit der Beschreibung als Erklärung der Ausführungsformen. Die Zeichnungen umfassen Folgendes:The accompanying drawings, which are incorporated in and constitute a part of this specification, illustrate one or more of the embodiments described herein and, together with the description, serve to explain the embodiments. The drawings include the following:
1 ist ein Diagramm eines exemplarischen Systems, in das die hierin beschriebenen Systeme und Verfahren implementiert werden können; 1 FIG. 12 is a diagram of an exemplary system into which the systems and methods described herein may be implemented; FIG.
2 ist ein Diagramm einer exemplarischen Konfiguration eines Dateisystems von 1; 2 FIG. 12 is a diagram of an exemplary configuration of a file system of FIG 1 ;
3 ist ein Diagramm von exemplarischen Komponenten eines Speicherclusters aus 1; 3 is a diagram of exemplary components of a storage cluster 1 ;
4 ist ein Funktionsblockschaltbild eines exemplarischen Speicherclusters von 1; 4 FIG. 4 is a functional block diagram of an exemplary memory cluster of FIG 1 ;
5 ist ein Diagramm einer exemplarischen finalisierten Datensatzstruktur, die in einem Index eines verteilten Multimaster-Datenreplikationssystems verwendet werden kann; 5 Figure 10 is a diagram of an exemplary finalized data set structure that may be used in an index of a distributed multi-master data replication system;
6 ist ein Flussdiagramm eines exemplarischen Prozesses für die Verwaltung Client-initiierter Upload-Vorgänge gemäß einer hierin beschriebenen Implementierung; 6 FIG. 10 is a flowchart of an exemplary process for managing client-initiated upload operations according to an implementation described herein;
7 ist ein Flussdiagramm eines exemplarischen Prozesses für den Empfang Client-initiierter Uploads in einem Multimaster-Datenreplikationssystem; 7 FIG. 10 is a flowchart of an exemplary process for receiving client-initiated uploads in a multi-master data replication system;
8 ist ein Flussdiagramm eines exemplarischen Prozesses für die Verarbeitung einer Finalisierungsanforderung für ein hochgeladenes Objekt; 8th Fig. 10 is a flowchart of an exemplary process for processing a finalization request for an uploaded object;
9 ist ein Flussdiagramm eines exemplarischen Prozesses für die Durchführung von Scanvorgängen in einem Speichercluster gemäß einer hierin beschriebenen Implementierung; 9 FIG. 10 is a flowchart of an exemplary process for performing scans in a storage cluster according to an implementation described herein; FIG.
10 ist ein Flussdiagramm eines exemplarischen Prozesses für die Erstellung neuer Verweise auf einen globalen Index von replizierten Speicherclustern; und 10 Figure 10 is a flow diagram of an exemplary process for creating new references to a global index of replicated storage clusters; and
11 ist ein Diagramm zur Darstellung eines Teils eines exemplarischen globalen Index gemäß einer hierin beschriebenen Implementierung. 11 FIG. 12 is a diagram illustrating a portion of an exemplary global index according to an implementation described herein. FIG.
AUSFÜHRLICHE BESCHREIBUNGDETAILED DESCRIPTION
Die folgende detaillierte Beschreibung bezieht sich auf die begleitenden Zeichnungen. Dieselben Referenznummern in unterschiedlichen Zeichnungen können dieselben oder ähnliche Elemente identifizieren. Darüber hinaus soll die folgende detaillierte Beschreibung nicht als Beschränkung der Erfindung angesehen werden.The following detailed description refers to the accompanying drawings. The same reference numbers in different drawings may identify the same or similar elements. Moreover, the following detailed description should not be taken as limiting the invention.
Die hierin beschriebenen Systeme und/oder Verfahren können einen asynchron verteilten Algorithmus zum Objekt-Upload im Streamingmodus für replizierte Speichercluster bereitstellen, der Garantien für die Verfügbarkeit, Aktivität und Konsistenz für große unveränderliche Objekte bietet. Ein Objekt kann in Blöcke aufgeteilt werden, die durch die Anwendung asynchron in die verfügbaren Cluster geladen werden. Die hierin beschriebenen Implementierungen können die zugrunde liegende Replikationsschicht eines verteilten Multimaster-Datenreplikationssystems verwenden, um die Blockpositionen in einem inhaltsadressierbaren Index (auch als ”globaler Index” bezeichnet) zwischen verschiedenen Speicherclustern zu replizieren. Sobald das Objekt durch die Anwendung finalisiert wurde, kann ein eindeutiger Inhalts-Handle (z. B. ein Hash-Wert oder eine digitale Signatur) auf der Basis des Blockinhalts berechnet werden, und das Objekt wird als unveränderliches Objekt in den inhaltsadressierbaren Index eingefügt. The systems and / or methods described herein may provide an asynchronously distributed object upload algorithm in replicated storage cluster streaming mode that provides guarantees for availability, activity, and consistency for large immutable objects. An object can be split into blocks, which the application loads asynchronously into the available clusters. The implementations described herein may utilize the underlying replication layer of a multi-master distributed data replication system to replicate the block locations in a content-addressable index (also referred to as a "global index") between different storage clusters. Once the object has been finalized by the application, a unique content handle (e.g., a hash value or a digital signature) may be calculated based on the block content, and the object is inserted as a fixed object in the content-addressable index.
Der Begriff ”Objekt” wie hierin verwendet kann sich auf ein Element oder eine Sammlung von Daten beziehen, die einzeln ausgewählt oder bearbeitet werden können, beispielsweise eine Multimedia-Datei, ein Bild, eine Datendatei, eine Gruppierung von Text usw. Der Begriff ”Block” wie hierin verwendet kann sich auf einen Teil eines durch seinen Versatz und seine Größe eindeutig identifizierten Objekts beziehen, der einzeln hochgeladen und später mit anderen Blöcken gruppiert werden kann, um das Objekt zu rekonstruieren.The term "object" as used herein may refer to an item or collection of data that may be individually selected or manipulated, such as a multimedia file, an image, a data file, a grouping of text, etc. The term "block As used herein may refer to a portion of an object uniquely identified by its offset and size, which may be uploaded one at a time and later grouped with other blocks to reconstruct the object.
EXEMPLARISCHE NETZWERKONFIGURATIONEXPLASIVE NETWORK CONFIGURATION
1 ist ein Diagramm eines exemplarischen Systems 100, in dem die hierin beschriebenen Systeme und Verfahren implementiert sein können. Das System 100 kann die Clients 110-1 bis 110-N enthalten (gemeinsam als Clients 110 benannt und individuell als Client 110) sowie Speichercluster 120-1 bis 120-M (gemeinsam als die Speichercluster 120 benannt und individuell als das Speichercluster 120), die via Netzwerk 130 verbunden sind. Speichercluster 120 können ein Dateisystem 140 formen (wie durch die gepunktete Linie in 1 gezeigt). 1 is a diagram of an exemplary system 100 in which the systems and methods described herein can be implemented. The system 100 can the clients 110-1 to 110-N included (shared as clients 110 named and individually as a client 110 ) as well as storage clusters 120-1 to 120 M (collectively as the storage clusters 120 named and customized as the storage cluster 120 ) via network 130 are connected. storage cluster 120 can be a file system 140 shapes (as indicated by the dotted line in 1 shown).
Netzwerk 130 kann eines oder mehrere Netzwerke umfassen, sowie ein lokales Netzwerk (LAN), ein Wide Area Network (WAN), ein Telefonnetzwerk, wie ein öffentliches Telefonnetzwerk (PSTN), ein Intranet, das Internet, ein gleiches oder ungleiches Netzwerk oder eine Kombination aus Netzwerken. Clients 110 und Speichercluster 120 können über Kabel- und/oder drahtlose Verbindungen mit dem Netzwerk 130 verbunden werden.network 130 may include one or more networks, as well as a local area network (LAN), a wide area network (WAN), a telephone network such as a public switched telephone network (PSTN), an intranet, the Internet, an equal or dissimilar network, or a combination of networks , clients 110 and storage clusters 120 Can connect via cable and / or wireless to the network 130 get connected.
Die Clients 110 können eine oder mehrere Arten von Geräten beinhalten wie einen PC, ein schnurloses Telefon, einen persönlichen digitalen Assistenten (PDA), einen Laptop oder eine andere Art von Kommunikationsgerät und/oder einen Themenstrang oder Prozess, der auf einem dieser Geräte ausgeführt ist. In einer Implementierung enthält ein Client 110 eine Anwendung oder ist mit einer Anwendung verknüpft, in deren Auftrag Client 110 mit dem Speichercluster 120 kommuniziert, um Dateidaten hochzuladen, zu lesen oder zu löschen.The clients 110 may include one or more types of devices such as a personal computer, a cordless phone, a personal digital assistant (PDA), a laptop or other type of communication device, and / or a thread or process running on one of these devices. In one implementation, a client contains 110 an application or is associated with an application on whose behalf client 110 with the storage cluster 120 communicates to upload, read or delete file data.
Speichercluster 120 können ein oder mehrere Servergeräte oder andere Arten an Rechen- oder Kommunikationsgeräten umfassen, die Informationen auf die hierin beschriebene Art speichern, verarbeiten, suchen und/oder bereitstellen können. In einer Implementierung könnten Speichercluster 120 einen oder mehrere Server (z. B. Computersysteme und/oder Anwendungen) umfassen, die einen großen Datenspeicher für Dateien mit zufälligem Lese-/Schreibzugriff pflegen können. Der Datenspeicher von Speichercluster 120 könnte ein Indexsystem zulassen, um bei Änderungen schnell Teile eines Index aktualisieren zu können. Der Datenspeicher von Speichercluster 120 könnte eine oder mehrere Tabellen umfassen (z. B. eine Dokumenttabelle, die eine Zeile pro Uniform Resource Locator (URL) umfassen kann oder Hilfstabellen, die durch andere Werte als URLs verschlüsselt werden etc.). In einem Beispiel könnte Speichercluster 120 in einem verteilten Speichersystem integriert sein (z. B. „Bigtable” gemäß Chang et al. „Bigtable: A Distributed Storage System for Structured Data”, Proc. of the 7th OSDI, Seiten 205–218 (Nov. 2006) für die Verwaltung strukturierter Daten (z. B. einem Direktzugriffs-Speichercluster von Dokumenten), die zur Erweiterung auf eine sehr große Größe entwickelt wurden (z. B. Petabyte an Daten innerhalb von tausenden an Servern).storage cluster 120 may include one or more server devices or other types of computing or communication devices that may store, process, search, and / or provide information in the manner described herein. In one implementation, storage clusters could 120 include one or more servers (eg, computer systems and / or applications) that can maintain a large data store for random read / write files. The datastore of storage clusters 120 could allow an indexing system to quickly update parts of an index when changes are made. The datastore of storage clusters 120 could include one or more tables (eg, a document table that may include one line per Uniform Resource Locator (URL) or auxiliary tables that are encoded by values other than URLs, etc.). In one example, storage clusters could 120 be integrated in a distributed storage system (eg "Bigtable" according to Chang et al. "Bigtable: A Distributed Storage System for Structured Data", Proc. of the 7th OSDI, pages 205-218 (Nov. 2006) for managing structured data (eg, a direct access storage cluster of documents) designed to be scaled to a very large size (e.g., petabytes of data within thousands of servers).
Obwohl nicht in 1 gezeigt, könnte das System 100 eine Reihe anderer Komponenten umfassen, wie beispielsweise einen oder mehrere dedizierte Verbraucherserver oder Hubs. Ein Verbraucherserver könnte beispielsweise eine Kopie der Daten mit reinem Lesezugriff von einem oder mehreren Speicherclustern 120 auf einem Datenspeicher speichern, um Zugriff für die Clients 110 zu ermöglichen. Ein Hub könnte beispielsweise eine Kopie der Daten mit reinem Lesezugriff von einem oder mehreren Speicherclustern 120 auf einem Datenspeicher speichern, um an einen oder mehrere Verbraucherserver verteilt zu werden.Although not in 1 The system could be shown 100 a number of other components, such as one or more dedicated consumer servers or hubs. For example, a consumer server could be a copy of the read-only data from one or more storage clusters 120 on a datastore store to access the clients 110 to enable. For example, a hub could be a copy of the read-only data from one or more storage clusters 120 stored on a data store to be distributed to one or more consumer servers.
EXEMPLARISCHE SPEICHERCLUSTER-KONFIGURATIONEXEMPLARY MEMORY CLUSTER CONFIGURATION
2 ist ein Diagramm einer exemplarischen Konfiguration eines Dateisystems 140. Wie in 2 gezeigt, könnte das Dateisystem 140 die Speichercluster 120-1, 120-2, 120-3 und 120-4 umfassen. In einer Implementierung könnte das Dateisystem 140 ein verteiltes Multimaster-System zur Datenreplizierung sein, wobei jeder Speichercluster 120-1, 120-2, 120-3 und 120-4 als Master-Server für die anderen Speichercluster agieren könnte. Im Dateisystem 140 können Daten aus den Speicherclustern 120-1, 120-2, 120-3 und 120-4 repliziert werden (z. B. an mehreren geografischen Standorten), um die Datenverfügbarkeit zu erhöhen und den Netzwerkabstand von den Clients (z. B. Clients 110) zu verringern. Im Allgemeinen können verteilte Objekte und Verweise dynamisch erstellt, geklont und in verschiedenen Speicherclustern 120 gelöscht werden und eine zugrundeliegende Datenreplikationsschicht (nicht gezeigt) erhält die Write-Order-Fidelity, um sicherzustellen, dass alle Speichercluster 120 die gleiche Version der Daten erhalten. Somit respektiert die Datenreplizierungsebene die Reihenfolge der Schreibvorgänge für die gleiche Replika eines einzelnen Objektes. 2 Figure 12 is a diagram of an exemplary configuration of a file system 140 , As in 2 could be shown the file system 140 the storage clusters 120-1 . 120-2 . 120-3 and 120-4 include. In one implementation, the file system could 140 a distributed multimaster system for Data Replication, where each storage cluster 120-1 . 120-2 . 120-3 and 120-4 could act as the master server for the other storage clusters. In the file system 140 can read data from the storage clusters 120-1 . 120-2 . 120-3 and 120-4 replicated (for example, at multiple geographic locations) to increase data availability and network distance from the clients (for example, clients 110 ) to reduce. In general, distributed objects and references can be dynamically created, cloned, and stored in different storage clusters 120 and an underlying data replication layer (not shown) receives the write-order fidelity to ensure that all storage clusters 120 get the same version of the data. Thus, the data replication layer respects the order of writes for the same replica of a single object.
Ein globaler Index von allen Objekten im verteilten Multi-Master-Datenreplikationssystem kann mit jedem Speichercluster 120 verknüpft werden. Jedes gespeicherte Objekt kann durch einen einzigartigen Inhaltshandle im globalen Index gelistet werden (wie ein Hash-Wert, digitale Signatur usw.) In hierin beschriebenen Implementierungen kann neuen Objekten, die von einem Client hochgeladen werden, eine eindeutige temporäre Kennung (ID) im globalen Index zugewiesen werden, die jedem Block des neuen Objekts zugeordnet ist. Wenn alle Blöcke eines hochgeladenen Objekts empfangen wurden, kann einer der Speichercluster dem hochgeladenen Objekt einen permanenten Inhalts-Handle zuweisen und den globalen Index so aktualisieren, dass der Zugriff auf das Objekt über den permanenten Inhalts-Handle möglich ist. Änderungen am globalen Index, die durch einen Speichercluster vorgenommen wurden, können in andere Speichercluster repliziert werden.A global index of all objects in the distributed multi-master data replication system can work with any storage cluster 120 be linked. Each stored object can be listed by a unique content handle in the global index (such as a hash value, digital signature, etc.). In implementations described herein, new objects uploaded by a client can have a unique global index temporary identifier (ID) assigned to each block of the new object. When all blocks of an uploaded object have been received, one of the storage clusters can assign a persistent content handle to the uploaded object and update the global index to allow access to the object through the persistent content handle. Changes to the global index made by one storage cluster can be replicated to other storage clusters.
Obwohl 2 exemplarische Funktionskomponenten des Dateisystems 140 zeigt, könnte das Dateisystem 140 in anderen Implementierungen weniger, weitere, unterschiedliche oder anders angeordnete Komponenten haben, als in 2 dargestellt ist. Bei noch weiteren Implementierungen können eine oder mehrere Komponenten des Dateisystems 140 eine oder mehrere Aufgaben leisten, wie sie als geleistet von einem oder mehreren weiteren Komponenten des Dateisystems 140 beschrieben sind.Even though 2 exemplary functional components of the file system 140 shows, the file system might be 140 in other implementations have fewer, more, different, or different components than in 2 is shown. In yet other implementations, one or more components of the file system 140 perform one or more tasks as they are done by one or more other components of the file system 140 are described.
3 ist ein Diagramm von exemplarischen Komponenten von Speichercluster 120. Der Speichercluster 120 kann einen Bus 310 enthalten, einen Prozessor 320, einen Hauptspeicher 330, einen Festwertspeicher (ROM) 340, ein Speichergerät 350, ein Eingabegerät 360, ein Ausgabegerät 370 und eine Kommunikationsoberfläche 380. Bus 310 könnte eine oder mehrere Leiter umfassen, die eine Kommunikation zwischen den Komponenten des Speicherclusters 120 zulassen. 3 is a diagram of exemplary components of storage clusters 120 , The storage cluster 120 can a bus 310 contain a processor 320 , a main memory 330 , a read-only memory (ROM) 340 , a storage device 350 , an input device 360 , an output device 370 and a communication interface 380 , bus 310 could include one or more conductors that provide communication between the components of the storage cluster 120 allow.
Prozessor 320 könnte eine Art Prozessor oder Mikroprozessor umfassen, der Anweisungen interpretiert und ausführt. Der Hauptspeicher 330 kann einen Arbeitsspeicher (RAM) oder eine andere Art von dynamischem Speichergerät enthalten, auf dem Informationen und Anweisungen zur Ausführung durch Prozessor 320 gespeichert werden könnten. Der ROM 340 könne einen ROM-Gerät oder eine andere Art statischen Speichergerätes umfassen, das Informationen und Anweisungen für die Verwendung durch den Prozessor 320 speichern könnte. Das Speichergerät 350 könnte ein magnetisches und/oder optisches Aufzeichnungsmedium sowie das dazugehörige Laufwerk umfassen. Ein Speichergerät 350 könnte beispielsweise eine oder mehrere lokale Festplatten 355 umfassen, die eine dauerhafte Speicherung bieten. In einer Implementierung kann ein Speichercluster 120 Metadaten für gespeicherte Objekte pflegen, die im Dateisystem 140, auf einem oder mehreren computerlesbaren Medien, sowie auf einem Hauptspeicher 330 und/oder einem Speichergerät 350 gespeichert sind. Zum Beispiel könnte der Speichercluster 120 einen globalen Index innerhalb des Speichergeräts 350 für alle die Objekte, die innerhalb eines verteilten Multi-Master-Datenreplikationssystems gespeichert sind, speichern.processor 320 could include some sort of processor or microprocessor that interprets and executes instructions. The main memory 330 may include a random access memory (RAM) or other type of dynamic storage device that has information and instructions for execution by the processor 320 could be stored. The ROM 340 may comprise a ROM device or other type of static storage device containing information and instructions for use by the processor 320 could save. The storage device 350 could include a magnetic and / or optical recording medium and the associated drive. A storage device 350 for example, one or more local disks 355 include that provide permanent storage. In one implementation, a storage cluster 120 Maintain metadata for stored objects in the file system 140 , on one or more computer-readable media, as well as on a main memory 330 and / or a storage device 350 are stored. For example, the storage cluster might 120 a global index within the storage device 350 for all the objects stored within a distributed multi-master data replication system store.
Das Eingabegeräte 360 könne einen oder mehrere Mechanismen umfassen, über die der Betrieb Informationen in das Speichercluster 120 eingeben kann, wie eine Tastatur, ein Tastenfeld, eine Taste, eine Maus, einen Stift etc. Das Ausgabegerät 370 kann einen oder mehrere Mechanismen umfassen, die Informationen für den Betreiber ausgeben, einschließlich eines Displays, einer Leuchtdiode (LED) usw. Die Kommunikationsschnittstelle 380 könnte alle empfängerähnlichen Mechanismen umfassen, die Speicherclustern 120 die Kommunikation mit anderen Geräten und/oder Systemen ermöglichen. Die Kommunikationsschnittstelle 380 könnte beispielsweise Mechanismen zur Kommunikation misst anderen Speicherclustern 120 und/oder Clients 110 umfassen.The input devices 360 may include one or more mechanisms through which the operation information is stored in the storage cluster 120 such as a keyboard, keypad, key, mouse, pen, etc. The output device 370 may include one or more mechanisms that output information to the operator, including a display, a light emitting diode (LED), etc. The communication interface 380 could include all receiver-like mechanisms, the storage clusters 120 enable communication with other devices and / or systems. The communication interface 380 For example, mechanisms for communication might measure other storage clusters 120 and / or clients 110 include.
4 ist ein Funktionsblockschaltbild eines Speicherclusters 120. Wie in 4 gezeigt kann der Speichercluster 120 auch einen Datenspeicher 410 und eine Blockverarbeitungslogik 420 umfassen. In einer Implementierung, wie in 4 gezeigt, könnte ein Datenspeicher 410 mit einem Speichercluster 120 bereitgestellt werden. In anderen Implementierungen können einiges oder alles vom Datenspeicher 410 innerhalb eines oder mehrerer anderer Geräte des Systems 100 in Kommunikation mit Speichercluster 120 gespeichert werden wie etwa externe Speichergeräte oder Geräte, die mit einem Indexierungssystem (nicht gezeigt) verknüpft sind. 4 is a functional block diagram of a storage cluster 120 , As in 4 the storage cluster can be shown 120 also a data store 410 and a block processing logic 420 include. In an implementation, like in 4 could be a data store 410 with a storage cluster 120 to be provided. In other implementations, some or all of the data store may be 410 within one or more other devices of the system 100 in communication with storage cluster 120 such as external storage devices or devices associated with an indexing system (not shown).
Der Datenspeicher 410 kann einen replizierten Indexspeicher 412 und einen lokalen Objektspeicher 414 enthalten. Der replizierte Indexspeicher 412 kann als Teil der Replikationsschicht des verteilten Multi-Master-Datenreplikationssystems integriert werden. Der replizierte Indexspeicher 412 kann Informationen speichern, die mit dem globalen Index verknüpft sind. Mindestens ein Teil des replizierten Indexspeichers 412 kann auf den mehrfachen Speicherclustern 120 repliziert werden. Die Anzahl der Replikate für jeden replizierten Datenspeicher 412 kann benutzerkonfigurierbar sein. Der lokale Objektspeicher 414 kann Objekte lokal innerhalb des Speicherclusters 120 speichern. Der lokale Objektspeicher 414 kann Dateien beinhalten wie etwa durch Clients hochgeladene Bilder oder Videos (z. B. Clients 110). The data store 410 can be a replicated index store 412 and a local object store 414 contain. The replicated index store 412 can be integrated as part of the replication layer of the distributed multi-master data replication system. The replicated index store 412 can store information associated with the global index. At least part of the replicated index store 412 can on the multiple storage clusters 120 be replicated. The number of replicas for each replicated datastore 412 can be user configurable. The local object store 414 can objects locally within the storage cluster 120 to save. The local object store 414 may include files such as images uploaded by clients or videos (eg, clients 110 ).
Die Blockverarbeitungslogik 420 kann Logik zum Empfangen der von einem Client hochgeladenen Blöcke (wobei jeder Block durch seinen Versatz innerhalb des Objekts definiert ist) und/oder zum automatischen Rekonstruieren von Objekten aus mehreren Blöcken innerhalb des verteilten Multimaster-Datenreplikationssystems umfassen (z. B. Speichercluster 120-1, 120-2, 120-3 und 120-4). Wenn ein Client (z. B. Client 110) mit dem Hochladen des Objekts beginnt, kann die Blockverarbeitungslogik 420 dem Objekt eine eindeutige temporäre Kennung zuweisen, die der Client zum Hochladen aller Blöcke des Objekts verwenden kann. Wenn der Client (z. B. Client 110) das Hochladen aller Blöcke des Objekts beendet hat, kann der Client eine Finalisierungsfunktion aufrufen, die durch die Blockverarbeitungslogik 420 an einem der Cluster 120 durchgeführt werden soll. Die Blockverarbeitungslogik 420 kann Änderungen am globalen Index vornehmen, um das Objekt zu sperren (oder zu blockieren) (d. h. um sicherzustellen, dass keine weiteren Änderungen am Objektinhalt möglich sind). Die Blockverarbeitungslogik 420 kann auch den Hashwert für den Objektinhalt berechnen (d. h. eine alphanummerische Zeichenkette auf der Basis des Objektinhalts) und auf der Basis des Hashwerts dem Objekt eine permanente Kennung zuordnen. Die Blockverarbeitungslogik 420 kann ferner den globalen Index so aktualisieren, dass auf das Objekt in dem verteilten Multimaster-Datenreplikationssystem unter Verwendung der permanenten Kennung zugegriffen werden kann.The block processing logic 420 may include logic for receiving blocks uploaded by a client (each block being defined by its offset within the object) and / or automatically reconstructing objects from multiple blocks within the distributed multi-master data replication system (e.g., storage cluster 120-1 . 120-2 . 120-3 and 120-4 ). When a client (for example, client 110 ) begins with the upload of the object, the block processing logic 420 Give the object a unique temporary identifier that the client can use to upload all blocks of the object. If the client (for example, client 110 ) has finished uploading all the blocks of the object, the client can invoke a finalization function by the block processing logic 420 at one of the clusters 120 to be carried out. The block processing logic 420 can make changes to the global index to lock (or block) the object (ie to ensure that no further changes to the object's content are possible). The block processing logic 420 can also calculate the hash value for the object content (ie, an alphanumeric string based on the object content) and assign a permanent identifier to the object based on the hash value. The block processing logic 420 may also update the global index so that the object in the distributed multi-master data replication system can be accessed using the persistent identifier.
Um die Finalisierung eines Objekts aus mehreren hochgeladenen Blöcken zu erleichtern, können Datensätze (z. B. Metadaten) durch die Blockverarbeitungslogik 420 generiert werden und an einen Teil des globalen Index angehängt werden, verbunden mit einem bestimmten Inhalts-Handle oder einer temporären ID. Durch einen Cluster generierte Datensätze können schließlich an die Indexreplikate in den anderen Cluster in einem verteilten Multimaster-Datenreplikationssystem verbreitet werden. Die Datensätze können beispielsweise einen Bezeichner ”FinStarted” zur Angabe, dass die Objektfinalisierung gestartet wurde, einen Bezeichner ”FinSealed” zur Angabe, dass alle Metadaten der hochgeladenen Objektblöcke durch den Index repliziert wurden und keine weiteren Änderungen am Objektinhalt mehr vorgenommen werden können, einen Bezeichner ”FinRefCopy” zur Angabe, dass ein Querverweis auf eine permanente ID in die globale Indexreplik eingeschlossen werden sollte und die Objektverweise von der temporären ID in den permanenten ID-Indexeintrag kopiert werden sollten, einen Bezeichner ”FinRefCopyDone” zur Angabe, dass ein Querverweis zur globalen Indexreplik hinzugefügt wurde und alle Objektverweise von der temporären ID in den permanenten ID-Indexeintrag kopiert wurden, sowie einen Bezeichner ”FinDone” enthalten, um zukünftige Verweise von der temporären ID zu dem permanenten ID-Indexeintrag umzuleiten. Datensatzformate und -anwendungen sind untenstehend detaillierter beschrieben.To facilitate the finalization of an object from multiple uploaded blocks, records (eg, metadata) may be processed by the block processing logic 420 generated and attached to a portion of the global index associated with a particular content handle or temporary ID. Finally, records generated by a cluster may be propagated to the index replicas in the other clusters in a distributed multimaster data replication system. For example, the records may use an identifier "FinStarted" to indicate that the object has been initialized, an identifier "FinSealed" to indicate that all the metadata of the uploaded object blocks has been replicated by the index and no further changes to the object content can be made "FinRefCopy" to indicate that a cross reference to a permanent ID should be included in the global index replica, and the object references copied from the temporary ID to the permanent ID index entry, a "FinRefCopyDone" identifier to indicate that a cross reference to the global index Index replica was added and all object references were copied from the temporary ID to the permanent ID index entry, as well as a "FinDone" identifier to redirect future references from the temporary ID to the permanent ID index entry. Record formats and applications are described in more detail below.
Obwohl 4 die exemplarischen Funktionskomponenten des Speicherclusters 120 zeigt, kann in anderen Implementierungen der Speichercluster 120 weniger, mehr, verschiedene oder unterschiedlich arrangierte Funktionskomponenten enthalten, als sie in 4 abgebildet sind. In wieder anderen Implementierungen könnten eine oder mehrere Funktionskomponenten des Speicherclusters 120 eine oder mehrere der Aufgaben durchführen, die laut Beschreibung von einer oder mehreren der Funktionskomponenten durchgeführt werden.Even though 4 the exemplary functional components of the storage cluster 120 In other implementations, the storage cluster may 120 contain fewer, more, different or differently arranged functional components than they do in 4 are shown. In yet other implementations, one or more functional components of the storage cluster could 120 perform one or more of the tasks described by one or more of the functional components.
EXEMPLARISCHE DATENSATZSTRUKTUREXEMPLARY DATA RECORD STRUCTURE
5 ist eine Darstellung einer exemplarischen Datensatzstruktur 500 für einen Finalisierungsdatensatz, der in den globalen Index in einer exemplarischen Implementierung geschrieben werden kann. Dem Finalisierungsdatensatz kann im globalen Index eine bestimmte temporäre ID einer Objektreplik zugeordnet werden. 5 is a representation of an exemplary record structure 500 for a finalization record that can be written to the global index in an exemplary implementation. The finalization record can be assigned a specific temporary ID of an object replica in the global index.
Wie in 5 dargestellt kann die Datensatzstruktur 500 einen Bezeichnungsabschnitt 510 und einen Positionsabschnitt 520 umfassen. Der Bezeichnungsabschnitt 510 kann beispielsweise einen Bezeichner ”FinStarted”, einen Bezeichner ”FinSealed”, einen Bezeichner ”FinRefCopy”, einen Bezeichner ”FinRefCopyDone” oder einen Bezeichner ”FindOne” enthalten. Der Speicher-Cluster 120, der vom Client (z. B. Client 110) bei Abschluss des Uploads eine Finalisierungsanforderung empfängt (hierin als ”initiierender Cluster” bezeichnet), kann einen Datensatz ”FinStarted” an die Metadaten des Objekts anfügen, verschlüsselt durch eine temporäre ID.As in 5 can represent the record structure 500 a designation section 510 and a position section 520 include. The designation section 510 For example, it may contain a FinStarted identifier, a FinSealed identifier, a FinRefCopy identifier, a FinRefCopyDone identifier, or an FindOne identifier. The storage cluster 120 that is from the client (eg client 110 ) receives a finalization request upon completion of the upload (referred to herein as an "initiating cluster"), can attach a FinStarted record to the object's metadata, encrypted by a temporary ID.
Der Bezeichner ”FinSealed” kann durch jeden Speichercluster (einschließlich des initiierenden Clusters) hinzugefügt werden, der auf einen Datensatz ”FinStarted” trifft. Der Bezeichner ”FinSealed” kann verwendet werden, um anzugeben, dass keine weiteren Änderungen (d. h. Hinzufügungen, Aktualisierungen oder Löschungen) an der Objektreplik vorgenommen werden können, der der Datensatz ”FinSealed” zugeordnet ist.The identifier "FinSealed" can be used by any storage cluster (including the initiating cluster) Cluster) that encounters a FinStarted record. The "FinSealed" identifier can be used to indicate that no further changes (ie additions, updates, or deletions) can be made to the object replica associated with the "FinSealed" record.
Der Bezeichner ”FinRefCopy” kann von dem initiierenden Cluster verwendet werden, um einen Querverweis von der temporären ID auf eine permanente ID anzugeben (z. B. auf der Basis eines Inhalts-Hashwerts für ein Objekt). Der initiierende Cluster kann eine Meldung ”FinRefCopy” in die Metadaten des Objekts im globalen Index schreiben. Der Bezeichner ”FinRefCopy” kann mit dem globalen Index repliziert werden, um für andere Speichercluster 120 anzugeben, dass eine permanente ID für das Objekt verfügbar ist und dass Verweise, die mit der temporären ID verknüpft sind, in den permanenten ID-Indexeintrag kopiert werden sollten. Der Bezeichner ”FinRefCopy” kann auch angeben, dass keine neuen Verweise dem temporären ID-Indexeintrag hinzugefügt werden können.The identifier "FinRefCopy" may be used by the initiating cluster to indicate a cross-reference from the temporary ID to a permanent ID (eg, based on a content hash for an object). The initiating cluster can write a message "FinRefCopy" in the metadata of the object in the global index. The identifier "FinRefCopy" can be replicated with the global index to other storage clusters 120 To specify that a permanent ID is available to the object and that references associated with the temporary ID should be copied to the permanent ID index entry. The identifier "FinRefCopy" may also indicate that no new references can be added to the temporary ID index entry.
Der Bezeichner ”FinRefCopyDone” kann verwendet werden, um anzugeben, dass ein Cluster alle mit der temporären ID verknüpften Verweise in den permanenten ID-Eintrag in der globalen Indexreplik kopiert hat. Wenn der initiierende Cluster einen Bezeichner ”FinRefCopyDone” für alle Speichercluster im verteilten Multimaster-Datenreplikationssystem erkennt, können die mit der temporären ID verknüpften Datensätze ”FinStarted”, ”FinSealed” und ”FinRefCopyDone” gelöscht werden. In einer Implementierung kann der Bezeichner ”FinRefCopy” im globalen Index zurückgelassen werden, um einen Querverweis zu liefern, über den zukünftige Verweise auf die temporäre ID an die permanente ID weitergeleitet werden. In einer anderen Implementierung kann der Bezeichner ”FinRefCopy” zusammen mit den anderen Datensätzen gelöscht werden und ein neuer Datensatz ”FinDone” kann hinzugefügt werden.The identifier "FinRefCopyDone" can be used to indicate that a cluster has copied all references associated with the temporary ID to the permanent ID entry in the global index replica. If the initiating cluster detects a "FinRefCopyDone" identifier for all storage clusters in the distributed multimaster data replication system, the FinStarted, FinSealed, and FinRefCopyDone records associated with the temporary ID can be deleted. In one implementation, the identifier "FinRefCopy" may be left in the global index to provide a cross-reference through which future references to the temporary ID will be forwarded to the permanent ID. In another implementation, the identifier "FinRefCopy" may be deleted along with the other records and a new record "FinDone" may be added.
Der Bezeichner ”FinDone” kann von dem initiierenden Cluster verwendet werden, um einen permanenten Querverweis von dem durch die temporäre ID verschlüsselten Eintrag auf eine permanenten ID (d. h. auf der Basis eines Inhalts-Hashwerts für ein Objekt) für die entsprechende Objektreplik anzugeben. Der initiierende Cluster kann eine Meldung ”FinDone” in die Metadaten des Objekts im globalen Index schreiben. Der Bezeichner ”FinDone” kann mit dem globalen Index repliziert werden, um für andere Speichercluster 120 anzugeben, dass eine permanente ID für das Objekt verfügbar ist und dass Verweise, die mit der temporären ID verknüpft sind, in den permanenten ID-Indexeintrag kopiert werden sollten.The identifier "FinDone" may be used by the initiating cluster to indicate a persistent cross-reference from the entry encrypted by the temporary ID to a permanent ID (ie, based on a content hash for an object) for the corresponding object replica. The initiating cluster can write a message "FinDone" in the metadata of the object in the global index. The identifier "FinDone" can be replicated with the global index to other storage clusters 120 To specify that a permanent ID is available to the object and that references associated with the temporary ID should be copied to the permanent ID index entry.
In einer Implementierung kann der Positionsabschnitt 520, wenn der Bezeichnungsabschnitt 510 die Bezeichnungen ”FinStarted”, ”FinSealed” oder ”FinRefCopyDone” enthält, eine eindeutige Kennung (d. h. Cluster-ID) für den Speichercluster 120 enthalten, die der Bezeichnung im Bezeichnungsabschnitt 510 zugeordnet ist. In einer anderen Implementierung kann der Positionsabschnitt 520, wenn der Bezeichnungsabschnitt 510 eine Bezeichnung ”FinRefCopy” oder ”FinDone” enthält, einen Querverweis auf eine permanente ID enthalten, die der temporären ID der Objektreplik zugeordnet ist.In one implementation, the position portion 520 if the label section 510 the terms "FinStarted", "FinSealed" or "FinRefCopyDone" contain a unique identifier (ie cluster ID) for the storage cluster 120 contain the name in the designation section 510 assigned. In another implementation, the position section 520 if the label section 510 a label "FinRefCopy" or "FinDone" contains a cross-reference to a permanent ID associated with the temporary ID of the object replica.
Die Datensatzstruktur 500 kann in der Form ”Designation:Location” (Bezeichnung:Position) aufgeführt sein. Beispielsweise kann ein Datensatz für ein bestimmtes Objekt mit einer temporären ID durch den Speichercluster 120-1 mit dem Datensatz ”01:FinStarted” dem globalen Index hinzugefügt werden, wobei ”FinStarted” der Bezeichner und ”01” die Cluster-ID für den Speichercluster 120-1 ist. Ein Datensatz für eine andere Replik des gleichen Objekts im Speichercluster 120-2 kann ”FinRefCopy:catl324” sein, wobei ”FinRefCopy” der Bezeichner und ”catl324” ist die permanente ID für das Objekt ist.The record structure 500 can be listed in the form "Designation: Location". For example, a record for a particular object with a temporary ID may be used by the storage cluster 120-1 with the record "01: FinStarted" added to the global index, where "FinStarted" is the identifier and "01" is the cluster ID for the storage cluster 120-1 is. A record for another replica of the same object in the storage cluster 120-2 can be "FinRefCopy: catl324", where "FinRefCopy" is the identifier and "catl324" is the permanent ID for the object.
EXEMPLARISCHE PROZESSABLÄUFEEXEMPLARY PROCESS PROCESSES
6 ist ein Flussdiagramm eines exemplarischen Prozesses 600 für die Verwaltung Client-initiierter Upload-Vorgänge gemäß einer hierin beschriebenen Implementierung. In einer Implementierung kann der Prozess 600 durch einen der Clients 110 durchgeführt werden. In einer anderen Implementierung können einige oder alle Bestandteile von Prozess 600 von einem anderen Gerät oder einer Gruppe von Geräten durchgeführt werden, inklusive oder exklusive Client 110. 6 is a flowchart of an exemplary process 600 for managing client-initiated upload operations according to an implementation described herein. In one implementation, the process may be 600 through one of the clients 110 be performed. In another implementation, some or all components of process 600 be performed by another device or group of devices, inclusive or exclusive client 110 ,
Bezugnehmend auf 6 kann der Prozess 600 damit beginnen, das Hochladen eines Objekts (Block 610) anzufordern und eine temporäre ID für das Objekt (Block 620) zu empfangen. Beispielsweise kann Client 110 eine Anforderung zum Hochladen einer Datei in ein verteiltes Multimaster-Datenreplikationssystem an den Speichercluster 120 übermitteln. Der Speichercluster kann die Anforderung empfangen und eine eindeutige temporäre ID für die Datei zuweisen. Die temporäre ID kann in einem beliebigen Format angegeben werden, das sich vom im globalen Index verwendeten Format einer permanenten ID (d. h. ein inhaltsbasierter Hashwert) unterscheidet. Client 110 kann die temporäre ID aus dem Speichercluster 120 empfangen.Referring to 6 can the process 600 start uploading an object (block 610 ) and request a temporary ID for the object (block 620 ) to recieve. For example, client 110 a request to upload a file to a distributed multimaster data replication system to the storage cluster 120 to transfer. The storage cluster can receive the request and assign a unique temporary ID for the file. The temporary ID can be specified in any format that differs from the format used in the global index of a permanent ID (that is, a content-based hash). client 110 can retrieve the temporary ID from the storage cluster 120 receive.
Das Objekt kann in Blöcke unterteilt sein (Block 630). Beispielsweise kann Client 110 die Datei in mehrere Blöcke unterteilen, die keine überlappenden Daten aufweisen. In einer Implementierung kann jeder Block einen entsprechenden Byte-Bereich haben, der durch seinen Versatz und seine Datengröße identifiziert ist (z. B. für einen ersten Block kann ein Anfangsversatz 0 und eine Blockgröße von 63.900.000 Byte angegeben sein, für einen zweiten Block kann ein Versatz von 63.900.000 und eine Blockgröße von 63.989.050 Byte angegeben sein ein, für einen dritten Block kann ein Versatz von 127.889.049 und eine Blockgröße von 62.800.000 Byte angegeben sein usw.).The object can be divided into blocks (block 630 ). For example, client 110 divide the file into multiple blocks that do not have overlapping data. In one implementation, each block may have a corresponding byte For example, for a first block, an initial offset of 0 and a block size of 63,900,000 bytes may be specified, for a second block an offset of 63,900,000 and a block size may be specified of 63,989,050 bytes, for a third block an offset of 127,889,049 and a block size of 62,800,000 bytes may be specified, etc.).
Die Blöcke können asynchron hochgeladen werden (Block 640) und eine Finalisierungsanforderung kann initiiert werden (Block 650). Beispielsweise kann Client 110 die Blöcke in jeden verfügbaren Speichercluster 120 im verteilten Multimaster-Datenreplikationssystem hochladen. Die Blöcke können so hochgeladen werden, dass jeder Block mit der gleichen zugewiesenen temporären ID gekennzeichnet ist und so die Vereinigung der Byte-Bereiche der hochgeladenen Blöcke die gesamte Datei abdeckt. Wenn der letzte Block hochgeladen ist, kann Client 110 eine Finalisierungsfunktion aufrufen, um eine Aktivität im verteilten Multimaster-Datenreplikationssystem zu initiieren, durch die die Datei gesperrt, der Inhalts-Hashwert der Datei berechnet und eine permanente ID auf der Basis des Hashwerts zugewiesen wird. Die Finalisierungsanforderung kann von jedem Speichercluster 120 empfangen werden, der eine Metadatenreplik des hochgeladenen Objekts hat. Der Speichercluster 120, der die Finalisierungsanforderung empfängt, kann als initiierender Cluster hinsichtlich der spezifischen hochgeladenen Datei für nachfolgende Finalisierungsaktivitäten im verteilten Multimaster-Datenreplikationssystem fungieren.The blocks can be uploaded asynchronously (block 640 ) and a finalization request can be initiated (block 650 ). For example, client 110 the blocks in each available storage cluster 120 in the distributed multimaster data replication system. The blocks can be uploaded so that each block is tagged with the same assigned temporary ID, and so the unification of the byte areas of the uploaded blocks covers the entire file. When the last block is uploaded, client can 110 Invoke a finalization function to initiate activity in the distributed multimaster data replication system that locks the file, calculates the content hash of the file, and assigns a permanent ID based on the hash value. The finalization request can be from any storage cluster 120 receive a metadata replica of the uploaded object. The storage cluster 120 receiving the finalization request may act as the initiating cluster for the specific uploaded file for subsequent finalization activities in the multi-master distributed data replication system.
Ein Erfolgscode kann eingehen (Block 660). Beispielsweise kann Client 110 einen Erfolgscode von einem der Speichercluster 120 empfangen (z. B. vom initiierenden Cluster), durch den angegeben wird, dass die Datei erfolgreich in das verteilte Multimaster-Datenreplikationssystem hochgeladen wurde.A success code can be received (block 660 ). For example, client 110 a success code from one of the storage clusters 120 receive (for example, from the initiating cluster) indicating that the file has been successfully uploaded to the distributed multimaster data replication system.
7 ist ein Flussdiagramm eines exemplarischen Prozesses 700 für den Empfang Client-initiierter Uploads in einem verteilten Multimaster-Datenreplikationssystem (z. B. Dateisystem 140). In einer Implementierung kann der Prozess 700 durch einen oder mehrere Speichercluster 120 durchgeführt werden. In einer anderen Implementierung können einige oder alle Bestandteile von Prozess 700 von einem anderen Gerät oder einer Gruppe von Geräten durchgeführt werden, inklusive oder exklusive des Speicherclusters 120. Der Prozess 700 kann periodisch in jedem Speichercluster 120 implementiert werden und kann einen Scan aller oder eines Teils der Objekte im Speichercluster 120 umfassen. Für bestimmte Beispiele des Prozesses 700 wie hierin beschrieben, kann sich auf die Speichercluster 120-1 und 120-2 des Dateisystems 140 bezogen werden, wobei der Speichercluster 120-1 eine Cluster-ID von ”01” beinhaltet und der Speichercluster 120-2 eine Cluster-ID von ”02” beinhaltet. 7 is a flowchart of an exemplary process 700 for receiving client initiated uploads in a distributed multimaster data replication system (eg file system 140 ). In one implementation, the process may be 700 through one or more storage clusters 120 be performed. In another implementation, some or all components of process 700 be performed by another device or a group of devices, including or excluding the storage cluster 120 , The process 700 can periodically in each storage cluster 120 can be implemented and can scan all or part of the objects in the storage cluster 120 include. For specific examples of the process 700 as described herein, may refer to the storage clusters 120-1 and 120-2 of the file system 140 be related to the storage cluster 120-1 includes a cluster ID of "01" and the storage cluster 120-2 contains a cluster ID of "02".
Wie in 7 dargestellt kann der Prozess 700 damit beginnen, das Hochladen eines Objekts (Block 710) und das Empfangen einer temporären ID für das Objekt anzufordern. Beispielsweise kann Speichercluster 120-1 eine Upload-Anforderung für ein Objekt von einem der Clients 110 empfangen. Der Speichercluster 120 kann eine eindeutige temporäre ID für das Objekt zuweisen, die Client 110 verwenden kann, um jeden Block des Objekts beim Hochladen zu bezeichnen. Die temporäre ID kann als Schlüssel im globalen Index für das hochgeladene Objekt verwendet werden. Die temporäre ID kann in einem beliebigen Format angegeben werden, das sich vom im globalen Index verwendeten Format einer permanenten ID (d. h. ein inhaltsbasierter Hashwert) unterscheidet.As in 7 the process can be represented 700 start uploading an object (block 710 ) and to request a temporary ID for the object. For example, storage cluster 120-1 An upload request for an object from one of the clients 110 receive. The storage cluster 120 can assign a unique temporary ID for the object, the client 110 can use to designate each block of the object when uploading. The temporary ID can be used as the key in the global index for the uploaded object. The temporary ID can be specified in any format that differs from the format used in the global index of a permanent ID (that is, a content-based hash).
Die hochgeladenen Blöcke können empfangen werden (Block 730). Beispielsweise können ein oder mehrere Speichercluster 120 Blöcke von Client 110 empfangen. Blöcke können in jeden verfügbaren Cluster 120 im verteilten Multimaster-Datenreplikationssystem hochgeladen werden, sodass verschiedene Blöcke des gleichen Objekts in verschiedenen Speicherclustern 120 empfangen werden können. Die Blöcke können so hochgeladen werden, dass jeder Block mit der gleichen zugewiesenen temporären ID gekennzeichnet ist und so die Vereinigung der Byte-Bereiche der hochgeladenen Blöcke die gesamte Datei abdeckt.The uploaded blocks can be received (block 730 ). For example, one or more storage clusters 120 Blocks of client 110 receive. Blocks can be in any available cluster 120 Uploaded in the distributed multimaster data replication system, allowing different blocks of the same object in different storage clusters 120 can be received. The blocks can be uploaded so that each block is tagged with the same assigned temporary ID, and so the unification of the byte areas of the uploaded blocks covers the entire file.
Eine Finalisierungsanforderung kann empfangen werden (Block 740). Beispielsweise kann einer der Speichercluster 120 eine Finalisierungsanforderung von dem Client 110 empfangen, der die Objektblöcke hochgeladen hat. Die Finalisierungsanforderung kann empfangen werden, nachdem alle Blöcke des Objekts hochgeladen wurden. Der Speichercluster 120, der die Finalisierungsanforderung empfängt, kann als der initiierende Cluster bezeichnet werden.A finalization request can be received (block 740 ). For example, one of the storage clusters 120 a finalization request from the client 110 received who uploaded the object blocks. The finalization request can be received after all blocks of the object have been uploaded. The storage cluster 120 receiving the finalization request may be referred to as the initiating cluster.
Das Objekt kann aus den hochgeladenen Blöcken rekonstruiert werden (Block 750). Beispielsweise kann einer der Speichercluster 120 (z. B. der initiierende Cluster) durch die zugrunde liegende Replikationsschicht des verteilten Multimaster-Datenreplikationssystems die Positionen aller Blöcke empfangen, die mit einem hochgeladenen Objekt verknüpft sind. Unter Verwendung der eindeutigen temporären ID und der Byte-Bereichssequenz für jeden Block kann der Speichercluster 120 die Blöcke von ihren aktuellen Positionen kopieren und sie zusammenfügen, um das hochgeladene Objekt zu rekonstruieren.The object can be reconstructed from the uploaded blocks (block 750 ). For example, one of the storage clusters 120 (e.g., the initiating cluster) through the underlying replication layer of the distributed multimaster data replication system receives the locations of all blocks associated with an uploaded object. Using the unique temporary ID and byte range sequence for each block, the storage cluster can 120 copy the blocks from their current positions and merge them to reconstruct the uploaded object.
Die Finalisierungsanforderung kann verarbeitet werden (Block 760). Beispielsweise kann der initiierende Cluster eine Serie asynchroner Aktivitäten initiieren, um das Objekt zu sperren (d. h. sicherzustellen, dass keine weiteren Änderungen am Objektinhalt mehr möglich sind), den Hashwert für den Objektinhalt (d. h. eine alphanummerische Zeichenkette, die auf der Basis des Objektinhalts) zu berechnen und dem Objekt eine permanente ID auf der Basis des Hashwerts zuzuordnen. Die Finalisierungsaktivitäten können auch den globalen Index aktualisieren, damit sowohl über die permanente ID als auch über die temporäre ID im verteilten Multimaster-Datenreplikationssystem auf das Objekt zugegriffen werden kann. Die Verarbeitung der Finalisierungsanforderung wird bezüglich 8–10 näher diskutiert. The finalization request can be processed (block 760 ). For example, the initiating cluster may initiate a series of asynchronous activities to lock the object (ie, ensure that no further changes to the object content are possible), the hash value for the object content (ie, an alphanumeric string based on the object content) and associate the object with a permanent ID based on the hash value. The finalization activities can also update the global index so that the object can be accessed through both the permanent ID and the temporary ID in the distributed multimaster data replication system. The processing of the finalization request is with respect to 8th - 10 discussed in more detail.
8 ist ein Flussdiagramm eines exemplarischen Prozesses für die Verarbeitung einer Finalisierungsanforderung für ein hochgeladenes Objekt in Block 760 oben. In einer Implementierung kann der Prozess durch einen initiierenden Cluster (z. B. einen der Speichercluster 120) durchgeführt werden. In einer anderen Implementierung können einige oder alle Bestandteile des Prozesses von einem anderen Gerät oder einer Gruppe von Geräten durchgeführt werden, inklusive oder exklusive des initiierenden Clusters. Für bestimmte Beispiele des Prozesses in 8 kann Bezug auf das verteilte Multimaster-Dateireplikationssystem (z. B. Dateisystem 140) genommen werden, welches drei Speichercluster enthält, die Speichercluster 120-1, 120-2 und 120-3. Angenommen, Speichercluster 120-1 ist der initiierende Cluster mit einer Cluster-ID ”01”, dann sind die Speichercluster 120-2 und 120-3 getrennte Speichercluster mit den Cluster-IDs ”02” bzw. ”03”. 8th FIG. 10 is a flowchart of an exemplary process for processing a finalization request for an uploaded object in block 760 above. In one implementation, the process may be performed by an initiating cluster (eg, one of the storage clusters 120 ) be performed. In another implementation, some or all of the components of the process may be performed by another device or group of devices, inclusive or exclusive of the initiating cluster. For specific examples of the process in 8th may refer to the distributed multimaster file replication system (eg file system 140 ), which contains three storage clusters, the storage clusters 120-1 . 120-2 and 120-3 , For example, storage clusters 120-1 if the initiating cluster is a cluster ID "01", then the storage clusters are 120-2 and 120-3 separate storage clusters with cluster IDs "02" and "03".
Eine Meldung, dass die Finalisierung gestartet wurde, kann den Objektmetadaten hinzugefügt werden (Block 800). So kann beispielsweise der initiierende Cluster 120-1 (z. B. Blockverarbeitungslogik 420) ”FinStarted:01” zu den Objektmetadaten in der globalen Indexreplik hinzufügen, die im initiierenden Cluster 120-1 gespeichert ist. Wie bei jeder Aktualisierung des globalen Index kann die Meldung, dass die Finalisierung gestartet wurde, schließlich an alle globalen Indexrepliken in anderen Speicherclustern im verteilten Multimaster-Datenreplikationssystem verbreitet werden (d. h. einschließlich Speichercluster 120-2 und 120-3).A message that the finalization has started can be added to the object metadata (block 800 ). For example, the initiating cluster 120-1 (eg block processing logic 420 ) Add "FinStarted: 01" to the object metadata in the global index replica that is in the initiating cluster 120-1 is stored. As with any global index update, the message that finalization has started may eventually be propagated to all global index replicas in other storage clusters in the distributed multimaster data replication system (that is, including storage clusters 120-2 and 120-3 ).
Ein Erfolgscode kann an den Client gesendet werden (Block 810). So kann beispielsweise der initiierende Cluster 120-1 einen Erfolgscode an Client 110 senden, der den Objekt-Upload initiiert hat. Der Erfolgscode kann angeben, dass alle Blöcke des Objekts erfolgreich hochgeladen wurden und dass der Upload-Prozess aus Sicht von Client 110 abgeschlossen ist.A success code can be sent to the client (block 810 ). For example, the initiating cluster 120-1 a success code to client 110 send that initiated the object upload. The success code can indicate that all blocks of the object have been successfully uploaded and that the upload process is from the client's perspective 110 is completed.
Asynchrone Scanvorgänge der globalen Indexreplik können bei jedem Cluster durchgeführt werden (Block 820). So kann beispielsweise jeder der Speichercluster 120-1, 120-2 und 120-3 regelmäßig einen Scan aller oder eines Teils seiner jeweiligen globalen Indexrepliken durchführen und/oder in diese schreiben. Scanvorgänge werden bezüglich 9 näher diskutiert.Asynchronous global index replication scans can be performed on each cluster (Block 820 ). For example, each of the storage clusters 120-1 . 120-2 and 120-3 periodically scan and / or write to all or part of their respective global index replicas. Scans will be regarding 9 discussed in more detail.
9 ist ein Flussdiagramm eines exemplarischen Prozesses für die Durchführung von Scanvorgängen in einem Speichercluster gemäß einer hierin beschriebenen Implementierung. In einer Implementierung kann der Prozess durch einen der Speichercluster 120 (z. B. Speichercluster 120-1, 120-2 oder 120-3) durchgeführt werden. Jeder Speichercluster 120 innerhalb eines verteilten Multimaster-Datenreplikationssystems kann den Prozess asynchron durchführen, bis die Finalisierung des hochgeladenen Objekts abgeschlossen ist. Für bestimmte Beispiele des Prozesses in 9 kann Bezug auf das verteilte Multimaster-Dateireplikationssystem (z. B. Dateisystem 140) genommen werden, welches drei Speichercluster enthält, die Speichercluster 120-1, 120-2 und 120-3. Angenommen, Speichercluster 120-1 ist der initiierende Cluster mit einer Cluster-ID ”01”, dann sind die Speichercluster 120-2 und 120-3 getrennte Speichercluster mit den Cluster-IDs ”02” bzw. ”03”. 9 FIG. 10 is a flowchart of an exemplary process for performing scans in a storage cluster according to an implementation described herein. In one implementation, the process may be through one of the storage clusters 120 (eg storage cluster 120-1 . 120-2 or 120-3 ) be performed. Each storage cluster 120 Within a distributed multimaster data replication system, the process may perform asynchronously until finalization of the uploaded object is completed. For specific examples of the process in 9 may refer to the distributed multimaster file replication system (eg file system 140 ), which contains three storage clusters, the storage clusters 120-1 . 120-2 and 120-3 , For example, storage clusters 120-1 if the initiating cluster is a cluster ID "01", then the storage clusters are 120-2 and 120-3 separate storage clusters with cluster IDs "02" and "03".
Ein Scan der globalen Indexreplik kann initiiert werden (Block 900). Beispielsweise kann Speichercluster 120-2 einen Offline-Scan der globalen Indexreplik durchführen, die in Speichercluster 120-2 gespeichert ist. Der Scan kann alle Indexeinträge in Speichercluster 120-2 prüfen.A scan of the global index replica can be initiated (Block 900 ). For example, storage cluster 120-2 perform an offline scan of global index replicas that are in storage clusters 120-2 is stored. The scan can scan all index entries in storage clusters 120-2 check.
Es kann ermittelt werden, ob ein durch eine temporäre ID verschlüsselter Eintrag eine Meldung hat, dass die Finalisierung gestartet wurde (Block 910). So kann beispielsweise Speichercluster 120-2 auf ein Objekt in der globalen Indexreplik treffen, das durch eine temporäre ID verschlüsselt ist und eine Meldung von einem anderen Speichercluster (z. B. von Speichercluster 120-1) enthält, dass die Finalisierung gestartet wurde (z. B. ”FinStarted:01”). Wenn der durch eine temporäre ID verschlüsselte Eintrag keine Meldung enthält, dass die Finalisierung gestartet wurde (Block 910 – NO), kann der Prozess zu Block 900 zurückkehren, um den Scan fortzusetzen, oder schließlich einen weiteren Scan der globalen Indexreplik initiieren.It can be determined whether an entry encrypted by a temporary ID has a message that finalization has been started (Block 910 ). For example, storage clusters 120-2 encounter an object in the global index replica that is encrypted by a temporary ID and a message from another storage cluster (for example, storage cluster 120-1 ) states that finalization has been started (eg "FinStarted: 01"). If the entry encrypted by a temporary ID does not contain a message that finalization has started (Block 910 - NO), the process can block 900 return to continue the scan, or eventually initiate another global index replica scan.
Wenn der durch eine temporäre ID verschlüsselte Eintrag eine Meldung enthält, dass die Finalisierung gestartet wurde (Block 910 – YES), kann eine Objektsperrungsmeldung zu den Objektmeldungsdaten hinzugefügt werden, wenn für den Speichercluster, der den Scan durchführt noch keine Objektsperrungsmeldung vorhanden ist (Block 920). Wenn der Scan in Speichercluster 120-2 beispielsweise ”FinStarted:01” in einem durch eine temporäre ID verschlüsselten Eintrag erkennt, kann der Speichercluster 120 ”FinSealed:02” zu den Metadaten des Objekts in der globalen Indexreplik in Speichercluster 120-2 hinzufügen. Das Vorhandensein der Meldung ”FinSealed” verhindert, dass andere Systemkomponenten des entsprechenden Speicherclusters Änderungen (Hinzufügungen, Aktualisierungen, Lösungen) an den hochgeladenen Objektbytes vornehmen können.If the entry encrypted by a temporary ID contains a message that finalization has started (Block 910 - YES), an object lock message can be added to the object message data if there is no object lock message for the storage cluster that is performing the scan (Block 920 ). If the scan in storage cluster 120-2 For example, if "FinStarted: 01" recognizes an entry encrypted by a temporary ID, the storage cluster may 120 "FinSealed: 02" to the metadata of the object in the global index replica in storage clusters 120-2 Add. The presence of the FinSealed message prevents other system components of the corresponding storage cluster from making changes (additions, updates, solutions) to the uploaded object bytes.
Es kann ermittelt werden, ob ein durch eine temporäre ID verschlüsselter Eintrag eine Objektsperrungsmeldung von allen Speicherclustern im verteilten Multimaster-Datenreplikationssystem hat (Block 930). Beispielsweise kann der initiierende Cluster 120-1 auf ein Objekt in der globalen Indexreplik treffen, das durch eine temporäre ID verschlüsselt ist und Objektsperrungsmeldungen (z. B. ”FinSealed:01”, ”FinSealed:02”, ”FinSealed:03”) von allen Speicherclustern im verteilten Multimaster-Datenreplikationssystem (z. B. von den Speicherclustern 120-1, 120-2 und 120-3) enthält. Wenn der durch eine temporäre ID verschlüsselte Eintrag keine Objektsperrungsmeldungen enthält (Block 930 – NO), kann der Prozess zu Block 900 zurückkehren, um den Scan fortzusetzen, oder schließlich einen weiteren Scan der globalen Indexreplik initiieren.It can be determined whether an entry encrypted by a temporary ID has an object lock message from all storage clusters in the distributed multimaster data replication system (Block 930 ). For example, the initiating cluster 120-1 encounter an object in the global index replica that is encrypted by a temporary ID and object lock messages (for example, "FinSealed: 01", "FinSealed: 02", "FinSealed: 03") from all storage clusters in the distributed multimaster data replication system ( for example, from the storage clusters 120-1 . 120-2 and 120-3 ) contains. If the entry encrypted by a temporary ID does not contain any object lock messages (block 930 - NO), the process can block 900 return to continue the scan, or eventually initiate another global index replica scan.
Wenn der durch eine temporäre ID verschlüsselte Eintrag keine Objektsperrungsmeldung aus allen Speicherclustern enthält (Block 930 – NO), können ein permanenter ID-Eintrag und ein Kopieverweis auf die permanente ID hinzugefügt werden, wenn noch nicht vorhanden (Block 940). Wenn beispielsweise der Scan im initiierenden Cluster 120-1 Objektsperrungsmeldungen für alle Speichercluster in einem durch eine temporäre ID verschlüsselten Eintrag auffindet (z. B. ”FinSealed:01”, ”FinSealed:02”, ”FinSealed:03”), kann der Speichercluster 120-1 (z. B. Blockverarbeitungslogik 420) den Hashwert für den Objektinhalt berechnen auf der Basis des Hashwerts die permanente Objekt-ID erstellen. Der Speichercluster 120-1 kann dann ”FinRefCopy:PermID” zu den Metadaten des Objekts im Speichercluster 120-1 hinzufügen (wobei PermID die auf der Basis des Inhalts-Hashwerts neu generierte permanente ID ist). Das Vorhandensein der Meldung ”FinRefCopy:PermID” kann auch verhindern, dass andere Systemkomponenten in den anderen Speicherclustern (z. B. Speichercluster 120-2 und 120-3) Änderungen (Hinzufügungen, Aktualisierungen, Lösungen) an den Bytes des Objekts vornehmen, ebenso wie an den Verweisen, die in den Metadaten des Objekts gespeichert sind.If the entry encrypted by a temporary ID does not contain an object lock message from all storage clusters (Block 930 - NO), a permanent ID entry and a copy reference can be added to the permanent ID, if not already present (block 940 ). For example, if the scan is in the initiating cluster 120-1 Object lock messages for all storage clusters in an entry encrypted by a temporary ID (for example, "FinSealed: 01", "FinSealed: 02", "FinSealed: 03") can be used by the storage cluster 120-1 (eg block processing logic 420 ) Calculate the hash value for the object content Create the permanent object ID based on the hash value. The storage cluster 120-1 then "FinRefCopy: PermID" to the metadata of the object in the storage cluster 120-1 (where PermID is the persistent ID regenerated based on the content hash value). The presence of the "FinRefCopy: PermID" message can also prevent other system components in the other storage clusters (for example, storage clusters 120-2 and 120-3 ) Make changes (additions, updates, solutions) to the bytes of the object, as well as the references stored in the object's metadata.
Es kann ermittelt werden, ob ein durch eine temporäre ID verschlüsselter Eintrag einen Kopieverweis auf eine permanente ID hat (Block 950). Beispielsweise kann jeder Speichercluster 120 (d. h. jeder der Speichercluster 120-1, 120-2 oder 120-3) auf ein Objekt in der globalen Indexreplik treffen, das durch eine temporäre ID verschlüsselt ist und eine Kopieverweismeldung enthält (z. B. ”FinRefCopy:PermID”). Wenn der durch eine temporäre ID verschlüsselte Eintrag keinen Kopieverweis auf eine permanente ID enthält (Block 950 – NO), kann der Prozess zu Block 900 zurückkehren, um den Scan fortzusetzen, oder schließlich einen weiteren Scan der globalen Indexreplik initiieren.It can be determined whether an entry encrypted by a temporary ID has a copy reference to a permanent ID (Block 950 ). For example, each storage cluster 120 (ie, each of the storage clusters 120-1 . 120-2 or 120-3 ) encounter an object in the global index replica that is encrypted by a temporary ID and contains a copy reference message (for example, "FinRefCopy: PermID"). If the entry encrypted by a temporary ID does not contain a copy reference to a permanent ID (Block 950 - NO), the process can block 900 return to continue the scan, or eventually initiate another global index replica scan.
Wenn der durch eine temporäre ID verschlüsselte Eintrag einen Kopieverweis auf eine permanente ID enthält (Block 950 – YES), können Objektverweise im temporären ID-Eintrag in den permanenten ID-Eintrag kopiert und eine Meldung eingefügt werden, dass das Kopieren durchgeführt wurde, wenn diese noch nicht vorhanden ist (Block 960). Wenn beispielsweise der Scan im Speichercluster 120-2 in einem durch eine temporäre ID verschlüsselten Eintrag ”FinRefCopy:PermID” auffindet, kann Speichercluster 120-2 alle im temporären ID-Eintrag aufgeführten Objektverweise in den Eintrag kopieren, der durch die entsprechende permanente ID verschlüsselt ist. Sobald das Kopieren abgeschlossen ist, kann Speichercluster 120-2 ”FinRefCopyDone:02” zu dem durch die temporäre ID verschlüsselten Eintrag in Speichercluster 120-2 hinzufügen.If the entry encrypted by a temporary ID contains a copy reference to a permanent ID (Block 950 - YES), object references in the temporary ID entry can be copied into the permanent ID entry and a message can be inserted that the copying was performed if it does not already exist (block 960 ). For example, if the scan is in the storage cluster 120-2 in a finRefCopy: PermID entry encrypted by a temporary ID, can use storage cluster 120-2 Copy all object references listed in the temporary ID entry to the entry that is encrypted by the corresponding permanent ID. Once the copy is complete, Storage Cluster can 120-2 "FinRefCopyDone: 02" to the entry in storage clusters encrypted by the temporary ID 120-2 Add.
Es kann ermittelt werden, ob ein durch eine temporäre ID verschlüsselter Eintrag Meldungen aus allen Clustern enthält, dass das Kopieren durchgeführt wurde (Block 970). Beispielsweise kann der initiierende Cluster 120-1 auf ein Objekt in der globalen Indexreplik treffen, das durch eine temporäre ID verschlüsselt ist und Meldungen, dass das Kopieren durchgeführt wurde (z. B. ”FinRefCopyDone:01”, ”FinRefCopyDone:02”, ”FinRefCopyDone:03”), von allen Speicherclustern im verteilten Multimaster-Datenreplikationssystem (z. B. von den Speicherclustern 120-1, 120-2 und 120-3) enthält. Wenn der durch eine temporäre ID verschlüsselte Eintrag keine Meldung enthält, dass das Kopieren durchgeführt wurde (Block 970 – NO), kann der Prozess zu Block 900 zurückkehren, um den Scan fortzusetzen, oder schließlich einen weiteren Scan der globalen Indexreplik initiieren.It can be determined whether an entry encrypted by a temporary ID contains messages from all clusters that the copying has been performed (block 970 ). For example, the initiating cluster 120-1 to encounter an object in the global index replica that is encrypted by a temporary ID, and messages indicating that copying has been performed (for example, "FinRefCopyDone: 01", "FinRefCopyDone: 02", "FinRefCopyDone: 03") of all Storage clusters in the distributed multimaster data replication system (for example, from the storage clusters 120-1 . 120-2 and 120-3 ) contains. If the entry encrypted by a temporary ID does not contain a message indicating that copying has been performed (block 970 - NO), the process can block 900 return to continue the scan, or eventually initiate another global index replica scan.
Wenn der durch eine temporäre ID verschlüsselte Eintrag eine Meldung enthält, dass das Kopieren durchgeführt wurde (Block 970 – YES), können die mit der temporären ID verbundenen überzähligen Metadaten entfernt und eine Meldung hinzugefügt werden, dass die Finalisierung abgeschlossen ist (Block 980). Wenn beispielsweise der Scan im initiierenden Cluster 120-1” FinRefCopyDone” für alle Speichercluster in einem durch eine temporäre ID verschlüsselten Eintrag auffindet (z. B. ”FinRefCopyDone:01”, ”FinRefCopyDone:02”, ”FinRefCopyDone:03”), kann der initiierende Cluster 120-1 alle Meldungen, dass die Finalisierung gestartet wurde (”FinStarted”), alle Objektsperrungsmeldungen (”FinSealed”), Kopieverweismeldungen (”FinRefCopy”) und alle Meldungen, dass die Kopie abgeschlossen wurde (”FinRefCopyDone”), aus dem durch die temporäre ID verschlüsselten Eintrag entfernen. Der initiierende Cluster kann auch eine Meldung ”FinDone:PermID” hinzufügen, um einen permanenten Querverweis von dem durch die temporäre ID verschlüsselten Eintrag auf einen durch die permanente ID verschlüsselten Eintrag anzugeben (z. B. auf der Basis eines Inhalts-Hashwerts für ein Objekt). Es ist zu beachten, dass der Finalisierungsprozess keine Auswirkungen auf die Gültigkeit bereits bestehender Objektverweise auf die temporäre ID hat. Die Entfernung der überzähligen Metadaten kann den Finalisierungsprozess für ein hochgeladenes Objekt abschließen. Der Prozess kann zu Block 900 zurückkehren, um den Scan fortzusetzen, oder schließlich einen weiteren Scan der globalen Indexreplik durchzuführen.If the entry encrypted by a temporary ID contains a message that copying has been performed (Block 970 - YES), the excess metadata associated with the temporary ID can be removed and a message added that finalization has been completed (Block 980 ). For example, if the scan is in the initiating cluster 120-1 Finds "FinRefCopyDone" for all storage clusters in an entry encrypted by a temporary ID (for example, "FinRefCopyDone: 01", "FinRefCopyDone: 02", " FinRefCopyDone: 03 "), the initiating cluster 120-1 all messages indicating that the finalization has been started ("FinStarted"), all FinSealed messages, copy refusal messages ("FinRefCopy") and all messages that the copy has been completed ("FinRefCopyDone"), from the one encrypted by the temporary ID Remove entry. The initiating cluster may also add a "FinDone: PermID" message to specify a permanent cross-reference from the entry encrypted by the temporary ID to an entry encrypted by the permanent ID (eg, based on a content hash for an object ). It should be noted that the finalization process has no effect on the validity of existing object references to the temporary ID. The removal of excess metadata can complete the finalization process for an uploaded object. The process can become block 900 return to continue the scan, or finally perform another global index replica scan.
In einer anderen Implementierung kann der oben genannte Prozess optimiert werden, wenn der Client (z. B. Client 110) die permanente Objekt-ID vorab berechnet, bevor der Upload-Prozess gestartet wird. In dieser Variante kann das Kopieren von Verweisen (d. h. ”FinRefCopy”-Meldungen) in einen durch eine neue permanente ID verschlüsselten Eintrag eliminiert werden. Stattdessen kann der initiierende Cluster 120 einfach das hochgeladene Objekt als finalisiert markieren, sobald ”FinSealed”-Meldungen von allen Speicherclustern 120 eingegangen sind. Es ist zu beachten, dass die temporäre ID in dieser Variante gleich der permanenten ID ist.In another implementation, the above process can be optimized when the client (eg client 110 ) calculates the permanent object ID in advance before starting the upload process. In this variant, the copying of references (ie "FinRefCopy" messages) to an entry encrypted by a new permanent ID can be eliminated. Instead, the initiating cluster 120 just mark the uploaded object as finalized once "FinSealed" messages from all storage clusters 120 have been received. It should be noted that the temporary ID in this variant is the same as the permanent ID.
10 ist ein Flussdiagramm eines exemplarischen Prozesses 1000 für die Erstellung neuer Objektverweise auf einen globalen Index von replizierten Speicherclustern. Allgemein kann jede Systemkomponente in einem verteilten Multimaster-Datenreplikationssystem, die beabsichtigt, einen Verweis auf einen durch eine temporäre ID verschlüsselten Eintrag hinzuzufügen, zuerst prüfen, ob eine Kopieverweismeldung in diesem Eintrag vorhanden ist. Wenn eine Kopieverweismeldung gefunden wird, dann wird stattdessen der neue Verweis dem durch die entsprechende permanente ID verschlüsselten Eintrag hinzugefügt. In einer Implementierung kann der Prozess durch einen der Speichercluster 120 (z. B. Speichercluster 120-1, 120-2 oder 120-3) durchgeführt werden. Jeder Speichercluster 120 in einem verteilten Multimaster-Datenreplikationssystem kann den Prozess asynchron durchführen, bis der neue Verweis in jedem Speichercluster 120 repliziert worden ist. 10 is a flowchart of an exemplary process 1000 to create new object references to a global index of replicated storage clusters. Generally, in a distributed multi-master data replication system that intends to add a reference to an entry encrypted by a temporary ID, each system component may first check to see if a copy reference message exists in that entry. If a copy reference message is found, then instead the new reference is added to the entry encrypted by the corresponding permanent ID. In one implementation, the process may be through one of the storage clusters 120 (eg storage cluster 120-1 . 120-2 or 120-3 ) be performed. Each storage cluster 120 In a distributed multimaster data replication system, the process may perform asynchronously until the new reference in each storage cluster 120 has been replicated.
Eine Verweisanforderung für ein durch eine temporäre ID verschlüsseltes Objekt kann empfangen werden (Block 1010). Beispielsweise kann Speichercluster 120-1 eine Anforderung zum Hinzufügen eines neuen Verweises zu einem durch eine temporäre ID verschlüsselten Eintrag ”TempID3” empfangen (d. h. ein Verweis auf der Basis eines Objekts, das hochgeladen, jedoch noch nicht finalisiert wurde).A reference request for an object encrypted by a temporary ID can be received (Block 1010 ). For example, storage cluster 120-1 receive a request to add a new link to a TempID3 entry encrypted by a temporary ID (ie, a reference based on an object that has been uploaded but not yet finalized).
Es kann ermittelt werden, ob der durch eine temporäre ID verschlüsselter Eintrag einen Querverweis auf eine permanente ID hat (Block 1020). Beispielsweise kann Speichercluster 120-1 den durch ”TempID3” verschlüsselten Eintrag scannen, um ”FinRefCopy”- oder ”FinDone”-Meldungen in dem Eintrag zu identifizieren. Wenn der durch die permanente ID verschlüsselte Eintrag einen Querverweis auf eine permanente ID hat (Block 1020 – YES), kann der Verweis zu dem durch die permanente ID verschlüsselten Eintrag hinzugefügt werden (Block 1030). Beispielsweise kann Speichercluster 120-1 eine ”FinRefCopy:PermID4”-Meldung identifizieren und den neuen Verweis zu dem durch ”PermID4” verschlüsselten Eintrag hinzufügen. Wenn der durch die permanente ID verschlüsselte Eintrag keinen Querverweis auf eine permanente ID hat (Block 1020 – NO), kann der Verweis zu dem durch die temporäre ID verschlüsselten Eintrag hinzugefügt werden (Block 1040). Beispiel: Wenn keine ”FinRefCopy”- bzw. ”FinDone”-Meldung aufgefunden wird, kann der Speichercluster 120-1 den neuen Verweis zu dem durch ”TempID3” verschlüsselten Eintrag hinzufügen.It can be determined whether the entry encrypted by a temporary ID has a cross reference to a permanent ID (Block 1020 ). For example, storage cluster 120-1 scan the entry encrypted by "TempID3" to identify "FinRefCopy" or "FinDone" messages in the entry. If the entry encrypted by the permanent ID has a cross-reference to a permanent ID (Block 1020 - YES), the reference to the entry encrypted by the permanent ID can be added (block 1030 ). For example, storage cluster 120-1 identify a "FinRefCopy: PermID4" message and add the new reference to the entry encrypted by "PermID4". If the entry encrypted by the permanent ID has no cross-reference to a permanent ID (Block 1020 NO), the link can be added to the entry encrypted by the temporary ID (block 1040 ). For example, if no "FinRefCopy" or "FinDone" message is found, the storage cluster can 120-1 add the new reference to the entry encrypted by "TempID3".
BEISPIELEXAMPLE
11 zeigt den Teil 1100 einer exemplarischen globalen Indexreplik gemäß einer hierin beschriebenen Implementierung. Der Index kann eine Spalte 1110 Inhalts-Handle und eine Spalte 1120 Finalisierungsdatensatz enthalten. Weitere Informationen wie Objektverweise und Metadaten der Blöcke (nicht gezeigt) können auch in die globale Indexreplik aufgenommen werden. Die Spalte 1110 Inhalts-Handle und die Spalte 1120 Finalisierungsdatensatz werden in Teil 1100 zur Klarstellung gezeigt. In anderen Implementierungen können Finalisierungsdatensätze in der globalen Indexreplik mit anderen Datensätzen vermischt und durch Trennzeichen (z. B. Kommas, Leerzeichen usw.) mit oder ohne Verwendung von Spalten voneinander getrennt werden. Auch andere Datenstrukturen können für die globale Indexreplik verwendet werden. 11 shows the part 1100 an exemplary global index replica according to an implementation described herein. The index can be a column 1110 Content handle and a column 1120 Finalization record included. Further information such as object references and metadata of the blocks (not shown) may also be included in the global index replica. The gap 1110 Content handle and the column 1120 Finalization record will be in part 1100 for clarification. In other implementations, finalization records in the global index replica can be merged with other records and separated by separators (such as commas, spaces, and so on) with or without the use of columns. Other data structures can also be used for the global index replica.
Angenommen, in Teil 1100 der exemplarischen Indexreplik umfasst ein verteiltes Multimaster-Datenreplikationssystem drei Speichercluster XX, YY und ZZ. Ein Finalisierungsalgorithmus kann periodisch für jeden der Speichercluster XX, YY und ZZ ausgeführt werden, und dabei kann ein Teil des globalen Index oder der globale Index insgesamt gescannt werden. Außerdem können Meldungen (z. B. FinStarted, FinSealed, FinRefCopy und FinRefCopyDone) durch einen der Speichercluster XX, YY und ZZ in die globale Indexreplik geschrieben werden, die mit dem Inhalts-Handle eines bestimmten Objekts verbunden ist. Modifizierungen am globalen Index können an allen teilnehmenden Cluster repliziert werden (z. B. den Verbleibenden der Speichercluster XX, YY und ZZ).Suppose, in part 1100 In the exemplary index replica, a distributed multi-master data replication system includes three storage clusters XX, YY and ZZ. A finalization algorithm may be executed periodically for each of the storage clusters XX, YY, and ZZ, and thereby a portion of the global index or the global index as a whole may be scanned. In addition, messages (eg FinStarted, FinSealed, FinRefCopy, and FinRefCopyDone) are written to the global index replica connected to the content handle of a given object by one of the storage clusters XX, YY, and ZZ. Modifications to the global index can be replicated to all participating clusters (for example, the remainder of storage clusters XX, YY, and ZZ).
Wie in 11 gezeigt enthält der Indexteil 1100 Inhalts-Handles und verbundene Finalisierungsdatensätze für die drei Objekte. Eine durch ”TempID06” verschlüsselte Zeile 1130 enthält Datensätze, die darauf hinweisen, dass ein Finalisierungsprozess durch den initiierenden Cluster XX für das mit ”TempID06” verbundene Objekt gestartet wurde. Zeile 1130 enthält auch Datensätze, die angeben, dass das Objekt im Speichercluster XX (d. h. ”FinSealed:XX”), im Speichercluster YY (d. h. ”FinSealed:YY”) und im Speichercluster ZZ (d. h. ”FinSealed:ZZ”) gesperrt wurde. Nachdem der initiierende Cluster XX die ”FinSealed”-Meldungen für alle Speichercluster im verteilten Multimaster-Datenreplikationssystem identifiziert und bestätigt hat, dass alle Bytes des ”TempID06” entsprechenden Objekts auf XX, YY und ZZ hochgeladen wurden, hat er einen Inhalts-Hashwert (d. h. ”PermID07”) für das Objekt berechnet. Der Speichercluster XX hat somit ”FinRefCopy:PermID07” zum Finalisierungsdatensatz in Zeile 1130 hinzugefügt und eine neue Zeile 1150, verschlüsselt durch ”PermID07” erstellt, die die Objektverweise von Zeile 1130 enthält. Eine Meldung, dass das Kopieren durchgeführt wurde (d. h. ”FinRefCopyDone:XX”), wurde ebenfalls in Zeile 1130 eingefügt, um anzugeben, dass der Speichercluster XX den Kopierprozess abgeschlossen hat. Sobald eine ”FinRefCopy”-Meldung von den anderen Speicherclustern YY und ZZ geliefert wird (und auf den initiierenden Cluster XX repliziert wird), können die überzähligen Meldungsdaten (d. h. ”FinStarted:XX”, ”FinSealed:XX”, ”FinSealed:YY”, ”FinSealed:ZZ”, ”FinRefCopy:PermID07”, ”FinRefCopyDone:XX” und die anderen ”FinRefCopyDone”-Meldungen) durch den initiierenden Cluster XX gelöscht werden (und die Löschungen auf den übrigen Cluster repliziert werden).As in 11 shown contains the index part 1100 Content handles and associated finalization records for the three objects. A line encrypted by "TempID06" 1130 contains records indicating that a finalization process has been started by the initiating cluster XX for the object associated with "TempID06". row 1130 also contains records indicating that the object was locked in storage cluster XX (ie "FinSealed: XX"), in storage cluster YY (ie "FinSealed: YY") and in storage cluster ZZ (ie "FinSealed: ZZ"). After the initiating cluster XX has identified the "FinSealed" messages for all storage clusters in the distributed multimaster data replication system and has confirmed that all bytes of the "TempID06" corresponding object have been uploaded to XX, YY and ZZ, it has a content hash value (ie "PermID07") for the object. The storage cluster XX thus has "FinRefCopy: PermID07" to the finalization record in line 1130 added and a new line 1150 Encrypted by "PermID07" which creates the object references of row 1130 contains. A message stating that copying was done (ie "FinRefCopyDone: XX") was also in line 1130 inserted to indicate that the storage cluster XX has completed the copy process. Once a "FinRefCopy" message is delivered from the other memory clusters YY and ZZ (and replicated to the initiating cluster XX), the excess message data (ie, "FinStarted: XX", "FinSealed: XX", "FinSealed: YY") , "FinSealed: ZZ", "FinRefCopy: PermID07", "FinRefCopyDone: XX" and the other "FinRefCopyDone" messages) are cleared by initiating cluster XX (and replicas are replicated to the rest of the cluster).
Eine durch ”TempID08” verschlüsselte Zeile 1140 enthält Datensätze, die darauf hinweisen, dass ein Finalisierungsprozess für das mit ”TempID08” verbundene Objekt abgeschlossen wurde. Überzählige Daten aus dem Finalisierungsprozess wurden gelöscht und nur der Querverweis auf die permanente ID (d. h. ”FinDone:PermID09”) verbleibt im Finalisierungsdatensatz. Eine neue Zeile 1160, verschlüsselt durch ”PermID09”, enthält die Objektverweise aus Zeile 1140.A line encrypted by "TempID08" 1140 Contains records indicating that a finalization process has been completed for the object associated with TempID08. Excess data from the finalization process has been deleted and only the cross reference to the permanent ID (ie "FinDone: PermID09") remains in the finalization record. A new line 1160 , encrypted by "PermID09", contains the object references from line 1140 ,
Wie bei den Implementierungen oben gezeigt gewährleisten die hierin beschriebenen Systeme und Verfahren den letztendlichen Übergang von der temporären ID zu der neuen permanenten ID. Alle Verweise, die jemals unter der temporären ID des Objekts aufgezeichnet wurden, können in die permanente ID des Objekts kopiert werden, und es können zukünftig keine neuen Verweise unter der temporären ID des Objekts mehr aufgezeichnet werden.As shown in the implementations above, the systems and methods described herein ensure the eventual transition from the temporary ID to the new permanent ID. Any references that have ever been recorded under the temporary ID of the object can be copied into the object's permanent ID, and future new references can no longer be recorded under the object's temporary ID.
SCHLUSSFOLGERUNGCONCLUSION
Die hierin beschriebenen Systeme und/oder Verfahren können einen asynchronen verteilten Objekt-Upload-Algorithmus für die replizierte Verwendung in Assoziativspeicherclustern integrieren. Dieser Algorithmus verwendet die zugrunde liegende Replikationsschicht zur Replikation des Index, der die Positionen der Blöcke enthält, aus denen das Objekt besteht. Die Blöcke können im Zeitablauf in verschiedene Cluster hochgeladen werden, bis das Objekt explizit finalisiert wird. Nachdem alle Blöcke hochgeladen wurden, kann das Objekt in das inhaltsadressierbare Indexsystem eingefügt werden.The systems and / or methods described herein may integrate an asynchronous distributed object upload algorithm for replicated use in associative memory clusters. This algorithm uses the underlying replication layer to replicate the index, which contains the locations of the blocks that make up the object. The blocks can be uploaded into different clusters over time until the object is explicitly finalized. After all blocks have been uploaded, the object can be inserted into the content-addressable index system.
Die vorstehende Beschreibung der Implementierungen bietet eine Veranschaulichung und Beschreibung; sie ist in keiner Weise dazu gedacht, den Umfang der Erfindung auf die präzisen beschriebenen Formen einzuschränken. In Bezug auf die obigen Anleitungen sind viele Modifizierungen und Varianten möglich oder können aus der Praxis mit der Erfindung erworben werden.The above description of the implementations provides an illustration and description; it is in no way intended to limit the scope of the invention to the precise forms described. Many modifications and variations are possible with respect to the above instructions, or may be acquired from practice with the invention.
In einer anderen Implementierung kann zum Beispiel eine synchrone Version des Finalisierungsalgorithmus verwendet werden, in der verschiedene Speichercluster direkt kommunizieren und nicht über die Replikationsschicht in einem verteilten Datenreplikationssystem.For example, in another implementation, a synchronous version of the finalization algorithm may be used in which different storage clusters communicate directly rather than through the replication layer in a distributed data replication system.
Desweiteren, obwohl eine Blockreihe im Hinblick auf die 6–10 beschrieben wurden beschrieben wurde, die Reihenfolge der Block jedoch in anderen Implementierungen modifiziert werden kann. Darüber hinaus können unabhängige Blöcke parallel durchgeführt werden.Furthermore, although a block row in terms of 6 - 10 However, the order of the block may be modified in other implementations. In addition, independent blocks can be performed in parallel.
Es wird auch offensichtlich, dass die hier beschriebenen Ausführungsformen in vielen verschiedenen Formen von Software, Firmware und Hardware in den abgebildeten Figuren implementiert werden können. Der tatsächliche Softwarecode oder die spezialisierte Hardwaresteuerung für die Implementierung von hierin beschriebenen Ausführungsformen wird die Erfindung nicht beschränken. Daher werden Betrieb und Verhalten der Ausführungsform ohne Verweis auf den spezifischen Software-Code beschrieben – es ist so zu verstehen, dass die Software und die Steuerungs-Hardware so entwickelt werden können, dass sie die Ausführungsform auf Grundlage der hierin gegebenen Beschreibung implementieren.It will also be apparent that the embodiments described herein may be implemented in many different forms of software, firmware and hardware in the figures depicted. The actual software code or specialized hardware control for implementing embodiments described herein will not limit the invention. Therefore, operation and behavior of the embodiment will be described without reference to the specific software code - it is to be understood that the software and control hardware may be developed to implement the embodiment based on the description herein.
Darüber hinaus können gewisse Implementierungen, die hierin beschrieben sind, als ”Logik” oder eine ”Komponente” implementiert werden, die eine oder mehrere Funktionen erfüllt. Diese Logik oder Komponente kann Hardware enthalten wie einen Prozessor, einen Mikroprozessor, einen Anwendungs-spezifischen integrierten Schaltkreis oder einen feldprogrammierbaren Gate-Array oder eine Kombination von Hardware und Software (z. B. Software, die von einem Prozessor ausgeführt wird); In addition, certain implementations described herein may be implemented as a "logic" or a "component" that accomplishes one or more functions. This logic or component may include hardware such as a processor, a microprocessor, an application-specific integrated circuit, or a field programmable gate array, or a combination of hardware and software (eg, software executed by a processor);
Es sollte betont werden, dass die Begriffe „umfasst”, „beinhaltet”, „enthält”, „aufweist”, „verfügt über”, „ausgestattet mit”, „einschließlich” und „hat” in dieser Spezifikation nicht ausschließlich sind und daher das Vorhandensein der angegebenen Funktionen, ganzheitlichen Einheiten, Schritte oder Komponenten angeben, aber nicht das Vorhandensein oder das Hinzufügen von weiteren Funktionen, ganzheitlichen Einheiten, Schritten, Komponenten oder Gruppen hiervon ausschließen.It should be emphasized that the terms "includes," "includes," "includes," "includes," "disposes of," "endowed with," "including," and "has" are not exclusive in this specification and, therefore, that Specify the presence of the specified functions, integral units, steps or components, but do not exclude the presence or addition of any other functions, integral entities, steps, components or groups thereof.
Auch wenn besondere Kombinationen an Funktionen in den Ansprüchen aufgeführt und/oder in dieser Spezifikation offengelegt werden, sollen diese Kombinationen die Offenlegung der Erfindung nicht beschränken. Tatsächlich können viele dieser Funktionen in Arten kombiniert werden, die in diesen Ansprüchen nicht genau aufgeführt und/oder in dieser Spezifikation offengelegt wurden.Although particular combinations of functions are set forth in the claims and / or disclosed in this specification, these combinations are not intended to limit the disclosure of the invention. In fact, many of these functions may be combined in ways not specifically listed and / or disclosed in this specification in these claims.
Kein Element, Handlung oder Anweisung, die in der Beschreibung der vorliegenden Anwendungen verwendet wird, gilt als kritisch oder wesentlich für die Erfindung, sofern dies nicht ausdrücklich definiert wurde. Darüber hinaus wird der Artikel „ein” dafür verwendet, um auf eine oder mehr Elemente zu verweisen, während nur ein Artikel gemeint ist, wenn die Begriffe „das/die/einer/eine” oder eine ähnliche Sprache verwendet wird. Darüber hinaus meint der Ausdruck „basierend auf” gemäß der Nutzung in diesem Dokument „basierend, zumindest in Teilen, auf”, sofern nicht ausdrücklich anderweitig angegeben.No element, act or instruction used in the description of the present applications is believed to be critical or essential to the invention unless expressly defined. In addition, the item "a" is used to refer to one or more items, while only one item is meant when the terms "the / a" or a similar language are used. In addition, the term "based on" as used in this document means "based, at least in part, on," unless expressly stated otherwise.
ZITATE ENTHALTEN IN DER BESCHREIBUNG QUOTES INCLUDE IN THE DESCRIPTION
Diese Liste der vom Anmelder aufgeführten Dokumente wurde automatisiert erzeugt und ist ausschließlich zur besseren Information des Lesers aufgenommen. Die Liste ist nicht Bestandteil der deutschen Patent- bzw. Gebrauchsmusteranmeldung. Das DPMA übernimmt keinerlei Haftung für etwaige Fehler oder Auslassungen.This list of the documents listed by the applicant has been generated automatically and is included solely for the better information of the reader. The list is not part of the German patent or utility model application. The DPMA assumes no liability for any errors or omissions.
Zitierte Nicht-PatentliteraturCited non-patent literature
-
„Bigtable” gemäß Chang et al. „Bigtable: A Distributed Storage System for Structured Data”, Proc. of the 7th OSDI, Seiten 205–218 (Nov. 2006) [0027] "Bigtable" according to Chang et al. "Bigtable: A Distributed Storage System for Structured Data", Proc. of the 7th OSDI, pp. 205-218 (Nov. 2006) [0027]
CN114450919A - Online privacy protection techniques - Google Patents
Online privacy protection techniques Download PDFInfo
- Publication number
- CN114450919A CN114450919A CN202180005490.2A CN202180005490A CN114450919A CN 114450919 A CN114450919 A CN 114450919A CN 202180005490 A CN202180005490 A CN 202180005490A CN 114450919 A CN114450919 A CN 114450919A
- Authority
- CN
- China
- Prior art keywords
- client device
- mpc
- mpc server
- given
- server
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Granted
Links
- 238000000034 method Methods 0.000 title claims abstract description 136
- 230000004044 response Effects 0.000 claims abstract description 123
- 238000009826 distribution Methods 0.000 claims description 76
- 238000003860 storage Methods 0.000 claims description 28
- 230000001131 transforming effect Effects 0.000 claims description 7
- 230000008569 process Effects 0.000 description 68
- 235000019800 disodium phosphate Nutrition 0.000 description 14
- 238000004891 communication Methods 0.000 description 13
- 230000000694 effects Effects 0.000 description 12
- 238000012545 processing Methods 0.000 description 12
- 238000004590 computer program Methods 0.000 description 11
- 238000010586 diagram Methods 0.000 description 9
- 230000006870 function Effects 0.000 description 7
- 238000004422 calculation algorithm Methods 0.000 description 6
- 238000013459 approach Methods 0.000 description 5
- 235000014510 cooky Nutrition 0.000 description 5
- 230000003993 interaction Effects 0.000 description 5
- 230000009471 action Effects 0.000 description 4
- 230000007717 exclusion Effects 0.000 description 4
- 230000003287 optical effect Effects 0.000 description 3
- 230000000644 propagated effect Effects 0.000 description 3
- 238000013515 script Methods 0.000 description 3
- 230000005540 biological transmission Effects 0.000 description 2
- 230000003139 buffering effect Effects 0.000 description 2
- 239000002131 composite material Substances 0.000 description 2
- 230000001010 compromised effect Effects 0.000 description 2
- 238000010295 mobile communication Methods 0.000 description 2
- 238000005192 partition Methods 0.000 description 2
- 238000011112 process operation Methods 0.000 description 2
- 239000000047 product Substances 0.000 description 2
- 238000000926 separation method Methods 0.000 description 2
- 239000013589 supplement Substances 0.000 description 2
- 238000012795 verification Methods 0.000 description 2
- 241000544061 Cuculus canorus Species 0.000 description 1
- 101710165595 Mitochondrial pyruvate carrier 2 Proteins 0.000 description 1
- 102100025031 Mitochondrial pyruvate carrier 2 Human genes 0.000 description 1
- 101710101698 Probable mitochondrial pyruvate carrier 2 Proteins 0.000 description 1
- 230000002776 aggregation Effects 0.000 description 1
- 238000004220 aggregation Methods 0.000 description 1
- 230000006399 behavior Effects 0.000 description 1
- 230000009286 beneficial effect Effects 0.000 description 1
- 230000000903 blocking effect Effects 0.000 description 1
- 230000008859 change Effects 0.000 description 1
- 150000001875 compounds Chemical class 0.000 description 1
- 238000005516 engineering process Methods 0.000 description 1
- 238000001914 filtration Methods 0.000 description 1
- 238000010413 gardening Methods 0.000 description 1
- 239000011521 glass Substances 0.000 description 1
- 239000004973 liquid crystal related substance Substances 0.000 description 1
- 238000010801 machine learning Methods 0.000 description 1
- 230000006855 networking Effects 0.000 description 1
- 230000002441 reversible effect Effects 0.000 description 1
- 230000011218 segmentation Effects 0.000 description 1
- 239000004065 semiconductor Substances 0.000 description 1
- 230000001953 sensory effect Effects 0.000 description 1
- 230000011273 social behavior Effects 0.000 description 1
- 239000000758 substrate Substances 0.000 description 1
- 238000012546 transfer Methods 0.000 description 1
- 230000000007 visual effect Effects 0.000 description 1
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L9/00—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols
- H04L9/32—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols including means for verifying the identity or authority of a user of the system or for message authentication, e.g. authorization, entity authentication, data integrity or data verification, non-repudiation, key authentication or verification of credentials
- H04L9/3247—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols including means for verifying the identity or authority of a user of the system or for message authentication, e.g. authorization, entity authentication, data integrity or data verification, non-repudiation, key authentication or verification of credentials involving digital signatures
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L9/00—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols
- H04L9/08—Key distribution or management, e.g. generation, sharing or updating, of cryptographic keys or passwords
- H04L9/0816—Key establishment, i.e. cryptographic processes or cryptographic protocols whereby a shared secret becomes available to two or more parties, for subsequent use
- H04L9/085—Secret sharing or secret splitting, e.g. threshold schemes
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F21/00—Security arrangements for protecting computers, components thereof, programs or data against unauthorised activity
- G06F21/60—Protecting data
- G06F21/62—Protecting access to data via a platform, e.g. using keys or access control rules
- G06F21/6218—Protecting access to data via a platform, e.g. using keys or access control rules to a system of files or objects, e.g. local or distributed file system or database
- G06F21/6227—Protecting access to data via a platform, e.g. using keys or access control rules to a system of files or objects, e.g. local or distributed file system or database where protection concerns the structure of data, e.g. records, types, queries
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F21/00—Security arrangements for protecting computers, components thereof, programs or data against unauthorised activity
- G06F21/70—Protecting specific internal or peripheral components, in which the protection of a component leads to protection of the entire computer
- G06F21/71—Protecting specific internal or peripheral components, in which the protection of a component leads to protection of the entire computer to assure secure computing or processing of information
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L63/00—Network architectures or network communication protocols for network security
- H04L63/04—Network architectures or network communication protocols for network security for providing a confidential data exchange among entities communicating through data packet networks
- H04L63/0428—Network architectures or network communication protocols for network security for providing a confidential data exchange among entities communicating through data packet networks wherein the data content is protected, e.g. by encrypting or encapsulating the payload
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L63/00—Network architectures or network communication protocols for network security
- H04L63/04—Network architectures or network communication protocols for network security for providing a confidential data exchange among entities communicating through data packet networks
- H04L63/0428—Network architectures or network communication protocols for network security for providing a confidential data exchange among entities communicating through data packet networks wherein the data content is protected, e.g. by encrypting or encapsulating the payload
- H04L63/0442—Network architectures or network communication protocols for network security for providing a confidential data exchange among entities communicating through data packet networks wherein the data content is protected, e.g. by encrypting or encapsulating the payload wherein the sending and receiving network entities apply asymmetric encryption, i.e. different keys for encryption and decryption
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L9/00—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols
- H04L9/32—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols including means for verifying the identity or authority of a user of the system or for message authentication, e.g. authorization, entity authentication, data integrity or data verification, non-repudiation, key authentication or verification of credentials
- H04L9/3247—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols including means for verifying the identity or authority of a user of the system or for message authentication, e.g. authorization, entity authentication, data integrity or data verification, non-repudiation, key authentication or verification of credentials involving digital signatures
- H04L9/3255—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols including means for verifying the identity or authority of a user of the system or for message authentication, e.g. authorization, entity authentication, data integrity or data verification, non-repudiation, key authentication or verification of credentials involving digital signatures using group based signatures, e.g. ring or threshold signatures
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L2209/00—Additional information or applications relating to cryptographic mechanisms or cryptographic arrangements for secret or secure communication H04L9/00
- H04L2209/46—Secure multiparty computation, e.g. millionaire problem
Abstract
This document describes techniques to prevent sharing or leakage of user information. In one aspect, a method includes receiving, by a first MPC server, a request for selection criteria for at least one interest group to which a user of a client device belongs. The received request does not reveal an identifier of the client device to the first MPC server. In response to receiving the request, the first MPC server determines a set of ordered selection criteria for the at least one interest group retrieved from the cache of the first MPC server. The set of ordered selection criteria is transformed into a set of key/value pairs that are protected from exposure by the second MPC server. The first MPC server sends a set of key/value pairs to the second MPC server along with data that enables the second MPC server to identify the key with the highest value.
Description
Technical Field
This specification relates to data processing in an online environment and protecting user privacy. The enhancement of online user privacy has led many browser developers to change the way user data is processed. For example, some browsers no longer support third party cookies, but the decommissioning of third party cookies may result in less relevant content being delivered to the user.
Disclosure of Invention
In general, one innovative aspect of the subject matter described in this specification is a method that includes: receiving, by a first MPC server (also referred to herein as a first MPC system or a first computing system) of a multi-party computing (MPC) cluster, a request from a second MPC server (also referred to herein as a second MPC system or a second computing system) of the MPC cluster for selection criteria for at least one interest group of a set of two or more interest groups to which a particular user of a client device belongs, wherein the received request does not reveal an identifier of the client device to any MPC system; in response to receiving the request: determining, by the first MPC server, a set of ordered selection criteria for at least one of a set of two or more interest groups to which a particular user of the client device belongs, the set of ordered selection criteria being retrieved from a cache of the first MPC server using a portion of the request that is protected from exposure by the second MPC server, transforming the set of ordered selection criteria into a set of key/value pairs, wherein values of each of the key/value pairs are protected from exposure by the second MPC server, and sending, by the first MPC server, the set of key/value pairs to the second MPC server with data that enables the second MPC server to identify the key having the highest value without exposing values of the set of key/value pairs to the second MPC server.
In some embodiments, the method further comprises: receiving, by the first MPC server, a given selection criterion for a given interest group from a content distribution system different from the first MPC server and the second MPC server, the given interest group predicted by the content distribution system to include a particular user of the client device; caching, by the first MPC server, a given selection criterion of a given interest group predicted to include a particular user of the client device in a cache of the first MPC server.
In some embodiments, the method further comprises: receiving, by a content distribution system, a content request submitted by a client device; generating candidate selection criteria responsive to the content request in response to the content request; determining, based on the content request, a given set of interests that are predicted to include a particular user of the client device; generating a given selection criterion for the given interest group based on determining that the given interest group is predicted to include a particular user of the client device; transmitting, by the content distribution system, the candidate distribution criteria and the given distribution criteria to the client device; and sending, by the content distribution system, the given distribution criteria for the given interest group but not the candidate distribution criteria to the first MPC server.
In some embodiments, the method further comprises: receiving, by the second MPC server, a first encrypted request that is inaccessible to the second MPC server; forwarding, by the second MPC server, the first encrypted request to the first MPC server; receiving a set of key/value pairs from a first MPC server; identifying, by the second MPC server, the given key/value pair having the highest value without revealing the value of the key/value pair; generating a first cryptographically signed response to the first cryptographic request comprising the given key/value pair, wherein the first signed response is signed with a private key of the second MPC server; and sending the first cryptographically signed response to the client device in response to the first cryptographic request.
In some embodiments, the method further comprises: receiving, by the client device, a first cryptographically signed response sent by the second MPC server; verifying, by the client device, that the first cryptographically signed response was signed by the first MPC server; retrieving, by the client device, the first interest group from the first signed response; verifying, by the client device, that the first interest group includes the particular user; verifying, by the client device, that the value of the given key/value pair was signed by the first MPC server; decrypting, by the client device, the value of the given key/value pair to recover the first selection criterion; receiving, by a client device, candidate selection criteria and given selection criteria from a content distribution system; selecting, by the client device, a control selection criterion from the first selection criterion, the given selection criterion, and the candidate selection criterion.
In some embodiments, the method further comprises: depicting, by a client device, an interest group comprising a particular user as a first interest group set and a second interest group set different from the first interest group set; sending, by the client device, a first encrypted request to the second MPC server, the first encrypted request including a first set of interest groups that includes the particular user; sending, by the client device, a second encrypted request to the first MPC server, the second encrypted request including a second set of interest groups that includes the particular user; receiving, by the client device, a second signed response sent by the first MPC server; verifying, by the client device, that the second signed response was signed by the second MPC server; retrieving, by the client device, the specified interest group from the signed response; verifying, by the client device, that the specified interest group includes the particular user; verifying, by the client device, that the value of the given key/value pair is signed by the second MPC server; decrypting, by the client device, the value of the given key/value pair to recover the third selection criterion, wherein selecting the control selection criterion comprises selecting the control selection criterion from the first selection criterion, the given selection criterion, the candidate selection criterion, and the third selection criterion.
In some embodiments, the method further comprises: receiving, by the first MPC server, a second encrypted request that is inaccessible to the first MPC server; forwarding, by the first MPC server, the second encrypted request to the second MPC server; receiving a different set of key/value pairs from a second MPC server; identifying, by the first MPC server, the particular key/value pair having the highest value without revealing the values of the key/value pairs in the different sets; generating a second signed response to the second encrypted request comprising the particular key/value pair, wherein the first signed response is signed with a private key of the second MPC server; and sending the second signed response to the client device in response to the second encryption request.
In general, another innovative aspect of the subject matter described in this specification is a system that includes one or more processors and one or more memory elements including instructions that, when executed, cause the one or more processors to perform operations that include: receiving, by a first MPC system server of a multi-party computing (MPC) cluster, a request from a second MPC server of the MPC cluster for selection criteria for at least one interest group of a set of two or more interest groups to which a particular user of a client device belongs, wherein the received request does not reveal an identifier of the client device to the first MPC system; in response to receiving the request: determining, by the first MPC server, a set of ordered selection criteria for at least one interest group of the set of two or more interest groups to which a particular user of the client device belongs, the set of ordered selection criteria retrieved from the cache of the first MPC server using the portion of the request that is protected from exposure by the second MPC server; transforming the set of ordered selection criteria into a set of key/value pairs, wherein the values of each of the key/value pairs are protected from exposure by the second MPC server; and sending, by the first MPC server, the set of key/value pairs to the second MPC server with data that enables the second MPC server to identify the key with the highest value without exposing the values of the set of key/value pairs to the second MPC server.
In some embodiments, the operations (performed by the one or more processors of the above-described system) further comprise: receiving, by the first MPC server, a given selection criterion for a given interest group from a content distribution system different from the first MPC server and the second MPC server, the given interest group predicted by the content distribution system to include a particular user of the client device; caching, by the first MPC server, a given selection criterion of a given interest group predicted to include a particular user of the client device in a cache of the first MPC server.
In some embodiments, the operations further comprise: receiving, by a content distribution system, a content request submitted by a client device; generating candidate selection criteria responsive to the content request in response to the content request; determining, based on the content request, a given set of interests that are predicted to include a particular user of the client device; generating a given selection criterion for the given interest group based on determining that the given interest group is predicted to include a particular user of the client device; transmitting, by the content distribution system, the candidate distribution criteria and the given distribution criteria to the client device; and sending, by the content distribution system, the given distribution criteria for the given interest group but not the candidate distribution criteria to the first MPC server.
In some embodiments, the operations further comprise: receiving, by the second MPC server, a first encrypted request that is inaccessible to the second MPC server; forwarding, by the second MPC server, the first encrypted request to the first MPC server; receiving a set of key/value pairs from a first MPC server; identifying, by the second MPC server, the given key/value pair having the highest value without revealing the value of the key/value pair; generating a first cryptographically signed response to the first cryptographic request comprising the given key/value pair, wherein the first signed response is signed with a private key of the second MPC server; and sending the first cryptographically signed response to the client device in response to the first cryptographic request.
In some embodiments, the operations further comprise: receiving, by the client device, a first cryptographically signed response sent by the second MPC server; verifying, by the client device, that the first cryptographically signed response was signed by the first MPC server; recovering, by the client device, the first interest group from the first signed response; verifying, by the client device, that the first interest group includes the particular user; verifying, by the client device, that the value of the given key/value pair was signed by the first MPC server; decrypting, by the client device, the value of the given key/value pair to recover the first selection criterion; receiving, by a client device, candidate selection criteria and given selection criteria from a content distribution system; selecting, by the client device, a control selection criterion from the first selection criterion, the given selection criterion, and the candidate selection criterion.
In some embodiments, the operations further comprise: depicting, by a client device, an interest group comprising a particular user as a first interest group set and a second interest group set different from the first interest group set; sending, by the client device, a first encrypted request to the second MPC server, the first encrypted request including a first set of interest groups that includes the particular user; sending, by the client device, a second encrypted request to the first MPC server, the second encrypted request including a second set of interest groups that includes the particular user; receiving, by the client device, a second signed response sent by the first MPC server; verifying, by the client device, that the second signed response was signed by the second MPC server; retrieving, by the client device, the specified interest group from the signed response; verifying, by the client device, that the specified interest group includes the particular user; verifying, by the client device, that the value of the given key/value pair is signed by the second MPC server; decrypting, by the client device, the value of the given key/value pair to recover the third selection criterion, wherein selecting the control selection criterion comprises selecting the control selection criterion from the first selection criterion, the given selection criterion, the candidate selection criterion, and the third selection criterion.
In some embodiments, the operations further comprise: receiving, by the first MPC server, a second encrypted request that is inaccessible to the first MPC server; forwarding, by the first MPC server, the second encrypted request to the second MPC server; receiving a set of different key/value pairs from a second MPC server; identifying, by the first MPC server, the particular key/value pair having the highest value without revealing the values of the key/value pairs in the different sets; generating a second signed response to the second encrypted request comprising the particular key/value pair, wherein the first signed response is signed with a private key of the second MPC server; and sending the second signed response to the client device in response to the second encryption request.
In general, another innovative aspect of the subject matter described in this specification is a non-transitory computer storage medium encoded with instructions that, when executed by a distributed computing system, cause the distributed computing system to perform operations comprising: receiving, by a first MPC server of a multi-party computing (MPC) cluster, a request from a second MPC server of the MPC cluster for selection criteria for at least one interest group of a set of two or more interest groups to which a particular user of a client device belongs, wherein the received request does not reveal an identifier of the client device to the first MPC server; in response to receiving the request: determining, by the first MPC server, a set of ordered selection criteria for at least one interest group of the set of two or more interest groups to which a particular user of the client device belongs, the set of ordered selection criteria retrieved from the cache of the first MPC server using the portion of the request that is protected from exposure by the second MPC server; transforming the set of ordered selection criteria into a set of key/value pairs, wherein the values of each of the key/value pairs are protected from exposure by the second MPC server; and sending, by the first MPC server, the set of key/value pairs to the second MPC server with data that enables the second MPC server to identify the key having the highest value without revealing values of the set of key/value pairs to the second MPC server.
In some implementations, the operations (performed by the distributed computing system) further include: receiving, by the first MPC server, a given selection criterion for a given interest group from a content distribution system different from the first MPC server and the second MPC server, the given interest group predicted by the content distribution system to include a particular user of the client device; caching, by the first MPC server, a given selection criterion of a given interest group predicted to include a particular user of the client device in a cache of the first MPC server.
In some embodiments, the operations further comprise: receiving, by a content distribution system, a content request submitted by a client device; generating candidate selection criteria responsive to the content request in response to the content request; determining, based on the content request, a given set of interests that are predicted to include a particular user of the client device; generating a given selection criterion for the given interest group based on determining that the given interest group is predicted to include a particular user of the client device; transmitting, by the content distribution system, the candidate distribution criteria and the given distribution criteria to the client device; and sending, by the content distribution system, the given distribution criteria for the given interest group but not the candidate distribution criteria to the first MPC server.
In some embodiments, the operations further comprise: receiving, by the second MPC server, a first encrypted request that is inaccessible to the second MPC server; forwarding, by the second MPC server, the first encrypted request to the first MPC server; receiving a set of key/value pairs from a first MPC server; identifying, by the second MPC server, the given key/value pair having the highest value without revealing the value of the key/value pair; generating a first cryptographically signed response to the first cryptographic request comprising the given key/value pair, wherein the first signed response is signed with a private key of the second MPC server; and sending the first cryptographically signed response to the client device in response to the first cryptographic request.
In some embodiments, the operations further comprise: receiving, by the client device, a first cryptographically signed response sent by the second MPC server; verifying, by the client device, that the first cryptographically signed response was signed by the first MPC server; recovering, by the client device, the first interest group from the first signed response; verifying, by the client device, that the first interest group includes the particular user; verifying, by the client device, that the value of the given key/value pair was signed by the first MPC server; decrypting, by the client device, the value of the given key/value pair to recover the first selection criterion; receiving, by a client device, candidate selection criteria and given selection criteria from a content distribution system; selecting, by the client device, a control selection criterion from the first selection criterion, the given selection criterion, and the candidate selection criterion.
In some embodiments, the operations further comprise: depicting, by a client device, an interest group comprising a particular user as a first interest group set and a second interest group set different from the first interest group set; sending, by the client device, a first encrypted request to the second MPC server, the first encrypted request including a first set of interest groups that includes the particular user; sending, by the client device, a second encrypted request to the first MPC server, the second encrypted request including a second set of interest groups that includes the particular user; receiving, by the client device, a second signed response sent by the first MPC server; verifying, by the client device, that the second signed response was signed by the second MPC server; retrieving, by the client device, the specified interest group from the signed response; verifying, by the client device, that the specified interest group includes the particular user; verifying, by the client device, that the value of the given key/value pair is signed by the second MPC server; decrypting, by the client device, the value of the given key/value pair to recover the third selection criterion, wherein selecting the control selection criterion comprises selecting the control selection criterion from the first selection criterion, the given selection criterion, the candidate selection criterion, and the third selection criterion.
Particular embodiments of the subject matter described in this specification can be implemented to realize one or more of the following technical advantages. For example, using multi-party computing (MPC) and other cryptographic techniques to protect user data and perform content selection processes prevents user information available to entities participating in the process from being leaked to other entities. The techniques discussed throughout this document also protect user information to prevent sharing of user information between entities that would otherwise be necessary to perform the process. The techniques described in this document partition user information and process operations within different computing systems to ensure that if one entity's computer is compromised, the amount of user information that can be accessed is minimized or at least reduced relative to other techniques. The techniques discussed throughout this document also enable personalized content selection to be performed while preventing any system involved in content selection from being able to track individual users across multiple websites.
The techniques discussed herein include sending messages that include code in place of actual data so that computing systems participating in the processes discussed herein do not have access to the underlying data, but are still able to perform process operations using the code. Using the code instead of the actual data protects the data even if the data is compromised, such as stolen or leaked to another entity. Using the lookup table and code in this manner reduces the computational burden on the computing system for implementing the processes discussed herein relative to the encryption techniques (e.g., homomorphic encryption techniques) otherwise required to protect the data. This reduces the necessary Central Processing Unit (CPU) cycles required to perform the process (e.g., by not having to encrypt and decrypt large amounts of data), reduces the latency of performing the process, which is critical to the implementation of using the process to select content for presentation on the user device, and makes the overall process more efficient. Furthermore, data can be cached locally at a particular computing system, such that future requests for any cached data reduce latency.
Reducing latency in the presentation of content also reduces the number of errors that occur at the user device while waiting for such content to arrive. Since content typically needs to be provided and provided to mobile devices connected through a wireless network in milliseconds, reducing the latency of selecting and providing content is critical to prevent errors and reducing user frustration.
The described techniques also provide a simplified process for maintaining a high privacy level. By implementing the segmentation process via MPC techniques, the system provides a high threshold for user privacy without requiring extensive changes from the demand side platform.
The details of one or more embodiments of the subject matter described in this specification are set forth in the accompanying drawings and the description below. Other features, aspects, and advantages of the subject matter will become apparent from the description, the drawings, and the claims.
Drawings
FIG. 1 is a block diagram of an example environment in which content is distributed to client devices.
FIG. 2 depicts a data flow of a method for selecting and providing content to a client device.
FIG. 3 is a swim lane diagram showing a portion of an example process for selecting content.
FIG. 4 is a flow diagram of an example method for selecting content.
FIG. 5 is a block diagram of an example computer system.
Like reference numbers and designations in the various drawings indicate like elements.
Detailed Description
The present disclosure relates to computer-implemented methods and systems employing techniques to prevent sharing or leakage of user information by entities involved in the selection and distribution of electronic content to client devices. As described in more detail below, privacy preserving techniques can be implemented using a combination of multi-party computing (MPC), probabilistic data structures, encryption, and/or two-level (or n-level) caching. More specifically, the user's client device is able to issue three requests for personalized content. A first request can be sent to one server in the MPC cluster, a second request can be sent to a different server in the same MPC cluster, and a third request can be sent to the content distribution system. As described throughout this document, requests sent to two servers in an MPC cluster can be encrypted in such a way: such that neither MPC server can obtain enough information to track users across web sites, but still can access the two-level cache to identify available personalized content that can be provided to the user based on the interest group that includes the user. Each of the MPC servers may respond to respective requests with information about one or more portions (e.g., digital components) of content related to one or more interest groups including users.
The third request sent to the content distribution system includes information (e.g., a URL) related to the website the user is visiting, which can be used to identify contextual content related to the website, and also to infer the group of interests that are predicted to include the user. The identified contextual content is transmitted to the client device along with information about content related to one or more of the inferred group of interests. Information about content related to one or more interest groups is also stored in the cache for later use by the MPC server. The client device will select personalized content (e.g., digital components) to be presented to the user from the information received from the two MPC servers and the content distribution system.
In addition to privacy protection techniques discussed throughout this document, a user may be provided with controls that allow the user to make selections as to whether and when the systems, programs, or features described herein may enable gathering user information (e.g., information about the user's social network, social behavior, or activities, profession, the user's preferences, or the user's current location) and whether to send content or communications from a server to the user. In addition, certain data may be processed in one or more ways before it is stored or used, so that personally identifiable information is removed. For example, the identity of the user may be processed such that personally identifiable information cannot be determined for the user, or the geographic location of the user may be generalized (such as to a city, zip code, or state level) where location information is obtained such that a particular location of the user cannot be determined. Thus, the user may have control over what information is collected about the user, how the information is used, and what information is provided to the user.
Fig. 1 is a block diagram of an environment 100 in which content is distributed to client devices 110. The example environment 100 includes a data communication network 105, such as a Local Area Network (LAN), a Wide Area Network (WAN), the internet, a mobile network, or a combination thereof. Network 105 connects client devices 110, MPC cluster 130, Demand Side Platform (DSP)150, Supply Side Platform (SSP)170, publisher 140, and website 142. Example environment 100 may include many different client devices 110, MPC clusters 130, DSPs 150, SSPs 170, publishers 140, and websites 142.
The client device 110 is an electronic device capable of communicating over the network 105. Example client devices 110 include personal computers, mobile communication devices (e.g., smart phones), and other devices capable of sending and receiving data over the network 105. The client device may also be capable of including a digital assistant device that accepts audio input through a microphone and outputs audio output through a speaker. When the digital assistant detects a "hot word" or "hot phrase" that activates the microphone to accept audio input, the digital assistant can be placed in a listening mode (e.g., ready to accept audio input). The digital assistant device can also include a camera and/or a display to capture images and visually present information. The digital assistant can be implemented in different forms of hardware devices, including wearable devices (e.g., watches or glasses), smart phones, speaker devices, tablet devices, or other hardware devices. The client devices can also include digital media devices, such as streaming devices that plug into a television or other display to stream video to a television, or gaming device or gaming console.
The client device 110 typically includes an application 112, such as a web browser and/or a native application, to facilitate sending and receiving data over the network 105. A native application is an application developed for a particular platform or a particular device (e.g., a mobile device with a particular operating system). The publisher 140 can develop and provide the native application to the client device 110, e.g., making it available for download. For example, in response to a user of the client device 110 entering a resource address of the resource 145 in an address bar of a web browser or selecting a link referencing the resource address, the web browser can request the resource 145 from a web server hosting the publisher's 140 website 142. Similarly, the native application can request application content from a publisher's remote server.
Some resources, application pages, or other application content can include a digital component slot for presenting a digital component having a resource 145 or application page. As used throughout this document, the phrase "digital component" refers to a discrete unit of digital content or digital information (e.g., a video clip, audio clip, multimedia clip, image, text, or other unit of content). The digital components can be electronically stored in the physical memory device as a single file or collection of files, and the digital components can take the form of video files, audio files, multimedia files, image files, or text files, and include advertising information such that the advertisement is one type of digital component. For example, the digital component may be content intended to supplement the content of a web page or other resource presented by the application 112. More specifically, the digital components may include digital content related to the resource content (e.g., the digital components may relate to the same subject matter as the web page content, or to related subject matter). Thus, the provision of digital components can supplement and generally enhance web page or application content.
When application 112 loads a resource (or application content) that includes one or more slots of digital components, application 112 can request the digital components of each slot. In some implementations, the digital component slot can include code (e.g., script) that causes the application 112 to request the digital component from a digital component distribution system that selects and provides the digital component to the application 112 for presentation to a user of the client device 110.
Some publishers 140 use a supply side platform ("SSP") 170 to manage the process of obtaining digital components for digital component slots of their resources and/or applications. The SSP170 is a hardware and/or software implemented technology platform that automates the process of obtaining digital components of resources and/or applications. The SSPs 170 can interact with one or more demand side platforms "DSPs" 150 to obtain information that can be used to select digital components for digital component slots. As described in more detail below, this information can include criteria, which can also be referred to as selection criteria or selection parameters, that represent or specify the amount that the digital component provider 160 is willing to provide for presentation of the digital components of the digital component provider 160. Each publisher 140 can have a corresponding SSP170 or SSPs 170. Some publishers 140 may use the same SSP 170.
The digital component provider 160 can create (or otherwise publish) digital components that are presented in digital component slots of publishers' resources and applications. The digital component provider 160 can use the DSP150 to manage the provisioning of its digital components for presentation in the digital component slots. DSP150 is a technical platform implemented in hardware and/or software that automates the process of distributing digital components for presentation with resources and/or applications. The DSP150 is capable of interacting with multiple switches on behalf of the digital component provider 160 to provide digital components for presentation with resources and/or applications of multiple different publishers 140. In general, DSP150 is capable of receiving a request for a digital component (e.g., directly or through an exchange from SSP 170), generating (or selecting) selection parameters for one or more digital components created by one or more digital component providers based on the request, and providing data related to the digital component (e.g., the digital component itself) and the selection parameters to SSP 170.
The manner in which the SSP170 selects digital components and the manner in which the DSP150 distributes personalized digital components (e.g., generates selection parameters and/or the selection parameters themselves) historically includes the use of user information (e.g., browsing information, interest group information, etc.) obtained from third-party cookies, which are cookies found on the client device by a domain different from that of the web page being rendered on the client device. However, browsers are blocking the use of third party cookies, making it more difficult to select and provide personalized digital components, which means that computing resources and bandwidth are wasted by selecting and distributing content to users that is not of interest to the user. To overcome this problem, privacy protection techniques can be used that enable the use of user interest group information while suspending cross-domain tracking of users and while preventing leakage of user information across computing systems. The techniques described in this document protect this user information from being shared or leaked to other parties.
In some cases, it may be beneficial for a user to receive digital components related to web pages, application pages, or other electronic resources that the user previously accessed and/or interacted with. To distribute such digital components to users, users can be assigned to interest groups when they access a particular resource or perform a particular action at a resource (e.g., interact with a particular item presented on a web page or add an item to a virtual shopping cart). An interest group is a collection of users identified as interested in the same topic based on browsing behavior, self-reported interests, and/or information posted to social networking pages. For example, an interest group for "football" may include users that have been identified as being interested in football (e.g., by accessing a football-related web page). In some implementations, the interest group can be generated and/or updated/maintained by the digital component provider 160 or the DSP150 or SSP170 on behalf of the digital component provider 160. For example, when a user accesses electronic resources of the digital component providers 160, each digital component provider 160 can assign the user to its group of users. More specifically, when a user accesses a particular page (such as a product information page) of the digital component provider's website, the digital component provider may add the user to an interest group that includes users interested in the product described on the page. In some implementations, interest groups can be generated by the publishers 140. For example, each publisher 140 can assign users to their group of users when the users access electronic resources 145 of the publisher's 140 website 142. More specifically, when a user visits a particular page of the publisher's website (such as a Hawaiian vacation page), the publisher may add the user to an interest group that includes users interested in Hawaiian vacation.
To protect user privacy, the user's interest group membership is preferably maintained only at the user's client device 110, e.g., by one of the applications 112. In a particular example, the web browser can maintain a list of interest group identifiers ("interest group list") for a user using the web browser. The interest group list can include an interest group identifier for each interest group to which the user has been added. The digital component provider 160 or publisher 140 that created the interest group can specify an interest group identifier for its interest group. The interest group identifier of an interest group can describe the group (e.g., a gardening group) or a code (e.g., not a descriptive alphanumeric sequence) that represents the group. The user's interest group list can be stored in a secure store at the client device 110 and/or can be encrypted when stored.
When the application 112 presents resources or application content related to the digital component provider 160, the resource can request that the application 112 add one or more interest group identifiers to the interest group list. In response, the application 112 can add one or more interest group identifiers to the interest group list and securely store the interest group list. As described in more detail below, the application 112 can send the interest group identifier in the interest group list to the MPC cluster 130 along with a request for content (e.g., a request for one or more digital components). Rather than sending the plaintext (unencrypted or otherwise unprotected readable data) value of the interest group identifier, the application 112 can encrypt the interest group identifier and send the encrypted interest group identifier to the MPC cluster 130 so that the unintended recipient of the interest group identifier cannot access the plaintext value of the interest group identifier.
The MPC cluster 130 includes a plurality of computing systems that perform a multi-party computing process to select digital components based on one or more interest group identifiers and additional information. In this example, the MPC cluster 130 includes a first computing system S1 and a second computing system S2. The computing systems S1 and S2 can be owned and operated by the same party (e.g., a browser developer, an application developer, or an industry group) or by different parties (e.g., one operated by a browser developer and another operated by an industry group). Other numbers of computing systems can also be used, as long as the number is greater than one.
Selecting digital components using MPCs based on interest group identifiers protects the privacy of users by preventing any party (including the party operating the computing system of MPC cluster 130) from determining to which groups a user belongs. MPC procedures and cryptographic techniques also prevent other parties from accessing confidential information of SSP170 and DSP 150. An example process for selecting and distributing content using MPC and encryption techniques is shown in fig. 2 and 3.
Fig. 2 is a data flow diagram of a privacy protection method 200 for selecting and providing content to a client device. The operations of method 200 may be performed by various components of system 100. For example, the operations of method 200 can be performed by computing systems S1 and S2 of MPC cluster 130, SSP170, and DSP150 in communication with client device 110 and application 112.
The method 200 begins at step 1 performed by the application 112 of the client device 110. In step 1, the user of the client device 110 instructs the application 112 to navigate to a particular page. For example, a user of a client device 110 (e.g., a smartphone) can click on a link that instructs an application 112 (e.g., a web browser) to navigate to a home page of a news website, e.g., about a bird. After the application 112 navigates to a particular page, the application 112 sends two different types of requests in parallel (e.g., without waiting for a response to either type of request). These requests are for: (1) selection criteria for a set of digital components that are relevant to a particular group or groups that include the user, and (2) selection criteria for digital components that are identified based on a context of a page (or other online resource, such as a native application interface) that is currently being rendered and/or presented at the client device. The particular group can be, for example, an interest group or another group of users to which the user of the client device 110 belongs. An interest group can be associated with a particular entity, category, or other topic of interest that the users of the group are determined to be interested in. The selection criteria can be, for example, a user rating, a rating provided by a content provider, an interest score or bid, and other criteria. The request includes information to allow the filter group and/or selection criteria. Such information is described in more detail with respect to fig. 3.
The method continues with step 2, which comprises step 2a and step 2 b. In step 2a, the application 112 generates and sends a first request to S1, and, in step 2b, the application 112 generates and sends a second request to S2. Both the requests sent to S1 and S2 can be requests for selection criteria for digital components related to a group (e.g., a group of interests) that includes a user of the client device. The generation and transmission of these requests is discussed in detail below with reference to fig. 3. Steps 2a and 2b occur in parallel. In general, steps 2a and 2b can be a symmetric process, and any description of step 2a applies equally to step 2b, wherein step 2a is performed with respect to one subset of the group comprising users and step 2b is performed with respect to another subset of the group comprising users. As a way to prevent S1 and S2 collusion to identify or track users, the subset of groups sent to S1 will be different than the subset of groups sent to S2.
The method continues with step 3, where the two computing systems S1 and S2 of the MPC cluster 130 execute a secure 2-way computing (2PC) protocol to identify selection criteria for one or more digital components relevant to one or more interest groups including the user. In this 2PC process, S1 and S2 exchange information and access the two-level cache to identify relevant selection criteria. Each of S1 and S2 obfuscates information about the user/client device from the other computing system such that neither computing system has a complete set of information related to the user/client device, which prevents the computing systems from tracking the user across websites. Further details of this process are provided below with reference to fig. 3.
The method continues with step 4, where the application 112 receives a response for each of steps 2a and 2 b. Each response may contain a set of selection criteria for a 0 or 1 group (e.g., an interest group). The response, which may be referred to as a set of selection criteria, can include data such as an identifier of the particular interest group, a selection value of the particular interest group (e.g., a selection value that is qualified for selecting a digital component for a user that is a member of the particular interest group, which can also be referred to as a selection criteria), and other data associated with the particular interest group, the user's interaction, or the website to which the application 112 navigates. Each set of selection criteria can correspond to a digital component to which a selection criterion of the set of selection criteria applies. For example, the response can be in the format of { IG _ ID, post _ revshare _ bid, other _ metadata }, where IG _ ID represents an identifier of the interest group, post _ revshare _ bid represents a selection value (e.g., a bid value), and other _ metadata represents other data associated with the interest group, the corresponding digital component, or the selection value. For example, post _ revshare _ bid can include a digital component, data identifying the digital component, or instructions for obtaining the digital component from a remote server, such as a URL or other link to the location of the digital component. In another example, the digital component or instruction can be included in the metadata. At the conclusion of step 4, application 112 may receive a set of between 0 and 2 selection criteria for the interest group of which the user and/or browser is a member. Further details of this process are provided below with reference to fig. 3.
The method continues with step 5, where the application 112 sends a context digital component request ("third request") to the SSP 170. For example, the application 112 (in this example, a web browser) can send a request for a contextual digital component to the SSP 170. The context digital component request can include a context signal with which a relevant digital component can be identified. The context signal can be, for example, a category of content presented on a particular website or webpage being rendered/presented at the client device, a country or language of the user of the client device 110 (e.g., as specified by the client device settings), and other factors. Step 5 can be performed in parallel with step 2.
The method continues with step 6, where the SSP170 forwards the context digital component request to any number of DSPs 150. For example, the SSP170 can forward the request to several DSPs 150, each DSP150 having the opportunity to respond to the request with candidate selection criteria for the digital component. The candidate selection criterion can be, for example, a context selection value or a selection value of a particular context signal. The context selection value can represent or specify an amount by which the digital component provider 160 is willing to provide a digital component for presentation of the digital component provider 160. The DSP150 can select or determine candidate selection values on behalf of the digital component provider 160.
The method continues with step 7, where the one or more DSPs 150 respond to the request with candidate selection criteria for the digital component identified using the context signal. For example, DSP150 may be capable of responding to requests by SSP170 with context selection values and/or one or more context signals.
Additionally, the one or more DSPs 150 can optionally return one or more group selection criteria (e.g., a set of selection criteria) for a predicted group of users or for another group to which the digital components corresponding to the selection criteria qualify for distribution. No information identifying the group including the user is provided to the DSP 150. Instead, the DSP uses the context signals included in the context digital component request to predict the interest group that is likely to include the user, and returns a given selection criterion (e.g., a selection value) regarding the predicted interest group. The selection value can be used to select a corresponding digital component for a user that is a member of the interest group.
For example, the one or more DSPs 150 can use the context signals to predict one or more interest groups including the user and return one or more interest group selection value sets to be cached or otherwise stored by the MPC cluster 130 in response to future interest group requests that may be issued by other browsers in the future, such as the processes described in steps 2a and 2 b. Each of these interest group selection criteria sets can include information such as an identifier predicted to include the user's interest group, a selection value, a numeric component or an instruction to obtain the numeric component to which the selection value applies, marketing factors, or information about the pace of the content item campaign. For example, the set of interest group selection criteria may be in the form of { IG _ ID, pre _ revshare _ bid _ price, TTL, paging _ info }, where IG _ ID represents an identifier of the interest group, pre _ revshare _ bid represents a selection value before any revenue sharing occurs, TTL represents time-to-live, i.e. the maximum time span over which the MPC cluster can cache bids, and paging _ info represents information about the pace of content item activity with respect to the overall budget and predicted effectiveness of the content item. For example, the prediction of the interest group including the user can be performed by inputting the context signal into a machine learning model trained to output a predicted interest group based on the context signal input.
The set of interest group selection criteria serves as responsibility for being subject to factors such as TTL and cadence information provided in the future, and the DSP150 authorizes the SSP170 and the MPC cluster 130 to submit bids with indicated selection values for future interest group requests 2a and 2b, the future interest group requests 2a and 2b containing similar request parameters as those in the current context request steps 5 and 6. For example, if application 112 submits an interest group request (such as in step 2a or 2 b) indicating a signal that matches, for example, IG _ ID and a signal in the current context request (such as website URL, location, language, etc.), DSP150 can authorize SSP170 and MPC cluster 130 to submit a selection value having a particular value for the interest group selection value set.
Further, the DSP150 is able to predict which set of interest groups, e.g., identified by IG _ ID, may be associated with a user who will access the current website to which the application 112 is directed, and pre-submit the set of interest group selection criteria. The submitted set of selection values can be cached by the MPC cluster 130 to reduce latency and DSP150 server load in response to future interest group selection criteria requests. For example, if a subsequent interest group selection criteria request includes parameters that match parameters of a pre-submitted and cached interest group selection criteria set, the MPC cluster 130 can simply respond using the cached selection criteria set.
For example, the DSP150 can use historical user interaction data or other historical data for speculatively generating interest group selection values or sets of selection values, or predictively bidding on the interest group of the user that will access the current website to which the application 112 is directed. For example, if DSP150 determines from historical data that users who will access the current bird news website to which application 112 is directed are typically associated with interest groups of camping, nature, and outdoor equipment, DSP150 can speculatively generate selection values for those interest groups and store those selection values in the cache of MPC cluster 130, as discussed below with reference to step 10.
The method continues with step 8, where the SSP170 applies a number of filter criteria to the received candidate selection criteria and provides a response to the contextual digital component request. The SSP170 can apply filters such as buyer exclusions (buy exclusions) and/or creative exclusions (creative exclusions) to the received candidate selection criteria. For example, the SSP170 can exclude a particular digital component provider from providing bids that are provided by the publisher 140 to the SSP170 or on a list maintained by the SSP 170. In another example, the SSP170 can exclude particular content items on a list provided to or maintained by the SSP170 from being included as candidates. Once the SSP170 has filtered the candidate selection criteria, the SSP170 can calculate the selection value by applying specific pricing rules provided to the SSP170 or maintained by the SSP 170. For example, the SSP170 can calculate the post revenue sharing selection value by applying pricing rules provided by the DSP150 and perform the selection process among the candidates. For example, the SSP170 can auction among the contextual content item selection values specified by the candidate selection criteria and return a winning or highest contextual content item selection value to the application 112 along with the calculated selection value. For example, SSP170 can provide the computed selection value and the digital component (or an instruction to retrieve a selection value corresponding to the selection value) to application 112.
In some implementations, the SSP170 can also respond to the contextual digital component request with a given selection criterion for the group predicted to include the user. For example, the SSP170 can apply any of the processes and/or rules discussed above and provide a selection value or set of selection criteria for any number of interest groups predicted by the DSP150 to include the user. In this manner, client devices 110 are provided with selection values for one or more sets of interest group selection criteria even if the 2PC process performed by MPC cluster 130 fails to return any selection criteria for the interest groups that include the user as a member. For example, if the cache of the MPC cluster 130 does not include any selection criteria for any interest group containing the user when the application 112 sends requests to S1 and S2 in 2a and 2b, respectively, the MPC cluster 130 will not be able to respond to the application 112 with any selection criteria. In this case, a given selection criterion for the interest group predicted to include the user can still be provided in response to the context digital component request, such that the application 112 still has at least one interest group selection criterion set to evaluate even if the MPC cluster 130 fails to respond with any interest group selection criterion set.
The method continues with step 9, where the application 112 runs a final selection process to identify the digital component to display at the client device 110. In some implementations, the application 112 can run an auction to select the content item to be presented at the client device 110 by selecting the set of selection criteria (or digital component) having the highest value of the selection value (e.g., selection criteria). For example, an auction can be run using the winning context selection value from step 8 and corresponding numeric component (e.g., a candidate selection criterion from a plurality of candidate selection criteria) as provided by the SSP170, any set of interest group selection criteria received from the computing systems S1 and/or S2 (e.g., specifying an interest group selection criterion between zero and two interest group bids), and predicted selection criteria, such as a given selection criterion received from the SSP170 in response to a context numeric component request (e.g., specifying a given selection criterion with respect to a given selection value predicted to include the user' S interest group). The application 112 filters the predicted selection criteria to consider only selection criteria associated with the interest group to which the user and/or browser belongs. Because the application 112 has received the calculated selection values for the context digital component requests from the SSP170 and the computing systems S1 and S2 of the MPC cluster 130, the application 112 is able to conduct a simple selection process, such as a first price auction, to select the candidate selection value having the highest post-profit-sharing value. The application 112 can then render the digital components associated with the winning selection value.
The method can continue with step 10, where the SSP170 updates the interest group selection criteria maintained by the computing systems S1 and S2 of the MPC cluster 130. The SSP170 performs step 10 by sending the first level key and the second level look-up table (LUT) to the computing systems S1 and S2 of the MPC cluster 130.
For example, SSP170 can first apply the filtering criteria to the submitted interest group selection criteria and apply the pricing rules to calculate a resulting selection value in a process similar to that described with respect to step 8. SSP170 can then create a composite message from all signals provided in the context request, which are also interest group request signals, such as specific URLs, locations, languages, and other signals. SSP170 then serializes the composite message into an array of bytes to create an encrypted message representing the request signal and other request information. For example, SSP170 can cryptographically hash (cryptohash) a byte array into a fixed-size digital digest using the SHA256 algorithm. For purposes of discussion in this document, this digital digest can be referred to as an IG _ Request _ Key.
The computing systems S1 and S2 of the MPC cluster 130 each maintain a 2-level LUT cache. For example, the first level can be keyed by SHA256(IG _ Request _ Key) truncated to n bits. The second stage itself can be HMAC as its bondSHA256LUT of (IG _ Request _ Key, IG _ ID), where IG _ ID denotes an identifier of a specific group of interest, HMACSHA256Representing a hash-based message authentication code constructed from the SHA-256 hash function. The second level cache value can be stored in the form of { post _ revshare _ bid, metadata }. The metadata includes information such as TTL values, cadence information, identifiers of buyer accounts, values of pre-profit share selection values and post-profit share selection values, and other information. The SSP170 is capable of digitally signing at least a portion of the cryptographic message using a secret key that can only be verified or publicly verifiable by the application 112. For example, SSP170 can digitally sign an entire collection of metadata with its private key. The computing systems S1 and S2 of the MPC cluster 130 then independently update their 2-level LUTs using the received first-level keys and second-level LUTs.
In addition to sending candidate selection criteria for interest group selection criteria (e.g., a set of selection criteria) to computing systems S1 and S2 of MPC cluster 130 in step 10, SSP170 may optionally send the interest group selection criteria, which already includes the candidate selection criteria having the highest value, to application 112 as part of step 8. In this option, for each final selection process performed by application 112 as part of step 9, application 112 selects the highest selection value from several sets of selection values including one or more of the following (if available): the context selection value received in step 8; the interest group selection value received in step 2a, which is cached in the cache of the MPC cluster 130; the interest group selection value received in step 2b, which is cached in the cache of the MPC cluster 130; and/or interest group selection values received in step 8 that have not been cached (the application 112 further filters the bids based on the actual listing of the interest group with which the user of the client device 110 is associated).
FIG. 3 depicts a swim lane diagram showing an example process 300 for selecting content. The numbering of the steps in process 300 corresponds to the numbering of the steps in method 200. For example, steps 2a-1, 2a-2, 2a-3, and 2a-4 of process 300 are exemplary steps that may form part of step 2a of method 200. Similarly, steps 3a-1 through 3a-8 are exemplary steps that may form part of step 3 of method 200, and steps 4a-1 and 41-s are exemplary steps that may form part of step 4 of method 200. The operations of method 300 may be performed by various components of system 100. For example, the operations of the method 300 can be performed, at least in part, by the computing systems S1 and S2 of the MPC cluster 130 in communication with the client device 110 and the application 112.
In some embodiments, steps 2a and 2b are done in parallel and are a symmetric process. Thus, fig. 3 is discussed with reference to step 2a, but applies equally to step 2b, where the operation of the computing system is reversed. For example, in the opposite case, S1 would swap positions with S2 in fig. 3, but the rest of fig. 3 would remain the same to perform step 2 b.
In step 2a-1, application 112 generates, for example, randomly, two public/private key pairs: public _ key1, public _ key2, private _ key1, and private _ key 2. For example, these public/private key pairs can be Elliptic Curve Cryptography (ECC) key pairs, such as NIST P-256 key pairs. Application 112 only shares public _ key1 with computing system S1 and public _ key2 with computing system S2, such that public _ key1 and public _ key2 are temporary semi-public keys. The application 112 also creates a random number or any number that can be used only once in a cryptographic communication for the request.
In step 2a-2, application 112 randomly partitions the true list of interest groups to which the user of client device 110 belongsAre two sets G1And G2. Suppose G2＝{g2,1,…g2,kIs randomly assigned to G2Of interest groups. Assuming that the user of client device 110 and, by extension, application 112 are associated with n interest groups, each interest group has a place in G1Or G2Equal probability of. In some embodiments, set G1And G2Not of equal size. Recall that the application 112 preferably maintains a list of interest groups that include the user, so in this step the application can delineate the list of interest groups into two subsets of interest groups. In some embodiments, the two subsets of the interest group have non-overlapping members. In some embodiments, the two subsets of the interest group have overlapping members.
Any interest group with which application 112 is associated has a Presence of G1Or G2A non-zero probability p. Random interest groups not associated with application 112 exist in G1Or G2The probability in (1) is the False Positive Rate (FPR). Thus, G is created1Is epsilon-differential private, wherein
In steps 2a-3, the application 112 can then select a probabilistic data structure, such as a Bloom filter, implementation, and appropriate parameters, including the FPR of the structure. In this particular example, the applications 112 can then be sets G, respectively1And G2Creating a bloom Filter G1' and G2'. Due to the FPR, the number of FPRs,
For example, the application 112 can create a probabilistic data structure, such as a bloom or valley (cuckoo) filter, G2' for G2 T. The bloom filter uses k hash functions to hash the interest group identifier IG _ ID into m group locations. E.g. hjIG _ ID → [0, m), wherein 1<＝j<K. H (IG _ ID) can be defined by H (IG _ ID) ═ HMAC (IG _ Request _ Key, IG _ ID), where the result is represented … H in m-base3H2H1To indicate. h is a total ofm(IG _ ID) is thus defined as the m-th bit in H (IG _ ID), i.e., Hm。
In steps 2a-4, the application 112 sends a request to the computing system S1 in an encrypted message with a single parameter. For example, the parameter can be PubKeyEncrypt (Stage _1_ Lookup _ Key | | | G)2′||PubKeyEncrypt(G2 TS1) | public _ key2| | nonce, S2). In this equation, | | represents any lossless and reversible method of composing a complex message from one or more simple messages. For example, | | can represent concise binary object representation (contract binary object representation) or protocol buffering approach (protocol buffering approach)ol buffer method)。
In this particular example, the Stage _1_ Lookup _ Key is SHA256(IG _ Request _ Key) truncated to n bits, but other suitable keys can be used. In this particular example, PubKeyEncrypt is the result of applying a probabilistic public key encryption algorithm to encrypt clear _ text using a public key obtained from the domain. The public key encryption algorithm used by application 112 is typically based on ECC. For example, the public key encryption algorithm can be NIST P-256.
In step 3a-1, computing system S1 is unable to use the received request to perform any process other than forwarding it to computing system S2, assuming that computing system S2 will maintain the corresponding private key strictly confidential, since the request was encrypted using the public key obtained by application 112 using computing system S2. By forwarding the request, the computing system S1 hides the IP address of the client device executing the application 112 from the computing system S2, such that the computing system S2 cannot use any IP address of the application on the client device associated with the interest group request to track the user, thereby providing an additional level of privacy protection.
In step 3a-2, the computing system S2 decrypts the received request using its own private key to recover the plurality of parameters. For example, the parameters include Stage _1_ Lookup _ Key, G2' (i.e., is G)2 TConstructed bloom Filter), PubKeyEncrypt (G)2 TS1) (i.e., encrypted G that can only be decrypted by the computing system S1)2 T) Public _ key2 created by the application 112 for the current request, and nonce.
Even in the event that computing system S2 colludes with, for example, the SSP170, the computing system S2 will not be able to use the client device' S IP address common to the interest group and context requests to associate the interest group request with the context request from the application based on the IP address. This protection is even more apparent when the Stage _1_ Lookup _ Key has a limited number of bits.
In step 3a-3, the computing system S2 queries its 2-level Lookup table ("LUT") using Stage _1_ Lookup _ key. The result is a classic LUT, the Key of which is HMAC (IG _ Request _ Key, IG _ ID). In other words, the computing system S2 queries the LUT using the Stage _1_ Lookup _ Key from the decryption request for a matching entry.
In steps 3a-4, computing system S2 utilizes bloom filter G2' filter LUT. Assuming a bloom filter false positive rate of 1%, approximately 1% of the entries in the LUT will pass through the filter. The number of entries in the LUT is approximately 2 of all entries cached by the computing system S2-n. Thus, n controls the communication and computational costs between steps 2a-8 to 2a-11 (including steps 2a-8 to 2 a-11). The smaller n, the higher the communication and computation costs, and the higher the number of entries in the LUT associated with different IG _ Request _ keys, which makes it more difficult for the computing system S2 to collude with the SSP170 to associate interest groups and context requests based on a common target signal in both types of content item requests.
In steps 3a-5, the computing system S2 sorts the filtered items according to selection criteria. For example, the computing system S2 can sort the filtered entries from the first highest to the lowest using the post revenue sharing selection value (or bid value). For each entry, the computing system S2 prepares a Key/value pair, where the Key is HMAC (IG _ Request _ Key, IG _ ID), nonce). The value is PubKeySign (metadata _ for _ IG, public _ key2), MPC2, where PubKeySign is a function used to concatenate clear _ text with a digital signature created by applying a digital signature algorithm (such as ECDSA NIST P-256) to clear _ text using its private key. The metadata _ for _ IG of the interest group IG can include a set of selection criteria for the digital components corresponding to the interest group. As described above, the set of selection criteria can include a selection value, a numerical component, or an instruction to obtain a numerical component, among other things. PubKeyEncrypt is an encryption function performed on the metadata of interest groups using the public key public _ key2 that prevents the computing system S1 from learning the selection value of a particular interest group identified by IG _ ID that the computing system S1 can use to infer a signal such as the website URL from which a request was generated. PubKeySign prevents the computing system S1 from impersonating the computing system S2 to generate an erroneous result. Thus, the computing system S2 transforms the interest group bid collection into a key/valueAn ordered set of pairs. The computing system S2 then combines the ordered list of key/value pairs with PubKeyEncrypt (G)2 TS1) to the computing system S1.
In steps 3a-6, the computing system S1 decrypts PubKeyEncrypt (G)2 TS1) to recover G in plaintext form2 T. For example, computing system S1 decrypts PubKeyEncrypt using its private key corresponding to the public key provided only to computing system S1 by application 112.
In steps 3a-7, the computing system S1 uses G2 TSelecting a winning interest group to find its key in G from the list of ordered key/value pairs2 TThe first key/value pair in (1). Because the ordered list has been in the order of highest to lowest post-revenue sharing selection values, the computing system S1 can simply query G2 TAnd selecting from the ordered list its key at G2 TTo select the interest group with the highest post revenue sharing bid price in the real listing of interest groups with which the application 112 is associated without accessing the actual value of the key/value pair. The selected key/value pair is the result.
In steps 3a-8, the computing system S1 signs the selected key/value pair with its own private key for later verification by the application 112. For example, the computing system S1 can sign the winning key/value pair with its private key corresponding to the public key that the application 112 provided only to the computing system S1.
In step 4a-1, the computing system S1 sends the selected key/value pair or result back to the application 112.
In step 4a-2, the application 112 decrypts and verifies the result as follows.
The application 112 verification result is encrypted and signed by the computing system S1. For example, the Key can be HMAC (IG _ Request _ Key, wining _ IG _ ID), nonce). The value can be PubKeySign (metadata _ for _ IG, public _ key2), S2). Application 112 recovers wining _ IG _ ID and verifies that it is G2Is a member of (1). Application 112 can verify that wining _ IG _ ID is set G2Because the application 112 knows IG _ Request _ Key, nonce, and G2. The application 112 verifies that the value was encrypted and signed by the computing system S2. The application 112 then decrypts the value with private _ key2 to recover metadata _ for _ IG.
The encryption process 300 provides additional privacy and security protection. During this process, the computing system S2 receives a bloom filter G in the clear2'. Based on previous analysis, bloom Filter G2' is differentially private. Further, the computing system S2 receives Stage _1_ Lookup _ Key in plaintext form, i.e., SHA256(IG _ Request _ Key) truncated to n bits. In addition, the computing system S1 only sees the client IP address in the clear. Thus, none of the computing systems of the MPC cluster have access to the entire data of the user and cannot guess the identity of the user.
Fig. 4 is a flow diagram of an example privacy preserving process 400 for selecting content. In some implementations, the process or method 400 can be performed by one or more systems. For example, process 400 can be implemented by client device 110, application 112, and MPC cluster 130 of fig. 1-3. In particular, process 400 can be implemented by a system including one or more processors 510 and one or more memory elements (e.g., storage device 530 of fig. 5) including instructions that, when executed, cause the one or more processors to perform operations including the steps of process 400. In some implementations, the process 400 can be implemented as instructions stored on a non-transitory computer-readable medium, and when the instructions are executed by a computing system (e.g., a distributed computing system), the instructions can cause the computing system to perform the operations of the process 400. Preferably, the computing system comprises one or more servers. A distributed computing system can include multiple servers connected by a network.
The process 400 begins by a first multi-party computing (MPC) server of an MPC cluster (e.g., S2 of fig. 1, 2, and 3) receiving, from a second MPC server of the MPC cluster (e.g., S1 of fig. 1, 2, and 3), a request for selection criteria for at least one interest group of a set of two or more interest groups to which a particular user of a client device belongs, wherein the received request does not reveal an identifier of the client device to the first MPC server (402). For example, as described above with respect to step 3a-1 of fig. 2 and 3, the computing system S2 can receive a request from the computing system S1 to bid on an interest group. The request does not expose the IP address of the application 112, the identifier of the client device, to the computing system S2. This has the technical effect of protecting user privacy and protecting the security of user data. For example, only a portion of the interest group that includes the user as a member is provided to each MPC server of the MPC cluster. Thus, neither MPC server can determine the user's complete user interest group membership. The use of probabilistic data structures provides the additional technical effect of reducing the data size of requests sent to each MPC server while further protecting user privacy and data security. The aggregation of many requests (e.g., thousands or millions per day) results in significant savings in bandwidth and latency, and reduces battery consumption of mobile devices that can send the requests.
The process 400 continues by determining, by the first MPC server, a set of ordered selection criteria for at least one of a set of two or more interest groups to which a particular user of the client device belongs (404). In some embodiments, the set of ordered selection criteria is retrieved from the cache of the first MPC server using portions of the request that are protected from being accessed in unencrypted or clear text or otherwise exposed by the second MPC server. For example, as described above with respect to steps 3a-2 through 3a-5 of fig. 2 and 3, the computing system S2 (i.e., the first MPC server) can determine the ordered set of interest group bids retrieved from the level 2 LUT of the computing system S2 by using a portion of the request. This has the technical effect of maintaining data security and user privacy during the selection process. This approach is used to prevent any MPC cluster from obtaining a complete set of members of the user's interest. Furthermore, the method prevents the MPC server from obtaining confidential data about the DSPs that provide the selected values for the interest group.
The process 400 continues with transforming the set of ordered selection criteria into a set of key/value pairs, wherein the values of each of the key/value pairs are protected from exposure by the second MPC (406). For example, the computing system S2 can transform the set of ordered interest group bids into a set of key/value pairs as described above with respect to steps 3a-2 through 3a-5 of FIG. 2 and FIG. 3. This also has the technical effect of maintaining data security and user privacy during the selection process. This approach is used to prevent any MPC cluster from obtaining a complete set of members of the user's interest. Furthermore, the method prevents the MPC server from obtaining confidential data about the DSPs that provide the selected values for the interest group.
The process 400 continues with sending, by the first MPC server, the set of key/value pairs to the second MPC with data that enables the second MPC server to identify the key with the highest value without revealing values of the set of key/value pairs to the second MPC server (408). For example, as described above with respect to steps 3a-2 through 3a-5 of fig. 2 and 3, computing system S2 can send the ordered list of bids to computing system S1 as a set of key/value pairs, along with data that enables computing system S1 to identify the key with the highest value without allowing computing system S1 to access that value. This has the technical effect of protecting user privacy and data security. In addition, by sending only data about the winning interest group, rather than each interest group that includes the user as a member, the amount of data sent from the MPC server to the client device is reduced.
In some implementations, the process 400 can include: in a scenario in which the given interest group is predicted by the content distribution system to include a set of conditions for a particular user of the client device, receiving, by the first MPC server, given selection criteria for the given interest group from a content distribution system different from the first MPC server and the second MPC server, and caching, by the first MPC server, the given selection criteria for the given interest group in a cache of the first MPC server, the given interest group being predicted to include the particular user of the client device and being associated with an applicable context. This has the technical effect of selecting digital components more quickly based on the members of the interest group. By caching selection criteria for digital components distributed based on the members of the interest group, the MPC server is able to more quickly identify eligible digital components (e.g., digital components for the interest group that includes the user as a member) and select a winning digital component based on the cached selection values.
For example, as described above with respect to step 10 of FIG. 2, the SSP170 can send the speculative or predictive selection values provided by the DSP150 to the computing systems S1 and S2. Each of the computing systems S1 and S2 is capable of independently updating its respective 2-level LUT.
In some embodiments, process 400 further comprises: receiving, by a content distribution system, a content request submitted by a client device, generating, in response to the content request, candidate selection criteria in response to the content request, determining zero or more interest groups predicted to include a particular user of the client device based on the content request, generating given selection criteria for a given interest group based on determining that the given interest group is predicted to include the particular user of the client device, transmitting, by the content distribution system, the candidate distribution criteria and the given distribution criteria to the client device, and transmitting, by the content distribution system, the given distribution criteria for the given interest group instead of the candidate distribution criteria to a first MPC server. For example, DSP150 can receive content requests submitted by application 112, determine that a user of client device 110 on which application 112 is running is likely to be part of a particular interest group, and generate a predictive bid for the interest group. This has the following technical effect: enabling an application to use both interest group membership and contextual data of a digital component presentation environment to complete the selection process of a digital component to be displayed by the application without leaking user data to other parties, thereby improving data security throughout a robust digital component selection process, which improves user experience. Furthermore, in addition to performing the final selection process at the client device based on parallel requests, the selection process may be able to be completed faster, which may prevent errors that may occur if digital components must be selected in milliseconds.
In some embodiments, process 400 further comprises: receiving, by the second MPC server, a first encrypted request that is inaccessible to (e.g., cannot be decrypted by) the second MPC server, forwarding, by the second MPC server, the first encrypted request to the first MPC server, receiving, by the second MPC server, a set of key/value pairs, identifying, by the second MPC server, a given key/value pair having a highest value without revealing the value of the key/value pair, generating a first signed response to the first encrypted request that includes the given key/value pair, wherein the first signed response is signed with a private key of the second MPC server, and sending, in response to the first encrypted request, the first signed response to the client device. This has the technical effect of maintaining data security and user privacy during the selection process. This approach is used to prevent any MPC cluster from obtaining a complete set of members of the user's interest. Furthermore, the method prevents the MPC server from obtaining confidential data about the DSPs that provide the selected values for the interest group. In addition, the use of encryption and signatures in the request protects data security and prevents fraud that may occur between the MPC server and the client device. Using the signature to verify the response ensures that the encrypted response has not been modified.
For example, the computing system S1 can receive an encrypted request that is not accessible by the computing system S1 or is not decryptable by the computing system S1, and forward the request to the computing system S2. The computing system S2 can then provide the ordered set of key/value pairs to the computing system S1 without revealing the values of the pairs, and generate a response to the computing system S1 that includes the ordered set of key/value pairs and signs the values. Once the computing system S1 selects a winning interest group bid, the computing system S1 sends the selected key/value pair to the application 112.
In some embodiments, process 400 further comprises: receiving, by the client device, a first cryptographically signed response sent by the second MPC server, verifying, by the client device, that the first cryptographically signed response is signed by the first MPC server, recovering, by the client device, a first interest group from the first signed response, verifying, by the client device, that the first interest group includes a particular user, verifying, by the client device, that a value of a given key/value pair is signed by the first MPC server, decrypting, by the client device, the value of the given key/value pair to recover a first selection criterion, receiving, by the client device, a candidate selection criterion and a given selection criterion from the content distribution system, selecting, by the client device, a control selection criterion from the first selection criterion, the given selection criterion and the candidate selection criterion. This has the technical effect of protecting user privacy and data security as well as preventing fraud.
For example, as described above with respect to steps 4a-1 through 4a-2 of FIG. 3, the application 112 can receive the signed response from the computing system S1 and recover the winning interest group bid from the response. The application 112 can verify that the value of a given key/value pair in the response is encrypted and signed by the computing system S2. The application 112 can then decrypt the values of the key/value pairs to recover the winning interest group bid and receive other bids, including zero or one interest group bid from the computing system S2 and zero or one contextual bid and zero or more interest group bids from the SSP 170.
In some embodiments, process 400 further comprises: depicting, by a client device, an interest group including a particular user as a first interest group set and a second interest group set different from the first interest group set, sending, by the client device, a first encrypted request to a second MPC server, the first encrypted request including the first interest group set including the particular user, sending, by the client device, a second encrypted request to the first MPC server, the second encrypted request including the second interest group set including the particular user, receiving, by the client device, a second signed response sent by the first MPC server, verifying, by the client device, that the second signed response was signed by the second MPC server, recovering, by the client device, the specified interest group from the signed response, verifying, by the client device, that the specified interest group includes the particular user, verifying, by the client device, that a value of a given key/value pair is signed by the second MPC server, decrypting, by the client device, the value of the given key/value pair to recover the third selection criterion, wherein selecting the control selection criterion comprises selecting the control selection criterion from the first selection criterion, the given selection criterion, the candidate selection criterion, and the third selection criterion. This has the technical effect of protecting user privacy and data security as well as preventing fraud.
For example, as described above with respect to step 2 of FIG. 2 and steps 2a-1 through 2a-2 of FIG. 3, the application 112 of the client device 110 can separate interest groups into two different sets. As described above with respect to steps 2a-1 through 3a-1 of FIG. 3, the application 112 of the client device 110 can send an encryption request to computing system S2, and computing system S2 can send a second encryption request to computing system S1. As described above with respect to steps 3a-5 through 4a-2 of FIG. 3, the application 112 can receive the signed result from the computing system S2 and verify that the value of the result was encrypted and signed by the computing system S1. The application 112 can then decrypt the results and verify that the specified interest group in the results includes the particular user because the application 112 has a true list of interest groups to which the user belongs.
FIG. 5 is a block diagram of an example computer system 500 that can be used to perform the operations described above. The system 500 includes a processor 510, a memory 520, a storage device 530, and an input/output device 540. Each of the components 510, 520, 530, and 540 can be interconnected, for example, using a system bus 550. Processor 510 is capable of processing instructions for execution within system 500. In one implementation, the processor 510 is a single-threaded processor. In another implementation, the processor 510 is a multi-threaded processor. The processor 510 is capable of processing instructions stored in the memory 520 or on the storage device 530.
The storage device 530 is capable of providing mass storage for the system 500. In one implementation, the storage device 530 is a computer-readable medium. In various different implementations, the storage device 530 can include, for example, a hard disk device, an optical disk device, a storage device shared by multiple computing devices over a network (e.g., a cloud storage device), or some other mass storage device.
The input/output device 540 provides input/output operations for the system 500. In one implementation, the input/output device 540 can include one or more of a network interface device (e.g., an Ethernet card), a serial communication device (e.g., an RS-232 port), and/or a wireless interface device (e.g., an 802.11 card). In another embodiment, the input/output devices can include driver devices configured to receive input data and transmit output data to other input/output devices, such as a keyboard, a printer, and a display device 560. However, other implementations can also be used, such as mobile computing devices, mobile communication devices, set-top box television client devices, and so forth.
Although an example processing system has been described in fig. 5, implementations of the subject matter and the functional operations described in this specification can be implemented in other types of digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them.
The media does not necessarily correspond to a file. The media may be stored in a portion of a file that holds other documents, in a single file dedicated to the document in question, or in multiple coordinated files.
Embodiments of the subject matter and the operations described in this specification can be implemented in digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them. Embodiments of the subject matter described in this specification can be implemented as one or more computer programs, i.e., one or more modules of computer program instructions, encoded on a computer storage medium (or media) for execution by, or to control the operation of, data processing apparatus. Alternatively or additionally, the program instructions can be encoded on an artificially generated propagated signal, e.g., a machine-generated electrical, optical, or electromagnetic signal, that is generated to encode information for transmission to suitable receiver apparatus for execution by the data processing apparatus. The computer storage medium can be or be included in a computer-readable storage device, a computer-readable storage substrate, a random or serial access memory array or device, or a combination of one or more of them. Further, although the computer storage medium is not a propagated signal, the computer storage medium can be a source or destination of computer program instructions encoded in an artificially generated propagated signal. The computer storage media can also be or be included in one or more separate physical components or media (e.g., multiple CDs, disks, or other storage devices).
The operations described in this specification can be implemented as operations performed by data processing apparatus on data stored on one or more computer-readable storage devices or received from other sources.
All of the features of each of the processes, methods, systems and apparatus described herein (including system 100, method 200, process 300, process 400 and system 500) are optionally applicable, mutatis mutandis, to the other processes, methods, systems and apparatus described herein. By way of example only, the features of method 200 and process 300 are optionally applied to process 400, mutatis mutandis.
The term "data processing apparatus" includes all types of apparatus, devices, and machines for processing data, including by way of example a programmable processor, a computer, a system on a chip, or a plurality or combination of the foregoing. The apparatus can comprise special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit). The apparatus can include, in addition to hardware, code that creates an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, a cross-platform runtime environment, a virtual machine, or a combination of one or more of them. The apparatus and execution environment are capable of implementing a variety of different computing model infrastructures, such as web services, distributed computing and grid computing infrastructures.
A computer program (also known as a program, software application, script, or code) can be written in any form of programming language, including compiled or interpreted languages, declarative or procedural languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, object, or other unit suitable for use in a computing environment. A computer program may, but need not, correspond to a file in a file system. A program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub programs, or portions of code). A computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
The processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform actions by operating on input data and generating output. The processes and logic flows can also be performed by, and apparatus can also be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).
Processors suitable for the execution of a computer program include, by way of example, both general and special purpose microprocessors. Generally, a processor will receive instructions and data from a read-only memory or a random access memory or both. The essential elements of a computer are a processor for performing actions in accordance with the instructions and one or more memory devices for storing instructions and data. Generally, a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks. However, a computer need not have such a device. Moreover, the computer can be embedded in another device, e.g., a mobile telephone, a Personal Digital Assistant (PDA), a mobile audio or video player, a game console, a Global Positioning System (GPS) receiver, or a portable storage device (e.g., a Universal Serial Bus (USB) flash drive), to name a few. Devices suitable for storing computer program instructions and data include all forms of non-volatile memory, media and memory devices, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks; a magneto-optical disk; and CD-ROM and DVD-ROM disks. The processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
To provide for interaction with a user, embodiments of the subject matter described in this specification can be implemented on a computer having a display device (e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor) for displaying information to the user and a keyboard and a pointing device (e.g., a mouse or a trackball) by which the user can provide input to the computer. Other types of devices can also be used to provide for interaction with a user; for example, feedback provided to the user can be any form of sensory feedback, such as visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form, including acoustic, speech, or tactile input. In addition, the computer is able to interact with the user by sending and receiving documents to and from the device used by the user; for example, by sending a web page to a web browser on the user's client device in response to a request received from the web browser.
Embodiments of the subject matter described in this specification can be implemented in a computing system that includes a back-end component (e.g., as a data server), or that includes a middleware component (e.g., an application server), or that includes a front-end component (e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described in this specification), or any combination of one or more such back-end, middleware, or front-end components. The components of the system can be interconnected by any form or medium of digital data communication (e.g., a communication network). Examples of communication networks include a local area network ("LAN") and a wide area network ("WAN"), an internetwork (e.g., the internet), and a peer-to-peer network (e.g., an ad hoc peer-to-peer network).
The computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other. In some embodiments, the server sends data (e.g., HTML pages) to the client device (e.g., for the purpose of displaying data to and receiving user input from a user interacting with the client device). Data generated at the client device (e.g., a result of the user interaction) can be received at the server from the client device.
While this specification contains many specific implementation details, these should not be construed as limitations on the scope of any invention or of what may be claimed, but rather as descriptions of features specific to particular embodiments of particular inventions. Certain features that are described in this specification in the context of separate embodiments can also be implemented in combination in a single embodiment. Conversely, various features that are described in the context of a single embodiment can also be implemented in multiple embodiments separately or in any suitable subcombination. Furthermore, although features may be described above as acting in certain combinations and even initially claimed as such, one or more features from a claimed combination can in some cases be excised from the combination, and the claimed combination may be directed to a subcombination or variation of a subcombination.
Similarly, while operations are depicted in the drawings in a particular order, this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order, or that all illustrated operations be performed, to achieve desirable results. In some cases, multitasking and parallel processing may be advantageous. Moreover, the separation of various system components in the embodiments described above should not be understood as requiring such separation in all embodiments, and it should be understood that the described program components and systems can generally be integrated together in a single software product or packaged into multiple software products.
Thus, particular embodiments of the subject matter have been described. Other embodiments are within the scope of the following claims. In some cases, the actions recited in the claims can be performed in a different order and still achieve desirable results. In addition, the processes depicted in the accompanying figures do not necessarily require the particular order shown, or sequential order, to achieve desirable results. In some implementations, multitasking and parallel processing may be advantageous.
Claims (20)
1. A method, comprising:
receiving, by a first MPC server of a multi-party computing (MPC) cluster, a request from a second MPC server of the MPC cluster for selection criteria for at least one interest group of a set of two or more interest groups to which a particular user of a client device belongs, wherein the received request does not reveal an identifier of the client device to the first MPC server;
in response to receiving the request:
determining, by the first MPC server, a set of ordered selection criteria for the at least one interest group of the set of two or more interest groups to which a particular user of the client device belongs, the set of ordered selection criteria retrieved from the cache of the first MPC server using the portion of the request that is protected from exposure by the second MPC server;
transforming the set of ordered selection criteria into a set of key/value pairs, wherein the values of each of the key/value pairs are protected from exposure by the second MPC server; and
sending, by the first MPC server, the set of key/value pairs to the second MPC server with data that enables the second MPC server to identify the key with the highest value without exposing the values of the set of key/value pairs to the second MPC server.
2. The method of claim 1, further comprising:
receiving, by the first MPC server, a given selection criterion for a given interest group from a content distribution system different from the first MPC server and the second MPC server, the given interest group predicted by the content distribution system to include a particular user of the client device; and
caching, by the first MPC server, a given selection criterion of a given interest group predicted to include a particular user of the client device in a cache of the first MPC server.
3. The method of claim 2, further comprising:
receiving, by a content distribution system, a content request submitted by a client device;
in response to the content request, generating candidate selection criteria in response to the content request;
determining, based on the content request, a given set of interests that are predicted to include a particular user of the client device;
generating a given selection criterion for the given interest group based on determining that the given interest group is predicted to include a particular user of the client device;
transmitting, by the content distribution system, the candidate distribution criteria and the given distribution criteria to the client device; and
sending, by the content distribution system, the given distribution criteria for the given interest group to the first MPC server, but not sending the candidate distribution criteria.
4. The method of any preceding claim, further comprising:
receiving, by the second MPC server, a first encrypted request that is inaccessible to the second MPC server;
forwarding, by the second MPC server, the first encrypted request to the first MPC server;
receiving a set of key/value pairs from a first MPC server;
identifying, by the second MPC server, the given key/value pair having the highest value without revealing the value of said key/value pair;
generating a first cryptographically signed response to the first cryptographic request comprising the given key/value pair, wherein the first signed response is signed with a private key of the second MPC server; and
a first cryptographically signed response is sent to the client device in response to the first cryptographic request.
5. The method of claim 4, further comprising:
receiving, by the client device, a first cryptographically signed response sent by the second MPC server;
verifying, by the client device, that the first cryptographically signed response was signed by the first MPC server;
recovering, by the client device, the first interest group from the first signed response;
verifying, by the client device, that the first interest group includes the particular user;
verifying, by the client device, that the value of the given key/value pair was signed by the first MPC server;
decrypting, by the client device, the value of the given key/value pair to recover the first selection criterion;
receiving, by a client device, candidate selection criteria and given selection criteria from a content distribution system; and
selecting, by the client device, a control selection criterion from the first selection criterion, the given selection criterion, and the candidate selection criterion.
6. The method of claim 5, further comprising:
depicting, by a client device, an interest group comprising a particular user as a first interest group set and a second interest group set different from the first interest group set;
sending, by the client device, a first encrypted request to the second MPC server, the first encrypted request including a first set of interest groups that includes the particular user;
sending, by the client device, a second encrypted request to the first MPC server, the second encrypted request including a second set of interest groups that includes the particular user;
receiving, by the client device, a second signed response sent by the first MPC server;
verifying, by the client device, that the second signed response was signed by the second MPC server;
retrieving, by the client device, the specified interest group from the signed response;
verifying, by the client device, that the specified interest group includes the particular user;
verifying, by the client device, that the value of the given key/value pair is signed by the second MPC server; and
decrypting, by the client device, the value of the given key/value pair to recover the third selection criterion, wherein selecting the control selection criterion comprises selecting the control selection criterion from the first selection criterion, the given selection criterion, the candidate selection criterion, and the third selection criterion.
7. The method of any of claims 4 to 6, further comprising:
receiving, by the first MPC server, a second encrypted request that is inaccessible to the first MPC server;
forwarding, by the first MPC server, the second encrypted request to the second MPC server;
receiving a set of different key/value pairs from a second MPC server;
identifying, by the first MPC server, the particular key/value pair having the highest value without revealing the values of the key/value pairs in the different sets;
generating a second signed response to the second encrypted request comprising the particular key/value pair, wherein the first signed response is signed with a private key of the second MPC server; and
a second signed response is sent to the client device in response to the second encryption request.
8. A system, comprising:
one or more processors; and
one or more memory elements comprising instructions that, when executed, cause the one or more processors to perform operations comprising:
receiving, by a first MPC system server of a multi-party computing (MPC) cluster, a request from a second MPC server of the MPC cluster for selection criteria for at least one interest group of a set of two or more interest groups to which a particular user of a client device belongs, wherein the received request does not reveal an identifier of the client device to the first MPC server;
in response to receiving the request:
determining, by the first MPC server, a set of ordered selection criteria for the at least one interest group of the set of two or more interest groups to which a particular user of the client device belongs, the set of ordered selection criteria retrieved from the cache of the first MPC server using the portion of the request that is protected from exposure by the second MPC server;
transforming the set of ordered selection criteria into a set of key/value pairs, wherein the values of each of the key/value pairs are protected from exposure by the second MPC server; and
sending, by the first MPC server, the set of key/value pairs to the second MPC server with data that enables the second MPC server to identify the key with the highest value without exposing the values of the set of key/value pairs to the second MPC server.
9. The system of claim 8, the operations further comprising:
receiving, by the first MPC server, a given selection criterion for a given interest group from a content distribution system different from the first MPC server and the second MPC server, the given interest group predicted by the content distribution system to include a particular user of the client device; and
caching, by the first MPC server, a given selection criterion of a given interest group predicted to include a particular user of the client device in a cache of the first MPC server.
10. The system of claim 9, the operations further comprising:
receiving, by a content distribution system, a content request submitted by a client device;
in response to the content request, generating candidate selection criteria in response to the content request;
determining, based on the content request, a given set of interests that are predicted to include a particular user of the client device;
generating a given selection criterion for the given interest group based on determining that the given interest group is predicted to include a particular user of the client device;
transmitting, by a content distribution system, candidate distribution criteria and given distribution criteria to the client device; and
sending, by the content distribution system, the given distribution criteria for the given interest group to the first MPC server, but not sending the candidate distribution criteria.
11. The system of any of claims 8 to 10, the operations further comprising:
receiving, by the second MPC server, a first encrypted request that is inaccessible to the second MPC server;
forwarding, by the second MPC server, the first encrypted request to the first MPC server;
receiving a set of key/value pairs from a first MPC server;
identifying, by the second MPC server, the given key/value pair having the highest value without revealing the value of the key/value pair;
generating a first cryptographically signed response to the first cryptographic request comprising the given key/value pair, wherein the first signed response is signed with a private key of the second MPC server; and
a first cryptographically signed response is sent to the client device in response to the first cryptographic request.
12. The system of claim 11, the operations further comprising:
receiving, by the client device, a first cryptographically signed response sent by the second MPC server;
verifying, by the client device, that the first cryptographically signed response was signed by the first MPC server;
recovering, by the client device, the first interest group from the first signed response;
verifying, by the client device, that the first interest group includes the particular user;
verifying, by the client device, that a value of a given key/value pair is signed by the first MPC server;
decrypting, by the client device, the value of the given key/value pair to recover the first selection criterion;
receiving, by a client device, candidate selection criteria and given selection criteria from a content distribution system; and
selecting, by the client device, a control selection criterion from the first selection criterion, the given selection criterion, and the candidate selection criterion.
13. The system of claim 12, the operations further comprising:
depicting, by a client device, an interest group comprising a particular user as a first interest group set and a second interest group set different from the first interest group set;
sending, by the client device, a first encrypted request to the second MPC server, the first encrypted request including a first set of interest groups that includes the particular user;
sending, by the client device, a second encrypted request to the first MPC server, the second encrypted request including a second set of interest groups that includes the particular user;
receiving, by the client device, a second signed response sent by the first MPC server;
verifying, by the client device, that the second signed response was signed by the second MPC server;
retrieving, by the client device, the specified interest group from the signed response;
verifying, by the client device, that the specified interest group includes the particular user;
verifying, by the client device, that the value of the given key/value pair is signed by the second MPC server; and
decrypting, by the client device, the value of the given key/value pair to recover the third selection criterion, wherein selecting the control selection criterion comprises selecting the control selection criterion from the first selection criterion, the given selection criterion, the candidate selection criterion, and the third selection criterion.
14. The system of any of claims 11 to 13, the operations further comprising:
receiving, by the first MPC server, a second encrypted request that is inaccessible to the first MPC server;
forwarding, by the first MPC server, the second encrypted request to the second MPC server;
receiving a set of different key/value pairs from a second MPC server;
identifying, by the first MPC server, the particular key/value pair having the highest value without revealing the values of the key/value pairs in the different sets;
generating a second signed response to the second cryptographic request comprising the particular key/value pair, wherein the first signed response is signed with a private key of the second MPC server; and
a second signed response is sent to the client device in response to the second encryption request.
15. A non-transitory computer storage medium encoded with instructions that, when executed by a computing system, cause the computing system to perform operations comprising:
receiving, by a first MPC server of a multi-party computing (MPC) cluster, a request from a second MPC server of the MPC cluster for selection criteria for at least one interest group of a set of two or more interest groups to which a particular user of a client device belongs, wherein the received request does not reveal an identifier of the client device to the first MPC server;
in response to receiving the request:
determining, by the first MPC server, a set of ordered selection criteria for the at least one interest group of the set of two or more interest groups to which a particular user of the client device belongs, the set of ordered selection criteria retrieved from the cache of the first MPC server using the portion of the request that is protected from exposure by the second MPC server;
transforming the set of ordered selection criteria into a set of key/value pairs, wherein the values of each of the key/value pairs are protected from exposure by the second MPC server; and
sending, by the first MPC server, the set of key/value pairs to the second MPC server with data that enables the second MPC server to identify the key with the highest value without exposing the values of the set of key/value pairs to the second MPC server.
16. The non-transitory computer storage medium of claim 15, the operations further comprising:
receiving, by the first MPC server, a given selection criterion for a given interest group from a content distribution system different from the first MPC server and the second MPC server, the given interest group predicted by the content distribution system to include a particular user of the client device; and
caching, by the first MPC server, a given selection criterion of a given interest group predicted to include a particular user of the client device in a cache of the first MPC server.
17. The non-transitory computer storage medium of claim 16, the operations further comprising:
receiving, by a content distribution system, a content request submitted by a client device;
in response to the content request, generating candidate selection criteria in response to the content request;
determining, based on the content request, a given set of interests that are predicted to include a particular user of the client device;
generating a given selection criterion for the given interest group based on determining that the given interest group is predicted to include a particular user of the client device;
transmitting, by the content distribution system, the candidate distribution criteria and the given distribution criteria to the client device; and
sending, by the content distribution system, the given distribution criteria for the given interest group to the first MPC server, but not sending the candidate distribution criteria.
18. The non-transitory computer storage medium of any one of claims 15 to 17, the operations further comprising:
receiving, by the second MPC server, a first encrypted request that is inaccessible to the second MPC server;
forwarding, by the second MPC server, the first encrypted request to the first MPC server;
receiving a set of key/value pairs from a first MPC server;
identifying, by the second MPC server, the given key/value pair having the highest value without revealing the value of the key/value pair;
generating a first cryptographically signed response to the first cryptographic request comprising the given key/value pair, wherein the first signed response is signed with a private key of the second MPC server; and
a first cryptographically signed response is sent to the client device in response to the first cryptographic request.
19. The non-transitory computer storage medium of claim 18, the operations further comprising:
receiving, by the client device, a first cryptographically signed response sent by the second MPC server;
verifying, by the client device, that the first cryptographic signature response was signed by the first MPC server;
recovering, by the client device, the first interest group from the first signed response;
verifying, by the client device, that the first interest group includes the particular user;
verifying, by the client device, that the value of the given key/value pair was signed by the first MPC server;
decrypting, by the client device, the value of the given key/value pair to recover the first selection criterion;
receiving, by a client device, candidate selection criteria and given selection criteria from a content distribution system; and
selecting, by the client device, a control selection criterion from the first selection criterion, the given selection criterion, and the candidate selection criterion.
20. The non-transitory computer storage medium of claim 19, the operations further comprising:
depicting, by a client device, an interest group comprising a particular user as a first interest group set and a second interest group set different from the first interest group set;
sending, by the client device, a first encrypted request to the second MPC server, the first encrypted request including a first set of interest groups that includes the particular user;
sending, by the client device, a second encrypted request to the first MPC server, the second encrypted request including a second set of interest groups that includes the particular user;
receiving, by the client device, a second signed response sent by the first MPC server;
verifying, by the client device, that the second signed response was signed by the second MPC server;
retrieving, by the client device, the specified interest group from the signed response;
verifying, by the client device, that the specified interest group includes the particular user;
verifying, by the client device, that the value of the given key/value pair is signed by the second MPC server; and
decrypting, by the client device, the value of the given key/value pair to recover the third selection criterion, wherein selecting the control selection criterion comprises selecting the control selection criterion from the first selection criterion, the given selection criterion, the candidate selection criterion, and the third selection criterion.
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US202063065849P | 2020-08-14 | 2020-08-14 | |
US63/065,849 | 2020-08-14 | ||
PCT/US2021/045888 WO2022036183A1 (en) | 2020-08-14 | 2021-08-13 | Online privacy preserving techniques |
Publications (2)
Publication Number | Publication Date |
---|---|
CN114450919A true CN114450919A (en) | 2022-05-06 |
CN114450919B CN114450919B (en) | 2023-12-19 |
Family
ID=77726523
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN202180005490.2A Active CN114450919B (en) | 2020-08-14 | 2021-08-13 | Online privacy protection method and system |
Country Status (6)
Country | Link |
---|---|
US (1) | US11968297B2 (en) |
EP (1) | EP4014427B1 (en) |
JP (1) | JP7354427B2 (en) |
KR (1) | KR20220052352A (en) |
CN (1) | CN114450919B (en) |
WO (1) | WO2022036183A1 (en) |
Citations (11)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN104380690A (en) * | 2012-06-15 | 2015-02-25 | 阿尔卡特朗讯 | Architecture of privacy protection system for recommendation services |
CN104604200A (en) * | 2012-07-16 | 2015-05-06 | 阿尔卡特朗讯 | Method and apparatus for privacy protected clustering of user interest profiles |
CN105009505A (en) * | 2013-08-09 | 2015-10-28 | 汤姆逊许可公司 | A method and system for privacy-preserving recommendation based on matrix factorization and ridge regression |
US20160050070A1 (en) * | 2013-04-12 | 2016-02-18 | Nec Europe Ltd. | Method and system for accessing device by a user |
CN106471539A (en) * | 2014-08-14 | 2017-03-01 | 谷歌公司 | System and method for obscuring audience measurement |
CN108475281A (en) * | 2016-05-06 | 2018-08-31 | 谷歌有限责任公司 | Use the video annotation of syndication users session data |
CN108509806A (en) * | 2018-04-09 | 2018-09-07 | 北京东方网润科技有限公司 | A kind of big data precision marketing system and equipment with secret protection |
CN109891424A (en) * | 2017-01-30 | 2019-06-14 | 谷歌有限责任公司 | The link between identifier is established in the case where non-disclosure identification information specific |
CN110661764A (en) * | 2018-06-29 | 2020-01-07 | 阿里巴巴集团控股有限公司 | Input acquisition method and device of secure multi-party computing protocol |
CN111324895A (en) * | 2014-10-20 | 2020-06-23 | 微软技术许可有限责任公司 | Trust service for client devices |
US20200259800A1 (en) * | 2019-02-12 | 2020-08-13 | Visa International Service Association | Fast oblivious transfers |
Family Cites Families (5)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CA2762967A1 (en) | 2009-05-21 | 2010-11-25 | Intertrust Technologies Corporation | Content delivery systems and methods |
US9679314B1 (en) | 2014-01-31 | 2017-06-13 | Google Inc. | Content selection using distribution parameter data |
US9832504B2 (en) | 2015-09-15 | 2017-11-28 | Google Inc. | Event-based content distribution |
US11218324B2 (en) | 2018-04-05 | 2022-01-04 | Ares Technologies, Inc. | Systems and methods authenticating a digitally signed assertion using verified evaluators |
EP4044496A1 (en) * | 2021-02-10 | 2022-08-17 | Robert Bosch GmbH | Distributed secure multi party computation |
-
2021
- 2021-08-13 CN CN202180005490.2A patent/CN114450919B/en active Active
- 2021-08-13 JP JP2022518299A patent/JP7354427B2/en active Active
- 2021-08-13 KR KR1020227009695A patent/KR20220052352A/en unknown
- 2021-08-13 WO PCT/US2021/045888 patent/WO2022036183A1/en unknown
- 2021-08-13 US US17/637,849 patent/US11968297B2/en active Active
- 2021-08-13 EP EP21769544.4A patent/EP4014427B1/en active Active
Patent Citations (11)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN104380690A (en) * | 2012-06-15 | 2015-02-25 | 阿尔卡特朗讯 | Architecture of privacy protection system for recommendation services |
CN104604200A (en) * | 2012-07-16 | 2015-05-06 | 阿尔卡特朗讯 | Method and apparatus for privacy protected clustering of user interest profiles |
US20160050070A1 (en) * | 2013-04-12 | 2016-02-18 | Nec Europe Ltd. | Method and system for accessing device by a user |
CN105009505A (en) * | 2013-08-09 | 2015-10-28 | 汤姆逊许可公司 | A method and system for privacy-preserving recommendation based on matrix factorization and ridge regression |
CN106471539A (en) * | 2014-08-14 | 2017-03-01 | 谷歌公司 | System and method for obscuring audience measurement |
CN111324895A (en) * | 2014-10-20 | 2020-06-23 | 微软技术许可有限责任公司 | Trust service for client devices |
CN108475281A (en) * | 2016-05-06 | 2018-08-31 | 谷歌有限责任公司 | Use the video annotation of syndication users session data |
CN109891424A (en) * | 2017-01-30 | 2019-06-14 | 谷歌有限责任公司 | The link between identifier is established in the case where non-disclosure identification information specific |
CN108509806A (en) * | 2018-04-09 | 2018-09-07 | 北京东方网润科技有限公司 | A kind of big data precision marketing system and equipment with secret protection |
CN110661764A (en) * | 2018-06-29 | 2020-01-07 | 阿里巴巴集团控股有限公司 | Input acquisition method and device of secure multi-party computing protocol |
US20200259800A1 (en) * | 2019-02-12 | 2020-08-13 | Visa International Service Association | Fast oblivious transfers |
Non-Patent Citations (2)
Title |
---|
彭丽寻;刘丰恺;: "基于个性化k匿名隐私保护的资源推荐算法", 电脑与电信, no. 06 * |
李超;: "大数据环境下隐私保护的研究现状分析", 电脑知识与技术, no. 18 * |
Also Published As
Publication number | Publication date |
---|---|
US11968297B2 (en) | 2024-04-23 |
CN114450919B (en) | 2023-12-19 |
KR20220052352A (en) | 2022-04-27 |
WO2022036183A1 (en) | 2022-02-17 |
US20220278828A1 (en) | 2022-09-01 |
EP4014427B1 (en) | 2023-05-03 |
JP7354427B2 (en) | 2023-10-02 |
JP2022554058A (en) | 2022-12-28 |
EP4014427A1 (en) | 2022-06-22 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
JP2023067928A (en) | Using secure multi-party computation to improve content selection process integrity | |
EP4052160A1 (en) | Privacy preserving centroid models using secure multi-party computation | |
US20230188329A1 (en) | Using secure multi-party computation and probabilistic data structures to protect access to information | |
JP7475492B2 (en) | USING MULTI-PARTY COMPUTATION AND K-ANONNYMY TECHNIQUES TO PROTECT SENSITIVE INFORMATION | |
CN114945932A (en) | Feedback controller using secret sharing | |
KR20220140759A (en) | Processing of machine learning modeling data to improve classification accuracy | |
KR20230048126A (en) | Cryptographic Security Control Using Secure Multiparty Operations | |
US20220405407A1 (en) | Privacy preserving cross-domain machine learning | |
CN114450919B (en) | Online privacy protection method and system | |
CN115088005A (en) | Securing access to information in content distribution using secure MPC and vector computation | |
JP7471450B2 (en) | Improving the performance of secure multiparty computation | |
EP4128652A1 (en) | Flexible content selection processes using secure multi-party computation | |
EP4101121A1 (en) | Privacy preserving measurements using secure multi-party computation | |
WO2024030200A1 (en) | Single request architecture for increasing efficiency of secure multi-party computations |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
SE01 | Entry into force of request for substantive examination | ||
GR01 | Patent grant | ||
GR01 | Patent grant |
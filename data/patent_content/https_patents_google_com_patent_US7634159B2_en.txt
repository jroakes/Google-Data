US7634159B2 - System and method for parallel computation of an array transform - Google Patents
System and method for parallel computation of an array transform Download PDFInfo
- Publication number
- US7634159B2 US7634159B2 US11/007,142 US714204A US7634159B2 US 7634159 B2 US7634159 B2 US 7634159B2 US 714204 A US714204 A US 714204A US 7634159 B2 US7634159 B2 US 7634159B2
- Authority
- US
- United States
- Prior art keywords
- data elements
- array
- transform
- column
- elements
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Fee Related, expires
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V10/00—Arrangements for image or video recognition or understanding
- G06V10/94—Hardware or software architectures specially adapted for image or video understanding
- G06V10/955—Hardware or software architectures specially adapted for image or video understanding using specific electronic processors
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V10/00—Arrangements for image or video recognition or understanding
- G06V10/40—Extraction of image or video features
- G06V10/48—Extraction of image or video features by mapping characteristic values of the pattern into a parameter space, e.g. Hough transformation
Definitions
- This invention relates generally to the field of array signal processing. More particularly, this invention relates to a system and method for computation of an array transform.
- a common problem in image processing is to find primitives such as lines, curves, circles and ellipses in frames of image data.
- One approach is to use a Hough transform.
- the Hough transform maps a point in the image to a curve in the transform domain that indicates the parameters of all primitives passing through the point. If the primitive is a straight line, the Hough transform of the entire image is mathematically equivalent to a 2-dimensional discrete Radon transform or a Slant Stack transform.
- Calculation of the transform is computationally expensive. This presents problem for applications where rapid computation is required at a low cost.
- An example is the analysis of video frames from an automobile video camera, for applications such as vehicle guidance and license-plate reading.
- Another example is computer vision for robots. All of these applications require real-time processing of video frames.
- Custom hardware has been proposed for analyzing a Hough transform.
- the Hough transform requires mapping a point in the image to a curve in the transform array.
- the first approach is to use a large number of accumulators, one for each point in the transform array. This approach results in complex hardware, such as computer graphics cards.
- the second approach is to use a single accumulator and to store the transform array in a memory. This approach is slow because of the requirement to perform multiple read and write operations for each image point to move partial sums between the memory and the accumulator.
- FIG. 1 is a diagrammatic representation of an array of data elements showing straight line primitives.
- FIG. 2 is a diagrammatic representation of an array of data elements with shifted columns in accordance with an embodiment of the invention.
- FIG. 3 is a block diagram of an array transform system in accordance with an embodiment of the invention.
- FIG. 4 is a flow chart of a method for performing an array transform in accordance with an embodiment of the invention
- FIG. 5 is a diagrammatic representation of an array of data elements showing curved line primitives.
- FIG. 6 is a diagrammatic representation of an array of data elements with shifted columns in accordance with an embodiment of the invention.
- FIG. 7 is a diagrammatic representation of an array of data elements showing circular line primitives.
- FIG. 8 is a block diagram of a barrel shifter in accordance with an embodiment of the invention.
- the Hough transform commonly used in image processing
- the 2-dimensional Slant Stack transform commonly used in the analysis of seismic recordings
- the transform of an N ⁇ N array A is obtained by summing array values, one from each column of the array, along a series of lines. The lines may be described in polar form by their distance ⁇ from an origin and the angle ⁇ to the horizontal axis.
- x is a column index
- A′(p+mx,x) is an interpolated value from column x of the array A.
- the interpolation uses the nearest element in the column.
- the nearest element has row index: p+ mx , where mx denotes the nearest integer to mx. If the row index is less than one, or greater than N, the corresponding term in the summation is set to zero.
- This form of the transform can be written as
- mx denotes a shift applied to column x for a slope m, and that the same shift is applied to each element in the summation, independent of the parameter p.
- One embodiment of the present invention makes use of the property.
- FIG. 1 shows an 8 ⁇ 8 array A with reference numeral 100 .
- the transform element T 8 (0,3/7) is obtained by summing elements along the line 102 .
- the line starts at the element A(0,0) and ends at the element A(3,7).
- the array elements shown with broken lines are the array elements closest to the line 102 in each column.
- the transform element T 8 (4,3/7) is obtained by summing elements along the line 104 .
- the transform element T 8 (4,3/7) is equivalent to the transform element H 8 ( ⁇ , ⁇ ).
- the elements shown with solid bold lines are the elements closest to the line in each column. Other terms in the transform are obtained in a similar fashion. Transforms for other size arrays, including non-square arrays, may be defined similarly.
- T 1 (:, m ) A (:,0)
- P(k) denotes a shift applied to a column of the array A.
- the shift may be performed using a barrel shifter or other shifting device.
- P(k) is an interpolation operator or matrix.
- Equation (6) is a vector equation showing that the m th column of the transform array can be calculated by shifting and accumulating columns of the array A.
- the array 100 is illustrated in FIG. 2 .
- FIG. 2 shows the array A of FIG. 1 with the columns shifted downwards.
- the shifts for columns 0-7 are given by
- the transform may be used to match shape templates (or primitives) other than straight lines.
- the shape template may be a curve, an ellipse or a circle for example.
- the parameter m may be a vector.
- a shift operator P(n, m) can be found for each column n and each parameter m that shifts points on the template to a single row in the shifted array.
- the array transform system 300 comprises a memory 302 for storing elements of an array, received via input 304 , a barrel shifter 306 , a plurality of accumulators 308 and an output multiplexer 310 that provides a vector output 312 .
- the memory 302 , barrel shifter 306 and accumulators 308 are controlled by a controller 314 . The operation of the system is described below with reference to the flow chart shown in FIG. 4 .
- the accumulators are counters that are incremented whenever a ‘1’ is located in the corresponding position of the shifted column of data elements.
- an array of data elements to be transformed is loaded into the memory at block 404 .
- the accumulators are set at zero at this time. If the array contains 1-bit data, each column of the array may be stored as a data word.
- a transform parameter is selected.
- the transform parameter may represent the slope m of the line, the angle ⁇ of a perpendicular to the line, for example, or combination of parameters of a primitive.
- the transform parameter m will be used by way of explanation.
- a column of the array is selected from the memory and at block 410 the column is moved into the barrel shifter.
- the barrel shifter shifts the data by a specified number of bit positions determined from the column index and the transform parameter, m.
- the shifted column of data elements is then accumulated in accumulators at block 414 .
- the accumulator p holds the partial sum for the element T(p,m).
- a check is made to determine if all of the columns of the array have been shifted and accumulated. If not, as indicated by the negative branch from decision block 416 , flow returns to block 408 and another column is selected. If all of the columns have been shifted and accumulated, as indicated by the positive branch from decision block 416 , the accumulator values are output at block 418 .
- One application of the present invention is in the field of image processing, where the array is an array of pixel values.
- a common task in image processing is the detection of edges. This may be performed by applying a difference operator, such as Sobel gradient operator, to a pixel array. The absolute value of the resulting array is then quantized to 1-bit to give a binary array in which elements are either 0 or 1.
- the columns of the binary array can be conveniently stored as data words in a memory.
- a transform is applied. Large values in the transform domain correspond to primitives in the binary array. For example, referring to FIG. 1 and FIG.
- the controller 314 in FIG. 3 is further operable to search the accumulator outputs 312 to find transform elements above a threshold value and pass only those values as an output for further processing.
- the transform may use primitives other than straight lines.
- the primitives are circular arcs.
- FIG. 6 shows the array A of FIG. 5 with the columns shifted. The shifts for columns are chosen so that points closest to the primitive are moved to appear on a row of the shifted array 200 .
- the terms of the transform for parameter m can be obtained by summing or accumulating along rows of the shifted array 200 .
- the circular arcs could be parameterized by the intercept p with the left edge of the array, the slope m of the chord (shown by the dotted line) and the radius r of the arc, for example.
- the system of the present invention allows parallel computation of the transform for different values of the parameter p, since the shift values s are independent of p.
- the transpose of the array of data elements can be loaded into the memory. This allows for primitives that are more vertically oriented than horizontally oriented to be used.
- FIG. 7 shows an example where the primitive is a circle.
- the circle is made up of four arcs, 702 , 704 , 706 and 708 .
- the contribution to the transform from each arc is calculated separately, then the four contributions are added to produce the final transform.
- FIG. 7 illustrates the computation of the upper arc 702 .
- a shift of 8 or more denotes that the column does not contribute to the transform.
- the contributions to the transforms for all values of p can be calculated at the same time, as denoted by the vertically displaced copies of the arc 702 in FIG. 7 .
- the lower arc 704 and vertically displaced copies of the lower arc can be calculated in a similar manner, using the same data set but with different shift values.
- the contributions to the transform from the right arc 706 and the left arc 708 are calculated by loading a rotated version of the data array into the memory. The array is rotated by 90°, so that the arcs 706 and 708 are close to horizontal. Computation of the contributions then continues as before. Finally, the contributions from all four arcs are added for each parameter value p.
- FIG. 8 is a block diagram of an exemplary barrel shifter in accordance with an embodiment of the invention.
- An 8-bit barrel-shifter 800 is shown having 3 inner, shifting layers of components 808 (denoted by SHIFT BY 4, SHIFT BY 2 and SHIFT BY 1 in FIG. 8 ).
- a corresponding N-bit barrel would have log 2 (N) inner layers of components (rounded upwards if N is not a power of 2).
- the inner shifting layers 808 of the barrel-shifter 800 allow input data to be shifted in one direction only. Shifting in the other direction is achieved by an outer reversal layer 806 (denoted by FLIP) that flips or reverses the order of the elements in the input.
- FLIP outer reversal layer
- the original order of the elements is recovered by a second outer reversal layer 810 (denoted by UNFLIP) that again reverse the order of the elements.
- Each layer comprises a number of multiplexers, 802 .
- the inner shifting layers 808 also include logical AND units 804 that may be used to pad the input with zeros.
- N 88
- the use of the two outer reversal layers (FLIP 806 and UNFLIP 810 ) reduces the number of multiplexers compared to a two-way barrel-shifter. If an application does not require the order of the elements to be maintained, the UNFLIP output reversal layer may be omitted.
- the multiplexers in the FLIP layer, SHIFT BY 4 layer and UNFLIP layers are set to select the upper inputs, while the multiplexers in the SHIFT BY 2 and SHIFT BY 1 layers are set to select the lower inputs.
- the multiplexers in the FLIP, UNFLIP, SHIFT BY 4 and SHIFT BY 4 layers are set to select the lower inputs, while the multiplexers in the SHIFT BY 2 layer are set to select the upper inputs.
- the inner shifting layers may be arranged in any order.
- An embodiment of an N-bit barrel shifter would have M shifting layers, where M is an integer no less than log2(N).
- the m th shifting layer of the shifter would be operable to pass or shift a column of data elements by an amount dependent upon the shift value.
- the m th shifting layer may comprises N ⁇ 2 m multiplexers and 2 m logical AND units and be capable of shifting a column of data elements by 2 m places.
- the m th shifting layer comprises N multiplexers and is operable to rotate a column of data elements by 2 m places.
Abstract
Description
where x is a column index, and A′(p+mx,x) is an interpolated value from column x of the array A. The polar form and slope-intercept form are equivalent and are related by
T 1(:,m)=A(:,0),
T n+1(:,m)=T n(:,m)+P(
where P(k) denotes a shift applied to a column of the array A. Mathematically, the shift operator can be written as a matrix with the elements of the kth diagonal equal to one and other elements zero. For example, when N=6,
respectively. In
T 1(:,m)=P(0,m)A(:,0),
T n+1(:,m)=T n(:, m)+P(n,m)A(:,n), n=1, . . . ,N−1 (8)
Claims (22)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US11/007,142 US7634159B2 (en) | 2004-12-08 | 2004-12-08 | System and method for parallel computation of an array transform |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US11/007,142 US7634159B2 (en) | 2004-12-08 | 2004-12-08 | System and method for parallel computation of an array transform |
Publications (2)
Publication Number | Publication Date |
---|---|
US20060120622A1 US20060120622A1 (en) | 2006-06-08 |
US7634159B2 true US7634159B2 (en) | 2009-12-15 |
Family
ID=36574282
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US11/007,142 Expired - Fee Related US7634159B2 (en) | 2004-12-08 | 2004-12-08 | System and method for parallel computation of an array transform |
Country Status (1)
Country | Link |
---|---|
US (1) | US7634159B2 (en) |
Families Citing this family (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9348750B1 (en) * | 2006-12-14 | 2016-05-24 | Xilinx, Inc. | Circuit for and method of realigning data at a receiver |
US8783883B2 (en) * | 2010-08-30 | 2014-07-22 | Honda Motor Co., Ltd. | Method for controlling power to a motor in a vehicle door mirror |
US9123113B2 (en) | 2013-03-08 | 2015-09-01 | Raven Industries, Inc. | Row guidance parameterization with Hough transform |
DE112015002194T5 (en) | 2014-05-09 | 2017-01-19 | Raven Industries, Inc. | Improved serialization parameterization with Hough transformation |
Citations (9)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4868752A (en) | 1987-07-30 | 1989-09-19 | Kubota Ltd. | Boundary detecting method and apparatus for automatic working vehicle |
US5430810A (en) | 1990-11-20 | 1995-07-04 | Imra America, Inc. | Real time implementation of the hough transform |
WO1995033241A1 (en) * | 1994-05-27 | 1995-12-07 | Hitachi, Ltd. | High-speed arithmetic unit for discrete cosine transform and associated operation |
US6408105B1 (en) | 1998-05-12 | 2002-06-18 | Advantest Corporation | Method for detecting slope of image data utilizing hough-transform |
US6430319B1 (en) * | 1997-04-30 | 2002-08-06 | Fujitsu Limited | Data conversion processing circuit |
US20020114518A1 (en) | 2001-01-04 | 2002-08-22 | Wilt Nicholas P. | Hough transform supporting methods and arrangements |
US20030123736A1 (en) | 2001-12-12 | 2003-07-03 | Xun Xu | Imlementation of hough transform and its application in line detection and video motion analysis |
US6636881B1 (en) * | 1999-01-18 | 2003-10-21 | Matsushita Electric Industrial Co., Ltd. | Binary data counter, area information extractor and huffman converter |
US20030228057A1 (en) * | 2002-06-10 | 2003-12-11 | Lockheed Martin Corporation | Edge detection using hough transformation |
-
2004
- 2004-12-08 US US11/007,142 patent/US7634159B2/en not_active Expired - Fee Related
Patent Citations (9)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4868752A (en) | 1987-07-30 | 1989-09-19 | Kubota Ltd. | Boundary detecting method and apparatus for automatic working vehicle |
US5430810A (en) | 1990-11-20 | 1995-07-04 | Imra America, Inc. | Real time implementation of the hough transform |
WO1995033241A1 (en) * | 1994-05-27 | 1995-12-07 | Hitachi, Ltd. | High-speed arithmetic unit for discrete cosine transform and associated operation |
US6430319B1 (en) * | 1997-04-30 | 2002-08-06 | Fujitsu Limited | Data conversion processing circuit |
US6408105B1 (en) | 1998-05-12 | 2002-06-18 | Advantest Corporation | Method for detecting slope of image data utilizing hough-transform |
US6636881B1 (en) * | 1999-01-18 | 2003-10-21 | Matsushita Electric Industrial Co., Ltd. | Binary data counter, area information extractor and huffman converter |
US20020114518A1 (en) | 2001-01-04 | 2002-08-22 | Wilt Nicholas P. | Hough transform supporting methods and arrangements |
US20030123736A1 (en) | 2001-12-12 | 2003-07-03 | Xun Xu | Imlementation of hough transform and its application in line detection and video motion analysis |
US20030228057A1 (en) * | 2002-06-10 | 2003-12-11 | Lockheed Martin Corporation | Edge detection using hough transformation |
Non-Patent Citations (5)
Title |
---|
Brad, Remus. "License Plat Recognition System". Computer Science Department, "Lucian Blaga" University, Sibiu, Romania. |
Duller et al "Image processing application using an associative processor array" Proceedings of the Alvey Vision Conference 1989 in further view of Pillmeier. * |
Implementation of a Parallel Hough Transform Processor; Conen, Klefenz, Männer, Zoz; in: Buzuloiu V. (ed.): Proc. Workshop on Image Processing for Future High Energy Physics Detectors, Erice, 1992, World Scientific. * |
Kamat, Varsha et al. "An Efficient Implementation of the Hough Transform for Detecting Vehicle License Plates Using DSP's". School of Engineering and Computer Science, Oakland University, Rochester, MI 48309-4401. IEEE 1995. |
Pillmeier, Matthew R.; Schulte, Michael J.; Walters, Eugene G., III "Design alternatives for barrel shifters" Advanced Signal Processing Algorithms, Architectures, and Implementations XII. Edited by Luk, Franklin T. Proceedings of the SPIE, vol. 4791, pp. 436-447 (2002). * |
Also Published As
Publication number | Publication date |
---|---|
US20060120622A1 (en) | 2006-06-08 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US11600059B2 (en) | Systems and methods for providing an image classifier | |
CN109344618B (en) | Malicious code classification method based on deep forest | |
US6658148B1 (en) | Image processing method and apparatus | |
Yan et al. | SRGAT: Single image super-resolution with graph attention network | |
KR102165273B1 (en) | Method and system for channel pruning of compact neural networks | |
WO2019065703A1 (en) | Information processing device | |
CN112183517B (en) | Card edge detection method, device and storage medium | |
CN113065632A (en) | Method and apparatus for validating training of neural networks for image recognition | |
CN111104941B (en) | Image direction correction method and device and electronic equipment | |
CN113158789A (en) | Target detection method, system, device and medium for remote sensing image | |
US7634159B2 (en) | System and method for parallel computation of an array transform | |
CN115223007A (en) | Method and system for inclined target training and detection | |
Bacea et al. | Single stage architecture for improved accuracy real-time object detection on mobile devices | |
CN112200191B (en) | Image processing method, image processing device, computing equipment and medium | |
US10949694B2 (en) | Method and apparatus for determining summation of pixel characteristics for rectangular region of digital image avoiding non-aligned loads using multiple copies of input data | |
WO2019065702A1 (en) | Information processing device | |
CN112434702A (en) | Image processing method, image processing device, computer equipment and storage medium | |
CN102880878A (en) | Single-image-based super-resolution analytical method and system | |
CN110569684B (en) | Image binarization method for small-capacity cache | |
US10489920B2 (en) | Method and electronic device for determining moving direction of a finger | |
CN113033593A (en) | Text detection training method and device based on deep learning | |
US10789072B2 (en) | Parallel processor for calculating operand and result addresses as a function of a position of a field of action and predetermined positions of processing elements in non-homogeneous address zones within a topology | |
CN115641573B (en) | Text ordering method and device, electronic equipment and storage medium | |
Seaidoun | A fast exact Euclidean distance transform with application to computer vision and digital image processing | |
CN115797853B (en) | Attention and multi-scale pooling-based rock residue image processing method and system |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: MOTOROLA INC., ILLINOISFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:DWYER, MALCOLM R.;CRENSHAW, JAMES E.;LI, ZHIYUAN;REEL/FRAME:016073/0507Effective date: 20041207 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
AS | Assignment |
Owner name: MOTOROLA MOBILITY, INC, ILLINOISFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MOTOROLA, INC;REEL/FRAME:025673/0558Effective date: 20100731 |
|
AS | Assignment |
Owner name: MOTOROLA MOBILITY LLC, ILLINOISFree format text: CHANGE OF NAME;ASSIGNOR:MOTOROLA MOBILITY, INC.;REEL/FRAME:029216/0282Effective date: 20120622 |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
AS | Assignment |
Owner name: GOOGLE TECHNOLOGY HOLDINGS LLC, CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MOTOROLA MOBILITY LLC;REEL/FRAME:034419/0001Effective date: 20141028 |
|
FPAY | Fee payment |
Year of fee payment: 8 |
|
FEPP | Fee payment procedure |
Free format text: MAINTENANCE FEE REMINDER MAILED (ORIGINAL EVENT CODE: REM.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
LAPS | Lapse for failure to pay maintenance fees |
Free format text: PATENT EXPIRED FOR FAILURE TO PAY MAINTENANCE FEES (ORIGINAL EVENT CODE: EXP.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
STCH | Information on status: patent discontinuation |
Free format text: PATENT EXPIRED DUE TO NONPAYMENT OF MAINTENANCE FEES UNDER 37 CFR 1.362 |
|
FP | Lapsed due to failure to pay maintenance fee |
Effective date: 20211215 |
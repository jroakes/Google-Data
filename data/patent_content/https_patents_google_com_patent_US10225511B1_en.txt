US10225511B1 - Low power framework for controlling image sensor mode in a mobile image capture device - Google Patents
Low power framework for controlling image sensor mode in a mobile image capture device Download PDFInfo
- Publication number
- US10225511B1 US10225511B1 US14/984,869 US201514984869A US10225511B1 US 10225511 B1 US10225511 B1 US 10225511B1 US 201514984869 A US201514984869 A US 201514984869A US 10225511 B1 US10225511 B1 US 10225511B1
- Authority
- US
- United States
- Prior art keywords
- image
- images
- image sensor
- capture device
- scene
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active
Links
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N5/00—Details of television systems
- H04N5/76—Television signal recording
- H04N5/765—Interface circuits between an apparatus for recording and another apparatus
- H04N5/77—Interface circuits between an apparatus for recording and another apparatus between a recording apparatus and a television camera
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F18/00—Pattern recognition
- G06F18/20—Analysing
- G06F18/22—Matching criteria, e.g. proximity measures
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F18/00—Pattern recognition
- G06F18/20—Analysing
- G06F18/24—Classification techniques
- G06F18/241—Classification techniques relating to the classification model, e.g. parametric or non-parametric approaches
- G06F18/2413—Classification techniques relating to the classification model, e.g. parametric or non-parametric approaches based on distances to training or reference patterns
- G06F18/24133—Distances to prototypes
- G06F18/24143—Distances to neighbourhood prototypes, e.g. restricted Coulomb energy networks [RCEN]
-
- G06K9/6201—
-
- G06K9/66—
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N3/00—Computing arrangements based on biological models
- G06N3/02—Neural networks
- G06N3/04—Architecture, e.g. interconnection topology
- G06N3/045—Combinations of networks
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N3/00—Computing arrangements based on biological models
- G06N3/02—Neural networks
- G06N3/08—Learning methods
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V10/00—Arrangements for image or video recognition or understanding
- G06V10/40—Extraction of image or video features
- G06V10/44—Local feature extraction by analysis of parts of the pattern, e.g. by detecting edges, contours, loops, corners, strokes or intersections; Connectivity analysis, e.g. of connected components
- G06V10/443—Local feature extraction by analysis of parts of the pattern, e.g. by detecting edges, contours, loops, corners, strokes or intersections; Connectivity analysis, e.g. of connected components by matching or filtering
- G06V10/449—Biologically inspired filters, e.g. difference of Gaussians [DoG] or Gabor filters
- G06V10/451—Biologically inspired filters, e.g. difference of Gaussians [DoG] or Gabor filters with interaction between the filter responses, e.g. cortical complex cells
- G06V10/454—Integrating the filters into a hierarchical structure, e.g. convolutional neural networks [CNN]
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V10/00—Arrangements for image or video recognition or understanding
- G06V10/70—Arrangements for image or video recognition or understanding using pattern recognition or machine learning
- G06V10/82—Arrangements for image or video recognition or understanding using pattern recognition or machine learning using neural networks
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V20/00—Scenes; Scene-specific elements
- G06V20/10—Terrestrial scenes
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V30/00—Character recognition; Recognising digital ink; Document-oriented image-based pattern recognition
- G06V30/10—Character recognition
- G06V30/19—Recognition using electronic means
- G06V30/191—Design or setup of recognition systems or techniques; Extraction of features in feature space; Clustering techniques; Blind source separation
- G06V30/19173—Classification techniques
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V40/00—Recognition of biometric, human-related or animal-related patterns in image or video data
- G06V40/10—Human or animal bodies, e.g. vehicle occupants or pedestrians; Body parts, e.g. hands
- G06V40/16—Human faces, e.g. facial parts, sketches or expressions
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/102—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the element, parameter or selection affected or controlled by the adaptive coding
- H04N19/132—Sampling, masking or truncation of coding units, e.g. adaptive resampling, frame skipping, frame interpolation or high-frequency transform coefficient masking
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/134—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the element, parameter or criterion affecting or controlling the adaptive coding
- H04N19/136—Incoming video signal characteristics or properties
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/42—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals characterised by implementation details or hardware specially adapted for video compression or decompression, e.g. dedicated software implementation
- H04N19/423—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals characterised by implementation details or hardware specially adapted for video compression or decompression, e.g. dedicated software implementation characterised by memory arrangements
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/42—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals characterised by implementation details or hardware specially adapted for video compression or decompression, e.g. dedicated software implementation
- H04N19/423—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals characterised by implementation details or hardware specially adapted for video compression or decompression, e.g. dedicated software implementation characterised by memory arrangements
- H04N19/426—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals characterised by implementation details or hardware specially adapted for video compression or decompression, e.g. dedicated software implementation characterised by memory arrangements using memory downsizing methods
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/42—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals characterised by implementation details or hardware specially adapted for video compression or decompression, e.g. dedicated software implementation
- H04N19/436—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals characterised by implementation details or hardware specially adapted for video compression or decompression, e.g. dedicated software implementation using parallelised computational arrangements
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/46—Embedding additional information in the video signal during the compression process
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/85—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using pre-processing or post-processing specially adapted for video compression
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N23/00—Cameras or camera modules comprising electronic image sensors; Control thereof
- H04N23/60—Control of cameras or camera modules
- H04N23/61—Control of cameras or camera modules based on recognised objects
- H04N23/611—Control of cameras or camera modules based on recognised objects where the recognised objects include parts of the human body
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N23/00—Cameras or camera modules comprising electronic image sensors; Control thereof
- H04N23/60—Control of cameras or camera modules
- H04N23/64—Computer-aided capture of images, e.g. transfer from script file into camera, check of taken image quality, advice or proposal for image composition or decision on when to take image
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N23/00—Cameras or camera modules comprising electronic image sensors; Control thereof
- H04N23/60—Control of cameras or camera modules
- H04N23/65—Control of camera operation in relation to power supply
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N23/00—Cameras or camera modules comprising electronic image sensors; Control thereof
- H04N23/60—Control of cameras or camera modules
- H04N23/667—Camera operation mode switching, e.g. between still and video, sport and normal or high- and low-resolution modes
-
- H04N5/23245—
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N9/00—Details of colour television systems
- H04N9/79—Processing of colour television signals in connection with recording
- H04N9/80—Transformation of the television signal for recording, e.g. modulation, frequency changing; Inverse transformation for playback
- H04N9/804—Transformation of the television signal for recording, e.g. modulation, frequency changing; Inverse transformation for playback involving pulse code modulation of the colour picture signal components
- H04N9/8042—Transformation of the television signal for recording, e.g. modulation, frequency changing; Inverse transformation for playback involving pulse code modulation of the colour picture signal components involving data reduction
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N9/00—Details of colour television systems
- H04N9/79—Processing of colour television signals in connection with recording
- H04N9/80—Transformation of the television signal for recording, e.g. modulation, frequency changing; Inverse transformation for playback
- H04N9/82—Transformation of the television signal for recording, e.g. modulation, frequency changing; Inverse transformation for playback the individual colour picture signal components being recorded simultaneously only
- H04N9/8205—Transformation of the television signal for recording, e.g. modulation, frequency changing; Inverse transformation for playback the individual colour picture signal components being recorded simultaneously only involving the multiplexing of an additional signal and the colour video signal
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N3/00—Computing arrangements based on biological models
- G06N3/02—Neural networks
- G06N3/04—Architecture, e.g. interconnection topology
- G06N3/044—Recurrent networks, e.g. Hopfield networks
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N5/00—Computing arrangements using knowledge-based models
- G06N5/01—Dynamic search techniques; Heuristics; Dynamic trees; Branch-and-bound
Definitions
- the present disclosure relates generally to an image capture, curation, and editing system that includes a resource-efficient mobile image capture device that continuously captures images. More particularly, the present disclosure relates to low power frameworks for controlling image sensor mode in a mobile image capture device.
- An image capture device can capture images from various perspectives, which may be useful for various objectives.
- a mobile image capture device can be used to perform life logging, in which images are captured by the mobile image capture device over a period of time to document various events that occur during the user's daily life.
- Life logging can be performed to assist in memory retention in the elderly, to share the user's perspective or experience with other persons, or to simply document the various events that the user experiences so that the user can revisit such events in the future and enjoy their recollection. For example, a parent may enjoy reviewing images of their child blowing out candles on a birthday cake.
- a mobile image capture device can be used to capture particular events in a person's life in much the same manner as the person would use a traditional camera to record such events.
- a mobile image capture device may provide the further benefit that the user does not have to actively operate a camera during the event to capture imagery of the event. Instead, the user is able to fully engage in and enjoy the event while the mobile image capture device captures imagery of the event. For example, the parent can enjoy and participate in their child blowing out candles on the birthday cake without the distraction of operating a camera, while still obtaining imagery of the scene to enjoy at a later time.
- a mobile image capture device may be relatively more adept at capturing and curating imagery of candid moments versus a traditional camera.
- a mobile image capture device may be able to capture images which more accurately reflect true user experiences, such as laughter during conversation or a genuine but fleeting smile, while traditional cameras are more limited to the images in which the subjects adopt a common pose or “say cheese”.
- mobile image capture devices may be particularly advantageous where capturing a record of the user's perspective or associated events is a matter of public safety or has legal significance.
- mobile image capture devices may be particularly advantageous in situations such as recording the perspective of a law enforcement officer when interacting with a member of the public.
- a primary challenge faced by the design and use of mobile image capture devices is the resource-limited environment in which they operate.
- the design and use of mobile image capture devices is typically subject to the following constraints: a limited amount of memory to be used for image storage over a significant period of time; a limited amount of processing power or capability to continuously process imagery; a limited amount of energy available to operate over an extended period of time; and/or a limited amount of thermal power that can be dissipated (i.e., a device temperature that should not be exceeded so as to prevent overheating of the device or discomfort for the user, who may in some instances wear the mobile image capture device).
- mobile image capture devices typically store captured imagery at a local memory for at least an initial period of time until such imagery can be transferred or transmitted to another device.
- the mobile image capture device typically will have only limited memory resources to dedicate toward storage of captured imagery.
- the limited memory resources results in the device being unable to simply store a continuous stream of hours' worth of high resolution images.
- the mobile image capture device had sufficient memory resources to store such continuous stream of hours' worth of images, this would present an additional problem of requiring the user to cull a massive amount of images to try and pick the best or most desirable ones.
- mobile image capture devices are typically powered by a battery.
- the limited power budget provided by a battery must be spread across hours of device operation, if not longer. Therefore, operations performed by the mobile image capture device which require or otherwise draw significant amounts of power must be limited or otherwise not continuously or commonly performed.
- the compression, storage, and transmission of images are the portions of a typical image processing cycle which consume the most significant amounts of power.
- the compression and storage of massive amounts of imagery is an infeasible device design for the typical power budget provided by an on-board battery.
- the memory, processing, power, and thermal constraints associated with a mobile image capture device collectively represent one of the most challenging limitations to the design and operation of a mobile image capture device.
- resource-efficient mobile image capture devices are desirable.
- mobile image capture devices that continuously capture imagery while providing additional advanced features in a resource-efficient manner are needed.
- the image capture device includes an image sensor that provides raw image data.
- the image sensor is operable to receive an image sensor control signal and to adjust, based at least in part on the image sensor control signal, at least one of a frame rate and a resolution of the image sensor.
- the image capture device includes an imaging pipeline that streams the raw image data and processes the raw image data to generate one or more first images.
- the image capture device includes a temporary image buffer that temporarily stores the one or more first images.
- the image capture device includes a scene analyzer that analyzes a scene depicted by at least one of the one or more first images and, based at least in part on such analysis, causes the image sensor control signal to be provided to the image sensor to adjust at least one of the frame rate and the resolution of the image sensor.
- the method includes outputting, by an image sensor of the image capture device, raw image data.
- the image sensor is capable of adjusting at least one of a frame rate and a resolution in response to an image sensor control signal.
- the method includes streaming, by an imaging pipeline of the image capture device, the raw image data from the image sensor.
- the method includes processing, by the imaging pipeline, the raw image data to generate a first image.
- the method includes analyzing, by the image capture device, a scene depicted by the first image.
- the method includes providing, by the image capture device based at least in part on the analysis of the scene depicted by the first image, the image sensor control signal to cause the image sensor to adjust at least one of the frame rate and the resolution.
- the image capture device includes an image sensor that provides raw image data.
- the image capture device includes an imaging pipeline that streams the raw image data from the image sensor and processes the raw image data to generate a plurality of images.
- the image capture device includes a scene analyzer. When the image capture device is operative in the regular capture mode, the scene analyzer analyzes a scene depicted by each of the images. When the scene analyzer determines that the scene depicted by one of the images is desirable, the scene analyzer transitions the image capture device into the burst capture mode.
- FIG. 1 depicts an example image capture, curation, and editing system according to an example embodiment of the present disclosure
- FIG. 2 depicts a schematic of an example image processing framework according to an example embodiment of the present disclosure
- FIG. 3 depicts a visual representation of example capture modes of an example mobile image capture device according to an example embodiment of the present disclosure
- FIG. 4 depicts a visual representation of example relationships between capture modes of an example mobile image capture device according to an example embodiment of the present disclosure
- FIG. 5 depicts an example image processing framework according to an example embodiment of the present disclosure
- FIG. 6 depicts an example image processing framework according to an example embodiment of the present disclosure
- FIG. 7 depicts a visual representation of data flow versus time in an example image processing framework according to an example embodiment of the present disclosure
- FIG. 8 depicts an example image processing framework according to an example embodiment of the present disclosure
- FIGS. 9 and 10 depict an example imaging pipeline according to an example embodiment of the present disclosure
- FIG. 11 depicts an example scene analyzer according to an example embodiment of the present disclosure
- FIG. 12 depicts an example configuration of models in a scene analyzer according to an example embodiment of the present disclosure
- FIG. 13 depicts a flow chart of an example method to curate images captured at a mobile image capture device according to an example embodiment of the present disclosure
- FIG. 14 depicts an example user interface to enable selection of a reflection for editing according to an example embodiment of the present disclosure
- FIG. 15 depicts an example user interface to enable selection of entities that have a heightened importance according to an example embodiment of the present disclosure
- FIG. 16 depicts an example user interface to enable selection of entities that have a heightened importance according to an example embodiment of the present disclosure
- FIG. 17 depicts an example user interface to enable selection of entities that have a heightened importance according to an example embodiment of the present disclosure
- FIG. 18 depicts an example user interface to display settings information according to an example embodiment of the present disclosure
- FIG. 19 depicts an example user interface to display operational data for mobile image capture devices according to an example embodiment of the present disclosure
- FIG. 20 depicts an example display screen used in a visual pairing procedure according to an example embodiment of the present disclosure
- FIG. 21 depicts an example user interface to display control options for a mobile image capture device according to an example embodiment of the present disclosure
- FIG. 22 depicts an example user interface to enable editing of captured imagery according to an example embodiment of the present disclosure
- FIG. 23 depicts an example user interface to enable editing of captured imagery according to an example embodiment of the present disclosure
- FIG. 24 depicts a flow chart of an example method to visually scroll images according to an example embodiment of the present disclosure
- FIG. 25 depicts a flow chart of an example method to enable navigation in an image editing application according to an example embodiment of the present disclosure
- FIG. 26 depicts a flow chart of an example method to enable editing of captured imagery according to an example embodiment of the present disclosure
- FIG. 27 depicts an example user interface to display captured images according to an example embodiment of the present disclosure
- FIG. 28 depicts an example user interface to enable selection of features within an image editing application according to an example embodiment of the present disclosure
- FIG. 29 depicts an example user interface to edit a reflection at the moment-level according to an example embodiment of the present disclosure
- FIG. 30 depicts an example user interface to enable sharing of images according to an example embodiment of the present disclosure.
- FIG. 31 depicts an example user interface to display an album of images according to an example embodiment of the present disclosure.
- an example system of the present disclosure includes a resource-efficient mobile image capture device that is selectively communicatively coupleable with a user computing device such as a smartphone, laptop, or tablet.
- a user computing device such as a smartphone, laptop, or tablet.
- the mobile image capture device can continuously capture frames of imagery and can selectively retain certain of such frames of imagery.
- the user computing device can perform image curation, editing, storage, sharing, and other tasks.
- the system can be used for life logging or other immersive image capture experiences or objectives.
- the mobile image capture device includes on-device intelligence that assists in selecting only certain of the captured images for compression and storage.
- the mobile image capture device can include a scene analyzer that analyzes a scene depicted by an image to assess a desirability of such scene and, based at least in part on such desirability, determines whether to store such image and/or one or more other contemporaneous images or to discard such image and/or other images without further storage.
- the scene analyzer includes one or more neural networks, such as deep neural networks or other multi-layer non-linear models which output descriptors of the desirability of the scene of an input image.
- the selective retention of imagery as guided by the on-device intelligence drastically reduces the power consumption of the mobile image capture device and enables superior performance given limited energy resources (e.g., a battery) and device temperature constraints.
- the selective retention of imagery as guided by the on-device intelligence also drastically reduces the memory consumption of the mobile image capture device over time.
- the mobile image capture device can operate according to a number of different capture modes.
- the different capture modes can correspond to various combinations of different image resolutions and frame rates.
- the different capture modes may have different energy consumption characteristics or profiles. For example, a capture mode with a larger image resolution and/or frame rate will typically require larger energy expenditure by the device.
- the on-device intelligence of the mobile image capture device can also make control decisions regarding the capture mode of the image capture device. For example, if the scene analyzer determines that a recently captured image depicts a scene that is highly desirable, the scene analyzer can transition the image capture device into a capture mode that has a larger image resolution and/or frame rate, thereby capturing more high resolution images of the desirable scene.
- the mobile image capture device can reserve operation in capture modes that consume relatively larger amounts of energy for periods of time in which relatively more interesting or desirable scenes are available for image capture, while operating in energy-conserving capture modes during periods of time in which the scenery available for capture is relatively less interesting or desirable.
- the on-device intelligence (e.g., the scene analyzer) of the mobile image capture device can adjust one or more of exposure time, gain, region of interest or crop, binning mode, or other parameters of the image capture device based on an analysis of captured imagery.
- control signals can be provided to an image sensor of the mobile image capture device to control the above described parameters.
- the above noted parameters can be adjusted without changing between capture modes of the image capture device. However, different capture modes of the image capture device may respectively correspond to different settings for the above noted parameters.
- the mobile image capture device can have a low power framework that has different configurations and/or workflows respectively for the number of different capture modes.
- the advanced scene analysis and control features of the mobile image device enable operation of the mobile image capture device for significant periods of time despite having power source, memory availability, computational power, and device temperature constraints.
- the user computing device can perform image curation and enable user editing of the images.
- the user computing device when connected to the mobile image capture device (e.g., after a capture session has been completed), the user computing device can select a certain set of the images stored at the image capture device for transfer to the user computing device. For example, such selection can be guided by various image attributes as reflected in various metadata annotations provided by the mobile image capture device respectively for the stored images during the real-time operation. Generally, the most desirable images will be selected for transfer, while maintaining a diversity of imagery.
- the user computing device can also provide a user interface that enables the user to selectively edit the transferred images.
- the user interface can enable various advanced image editing techniques such as computational photography, camera repositioning, etc.
- the user interface and associated editing tools empower the user to compose the photograph the user would have taken, had she been able to freeze time, explore the nuances of a moment, take out her camera or phone without forcing persons around her to alter their behavior, open a camera application, figure out the best way to hold the camera, and then capture the image.
- the systems and methods of the present disclosure provide superior results while saving time, effort, and management anxiety.
- the mobile image capture device has a low power framework that leverages one or more machine learned models to control image storage and capture mode based on image desirability, thereby eliminating the energy consumption associated with storage and capture of less desirable images.
- the mobile image capture device includes a lens cover; one or more lenses (e.g., a wide angle lens); an image sensor; an imaging pipeline that contains one or more image processing components; the scene analyzer; one or more inertial motion units (IMUs); a network interface; and a power source such as a battery.
- the mobile image capture device can also include one or more processors and one or more memory units, including, for example, volatile memory (e.g., DRAM) and non-volatile memory (e.g., flash memory).
- the mobile image capture device continuously captures the plurality of images (e.g., continuously captures images at a frame rate of at least one frame per second).
- the mobile image capture device may ultimately store only certain selected ones of the continuously captured images.
- the lens cover of the mobile image capture device can be manually adjustable between a position that optically blocks the lens and image sensor and a position that does not optically block the lens and image sensor.
- the mobile image capture device responds by operating in an ultra-low power mode in which images are not actively captured.
- the mobile image capture device can operate to continuously capture and process the plurality of images, as described above.
- the mobile image capture device can be operable to capture a plurality of images that respectively depict a plurality of scenes; maintain a first copy of each of the plurality of images in a temporary image buffer; determine at least one descriptor of the desirability of the scene depicted by at least one of the images; and determine, based at least in part on the at least one descriptor of the desirability of the scene of the at least one image, whether to store a second copy of such image and/or one or more of the other images in a non-volatile memory of the mobile image capture device or to discard the first copy of such image(s) from the temporary image buffer without storing a second copy of such image(s) in the non-volatile memory.
- imagery can be stored in the non-volatile memory without scene analysis.
- the mobile image capture device can include a scene analyzer which, at least in some modes of operation, is implemented to analyze a desirability of the scene of an image to determine whether to store such image and/or one or more other contemporaneous images.
- the mobile image capture device captures (and buffers) a sequence of frames close to each other in time (e.g. a three second “video” at fifteen frames per second).
- the scene analyzer can analyze only a subset of the frames (e.g. three of the forty-five frames included in the “video”) to determine the desirability of the scene depicted by the frames. Based on such analysis, the scene analyzer can determine whether to save all or part of the sequence of frames.
- the scene analyzer may also adjust the capture mode of the camera or other capture parameters such as frame rate, resolution, exposure, gain, region of interest, crop, and binning mode based on the analysis of the captured image(s).
- the scene analyzer can analyze raw, unprocessed imagery and make or assist in making decisions about processing the imagery with an imaging pipeline.
- the scene analyzer of the mobile image capture device includes at least one neural network and uses such neural network to obtain the at least one descriptor of the desirability of the scene of each analyzed image, as described above.
- the scene analyzer can input the image to the at least one neural network and receive the at least one descriptor as an output from that at least one neural network.
- the at least one neural network of the scene analyzer includes at least one convolutional neural network.
- the scene analyzer includes a plurality of deep neural networks or other multi-layer non-linear models that respectively analyze a plurality of different characteristics of each input image.
- Each of the deep neural networks can output at least one descriptor for each image that is input into such deep neural network.
- each neural network can provide as output an annotation that describes a characteristic of the scene of an input image. The image can be annotated with the annotation(s).
- the deep neural networks can include one or more of the following: a face detection deep neural network that detects a presence and/or location of one or more faces in the scene of each input image; a face recognition deep neural network that matches one or more faces in the scene of each input image to one or more other faces; a face attributes deep neural network that detects various facial characteristics of one or more faces in the scene of each input image; a face photogenic model that outputs a score which represents a level of photogenicness of a face pose and expression; a facial landmark detection deep neural network that detects one or more facial landmarks such as a position of eyes, a position of nose, or other facial landmarks; an image content deep neural network that outputs one or more semantic labels that describe the scene of each input image; and a photo quality deep neural network that outputs a photo score that describes various photographic quality characteristics of each input image.
- neural networks which analyze various other characteristics of the input image can be implemented or employed as well.
- the neural networks can be non-recurrent, recurrent, or a combination thereof.
- certain neural networks described above e.g., the face detection neural network
- the scene analyzer includes at least one multi-headed deep neural network that receives a single set of inputs and provides a plurality of outputs.
- the plurality of outputs can respectively include a plurality of descriptors of the desirability of the scene of each input image.
- two or more of the above described neural networks can be combined to form a multi-headed deep neural network.
- the face recognition deep neural network can be combined with the face attributes deep neural network to form a multi-headed neural network.
- image portions selected based on the outputs from the face detection deep neural network can serve as inputs to a multi-headed neural network which represents a combination of the face recognition deep neural network and the face attributes deep neural network.
- the multi-headed combination of the face recognition deep neural network and the face attributes deep neural network can output both face recognition output (e.g., a face embedding) and face attribute information rather than having two separate networks for the two purposes.
- the output from various portions of the scene analyzer can be used to make better decisions inside an imaging pipeline that processes the images.
- the output of the face detection deep neural network can be used to set or adjust the exposure in the imaging pipeline in such a way that faces are well-exposed.
- the scene analyzer can also include a model selector that controls which models (if any) an image is input for scene analysis.
- the model selector can select which models to employ depending on a number of criteria including computational consumption considerations, energy consumption considerations, and/or the results of an initial analysis of the scene of the image.
- the model selector can simply implement a predefined schedule or can implement some defined logic regarding an ordering or configuration of models to employ.
- the model selector may itself be a model (e.g., neural network), such as a multi-layer non-linear model (e.g., deep neural network).
- the model selector includes an attention model that analyzes only a portion of an input image.
- the attention model can output an indication of whether each input image should be input into at least one of the downstream models for further scene analysis.
- the attention model can operate as a prefilter to the other deep neural networks included in the scene analyzer.
- the attention model can be a recurrent deep neural network that tracks a face through a succession of images and outputs a probability that each analyzed image depicts the face experiencing joy.
- the attention model can also output a description of which portion of the next input image the attention model should analyze.
- the attention model can also output how much time should pass before capturing and analyzing a second image.
- an attention model in this fashion can greatly reduce the energy consumption of the mobile image capture device since the attention model, which limits its capture and/or analysis to only a portion of the images, guards certain downstream models which may analyze the image in its entirety and/or require larger computational expenditure. Further, delaying the period of time recommended by the attention model before again capturing and analyzing imagery can result in power savings.
- the attention model can be used in place of the other models to guide image storage and/or capture mode decisions.
- one or more of the various deep neural networks discussed above can be replaced with an attention model version of such network.
- the scene analyzer can include a number of models which analyze the scene depicted by an input image and output various descriptors (e.g., annotations) that describe a desirability of the scene of the input image (e.g., describe various image characteristics which impact the desirability of the scene).
- the scene analyzer can make intelligent decisions regarding image storage and/or capture mode on the basis of such descriptors.
- the scene analyzer can include a save controller, a transfer controller, and/or a mode controller.
- the save controller can take as input all of the annotations from the models and use such annotations to decide whether or not to process, compress, and/or store the image.
- the transfer controller can take as input all of the annotations from the models and use such annotations to decide whether or not to send the image.
- the transfer controller is included in a user computing device rather than the image capture device.
- the mode controller can determine whether to change the capture mode of the mobile image capture device on the basis of such annotations.
- the save controller, the transfer controller, and the mode controller can be separate components or can be combined into a single component.
- the mobile image capture device is further operable to receive data that describes a set of entities having an elevated importance to a user of the mobile image capture device.
- the set of entities may include one or more faces or semantic entities (e.g., “mountains,” “playground,” or “Eiffel tower”).
- the mobile image capture device is operable to perform face recognition with respect to one or more of the captured images to recognize one or more faces depicted in the plurality of images. Thereafter, the user computing device can enable the user to select one or more of the recognized faces as having a heightened importance to the user.
- Such set of entities having an elevated importance to the user of the mobile image capture device can be communicated back and forth between the user computing device and the mobile image capture device and can impact both capture and editing decisions.
- the mobile image capture device can increase a probability of storing captured images which depict the one or more selected faces.
- the scene analyzer can include a face recognition model which compares embeddings of the set of selected faces to embeddings of faces detected within captured images and outputs a probability of match, where images that include matches are more likely to be selected for compression and storage.
- faces that do not correspond to faces included in the set of faces having heightened importance can be automatically blurred or otherwise defocused.
- each mobile image capture device may be operable to communicate with other mobile image capture devices that are located within the same general area.
- the mobile image capture device may be operable to transmit an excitement signal that is wirelessly receivable by one or more other mobile image capture devices that are located proximate to the mobile image capture device.
- the excitement signal indicates that the scene depicted by one of the plurality of images recently captured by the mobile image capture device has a relatively large desirability.
- the mobile image capture device may send wireless signals (e.g., Bluetooth Low Energy broadcasts) to alert nearby devices that an interesting scene is available for capture.
- the one or more other mobile image capture devices in response to receipt of the excitement signal, perform at least one of the following: increase a probability that the other mobile image capture device will store a non-temporary copy of a recently captured image; attempt to identify a match for one or more embeddings included in the excitement signal within the recently captured image; and adjust one or more of a frame rate, a gain, an exposure time, a region of interest, a crop, a binning mode, and a resolution of an image sensor of the other mobile image capture device.
- the mobile image capture device is operable to periodically provide a capture visualization to the user computing device for display by the user computing device.
- display of the capture visualization by the user computing device is indicative of present operation of the mobile image capture device.
- the capture visualization will be some representation of recently captured imagery (e.g., a histogram, icon, etc.) without being the captured imagery itself.
- the capture visualization may be based at least in part on one or more recently captured images of the plurality of images. Use of capture visualizations in such fashion enables the user to understand that the mobile image capture device is operating and capturing imagery, but prevents distracting the user from actually enjoying the captured moment by showing detailed imagery for review.
- the mobile image capture device can include a low power framework for processing imagery.
- One example low power framework of the present disclosure includes an image sensor that provides raw image data; an imaging pipeline that streams the raw image data from the image sensor and processes the raw image data to generate one or more first images; a temporary image buffer that temporarily stores the first image(s); and the scene analyzer, as described above.
- the low power framework can further include a compression component that compresses the first image(s) only when the scene analyzer analyzes at least one of the one or more first images and determines that the first image(s) should be non-temporarily stored.
- the low power framework can further include a non-volatile memory to which the first image(s) is/are written after compression.
- the mobile image capture device can be operable in a number of different image capture modes.
- the scene analyzer can control the capture mode of the mobile image capture device depending upon its analysis of the scenes of recently captured images. More particularly, in some implementations, the image sensor of the mobile image capture device is operable to receive an image sensor control signal and to adjust, based at least in part on the control signal, of a frame rate and/or a resolution at which the image sensor captures imagery. Thus, depending upon its analysis of the scenes of recently captured images, the scene analyzer can cause the image sensor control signal to be provided to the image sensor to adjust the frame rate and/or the resolution of the image sensor.
- the scene analyzer when the scene analyzer determines that the scene depicted by the first image is desirable, the scene analyzer increases at least one of a frame rate or a resolution at which the image sensor provides the raw image data. Likewise, when the scene analyzer determines that the scene depicted by the first image is not desirable, the scene analyzer decreases at least one of a frame rate or a resolution at which the image sensor provides the raw image data.
- the image capture device is operable in at least a low resolution capture mode, a high resolution capture mode, and a burst capture mode. During regular operation, the image capture device periodically transitions between the low resolution capture mode and the high resolution capture mode. When the scene analyzer determines that a particular scene depicted by a particular image is desirable, the scene analyzer causes the image capture device to transition to the burst capture mode or otherwise increase the frame rate and/or the resolution. In some implementations, the image capture device may be further operable in a hyper-lapse capture mode.
- the low power framework may have varying workflows or configurations depending upon the capture mode of mobile image capture device.
- the scene analyzer of the image capture device can perform different roles of varying importance depending upon the current capture mode of the image capture device.
- control of image capture mode based on scene analysis can have energy consumption benefits, as tasks which require larger energy expenditure (e.g., processing, compression, and storage of high resolution imagery) can be limited to situations in which the scene analyzer has determined that a desirable scene is currently available for image capture.
- the image sensor performs binning to provide low resolution raw image data; the imaging pipeline streams the low resolution raw image data from the image sensor and processes the low resolution raw image data to generate a low resolution version of each of the one or more first images; the temporary image buffer temporarily stores the low resolution version(s) of the first image(s); and the scene analyzer analyzes the low resolution version of at least one of the first image(s) to determine whether to non-temporarily store the low resolution version(s) of the first image(s) (e.g., in a non-volatile memory) or to discard the low resolution version(s) of the first image(s) (e.g., without storing it in the non-volatile memory).
- the image sensor provides high resolution raw image data (e.g., does not perform binning at the sensor); the image capture device further comprises a temporary raw data buffer that temporarily stores the high resolution raw image data; the image capture device further comprises a down sampler that streams the high resolution raw image data from the image sensor and down samples the high resolution raw image data to output low resolution raw image data; the imaging pipeline streams the low resolution raw image data from the down sampler and processes the low resolution raw image data to generate a low resolution version of each of the one or more first images; the temporary image buffer temporarily stores the low resolution version(s) of the first image(s); and the scene analyzer analyzes the low resolution version of at least one of the first image(s) to determine whether to non-temporarily store the first image(s) or to discard the first image(s).
- the down sampler can be positioned at the beginning of the imaging pipeline or positioned at the end of the imaging pipeline. Placing the down sampler at the beginning of the imaging pipeline provides increased power/energy
- the imaging pipeline receives the high resolution raw image data from the temporary raw data buffer and processes the high resolution raw image data to generate high resolution version(s) of the first image(s).
- the compression component compresses the high resolution version(s) of the first image(s) for storage at the non-volatile memory.
- the mobile image capture device in the high resolution capture mode, is operable to: maintain data sufficient to generate a high resolution temporary copy of each of the plurality of images; input a low resolution copy of at least one of the plurality of images into the at least one neural network; and determine, based at least in part on the at least one descriptor of the desirability of the scene of the at least one image, whether to store a high resolution non-temporary copy of such image and/or one or more contemporaneous images in the memory of the mobile image capture device or to discard the high resolution temporary copy of such image and/or one or more other images without storing a non-temporary copy of such images.
- the image capture device captures high resolution images at a high frame rate and performs imaging pipeline operations, compression, and storage at the non-volatile memory for all of the captured high resolution images, with little to no scene analysis.
- the imaging pipeline can stream the raw image data from the image sensor and process the raw image data to generate a second image.
- the second image can bypass the scene analyzer and be provided to the compression component for compression and then storage at the non-volatile memory.
- the image capture device can dedicate its limited resources to compression and storage of high resolution imagery, rather than scene analysis (or at least the most resource consuming portions thereof).
- the image capture device can perform scene analysis on images without processing or prior to processing the image using the imaging pipeline.
- the scene analysis models can be trained to operate on raw images rather than processed images which have passed through the imaging pipeline.
- raw images can be used as training examples for the models.
- the “full” imaging pipeline can be dependent on a scene analysis result. In such configuration, resources can be saved by not running the imaging pipeline on images which are not desirable.
- the systems of the present disclosure include a user computing device that is communicatively connectable to the mobile image capture device.
- the user computing device can perform image curation and enable user editing of the images.
- the user computing device can also enable storage, sharing, and other image management features.
- the user computing device and the mobile image capture device are operable to perform visual pairing.
- the user computing device is operable to visually display a pattern.
- the mobile image capture device is operable to capture imagery of the pattern and, in response to capturing the imagery of the pattern, communicatively connect to the user computing device.
- the pattern can be a visual encoding of a key or other information sufficient to enable communicative connection.
- the user computing device and the mobile image capture device may have other pairing techniques.
- the user computing device when connected to the mobile image capture device (e.g., after a capture session has been completed), can select certain of the stored images for transfer to the user computing device. For example, such selection can be guided by various image attributes as reflected in various metadata annotations provided by the mobile image capture device respectively for the stored images.
- the user computing device can include a transfer controller that determines, based at least in part on at least one descriptor of the desirability of the scene depicted by each image stored in the memory of the mobile image capture device, whether to request transfer of such image and/or one or more other contemporaneously captured images from the mobile image capture device to the user computing device.
- the transfer controller can perform an optimization algorithm to select which of the images stored in the memory of the mobile image capture device to request for transfer.
- the optimization algorithm can have a plurality of associated objectives which include, for example, at least a diversity of settings and a diversity of depicted persons, while still requesting transfer of the most desirable images.
- the transfer controller can implement a submodular function to select which images to request for transfer.
- a reflection can generally include all images captured during a particular session of usage of the mobile image capture device. For example, images captured during a day hike may be grouped within a single reflection.
- a reflection can include one or more moments.
- a moment includes a series of images that are temporally proximate to each other. For example, a moment can include a series of images that were captured over a two to five second time span.
- the user computing device can select one or more highlight images for each moment included in a reflection. For example, selection of highlight images may be performed based on the annotations or other metadata included for each of the images. In some implementations, each image in a moment is normalized relative to its peer images within such moment prior to performing highlight selection. Thus, selection of a highlight image for each moment can be based at least in part on a comparison of the annotations of each image included in such moment relative to the annotations of at least one other image included in such moment.
- the user computing device can also provide a user interface that enables the user to selectively edit the transferred images.
- the user interface can enable two modalities of gesture control in service of photographic “re-composition”: temporal and spatial. More particularly, as will be discussed further below, the user can navigate through a sequence of images using a first gesture or set of gestures. The user can also select and then spatially explore a particular image using a second gesture or set of gestures.
- the user interface can enable the user to control a virtual camera to photograph a scene after-the-fact, with access to controls for ISO, depth of field, stabilization, camera orientation, camera movement, camera orbit, and other parameters.
- the user interface can also enable various advanced image editing and exploration techniques by leveraging computational photography, camera repositioning via view synthesis, and other advanced image editing techniques.
- a user can select a particular reflection for review.
- the reflection may contain multiple moments, which each consist of a series of images.
- the user computing device can provide a user interface which allows the user to navigate between the moments included in the reflection or to scroll between images contained within a particular moment. For example, a user can navigate between moments by quickly dragging (e.g., swiping) left or right on a touch interface, while the user can scroll between images contained in the particular moment by slowing dragging left or right on the touch interface.
- Such functionality may be viewed as a shuttle or scrub control.
- the user computing device can either navigate between moments or images within a moment depending on a speed of a drag gesture performed by the user.
- the user computing device can receive data that describes a drag gesture performed by a user and determine whether a speed of the drag exceeds a threshold value. When it is determined that the speed of the drag exceeds the threshold value, the user computing device can transition from a presently displayed moment to another moment included in the reflection. However, when it is determined that the speed of the drag does not exceed the threshold value, the user computing device can visually scroll through the plurality of images included in the presently displayed moment.
- visual scrolling of images included in a moment can be triggered by a tap gesture from the user in addition or alternatively to a drag gesture.
- visually scrolling through the plurality of images included in a moment can include cinematically scrolling, by the user computing device, the plurality of images included in the presently displayed moment by sequentially displaying the plurality of images included in the presently displayed moment without translating the plurality of images included in the presently displayed moment relative to the display.
- the series of images included in a moment can be displayed in the style of a “flip book” such that at least a portion of the moment is presented cinematically.
- the user computing device can translate one of the images included in the presently displayed moment off of the display while translating one of the images included in the other moment onto the display. This has the effect of visually announcing the transition between moments, similar to the frame by frame presentation of a comic book.
- the user computing device can visually scroll a series of images contained in a moment in a fashion which provides enhanced presentation of the at least one highlight image selected for such moment.
- the user computing device can reduce a velocity at which the plurality of images are visually scrolled when the at least one highlight image is provided on the display.
- the visual scrolling can pause on the at least one highlight image or the at least one highlight image can have a display duration that is greater than its peer images.
- the user computing device can incrementally reduce the velocity at which the plurality of images are visually scrolled as the at least one highlight image is approaching display. For example, the visual scrolling can slow and then stop upon the highlight image.
- the user computing device can determine a plurality of tension values respectively for the plurality of images based at least in part on the plurality of annotations respectively associated with the plurality of images. Thereafter, the user computing device can visually scroll the plurality of images at the velocity which is non-constant and which is inversely proportional to the tension value of a currently displayed image.
- images with relatively larger tension values will be displayed for a greater duration than images with relatively smaller tension values, where the magnitude of an image's tension value is indicative of the desirability of the scene depicted by such image.
- the user computing device is further operable to determine a recommended composition for each of the plurality of images included in a reflection.
- the recommended composition for each image can be based at least in part on the at least one annotation associated with such image.
- the recommended composition for each image can include a recommended portion of such image.
- visually scrolling the plurality of images on the display can include visually scrolling only the respective recommended portions of the images on the display.
- the plurality of images transferred from the mobile image capture device are wide angle images.
- the recommended composition for each image can include an unwarped portion of such image.
- the user computing device can enable the user to perform a number of advanced editing features on the transferred images.
- the mobile image capture device can include a wide angle lens, which can result in capture and storage of wide angle images by the mobile image capture device.
- the user computing device can dewarp the wide angle images and output a selected dewarped portion as a narrow angle image.
- the user computing device can enable a user to re-position the camera and/or non-destructively crop a certain portion of an image.
- the user computing device is operable to: receive at least a first wide angle image captured by the mobile image capture device; project the first wide angle image onto a curved surface; provide a user interface that enables a user to manipulate a perspective of a virtual camera to view different portions of the first wide angle image as projected onto the curved surface; receive a user input selecting a current perspective of the virtual camera; and in response to the user input, output a first narrow angle image that corresponds to the current perspective of the virtual camera when the user input was received.
- the curved surface onto which the wide angle image is projected is a hemisphere.
- the virtual camera can be positionable to view different portions of the concave surface of the hemisphere.
- the user computing device can provide an interactive tool that permits a user to reposition and/or reorient a virtual camera to gain a different perspective of a wide angle image projected onto a curved surface.
- controls can be provided for camera orientation, camera position (and movement thereof); and camera orbit.
- the virtual camera can be controlled according to any suitable control scheme, including, for example, according to various multi-touch gestures.
- a new image that corresponds to the selected perspective can be output by recalculating one or more camera parameters (e.g., focus, lens distortions, lighting, etc.) that would result from the new perspective.
- camera parameters e.g., focus, lens distortions, lighting, etc.
- advanced image processing techniques such as superresolution, hyper-lapse, texture mapping, depth mapping, view synthesis, etc. can also be applied to output synthetic or computed images that are generated from a combination of the transferred images.
- controls may be provided for ISO, depth of field, stabilization, and other image parameters or characteristics.
- the user computing device can receive user input that selects the current perspective of the virtual camera.
- the user input can be a press and release (i.e., tap) of a record button included in the user interface or a press and hold of a record button included in the user interface.
- the user computing device can output a still image that corresponds to the current perspective of the virtual camera, as described above.
- the user computing device can output a video that includes a series of images from the moment, as viewed from the current perspective of the virtual camera. Each image in the video can have edited or otherwise adjusted camera parameters (e.g., focus, lens distortions, lighting, etc.) that would result from the current perspective of the virtual camera, as described above.
- the user computing device is further operable to determine a recommended composition for one or more (e.g., all) of the transferred images.
- the recommended composition includes only a portion of a wide angle image (e.g., a dewarped portion).
- the user computing device can determine the recommended composition based at least in part on the annotations or other metadata associated with the image.
- the recommended composition may correspond to a portion of the wide angle image that includes only faces that correspond to entities included in the set of entities that have elevated importance to the user.
- the user computing device can initialize the virtual camera within the editing user interface such that an initial perspective of the virtual camera corresponds to the recommended composition.
- the initial presentation of the image within the user interface can display only the portion that corresponds to the recommended composition.
- the user is able to reposition and/or reorient the virtual camera away from the recommended composition.
- the user interface can enable the user to “re-take” one or more photographs and/or videos from the images included in a moment.
- the user computing device can store the one or more photographs and/or videos at various locations.
- the user can elect to have photographs and/or videos created via the editing interface stored directly to the camera roll of the user computing device.
- the camera roll can also include photographs captured by a camera of the user computing device.
- the generated images can be treated as if they were captured by the user computing device. Further, the user is given the sensation that they have “captured” new images through the editing process.
- the user computing device can automatically generate an album for a reflection without requiring user-guided editing.
- the automatically generated album can include at least one highlight image selected from each moment of the reflection, for example, according to the technique discussed above.
- the highlight images can also be non-destructively cropped according to the recommended compositions determined for such images.
- the user computing device can also enable sharing and/or storage of images. Such may be accomplished, in some instances, through communication with a server computing device.
- the server computing device can retain a data store of captured images and can facilitate sharing with other persons and/or devices.
- sharing of data can include sharing the raw images that form a reflection, so that additional users can optionally “re-take” “new” images for themselves from the same data, according to the editing interface discussed above.
- the user computing device uploads to the server computing device only images that are requested for upload to the server computing device during or as a result of a user-controlled editing session. Thus, no images are uploaded to the server computing device absent uploading instructions from the user. Therefore, all personal data is maintained under control of the user at his or her personal device.
- the user computing device can infer person-based sharing intents from recognition within a reflection.
- the mobile image capture device is operable to perform face recognition with respect to each of a plurality of images included in a reflection to recognize one or more faces depicted in the plurality of images.
- the user computing device can be operable to: enable the user to share the one or more images received from the mobile image capture device with one or more contacts; determine one or more relationships between the one or more contacts with whom the one or more images are shared and the one or more faces depicted in the shared images; and suggest, with respect to subsequent images received from the mobile image capture device in which the one or more faces are recognized, that the user share such subsequent images with particular ones of the one or more contacts based at least in part on the one or more relationships.
- the mobile image capture device may periodically receive one or more updated versions of one or more models included in its scene analyzer from the user computing device and/or the server computing device.
- the one or more updated versions of the one or more models may have been trained (e.g., by a model trainer at the server computing device) on additional data.
- the additional data can be images that the user created through the editing interface.
- the models of the image capture device can be trained on personalized data sets to better infer, capture, and store images which satisfy the particular visual tastes of the user and then can be updated on the image capture device itself.
- the user in order to obtain the benefits of the techniques described herein, the user may be required to allow the collection and analysis of images, location information, a set of entities that have elevated importance to the user, and/or other data associated with the user or the user's mobile computing device(s). Therefore, in some implementations, users may be provided with an opportunity to adjust settings that control whether and how much the systems of the present disclosure collect and/or analyze such information. However, if the user does not allow collection and use of such information, then the user may not receive the benefits of the techniques described herein.
- certain information or data can be treated in one or more ways before or after it is used, so that personally identifiable information is removed or not stored permanently.
- FIG. 1 depicts an example image capture, curation, and editing system 100 according to an example embodiment of the present disclosure.
- the system 100 includes at least one mobile image capture device 102 and a user computing device 130 .
- the system 100 may also include one or more additional mobile image capture devices 104 and 106 and/or a server computing device 150 .
- the mobile image capture device includes one or more processors 112 and a memory 114 .
- the one or more processors 112 can be any suitable processing device and can be one processor or a plurality of processors that are operatively connected.
- the processor 112 includes a dedicated vision processing platform that delivers high-performance machine vision and visual awareness in a power-constrained environment.
- the processor 112 can be a system-on-a-chip (SoC) designed for high-performance, low-power computational imaging.
- SoC system-on-a-chip
- the processor 112 includes hardware, software, and/or firmware that is selectively usable to perform a complete image processing pipeline on-chip.
- the processor 112 includes multiple vector processors optimized for vision processing workloads.
- the memory 114 can include one or more non-transitory computer-readable mediums, such as RAM, ROM, EEPROM, EPROM, flash memory devices, magnetic disks, etc., and combinations thereof.
- the memory 114 includes at least a first DRAM memory and a second non-volatile memory.
- the first DRAM memory can be used for temporary storage of various types of image data
- the second non-volatile memory can be used for non-temporary storage of various types of image data.
- the non-volatile memory includes a flash memory card.
- the flash memory card is a Secure Digital (SD) card.
- the mobile image capture device 102 also includes a lens cover 116 , one or more lenses 118 , and an image sensor 120 .
- the image sensor 120 can be a sensor that detects incoming light or other electromagnetic radiation and outputs data sufficient to generate an image of a scene.
- the image sensor 120 can be a CMOS sensor or a CCD sensor.
- the one or more lenses 118 can include a wide angle lens such that images resulting from data output by the image sensor 120 are wide angle images.
- the lens cover 116 of the mobile image capture device 102 can be manually adjustable between a position that optically blocks the lens 118 and image sensor 120 and a position that does not optically block the lens 118 and image sensor 120 .
- the mobile image capture 102 device responds by operating in an ultra-low power mode in which images are not actively captured.
- the mobile image capture device can operate to continuously capture and process the plurality of images.
- the lens cover 116 can have a visually distinctive exterior-facing surface. In such fashion, when the lens cover 116 is covering the lens 118 it is readily apparent to persons within the visible range of the image capture device 102 that the mobile image capture device 102 is not actively capturing imagery.
- the lens cover 116 can have a brightly colored and/or patterned design which provides a glanceable indication regarding the current capture status of the mobile image capture device 102 .
- the user can adjust the lens cover 116 to provide input control signals for the mobile image capture device 102 .
- the mobile image capture device 102 can respond by deleting a certain period of recently captured imagery (e.g., the last five minutes). Such may enable a quick and easy control input for the user to cause deletion of imagery that depicts undesired scenery.
- Other operations can be performed according to certain other patterns of lens cover manipulation as well.
- the user can also provide control signals for the mobile image capture device 102 by making certain recognizable gestures (e.g., hand gestures) within a field of view of the mobile image capture device 102 .
- gestures e.g., hand gestures
- the user can use one or both hands (e.g., index finger and thumb) to form one or two corners of a “frame” for a particular scene.
- the mobile image capture device 102 can recognize such gesture and capture imagery that includes the “framed” scene.
- Various other gestures can be used as control inputs, as well, including, for example, a gesture to delete recently captured imagery, as described above.
- the image sensor 120 can output data sufficient to generate images of a scene viewed by the image sensor 120 .
- the mobile image capture device 102 can include various additional components for processing such data from the image sensor 120 to generate such images.
- the mobile image capture device can include an imaging pipeline 122 .
- the imaging pipeline 122 can include one or more image processing components that are operable to process the raw data from the image sensor 122 generate images. Example imaging pipelines 122 according to the present disclosure will be discussed below with further reference to FIGS. 9 and 10 .
- the mobile image capture device 102 further includes a scene analyzer 124 .
- the scene analyzer 124 is operable to analyze a scene depicted by an image captured by the mobile image capture device 102 to assess a desirability of such scene and, based at least in part on such desirability, determine whether to store such image and/or one or more other contemporaneously captured images or to discard such image and/or one or more other images without further storage.
- the scene analyzer 124 includes one or more neural networks, such as deep neural networks or other multi-layer non-linear models which output descriptors of the desirability of the scene of an input image.
- the scene analyzer 124 can also make control decisions regarding the capture mode of the mobile image capture device 102 (e.g., based on the desirability of a depicted scene).
- Example scene analyzers 124 according to the present disclosure will be discussed below with further reference to FIGS. 11 and 12 .
- the mobile image capture device 102 can further include one or more inertial measurement units (IMUs) 126 .
- the inertial measurement units 126 can be electronic devices that measure and report one or more of a velocity, and orientation, and gravitational forces applied to or otherwise associated with the mobile image capture device 102 .
- the inertial measurement units 126 can include one or more accelerometers, gyroscopes, and/or magnetometers.
- data from the one or more inertial measurement units 126 can be appended to an image captured around the time such data was generated by the inertial measurement units 126 .
- an image captured by the mobile image capture device 122 can have as associated metadata the information provided by the inertial measurement units 126 at the time of capture.
- image capture timing can be based on data from IMUs 126 .
- the mobile image capture device 102 can use the data output by the inertial measurement units 126 to determine if the current movement pattern would result in a desirable hyper-lapse capture. For example, inertial data that indicates a walking pattern can trigger the capture of a hyper-lapse. In some implementations, the mobile image capture device 102 can analyze the data from the inertial measurement units 126 to assist in decisions regarding selecting and/or retaining frames for composing the hyper-lapse. For example, frames which are well-aligned with each other can be selected for composing the hyper-lapse.
- the data output by the inertial measurement units 126 can be monitored to detect inertial measurement data indicative of a user tapping the mobile image capture device 102 . More particularly, in some implementations, if the mobile image capture device 102 detects that the user has tapped the mobile image capture device 102 (e.g., according to a certain pattern, such as, for example, three consecutive taps), then the mobile image capture device 102 can respond to such tapping by increasing a probability of image storage, performing image capture and storage without scene analysis for a brief period, transitioning the mobile image capture device 102 into a different capture mode (e.g., a burst capture mode), and/or deleting recently captured imagery.
- Various touch inputs can be mapped to various touch outputs.
- the mobile image capture device 102 can include other touch-sensitive components to detect the user tapping alternatively or in addition to monitoring the data output by the inertial measurement units 126 .
- the mobile image capture device 102 further includes a network interface 128 .
- the network interface 128 can include any number of components to provide networked communications (e.g., transceivers, antennas, controllers, cards, etc.).
- the mobile image capture device 102 includes a first network interface operable to communicate using a short-range wireless protocol, such as, for example, Bluetooth and/or Bluetooth Low Energy, and also a second network interface operable to communicate using other wireless network protocols, such as, for example, Wi-Fi.
- the mobile image capture devices 102 , 104 , and 106 are operable to communicate with each other using a short-range wireless protocol, such as Bluetooth Low Energy.
- the image capture device 102 can be operable to communicate with the user computing device 130 using either the short-range wireless protocol (e.g., to transmit capture visualizations) or Wi-Fi or other more robust networking protocols (e.g., for the transfer of captured images).
- the mobile image capture device 102 can further include a power source 129 .
- the power source 129 will be an on-board battery, such as an on-board lithium-ion battery.
- the mobile image capture device 102 can also be electrically connectable (e.g., via a micro USB port or other electrical and/or data connection port) to a wall outlet or other source of utility power or other appropriately rated power. Plugging the mobile image capture device 102 into a wall outlet can recharge the on-board battery.
- the mobile image capture device 102 is configured to transfer images to the user computing device 130 over network 180 or perform other highly energy consumptive tasks only when the mobile image capture device 102 is connected to an external power source, such as a wall outlet.
- the mobile image capture device 102 can be a wearable image capture device.
- the mobile image capture device 102 can be medallion-shaped.
- the mobile image capture device 102 can have a housing with a circular perimeter.
- the lens 118 and image sensor 120 of the mobile image capture device 102 can be located at an off-center location of the housing (e.g., not at a concentric center of the circular housing).
- the housing can be beveled at the outer perimeter.
- the mobile image capture device 102 can be worn around a user's neck suspended from a lanyard.
- the mobile image capture device 102 can include a clip that permits the user to clip the mobile image capture device 102 to an article of clothing or other personal items.
- the mobile image capture device 102 may be operable to communicate with other mobile image capture devices that are located within the same general area (e.g., devices 104 and 106 ).
- the mobile image capture device 102 may be operable to transmit an excitement signal that is wirelessly receivable by one or more other mobile image capture devices that are located proximate to the mobile image capture device (e.g., devices 104 and 106 ), and vice versa.
- the excitement signal indicates that the scene depicted by one of the plurality of images recently captured by the mobile image capture device 102 has a relatively large desirability.
- the mobile image capture device 102 may send wireless signals (e.g., Bluetooth Low Energy broadcasts) to alert nearby devices (e.g., devices 104 and 106 ) that an exciting, interesting, or otherwise desirable scene is available for capture.
- the mobile image capture device 102 in response to receipt of an excitement signal (e.g., from one of devices 104 or 106 ), performs at least one of the following: increases a probability that the mobile image capture device 102 will store a non-temporary copy of a recently captured image; attempts to identify a match for one or more embeddings included in the excitement signal within the recently captured image; and increases one or more of a frame rate or a resolution of the image sensor 120 of the mobile image capture device 102 .
- receipt of an excitement signal from another device may cause the scene analyzer 124 of the receiving image capture device 102 to be more lenient in its storage decisions (e.g., by reducing various thresholds implemented by a save controller portion of the scene analyzer 124 and/or providing the excitement signal as an input to one or more models included in the scene analyzer 124 ).
- the excitement signals can include information that enables the receiving image capture device 102 to determine whether an image depicts the same scene or portion thereof that excited the transmitting image capture device.
- the receiving image capture device 102 can compare abstractions of its presently viewed scene to the received abstractions to determine whether it is viewing the same scene. If the receiving image capture device 102 determines that it is viewing the same scene, then it can implement enhanced capture and storage of such scene.
- Excitement signals can be used for capture synchronization as well.
- multiple image capture device owners at the same event may obtain some benefit out of capturing imagery with their mobile image capture device simultaneously. For example, if users share their reflections from the event later on, there will be a higher likelihood of desirable scenes being captured and a greater potential for creating special artifacts because more pictures of the same scene from different angles will have been taken by the set of multiple image capture devices.
- Excitement signals may also act as a booster for computer vision signals like facial expression and gaze path to inform the mobile image capture device about moments of importance.
- the information included in the excitement signals will not be sufficient for the receiving image capture device to identify or recreate the specific scene viewed by the transmitting image capture device.
- the information included in the excitement signal will typically be an abstraction or other low-dimensional representation of the scene that provides only enough information for the receiving capture device to determine (within some probability range) whether it is presently viewing the same scene or portion thereof.
- such abstractions may include a histogram of various image characteristics (e.g., color, etc.) or may be embeddings retrieved from one or more hidden layers of one or more of models included in the scene analyzer of the transmitting image capture device.
- the system 100 further includes the user computing device 130 and the server computing device 150 .
- the mobile image capture device 102 communicatively connects to the user computing device 130 over a local area network portion of network 180
- the user computing device 130 communicatively connects to the server computing device 150 over a wide area network portion of the network 180 .
- the mobile image capture device 102 communicatively connects to the server computing device 150 directly over the wide area network.
- the user computing device 130 can perform image curation and enable user editing of the images.
- the user computing device 130 when connected to the mobile image capture device 102 (e.g., after a capture session has been completed), the user computing device 130 can select certain of the images stored at the image capture device for transfer to the user computing device 130 .
- the user computing device 130 can also provide a user interface that enables the user to selectively edit the transferred images.
- the user interface can enable various advanced image editing techniques such as computational photography, camera repositioning, etc.
- User computing device 130 can be, for example, a computing device having a processor 132 and a memory 134 , such as a wireless mobile device, a personal digital assistant (PDA), smartphone, tablet, laptop, desktop computer, computing-enabled watch, computing-enabled eyeglasses, or other such devices/systems.
- PDA personal digital assistant
- user computing device 130 can be any computer, device, or system that can interact with the mobile image capture device 102 and (e.g., by sending and receiving data) to implement the present disclosure.
- Processor 132 of user computing device 130 can be any suitable processing device and can be one processor or a plurality of processors that are operatively connected.
- Memory 134 can include any number of computer-readable instructions 138 or other stored data 136 .
- the instructions 138 stored in memory 134 can include one or more applications.
- the one or more applications can respectively cause or instruct processor 132 to perform operations consistent with the present disclosure, such as, for example, executing an image storage, curation, editing, and sharing application.
- Memory 134 can also store any number of images captured by the mobile image capture device 102 and/or the user computing device 130 .
- User computing device 130 can further include a display.
- the display can be any one of many different technologies for displaying information to a user, including touch-sensitive display technologies.
- the user computing device 130 also includes a transfer controller 140 .
- the transfer controller 140 when connected to the mobile image capture device 102 (e.g., after a capture session has been completed), the transfer controller 140 can select certain of the images stored at the image capture device 102 for transfer to the user computing device 130 . For example, such selection can be guided by various image attributes as reflected in various metadata annotations provided by the mobile image capture device 102 respectively for the stored images. Generally, the most desirable images will be selected for transfer, while maintaining a diversity of imagery.
- the transfer controller 140 can perform an optimization algorithm to select which of the images stored in the memory 114 of the mobile image capture device 102 to request for transfer.
- the optimization algorithm can have a plurality of associated objectives which include, for example, at least a diversity of settings and a diversity of depicted persons, while still requesting transfer of the most desirable images.
- the transfer controller 140 can implement a submodular function to select which images to request for transfer.
- the user computing device 130 further includes a best shot selector 142 .
- the best shot selector 142 can be implemented to select at least one highlight image from a group of images (e.g., at least one highlight image for each moment within a reflection). For example, the best shot selector 142 can select the highlight images based on the annotations or other metadata included for each of the images.
- the best shot selector 142 normalizes each image in a moment relative to its peer images within such moment prior to performing highlight selection. Thus, selection of a highlight image for each moment can be based at least in part on a comparison of the annotations of each image included in such moment relative to the annotations of at least one other image included in such moment.
- the best shot selector 142 can also be implemented to determine a recommended composition for one or more images.
- the recommended composition may correspond to only a portion of an image (e.g., a dewarped portion of a wide angle image).
- the recommended composition may also correspond to a certain perspective of a virtual camera relative to the image.
- the best shot selector 142 can determine the recommended composition based at least in part on the annotations or other metadata associated with the image.
- the recommended composition may correspond to a dewarped portion of a wide angle image that includes only faces that correspond to entities included in the set of entities that have elevated importance to the user.
- a gaze angle of a subject depicted by an image can be used to determine the recommended composition for such image.
- the human subject's extremity of angle of the face e.g., up/down, left/right
- determining the recommended composition can include selecting the most salient, well lit, and/or compositionally interesting portions within a frame.
- the best shot selector 142 and/or other components of the user computing device 130 can perform semantic scene segmentation (e.g., at a pixel-level rather than according to bounding boxes).
- the semantic scene segmentation can be used for composition, blurring, or selective application of other editing techniques to certain portions of an image.
- the user computing device 130 also includes a user interface controller 144 .
- the user interface controller 144 can be implemented to provide a user interface that enables the user to temporally and/or spatially explore images within a reflection.
- the user interface controller 144 can be implemented to detect and respond to certain user input with appropriate user interface interactions.
- the user computing device 130 also includes a computational photographer 146 .
- the computational photographer 146 can be implemented to perform various image editing or image synthesis techniques with respect to images included in a reflection. As one example, after the user has adjusted the perspective of the camera, the computational photographer 146 can synthesize a new image that corresponds to the selected perspective by recalculating one or more camera parameters (e.g., focus, lens distortions, lighting, etc.) that would result from the new perspective. As other examples, the computational photographer 146 can be implemented to perform advanced image processing techniques such as superresolution, hyper-lapse, texture mapping, depth mapping, view synthesis, etc. Likewise, the computational photographer 146 can be implemented to provide adjustable controls for ISO, depth of field, stabilization, and other image parameters or characteristics.
- Each of the transfer controller 140 , the best shot selector 142 , the user interface controller 144 , and the computational photographer 146 can include computer logic utilized to provide desired functionality.
- each of the transfer controller 140 , the best shot selector 142 , the user interface controller 144 , and the computational photographer 146 can be implemented in hardware, firmware and/or software controlling a general purpose processor.
- each of the transfer controller 140 , the best shot selector 142 , the user interface controller 144 , and the computational photographer 146 includes program code files stored on the storage device, loaded into memory 134 and executed by processor 132 or can be provided from computer program products, for example, computer executable instructions 138 that are stored in a tangible computer-readable storage medium such as, for example, a RAM disk or card or other computer-readable optical or magnetic media.
- Server computing device 150 can be implemented using one or more server computing devices and can include a processor 152 and a memory 154 .
- server computing device 150 consists of multiple server devices, such server devices can operate according to any computing architecture, including a parallel computing architecture, a distributed computing architecture, or combinations thereof.
- Processor 152 can be any suitable processing device and can be one processor or a plurality of processors which are operatively connected.
- Memory 154 can store instructions 158 that cause processor 152 to perform operations to implement the present disclosure.
- Server computing device 150 can also include a model trainer 160 .
- Server computing device 150 can implement the model trainer 160 to train and/or re-train one or more models (e.g., neural networks) such as multi-layer non-linear models (e.g., deep neural networks).
- models e.g., neural networks
- the model trainer 160 can perform back propagation techniques such as batch gradient descent or stochastic gradient descent to train the models.
- the model trainer 160 can also leverage dropout techniques to combat model overfitting.
- the model trainer 160 can train models using processed images and/or unprocessed images as training images.
- the server computing device 150 can implement model trainer 160 to train new models or update versions on existing models on additional image data.
- the model trainer 160 can use images hand-labeled as being desirable to train one or more models to provide outputs regarding the desirability of an input image.
- the additional training data can be images that the user created through the editing interface.
- updated versions of the models of the image capture device 102 can be trained by model trainer 160 on personalized data sets to better infer, capture, and store images which satisfy the particular visual tastes of the user.
- the additional training data can be anonymized, aggregated user feedback.
- the server computing device 150 can periodically provide the mobile image capture device 102 with one or more updated versions of one or more models included in the scene analyzer 124 .
- the updated models can be transmitted via the user computing device 130 or directly to the mobile image capture device 102 via network 180 .
- the user computing device 130 can also include a model trainer that performs personalized model training as described above for a particular mobile image capture device 102 .
- the model trainer 160 can include computer logic utilized to provide desired functionality.
- the model trainer 160 can be implemented in hardware, firmware and/or software controlling a general purpose processor.
- the model trainer 160 includes program code files stored on the storage device, loaded into memory 154 and executed by processor 152 or can be provided from computer program products, for example, computer executable instructions that are stored in a tangible computer-readable storage medium such as RAM hard disk or card or other computer-readable optical or magnetic media.
- Network 180 can be any type of communications network, such as a local area network (e.g., intranet), wide area network (e.g., Internet), or some combination thereof and can include any number of wired or wireless links.
- communication between the server computing device 150 and the user computing device 130 can be carried via any type of wired and/or wireless connection, using a wide variety of communication protocols (e.g., TCP/IP, HTTP, SMTP, FTP), encodings or formats (e.g., HTML, XML), and/or protection schemes (e.g., VPN, secure HTTP, SSL).
- Server computing device 150 can communicate with user computing device 130 over network 180 by sending and receiving data.
- any of the processes, operations, programs, applications, or instructions described as being stored at or performed by the server computing device 150 can instead be stored at or performed by the user computing device 130 in whole or in part, and vice versa.
- the mobile image capture device 102 can directly communicatively connect to the server computing device 150 and the server computing device 150 can perform the image curation, editing, storage, and sharing functions attributed to the user computing device 130 elsewhere in the present disclosure (e.g., via a web application).
- any of the processes, operations, programs, applications, or instructions described as being stored at or performed by the mobile image capture device 102 can instead be stored at or performed by the user computing device 130 in whole or in part, and vice versa.
- the transfer controller 140 can be located at the mobile image capture device 102 rather than the user computing device 130 .
- FIG. 2 depicts a schematic of an example image processing framework 200 according to an example embodiment of the present disclosure.
- the schematic depicted in FIG. 2 illustrates relationships between components which permit multiple potential data paths or work flows through the framework 200 .
- the image processing framework 200 can be included in the mobile image capture device.
- the image processing framework 200 includes an image sensor 202 which outputs raw image data.
- the raw image data can be a Bayer RAW image.
- the raw image data can be communicated to a first memory 204 and/or an imaging pipeline 206 .
- the first memory 204 which stores the raw image data output by the image sensor 202 can be denominated as a raw temporary data buffer and can be, for example, DRAM memory.
- the imaging pipeline 206 streams the raw image data directly from the image sensor 202 .
- the temporary data buffer may optionally store processed images instead of the raw image data.
- the imaging pipeline 206 takes the raw image data received from the image sensor 202 and processes such raw image data to generate an image.
- the processed image can be a RGB image, a YUV image, a YCbCr image, or images according to other color spaces.
- the imaging pipeline 206 can be operatively connected to a system processor 214 .
- the system processor 214 can include hardware blocks 216 that assist the imaging pipeline 206 in performing Debayer filtering, RAW filtering, LSC filtering, or other image processing operations.
- the RAW filter stage can provide image statistics 216 for auto exposure in real time and/or auto white balance operations.
- Software filters may be employed as well. Additional discussion of an example imaging pipeline is provided with respect to FIGS. 9 and 10 .
- the imaging pipeline 206 can provide the image to an optional scaler 208 or a second memory 222 , which will be discussed further below.
- the scaler 208 can down sample the received image to output a lower resolution version of the image.
- the scaler 208 can be denominated as a down sampler.
- the scaler 208 provides the image to a third memory 210 .
- the third memory 210 may be the same memory or a different memory than the second memory 222 .
- the second memory 222 and/or the third memory 210 can store temporary copies of the image.
- the second memory 222 and/or the third memory 210 can be denominated as temporary image buffers.
- the second memory 222 and/or the third memory 210 are DRAM.
- downsampling can be performed at the beginning of the imaging pipeline such that the imaging pipeline is enabled to run at a lower resolution and conserve power to a greater degree.
- the second memory 222 and/or the third memory 210 can provide the image information to a scene analyzer 212 .
- the scene analyzer 212 is operable to analyze a scene depicted by the image to assess a desirability of such scene and, based at least in part on such desirability, determine whether to store a non-temporary copy of such image or to discard the temporary copy of such image without further storage.
- the scene analyzer 212 can also access various data 218 stored at the system processor 214 .
- the scene analyzer 212 determines that a non-temporary copy of the image should be stored, then the scene analyzer 212 can provide the image to a compression component 226 .
- the compression component 226 can receive the image from the second memory 222 and/or the third memory 210 .
- the scene analyzer determines that a non-temporary copy of the image should be stored, then the raw image data stored in the first memory 204 will be retrieved and processed by the imaging pipeline 206 and the resulting processed image will be provided to the compression component 226 .
- the compression component 226 compresses the received image.
- the compression component 226 can be a hardware component or image compression software implemented on a processor (e.g., the system processor 214 ). After compression, a non-temporary copy of the image is written to a non-volatile memory 228 .
- the non-volatile memory 228 can be an SD card.
- the image compression path 220 marked in a dotted box may not be active when an image is not chosen for compression and storage.
- the output of the scene analyzer 212 can be used to either turn on the image compression path 220 or control the image sensor 202 .
- the scene analyzer 212 e.g., in partnership with the system processor 214
- the output of the scene analyzer 212 can be used to either turn on or off the imaging pipeline path as well.
- portions of the scene analysis can be performed with respect to low-resolution images whereas other portions of the scene analysis can be performed on crops of high-resolution images (e.g., facial expression analysis may require crops of high resolution images).
- the output from the image sensor 202 can control most of the timing through the imaging pipeline 206 .
- image processing at the imaging pipeline 206 can be roughly frame-synced to transfer at the image sensor receiver (e.g., an MIPI receiver).
- the image sensor receiver e.g., an MIPI receiver.
- Each of the stages of image processing 206 can have some delay which causes the output to be a few image sensor rows behind the input. This delay amount can be constant given the amount of processing that happens in the pipeline 206 .
- the scene analyzer 212 can start shortly after the imaging pipeline 206 has written all the lines of one image to memory. In other implementations, the scene analyzer 212 starts even before the imaging pipeline 206 has written all the lines of one image to memory. For example, certain models included in the scene analyzer (e.g., a face detector model) can operate on subsets of the image at a time and therefore do not require that all of the lines of the image are written to memory. Compression can be performed after the scene analyzer determines that the image is worth saving and compressing. One example representation of data flow versus time is provided below with reference to FIG. 8 . In other implementations, instead of analyzing images that have been fully processed by the image processing pipeline 206 , the scene analyzer 212 can analyze Bayer raw images or images that have only been lightly processed by the imaging pipeline.
- FIG. 3 depicts a visual representation 300 of example capture modes of an example mobile image capture device according to an example embodiment of the present disclosure.
- vertical bars are representative of captured images, with the vertical length of the bar representative of the resolution of the captured images.
- shorter bars e.g., bar 302
- longer bars e.g., bar 304
- horizontal thicker bars denote images that are selected for compression and storage.
- the mobile image capture devices of the present disclosure can change capture frame rate and resolution on the fly. Particular example capture modes are illustrated in FIG. 3 . However, other the mobile image capture device can operate according to other capture modes as well.
- visual representation 300 On the left hand side of visual representation 300 is a visual representation of a regular or sustained capture state.
- the image capture device will periodically transition between a low resolution image capture mode and a high resolution image capture mode.
- high resolution or full resolution frames can be captured relatively infrequently (e.g., at an average of 0.1 to 5 frames per second (fps)), while low resolution frames are captured more frequently (e.g., at an average of 5 to 20 fps).
- “Captured” here means at the image sensor level. However, note that while an image is “captured” by the image sensor, only a few percentage of them (e.g., around 5 percent) may be selected for compression and storage.
- high or full resolution frames can be 12 megapixel (MP) images.
- the high resolution frames can be an entire frame at a maximum resolution of the image sensor. These high resolution frames can be the strongest candidates for ultimate compression and storage.
- the frame rate for full resolution images can be increased in different capture modes, which will be discussed further below.
- low resolution frames can be 1.33 MP images.
- the low resolution frames can be used for scene analysis, and may be even further scaled down (e.g., to 500 ⁇ 375) if desired.
- the low resolution frames can also be used for various other purposes such as: allowing users to preview an image through a display in the user computing device (e.g. capture visualizations based on a thumbnail (e.g. 100 ⁇ 75) of the image); generating hyper-lapse (computer vision) artifacts; and/or performing superresolution techniques in which the resolution of portions of a low resolution image are enhanced based on full-resolution frames that are closely related in time.
- the image sensor may be further operable to provide mid resolution images that are, for example, 3 MP.
- mid resolution images can be captured at up to 30 fps during a burst capture mode.
- Mid resolution images may be useful for scenarios including low-light binning.
- the mobile image capture device's exposure time may be relatively short in order to reduce the amount of motion blur. Two by two binning reduces the image noise by a factor of two in terms of standard deviation.
- the mobile image capture device can also operate in a burst capture mode or burst state, which is shown after the regular sustained state in FIG. 3 .
- the mobile image capture device can transition to the burst state based on signals from the scene analyzer or in response to a manual trigger from the user.
- burst capture mode is typically performed when a highly desirable scene has been recognized and the device attempts to maximize an amount of imagery captured of such scene. Therefore, during burst capture mode, the mobile image capture device can capture mid or high resolution images at a relatively higher frame rate (e.g., 15 fps for high resolution or 30 fps for mid resolution).
- low resolution images can be captured at a high frame rate and the low resolution images can go through super-resolution to obtain final high resolution data.
- all of the images captured during burst mode are compressed and stored at the non-volatile memory, with little to no scene analysis being performed.
- the limited resources of the mobile image captured device can be freely dedicated to compression and storage of the high or mid resolution imagery.
- writing to non-volatile memory can be performed on the order of 20 to 25 MB per second.
- more resources may be dedicated to scene analysis when burst captures include low resolution images which may later go through super-resolution. Burst capture mode can be sustained for a period of time after which the mobile image capture device reverts to the regular state.
- the mobile image capture device may also be able to operate in a hyper-lapse capture mode, which is shown at the right hand side of FIG. 3 .
- the hyper-lapse capture mode which is geared towards capture of imagery usable to generate a hyper-lapse stabilized video
- the mobile image capture device can capture low or mid resolution imagery for a sustained period of time.
- one emphasis is in a smooth transition between shots.
- Low or mid resolution images are captured at a relatively high frame rate (e.g., 15 fps). Not all of the frames are processed, compressed, and saved.
- analysis for hyper-lapse capture can select frames such that the output is roughly 1 frame saved per second.
- frames captured with jerky motion can be discarded.
- motion analysis can be a central component of hyper-lapse frame selection.
- the scene analysis performed during hyper-lapse capture state can have different objectives versus the regular capture state or may generally be more lightweight.
- high resolution images can be interspersed with low or mid resolution images in hyper-lapse capture mode.
- FIG. 4 depicts a visual representation 400 of example relationships between capture modes of an example mobile image capture device according to an example embodiment of the present disclosure.
- visual representation 400 describes example transitions between capture states.
- FIG. 5 depicts an example image processing framework 500 according to an example embodiment of the present disclosure.
- the image processing framework 500 can be employed when the mobile image capture device is operating in a low resolution capture mode.
- the image processing framework 500 includes an image sensor 502 , an image sensor receiver 504 , and an imaging pipeline 508 .
- the image sensor 502 can provide low resolution raw image data 506 .
- the image sensor 502 performs binning and/or downsampling to result in output of low resolution raw image data 506 .
- the image sensor 502 can operate according to one or more of the following binning/sub sampling modes: 2H ⁇ 2V binning; 3H ⁇ 3V downsample (3 ⁇ 3 bin); 3H ⁇ 3V downsample (bin plus skip); 2H ⁇ 4V downsample; 3H ⁇ 9V downsample (bin and skip); 3H ⁇ 17V downsample (bin and skip).
- the image sensor 502 can perform 3 ⁇ 3 downsampling (with binning and skipping) to output low resolution raw image data 506 which is sufficient to generate a low resolution image of 1.33MP (1332 ⁇ 1000).
- the image sensor 502 can perform even further downsampling to provide lower resolution thumbnails for scene analysis or other objectives.
- the imaging pipeline 508 can perform anamorphic scaling.
- the imaging pipeline 508 can stream the low resolution raw image data 506 from the image sensor receiver 504 (e.g., without the data taking a trip to memory).
- the imaging pipeline 508 can process the raw image data 506 to generate a low resolution image 510 (e.g., a 1.33 MP image).
- the imaging pipeline 508 can process the raw image data 506 to generate an ultra-low resolution image 512 (e.g., a 0.18 MP image).
- Either or both of the image 510 and the image 512 can be provided to a scene analyzer 514 .
- a scene analyzer 514 For example, in the interests of balancing analysis intelligence versus computational consumption, certain portions of the scene analyzer may analyze the image 510 while other portions analyze the image 512 .
- the scene analyzer 514 can analyze the inputted images and, based on such analysis, output one or more control signals 516 .
- the control signals 516 can control whether the image 510 is compressed and stored or whether the image 510 is discarded without storage. Further, in some implementations, the control signals 516 can control the capture mode of the image capture device, or can simply increase or decrease frame rate or resolution with formally changing the capture mode.
- the scene analyzer 514 can be implemented in one or more shave cores of a system processor.
- the scene analyzer 514 indicates that the image 510 should be stored, then the image 510 is provided to an image compression component 518 , where the image compression component 518 compresses the image 510 .
- the compressed image 510 is then written to storage 520 .
- storage 520 can be a non-volatile memory.
- FIG. 8 illustrates an example data flow over time in the low resolution capture mode.
- FIG. 6 depicts an example image processing framework 600 according to an example embodiment of the present disclosure.
- the image processing framework 600 can be employed when the mobile image capture device is operating in a high resolution capture mode.
- the image processing framework 600 includes an image sensor 602 , an image sensor receiver 604 , a down sampler 610 , and an imaging pipeline 612 .
- the image sensor 602 can provide high resolution raw image data 606 .
- the high resolution raw image data 606 can be data sufficient to generate a high resolution image of, for example, 12MP.
- a copy 608 of the high resolution raw image data 606 can be temporarily stored in memory (e.g., in a temporary raw image data buffer).
- the down sampler 610 can stream the high resolution raw image data 606 from the image sensor receiver 604 and can down sample the high resolution raw image data 606 to output low resolution raw image data 611 .
- the down sampler 610 can perform binning and/or skipping.
- the low resolution raw image data 611 can be, for example, raw image data sufficient to generate a low resolution image, such as, for example, a 1.33 MP image.
- the down sampler 610 can be implemented in hardware or software controlling a processor.
- the imaging pipeline 612 can stream the low resolution raw image data 611 from the down sampler 610 .
- the imaging pipeline 612 can process the low resolution raw image data 611 to generate a low resolution image 614 (e.g., a 1.33 MP image).
- the imaging pipeline 612 can process the raw image data 606 to generate one or more ultra-low resolution images 616 (e.g., a 0.18 MP image or a 0.33 MP image).
- One or more of the images 614 and 616 can be provided to a scene analyzer 618 .
- the scene analyzer 618 can analyze the inputted images and, based on such analysis, output one or more control signals.
- the control signals can control whether an image is generated from the high resolution raw image data 606 and then compressed and stored or whether the high resolution raw image data 606 and the images 614 and 616 are discarded without further storage. Further, in some implementations, the control signals 616 can control the capture mode of the image capture device.
- the temporarily stored copy 608 of the high resolution raw image data 606 is provided to the imaging pipeline 612 .
- the copy 608 of the high resolution raw image data 606 can be retrieved from a temporary raw image data buffer and processed in a memory to memory fashion.
- the imaging pipeline 612 can process the high resolution raw image data 606 to generate a high resolution image 619 .
- the high resolution image 619 can be a 12 MP image.
- the high resolution image 619 is then provided to an image compression component 620 , where the image compression component 620 compresses the image 619 .
- the compressed image 619 is then written to storage 622 .
- storage 622 can be a non-volatile memory.
- the low resolution image 614 can also be provided to the image compression component 620 , where the image compression component 620 compresses the image 619 .
- the compressed image 614 is then written to storage 622 .
- storage 622 can be a non-volatile memory.
- FIG. 7 depicts a visual representation 700 of data flow versus time in an example image processing framework according to an example embodiment of the present disclosure.
- FIG. 7 depicts one example timing of data flow when the image capture framework is operating in the low resolution capture mode.
- the image sensor outputs low resolution raw image data.
- the imaging pipeline streams the low resolution raw image data from the image sensor. As illustrated, the imaging pipeline can process the sensor data in-stream.
- the output of the imaging pipeline is written to DRAM. In some implementations, the delay between the sensor capture and image data written to DRAM is only a few lines.
- scene analysis of the image is performed.
- scene analysis can start shortly after the imaging pipeline has written all the lines of one image to the DRAM.
- the scene analysis starts even before the imaging pipeline has written all the lines of one image to memory.
- certain models included in the scene analysis e.g., a face detector model
- the results of the scene analysis can be added to the image in DRAM at 710 .
- the scene analysis of an image can take longer than the frame time for certain tasks.
- the scene analyzer determines that the image has interesting scene content, then at 712 the image is compressed. Compression can occur in a memory to memory fashion. However, in other implementations, compression can be run in-stream.
- the above described operations can occur in a cascading and/or overlapping manner. For example, capture and processing of the next image can occur while the first image is still undergoing scene analysis, and so on.
- the illustrated data flow is for keep/discard decisions made during the regular capture state.
- the still image compression may not wait for the decision by the scene analysis, or scene analysis may simply be bypassed.
- FIG. 8 depicts an example image processing framework 800 according to an example embodiment of the present disclosure.
- the image processing framework 800 can be employed when the mobile image capture device is operating in a burst capture mode.
- the image processing framework 800 includes an image sensor 802 , an image sensor receiver 804 , and an imaging pipeline 806 .
- the image sensor 802 can provide high resolution raw image data 805 .
- the imaging pipeline 806 can stream the high resolution raw image data 805 from the image sensor receiver 804 (e.g., without the data taking a trip to memory).
- the imaging pipeline 806 can process the raw image data 805 to generate a high resolution image 807 (e.g., a 12 MP image).
- the imaging pipeline 806 can process the raw image data 805 to generate a various lower resolution images 808 .
- the image 807 is then provided to an image compression component 809 , where the image compression component 809 compresses the image 807 .
- the compressed image 807 is then written to storage 810 .
- storage 810 can be a non-volatile memory.
- compression is performed in-stream, which eliminates the power requirements of temporarily writing to memory.
- the framework 800 of the burst capture mode may not provide the image 807 to a scene analyzer to make keep/discard decisions. Instead, the image 807 (and optionally any number of images 808 ) is simply compressed and stored.
- burst capture is typically performed after the device has detected (e.g., from previous frames) that an interesting scene is available, intensive image analysis may not be necessary to perform. This allows the device to devote most of the energy and computing power to performing the imaging pipeline and compression.
- the mobile image capture device may have sufficient resources to perform scene analysis during burst capture mode for the purpose of keep/discard decisions. This may also be enabled by lowering the resolution and/or frame rate requirements/parameter values of the burst image capture.
- FIGS. 9 and 10 depict example imaging pipeline(s) 900 and 1050 according to an example embodiment of the present disclosure.
- the pipelines 900 and 1050 can be separate pipelines or can be combined to form a single pipeline.
- the imaging pipeline included in the mobile image capture device impacts the quality of images generated by the mobile image capture device.
- the imaging pipeline can take raw image data from an image sensor and performs the necessary processing to reduce image defects and non-idealities of the image sensor and optics in the imaging system, thereby producing high quality images that are pleasing to view. Given that the power consumption of the mobile image capture device is typically constrained, many of the computations of the imaging pipeline can be performed in hardware blocks, which are more efficient that software implementations.
- imaging pipeline 900 depicts one example imaging pipeline that performs a raw-to-raw Bayer pipeline.
- RAW Bayer image data 901 is either streamed directly from the image sensor, or is read from memory. Streaming directly from the sensor is desirable in order to save power consumption and reduce memory bandwidth.
- a first step is to remove the bad pixels at block 902 . This requires knowledge of analog gain applied in the sensor and a static defect table. Previous x-y coordinates of bad pixels are optional and may help the bad pixel correction.
- raw pixel may be denoised lightly.
- One benefit of such a raw-denoise block 904 is to remove some noise such that it does not crease maze-like artifacts during a demosaicing state. Again, analog gain applied to the sensor and noise table that has been calibrated for the sensor is useful for improved performance.
- black level can be removed.
- a histogram of pixel intensities is useful to remove the black level.
- flare correction may be performed at a separate block after white balancing at the expense of additional processing.
- Lens shading correction can be performed at block 908 .
- Lens shading correction can be applied by obtaining a calibrated per-device shading table. This table can be obtained during calibration.
- white balance gains can be applied using the AWB result.
- per device calibration results of small color ratios can be applied if applicable.
- pipeline 1050 is an RGB/YCbCr pipeline.
- RAW Bayer image data 1051 is passed onto a demosaicer block 1052 which is then used to perform interpolation on missing color components.
- the demosaicing block 1052 computes optimal “G” and “B” pixels such that a very good sharpness can be maintained without unnatural sharpening artifacts. This goes through a series of transformations (e.g., blocks 1054 and 1056 ) such that the pixel values are in sRGB space (or any other color space).
- Optional tone mapping can be performed at block 1058 such that contrast in enhanced or dynamic range is compressed such that it may be rendered on lower bit-depth displays.
- color space conversion can be performed at block 1060 such that the pixel values 1061 are in YCbCr pixel domain.
- the pixel values 1061 may be passed onto a still image (e.g., JPEG or other formats) compression block.
- a still image e.g., JPEG or other formats
- denoising and sharpening can be performed on the luminance channel.
- chrominance noise can be significantly suppressed especially for low-light images. Additional blocks such as special effects can be optionally applied, as well.
- FIG. 11 depicts an example scene analyzer 1102 according to an example embodiment of the present disclosure.
- the scene analyzer 1102 includes a model scheduler/selector 1104 ; a plurality of models that analyze characteristics of input images; a save controller 1110 ; and a mode controller 1112 .
- the plurality of models are a plurality of deep neural networks (e.g., deep neural networks 1106 and 1108 ), or other multi-layer non-linear models.
- save controller 1110 and mode controller 1112 can be implemented as the same component (e.g., a “save and mode controller”).
- the scene analyzer 1102 can receive one or more images 1114 .
- the scene analyzer 1114 can analyze each receive image 1114 and, based at least in part on such analysis, output one or more control signals 1118 and 1120 .
- the control signals 1118 can control whether the one or more images 1114 are compressed and written to memory (e.g., a non-volatile memory).
- the control signals 1120 can control the capture mode of the image sensor or mobile image capture device as a whole.
- the received imagery 1114 can include high resolution images and/or low resolution images.
- certain portions of scene analyzer 1102 can analyze low resolution versions of an image 1114 while other portions (e.g., portions which analyze facial features) analyze cropped portions of high resolution versions of the image 1114 .
- the model scheduler 1104 can control which models (if any) an image is input for scene analysis.
- the model selector 1104 can select which models to employ depending on a number of criteria including computational consumption considerations, energy consumption considerations, and/or the results of an initial analysis of the scene of the image.
- the model selector 1104 can simply implement a predefined schedule or can implement some defined logic regarding an ordering or configuration of models to employ.
- the model selector 1104 may itself be a model (e.g., neural network), such as a multi-layer non-linear model (e.g., deep neural network).
- the model selector 1104 includes an attention model 1116 that analyzes only a portion of an input image.
- the attention model 1116 can output an indication of whether each input image should be input into at least one of the downstream models for further scene analysis.
- the attention model 1116 can operate as a prefilter to the downstream models (e.g., deep neural networks 1106 and 1108 ) included in the scene analyzer 1102 .
- the attention model 1116 can be a recurrent deep neural network that tracks a face through a succession of images 1114 and outputs a probability that each analyzed image depicts the face experiencing joy.
- the attention model 1116 can also output a description of which portion of the next input image the attention model 1116 should analyze.
- a supervised objective function informs the attention model 1116 what is valuable to pay attention to.
- an attention model 1116 in this fashion can greatly reduce the energy consumption of the mobile image capture device since the attention model 1116 , which limits its analysis to only a portion of the images, guards certain downstream models (e.g., deep neural networks 1106 and 1108 ) which may analyze the image in its entirety and/or require larger computational expenditure.
- certain downstream models e.g., deep neural networks 1106 and 1108
- the attention model 1116 can be used in place of the other models (e.g., models 1106 and 1108 ) to guide image storage and/or capture mode decisions.
- one or more of the various deep neural networks e.g., 1106 and 1108
- the scene analyzer 1102 can further include any number of models (e.g., deep neural networks 1106 and 1108 ) which analyze the scene depicted by an input image 1114 and output various descriptors (e.g., annotations) that describe a desirability of the scene of the input image 1114 (e.g., describe various image characteristics which impact the desirability of the scene).
- the scene analyzer 1102 can make intelligent decisions regarding image storage and/or capture mode on the basis of such descriptors.
- the neural networks can be convolutional neural networks, recurrent neural networks, feed forward neural networks, or combinations thereof.
- the save controller 1110 can take as input all of the annotations from the models and use such annotations to decide whether or not to compress and store the image.
- the mode controller 1112 can determine whether to change the capture mode of the mobile image capture device on the basis of such annotations.
- the save controller 1110 and/or the mode controller 1112 can include one or more decision trees, models, and/or algorithms that apply some hand-crafted logic.
- Each of the save controller 1110 and the mode controller 1112 can include computer logic utilized to provide desired functionality.
- each of the save controller 1110 and the mode controller 1112 can be implemented in hardware, firmware and/or software controlling a general purpose processor.
- each of the save controller 1110 and the mode controller 1112 includes program code files stored on the storage device, loaded into a memory and executed by a processor or can be provided from computer program products, for example, computer executable instructions that are stored in a tangible computer-readable storage medium such as, for example, a RAM disk or card or other computer-readable optical or magnetic media.
- the scene analyzer 1102 is implemented asynchronously with the capture of images 1114 .
- the frame rate of image capture is (at least in some instances) different that the frequency at which the scene analyzer 1102 analyzes images 1114 .
- the scene analyzer 1102 can also receive additional lower dimensional data such as capture parameters or IMU data.
- IMU data can indicate a relative amount of motion there is during image capture. Analysis of walking frequency may allow the mobile image capture device to time the “right” capture instant as the user walks. Capture parameters such as exposure time can also be adjusted accordingly.
- Low level analysis can also be performed in order to determine whether to perform multi-frame capture to enhance quality. For example, if the exposure values are very low and high motion blur or high amounts of noise are expected, the mobile image capture device can capture burst for quality enhancement. Multi-frame denoising can then be performed in either the mobile image capture device or the user computing device.
- FIG. 12 depicts an example configuration 1200 of models in a scene analyzer according to an example embodiment of the present disclosure.
- FIG. 12 depicts different components operating in the scene analyzer and the data flow between them. As illustrated, certain portions of the execution can be parallelized.
- one or more (e.g., all) of such models are deep neural networks.
- Each model can output at least one descriptor that describes a characteristic of the image.
- the image can be annotated with such descriptor(s).
- annotations the outputs of the models will be referred to as annotations.
- the models provide the annotations to a save and mode controller 1250 which annotates the image with the annotations.
- the configuration 1200 receives as input a frame of imagery 1202 .
- the frame 1202 may have been selected by a model scheduler for analysis.
- the frame of imagery 1202 is provided to a face detection or tracking model 1204 .
- the face detection or tracking model 1204 detects one or more faces depicted by the frame 1202 and outputs one or more face bounding boxes 1206 that describe the respective locations of the one or more detected faces.
- the face bounding boxes 1206 can be annotated to the frame 1202 and can also be provided as input alongside the frame 1202 to a face attribute model 1208 and a face recognition model 1216 .
- the face detection or tracking model 1204 performs face tracking rather than simple face detection. In some implementations, the model 1204 may choose which of detection or tracking to perform. Face tracking is a faster alternative to face detection. Face tracking can take as additional inputs the face detection bounding boxes 1206 from a previous frame of imagery. The face tracking model 1204 updates the position of the bounding boxes 1206 , but does not detect new faces.
- the face detection or tracking model 1204 simply outputs face bounding boxes 1206 that describe the location of faces within the frame of imagery 1202 .
- the model 1204 performs only raw detection of a face (e.g., recognition of depicted image features that are “face-like”), without any attempt to match the face with an identity.
- the face attribute model 1208 can receive as input one or more crops of the frame of imagery 1202 (e.g., relatively higher resolution crops), where the one or more crops correspond to the portion(s) of the frame 1202 defined by the coordinates of the bounding box(es) 1206 .
- the face attribute model 1208 can output an indication (e.g., a probability) that the detected face(s) include certain face attributes 1210 .
- the face attribute model 1208 can output respective probabilities that the detected faces include smiles, open eyes, certain poses, certain expressions, a diversity of expression, or other face attributes 1210 .
- the face attributes 1210 can be provided as input alongside the frame of imagery 1202 to a face photogenic model 1212 .
- the face photogenic model 1212 can output a single face score 1214 which represents a level of photogenicness of a pose, an expression, and/or other characteristics or attributes of the detected face(s).
- the face recognition model 1216 can receive as input one or more crops of the frame of imagery 1202 (e.g., relatively higher resolution crops), where the one or more crops correspond to the portion(s) of the frame 1202 defined by the coordinates of the bounding box(es) 1206 .
- the face recognition model 1216 can output a face signature for each of the detected faces.
- the face signature can be an abstraction of the face such as an embedding or template of the face or features of the face.
- the face recognition model 1216 does not attempt to determine or ascertain a human identity of the detected face(s). Thus, the face recognition model 1216 does not attempt to determine a name for the face or otherwise match the face to public profiles or other such information. Instead, the face recognition model 1216 simply matches an abstraction of the detected face(s) (e.g., an embedding or other low-dimensional representation) to respective other abstractions associated with previously “recognized” faces. As one example, the face recognition model 1216 may provide a probability (e.g., a level of confidence from 0.0 to 1.0) that an abstraction of a face depicted in an input image matches an abstraction of a face depicted in a previously captured image.
- a probability e.g., a level of confidence from 0.0 to 1.0
- the face recognition model 1216 may indicate (e.g., in the face signature 1218 ) that a face detected in the image 1202 is likely also depicted in a previously captured image, but does not attempt to identify “who” this face belongs to in the human identity contextual sense.
- the face recognition model 1216 may provide a probability that an abstraction of a face depicted in an input image matches an abstraction of a face that has been previously indicated as having a heightened importance to the user of the mobile image capture device.
- the face recognition model 1216 may indicate that a face detected in the image 1202 is likely also included in the set of faces that the user has indicated as having heightened performance, but does not attempt to identify “who” this face belongs to in the human identity contextual sense.
- the frame of imagery 1202 can also be provided as input to an image content model 1220 .
- the image content model 1220 can output one or more semantic feature vectors 1222 and one or more semantic labels 1224 .
- the semantic feature vectors 1222 can be used for determining that two images contain similar content (e.g., similar to how face embeddings are used to determine that two faces are similar).
- the semantic labels 1224 can identify one or more semantic features (e.g., “dog,” “sunset,” “mountains,” “Eiffel Tower,” etc.) detected within the frame of imagery 1202 .
- the notion of similarity between images can be used to ensure a diversity of captured images.
- the image content model 1220 is a version of a deep convolutional neural network trained for image classification.
- a subset of semantic classes that are particularly important to users of the mobile image capture device e.g., animals, dogs, cats, sunsets, birthday cakes, etc.
- the image content model 1220 can provide a particular emphasis on detection/classification with respect to such subset of semantic classes having elevated importance.
- the frame of imagery 1202 can also be provided as input to a visual feature extractor model 1226 .
- the visual feature extractor model 1226 can output one or more visual feature vectors 1228 that describe one or more visual features (e.g., a color histogram, color combinations, an indication of amount of blur, an indication of lighting quality, etc.) of the frame 1202 .
- the semantic feature vectors 1222 , semantic labels 1224 , and the visual feature vectors 1228 can be provided as input alongside the frame 1202 to a photo quality model 1230 .
- the photo quality model 1230 can output a photo quality score 1232 based on the inputs.
- the photo quality model 1230 will determine the photo quality score 1232 on the basis of an interestingness of the image 1202 (e.g., as indicated by the semantic labels 1224 ), a technical quality of the image 1202 (e.g., as indicated by visual feature vectors 1228 that describe blur and/or lighting), and/or a composition quality of the image 1202 (e.g., as indicated by the relative locations of semantic entities and visual features).
- the save and mode controller 1250 will take as input all of the annotations 1206 , 1210 , 1214 , 1218 , 1222 , 1224 , 1228 , and 1232 and make a decision whether or not to save the frame of imagery 1202 or a high resolution version thereof and also whether or not to change a capture mode of the device.
- the save controller 1250 will try to save frames that the final curation function (e.g., the transfer controller and/or best shot selector) will want to select, and hence can be viewed as an online/real-time approximation to such curation function.
- the save and mode controller 1250 includes an in-memory annotation index or other frame buffering so that save and mode decisions regarding frame 1202 can be made relative to peer images. In other implementations, the save and mode controller 1250 makes decisions based only on information about the current frame 1202 .
- the save and mode controller 1250 may be designed so that approximately 5% of captured images are selected for compression and storage. In some implementations, whenever the save and mode controller 1250 triggers storage of an image, some window of imagery around the image which triggered storage will be stored.
- various ones of the models can be combined to form a multi-headed model.
- the face attribute model 1208 , the face recognition model 1216 , and/or the face photogenic model 1212 can be merged or otherwise combined to form a multi-headed model that receives a single set of inputs and provides multiple outputs.
- Configuration 1200 is provided as one example configuration only. Many other configurations of models that are different than configuration 1200 can be used by the scene analyzer.
- a model scheduler/selector of the scene analyzer can dynamically reconfigure the configuration of models to which an image is provided as input.
- FIG. 13 depicts a flow chart of an example method 1300 to curate images captured at a mobile image capture device according to an example embodiment of the present disclosure.
- the example method 1300 can be performed by a user computing device.
- the user computing device communicatively connects to the mobile image capture device.
- the user computing device can communicatively connect to the mobile image capture device over a Wi-Fi local area network.
- the user computing device receives metadata for any reflections or image capture sessions that have not yet been received from the mobile image capture device.
- the metadata can include the annotations, IMU data, timestamp, and other information (e.g., was this image manually triggered) associated with each image included in the reflection.
- the transferred data will typically not include the images themselves.
- the user computing device selects one or more of the images for transfer.
- the user computing device can implement a transfer controller to select one or more of the images for transfer.
- the transfer controller can take as input the collection of annotations and other metadata and make the decision about which images to transfer from the image capture device to the user computing device.
- the transfer controller performs an optimization algorithm to select which of the images stored in the memory of the mobile image capture device to request for transfer.
- the optimization algorithm can have a plurality of associated objectives which include, for example, at least a diversity of settings (e.g., locations and times) and a diversity of depicted persons, while still requesting transfer of the most desirable images.
- Various weights can be assigned to the objectives.
- the transfer controller can implement a submodular function to select which images to request for transfer. In some implementations, all images that were manually triggered will be selected for transfer. In some implementations, at least one image that depicts each frequently-seen person will be selected for transfer.
- the user computing device receives the transferred images.
- the user computing device selects at least one highlight image for each of one or more moments included in the reflection. For example, selection of highlight images may be performed based on the annotations or other metadata included for each of the images. In some implementations, each image in a moment is normalized relative to its peer images within such moment prior to performing highlight selection. Thus, selection of a highlight image for each moment can be based at least in part on a comparison of the annotations of each image included in such moment relative to the annotations of at least one other image included in such moment. In some implementations, selecting the at least one highlight image at 1310 can include determining a score for each transferred image, where the image that receives the highest score is considered the highlight image.
- FIGS. 14-23 and 27-31 depict example user interfaces that can be used to enable a user to interact with an image curation, editing, storage, and sharing application.
- the user interfaces are provided as examples only. Many different user interfaces can be used to enable the interactions and functionality described by the present disclosure.
- FIG. 14 depicts an example user interface 1400 to enable selection of a reflection for editing according to an example embodiment of the present disclosure.
- user interface 1400 can be described as a home screen that is a starting point for the application.
- User interface 1400 can provide a scrollable list of reflections in the order they were added. For example, a representative image can be provided for each reflection. For example, a first image 1402 can be representative of a first reflection while a second image 1404 is representative of a second reflection. Touching, tapping, or otherwise selecting one of the images 1402 or 1404 can result in the application opening or accessing the particular reflection for more in depth editing (e.g., access to user interfaces 2200 and 2300 of FIGS. 22 and 23 ).
- each reflection can be represented by a spherical image, as illustrated. Other forms of representation can be used as well (e.g., textual list).
- the reflection representation has a number of different visual states that indicate the state of the corresponding reflection.
- the reflection can have the following states: reflection capture in progress; reflection stored on mobile image capture device but not yet on user computing device; reflection actively being transferred from mobile image capture device to user computing device; reflection ready for editing; loading reflection from backup source; importing reflection from third-party backup source; shared reflection available, but not downloaded; and/or shared reflection ready for editing.
- the user interface 1400 can further include a shot list access button 1406 and a settings access button 1408 . Touching, tapping, or otherwise selecting the shot list access button 1406 can result in the application providing the user interface 1500 of FIG. 15 .
- FIG. 15 depicts an example user interface 1500 to enable management of entities that have a heightened importance according to an example embodiment of the present disclosure in some implementations, the set of entities that have a heightened importance to the user can be referred to as a “shot list”.
- the user interface 1500 can provide a scrollable list of entities (e.g., entities 1502 and 1504 ) that the user can manage (e.g., delete, prioritize, etc.).
- entities e.g., entities 1502 and 1504
- the user can combine entities, remove entities, manually add an entity, or other actions.
- the user can select button 1506 to manually add an entity to the shot list.
- the entities can be assigned different levels of importance.
- the shot list can be manually created or seeded by the user or can be auto populated with entities that are frequently commonly recognized within images captured by the mobile image capture device.
- a user may optionally elect to have their entire photographic library (e.g., including images not captured by the mobile image capture device) analyzed to seed the shot list.
- a representative image can be provided for each entity.
- Entities in the shot list can include people or other semantic entities.
- the user may be presented with information or statistics regarding images of such entity over time.
- the information or statistics can provide a justification as to why such entity was automatically added to the shot list.
- the user presses and holds on a particular representative image of an entity one or more of the representative images of the entities may be switched into a deletion visualization which enables the user to x-out or otherwise delete particular entities from the shot list.
- the shot list is a persistent list that is maintained over time and passed back and forth between and updated by the user computing device and the mobile image capture device.
- the shot list can be session-specific.
- one or more visualizations can be provided that show how importance of certain entities has changed over time or demonstrates relative importance of entities versus other entities.
- one or more reflections can be recomposed by the user computing device and/or mobile image capture device to better reflect the updated shot list.
- a user might navigate to user interface 1500 and delete certain entities that were automatically added to the shot list. For example, the deleted entities may have been bystanders that were frequently captured in images.
- the user computing device can respond by recomposing the reflection to filter out or blur the bystander from images or wholly eliminate images that depict the bystander.
- FIG. 16 depicts an alternative user interface 1600 to enable selection and management of entities that have a heightened importance according to an example embodiment of the present disclosure.
- user interface 1600 provides representative images of entities included in the shot list, where the relative size of the representative image is indicative of a frequency at which the corresponding entity is depicted in captured imagery.
- the representative image 1602 is relatively larger than the representative image 1604 . Therefore, the entity depicted in representative image 1602 is more frequently depicted in captured images than is the entity depicted in representative image 1604 .
- FIG. 17 depicts another alternative user interface 1700 to enable selection and management of entities that have a heightened importance according to an example embodiment of the present disclosure.
- the user interface 1700 provides horizontal titles (e.g., horizontal titles 1702 and 1704 ) respectively for the entities included in the shot list.
- the horizontal titles can be scrollable.
- the user interface 1700 can provide information or statistics 1706 regarding images of such entity over time (e.g., “seen in 5 sessions”).
- the information or statistics 1706 can provide a justification or explanation as to why such entity was automatically added to the shot list (e.g., “often close to the camera” or “composed several shots of this entity in editing interface”). Swiping on the horizontal tile may also reveal a button 1708 that enables deletion of the corresponding entity from the shot list.
- the user interfaces 1500 , 1600 , and 1700 are provided as examples only. Many different representations of entities and controls for management thereof can be used according to the present disclosure.
- the application can transition to user interface 1800 of FIG. 18 .
- FIG. 18 depicts an example user interface 1800 to display settings information according to an example embodiment of the present disclosure.
- the user interface 1800 can provide control over settings such as a linked email account; backup and/or storage preferences; automatic backup on/off toggle; help and feedback; and/or tips and tricks.
- the user may be able to toggle between menus for controlling settings associated with the user computing device or associated account and settings associated with the mobile image capture device. For example, if the user selects the “lenses” button, the application can transition to user interface 1900 of FIG. 19 . More particularly, as used with reference to FIGS. 18, 19, and 30 , the term “lens” or “lenses” is used as a nickname or shorthand for the mobile image capture device(s).
- FIG. 19 depicts an example user interface 1900 to display operational data for mobile image capture devices according to an example embodiment of the present disclosure.
- the user interface 1900 can provide information such as state of charge and/or remaining memory availability for a mobile image capture device paired to the user computing device.
- the user interface 1900 can also include a button 1902 that enables a new or additional mobile image capture device to be paired with the user computing device. As one example, if the user selects button 1902 , the application can cause the user computing device to display screen 2000 of FIG. 20 .
- FIG. 20 depicts an example display screen 2000 used in a visual pairing procedure according to an example embodiment of the present disclosure. More particularly, in some implementations, the user computing device and the mobile image capture device are operable to perform visual pairing. In one example, the user computing device displays the screen 2000 which includes a pattern of lines or shapes (illustrated here as a pattern of bubbles).
- the mobile image capture device is operable to capture imagery of the pattern and, in response to capturing the imagery of the pattern, communicatively connect to the user computing device (e.g., using Bluetooth Low Energy advertisements and discovery).
- the pattern can be a visual encoding of a key or other information sufficient to enable communicative connection.
- the pattern can include a pattern of colors in addition to or alternatively to a pattern of shapes.
- the user computing device and the mobile image capture device may have other pairing techniques.
- FIG. 21 depicts an example user interface 2100 to display control options for a mobile image capture device according to an example embodiment of the present disclosure.
- the user interface 2100 can serve as an activity hub for the mobile image capture device during use.
- the user interface application on the user computing device may automatically launch the user interface 2100 when the user uncovers the mobile image capture device.
- the user interface 2100 displays a capture visualization 2102 received from the mobile image capture device.
- display of the capture visualization 2102 in the user interface 2100 is indicative of present operation of the mobile image capture device.
- the capture visualization 2100 will be some abstracted representation of recently captured imagery (e.g., a histogram or other visualization of color, lighting, or other parameters, a cartoon of the scene, a pin-hole view of the scene, etc.) without being the captured imagery itself.
- the capture visualization 2102 can be a representation of an “interestingness” signal of the captured imagery versus time.
- the capture visualization 2102 can be a relatively meaningless metric (e.g., number of beards seen during capture session) that simply represents a silly or fun way to indicate that the mobile image capture device is presently operating.
- the capture visualization 2102 may be based at least in part on one or more recently captured images of the plurality of images. Use of capture visualizations in such fashion enables the user to understand that the mobile image capture device is operating and capturing imagery, but prevents distracting the user from actually enjoying the captured moment by showing detailed imagery for review.
- User interface 2100 can also include a control 2104 for ending the current capture session.
- the end session control 2104 is available only when the mobile image capture device is covered (e.g., a lens cover is placed over the image sensor) and the current capture session is paused.
- the user interface 2100 can also include a control 2106 to delete recently captured imagery.
- the amount of time's worth of imagery that is deleted can be varied based on user input.
- the application can transition to a user interface that enables editing of images included in the selected reflection.
- the user interface can enable both temporal and spatial gesture control in service of photographic “re-composition.”
- FIGS. 22 and 23 provide two examples of such an editing user interface.
- FIG. 22 depicts an example user interface 2200 to enable editing of captured imagery according to an example embodiment of the present disclosure.
- the user interface 2200 represents a core of the image editing user experience.
- the user interface 2200 enables the user to explore the reflection via a sequence of moments.
- example gesture controls to navigate between or within a moment will be discussed below and with further reference to FIGS. 24 and 25 .
- the user interface 2200 will display at least a portion 2202 of a captured image to fill an available display space.
- a record button 2204 , a gallery button 2206 , and a progress bar 2208 can be overlaid on the portion 2202 of the captured image within the display space.
- the progress bar 2208 can provide an indication of the presently displayed image's position with a timeline of the moment or a timeline of the reflection as a whole.
- the images received from the mobile image capture device are wide angle images. Therefore, the user computing device can display a dewarped portion 2202 of the wide angle image within the user interface 2200 .
- the displayed portion 2202 can correspond to a recommended composition, as will be discussed further below.
- the user interface 2200 can enable various gesture controls for temporally navigating between images.
- the user interface 2200 can permit the user to spatially explore a particular image to view other portions of the image or to cause new imagery to be synthesized (e.g., through control of a virtual camera).
- the user can navigate frame-by-frame within a moment by performing a slow swipe or drag gesture.
- the portion 2202 of the image can be replaced by a portion of the previous or next image in the moment (depending on the direction of the drag).
- Such frame-by-frame display of images in a moment can be referred to as visually scrolling the images.
- images within a moment can be cinematically scrolled by sequentially displaying the plurality of images included in the presently displayed moment without translating the plurality of images included in the presently displayed moment relative to the display.
- the series of images included in a moment can be displayed in the style of a “flip book” such that at least a portion of the moment is presented cinematically.
- a user can navigate between moments by performing a fast swipe or drag gesture. For example, in response to a user swipe, the user interface can transition to display of an image from the previous or next moment (depending on the direction of the swipe).
- the displayed image from the previous or next moment can be the last image within the previous moment or first image within the next moment.
- the displayed image from the previous or next moment can be the highlight image selected for such moment.
- the user interface 2200 can transition to the next moment by cinematically scrolling from the first image included in such moment to the highlight image for such moment.
- the user interface 2200 can transition to the previous moment by cinematically scrolling backwards from the last image included in such moment to the highlight image for such moment.
- the user interface 2200 also includes controls for spatially exploring the images included in a reflection. More particularly, the user interface 2200 can enable the user to manipulate or control a virtual camera to spatially explore a particular image (e.g., the currently displayed image).
- the virtual camera controls in combination with advanced computational photography techniques, enable the user to spatially explore a captured scene and compose “new” photographs from a different perspective than the perspective from which the mobile image capture device captured the original image.
- Example techniques for enabling such spatial exploration and control will be discussed with further reference to FIG. 26 below.
- spatial exploration e.g., virtual camera controls
- the user interface 2200 also enables the user to “re-take” one or more photographs and/or videos from the images included in a moment.
- the user presses and quickly releases (e.g., taps) the record button 2204 the currently displayed portion 2202 of the image will be captured as a “new” photograph.
- the user can manipulate the virtual camera to view other portions of the image and capture a “new” photograph of such other portions, as well.
- the new video will include a series of images from the moment (e.g., from the currently displayed image forward) as viewed from the perspective that corresponds to the currently displayed portion 2202 of the image.
- the video includes a series of images from the moment, as viewed from the current perspective of the virtual camera.
- Each image in the video can have edited or otherwise adjusted camera parameters (e.g., focus, lens distortions, lighting, etc.) that would result from the current perspective of the virtual camera.
- the user interface can enable the user to search through multiple reflections' worth of images based on semantic labels or other data.
- a user could select a single item in a picture and the user computing device could search out images that include the same or other similar items.
- a user can select a person and see other images of that person in place by spinning a time based dial, for instance. If ordered in time like this, for example, the user could see their child grow up based on the photos the user has captured of the child over time.
- FIG. 23 depicts an example user interface 2300 to enable editing of captured imagery according to an example embodiment of the present disclosure.
- user interface 2300 illustrates the use of a portion of an image to fill an available display space, while a record button 2304 and a gallery button 2306 are overlaid upon the display space.
- FIG. 24 depicts a flow chart of an example method 2400 to visually scroll images according to an example embodiment of the present disclosure.
- the user computing device navigates to a new moment.
- the user computing device can navigate to a new moment as a result of a reflection being selected from user interface 1400 of FIG. 14 .
- the user computing device can navigate to a new moment from a previously displayed moment.
- the user computing device enables user interaction with image editing interface. For example, the user can scrub or scroll between images contained within the moment or can adjust a perspective of a virtual camera to view a different portion of an image.
- image editing controls can be provided as well.
- the user computing device receives data that describes a tap gesture.
- the user computing device can receive data that describes a tap gesture performed on a portion of the image and not on a record button or a gallery button.
- the tap of the portion of the image can serve as an indication that the user would like to view the moment cinematically.
- a medium speed drag gesture can be used instead of the tap gesture.
- the medium speed drag gesture can be faster than a frame-by-frame drag gesture but slower than a moment-to-moment swipe.
- the user computing device visually scrolls through the images included in the presently viewed moment.
- a velocity at which the plurality of images are visually scrolled is reduced when the at least one highlight image selected for the moment is provided on the display.
- visually scrolling the images in the moment at 2406 can include visually scrolling the plurality of images such that the velocity at which the plurality of images are visually scrolled is incrementally reduced as the at least one highlight image is approaching display.
- visually scrolling the images in the moment at 2406 can include visually scrolling the plurality of images on the display such that the scrolling slows and then stops upon the highlight image.
- the user computing device e.g., the best shot selector or transfer controller
- the user computing device can determine a plurality of tension values respectively for the plurality of images based at least in part on the plurality of annotations respectively associated with the plurality of images. Thereafter, the user computing device can visually scroll the plurality of images at a velocity which is non-constant and which is inversely proportional to the tension value of a currently displayed image.
- images with relatively larger tension values will be displayed for a greater duration than images with relatively smaller tension values, where the magnitude of an image's tension value is indicative of the desirability of the scene depicted by such image.
- visually scrolling the images in the moment at 2406 can include cinematically scrolling the images in the moment in a flip book fashion.
- the user computing device determines a recommended composition for each of the plurality of images based at least in part on the at least one annotation associated with such image.
- the recommended composition for each image may include only a recommended portion of such image.
- the plurality of images in each moment comprise a plurality of wide angle images and the recommended composition for each image includes only an unwarped or dewarped portion of such image.
- visually scrolling the plurality of images at 2406 can include visually scrolling the respective recommended portions of the plurality of images on the display (e.g., the respective unwarped portions).
- the user computing device determines whether visual scrolling is concluded. If visual scrolling is not concluded, then the device returns to 2406 and continues visually scrolling the images. However, if visual scrolling is concluded, then the device proceeds to 2410 .
- an additional gesture control of the present disclosure can include a tap or a medium speed drag on the displayed image to cause visual scrolling of images of the presently viewed moment.
- the user computing device can perform visual scrolling of images within a moment (e.g., in the different fashions described above) immediately upon navigating to a new moment.
- visual scrolling can be performed as an intermediate step between 2402 and 2403 .
- FIG. 25 depicts a flow chart of an example method 2500 to enable navigation in an image editing application according to an example embodiment of the present disclosure.
- the user computing device navigates to a new moment.
- the user computing device can navigate to a new moment as a result of a reflection being selected from user interface 1400 of FIG. 14 .
- the user computing device can navigate to a new moment from a previously displayed moment.
- the user computing device enables user interaction with the image editing interface. For example, the user can adjust a perspective of a virtual camera to view a different portion of a currently displayed image.
- Various other image editing controls can be provided as well.
- the user computing device receives data that describes a drag gesture.
- the drag gesture can be a single contact point moved in a linear (e.g., horizontal) direction.
- the user computing device determines whether the speed of the drag gesture exceeds a threshold speed. If the speed of the drag gesture does exceed the threshold speed, then the user device computing device returns to 2502 and navigates to a new moment.
- navigating to a new moment at 2502 can include translating one of the images included in the presently displayed moment off of the display while translating one of the images included in the other moment onto the display. This has the effect of visually announcing the transition between moments, similar to the frame by frame presentation of a comic book, and provides a distinct visual contrast to cinematic scrolling of images within a moment.
- navigating to a new moment at 2502 can include transitioning from a currently displayed image to an image from the previous or next moment (depending on the direction of the drag gesture).
- the image from the previous or next moment can be the last image within the previous moment or first image within the next moment.
- the displayed image from the previous or next moment can be the highlight image selected for such moment.
- navigating to the next moment at 2502 can include cinematically scrolling from the first image included in such moment to the highlight image for such moment.
- the navigating to the previous moment at 2502 can include cinematically scrolling backwards from the last image included in such moment to the highlight image for such moment.
- the user computing device proceeds to 2510 and the visually scrolls through the images included in the moment.
- visual scrolling can be performed according to any of the techniques discussed above with respect to method 2400 .
- the visual scrolling can include simply advancing frame-by-frame within the moment until the user discontinues the drag gesture.
- the user computing device After the user computing device has visually scrolled through the images included in the moment, the user computing device returns to 2504 and enables user interaction with the image editing interface.
- FIG. 26 depicts a flow chart of an example method 2600 to enable editing of captured imagery according to an example embodiment of the present disclosure.
- the user computing device navigates to the next image.
- the user computing device may navigate to the next image as a result of visually scrolling or scrubbing images within a moment.
- the image is a wide angle image.
- the user computing device obtains a recommended composition for the image.
- the user computing may have previously determined the recommended composition for such image based on one or more annotations associated with such image.
- the recommended composition includes a dewarped portion of the wide angle image.
- the user computing device projects the wide angle image onto a curved surface.
- the curved surface can be a hemisphere.
- the user computing device provides a user interface that enables a user to manipulate a perspective of a virtual camera to view different portions of the wide angle image as projected onto the curved surface.
- the user interface is provided with an initial perspective of the virtual camera corresponding to the recommended composition obtained at 2604 .
- the user computing device can provide an interactive user interface that permits the user to reposition and/or reorient the virtual camera to gain a different perspective of the wide angle image projected onto a curved surface.
- controls can be provided for camera orientation, camera position (and movement thereof); and camera orbit.
- the virtual camera can be controlled according to any suitable control scheme, including, for example, according to various multi-touch gestures.
- a new image that corresponds to the selected perspective can be determined by recalculating one or more camera parameters (e.g., focus, lens distortions, lighting, etc.) that would result from the new perspective.
- camera parameters e.g., focus, lens distortions, lighting, etc.
- advanced image processing techniques such as superresolution, hyper-lapse, texture mapping, depth mapping, view synthesis, etc. can also be applied to output synthetic or computed images that are generated from a combination of the transferred images.
- controls may be provided for ISO, depth of field, stabilization, blur/focus, and other image parameters or characteristics.
- the user can be provided with the ability to selectively blur certain faces included in the image.
- providing the interactive user interface at 2608 can include adjusting the position of the virtual camera to a new position in response to a user input, where the new position is different than a capture position at which the mobile image capture device captured the wide angle image.
- providing the interactive user interface at 2608 can further include performing view synthesis with respect to the wide angle image and at least one other image that is temporally adjacent to the wide angle image to generate a synthesized view of a scene depicted by the wide angle image from the new position.
- the user computing device can implement a computational photographer to perform view synthesis with respect to a series of temporally adjacent images to generate synthesized views of the scene.
- the synthesized views can be displayed within the user interface at 2608 .
- the user computing device receives user input selecting the current perspective of the virtual camera.
- the user input can include a tap of a record button included in the user interface.
- the user computing device dewarps the wide angle image.
- the user computing device non-destructively crops the dewarped image to obtain a narrow angle image that corresponds to the selected perspective of the virtual camera.
- the user computing device stores the “new” narrow angle image.
- the narrow angle image can be added to a gallery for the presently viewed reflection.
- the narrow angle image can be added directly to a camera roll.
- the user interface and associated editing tools described above empower the user to compose the photograph the user would have taken, had she been able to freeze time, explore the nuances of a moment, take out her camera or phone without forcing persons around her to alter their behavior, open a camera application, figure out the best way to hold the camera, and then capture the image.
- the systems and methods of the present disclosure provide superior results while saving time, effort, and management anxiety.
- FIG. 27 depicts an example user interface 2700 to display captured images according to an example embodiment of the present disclosure.
- the user interface 2700 can enable the user to review the photos and/or videos the user has “re-taken” from the current reflection or from all reflections (e.g., photos 2702 and 2704 ).
- the user can access photos and videos, scroll through photos and videos, and select a particular photo or video to share or delete. Selecting a particular photograph or video may bring up a full resolution version of the photo or video, with additional editing and share controls.
- the gallery acts as a “scratch-disk” to the user computing device's default camera roll.
- the camera roll can also include photographs captured by a camera of the user computing device.
- the generated images can be treated as if they were captured by the user computing device. Further, the user is given the sensation that they have “captured” new images through the editing process.
- the user interface 2200 can also include a control 2210 to access an action sheet. If the user selects the control 2210 , the application can transition to an action sheet user interface 2800 as illustrated in FIG. 28 .
- FIG. 28 depicts an example user interface 2800 to enable selection of features within an image editing application according to an example embodiment of the present disclosure.
- the user interface 2800 can serve as a hub for management of a presently viewed reflection.
- the user interface 2800 can provide controls for editing reflections; sharing reflection; generating a photo album; exporting reflections as a video; combining a particular reflection with another reflection; accessing a backup control screen; or deleting a reflection from the user computing device. If the user selects the control to edit the reflection, then the application can transition to a user interface 2900 of FIG. 29 .
- FIG. 29 depicts an example user interface 2900 to edit a reflection at the moment-level according to an example embodiment of the present disclosure.
- the user interface 2900 can enable the user to delete undesirable moments from a reflection.
- the user can navigate between moments by swiping or by selecting a representative icon of such moment from a timeline at a bottom of the interface 2900 , such as icons 2904 and 2906 .
- the user can delete a presently displayed moment 2902 by swiping away or by selecting the delete button 2908 .
- the user can confirm desirability of the moment 2902 by selecting the keep button 2910 .
- the user can also bring up additional options for the presently displayed moment 2902 by selecting the menu control 2912 .
- the user can re-arrange moments, for example, by long pressing and then dragging the moment to drop between other moments.
- FIG. 30 depicts an example user interface 3000 to enable sharing of images according to an example embodiment of the present disclosure.
- the user interface 3000 can provide controls for sharing via SMS messaging, email, social media applications, or other sharing channels.
- the user interface 3000 can also provide the ability for the user to prompt the user computing device to search for nearby computing devices associated with other users.
- the user computing device or the mobile image capture device under instruction of the user computing device
- the mobile image capture device can use short-range radio broadcasts to locate nearby devices.
- the user interface 3000 can provide a secure URL that the user can copy and provide to other users to enable access to a reflection.
- sharing functionality described above may be accomplished through communication by the user computing device or the mobile image capture device with a server computing device.
- the server computing device can retain a data store of captured images and can facilitate sharing with other persons and/or devices.
- sharing of data can include sharing the raw images that form a reflection, so that additional users can optionally “re-take” “new” images for themselves from the same data, according to the editing interfaces discussed above.
- the user computing device uploads to the server computing device only images that are requested for upload to the server computing device during or as a result of a user-controlled editing session. Thus, no images are uploaded to the server computing device absent uploading instructions from the user. Therefore, all personal data is maintained under control of the user at his or her personal device.
- the user computing device can infer person-based sharing intents from recognition within a reflection.
- the mobile image capture device is operable to perform face recognition with respect to each of a plurality of images included in a reflection to recognize one or more faces depicted in the plurality of images.
- the user computing device can be operable to: enable the user to share the one or more images received from the mobile image capture device with one or more contacts; determine one or more relationships between the one or more contacts with whom the one or more images are shared and the one or more faces depicted in the shared images; and suggest, with respect to subsequent images received from the mobile image capture device in which the one or more faces are recognized, that the user share such subsequent images with particular ones of the one or more contacts based at least in part on the one or more relationships.
- FIG. 31 depicts an example user interface 3100 to display an album of images according to an example embodiment of the present disclosure.
- the user computing device can automatically generate an album for a reflection without requiring user-guided editing.
- the automatically generated album can include at least one highlight image selected from each moment of the reflection (e.g., images 3102 and 3104 ), for example, according to the techniques discussed above.
- the highlight images can also be non-destructively cropped according to the recommended compositions determined for such images.
- the user interface 3100 can provide controls for accepting or deleting an automatically generated album or for accepting or deleting particular images within an automatically generated album.
- a delete button 3106 can be selected to delete the automatically generated album
- a keep button 3108 can be selected to keep the automatically generated album (e.g., add to camera roll).
- server processes discussed herein may be implemented using a single server or multiple servers working in combination.
- Databases and applications may be implemented on a single system or distributed across multiple systems. Distributed components may operate sequentially or in parallel.
- FIGS. 13, 24, 25, and 26 respectively depict steps performed in a particular order for purposes of illustration and discussion, the methods of the present disclosure are not limited to the particularly illustrated order or arrangement.
- the various steps of the methods 1300 , 2400 , 2500 , and 2600 can be omitted, rearranged, combined, and/or adapted in various ways without deviating from the scope of the present disclosure.
- the present disclosure is generally discussed with reference to mobile image capture devices, the present disclosure is also applicable to other forms of image capture devices, as well, including, for example, surveillance cameras, security systems, dashboard cameras, robotic control system cameras, or other image capture devices. Further, aspects of the present disclosure, such as the curation and editing portions, can be applied to imagery captured from any other camera at any time.
Abstract
The present disclosure provides an image capture, curation, and editing system that includes a resource-efficient mobile image capture device that continuously captures images. In particular, the present disclosure provides low power frameworks for controlling image sensor mode in a mobile image capture device. On example low power frame work includes a scene analyzer that analyzes a scene depicted by a first image and, based at least in part on such analysis, causes an image sensor control signal to be provided to an image sensor to adjust at least one of the frame rate and the resolution of the image sensor.
Description
The present disclosure relates generally to an image capture, curation, and editing system that includes a resource-efficient mobile image capture device that continuously captures images. More particularly, the present disclosure relates to low power frameworks for controlling image sensor mode in a mobile image capture device.
An image capture device can capture images from various perspectives, which may be useful for various objectives. As one example application, a mobile image capture device can be used to perform life logging, in which images are captured by the mobile image capture device over a period of time to document various events that occur during the user's daily life. Life logging can be performed to assist in memory retention in the elderly, to share the user's perspective or experience with other persons, or to simply document the various events that the user experiences so that the user can revisit such events in the future and enjoy their recollection. For example, a parent may enjoy reviewing images of their child blowing out candles on a birthday cake.
Thus, a mobile image capture device can be used to capture particular events in a person's life in much the same manner as the person would use a traditional camera to record such events. However, a mobile image capture device may provide the further benefit that the user does not have to actively operate a camera during the event to capture imagery of the event. Instead, the user is able to fully engage in and enjoy the event while the mobile image capture device captures imagery of the event. For example, the parent can enjoy and participate in their child blowing out candles on the birthday cake without the distraction of operating a camera, while still obtaining imagery of the scene to enjoy at a later time.
Furthermore, a mobile image capture device may be relatively more adept at capturing and curating imagery of candid moments versus a traditional camera. In particular, people commonly pose or otherwise unnaturally change their expression when a camera is used to take a photograph. In this sense, a mobile image capture device may be able to capture images which more accurately reflect true user experiences, such as laughter during conversation or a genuine but fleeting smile, while traditional cameras are more limited to the images in which the subjects adopt a common pose or “say cheese”.
As another example application, mobile image capture devices may be particularly advantageous where capturing a record of the user's perspective or associated events is a matter of public safety or has legal significance. For example, mobile image capture devices may be particularly advantageous in situations such as recording the perspective of a law enforcement officer when interacting with a member of the public.
However, a primary challenge faced by the design and use of mobile image capture devices is the resource-limited environment in which they operate. In particular, the design and use of mobile image capture devices is typically subject to the following constraints: a limited amount of memory to be used for image storage over a significant period of time; a limited amount of processing power or capability to continuously process imagery; a limited amount of energy available to operate over an extended period of time; and/or a limited amount of thermal power that can be dissipated (i.e., a device temperature that should not be exceeded so as to prevent overheating of the device or discomfort for the user, who may in some instances wear the mobile image capture device).
More particularly, mobile image capture devices typically store captured imagery at a local memory for at least an initial period of time until such imagery can be transferred or transmitted to another device. However, due to memory component cost, size, or other factors, the mobile image capture device typically will have only limited memory resources to dedicate toward storage of captured imagery. In the scenario in which the mobile image capture device is worn and operated for hours at a time (if not longer), the limited memory resources results in the device being unable to simply store a continuous stream of hours' worth of high resolution images. Furthermore, even if the mobile image capture device had sufficient memory resources to store such continuous stream of hours' worth of images, this would present an additional problem of requiring the user to cull a massive amount of images to try and pick the best or most desirable ones.
As another example, mobile image capture devices are typically powered by a battery. Thus, in the most common use cases, the limited power budget provided by a battery must be spread across hours of device operation, if not longer. Therefore, operations performed by the mobile image capture device which require or otherwise draw significant amounts of power must be limited or otherwise not continuously or commonly performed. As examples, the compression, storage, and transmission of images are the portions of a typical image processing cycle which consume the most significant amounts of power. Thus, in addition to a memory consumption problem, the compression and storage of massive amounts of imagery is an infeasible device design for the typical power budget provided by an on-board battery.
Similarly, despite advances in the size and ability of image processing chips, mobile image devices will still typically have a limited amount of computational power which can be employed at any given moment in time.
Further, the resource constraints described above are typically highly interrelated. For example, even given an unlimited power, computation, and memory budget, continuous performance of high power processing operations would cause the mobile image capture device to dissipate heat at a level that would cause discomfort for the user.
Thus, the memory, processing, power, and thermal constraints associated with a mobile image capture device collectively represent one of the most challenging limitations to the design and operation of a mobile image capture device.
As such, resource-efficient mobile image capture devices are desirable. In particular, mobile image capture devices that continuously capture imagery while providing additional advanced features in a resource-efficient manner are needed.
Aspects and advantages of the present disclosure will be set forth in part in the following description, or may be obvious from the description, or may be learned through practice of embodiments of the present disclosure.
One example aspect of the present disclosure is directed to a resource-efficient image capture device. The image capture device includes an image sensor that provides raw image data. The image sensor is operable to receive an image sensor control signal and to adjust, based at least in part on the image sensor control signal, at least one of a frame rate and a resolution of the image sensor. The image capture device includes an imaging pipeline that streams the raw image data and processes the raw image data to generate one or more first images. The image capture device includes a temporary image buffer that temporarily stores the one or more first images. The image capture device includes a scene analyzer that analyzes a scene depicted by at least one of the one or more first images and, based at least in part on such analysis, causes the image sensor control signal to be provided to the image sensor to adjust at least one of the frame rate and the resolution of the image sensor.
Another example aspect of the present disclosure is directed to a method for operating an image capture device. The method includes outputting, by an image sensor of the image capture device, raw image data. The image sensor is capable of adjusting at least one of a frame rate and a resolution in response to an image sensor control signal. The method includes streaming, by an imaging pipeline of the image capture device, the raw image data from the image sensor. The method includes processing, by the imaging pipeline, the raw image data to generate a first image. The method includes analyzing, by the image capture device, a scene depicted by the first image. The method includes providing, by the image capture device based at least in part on the analysis of the scene depicted by the first image, the image sensor control signal to cause the image sensor to adjust at least one of the frame rate and the resolution.
Another example aspect of the present disclosure is directed to a mobile image capture device that is operable in at least a regular capture mode and a burst capture mode. The image capture device includes an image sensor that provides raw image data. The image capture device includes an imaging pipeline that streams the raw image data from the image sensor and processes the raw image data to generate a plurality of images. The image capture device includes a scene analyzer. When the image capture device is operative in the regular capture mode, the scene analyzer analyzes a scene depicted by each of the images. When the scene analyzer determines that the scene depicted by one of the images is desirable, the scene analyzer transitions the image capture device into the burst capture mode.
These and other features, aspects, and advantages of the present disclosure will become better understood with reference to the following description and appended claims. The accompanying drawings, which are incorporated in and constitute a part of this specification, illustrate embodiments of the present disclosure and, together with the description, serve to explain the principles of the present disclosure.
A full and enabling description of the present disclosure, directed to one of ordinary skill in the art, is set forth in the specification, which makes reference to the appended figures, in which:
The present disclosure provides systems and methods for selective retention and editing of images captured by a mobile image capture device. In particular, an example system of the present disclosure includes a resource-efficient mobile image capture device that is selectively communicatively coupleable with a user computing device such as a smartphone, laptop, or tablet. When operative, the mobile image capture device can continuously capture frames of imagery and can selectively retain certain of such frames of imagery. The user computing device can perform image curation, editing, storage, sharing, and other tasks. The system can be used for life logging or other immersive image capture experiences or objectives.
More particularly, according to an aspect of the present disclosure, the mobile image capture device includes on-device intelligence that assists in selecting only certain of the captured images for compression and storage. As an example, the mobile image capture device can include a scene analyzer that analyzes a scene depicted by an image to assess a desirability of such scene and, based at least in part on such desirability, determines whether to store such image and/or one or more other contemporaneous images or to discard such image and/or other images without further storage. In some implementations, the scene analyzer includes one or more neural networks, such as deep neural networks or other multi-layer non-linear models which output descriptors of the desirability of the scene of an input image. As compression, storage, and transmission of images are the stages of the image processing cycle which require the largest energy expenditure, the selective retention of imagery as guided by the on-device intelligence drastically reduces the power consumption of the mobile image capture device and enables superior performance given limited energy resources (e.g., a battery) and device temperature constraints. Likewise, the selective retention of imagery as guided by the on-device intelligence also drastically reduces the memory consumption of the mobile image capture device over time.
Furthermore, the mobile image capture device can operate according to a number of different capture modes. For example, the different capture modes can correspond to various combinations of different image resolutions and frame rates. Further, the different capture modes may have different energy consumption characteristics or profiles. For example, a capture mode with a larger image resolution and/or frame rate will typically require larger energy expenditure by the device.
Thus, according to another aspect of the present disclosure, the on-device intelligence of the mobile image capture device (e.g., the scene analyzer), can also make control decisions regarding the capture mode of the image capture device. For example, if the scene analyzer determines that a recently captured image depicts a scene that is highly desirable, the scene analyzer can transition the image capture device into a capture mode that has a larger image resolution and/or frame rate, thereby capturing more high resolution images of the desirable scene. In such fashion, the mobile image capture device can reserve operation in capture modes that consume relatively larger amounts of energy for periods of time in which relatively more interesting or desirable scenes are available for image capture, while operating in energy-conserving capture modes during periods of time in which the scenery available for capture is relatively less interesting or desirable.
In some implementations, in addition to frame rate and resolution, the on-device intelligence (e.g., the scene analyzer) of the mobile image capture device can adjust one or more of exposure time, gain, region of interest or crop, binning mode, or other parameters of the image capture device based on an analysis of captured imagery. For example, control signals can be provided to an image sensor of the mobile image capture device to control the above described parameters. In some implementations, the above noted parameters can be adjusted without changing between capture modes of the image capture device. However, different capture modes of the image capture device may respectively correspond to different settings for the above noted parameters.
Furthermore, as will be discussed further below, the mobile image capture device can have a low power framework that has different configurations and/or workflows respectively for the number of different capture modes. Thus, the advanced scene analysis and control features of the mobile image device enable operation of the mobile image capture device for significant periods of time despite having power source, memory availability, computational power, and device temperature constraints.
According to another aspect of the present disclosure, the user computing device can perform image curation and enable user editing of the images. In particular, in some implementations, when connected to the mobile image capture device (e.g., after a capture session has been completed), the user computing device can select a certain set of the images stored at the image capture device for transfer to the user computing device. For example, such selection can be guided by various image attributes as reflected in various metadata annotations provided by the mobile image capture device respectively for the stored images during the real-time operation. Generally, the most desirable images will be selected for transfer, while maintaining a diversity of imagery. The user computing device can also provide a user interface that enables the user to selectively edit the transferred images. In particular, the user interface can enable various advanced image editing techniques such as computational photography, camera repositioning, etc.
Collectively, the user interface and associated editing tools empower the user to compose the photograph the user would have taken, had she been able to freeze time, explore the nuances of a moment, take out her camera or phone without forcing persons around her to alter their behavior, open a camera application, figure out the best way to hold the camera, and then capture the image. Ultimately, the systems and methods of the present disclosure provide superior results while saving time, effort, and management anxiety. In particular, in some implementations of the present disclosure, the mobile image capture device has a low power framework that leverages one or more machine learned models to control image storage and capture mode based on image desirability, thereby eliminating the energy consumption associated with storage and capture of less desirable images.
In some implementations, the mobile image capture device includes a lens cover; one or more lenses (e.g., a wide angle lens); an image sensor; an imaging pipeline that contains one or more image processing components; the scene analyzer; one or more inertial motion units (IMUs); a network interface; and a power source such as a battery. The mobile image capture device can also include one or more processors and one or more memory units, including, for example, volatile memory (e.g., DRAM) and non-volatile memory (e.g., flash memory).
In some implementations, at least during some modes of operation, the mobile image capture device continuously captures the plurality of images (e.g., continuously captures images at a frame rate of at least one frame per second). However, as noted above, the mobile image capture device may ultimately store only certain selected ones of the continuously captured images.
In one example implementation, the lens cover of the mobile image capture device can be manually adjustable between a position that optically blocks the lens and image sensor and a position that does not optically block the lens and image sensor. When the lens cover is placed into the position that optically blocks the lens and image sensor, the mobile image capture device responds by operating in an ultra-low power mode in which images are not actively captured. However, when the lens cover is removed or otherwise placed into a position that does not optically block the lens and image sensor, the mobile image capture device can operate to continuously capture and process the plurality of images, as described above.
In particular, according to an aspect of the present disclosure, in some modes of operation, the mobile image capture device can be operable to capture a plurality of images that respectively depict a plurality of scenes; maintain a first copy of each of the plurality of images in a temporary image buffer; determine at least one descriptor of the desirability of the scene depicted by at least one of the images; and determine, based at least in part on the at least one descriptor of the desirability of the scene of the at least one image, whether to store a second copy of such image and/or one or more of the other images in a non-volatile memory of the mobile image capture device or to discard the first copy of such image(s) from the temporary image buffer without storing a second copy of such image(s) in the non-volatile memory. In other modes of operation, which will be discussed further below, imagery can be stored in the non-volatile memory without scene analysis.
More particularly, as noted above, the mobile image capture device can include a scene analyzer which, at least in some modes of operation, is implemented to analyze a desirability of the scene of an image to determine whether to store such image and/or one or more other contemporaneous images. For example, in one example implementation, the mobile image capture device captures (and buffers) a sequence of frames close to each other in time (e.g. a three second “video” at fifteen frames per second). The scene analyzer can analyze only a subset of the frames (e.g. three of the forty-five frames included in the “video”) to determine the desirability of the scene depicted by the frames. Based on such analysis, the scene analyzer can determine whether to save all or part of the sequence of frames. The scene analyzer may also adjust the capture mode of the camera or other capture parameters such as frame rate, resolution, exposure, gain, region of interest, crop, and binning mode based on the analysis of the captured image(s). In addition, in some implementations, the scene analyzer can analyze raw, unprocessed imagery and make or assist in making decisions about processing the imagery with an imaging pipeline.
As an example, in some implementations, the scene analyzer of the mobile image capture device includes at least one neural network and uses such neural network to obtain the at least one descriptor of the desirability of the scene of each analyzed image, as described above. In particular, the scene analyzer can input the image to the at least one neural network and receive the at least one descriptor as an output from that at least one neural network.
As a further example, in some implementations, the at least one neural network of the scene analyzer includes at least one convolutional neural network. As yet another example, in some implementations, the scene analyzer includes a plurality of deep neural networks or other multi-layer non-linear models that respectively analyze a plurality of different characteristics of each input image. Each of the deep neural networks can output at least one descriptor for each image that is input into such deep neural network. As an example, each neural network can provide as output an annotation that describes a characteristic of the scene of an input image. The image can be annotated with the annotation(s).
As examples, the deep neural networks can include one or more of the following: a face detection deep neural network that detects a presence and/or location of one or more faces in the scene of each input image; a face recognition deep neural network that matches one or more faces in the scene of each input image to one or more other faces; a face attributes deep neural network that detects various facial characteristics of one or more faces in the scene of each input image; a face photogenic model that outputs a score which represents a level of photogenicness of a face pose and expression; a facial landmark detection deep neural network that detects one or more facial landmarks such as a position of eyes, a position of nose, or other facial landmarks; an image content deep neural network that outputs one or more semantic labels that describe the scene of each input image; and a photo quality deep neural network that outputs a photo score that describes various photographic quality characteristics of each input image. Various other neural networks which analyze various other characteristics of the input image can be implemented or employed as well. The neural networks can be non-recurrent, recurrent, or a combination thereof. Furthermore, in some implementations, certain neural networks described above (e.g., the face detection neural network) can include or be implemented as a cascade of multiple neural network rather than a single neural network.
In some implementations, the scene analyzer includes at least one multi-headed deep neural network that receives a single set of inputs and provides a plurality of outputs. The plurality of outputs can respectively include a plurality of descriptors of the desirability of the scene of each input image. As one example, two or more of the above described neural networks can be combined to form a multi-headed deep neural network. For example, the face recognition deep neural network can be combined with the face attributes deep neural network to form a multi-headed neural network. In particular, as one example, image portions selected based on the outputs from the face detection deep neural network (e.g., a crop of the image which contains a face detected by the face detection deep neural network) can serve as inputs to a multi-headed neural network which represents a combination of the face recognition deep neural network and the face attributes deep neural network. The multi-headed combination of the face recognition deep neural network and the face attributes deep neural network can output both face recognition output (e.g., a face embedding) and face attribute information rather than having two separate networks for the two purposes.
In some implementations, the output from various portions of the scene analyzer can be used to make better decisions inside an imaging pipeline that processes the images. For example, the output of the face detection deep neural network can be used to set or adjust the exposure in the imaging pipeline in such a way that faces are well-exposed.
According to another aspect of the present disclosure, in some implementations in which the scene analyzer includes a plurality of models such as neural networks, the scene analyzer can also include a model selector that controls which models (if any) an image is input for scene analysis. The model selector can select which models to employ depending on a number of criteria including computational consumption considerations, energy consumption considerations, and/or the results of an initial analysis of the scene of the image. As one example, the model selector can simply implement a predefined schedule or can implement some defined logic regarding an ordering or configuration of models to employ. As another example, the model selector may itself be a model (e.g., neural network), such as a multi-layer non-linear model (e.g., deep neural network).
In some implementations, the model selector includes an attention model that analyzes only a portion of an input image. The attention model can output an indication of whether each input image should be input into at least one of the downstream models for further scene analysis. Thus, the attention model can operate as a prefilter to the other deep neural networks included in the scene analyzer. As one example, the attention model can be a recurrent deep neural network that tracks a face through a succession of images and outputs a probability that each analyzed image depicts the face experiencing joy. The attention model can also output a description of which portion of the next input image the attention model should analyze. In addition, in some implementations, the attention model can also output how much time should pass before capturing and analyzing a second image.
Use of an attention model in this fashion can greatly reduce the energy consumption of the mobile image capture device since the attention model, which limits its capture and/or analysis to only a portion of the images, guards certain downstream models which may analyze the image in its entirety and/or require larger computational expenditure. Further, delaying the period of time recommended by the attention model before again capturing and analyzing imagery can result in power savings. In other implementations, the attention model can be used in place of the other models to guide image storage and/or capture mode decisions. In yet further implementations, one or more of the various deep neural networks discussed above can be replaced with an attention model version of such network.
Thus, the scene analyzer can include a number of models which analyze the scene depicted by an input image and output various descriptors (e.g., annotations) that describe a desirability of the scene of the input image (e.g., describe various image characteristics which impact the desirability of the scene). As noted, the scene analyzer can make intelligent decisions regarding image storage and/or capture mode on the basis of such descriptors. In particular, the scene analyzer can include a save controller, a transfer controller, and/or a mode controller. The save controller can take as input all of the annotations from the models and use such annotations to decide whether or not to process, compress, and/or store the image. The transfer controller can take as input all of the annotations from the models and use such annotations to decide whether or not to send the image. In other implementations, the transfer controller is included in a user computing device rather than the image capture device. The mode controller can determine whether to change the capture mode of the mobile image capture device on the basis of such annotations. The save controller, the transfer controller, and the mode controller can be separate components or can be combined into a single component.
According to yet another aspect of the present disclosure, in some implementations, the mobile image capture device is further operable to receive data that describes a set of entities having an elevated importance to a user of the mobile image capture device. For example, the set of entities may include one or more faces or semantic entities (e.g., “mountains,” “playground,” or “Eiffel tower”). As one example, the mobile image capture device is operable to perform face recognition with respect to one or more of the captured images to recognize one or more faces depicted in the plurality of images. Thereafter, the user computing device can enable the user to select one or more of the recognized faces as having a heightened importance to the user.
Such set of entities having an elevated importance to the user of the mobile image capture device can be communicated back and forth between the user computing device and the mobile image capture device and can impact both capture and editing decisions. As one example, the mobile image capture device can increase a probability of storing captured images which depict the one or more selected faces. For example, the scene analyzer can include a face recognition model which compares embeddings of the set of selected faces to embeddings of faces detected within captured images and outputs a probability of match, where images that include matches are more likely to be selected for compression and storage. As another example, during editing, faces that do not correspond to faces included in the set of faces having heightened importance can be automatically blurred or otherwise defocused. Systems of the present disclosure can perform many other intelligent operations given knowledge of the set of entities that have elevated importance to the user.
According to another aspect of the present disclosure, each mobile image capture device may be operable to communicate with other mobile image capture devices that are located within the same general area. As one example, the mobile image capture device may be operable to transmit an excitement signal that is wirelessly receivable by one or more other mobile image capture devices that are located proximate to the mobile image capture device. The excitement signal indicates that the scene depicted by one of the plurality of images recently captured by the mobile image capture device has a relatively large desirability. Thus, the mobile image capture device may send wireless signals (e.g., Bluetooth Low Energy broadcasts) to alert nearby devices that an interesting scene is available for capture.
Furthermore, in some implementations, in response to receipt of the excitement signal, the one or more other mobile image capture devices perform at least one of the following: increase a probability that the other mobile image capture device will store a non-temporary copy of a recently captured image; attempt to identify a match for one or more embeddings included in the excitement signal within the recently captured image; and adjust one or more of a frame rate, a gain, an exposure time, a region of interest, a crop, a binning mode, and a resolution of an image sensor of the other mobile image capture device.
According to yet another aspect of the present disclosure, in some implementations, the mobile image capture device is operable to periodically provide a capture visualization to the user computing device for display by the user computing device. In particular, display of the capture visualization by the user computing device is indicative of present operation of the mobile image capture device. Typically, the capture visualization will be some representation of recently captured imagery (e.g., a histogram, icon, etc.) without being the captured imagery itself. Thus, the capture visualization may be based at least in part on one or more recently captured images of the plurality of images. Use of capture visualizations in such fashion enables the user to understand that the mobile image capture device is operating and capturing imagery, but prevents distracting the user from actually enjoying the captured moment by showing detailed imagery for review.
According to another aspect of the present disclosure, the mobile image capture device can include a low power framework for processing imagery. One example low power framework of the present disclosure includes an image sensor that provides raw image data; an imaging pipeline that streams the raw image data from the image sensor and processes the raw image data to generate one or more first images; a temporary image buffer that temporarily stores the first image(s); and the scene analyzer, as described above. The low power framework can further include a compression component that compresses the first image(s) only when the scene analyzer analyzes at least one of the one or more first images and determines that the first image(s) should be non-temporarily stored. The low power framework can further include a non-volatile memory to which the first image(s) is/are written after compression.
As noted above, the mobile image capture device can be operable in a number of different image capture modes. The scene analyzer can control the capture mode of the mobile image capture device depending upon its analysis of the scenes of recently captured images. More particularly, in some implementations, the image sensor of the mobile image capture device is operable to receive an image sensor control signal and to adjust, based at least in part on the control signal, of a frame rate and/or a resolution at which the image sensor captures imagery. Thus, depending upon its analysis of the scenes of recently captured images, the scene analyzer can cause the image sensor control signal to be provided to the image sensor to adjust the frame rate and/or the resolution of the image sensor.
As one example, in some implementations, when the scene analyzer determines that the scene depicted by the first image is desirable, the scene analyzer increases at least one of a frame rate or a resolution at which the image sensor provides the raw image data. Likewise, when the scene analyzer determines that the scene depicted by the first image is not desirable, the scene analyzer decreases at least one of a frame rate or a resolution at which the image sensor provides the raw image data.
As another example, in some implementations, the image capture device is operable in at least a low resolution capture mode, a high resolution capture mode, and a burst capture mode. During regular operation, the image capture device periodically transitions between the low resolution capture mode and the high resolution capture mode. When the scene analyzer determines that a particular scene depicted by a particular image is desirable, the scene analyzer causes the image capture device to transition to the burst capture mode or otherwise increase the frame rate and/or the resolution. In some implementations, the image capture device may be further operable in a hyper-lapse capture mode.
In addition, the low power framework may have varying workflows or configurations depending upon the capture mode of mobile image capture device. In particular, the scene analyzer of the image capture device can perform different roles of varying importance depending upon the current capture mode of the image capture device. Thus, control of image capture mode based on scene analysis can have energy consumption benefits, as tasks which require larger energy expenditure (e.g., processing, compression, and storage of high resolution imagery) can be limited to situations in which the scene analyzer has determined that a desirable scene is currently available for image capture.
In some implementations, in the low resolution capture mode, the image sensor performs binning to provide low resolution raw image data; the imaging pipeline streams the low resolution raw image data from the image sensor and processes the low resolution raw image data to generate a low resolution version of each of the one or more first images; the temporary image buffer temporarily stores the low resolution version(s) of the first image(s); and the scene analyzer analyzes the low resolution version of at least one of the first image(s) to determine whether to non-temporarily store the low resolution version(s) of the first image(s) (e.g., in a non-volatile memory) or to discard the low resolution version(s) of the first image(s) (e.g., without storing it in the non-volatile memory).
Likewise, in some implementations, in the high resolution capture mode, the image sensor provides high resolution raw image data (e.g., does not perform binning at the sensor); the image capture device further comprises a temporary raw data buffer that temporarily stores the high resolution raw image data; the image capture device further comprises a down sampler that streams the high resolution raw image data from the image sensor and down samples the high resolution raw image data to output low resolution raw image data; the imaging pipeline streams the low resolution raw image data from the down sampler and processes the low resolution raw image data to generate a low resolution version of each of the one or more first images; the temporary image buffer temporarily stores the low resolution version(s) of the first image(s); and the scene analyzer analyzes the low resolution version of at least one of the first image(s) to determine whether to non-temporarily store the first image(s) or to discard the first image(s). The down sampler can be positioned at the beginning of the imaging pipeline or positioned at the end of the imaging pipeline. Placing the down sampler at the beginning of the imaging pipeline provides increased power/energy savings but will typically requires a trade off in image quality.
Furthermore, in some implementations, in the high resolution capture mode, when the scene analyzer determines that the first image(s) should be non-temporarily stored, the imaging pipeline receives the high resolution raw image data from the temporary raw data buffer and processes the high resolution raw image data to generate high resolution version(s) of the first image(s). The compression component compresses the high resolution version(s) of the first image(s) for storage at the non-volatile memory.
More generally, in some implementations, in the high resolution capture mode, the mobile image capture device is operable to: maintain data sufficient to generate a high resolution temporary copy of each of the plurality of images; input a low resolution copy of at least one of the plurality of images into the at least one neural network; and determine, based at least in part on the at least one descriptor of the desirability of the scene of the at least one image, whether to store a high resolution non-temporary copy of such image and/or one or more contemporaneous images in the memory of the mobile image capture device or to discard the high resolution temporary copy of such image and/or one or more other images without storing a non-temporary copy of such images.
In some implementations, in the burst capture mode, the image capture device captures high resolution images at a high frame rate and performs imaging pipeline operations, compression, and storage at the non-volatile memory for all of the captured high resolution images, with little to no scene analysis. As one particular example, in the burst capture mode, the imaging pipeline can stream the raw image data from the image sensor and process the raw image data to generate a second image. The second image can bypass the scene analyzer and be provided to the compression component for compression and then storage at the non-volatile memory. Thus, during the burst capture mode, the image capture device can dedicate its limited resources to compression and storage of high resolution imagery, rather than scene analysis (or at least the most resource consuming portions thereof).
In some implementations, the image capture device can perform scene analysis on images without processing or prior to processing the image using the imaging pipeline. For example, in some implementations, the scene analysis models can be trained to operate on raw images rather than processed images which have passed through the imaging pipeline. In particular, raw images can be used as training examples for the models. Thus, the “full” imaging pipeline can be dependent on a scene analysis result. In such configuration, resources can be saved by not running the imaging pipeline on images which are not desirable.
According to another aspect of the present disclosure, the systems of the present disclosure include a user computing device that is communicatively connectable to the mobile image capture device. In particular, the user computing device can perform image curation and enable user editing of the images. The user computing device can also enable storage, sharing, and other image management features.
In some implementations, the user computing device and the mobile image capture device are operable to perform visual pairing. In one example, the user computing device is operable to visually display a pattern. The mobile image capture device is operable to capture imagery of the pattern and, in response to capturing the imagery of the pattern, communicatively connect to the user computing device. For example, the pattern can be a visual encoding of a key or other information sufficient to enable communicative connection. In other implementations, the user computing device and the mobile image capture device may have other pairing techniques.
According to another aspect of the present disclosure, when connected to the mobile image capture device (e.g., after a capture session has been completed), the user computing device can select certain of the stored images for transfer to the user computing device. For example, such selection can be guided by various image attributes as reflected in various metadata annotations provided by the mobile image capture device respectively for the stored images.
As an example, the user computing device can include a transfer controller that determines, based at least in part on at least one descriptor of the desirability of the scene depicted by each image stored in the memory of the mobile image capture device, whether to request transfer of such image and/or one or more other contemporaneously captured images from the mobile image capture device to the user computing device. In particular, in some implementations, the transfer controller can perform an optimization algorithm to select which of the images stored in the memory of the mobile image capture device to request for transfer. The optimization algorithm can have a plurality of associated objectives which include, for example, at least a diversity of settings and a diversity of depicted persons, while still requesting transfer of the most desirable images. In some implementations, the transfer controller can implement a submodular function to select which images to request for transfer.
Furthermore, the images captured by the mobile image capture device can be organized into one or more reflections. A reflection can generally include all images captured during a particular session of usage of the mobile image capture device. For example, images captured during a day hike may be grouped within a single reflection. A reflection can include one or more moments. A moment includes a series of images that are temporally proximate to each other. For example, a moment can include a series of images that were captured over a two to five second time span.
In one aspect of the present disclosure, the user computing device can select one or more highlight images for each moment included in a reflection. For example, selection of highlight images may be performed based on the annotations or other metadata included for each of the images. In some implementations, each image in a moment is normalized relative to its peer images within such moment prior to performing highlight selection. Thus, selection of a highlight image for each moment can be based at least in part on a comparison of the annotations of each image included in such moment relative to the annotations of at least one other image included in such moment.
According to yet another aspect of the present disclosure, the user computing device can also provide a user interface that enables the user to selectively edit the transferred images. In particular, the user interface can enable two modalities of gesture control in service of photographic “re-composition”: temporal and spatial. More particularly, as will be discussed further below, the user can navigate through a sequence of images using a first gesture or set of gestures. The user can also select and then spatially explore a particular image using a second gesture or set of gestures. In particular, the user interface can enable the user to control a virtual camera to photograph a scene after-the-fact, with access to controls for ISO, depth of field, stabilization, camera orientation, camera movement, camera orbit, and other parameters. The user interface can also enable various advanced image editing and exploration techniques by leveraging computational photography, camera repositioning via view synthesis, and other advanced image editing techniques.
In one example feature of the user interface, a user can select a particular reflection for review. The reflection may contain multiple moments, which each consist of a series of images. In response to the user selection, the user computing device can provide a user interface which allows the user to navigate between the moments included in the reflection or to scroll between images contained within a particular moment. For example, a user can navigate between moments by quickly dragging (e.g., swiping) left or right on a touch interface, while the user can scroll between images contained in the particular moment by slowing dragging left or right on the touch interface. Such functionality may be viewed as a shuttle or scrub control.
More particularly, in some implementations, the user computing device can either navigate between moments or images within a moment depending on a speed of a drag gesture performed by the user. As one example, the user computing device can receive data that describes a drag gesture performed by a user and determine whether a speed of the drag exceeds a threshold value. When it is determined that the speed of the drag exceeds the threshold value, the user computing device can transition from a presently displayed moment to another moment included in the reflection. However, when it is determined that the speed of the drag does not exceed the threshold value, the user computing device can visually scroll through the plurality of images included in the presently displayed moment. In some implementations, visual scrolling of images included in a moment can be triggered by a tap gesture from the user in addition or alternatively to a drag gesture.
In some implementations, visually scrolling through the plurality of images included in a moment can include cinematically scrolling, by the user computing device, the plurality of images included in the presently displayed moment by sequentially displaying the plurality of images included in the presently displayed moment without translating the plurality of images included in the presently displayed moment relative to the display. Thus, the series of images included in a moment can be displayed in the style of a “flip book” such that at least a portion of the moment is presented cinematically.
However, in some implementations, to provide a contrast to the cinematic presentation of images contained within a moment, when the user computing device transitions between moments, the user computing device can translate one of the images included in the presently displayed moment off of the display while translating one of the images included in the other moment onto the display. This has the effect of visually announcing the transition between moments, similar to the frame by frame presentation of a comic book.
According to another aspect of the present disclosure, the user computing device can visually scroll a series of images contained in a moment in a fashion which provides enhanced presentation of the at least one highlight image selected for such moment. As one example, when scrolling through images contained in a moment, the user computing device can reduce a velocity at which the plurality of images are visually scrolled when the at least one highlight image is provided on the display. Stated differently, the visual scrolling can pause on the at least one highlight image or the at least one highlight image can have a display duration that is greater than its peer images. As another example, the user computing device can incrementally reduce the velocity at which the plurality of images are visually scrolled as the at least one highlight image is approaching display. For example, the visual scrolling can slow and then stop upon the highlight image.
In some implementations of the present disclosure, the user computing device can determine a plurality of tension values respectively for the plurality of images based at least in part on the plurality of annotations respectively associated with the plurality of images. Thereafter, the user computing device can visually scroll the plurality of images at the velocity which is non-constant and which is inversely proportional to the tension value of a currently displayed image. Thus, images with relatively larger tension values will be displayed for a greater duration than images with relatively smaller tension values, where the magnitude of an image's tension value is indicative of the desirability of the scene depicted by such image.
In some implementations, the user computing device is further operable to determine a recommended composition for each of the plurality of images included in a reflection. For example, the recommended composition for each image can be based at least in part on the at least one annotation associated with such image. In addition, the recommended composition for each image can include a recommended portion of such image. In such implementations, visually scrolling the plurality of images on the display can include visually scrolling only the respective recommended portions of the images on the display. Furthermore, in some implementations, the plurality of images transferred from the mobile image capture device are wide angle images. In such implementations, the recommended composition for each image can include an unwarped portion of such image.
According to another aspect of the present disclosure, the user computing device can enable the user to perform a number of advanced editing features on the transferred images. For example, as noted above, the mobile image capture device can include a wide angle lens, which can result in capture and storage of wide angle images by the mobile image capture device. Thus, as a feature of the editing process, the user computing device can dewarp the wide angle images and output a selected dewarped portion as a narrow angle image. In particular, the user computing device can enable a user to re-position the camera and/or non-destructively crop a certain portion of an image.
As an example, in some implementations, the user computing device is operable to: receive at least a first wide angle image captured by the mobile image capture device; project the first wide angle image onto a curved surface; provide a user interface that enables a user to manipulate a perspective of a virtual camera to view different portions of the first wide angle image as projected onto the curved surface; receive a user input selecting a current perspective of the virtual camera; and in response to the user input, output a first narrow angle image that corresponds to the current perspective of the virtual camera when the user input was received. In some implementations, the curved surface onto which the wide angle image is projected is a hemisphere. The virtual camera can be positionable to view different portions of the concave surface of the hemisphere.
Thus, the user computing device can provide an interactive tool that permits a user to reposition and/or reorient a virtual camera to gain a different perspective of a wide angle image projected onto a curved surface. In particular, controls can be provided for camera orientation, camera position (and movement thereof); and camera orbit. The virtual camera can be controlled according to any suitable control scheme, including, for example, according to various multi-touch gestures.
After the perspective of the camera has been adjusted, a new image that corresponds to the selected perspective can be output by recalculating one or more camera parameters (e.g., focus, lens distortions, lighting, etc.) that would result from the new perspective. In addition, in some implementations of the present disclosure, advanced image processing techniques such as superresolution, hyper-lapse, texture mapping, depth mapping, view synthesis, etc. can also be applied to output synthetic or computed images that are generated from a combination of the transferred images. Likewise, controls may be provided for ISO, depth of field, stabilization, and other image parameters or characteristics.
In particular, the user computing device can receive user input that selects the current perspective of the virtual camera. In one example, the user input can be a press and release (i.e., tap) of a record button included in the user interface or a press and hold of a record button included in the user interface. When the user input is a press and release of the record button, the user computing device can output a still image that corresponds to the current perspective of the virtual camera, as described above. When the user input is a press and hold of the record button, the user computing device can output a video that includes a series of images from the moment, as viewed from the current perspective of the virtual camera. Each image in the video can have edited or otherwise adjusted camera parameters (e.g., focus, lens distortions, lighting, etc.) that would result from the current perspective of the virtual camera, as described above.
According to another aspect of the present disclosure, in some implementations, the user computing device is further operable to determine a recommended composition for one or more (e.g., all) of the transferred images. In some implementations, the recommended composition includes only a portion of a wide angle image (e.g., a dewarped portion). The user computing device can determine the recommended composition based at least in part on the annotations or other metadata associated with the image. For example, the recommended composition may correspond to a portion of the wide angle image that includes only faces that correspond to entities included in the set of entities that have elevated importance to the user.
Furthermore, the user computing device can initialize the virtual camera within the editing user interface such that an initial perspective of the virtual camera corresponds to the recommended composition. For example, the initial presentation of the image within the user interface can display only the portion that corresponds to the recommended composition. However, the user is able to reposition and/or reorient the virtual camera away from the recommended composition.
Thus, the user interface can enable the user to “re-take” one or more photographs and/or videos from the images included in a moment. Once created by the user, the user computing device can store the one or more photographs and/or videos at various locations. As one example, the user can elect to have photographs and/or videos created via the editing interface stored directly to the camera roll of the user computing device. The camera roll can also include photographs captured by a camera of the user computing device. Thus, by outputting images generated according to the present disclosure directly to the camera roll, the generated images can be treated as if they were captured by the user computing device. Further, the user is given the sensation that they have “captured” new images through the editing process.
In another feature, the user computing device can automatically generate an album for a reflection without requiring user-guided editing. For example, the automatically generated album can include at least one highlight image selected from each moment of the reflection, for example, according to the technique discussed above. The highlight images can also be non-destructively cropped according to the recommended compositions determined for such images.
The user computing device can also enable sharing and/or storage of images. Such may be accomplished, in some instances, through communication with a server computing device. In particular, the server computing device can retain a data store of captured images and can facilitate sharing with other persons and/or devices. In some implementations, sharing of data can include sharing the raw images that form a reflection, so that additional users can optionally “re-take” “new” images for themselves from the same data, according to the editing interface discussed above.
In some implementations of the present disclosure, to ensure privacy of the user and those persons depicted in images captured by the mobile image capture device, the user computing device uploads to the server computing device only images that are requested for upload to the server computing device during or as a result of a user-controlled editing session. Thus, no images are uploaded to the server computing device absent uploading instructions from the user. Therefore, all personal data is maintained under control of the user at his or her personal device.
According to another aspect of the present disclosure, the user computing device can infer person-based sharing intents from recognition within a reflection. As one example, in some implementations, the mobile image capture device is operable to perform face recognition with respect to each of a plurality of images included in a reflection to recognize one or more faces depicted in the plurality of images. Further, the user computing device can be operable to: enable the user to share the one or more images received from the mobile image capture device with one or more contacts; determine one or more relationships between the one or more contacts with whom the one or more images are shared and the one or more faces depicted in the shared images; and suggest, with respect to subsequent images received from the mobile image capture device in which the one or more faces are recognized, that the user share such subsequent images with particular ones of the one or more contacts based at least in part on the one or more relationships.
According to another aspect, in some implementations, the mobile image capture device may periodically receive one or more updated versions of one or more models included in its scene analyzer from the user computing device and/or the server computing device. In particular, the one or more updated versions of the one or more models may have been trained (e.g., by a model trainer at the server computing device) on additional data. For example, the additional data can be images that the user created through the editing interface. Thus, in some implementations, the models of the image capture device can be trained on personalized data sets to better infer, capture, and store images which satisfy the particular visual tastes of the user and then can be updated on the image capture device itself.
In some implementations, in order to obtain the benefits of the techniques described herein, the user may be required to allow the collection and analysis of images, location information, a set of entities that have elevated importance to the user, and/or other data associated with the user or the user's mobile computing device(s). Therefore, in some implementations, users may be provided with an opportunity to adjust settings that control whether and how much the systems of the present disclosure collect and/or analyze such information. However, if the user does not allow collection and use of such information, then the user may not receive the benefits of the techniques described herein. In addition, in some embodiments, certain information or data can be treated in one or more ways before or after it is used, so that personally identifiable information is removed or not stored permanently.
With reference now to the Figures, example embodiments of the present disclosure will be discussed in further detail.
The mobile image capture device includes one or more processors 112 and a memory 114. The one or more processors 112 can be any suitable processing device and can be one processor or a plurality of processors that are operatively connected. In some implementations, the processor 112 includes a dedicated vision processing platform that delivers high-performance machine vision and visual awareness in a power-constrained environment. For example, the processor 112 can be a system-on-a-chip (SoC) designed for high-performance, low-power computational imaging. In some implementations, the processor 112 includes hardware, software, and/or firmware that is selectively usable to perform a complete image processing pipeline on-chip. In some implementations, the processor 112 includes multiple vector processors optimized for vision processing workloads.
The memory 114 can include one or more non-transitory computer-readable mediums, such as RAM, ROM, EEPROM, EPROM, flash memory devices, magnetic disks, etc., and combinations thereof. In some example implementations, the memory 114 includes at least a first DRAM memory and a second non-volatile memory. For example, the first DRAM memory can be used for temporary storage of various types of image data, while the second non-volatile memory can be used for non-temporary storage of various types of image data. In some implementations, the non-volatile memory includes a flash memory card. In some implementations, the flash memory card is a Secure Digital (SD) card.
The mobile image capture device 102 also includes a lens cover 116, one or more lenses 118, and an image sensor 120. The image sensor 120 can be a sensor that detects incoming light or other electromagnetic radiation and outputs data sufficient to generate an image of a scene. For example, the image sensor 120 can be a CMOS sensor or a CCD sensor. In some implementations, the one or more lenses 118 can include a wide angle lens such that images resulting from data output by the image sensor 120 are wide angle images.
In some implementations, the lens cover 116 of the mobile image capture device 102 can be manually adjustable between a position that optically blocks the lens 118 and image sensor 120 and a position that does not optically block the lens 118 and image sensor 120. When the lens cover 116 is placed into the position that optically blocks the lens 118 and image sensor 120, the mobile image capture 102 device responds by operating in an ultra-low power mode in which images are not actively captured. However, when the lens cover 116 is removed or otherwise placed into a position that does not optically block the lens 118 and image sensor 120, the mobile image capture device can operate to continuously capture and process the plurality of images.
In some implementations, the lens cover 116 can have a visually distinctive exterior-facing surface. In such fashion, when the lens cover 116 is covering the lens 118 it is readily apparent to persons within the visible range of the image capture device 102 that the mobile image capture device 102 is not actively capturing imagery. For example, the lens cover 116 can have a brightly colored and/or patterned design which provides a glanceable indication regarding the current capture status of the mobile image capture device 102.
In some implementations, the user can adjust the lens cover 116 to provide input control signals for the mobile image capture device 102. As one example, in some implementations, if the user opens and closes the lens cover 116 according to a certain pattern (e.g., three consecutive closings and then openings), the mobile image capture device 102 can respond by deleting a certain period of recently captured imagery (e.g., the last five minutes). Such may enable a quick and easy control input for the user to cause deletion of imagery that depicts undesired scenery. Other operations can be performed according to certain other patterns of lens cover manipulation as well.
In some implementations, the user can also provide control signals for the mobile image capture device 102 by making certain recognizable gestures (e.g., hand gestures) within a field of view of the mobile image capture device 102. As an example, the user can use one or both hands (e.g., index finger and thumb) to form one or two corners of a “frame” for a particular scene. The mobile image capture device 102 can recognize such gesture and capture imagery that includes the “framed” scene. Various other gestures can be used as control inputs, as well, including, for example, a gesture to delete recently captured imagery, as described above.
As noted above, the image sensor 120 can output data sufficient to generate images of a scene viewed by the image sensor 120. The mobile image capture device 102 can include various additional components for processing such data from the image sensor 120 to generate such images. As one example, the mobile image capture device can include an imaging pipeline 122. The imaging pipeline 122 can include one or more image processing components that are operable to process the raw data from the image sensor 122 generate images. Example imaging pipelines 122 according to the present disclosure will be discussed below with further reference to FIGS. 9 and 10 .
According to another aspect of the present disclosure, the mobile image capture device 102 further includes a scene analyzer 124. In some implementations, the scene analyzer 124 is operable to analyze a scene depicted by an image captured by the mobile image capture device 102 to assess a desirability of such scene and, based at least in part on such desirability, determine whether to store such image and/or one or more other contemporaneously captured images or to discard such image and/or one or more other images without further storage. In some implementations, the scene analyzer 124 includes one or more neural networks, such as deep neural networks or other multi-layer non-linear models which output descriptors of the desirability of the scene of an input image. In addition, in some implementations, the scene analyzer 124 can also make control decisions regarding the capture mode of the mobile image capture device 102 (e.g., based on the desirability of a depicted scene). Example scene analyzers 124 according to the present disclosure will be discussed below with further reference to FIGS. 11 and 12 .
The mobile image capture device 102 can further include one or more inertial measurement units (IMUs) 126. The inertial measurement units 126 can be electronic devices that measure and report one or more of a velocity, and orientation, and gravitational forces applied to or otherwise associated with the mobile image capture device 102. For example, the inertial measurement units 126 can include one or more accelerometers, gyroscopes, and/or magnetometers. In some implementations, data from the one or more inertial measurement units 126 can be appended to an image captured around the time such data was generated by the inertial measurement units 126. Thus, for example, an image captured by the mobile image capture device 122 can have as associated metadata the information provided by the inertial measurement units 126 at the time of capture. Such information can be usable by downstream processes, for example, in selecting (or rejecting) particular images due to blur, motion, or other undesirable attributes attributable to unintended movement, jostling, or other physical disturbance of the mobile image capture device (e.g., physical disturbance resultant from a user's gait). Thus, image capture timing can be based on data from IMUs 126.
In some implementations, the mobile image capture device 102 can use the data output by the inertial measurement units 126 to determine if the current movement pattern would result in a desirable hyper-lapse capture. For example, inertial data that indicates a walking pattern can trigger the capture of a hyper-lapse. In some implementations, the mobile image capture device 102 can analyze the data from the inertial measurement units 126 to assist in decisions regarding selecting and/or retaining frames for composing the hyper-lapse. For example, frames which are well-aligned with each other can be selected for composing the hyper-lapse.
In some implementations, the data output by the inertial measurement units 126 can be monitored to detect inertial measurement data indicative of a user tapping the mobile image capture device 102. More particularly, in some implementations, if the mobile image capture device 102 detects that the user has tapped the mobile image capture device 102 (e.g., according to a certain pattern, such as, for example, three consecutive taps), then the mobile image capture device 102 can respond to such tapping by increasing a probability of image storage, performing image capture and storage without scene analysis for a brief period, transitioning the mobile image capture device 102 into a different capture mode (e.g., a burst capture mode), and/or deleting recently captured imagery. Various touch inputs can be mapped to various touch outputs. In other implementations, the mobile image capture device 102 can include other touch-sensitive components to detect the user tapping alternatively or in addition to monitoring the data output by the inertial measurement units 126.
The mobile image capture device 102 further includes a network interface 128. The network interface 128 can include any number of components to provide networked communications (e.g., transceivers, antennas, controllers, cards, etc.). In some implementations, the mobile image capture device 102 includes a first network interface operable to communicate using a short-range wireless protocol, such as, for example, Bluetooth and/or Bluetooth Low Energy, and also a second network interface operable to communicate using other wireless network protocols, such as, for example, Wi-Fi. In one example, the mobile image capture devices 102, 104, and 106 are operable to communicate with each other using a short-range wireless protocol, such as Bluetooth Low Energy. Further, the image capture device 102 can be operable to communicate with the user computing device 130 using either the short-range wireless protocol (e.g., to transmit capture visualizations) or Wi-Fi or other more robust networking protocols (e.g., for the transfer of captured images).
The mobile image capture device 102 can further include a power source 129. Typically, the power source 129 will be an on-board battery, such as an on-board lithium-ion battery. The mobile image capture device 102 can also be electrically connectable (e.g., via a micro USB port or other electrical and/or data connection port) to a wall outlet or other source of utility power or other appropriately rated power. Plugging the mobile image capture device 102 into a wall outlet can recharge the on-board battery. In some implementations, the mobile image capture device 102 is configured to transfer images to the user computing device 130 over network 180 or perform other highly energy consumptive tasks only when the mobile image capture device 102 is connected to an external power source, such as a wall outlet.
In some implementations, the mobile image capture device 102 can be a wearable image capture device. As an example, the mobile image capture device 102 can be medallion-shaped. For example, the mobile image capture device 102 can have a housing with a circular perimeter. The lens 118 and image sensor 120 of the mobile image capture device 102 can be located at an off-center location of the housing (e.g., not at a concentric center of the circular housing). The housing can be beveled at the outer perimeter. Further, in some implementations, the mobile image capture device 102 can be worn around a user's neck suspended from a lanyard. In other implementations, the mobile image capture device 102 can include a clip that permits the user to clip the mobile image capture device 102 to an article of clothing or other personal items.
According to another aspect of the present disclosure, the mobile image capture device 102 may be operable to communicate with other mobile image capture devices that are located within the same general area (e.g., devices 104 and 106). As one example, the mobile image capture device 102 may be operable to transmit an excitement signal that is wirelessly receivable by one or more other mobile image capture devices that are located proximate to the mobile image capture device (e.g., devices 104 and 106), and vice versa. The excitement signal indicates that the scene depicted by one of the plurality of images recently captured by the mobile image capture device 102 has a relatively large desirability. Thus, the mobile image capture device 102 may send wireless signals (e.g., Bluetooth Low Energy broadcasts) to alert nearby devices (e.g., devices 104 and 106) that an exciting, interesting, or otherwise desirable scene is available for capture.
Furthermore, in some implementations, in response to receipt of an excitement signal (e.g., from one of devices 104 or 106), the mobile image capture device 102 performs at least one of the following: increases a probability that the mobile image capture device 102 will store a non-temporary copy of a recently captured image; attempts to identify a match for one or more embeddings included in the excitement signal within the recently captured image; and increases one or more of a frame rate or a resolution of the image sensor 120 of the mobile image capture device 102.
As one example, in some implementations, receipt of an excitement signal from another device may cause the scene analyzer 124 of the receiving image capture device 102 to be more lenient in its storage decisions (e.g., by reducing various thresholds implemented by a save controller portion of the scene analyzer 124 and/or providing the excitement signal as an input to one or more models included in the scene analyzer 124).
As another example, in some implementations, the excitement signals can include information that enables the receiving image capture device 102 to determine whether an image depicts the same scene or portion thereof that excited the transmitting image capture device. Thus, the receiving image capture device 102 can compare abstractions of its presently viewed scene to the received abstractions to determine whether it is viewing the same scene. If the receiving image capture device 102 determines that it is viewing the same scene, then it can implement enhanced capture and storage of such scene.
Excitement signals can be used for capture synchronization as well. In particular, multiple image capture device owners at the same event may obtain some benefit out of capturing imagery with their mobile image capture device simultaneously. For example, if users share their reflections from the event later on, there will be a higher likelihood of desirable scenes being captured and a greater potential for creating special artifacts because more pictures of the same scene from different angles will have been taken by the set of multiple image capture devices. Excitement signals may also act as a booster for computer vision signals like facial expression and gaze path to inform the mobile image capture device about moments of importance.
However, to ensure the privacy of all parties involved, the information included in the excitement signals will not be sufficient for the receiving image capture device to identify or recreate the specific scene viewed by the transmitting image capture device. Instead, the information included in the excitement signal will typically be an abstraction or other low-dimensional representation of the scene that provides only enough information for the receiving capture device to determine (within some probability range) whether it is presently viewing the same scene or portion thereof. For example, such abstractions may include a histogram of various image characteristics (e.g., color, etc.) or may be embeddings retrieved from one or more hidden layers of one or more of models included in the scene analyzer of the transmitting image capture device.
Referring again to FIG. 1 , the system 100 further includes the user computing device 130 and the server computing device 150. In some implementations, the mobile image capture device 102 communicatively connects to the user computing device 130 over a local area network portion of network 180, while the user computing device 130 communicatively connects to the server computing device 150 over a wide area network portion of the network 180. In other implementations, the mobile image capture device 102 communicatively connects to the server computing device 150 directly over the wide area network.
The user computing device 130 can perform image curation and enable user editing of the images. In particular, in some implementations, when connected to the mobile image capture device 102 (e.g., after a capture session has been completed), the user computing device 130 can select certain of the images stored at the image capture device for transfer to the user computing device 130. The user computing device 130 can also provide a user interface that enables the user to selectively edit the transferred images. In particular, the user interface can enable various advanced image editing techniques such as computational photography, camera repositioning, etc.
The user computing device 130 also includes a transfer controller 140. In particular, in some implementations, when connected to the mobile image capture device 102 (e.g., after a capture session has been completed), the transfer controller 140 can select certain of the images stored at the image capture device 102 for transfer to the user computing device 130. For example, such selection can be guided by various image attributes as reflected in various metadata annotations provided by the mobile image capture device 102 respectively for the stored images. Generally, the most desirable images will be selected for transfer, while maintaining a diversity of imagery.
In some implementations, the transfer controller 140 can perform an optimization algorithm to select which of the images stored in the memory 114 of the mobile image capture device 102 to request for transfer. The optimization algorithm can have a plurality of associated objectives which include, for example, at least a diversity of settings and a diversity of depicted persons, while still requesting transfer of the most desirable images. In some implementations, the transfer controller 140 can implement a submodular function to select which images to request for transfer.
In some implementations, the user computing device 130 further includes a best shot selector 142. The best shot selector 142 can be implemented to select at least one highlight image from a group of images (e.g., at least one highlight image for each moment within a reflection). For example, the best shot selector 142 can select the highlight images based on the annotations or other metadata included for each of the images. In some implementations, the best shot selector 142 normalizes each image in a moment relative to its peer images within such moment prior to performing highlight selection. Thus, selection of a highlight image for each moment can be based at least in part on a comparison of the annotations of each image included in such moment relative to the annotations of at least one other image included in such moment.
In some implementations, the best shot selector 142 can also be implemented to determine a recommended composition for one or more images. For example, the recommended composition may correspond to only a portion of an image (e.g., a dewarped portion of a wide angle image). The recommended composition may also correspond to a certain perspective of a virtual camera relative to the image. The best shot selector 142 can determine the recommended composition based at least in part on the annotations or other metadata associated with the image. For example, the recommended composition may correspond to a dewarped portion of a wide angle image that includes only faces that correspond to entities included in the set of entities that have elevated importance to the user.
In some implementations, a gaze angle of a subject depicted by an image can be used to determine the recommended composition for such image. As an example, the human subject's extremity of angle of the face (e.g., up/down, left/right) can be used to assist in determining how much of the surrounding area should be included in a crop (e.g., in the recommended composition). In some implementations, determining the recommended composition can include selecting the most salient, well lit, and/or compositionally interesting portions within a frame.
In further implementations, the best shot selector 142 and/or other components of the user computing device 130 can perform semantic scene segmentation (e.g., at a pixel-level rather than according to bounding boxes). The semantic scene segmentation can be used for composition, blurring, or selective application of other editing techniques to certain portions of an image.
The user computing device 130 also includes a user interface controller 144. The user interface controller 144 can be implemented to provide a user interface that enables the user to temporally and/or spatially explore images within a reflection. In particular, the user interface controller 144 can be implemented to detect and respond to certain user input with appropriate user interface interactions.
The user computing device 130 also includes a computational photographer 146. The computational photographer 146 can be implemented to perform various image editing or image synthesis techniques with respect to images included in a reflection. As one example, after the user has adjusted the perspective of the camera, the computational photographer 146 can synthesize a new image that corresponds to the selected perspective by recalculating one or more camera parameters (e.g., focus, lens distortions, lighting, etc.) that would result from the new perspective. As other examples, the computational photographer 146 can be implemented to perform advanced image processing techniques such as superresolution, hyper-lapse, texture mapping, depth mapping, view synthesis, etc. Likewise, the computational photographer 146 can be implemented to provide adjustable controls for ISO, depth of field, stabilization, and other image parameters or characteristics.
Each of the transfer controller 140, the best shot selector 142, the user interface controller 144, and the computational photographer 146 can include computer logic utilized to provide desired functionality. Thus, each of the transfer controller 140, the best shot selector 142, the user interface controller 144, and the computational photographer 146 can be implemented in hardware, firmware and/or software controlling a general purpose processor. In some implementations, each of the transfer controller 140, the best shot selector 142, the user interface controller 144, and the computational photographer 146 includes program code files stored on the storage device, loaded into memory 134 and executed by processor 132 or can be provided from computer program products, for example, computer executable instructions 138 that are stored in a tangible computer-readable storage medium such as, for example, a RAM disk or card or other computer-readable optical or magnetic media.
Thus, in some implementations, the server computing device 150 can implement model trainer 160 to train new models or update versions on existing models on additional image data. As an example, the model trainer 160 can use images hand-labeled as being desirable to train one or more models to provide outputs regarding the desirability of an input image. In particular, in some implementations, the additional training data can be images that the user created through the editing interface. Thus, updated versions of the models of the image capture device 102 can be trained by model trainer 160 on personalized data sets to better infer, capture, and store images which satisfy the particular visual tastes of the user. In other instances, the additional training data can be anonymized, aggregated user feedback.
The server computing device 150 can periodically provide the mobile image capture device 102 with one or more updated versions of one or more models included in the scene analyzer 124. The updated models can be transmitted via the user computing device 130 or directly to the mobile image capture device 102 via network 180. In other implementations, the user computing device 130 can also include a model trainer that performs personalized model training as described above for a particular mobile image capture device 102.
The model trainer 160 can include computer logic utilized to provide desired functionality. Thus, the model trainer 160 can be implemented in hardware, firmware and/or software controlling a general purpose processor. In some implementations, the model trainer 160 includes program code files stored on the storage device, loaded into memory 154 and executed by processor 152 or can be provided from computer program products, for example, computer executable instructions that are stored in a tangible computer-readable storage medium such as RAM hard disk or card or other computer-readable optical or magnetic media.
Further, any of the processes, operations, programs, applications, or instructions described as being stored at or performed by the server computing device 150 can instead be stored at or performed by the user computing device 130 in whole or in part, and vice versa. In particular, in some implementations, the mobile image capture device 102 can directly communicatively connect to the server computing device 150 and the server computing device 150 can perform the image curation, editing, storage, and sharing functions attributed to the user computing device 130 elsewhere in the present disclosure (e.g., via a web application). Likewise, any of the processes, operations, programs, applications, or instructions described as being stored at or performed by the mobile image capture device 102 can instead be stored at or performed by the user computing device 130 in whole or in part, and vice versa. For example, in some implementations, the transfer controller 140 can be located at the mobile image capture device 102 rather than the user computing device 130.
The image processing framework 200 includes an image sensor 202 which outputs raw image data. For example, the raw image data can be a Bayer RAW image. The raw image data can be communicated to a first memory 204 and/or an imaging pipeline 206. As one example, the first memory 204 which stores the raw image data output by the image sensor 202 can be denominated as a raw temporary data buffer and can be, for example, DRAM memory. In some implementations, the imaging pipeline 206 streams the raw image data directly from the image sensor 202. In such scenario, the temporary data buffer may optionally store processed images instead of the raw image data.
The imaging pipeline 206 takes the raw image data received from the image sensor 202 and processes such raw image data to generate an image. For example, the processed image can be a RGB image, a YUV image, a YCbCr image, or images according to other color spaces. In addition, the imaging pipeline 206 can be operatively connected to a system processor 214. The system processor 214 can include hardware blocks 216 that assist the imaging pipeline 206 in performing Debayer filtering, RAW filtering, LSC filtering, or other image processing operations. The RAW filter stage can provide image statistics 216 for auto exposure in real time and/or auto white balance operations. Software filters may be employed as well. Additional discussion of an example imaging pipeline is provided with respect to FIGS. 9 and 10 .
Depending on the capture mode of the mobile image capture device and/or other parameters, the imaging pipeline 206 can provide the image to an optional scaler 208 or a second memory 222, which will be discussed further below. The scaler 208 can down sample the received image to output a lower resolution version of the image. Thus, in some implementations, the scaler 208 can be denominated as a down sampler.
The scaler 208 provides the image to a third memory 210. The third memory 210 may be the same memory or a different memory than the second memory 222. The second memory 222 and/or the third memory 210 can store temporary copies of the image. Thus, the second memory 222 and/or the third memory 210 can be denominated as temporary image buffers. In some implementations, the second memory 222 and/or the third memory 210 are DRAM. In addition, in some implementations, downsampling can be performed at the beginning of the imaging pipeline such that the imaging pipeline is enabled to run at a lower resolution and conserve power to a greater degree.
The second memory 222 and/or the third memory 210 can provide the image information to a scene analyzer 212. In some implementations, the scene analyzer 212 is operable to analyze a scene depicted by the image to assess a desirability of such scene and, based at least in part on such desirability, determine whether to store a non-temporary copy of such image or to discard the temporary copy of such image without further storage. The scene analyzer 212 can also access various data 218 stored at the system processor 214.
If the scene analyzer 212 determines that a non-temporary copy of the image should be stored, then the scene analyzer 212 can provide the image to a compression component 226. In other implementations, the compression component 226 can receive the image from the second memory 222 and/or the third memory 210. In yet other implementations, if the scene analyzer determines that a non-temporary copy of the image should be stored, then the raw image data stored in the first memory 204 will be retrieved and processed by the imaging pipeline 206 and the resulting processed image will be provided to the compression component 226.
The compression component 226 compresses the received image. The compression component 226 can be a hardware component or image compression software implemented on a processor (e.g., the system processor 214). After compression, a non-temporary copy of the image is written to a non-volatile memory 228. For example, the non-volatile memory 228 can be an SD card.
It should be noted that, in some implementations, the image compression path 220 marked in a dotted box may not be active when an image is not chosen for compression and storage. Thus, in some implementations, the output of the scene analyzer 212 can be used to either turn on the image compression path 220 or control the image sensor 202. In particular, the scene analyzer 212 (e.g., in partnership with the system processor 214) can provide sensor control signals 230 to control the image sensor 202, as will be discussed further below. Further, in some implementations, the output of the scene analyzer 212 can be used to either turn on or off the imaging pipeline path as well. In addition, in some implementations and/or capture modes, portions of the scene analysis can be performed with respect to low-resolution images whereas other portions of the scene analysis can be performed on crops of high-resolution images (e.g., facial expression analysis may require crops of high resolution images).
In some implementations, the output from the image sensor 202 can control most of the timing through the imaging pipeline 206. For example, image processing at the imaging pipeline 206 can be roughly frame-synced to transfer at the image sensor receiver (e.g., an MIPI receiver). Each of the stages of image processing 206 can have some delay which causes the output to be a few image sensor rows behind the input. This delay amount can be constant given the amount of processing that happens in the pipeline 206.
The scene analyzer 212 can start shortly after the imaging pipeline 206 has written all the lines of one image to memory. In other implementations, the scene analyzer 212 starts even before the imaging pipeline 206 has written all the lines of one image to memory. For example, certain models included in the scene analyzer (e.g., a face detector model) can operate on subsets of the image at a time and therefore do not require that all of the lines of the image are written to memory. Compression can be performed after the scene analyzer determines that the image is worth saving and compressing. One example representation of data flow versus time is provided below with reference to FIG. 8 . In other implementations, instead of analyzing images that have been fully processed by the image processing pipeline 206, the scene analyzer 212 can analyze Bayer raw images or images that have only been lightly processed by the imaging pipeline.
Unlike conventional digital cameras and mobile imagers, the mobile image capture devices of the present disclosure can change capture frame rate and resolution on the fly. Particular example capture modes are illustrated in FIG. 3 . However, other the mobile image capture device can operate according to other capture modes as well.
On the left hand side of visual representation 300 is a visual representation of a regular or sustained capture state. During the regular capture state of the mobile image capture device, the image capture device will periodically transition between a low resolution image capture mode and a high resolution image capture mode. In such fashion, high resolution or full resolution frames can be captured relatively infrequently (e.g., at an average of 0.1 to 5 frames per second (fps)), while low resolution frames are captured more frequently (e.g., at an average of 5 to 20 fps). “Captured” here means at the image sensor level. However, note that while an image is “captured” by the image sensor, only a few percentage of them (e.g., around 5 percent) may be selected for compression and storage.
In some implementations, high or full resolution frames can be 12 megapixel (MP) images. The high resolution frames can be an entire frame at a maximum resolution of the image sensor. These high resolution frames can be the strongest candidates for ultimate compression and storage. The frame rate for full resolution images can be increased in different capture modes, which will be discussed further below.
In some implementations, low resolution frames can be 1.33 MP images. The low resolution frames can be used for scene analysis, and may be even further scaled down (e.g., to 500×375) if desired. The low resolution frames can also be used for various other purposes such as: allowing users to preview an image through a display in the user computing device (e.g. capture visualizations based on a thumbnail (e.g. 100×75) of the image); generating hyper-lapse (computer vision) artifacts; and/or performing superresolution techniques in which the resolution of portions of a low resolution image are enhanced based on full-resolution frames that are closely related in time.
Further, in some implementations, in addition to high resolution images and low resolution images, the image sensor may be further operable to provide mid resolution images that are, for example, 3 MP. In some implementations, mid resolution images can be captured at up to 30 fps during a burst capture mode. Mid resolution images may be useful for scenarios including low-light binning. In particular, in order to reduce the amount of noise, it may be desirable to perform binning in the sensor such that temporal noise in the sensor is reduced. While this does sacrifice the spatial resolution, it may be desirable to perform such operation when exposure time may not be increased even further. In some instances, the mobile image capture device's exposure time may be relatively short in order to reduce the amount of motion blur. Two by two binning reduces the image noise by a factor of two in terms of standard deviation.
The mobile image capture device can also operate in a burst capture mode or burst state, which is shown after the regular sustained state in FIG. 3 . The mobile image capture device can transition to the burst state based on signals from the scene analyzer or in response to a manual trigger from the user. Thus, burst capture mode is typically performed when a highly desirable scene has been recognized and the device attempts to maximize an amount of imagery captured of such scene. Therefore, during burst capture mode, the mobile image capture device can capture mid or high resolution images at a relatively higher frame rate (e.g., 15 fps for high resolution or 30 fps for mid resolution). Alternatively, low resolution images can be captured at a high frame rate and the low resolution images can go through super-resolution to obtain final high resolution data.
In some implementations, all of the images captured during burst mode are compressed and stored at the non-volatile memory, with little to no scene analysis being performed. In particular, by performing little to no scene analysis, the limited resources of the mobile image captured device can be freely dedicated to compression and storage of the high or mid resolution imagery. For example, writing to non-volatile memory can be performed on the order of 20 to 25 MB per second. However, more resources may be dedicated to scene analysis when burst captures include low resolution images which may later go through super-resolution. Burst capture mode can be sustained for a period of time after which the mobile image capture device reverts to the regular state.
In some implementations, the mobile image capture device may also be able to operate in a hyper-lapse capture mode, which is shown at the right hand side of FIG. 3 . In the hyper-lapse capture mode, which is geared towards capture of imagery usable to generate a hyper-lapse stabilized video, the mobile image capture device can capture low or mid resolution imagery for a sustained period of time.
In particular, in the hyper-lapse capture state, one emphasis is in a smooth transition between shots. Low or mid resolution images are captured at a relatively high frame rate (e.g., 15 fps). Not all of the frames are processed, compressed, and saved. For example, analysis for hyper-lapse capture can select frames such that the output is roughly 1 frame saved per second. In particular, frames captured with jerky motion can be discarded. Thus, motion analysis can be a central component of hyper-lapse frame selection. As such, the scene analysis performed during hyper-lapse capture state can have different objectives versus the regular capture state or may generally be more lightweight. Further, in some implementations, high resolution images can be interspersed with low or mid resolution images in hyper-lapse capture mode.
The image processing framework 500 includes an image sensor 502, an image sensor receiver 504, and an imaging pipeline 508. In particular, in the low resolution capture mode, the image sensor 502 can provide low resolution raw image data 506.
In some implementations, the image sensor 502 performs binning and/or downsampling to result in output of low resolution raw image data 506. For example, the image sensor 502 can operate according to one or more of the following binning/sub sampling modes: 2H×2V binning; 3H×3V downsample (3×3 bin); 3H×3V downsample (bin plus skip); 2H×4V downsample; 3H×9V downsample (bin and skip); 3H×17V downsample (bin and skip). Thus, in one example, assuming a sensor array size of 4000×3000, the image sensor 502 can perform 3×3 downsampling (with binning and skipping) to output low resolution raw image data 506 which is sufficient to generate a low resolution image of 1.33MP (1332×1000). The image sensor 502 can perform even further downsampling to provide lower resolution thumbnails for scene analysis or other objectives. Further, for sensor binning/skipping modes that have different scaling ratios between horizontal and vertical directions, the imaging pipeline 508 can perform anamorphic scaling.
The imaging pipeline 508 can stream the low resolution raw image data 506 from the image sensor receiver 504 (e.g., without the data taking a trip to memory). The imaging pipeline 508 can process the raw image data 506 to generate a low resolution image 510 (e.g., a 1.33 MP image). Alternatively or additionally, the imaging pipeline 508 can process the raw image data 506 to generate an ultra-low resolution image 512 (e.g., a 0.18 MP image).
Either or both of the image 510 and the image 512 can be provided to a scene analyzer 514. For example, in the interests of balancing analysis intelligence versus computational consumption, certain portions of the scene analyzer may analyze the image 510 while other portions analyze the image 512.
The scene analyzer 514 can analyze the inputted images and, based on such analysis, output one or more control signals 516. In particular, the control signals 516 can control whether the image 510 is compressed and stored or whether the image 510 is discarded without storage. Further, in some implementations, the control signals 516 can control the capture mode of the image capture device, or can simply increase or decrease frame rate or resolution with formally changing the capture mode. In some implementations, the scene analyzer 514 can be implemented in one or more shave cores of a system processor.
If the scene analyzer 514 indicates that the image 510 should be stored, then the image 510 is provided to an image compression component 518, where the image compression component 518 compresses the image 510. The compressed image 510 is then written to storage 520. For example, storage 520 can be a non-volatile memory.
Given that the low resolution mode has a smaller number of pixels to read out and process, the power consumption in this mode is much lower. Therefore, low resolution frames can typically be run at a higher frame rate than the full resolution frames since the power consumption can be lower by performing such operations. FIG. 8 illustrates an example data flow over time in the low resolution capture mode.
The image processing framework 600 includes an image sensor 602, an image sensor receiver 604, a down sampler 610, and an imaging pipeline 612. In particular, in the high resolution capture mode, the image sensor 602 can provide high resolution raw image data 606. For example, the high resolution raw image data 606 can be data sufficient to generate a high resolution image of, for example, 12MP. A copy 608 of the high resolution raw image data 606 can be temporarily stored in memory (e.g., in a temporary raw image data buffer).
The down sampler 610 can stream the high resolution raw image data 606 from the image sensor receiver 604 and can down sample the high resolution raw image data 606 to output low resolution raw image data 611. For example, the down sampler 610 can perform binning and/or skipping. The low resolution raw image data 611 can be, for example, raw image data sufficient to generate a low resolution image, such as, for example, a 1.33 MP image. The down sampler 610 can be implemented in hardware or software controlling a processor.
The imaging pipeline 612 can stream the low resolution raw image data 611 from the down sampler 610. The imaging pipeline 612 can process the low resolution raw image data 611 to generate a low resolution image 614 (e.g., a 1.33 MP image). Alternatively or additionally, the imaging pipeline 612 can process the raw image data 606 to generate one or more ultra-low resolution images 616 (e.g., a 0.18 MP image or a 0.33 MP image). One or more of the images 614 and 616 can be provided to a scene analyzer 618.
The scene analyzer 618 can analyze the inputted images and, based on such analysis, output one or more control signals. In particular, the control signals can control whether an image is generated from the high resolution raw image data 606 and then compressed and stored or whether the high resolution raw image data 606 and the images 614 and 616 are discarded without further storage. Further, in some implementations, the control signals 616 can control the capture mode of the image capture device.
If the scene analyzer 614 indicates that the image should be stored, then the temporarily stored copy 608 of the high resolution raw image data 606 is provided to the imaging pipeline 612. For example, the copy 608 of the high resolution raw image data 606 can be retrieved from a temporary raw image data buffer and processed in a memory to memory fashion. The imaging pipeline 612 can process the high resolution raw image data 606 to generate a high resolution image 619. For example, the high resolution image 619 can be a 12 MP image.
The high resolution image 619 is then provided to an image compression component 620, where the image compression component 620 compresses the image 619. The compressed image 619 is then written to storage 622. For example, storage 622 can be a non-volatile memory.
In some implementations, the low resolution image 614 can also be provided to the image compression component 620, where the image compression component 620 compresses the image 619. The compressed image 614 is then written to storage 622. For example, storage 622 can be a non-volatile memory.
At 702, the image sensor outputs low resolution raw image data. At 704, the imaging pipeline streams the low resolution raw image data from the image sensor. As illustrated, the imaging pipeline can process the sensor data in-stream. At 706, the output of the imaging pipeline is written to DRAM. In some implementations, the delay between the sensor capture and image data written to DRAM is only a few lines.
At 708, scene analysis of the image is performed. In particular, scene analysis can start shortly after the imaging pipeline has written all the lines of one image to the DRAM. In other implementations, the scene analysis starts even before the imaging pipeline has written all the lines of one image to memory. For example, certain models included in the scene analysis (e.g., a face detector model) can operate on subsets of the image at a time and therefore do not require that all of the lines of the image are written to memory. The results of the scene analysis (e.g., annotations to the image or other data) can be added to the image in DRAM at 710. In some implementations, the scene analysis of an image can take longer than the frame time for certain tasks.
Once the scene analyzer determines that the image has interesting scene content, then at 712 the image is compressed. Compression can occur in a memory to memory fashion. However, in other implementations, compression can be run in-stream.
As illustrated, the above described operations can occur in a cascading and/or overlapping manner. For example, capture and processing of the next image can occur while the first image is still undergoing scene analysis, and so on.
Further, the illustrated data flow is for keep/discard decisions made during the regular capture state. During the burst mode of operation, for example, the still image compression may not wait for the decision by the scene analysis, or scene analysis may simply be bypassed.
The image processing framework 800 includes an image sensor 802, an image sensor receiver 804, and an imaging pipeline 806. In particular, in the high resolution capture mode, the image sensor 802 can provide high resolution raw image data 805.
The imaging pipeline 806 can stream the high resolution raw image data 805 from the image sensor receiver 804 (e.g., without the data taking a trip to memory). The imaging pipeline 806 can process the raw image data 805 to generate a high resolution image 807 (e.g., a 12 MP image). Alternatively or additionally, the imaging pipeline 806 can process the raw image data 805 to generate a various lower resolution images 808.
The image 807 is then provided to an image compression component 809, where the image compression component 809 compresses the image 807. The compressed image 807 is then written to storage 810. For example, storage 810 can be a non-volatile memory. In some implementations, compression is performed in-stream, which eliminates the power requirements of temporarily writing to memory.
Unlike frameworks 500 and 600, the framework 800 of the burst capture mode may not provide the image 807 to a scene analyzer to make keep/discard decisions. Instead, the image 807 (and optionally any number of images 808) is simply compressed and stored. In particular, since burst capture is typically performed after the device has detected (e.g., from previous frames) that an interesting scene is available, intensive image analysis may not be necessary to perform. This allows the device to devote most of the energy and computing power to performing the imaging pipeline and compression.
However, in some implementations, the mobile image capture device may have sufficient resources to perform scene analysis during burst capture mode for the purpose of keep/discard decisions. This may also be enabled by lowering the resolution and/or frame rate requirements/parameter values of the burst image capture.
The imaging pipeline included in the mobile image capture device impacts the quality of images generated by the mobile image capture device. The imaging pipeline can take raw image data from an image sensor and performs the necessary processing to reduce image defects and non-idealities of the image sensor and optics in the imaging system, thereby producing high quality images that are pleasing to view. Given that the power consumption of the mobile image capture device is typically constrained, many of the computations of the imaging pipeline can be performed in hardware blocks, which are more efficient that software implementations.
Referring first to FIG. 9 , imaging pipeline 900 depicts one example imaging pipeline that performs a raw-to-raw Bayer pipeline. RAW Bayer image data 901 is either streamed directly from the image sensor, or is read from memory. Streaming directly from the sensor is desirable in order to save power consumption and reduce memory bandwidth. A first step is to remove the bad pixels at block 902. This requires knowledge of analog gain applied in the sensor and a static defect table. Previous x-y coordinates of bad pixels are optional and may help the bad pixel correction.
Next, at block 904, raw pixel may be denoised lightly. One benefit of such a raw-denoise block 904 is to remove some noise such that it does not crease maze-like artifacts during a demosaicing state. Again, analog gain applied to the sensor and noise table that has been calibrated for the sensor is useful for improved performance.
At block 906, black level (pedestal) can be removed. A histogram of pixel intensities is useful to remove the black level. Optionally, flare correction may be performed at a separate block after white balancing at the expense of additional processing.
Lens shading correction can be performed at block 908. Lens shading correction can be applied by obtaining a calibrated per-device shading table. This table can be obtained during calibration. At block 910, white balance gains can be applied using the AWB result. In addition, per device calibration results of small color ratios can be applied if applicable.
With reference now to FIG. 10 , pipeline 1050 is an RGB/YCbCr pipeline. RAW Bayer image data 1051 is passed onto a demosaicer block 1052 which is then used to perform interpolation on missing color components. For example, on an “R” pixel, the demosaicing block 1052 computes optimal “G” and “B” pixels such that a very good sharpness can be maintained without unnatural sharpening artifacts. This goes through a series of transformations (e.g., blocks 1054 and 1056) such that the pixel values are in sRGB space (or any other color space).
Optional tone mapping can be performed at block 1058 such that contrast in enhanced or dynamic range is compressed such that it may be rendered on lower bit-depth displays. Next, color space conversion can be performed at block 1060 such that the pixel values 1061 are in YCbCr pixel domain.
Once the pixel values 1061 are in YCbCr domain, it may be passed onto a still image (e.g., JPEG or other formats) compression block. Note that denoising and sharpening can be performed on the luminance channel. In addition, chrominance noise can be significantly suppressed especially for low-light images. Additional blocks such as special effects can be optionally applied, as well.
The scene analyzer 1102 can receive one or more images 1114. The scene analyzer 1114 can analyze each receive image 1114 and, based at least in part on such analysis, output one or more control signals 1118 and 1120. In particular, the control signals 1118 can control whether the one or more images 1114 are compressed and written to memory (e.g., a non-volatile memory). The control signals 1120 can control the capture mode of the image sensor or mobile image capture device as a whole.
The received imagery 1114 can include high resolution images and/or low resolution images. In some implementations, certain portions of scene analyzer 1102 can analyze low resolution versions of an image 1114 while other portions (e.g., portions which analyze facial features) analyze cropped portions of high resolution versions of the image 1114.
The model scheduler 1104 can control which models (if any) an image is input for scene analysis. The model selector 1104 can select which models to employ depending on a number of criteria including computational consumption considerations, energy consumption considerations, and/or the results of an initial analysis of the scene of the image. As one example, the model selector 1104 can simply implement a predefined schedule or can implement some defined logic regarding an ordering or configuration of models to employ. As another example, the model selector 1104 may itself be a model (e.g., neural network), such as a multi-layer non-linear model (e.g., deep neural network).
In some implementations, the model selector 1104 includes an attention model 1116 that analyzes only a portion of an input image. The attention model 1116 can output an indication of whether each input image should be input into at least one of the downstream models for further scene analysis. Thus, the attention model 1116 can operate as a prefilter to the downstream models (e.g., deep neural networks 1106 and 1108) included in the scene analyzer 1102.
As one example, the attention model 1116 can be a recurrent deep neural network that tracks a face through a succession of images 1114 and outputs a probability that each analyzed image depicts the face experiencing joy. The attention model 1116 can also output a description of which portion of the next input image the attention model 1116 should analyze. In some implementations, a supervised objective function informs the attention model 1116 what is valuable to pay attention to.
Use of an attention model 1116 in this fashion can greatly reduce the energy consumption of the mobile image capture device since the attention model 1116, which limits its analysis to only a portion of the images, guards certain downstream models (e.g., deep neural networks 1106 and 1108) which may analyze the image in its entirety and/or require larger computational expenditure.
In other implementations, the attention model 1116 can be used in place of the other models (e.g., models 1106 and 1108) to guide image storage and/or capture mode decisions. In yet further implementations, one or more of the various deep neural networks (e.g., 1106 and 1108) can be replaced with an attention model version of such network.
The scene analyzer 1102 can further include any number of models (e.g., deep neural networks 1106 and 1108) which analyze the scene depicted by an input image 1114 and output various descriptors (e.g., annotations) that describe a desirability of the scene of the input image 1114 (e.g., describe various image characteristics which impact the desirability of the scene). The scene analyzer 1102 can make intelligent decisions regarding image storage and/or capture mode on the basis of such descriptors. The neural networks can be convolutional neural networks, recurrent neural networks, feed forward neural networks, or combinations thereof.
In particular, the save controller 1110 can take as input all of the annotations from the models and use such annotations to decide whether or not to compress and store the image. Likewise, the mode controller 1112 can determine whether to change the capture mode of the mobile image capture device on the basis of such annotations.
In some implementations, the save controller 1110 and/or the mode controller 1112 can include one or more decision trees, models, and/or algorithms that apply some hand-crafted logic. Each of the save controller 1110 and the mode controller 1112 can include computer logic utilized to provide desired functionality. Thus, each of the save controller 1110 and the mode controller 1112 can be implemented in hardware, firmware and/or software controlling a general purpose processor. In some implementations, each of the save controller 1110 and the mode controller 1112 includes program code files stored on the storage device, loaded into a memory and executed by a processor or can be provided from computer program products, for example, computer executable instructions that are stored in a tangible computer-readable storage medium such as, for example, a RAM disk or card or other computer-readable optical or magnetic media.
In some implementations, the scene analyzer 1102 is implemented asynchronously with the capture of images 1114. Stated differently, in some implementations, the frame rate of image capture is (at least in some instances) different that the frequency at which the scene analyzer 1102 analyzes images 1114.
In some implementations, in addition to receiving imagery 1114 as input, the scene analyzer 1102 can also receive additional lower dimensional data such as capture parameters or IMU data. For example, IMU data can indicate a relative amount of motion there is during image capture. Analysis of walking frequency may allow the mobile image capture device to time the “right” capture instant as the user walks. Capture parameters such as exposure time can also be adjusted accordingly.
Low level analysis can also be performed in order to determine whether to perform multi-frame capture to enhance quality. For example, if the exposure values are very low and high motion blur or high amounts of noise are expected, the mobile image capture device can capture burst for quality enhancement. Multi-frame denoising can then be performed in either the mobile image capture device or the user computing device.
In addition, the following discussion with reference to FIG. 12 will refer to various models. In some implementations, one or more (e.g., all) of such models are deep neural networks. Each model can output at least one descriptor that describes a characteristic of the image. The image can be annotated with such descriptor(s). Thus, the outputs of the models will be referred to as annotations. In some implementations, the models provide the annotations to a save and mode controller 1250 which annotates the image with the annotations.
The configuration 1200 receives as input a frame of imagery 1202. For example, the frame 1202 may have been selected by a model scheduler for analysis.
The frame of imagery 1202 is provided to a face detection or tracking model 1204. The face detection or tracking model 1204 detects one or more faces depicted by the frame 1202 and outputs one or more face bounding boxes 1206 that describe the respective locations of the one or more detected faces. The face bounding boxes 1206 can be annotated to the frame 1202 and can also be provided as input alongside the frame 1202 to a face attribute model 1208 and a face recognition model 1216.
In some implementations, the face detection or tracking model 1204 performs face tracking rather than simple face detection. In some implementations, the model 1204 may choose which of detection or tracking to perform. Face tracking is a faster alternative to face detection. Face tracking can take as additional inputs the face detection bounding boxes 1206 from a previous frame of imagery. The face tracking model 1204 updates the position of the bounding boxes 1206, but does not detect new faces.
Importantly, neither face detection nor face tracking attempt to determine or ascertain a human identity of any of the detected faces. Instead, the face detection or tracking model 1204 simply outputs face bounding boxes 1206 that describe the location of faces within the frame of imagery 1202. Thus, the model 1204 performs only raw detection of a face (e.g., recognition of depicted image features that are “face-like”), without any attempt to match the face with an identity.
The face attribute model 1208 can receive as input one or more crops of the frame of imagery 1202 (e.g., relatively higher resolution crops), where the one or more crops correspond to the portion(s) of the frame 1202 defined by the coordinates of the bounding box(es) 1206. The face attribute model 1208 can output an indication (e.g., a probability) that the detected face(s) include certain face attributes 1210. For example, the face attribute model 1208 can output respective probabilities that the detected faces include smiles, open eyes, certain poses, certain expressions, a diversity of expression, or other face attributes 1210.
The face attributes 1210 can be provided as input alongside the frame of imagery 1202 to a face photogenic model 1212. The face photogenic model 1212 can output a single face score 1214 which represents a level of photogenicness of a pose, an expression, and/or other characteristics or attributes of the detected face(s).
Returning to the output of face detection or tracking model 1204, the face recognition model 1216 can receive as input one or more crops of the frame of imagery 1202 (e.g., relatively higher resolution crops), where the one or more crops correspond to the portion(s) of the frame 1202 defined by the coordinates of the bounding box(es) 1206. The face recognition model 1216 can output a face signature for each of the detected faces. The face signature can be an abstraction of the face such as an embedding or template of the face or features of the face.
Importantly, the face recognition model 1216 does not attempt to determine or ascertain a human identity of the detected face(s). Thus, the face recognition model 1216 does not attempt to determine a name for the face or otherwise match the face to public profiles or other such information. Instead, the face recognition model 1216 simply matches an abstraction of the detected face(s) (e.g., an embedding or other low-dimensional representation) to respective other abstractions associated with previously “recognized” faces. As one example, the face recognition model 1216 may provide a probability (e.g., a level of confidence from 0.0 to 1.0) that an abstraction of a face depicted in an input image matches an abstraction of a face depicted in a previously captured image. Thus, the face recognition model 1216 may indicate (e.g., in the face signature 1218) that a face detected in the image 1202 is likely also depicted in a previously captured image, but does not attempt to identify “who” this face belongs to in the human identity contextual sense. Similarly, the face recognition model 1216 may provide a probability that an abstraction of a face depicted in an input image matches an abstraction of a face that has been previously indicated as having a heightened importance to the user of the mobile image capture device. Thus, the face recognition model 1216 may indicate that a face detected in the image 1202 is likely also included in the set of faces that the user has indicated as having heightened performance, but does not attempt to identify “who” this face belongs to in the human identity contextual sense.
The frame of imagery 1202 can also be provided as input to an image content model 1220. The image content model 1220 can output one or more semantic feature vectors 1222 and one or more semantic labels 1224. The semantic feature vectors 1222 can be used for determining that two images contain similar content (e.g., similar to how face embeddings are used to determine that two faces are similar). The semantic labels 1224 can identify one or more semantic features (e.g., “dog,” “sunset,” “mountains,” “Eiffel Tower,” etc.) detected within the frame of imagery 1202. The notion of similarity between images can be used to ensure a diversity of captured images.
In some implementations, the image content model 1220 is a version of a deep convolutional neural network trained for image classification. In some implementations, a subset of semantic classes that are particularly important to users of the mobile image capture device (e.g., animals, dogs, cats, sunsets, birthday cakes, etc.) can be established and the image content model 1220 can provide a particular emphasis on detection/classification with respect to such subset of semantic classes having elevated importance.
The frame of imagery 1202 can also be provided as input to a visual feature extractor model 1226. The visual feature extractor model 1226 can output one or more visual feature vectors 1228 that describe one or more visual features (e.g., a color histogram, color combinations, an indication of amount of blur, an indication of lighting quality, etc.) of the frame 1202.
The semantic feature vectors 1222, semantic labels 1224, and the visual feature vectors 1228 can be provided as input alongside the frame 1202 to a photo quality model 1230. The photo quality model 1230 can output a photo quality score 1232 based on the inputs. In general, the photo quality model 1230 will determine the photo quality score 1232 on the basis of an interestingness of the image 1202 (e.g., as indicated by the semantic labels 1224), a technical quality of the image 1202 (e.g., as indicated by visual feature vectors 1228 that describe blur and/or lighting), and/or a composition quality of the image 1202 (e.g., as indicated by the relative locations of semantic entities and visual features).
The save and mode controller 1250 will take as input all of the annotations 1206, 1210, 1214, 1218, 1222, 1224, 1228, and 1232 and make a decision whether or not to save the frame of imagery 1202 or a high resolution version thereof and also whether or not to change a capture mode of the device. In some implementations, the save controller 1250 will try to save frames that the final curation function (e.g., the transfer controller and/or best shot selector) will want to select, and hence can be viewed as an online/real-time approximation to such curation function.
In some implementations, the save and mode controller 1250 includes an in-memory annotation index or other frame buffering so that save and mode decisions regarding frame 1202 can be made relative to peer images. In other implementations, the save and mode controller 1250 makes decisions based only on information about the current frame 1202.
In some implementations, and to provide an example only, the save and mode controller 1250 may be designed so that approximately 5% of captured images are selected for compression and storage. In some implementations, whenever the save and mode controller 1250 triggers storage of an image, some window of imagery around the image which triggered storage will be stored.
In some implementations, various ones of the models can be combined to form a multi-headed model. As one example, the face attribute model 1208, the face recognition model 1216, and/or the face photogenic model 1212 can be merged or otherwise combined to form a multi-headed model that receives a single set of inputs and provides multiple outputs.
At 1302, the user computing device communicatively connects to the mobile image capture device. For example, the user computing device can communicatively connect to the mobile image capture device over a Wi-Fi local area network.
At 1304, the user computing device receives metadata for any reflections or image capture sessions that have not yet been received from the mobile image capture device. For example, the metadata can include the annotations, IMU data, timestamp, and other information (e.g., was this image manually triggered) associated with each image included in the reflection. However, the transferred data will typically not include the images themselves.
At 1306, the user computing device selects one or more of the images for transfer. For example, the user computing device can implement a transfer controller to select one or more of the images for transfer. In particular, the transfer controller can take as input the collection of annotations and other metadata and make the decision about which images to transfer from the image capture device to the user computing device.
In some implementations, the transfer controller performs an optimization algorithm to select which of the images stored in the memory of the mobile image capture device to request for transfer. The optimization algorithm can have a plurality of associated objectives which include, for example, at least a diversity of settings (e.g., locations and times) and a diversity of depicted persons, while still requesting transfer of the most desirable images. Various weights can be assigned to the objectives. In some implementations, the transfer controller can implement a submodular function to select which images to request for transfer. In some implementations, all images that were manually triggered will be selected for transfer. In some implementations, at least one image that depicts each frequently-seen person will be selected for transfer.
At 1308, the user computing device receives the transferred images.
At 1310, the user computing device selects at least one highlight image for each of one or more moments included in the reflection. For example, selection of highlight images may be performed based on the annotations or other metadata included for each of the images. In some implementations, each image in a moment is normalized relative to its peer images within such moment prior to performing highlight selection. Thus, selection of a highlight image for each moment can be based at least in part on a comparison of the annotations of each image included in such moment relative to the annotations of at least one other image included in such moment. In some implementations, selecting the at least one highlight image at 1310 can include determining a score for each transferred image, where the image that receives the highest score is considered the highlight image.
Each reflection can be represented by a spherical image, as illustrated. Other forms of representation can be used as well (e.g., textual list). In some implementations, the reflection representation has a number of different visual states that indicate the state of the corresponding reflection. For example, the reflection can have the following states: reflection capture in progress; reflection stored on mobile image capture device but not yet on user computing device; reflection actively being transferred from mobile image capture device to user computing device; reflection ready for editing; loading reflection from backup source; importing reflection from third-party backup source; shared reflection available, but not downloaded; and/or shared reflection ready for editing.
The user interface 1400 can further include a shot list access button 1406 and a settings access button 1408. Touching, tapping, or otherwise selecting the shot list access button 1406 can result in the application providing the user interface 1500 of FIG. 15 .
In particular, FIG. 15 depicts an example user interface 1500 to enable management of entities that have a heightened importance according to an example embodiment of the present disclosure in some implementations, the set of entities that have a heightened importance to the user can be referred to as a “shot list”.
The user interface 1500 can provide a scrollable list of entities (e.g., entities 1502 and 1504) that the user can manage (e.g., delete, prioritize, etc.). In particular, the user can combine entities, remove entities, manually add an entity, or other actions. In particular, the user can select button 1506 to manually add an entity to the shot list. The entities can be assigned different levels of importance.
In some implementations, the shot list can be manually created or seeded by the user or can be auto populated with entities that are frequently commonly recognized within images captured by the mobile image capture device. In some implementations, a user may optionally elect to have their entire photographic library (e.g., including images not captured by the mobile image capture device) analyzed to seed the shot list.
A representative image can be provided for each entity. Entities in the shot list can include people or other semantic entities.
In some implementations, if the user selects a particular representative image of an entity, the user may be presented with information or statistics regarding images of such entity over time. Alternatively or additionally, the information or statistics can provide a justification as to why such entity was automatically added to the shot list. As another example, if the user presses and holds on a particular representative image of an entity, one or more of the representative images of the entities may be switched into a deletion visualization which enables the user to x-out or otherwise delete particular entities from the shot list.
In some implementations, the shot list is a persistent list that is maintained over time and passed back and forth between and updated by the user computing device and the mobile image capture device. In other implementations, the shot list can be session-specific. In some implementations, one or more visualizations can be provided that show how importance of certain entities has changed over time or demonstrates relative importance of entities versus other entities.
In some implementations, when the shot list is manually updated or tweaked, one or more reflections can be recomposed by the user computing device and/or mobile image capture device to better reflect the updated shot list. As one example, after a reflection has been transferred to a user computing device, a user might navigate to user interface 1500 and delete certain entities that were automatically added to the shot list. For example, the deleted entities may have been bystanders that were frequently captured in images. In response to such shot list adjustments, the user computing device can respond by recomposing the reflection to filter out or blur the bystander from images or wholly eliminate images that depict the bystander.
In some implementations, if a user swipes on one of the tiles, the user interface 1700 can provide information or statistics 1706 regarding images of such entity over time (e.g., “seen in 5 sessions”). Alternatively or additionally, the information or statistics 1706 can provide a justification or explanation as to why such entity was automatically added to the shot list (e.g., “often close to the camera” or “composed several shots of this entity in editing interface”). Swiping on the horizontal tile may also reveal a button 1708 that enables deletion of the corresponding entity from the shot list.
The user interfaces 1500, 1600, and 1700 are provided as examples only. Many different representations of entities and controls for management thereof can be used according to the present disclosure.
Referring again to FIG. 14 , if the user selects the settings button 1408, the application can transition to user interface 1800 of FIG. 18 .
The user may be able to toggle between menus for controlling settings associated with the user computing device or associated account and settings associated with the mobile image capture device. For example, if the user selects the “lenses” button, the application can transition to user interface 1900 of FIG. 19 . More particularly, as used with reference to FIGS. 18, 19, and 30 , the term “lens” or “lenses” is used as a nickname or shorthand for the mobile image capture device(s).
The user interface 1900 can also include a button 1902 that enables a new or additional mobile image capture device to be paired with the user computing device. As one example, if the user selects button 1902, the application can cause the user computing device to display screen 2000 of FIG. 20 .
The mobile image capture device is operable to capture imagery of the pattern and, in response to capturing the imagery of the pattern, communicatively connect to the user computing device (e.g., using Bluetooth Low Energy advertisements and discovery). For example, the pattern can be a visual encoding of a key or other information sufficient to enable communicative connection. In other implementations, the pattern can include a pattern of colors in addition to or alternatively to a pattern of shapes. In other implementations, the user computing device and the mobile image capture device may have other pairing techniques.
In some implementations, the user interface 2100 displays a capture visualization 2102 received from the mobile image capture device. In particular, display of the capture visualization 2102 in the user interface 2100 is indicative of present operation of the mobile image capture device. Typically, the capture visualization 2100 will be some abstracted representation of recently captured imagery (e.g., a histogram or other visualization of color, lighting, or other parameters, a cartoon of the scene, a pin-hole view of the scene, etc.) without being the captured imagery itself. As one example, the capture visualization 2102 can be a representation of an “interestingness” signal of the captured imagery versus time. As another example, the capture visualization 2102 can be a relatively meaningless metric (e.g., number of beards seen during capture session) that simply represents a silly or fun way to indicate that the mobile image capture device is presently operating.
Thus, the capture visualization 2102 may be based at least in part on one or more recently captured images of the plurality of images. Use of capture visualizations in such fashion enables the user to understand that the mobile image capture device is operating and capturing imagery, but prevents distracting the user from actually enjoying the captured moment by showing detailed imagery for review.
The user interface 2100 can also include a control 2106 to delete recently captured imagery. The amount of time's worth of imagery that is deleted can be varied based on user input.
Referring again to FIG. 14 , if the user selects one of the reflections (e.g., by tapping representative image 1402) the application can transition to a user interface that enables editing of images included in the selected reflection. In particular, the user interface can enable both temporal and spatial gesture control in service of photographic “re-composition.” FIGS. 22 and 23 provide two examples of such an editing user interface.
The user interface 2200 enables the user to explore the reflection via a sequence of moments. In particular, example gesture controls to navigate between or within a moment will be discussed below and with further reference to FIGS. 24 and 25 . Generally, the user interface 2200 will display at least a portion 2202 of a captured image to fill an available display space. A record button 2204, a gallery button 2206, and a progress bar 2208 can be overlaid on the portion 2202 of the captured image within the display space. The progress bar 2208 can provide an indication of the presently displayed image's position with a timeline of the moment or a timeline of the reflection as a whole.
In some implementations, the images received from the mobile image capture device are wide angle images. Therefore, the user computing device can display a dewarped portion 2202 of the wide angle image within the user interface 2200. For example, the displayed portion 2202 can correspond to a recommended composition, as will be discussed further below. The user interface 2200 can enable various gesture controls for temporally navigating between images. In addition, the user interface 2200 can permit the user to spatially explore a particular image to view other portions of the image or to cause new imagery to be synthesized (e.g., through control of a virtual camera).
Discussing first the gesture controls for temporally exploring images in a reflection, as one example, the user can navigate frame-by-frame within a moment by performing a slow swipe or drag gesture. Thus, if the user performs a slow drag gesture, the portion 2202 of the image can be replaced by a portion of the previous or next image in the moment (depending on the direction of the drag). Such frame-by-frame display of images in a moment can be referred to as visually scrolling the images.
In some implementations, images within a moment can be cinematically scrolled by sequentially displaying the plurality of images included in the presently displayed moment without translating the plurality of images included in the presently displayed moment relative to the display. Thus, in response to a slow drag gesture, the series of images included in a moment can be displayed in the style of a “flip book” such that at least a portion of the moment is presented cinematically.
As another example temporal control gesture, a user can navigate between moments by performing a fast swipe or drag gesture. For example, in response to a user swipe, the user interface can transition to display of an image from the previous or next moment (depending on the direction of the swipe).
As an example, the displayed image from the previous or next moment can be the last image within the previous moment or first image within the next moment. As another example, the displayed image from the previous or next moment can be the highlight image selected for such moment. As yet another example, the user interface 2200 can transition to the next moment by cinematically scrolling from the first image included in such moment to the highlight image for such moment. Likewise, the user interface 2200 can transition to the previous moment by cinematically scrolling backwards from the last image included in such moment to the highlight image for such moment.
The user interface 2200 also includes controls for spatially exploring the images included in a reflection. More particularly, the user interface 2200 can enable the user to manipulate or control a virtual camera to spatially explore a particular image (e.g., the currently displayed image).
In particular, the virtual camera controls, in combination with advanced computational photography techniques, enable the user to spatially explore a captured scene and compose “new” photographs from a different perspective than the perspective from which the mobile image capture device captured the original image. Example techniques for enabling such spatial exploration and control will be discussed with further reference to FIG. 26 below. In some implementations, spatial exploration (e.g., virtual camera controls) are performed through multi-touch or multiple contact point gestures.
The user interface 2200 also enables the user to “re-take” one or more photographs and/or videos from the images included in a moment. In particular, if the user presses and quickly releases (e.g., taps) the record button 2204, the currently displayed portion 2202 of the image will be captured as a “new” photograph. As noted, the user can manipulate the virtual camera to view other portions of the image and capture a “new” photograph of such other portions, as well.
However, if the user presses and holds the record button 2204, a new video will be created. The new video will include a series of images from the moment (e.g., from the currently displayed image forward) as viewed from the perspective that corresponds to the currently displayed portion 2202 of the image. Stated differently, the video includes a series of images from the moment, as viewed from the current perspective of the virtual camera. Each image in the video can have edited or otherwise adjusted camera parameters (e.g., focus, lens distortions, lighting, etc.) that would result from the current perspective of the virtual camera.
In further implementations, the user interface can enable the user to search through multiple reflections' worth of images based on semantic labels or other data. In particular, with sufficient imagery data (such as a reflection library), a user could select a single item in a picture and the user computing device could search out images that include the same or other similar items. As an example, a user can select a person and see other images of that person in place by spinning a time based dial, for instance. If ordered in time like this, for example, the user could see their child grow up based on the photos the user has captured of the child over time.
At 2402, the user computing device navigates to a new moment. For example, the user computing device can navigate to a new moment as a result of a reflection being selected from user interface 1400 of FIG. 14 . As another example, the user computing device can navigate to a new moment from a previously displayed moment.
At 2403, the user computing device enables user interaction with image editing interface. For example, the user can scrub or scroll between images contained within the moment or can adjust a perspective of a virtual camera to view a different portion of an image. Various other image editing controls can be provided as well.
At 2404, the user computing device receives data that describes a tap gesture. In particular, the user computing device can receive data that describes a tap gesture performed on a portion of the image and not on a record button or a gallery button. In some implementations, the tap of the portion of the image can serve as an indication that the user would like to view the moment cinematically. In some implementations, a medium speed drag gesture can be used instead of the tap gesture. For example, the medium speed drag gesture can be faster than a frame-by-frame drag gesture but slower than a moment-to-moment swipe.
At 2406, the user computing device visually scrolls through the images included in the presently viewed moment. In some implementations, a velocity at which the plurality of images are visually scrolled is reduced when the at least one highlight image selected for the moment is provided on the display.
As one example, in some implementations, visually scrolling the images in the moment at 2406 can include visually scrolling the plurality of images such that the velocity at which the plurality of images are visually scrolled is incrementally reduced as the at least one highlight image is approaching display. As another example, in some implementations, visually scrolling the images in the moment at 2406 can include visually scrolling the plurality of images on the display such that the scrolling slows and then stops upon the highlight image.
More particularly, in some implementations of the present disclosure, the user computing device (e.g., the best shot selector or transfer controller) can determine a plurality of tension values respectively for the plurality of images based at least in part on the plurality of annotations respectively associated with the plurality of images. Thereafter, the user computing device can visually scroll the plurality of images at a velocity which is non-constant and which is inversely proportional to the tension value of a currently displayed image. Thus, images with relatively larger tension values will be displayed for a greater duration than images with relatively smaller tension values, where the magnitude of an image's tension value is indicative of the desirability of the scene depicted by such image.
As another example, in some implementations, visually scrolling the images in the moment at 2406 can include cinematically scrolling the images in the moment in a flip book fashion.
In addition, in some implementations, the user computing device determines a recommended composition for each of the plurality of images based at least in part on the at least one annotation associated with such image. In particular, the recommended composition for each image may include only a recommended portion of such image. As an example, in some implementations, the plurality of images in each moment comprise a plurality of wide angle images and the recommended composition for each image includes only an unwarped or dewarped portion of such image. In such implementations, visually scrolling the plurality of images at 2406 can include visually scrolling the respective recommended portions of the plurality of images on the display (e.g., the respective unwarped portions).
Referring again to FIG. 24 , at 2408, the user computing device determines whether visual scrolling is concluded. If visual scrolling is not concluded, then the device returns to 2406 and continues visually scrolling the images. However, if visual scrolling is concluded, then the device proceeds to 2410.
At 2410, the user computing device enables user interaction with the image editing interface. Thus, an additional gesture control of the present disclosure can include a tap or a medium speed drag on the displayed image to cause visual scrolling of images of the presently viewed moment.
In further implementations, the user computing device can perform visual scrolling of images within a moment (e.g., in the different fashions described above) immediately upon navigating to a new moment. For example, visual scrolling can be performed as an intermediate step between 2402 and 2403.
At 2502, the user computing device navigates to a new moment. For example, the user computing device can navigate to a new moment as a result of a reflection being selected from user interface 1400 of FIG. 14 . As another example, the user computing device can navigate to a new moment from a previously displayed moment.
At 2504, the user computing device enables user interaction with the image editing interface. For example, the user can adjust a perspective of a virtual camera to view a different portion of a currently displayed image. Various other image editing controls can be provided as well.
At 2506, the user computing device receives data that describes a drag gesture. For example, the drag gesture can be a single contact point moved in a linear (e.g., horizontal) direction.
At 2508, the user computing device determines whether the speed of the drag gesture exceeds a threshold speed. If the speed of the drag gesture does exceed the threshold speed, then the user device computing device returns to 2502 and navigates to a new moment.
In some implementations, navigating to a new moment at 2502 can include translating one of the images included in the presently displayed moment off of the display while translating one of the images included in the other moment onto the display. This has the effect of visually announcing the transition between moments, similar to the frame by frame presentation of a comic book, and provides a distinct visual contrast to cinematic scrolling of images within a moment.
In some implementations, navigating to a new moment at 2502 can include transitioning from a currently displayed image to an image from the previous or next moment (depending on the direction of the drag gesture). For example, the image from the previous or next moment can be the last image within the previous moment or first image within the next moment. As another example, the displayed image from the previous or next moment can be the highlight image selected for such moment.
As yet another example, navigating to the next moment at 2502 can include cinematically scrolling from the first image included in such moment to the highlight image for such moment. Likewise, the navigating to the previous moment at 2502 can include cinematically scrolling backwards from the last image included in such moment to the highlight image for such moment.
Referring again to FIG. 25 , if it is determined at 2508 that the speed of the drag gesture does not exceed the threshold speed, then the user computing device proceeds to 2510 and the visually scrolls through the images included in the moment. For example, visual scrolling can be performed according to any of the techniques discussed above with respect to method 2400. In other implementations, at 2510, the visual scrolling can include simply advancing frame-by-frame within the moment until the user discontinues the drag gesture.
After the user computing device has visually scrolled through the images included in the moment, the user computing device returns to 2504 and enables user interaction with the image editing interface.
At 2602, the user computing device navigates to the next image. For example, the user computing device may navigate to the next image as a result of visually scrolling or scrubbing images within a moment. In some implementations, the image is a wide angle image.
At 2604, the user computing device obtains a recommended composition for the image. For example, the user computing may have previously determined the recommended composition for such image based on one or more annotations associated with such image. In some implementations, the recommended composition includes a dewarped portion of the wide angle image.
At 2606, the user computing device projects the wide angle image onto a curved surface. For example, the curved surface can be a hemisphere.
At 2608, the user computing device provides a user interface that enables a user to manipulate a perspective of a virtual camera to view different portions of the wide angle image as projected onto the curved surface. In particular, at 2608, the user interface is provided with an initial perspective of the virtual camera corresponding to the recommended composition obtained at 2604.
Thus, at 2608 the user computing device can provide an interactive user interface that permits the user to reposition and/or reorient the virtual camera to gain a different perspective of the wide angle image projected onto a curved surface. In particular, controls can be provided for camera orientation, camera position (and movement thereof); and camera orbit. The virtual camera can be controlled according to any suitable control scheme, including, for example, according to various multi-touch gestures.
After the perspective of the camera has been adjusted, a new image that corresponds to the selected perspective can be determined by recalculating one or more camera parameters (e.g., focus, lens distortions, lighting, etc.) that would result from the new perspective. In addition, in some implementations of the present disclosure, advanced image processing techniques such as superresolution, hyper-lapse, texture mapping, depth mapping, view synthesis, etc. can also be applied to output synthetic or computed images that are generated from a combination of the transferred images. Likewise, controls may be provided for ISO, depth of field, stabilization, blur/focus, and other image parameters or characteristics. In further implementations, the user can be provided with the ability to selectively blur certain faces included in the image.
As one example, providing the interactive user interface at 2608 can include adjusting the position of the virtual camera to a new position in response to a user input, where the new position is different than a capture position at which the mobile image capture device captured the wide angle image. In such example, providing the interactive user interface at 2608 can further include performing view synthesis with respect to the wide angle image and at least one other image that is temporally adjacent to the wide angle image to generate a synthesized view of a scene depicted by the wide angle image from the new position. For example, the user computing device can implement a computational photographer to perform view synthesis with respect to a series of temporally adjacent images to generate synthesized views of the scene. The synthesized views can be displayed within the user interface at 2608.
At 2610, the user computing device receives user input selecting the current perspective of the virtual camera. For example, the user input can include a tap of a record button included in the user interface.
At 2612, the user computing device dewarps the wide angle image. At 2614, the user computing device non-destructively crops the dewarped image to obtain a narrow angle image that corresponds to the selected perspective of the virtual camera.
At 2616, the user computing device stores the “new” narrow angle image. For example, the narrow angle image can be added to a gallery for the presently viewed reflection. In further implementations, the narrow angle image can be added directly to a camera roll.
Thus, the user interface and associated editing tools described above empower the user to compose the photograph the user would have taken, had she been able to freeze time, explore the nuances of a moment, take out her camera or phone without forcing persons around her to alter their behavior, open a camera application, figure out the best way to hold the camera, and then capture the image. Ultimately, the systems and methods of the present disclosure provide superior results while saving time, effort, and management anxiety.
Referring again to FIG. 22 , if the user selects the gallery button, the application can transition to a gallery user interface 2700 as illustrated in FIG. 27 . More particularly, FIG. 27 depicts an example user interface 2700 to display captured images according to an example embodiment of the present disclosure.
The user interface 2700 can enable the user to review the photos and/or videos the user has “re-taken” from the current reflection or from all reflections (e.g., photos 2702 and 2704). Thus, the user can access photos and videos, scroll through photos and videos, and select a particular photo or video to share or delete. Selecting a particular photograph or video may bring up a full resolution version of the photo or video, with additional editing and share controls.
In some implementations, the gallery acts as a “scratch-disk” to the user computing device's default camera roll. The camera roll can also include photographs captured by a camera of the user computing device. Thus, by outputting images generated according to the present disclosure directly to the camera roll, the generated images can be treated as if they were captured by the user computing device. Further, the user is given the sensation that they have “captured” new images through the editing process.
Referring again to FIG. 22 , the user interface 2200 can also include a control 2210 to access an action sheet. If the user selects the control 2210, the application can transition to an action sheet user interface 2800 as illustrated in FIG. 28 .
More particularly, FIG. 28 depicts an example user interface 2800 to enable selection of features within an image editing application according to an example embodiment of the present disclosure. In particular, the user interface 2800 can serve as a hub for management of a presently viewed reflection.
As examples, the user interface 2800 can provide controls for editing reflections; sharing reflection; generating a photo album; exporting reflections as a video; combining a particular reflection with another reflection; accessing a backup control screen; or deleting a reflection from the user computing device. If the user selects the control to edit the reflection, then the application can transition to a user interface 2900 of FIG. 29 .
More particularly, FIG. 29 depicts an example user interface 2900 to edit a reflection at the moment-level according to an example embodiment of the present disclosure. In particular, the user interface 2900 can enable the user to delete undesirable moments from a reflection.
As one example, in the user interface 2900, the user can navigate between moments by swiping or by selecting a representative icon of such moment from a timeline at a bottom of the interface 2900, such as icons 2904 and 2906. The user can delete a presently displayed moment 2902 by swiping away or by selecting the delete button 2908. The user can confirm desirability of the moment 2902 by selecting the keep button 2910.
The user can also bring up additional options for the presently displayed moment 2902 by selecting the menu control 2912. In some implementations, the user can re-arrange moments, for example, by long pressing and then dragging the moment to drop between other moments.
Referring again to FIG. 28 , if the user selects the share reflection control, the application can transition to user interface 3000 of FIG. 30 . In particular, FIG. 30 depicts an example user interface 3000 to enable sharing of images according to an example embodiment of the present disclosure.
The user interface 3000 can provide controls for sharing via SMS messaging, email, social media applications, or other sharing channels. The user interface 3000 can also provide the ability for the user to prompt the user computing device to search for nearby computing devices associated with other users. For example, the user computing device (or the mobile image capture device under instruction of the user computing device) can search for nearby devices with which to share images (e.g., a whole reflection). For example, the mobile image capture device can use short-range radio broadcasts to locate nearby devices. In addition, the user interface 3000 can provide a secure URL that the user can copy and provide to other users to enable access to a reflection.
Some or all of the sharing functionality described above may be accomplished through communication by the user computing device or the mobile image capture device with a server computing device. In particular, the server computing device can retain a data store of captured images and can facilitate sharing with other persons and/or devices. In some implementations, sharing of data can include sharing the raw images that form a reflection, so that additional users can optionally “re-take” “new” images for themselves from the same data, according to the editing interfaces discussed above.
In some implementations of the present disclosure, to ensure privacy of the user and those persons depicted in images captured by the mobile image capture device, the user computing device uploads to the server computing device only images that are requested for upload to the server computing device during or as a result of a user-controlled editing session. Thus, no images are uploaded to the server computing device absent uploading instructions from the user. Therefore, all personal data is maintained under control of the user at his or her personal device.
According to another aspect of the present disclosure, the user computing device can infer person-based sharing intents from recognition within a reflection. As one example, in some implementations, the mobile image capture device is operable to perform face recognition with respect to each of a plurality of images included in a reflection to recognize one or more faces depicted in the plurality of images. Further, the user computing device can be operable to: enable the user to share the one or more images received from the mobile image capture device with one or more contacts; determine one or more relationships between the one or more contacts with whom the one or more images are shared and the one or more faces depicted in the shared images; and suggest, with respect to subsequent images received from the mobile image capture device in which the one or more faces are recognized, that the user share such subsequent images with particular ones of the one or more contacts based at least in part on the one or more relationships.
The user interface 3100 can provide controls for accepting or deleting an automatically generated album or for accepting or deleting particular images within an automatically generated album. For example, a delete button 3106 can be selected to delete the automatically generated album, while a keep button 3108 can be selected to keep the automatically generated album (e.g., add to camera roll).
The technology discussed herein makes reference to servers, databases, software applications, and other computer-based systems, as well as actions taken and information sent to and from such systems. The inherent flexibility of computer-based systems allows for a great variety of possible configurations, combinations, and divisions of tasks and functionality between and among components. For instance, server processes discussed herein may be implemented using a single server or multiple servers working in combination. Databases and applications may be implemented on a single system or distributed across multiple systems. Distributed components may operate sequentially or in parallel.
While the present subject matter has been described in detail with respect to specific example embodiments and methods thereof, it will be appreciated that those skilled in the art, upon attaining an understanding of the foregoing may readily produce alterations to, variations of, and equivalents to such embodiments. Accordingly, the scope of the present disclosure is by way of example rather than by way of limitation, and the subject disclosure does not preclude inclusion of such modifications, variations and/or additions to the present subject matter as would be readily apparent to one of ordinary skill in the art.
In addition, although FIGS. 13, 24, 25, and 26 respectively depict steps performed in a particular order for purposes of illustration and discussion, the methods of the present disclosure are not limited to the particularly illustrated order or arrangement. The various steps of the methods 1300, 2400, 2500, and 2600 can be omitted, rearranged, combined, and/or adapted in various ways without deviating from the scope of the present disclosure.
Further, although the present disclosure is generally discussed with reference to mobile image capture devices, the present disclosure is also applicable to other forms of image capture devices, as well, including, for example, surveillance cameras, security systems, dashboard cameras, robotic control system cameras, or other image capture devices. Further, aspects of the present disclosure, such as the curation and editing portions, can be applied to imagery captured from any other camera at any time.
Claims (16)
1. A resource-efficient image capture device, the image capture device comprising:
an image sensor that provides raw image data, the image sensor operable to receive an image sensor control signal and to adjust, based at least in part on the image sensor control signal, at least one of a frame rate and a resolution of the image sensor;
an imaging pipeline that streams the raw image data and processes the raw image data to generate one or more first images;
a temporary image buffer that temporarily stores the one or more first images; and
a scene analyzer that analyzes a scene depicted by at least one of the one or more first images and, based at least in part on such analysis, causes the image sensor control signal to be provided to the image sensor to adjust at least one of the frame rate and the resolution of the image sensor;
wherein the scene analyzer is operable to determine a desirability of the scene depicted by the at least one of the one or more first images;
wherein when the scene analyzer determines that the scene depicted by the at least one of the one or more first images is desirable, the scene analyzer causes the image sensor control signal to be provided to the image sensor to increase at least one of the frame rate or the resolution at which the image sensor provides the raw image data; and
wherein when the scene analyzer determines that the scene depicted by the at least one of the one or more first images is not desirable, the scene analyzer causes the image sensor control signal to be provided to the image sensor to decrease at least one of the frame rate or the resolution at which the image sensor provides the raw image data.
2. The image capture device of claim 1 , wherein the image sensor is further operable to adjust, based at least in part on the image sensor control signal, at least one of an exposure time, a gain, a region of interest, a crop, and a binning mode of the image sensor, and wherein the scene analyzer causes, based at least in part on the analysis of the scene, the image sensor control signal to be provided to the image sensor to adjust at least one of the exposure time, the gain, the region of interest, the crop, and the binning mode of the image sensor.
3. The image capture device of claim 1 , wherein:
the image capture device is operable in at least a low resolution capture mode, a high resolution capture mode, and a burst capture mode;
during a regular mode of operation, the image capture device periodically transitions between the low resolution capture mode and the high resolution capture mode; and
when the scene analyzer determines that a particular scene depicted by a particular image is desirable, the scene analyzer causes the image capture device to transition to the burst capture mode.
4. A method for operating an image capture device, the method comprising:
outputting, by an image sensor of the image capture device, raw image data, the image sensor capable of adjusting at least one of a frame rate and a resolution in response to an image sensor control signal;
streaming, by an imaging pipeline of the image capture device, the raw image data from the image sensor;
processing, by the imaging pipeline, the raw image data to generate a first image;
analyzing, by the image capture device, a scene depicted by the first image; and
providing, by the image capture device based at least in part on the analysis of the scene depicted by the first image, the image sensor control signal to cause the image sensor to adjust at least one of the frame rate and the resolution of the image sensor;
wherein analyzing, by the image capture device, the scene depicted by the first image comprises determining, by the image capture device, that the scene depicted by the first image has one or more desirable characteristics; and
wherein providing, by the image capture device based at least in part on the analysis of the scene depicted by the first image, the image sensor control signal comprises providing, by the image capture device based at least in part on the analysis of the scene depicted by the first image, the image sensor control signal to cause the image sensor to increase at least one of the frame rate or the resolution.
5. The method of claim 4 , further comprising:
providing, by the image capture device based at least in part on the analysis of the scene depicted by the first image, the image sensor control signal to adjust at least one of an exposure time, a gain, a region of interest, a crop, and a binning mode of the image sensor.
6. The method of claim 4 , wherein:
analyzing, by the image capture device, the scene depicted by the first image comprises determining, by the image capture device, that the scene depicted by the first image has one or more desirable characteristics; and
providing, by the image capture device based at least in part on the analysis of the scene depicted by the first image, the image sensor control signal to cause the image sensor to adjust at least one of the frame rate and the resolution comp rises selecting, by the image capture device, one of a plurality of different capture modes in which to operate, the plurality of different capture modes respectively having a plurality of different combinations of frame rates and resolutions.
7. A resource-efficient image capture device, the image capture device comprising:
an image sensor that provides raw image data, the image sensor operable to receive an image sensor control signal and to adjust, based at least in part on the image sensor control signal, a frame rate of the image sensor;
an imaging pipeline that streams the raw image data and processes the raw image data to generate one or more first images;
a temporary image buffer that temporarily stores the one or more first images; and
a scene analyzer that analyzes a scene depicted by at least one of the one or more first images and, based at least in part on such analysis, causes the image sensor control signal to be provided to the image sensor to adjust the frame rate of the image sensor;
wherein the scene analyzer is operable to determine a desirability of the scene depicted by the at least one of the one or more first images;
wherein when the scene analyzer determines that the scene depicted by the at least one of the one or more first images is desirable, the scene analyzer causes the image sensor control signal to be provided to the image sensor to increase the frame rate at which the image sensor provides the raw image data; and
wherein when the scene analyzer determines that the scene depicted by the at least one of the one or more first images is not desirable, the scene analyzer causes the image sensor control signal to be provided to the image sensor to decrease the frame rate at which the image sensor provides the raw image data.
8. The image capture device of claim 7 , wherein the image sensor is further operable to adjust, based at least in part on the image sensor control signal, at least one of an exposure time, a gain, a region of interest, a crop, and a binning mode of the image sensor, and wherein the scene analyzer causes, based at least in part on the analysis of the scene, the image sensor control signal to be provided to the image sensor to adjust at least one of the exposure time, the gain, the region of interest, the crop, and the binning mode of the image sensor.
9. A resource-efficient image capture device, the image capture device comprising:
an image sensor that provides raw image data, the image sensor operable to receive an image sensor control signal and to adjust, based at least in part on the image sensor control signal, at least one of a frame rate and a resolution of the image sensor;
an imaging pipeline that streams the raw image data and processes the raw image data to generate one or more first images;
a temporary image buffer that temporarily stores the one or more first images;
a scene analyzer that analyzes a scene depicted by at least one of the one or more first images and, based at least in part on such analysis, causes the image sensor control signal to be provided to the image sensor to adjust at least one of the frame rate and the resolution of the image sensor, wherein, in at least one of a plurality of capture modes, the scene analyzer determines, based at least in part on the analysis of the scene depicted by the at least one of the one or more first images, whether to store the one or more first images in a non-volatile memory or to discard the one or more first images from the temporary image buffer without storing the one or more first images in the non-volatile memory;
an image compression component that, in the at least one of the plurality of capture modes, compresses the one or more first images only when the scene analyzer determines that the one or more first images should be stored in the non-volatile memory, such that the image compression component expends energy on compressing only the first images selected for storage at the non-volatile memory; and
the non-volatile memory to which the one or more first images are written after compression.
10. The image capture device of claim 9 , wherein, in at least a high resolution capture mode:
the image sensor provides high resolution raw image data;
the image capture device further comprises a temporary raw data buffer that temporarily stores the high resolution raw image data;
the image capture device further comprises a down sampler that streams the high resolution raw image data from the image sensor and down samples the high resolution raw image data to output low resolution raw image data;
the imaging pipeline streams the low resolution raw image data from the down sampler and processes the low resolution raw image data to generate low resolution versions of the one or more first images;
the temporary image buffer temporarily stores the low resolution versions of the one or more first images; and
the scene analyzer analyzes at least one of the low resolution versions of the one or more first images to determine whether to store the one or more first images in the non-volatile memory or to discard the one or more first images.
11. The image capture device of claim 10 , wherein, in at least the high resolution capture mode, when the scene analyzer determines that the one or more first images should be stored in the non-volatile memory, the imaging pipeline receives the high resolution raw image data from the temporary raw data buffer and processes the high resolution raw image data to generate high resolution versions of the one or more first images, and the image compression component compresses the high resolution versions of the one or more first images for storage at the non-volatile memory.
12. The image capture device of claim 10 , wherein, in at least a low resolution capture mode:
the image sensor performs binning to provide low resolution raw image data;
the imaging pipeline streams the low resolution raw image data from the image sensor and processes the low resolution raw image data to generate low resolution versions of the one or more first images;
the temporary image buffer temporarily stores the low resolution versions of the one or more first images; and
the scene analyzer analyzes at least one of the low resolution versions of the one or more first images to determine whether to non-temporarily store the low resolution versions of the one or more first images or to discard the low resolution versions of the one or more first image.
13. The image capture device of claim 9 , wherein the temporary image buffer comprises dynamic random-access memory.
14. A resource-efficient image capture device, the image capture device comprising:
an image sensor that provides raw image data, the image sensor operable to receive an image sensor control signal and to adjust, based at least in part on the image sensor control signal, at least one of a frame rate and a resolution of the image sensor;
an imaging pipeline that streams the raw image data and processes the raw image data to generate one or more first images;
a temporary image buffer that temporarily stores the one or more first images;
a scene analyzer that analyzes a scene depicted by at least one of the one or more first images and, based at least in part on such analysis, causes the image sensor control signal to be provided to the image sensor to adjust at least one of the frame rate and the resolution of the image sensor;
an image compression component that compresses images; and
a non-volatile memory to which images are written after compression;
wherein, in at least a burst capture mode of operation:
the imaging pipeline streams the raw image data from the image sensor and processes the raw image data to generate a second image; and
the second image is provided to the image compression component for compression and then stored at the non-volatile memory without being analyzed by the scene analyzer.
15. The image capture device of claim 14 , wherein, in at least the burst capture mode, the image capture device captures high resolution images at a high frame rate and performs imaging pipeline operations, compression, and storage at the non-volatile memory for all of the captured high resolution images.
16. A resource-efficient image capture device, the image capture device comprising:
an image sensor that provides raw image data, the image sensor operable to receive an image sensor control signal and to adjust, based at least in part on the image sensor control signal, at least one of a frame rate and a resolution of the image sensor;
an imaging pipeline that streams the raw image data and processes the raw image data to generate one or more first images;
a temporary image buffer that temporarily stores the one or more first images; and
a scene analyzer that analyzes a scene depicted by at least one of the one or more first images and, based at least in part on such analysis, causes the image sensor control signal to be provided to the image sensor to adjust at least one of the frame rate and the resolution of the image sensor;
wherein the scene analyzer comprises:
at least one neural network that receives the first image as an input and outputs at least one descriptor of a desirability of the scene depicted by the first image; and
a mode controller that selects, based at least in part on the at least one descriptor, one of a plurality of capture states, wherein the image capture device thereafter operates in the capture state selected by the mode controller.
Priority Applications (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US14/984,869 US10225511B1 (en) | 2015-12-30 | 2015-12-30 | Low power framework for controlling image sensor mode in a mobile image capture device |
US16/109,708 US10728489B2 (en) | 2015-12-30 | 2018-08-22 | Low power framework for controlling image sensor mode in a mobile image capture device |
US16/936,815 US11159763B2 (en) | 2015-12-30 | 2020-07-23 | Low power framework for controlling image sensor mode in a mobile image capture device |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US14/984,869 US10225511B1 (en) | 2015-12-30 | 2015-12-30 | Low power framework for controlling image sensor mode in a mobile image capture device |
Related Child Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US16/109,708 Continuation US10728489B2 (en) | 2015-12-30 | 2018-08-22 | Low power framework for controlling image sensor mode in a mobile image capture device |
Publications (1)
Publication Number | Publication Date |
---|---|
US10225511B1 true US10225511B1 (en) | 2019-03-05 |
Family
ID=64657809
Family Applications (3)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US14/984,869 Active US10225511B1 (en) | 2015-12-30 | 2015-12-30 | Low power framework for controlling image sensor mode in a mobile image capture device |
US16/109,708 Active 2036-02-19 US10728489B2 (en) | 2015-12-30 | 2018-08-22 | Low power framework for controlling image sensor mode in a mobile image capture device |
US16/936,815 Active US11159763B2 (en) | 2015-12-30 | 2020-07-23 | Low power framework for controlling image sensor mode in a mobile image capture device |
Family Applications After (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US16/109,708 Active 2036-02-19 US10728489B2 (en) | 2015-12-30 | 2018-08-22 | Low power framework for controlling image sensor mode in a mobile image capture device |
US16/936,815 Active US11159763B2 (en) | 2015-12-30 | 2020-07-23 | Low power framework for controlling image sensor mode in a mobile image capture device |
Country Status (1)
Country | Link |
---|---|
US (3) | US10225511B1 (en) |
Cited By (10)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20190222756A1 (en) * | 2018-01-12 | 2019-07-18 | Movidius Ltd. | Methods and apparatus to operate a mobile camera for low-power usage |
CN110740264A (en) * | 2019-10-31 | 2020-01-31 | 重庆工商职业学院 | intelligent camera data rapid acquisition system and acquisition method |
CN111723638A (en) * | 2019-03-22 | 2020-09-29 | 意法半导体(格勒诺布尔2)公司 | Electronic image processing apparatus |
US10915995B2 (en) | 2018-09-24 | 2021-02-09 | Movidius Ltd. | Methods and apparatus to generate masked images based on selective privacy and/or location tracking |
CN112712098A (en) * | 2019-10-25 | 2021-04-27 | 北京四维图新科技股份有限公司 | Image data processing method and device |
US20210312181A1 (en) * | 2018-09-27 | 2021-10-07 | Fujifilm Corporation | Image processing device, image processing method, program, and recording medium |
CN114363540A (en) * | 2020-10-13 | 2022-04-15 | 豪威科技股份有限公司 | Camera system with PWM activation, frame-wise self-refresh, DRAM to reduce standby power consumption |
CN114666501A (en) * | 2022-03-17 | 2022-06-24 | 深圳市百泰实业股份有限公司 | Intelligent control method for camera of wearable device |
US11659155B2 (en) * | 2018-08-07 | 2023-05-23 | Lg Innotek Co., Ltd. | Camera |
US11947826B2 (en) | 2018-05-15 | 2024-04-02 | Samsung Electronics Co., Ltd. | Method for accelerating image storing and retrieving differential latency storage devices based on access rates |
Families Citing this family (26)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
EP3496386A4 (en) * | 2016-11-24 | 2019-07-03 | Huawei Technologies Co., Ltd. | Guiding method and device for photography composition |
US11276163B2 (en) * | 2017-05-02 | 2022-03-15 | Alvitae LLC | System and method for facilitating autonomous control of an imaging system |
US11468286B2 (en) * | 2017-05-30 | 2022-10-11 | Leica Microsystems Cms Gmbh | Prediction guided sequential data learning method |
US10944902B2 (en) * | 2017-06-20 | 2021-03-09 | Adobe Inc. | Digital image generation using capture support data |
CN111033524A (en) * | 2017-09-20 | 2020-04-17 | 奇跃公司 | Personalized neural network for eye tracking |
GB2572734A (en) * | 2017-12-04 | 2019-10-16 | Alphanumeric Ltd | Data modelling method |
US10579908B2 (en) * | 2017-12-15 | 2020-03-03 | Google Llc | Machine-learning based technique for fast image enhancement |
US10863097B2 (en) * | 2018-08-21 | 2020-12-08 | Gopro, Inc. | Field of view adjustment |
US10958828B2 (en) * | 2018-10-10 | 2021-03-23 | International Business Machines Corporation | Advising image acquisition based on existing training sets |
US10699150B2 (en) * | 2018-10-23 | 2020-06-30 | Polarr, Inc. | Machine guided photo and video composition |
US10885384B2 (en) * | 2018-11-15 | 2021-01-05 | Intel Corporation | Local tone mapping to reduce bit depth of input images to high-level computer vision tasks |
CN109831638B (en) * | 2019-01-23 | 2021-01-08 | 广州视源电子科技股份有限公司 | Video image transmission method and device, interactive intelligent panel and storage medium |
US20200242771A1 (en) * | 2019-01-25 | 2020-07-30 | Nvidia Corporation | Semantic image synthesis for generating substantially photorealistic images using neural networks |
JP7010259B2 (en) | 2019-03-20 | 2022-02-10 | カシオ計算機株式会社 | Imaging equipment, imaging methods and programs |
KR20200141813A (en) | 2019-06-11 | 2020-12-21 | 삼성전자주식회사 | Image signal processor and image sensor including the image signal processor |
CN110519509A (en) * | 2019-08-01 | 2019-11-29 | 幻想动力(上海)文化传播有限公司 | Composition evaluation method, method for imaging, device, electronic equipment, storage medium |
CN111191581B (en) * | 2019-12-27 | 2024-04-12 | 深圳供电局有限公司 | Safety helmet detection method and device based on electric power construction and computer equipment |
US11687778B2 (en) | 2020-01-06 | 2023-06-27 | The Research Foundation For The State University Of New York | Fakecatcher: detection of synthetic portrait videos using biological signals |
US11574392B2 (en) * | 2020-02-27 | 2023-02-07 | Adobe Inc. | Automatically merging people and objects from multiple digital images to generate a composite digital image |
CN113453203B (en) * | 2020-03-26 | 2023-03-28 | 华为技术有限公司 | Data sharing and instruction operation control method and system |
US11363188B2 (en) | 2020-06-17 | 2022-06-14 | Microsoft Technology Licensing, Llc | Motion-based operation of imaging devices |
US11631196B2 (en) | 2020-07-31 | 2023-04-18 | Zebra Technologies Corporation | Systems and methods to optimize imaging settings for a machine vision job |
EP4047923A4 (en) | 2020-12-22 | 2022-11-23 | Samsung Electronics Co., Ltd. | Electronic device comprising camera and method of same |
CN112884684B (en) * | 2021-01-13 | 2022-07-22 | 电子科技大学 | Reflecting image synthesis method based on RAW image |
CN113255517B (en) * | 2021-05-24 | 2023-10-24 | 中国科学技术大学 | Expression recognition model training method for protecting privacy and expression recognition method and device |
US20230232098A1 (en) * | 2022-01-14 | 2023-07-20 | Bendix Commercial Vehicle Systems Llc | System and method for opportunistic imaging |
Citations (229)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4952051A (en) | 1988-09-27 | 1990-08-28 | Lovell Douglas C | Method and apparatus for producing animated drawings and in-between drawings |
US5164831A (en) | 1990-03-15 | 1992-11-17 | Eastman Kodak Company | Electronic still camera providing multi-format storage of full and reduced resolution images |
US5227835A (en) | 1990-12-21 | 1993-07-13 | Eastman Kodak Company | Teachable camera |
US5267332A (en) | 1991-06-19 | 1993-11-30 | Technibuild Inc. | Image recognition system |
US5546145A (en) | 1994-08-30 | 1996-08-13 | Eastman Kodak Company | Camera on-board voice recognition |
US5699449A (en) | 1994-11-14 | 1997-12-16 | The University Of Connecticut | Method and apparatus for implementation of neural networks for face recognition |
US5812193A (en) | 1992-11-07 | 1998-09-22 | Sony Corporation | Video camera system which automatically follows subject changes |
USRE36207E (en) | 1991-05-13 | 1999-05-04 | Omniview, Inc. | Omniview motionless camera orientation system |
US6005611A (en) | 1994-05-27 | 1999-12-21 | Be Here Corporation | Wide-angle image dewarping method and apparatus |
US6014183A (en) | 1997-08-06 | 2000-01-11 | Imagine Products, Inc. | Method and apparatus for detecting scene changes in a digital video stream |
US20010020837A1 (en) | 1999-12-28 | 2001-09-13 | Junichi Yamashita | Information processing device, information processing method and storage medium |
US6301440B1 (en) | 2000-04-13 | 2001-10-09 | International Business Machines Corp. | System and method for automatically setting image acquisition controls |
US20020033848A1 (en) | 2000-04-21 | 2002-03-21 | Sciammarella Eduardo Agusto | System for managing data objects |
US6448956B1 (en) | 1997-10-31 | 2002-09-10 | Eastman Kodak Company | Systems and methods for direct image manipulation |
US6516154B1 (en) | 2001-07-17 | 2003-02-04 | Eastman Kodak Company | Image revising camera and method |
US20030058340A1 (en) | 2001-09-27 | 2003-03-27 | Koninklijke Philips Electronics N.V. | Video monitoring system employing hierarchical hidden markov model (HMM) event learning and classification |
US6563532B1 (en) | 1999-01-05 | 2003-05-13 | Internal Research Corporation | Low attention recording unit for use by vigorously active recorder |
US20030146938A1 (en) | 2001-12-20 | 2003-08-07 | Bernhard Geiger | Fast scrolling through image sets containing markers |
US6614408B1 (en) | 1998-03-25 | 2003-09-02 | W. Stephen G. Mann | Eye-tap for electronic newsgathering, documentary video, photojournalism, and personal safety |
US20030191816A1 (en) | 2000-01-11 | 2003-10-09 | Spoovy, Llc | System and method for creating and delivering customized multimedia communications |
US6671405B1 (en) | 1999-12-14 | 2003-12-30 | Eastman Kodak Company | Method for automatic assessment of emphasis and appeal in consumer images |
US20040005915A1 (en) | 2002-05-17 | 2004-01-08 | Hunter Andrew Arthur | Image transmission |
US6680748B1 (en) | 2001-09-27 | 2004-01-20 | Pixim, Inc., | Multi-mode camera and method therefor |
US20040012508A1 (en) | 2002-07-19 | 2004-01-22 | Wolfson Stanley J. | Keyboard modification system |
US20040075743A1 (en) | 2002-05-22 | 2004-04-22 | Sony Computer Entertainment America Inc. | System and method for digital image selection |
US20040080618A1 (en) | 2000-11-20 | 2004-04-29 | Norris Timothy Sweyn | Smart camera system |
US20040101212A1 (en) | 2002-11-25 | 2004-05-27 | Eastman Kodak Company | Imaging method and system |
US20040114176A1 (en) | 2002-12-17 | 2004-06-17 | International Business Machines Corporation | Editing and browsing images for virtual cameras |
US6757027B1 (en) | 2000-02-11 | 2004-06-29 | Sony Corporation | Automatic video editing |
US20040125088A1 (en) | 2001-12-28 | 2004-07-01 | John Zimmerman | Touch-screen image scrolling system and method |
US20040143604A1 (en) | 2003-01-21 | 2004-07-22 | Steve Glenner | Random access editing of media |
US20040143590A1 (en) | 2003-01-21 | 2004-07-22 | Wong Curtis G. | Selection bins |
US20040162647A1 (en) | 2001-07-16 | 2004-08-19 | Takamasa Koshizen | Behavior control apparatus and method |
US20040212637A1 (en) | 2003-04-22 | 2004-10-28 | Kivin Varghese | System and Method for Marking and Tagging Wireless Audio and Video Recordings |
US20050030387A1 (en) | 2003-07-26 | 2005-02-10 | Maurizio Pilu | Image capture device having a learning function |
US20050046584A1 (en) | 1992-05-05 | 2005-03-03 | Breed David S. | Asset system control arrangement and method |
US6870532B2 (en) | 2000-06-09 | 2005-03-22 | Interactive Imaging Systems, Inc. | Image display |
US20050062845A1 (en) | 2003-09-12 | 2005-03-24 | Mills Lawrence R. | Video user interface system and method |
WO2005065283A2 (en) | 2003-12-24 | 2005-07-21 | Walker Digital, Llc | Method and apparatus for automatically capturing and managing images |
US6930718B2 (en) | 2001-07-17 | 2005-08-16 | Eastman Kodak Company | Revised recapture camera and method |
US20050192808A1 (en) | 2004-02-26 | 2005-09-01 | Sharp Laboratories Of America, Inc. | Use of speech recognition for identification and classification of images in a camera-equipped mobile handset |
US20050192924A1 (en) | 2004-02-17 | 2005-09-01 | Microsoft Corporation | Rapid visual sorting of digital files and data |
US6940545B1 (en) | 2000-02-28 | 2005-09-06 | Eastman Kodak Company | Face detecting camera and method |
US20050200486A1 (en) | 2004-03-11 | 2005-09-15 | Greer Richard S. | Patient visual monitoring system |
US20050228849A1 (en) | 2004-03-24 | 2005-10-13 | Tong Zhang | Intelligent key-frame extraction from a video |
US20050231589A1 (en) | 2004-03-23 | 2005-10-20 | Yu-Lin Chiang | Panoramic photographing monitoring and tracking system and method |
US20050276495A1 (en) | 2004-06-11 | 2005-12-15 | Samsung Electronics Co., Ltd. | Method of providing digital audio broadcasting (DAB) slide show including interactive information, apparatus for processing the same, and DAB receiver |
US7006881B1 (en) | 1991-12-23 | 2006-02-28 | Steven Hoffberg | Media recording device with remote graphic user interface |
US7031555B2 (en) | 1999-07-30 | 2006-04-18 | Pixlogic Llc | Perceptual similarity image retrieval |
US20060115185A1 (en) | 2004-11-17 | 2006-06-01 | Fuji Photo Film Co., Ltd. | Editing condition setting device and program for photo movie |
US20060161867A1 (en) | 2003-01-21 | 2006-07-20 | Microsoft Corporation | Media frame object visualization system |
US20060187305A1 (en) | 2002-07-01 | 2006-08-24 | Trivedi Mohan M | Digital processing of video images |
US20060208169A1 (en) | 1992-05-05 | 2006-09-21 | Breed David S | Vehicular restraint system control system and method using multiple optical imagers |
US20060268121A1 (en) | 2005-02-20 | 2006-11-30 | Nucore Technology Inc. | In-camera cinema director |
US20070124783A1 (en) | 2005-11-23 | 2007-05-31 | Grandeye Ltd, Uk, | Interactive wide-angle video server |
US20070132874A1 (en) | 2005-12-09 | 2007-06-14 | Forman George H | Selecting quality images from multiple captured images |
US20070146337A1 (en) | 2005-12-23 | 2007-06-28 | Bas Ording | Continuous scrolling list with acceleration |
US20070203942A1 (en) | 2006-02-27 | 2007-08-30 | Microsoft Corporation | Video Search and Services |
US20070201694A1 (en) | 2002-06-18 | 2007-08-30 | Bolle Rudolf M | Privacy management in imaging system |
US7352918B2 (en) | 2001-12-21 | 2008-04-01 | International Business Machines Corporation | Method and circuits for scaling images using neural networks |
US20080144968A1 (en) | 2006-12-15 | 2008-06-19 | Microsoft Corporation | Dynamic viewing of wide angle images |
US20080229235A1 (en) | 2007-03-12 | 2008-09-18 | Jean-Marie Vau | Variable-speed browsing method for digital images |
US7430369B2 (en) | 2004-08-16 | 2008-09-30 | Canon Kabushiki Kaisha | Image capture apparatus and control method therefor |
US20080304808A1 (en) | 2007-06-05 | 2008-12-11 | Newell Catherine D | Automatic story creation using semantic classifiers for digital assets and associated metadata |
US20090046094A1 (en) | 2007-08-16 | 2009-02-19 | Hamilton Ii Rick Allen | Method and apparatus for predicting avatar movement in a virtual universe |
US7511838B2 (en) | 2001-07-27 | 2009-03-31 | Hewlett-Packard Development Company, L.P. | Method and apparatus for reviewing captured images |
US7532234B2 (en) | 2003-06-19 | 2009-05-12 | Microsoft Corporation | Automatic analysis and adjustment of digital images upon acquisition |
US20090141969A1 (en) | 2007-11-29 | 2009-06-04 | Nec Laboratories America, Inc. | Transfer Learning Methods and systems for Feed-Forward Visual Recognition Systems |
US7551754B2 (en) | 2006-02-24 | 2009-06-23 | Fotonation Vision Limited | Method and apparatus for selective rejection of digital images |
US20090204920A1 (en) | 2005-07-14 | 2009-08-13 | Aaron John Beverley | Image Browser |
US20090219411A1 (en) | 2008-03-03 | 2009-09-03 | Videolq, Inc. | Content aware storage of video data |
US20090254867A1 (en) | 2008-04-03 | 2009-10-08 | Microsoft Corporation | Zoom for annotatable margins |
US20090263028A1 (en) | 2008-04-21 | 2009-10-22 | Core Logic, Inc. | Selecting Best Image |
US7616233B2 (en) | 2003-06-26 | 2009-11-10 | Fotonation Vision Limited | Perfecting of digital image capture parameters within acquisition devices using face detection |
US20090300506A1 (en) | 2008-05-30 | 2009-12-03 | Microsoft Corporation | Mark-up extensions for semantically more relevant thumbnails of content |
US20090303343A1 (en) | 2007-03-05 | 2009-12-10 | Fotonation Ireland Limited | Low-light video frame enhancement |
US20090307618A1 (en) | 2008-06-05 | 2009-12-10 | Microsoft Corporation | Annotate at multiple levels |
US20090310851A1 (en) | 2008-06-12 | 2009-12-17 | Microsoft Corporation | 3d content aggregation built into devices |
US20090324098A1 (en) | 2008-06-27 | 2009-12-31 | Sony Ericsson Mobile Communications Ab | Mobile phone with selective photographic system and method |
US20090325607A1 (en) | 2008-05-28 | 2009-12-31 | Conway David P | Motion-controlled views on mobile computing devices |
US20090324010A1 (en) | 2008-06-26 | 2009-12-31 | Billy Hou | Neural network-controlled automatic tracking and recognizing system and method |
US20100020224A1 (en) | 2008-07-24 | 2010-01-28 | Canon Kabushiki Kaisha | Method for selecting desirable images from among a plurality of images and apparatus thereof |
US20100046842A1 (en) | 2008-08-19 | 2010-02-25 | Conwell William Y | Methods and Systems for Content Processing |
US20100048242A1 (en) | 2008-08-19 | 2010-02-25 | Rhoads Geoffrey B | Methods and systems for content processing |
US20100058240A1 (en) | 2008-08-26 | 2010-03-04 | Apple Inc. | Dynamic Control of List Navigation Based on List Item Properties |
US20100056211A1 (en) | 2008-09-04 | 2010-03-04 | Samsung Electronics Co., Ltd. | Method and apparatus for taking pictures on a mobile communication terminal having a camera module |
US7676145B2 (en) | 2007-05-30 | 2010-03-09 | Eastman Kodak Company | Camera configurable for autonomous self-learning operation |
US7729602B2 (en) | 2007-03-09 | 2010-06-01 | Eastman Kodak Company | Camera using multiple lenses and image sensors operable in a default imaging mode |
US7729532B2 (en) | 2003-02-26 | 2010-06-01 | Walker Digital, Llc | System for image analysis in a network that is structured with multiple layers and differentially weighted neurons |
US7742625B2 (en) | 2003-06-27 | 2010-06-22 | Hewlett-Packard Development Company, L.P. | Autonomous camera having exchangable behaviours |
US7751683B1 (en) | 2000-11-10 | 2010-07-06 | International Business Machines Corporation | Scene change marking for thumbnail extraction |
US7761812B2 (en) | 2005-07-27 | 2010-07-20 | Microsoft Corporation | Media user interface gallery control |
US20100199232A1 (en) | 2009-02-03 | 2010-08-05 | Massachusetts Institute Of Technology | Wearable Gestural Interface |
US20100214216A1 (en) | 2007-01-05 | 2010-08-26 | Invensense, Inc. | Motion sensing and processing on mobile devices |
US7792335B2 (en) | 2006-02-24 | 2010-09-07 | Fotonation Vision Limited | Method and apparatus for selective disqualification of digital images |
US20100231730A1 (en) | 2009-03-13 | 2010-09-16 | Yuka Ichikawa | Image sensing device and camera |
US7804983B2 (en) | 2006-02-24 | 2010-09-28 | Fotonation Vision Limited | Digital image acquisition control and correction method and apparatus |
US7809162B2 (en) | 2003-06-26 | 2010-10-05 | Fotonation Vision Limited | Digital image processing using face detection information |
US7817914B2 (en) | 2007-05-30 | 2010-10-19 | Eastman Kodak Company | Camera configurable for autonomous operation |
US7826092B2 (en) | 1998-11-20 | 2010-11-02 | Nikon Corporation | Image processing apparatus having image selection function, and recording medium having image selection function program |
US20110022985A1 (en) | 2005-12-23 | 2011-01-27 | Bas Ording | Scrolling List with Floating Adjacent Index Symbols |
US20110074699A1 (en) | 2009-09-25 | 2011-03-31 | Jason Robert Marr | Device, Method, and Graphical User Interface for Scrolling a Multi-Section Document |
US20110075917A1 (en) | 2009-09-25 | 2011-03-31 | Cerosaletti Cathleen D | Estimating aesthetic quality of digital images |
US20110098056A1 (en) | 2009-10-28 | 2011-04-28 | Rhoads Geoffrey B | Intuitive computing methods and systems |
US20110098918A1 (en) | 2009-10-28 | 2011-04-28 | Google Inc. | Navigation Images |
US20110121414A1 (en) | 2008-07-28 | 2011-05-26 | Robert Bosch Gmbh | Encapsulation, MEMS and Method of Selective Encapsulation |
US7953690B2 (en) | 2008-01-25 | 2011-05-31 | Eastman Kodak Company | Discovering social relationships from personal photo collections |
US20110159921A1 (en) | 2009-12-31 | 2011-06-30 | Davis Bruce L | Methods and arrangements employing sensor-equipped smart phones |
US20110211040A1 (en) | 2008-11-05 | 2011-09-01 | Pierre-Alain Lindemann | System and method for creating interactive panoramic walk-through applications |
US20110212717A1 (en) | 2008-08-19 | 2011-09-01 | Rhoads Geoffrey B | Methods and Systems for Content Processing |
WO2011116309A1 (en) | 2010-03-19 | 2011-09-22 | Digimarc Corporation | Intuitive computing methods and systems |
US20110243397A1 (en) | 2010-03-30 | 2011-10-06 | Christopher Watkins | Searching digital image collections using face recognition |
US8041076B1 (en) | 2007-08-09 | 2011-10-18 | Adobe Systems Incorporated | Generation and usage of attractiveness scores |
US20110279461A1 (en) | 2007-08-16 | 2011-11-17 | International Business Machines Corporation | Spawning projected avatars in a virtual universe |
US8072495B2 (en) | 2009-03-27 | 2011-12-06 | Primax Electronics Ltd. | Automatic image capturing system |
US20120054670A1 (en) | 2010-08-27 | 2012-03-01 | Nokia Corporation | Apparatus and method for scrolling displayed information |
US8132096B1 (en) | 2007-03-26 | 2012-03-06 | Hewlett-Packard Development Company, L.P. | Image composition evaluation |
US20120066638A1 (en) | 2010-09-09 | 2012-03-15 | Microsoft Corporation | Multi-dimensional auto-scrolling |
US20120076427A1 (en) | 2010-09-24 | 2012-03-29 | Stacie L Hibino | Method of selecting important digital images |
US20120106848A1 (en) | 2009-09-16 | 2012-05-03 | Darryl Greig | System And Method For Assessing Photgrapher Competence |
US20120105475A1 (en) | 2010-11-02 | 2012-05-03 | Google Inc. | Range of Focus in an Augmented Reality Application |
US8180106B2 (en) | 2005-07-26 | 2012-05-15 | Canon Kabushiki Kaisha | Image capturing apparatus and image capturing method |
US8180112B2 (en) | 2008-01-21 | 2012-05-15 | Eastman Kodak Company | Enabling persistent recognition of individuals in images |
US8200019B2 (en) | 2008-02-13 | 2012-06-12 | Samsung Electronics Co., Ltd. | Method and system for automatically extracting photography information |
US8200025B2 (en) | 2007-12-07 | 2012-06-12 | University Of Ottawa | Image classification and search |
US20120147220A1 (en) * | 2010-12-10 | 2012-06-14 | Samsung Electronics Co., Ltd. | Digital image processing apparatus for quickly entering into reproduction mode and method of controlling the same |
US8208697B2 (en) | 2004-12-17 | 2012-06-26 | Koninklijke Philips Electronics N.V. | Method and apparatus for automatically developing a high performance classifier for producing medically meaningful descriptors in medical diagnosis imaging |
US20120174005A1 (en) | 2010-12-31 | 2012-07-05 | Microsoft Corporation | Content-based snap point |
US8238695B1 (en) | 2005-12-15 | 2012-08-07 | Grandeye, Ltd. | Data reduction techniques for processing wide-angle video |
US20120242851A1 (en) * | 2011-03-25 | 2012-09-27 | William Vernon Fintel | Digital camera having burst image capture mode |
US20120257071A1 (en) * | 2011-04-06 | 2012-10-11 | Prentice Wayne E | Digital camera having variable duration burst mode |
US20120290950A1 (en) | 2011-05-12 | 2012-11-15 | Jeffrey A. Rapaport | Social-topical adaptive networking (stan) system allowing for group based contextual transaction offers and acceptances and hot topic watchdogging |
US20120294514A1 (en) | 2011-05-19 | 2012-11-22 | Xerox Corporation | Techniques to enable automated workflows for the creation of user-customized photobooks |
US20120300019A1 (en) | 2011-05-25 | 2012-11-29 | Microsoft Corporation | Orientation-based generation of panoramic fields |
US20130055150A1 (en) | 2011-08-24 | 2013-02-28 | Primesense Ltd. | Visual feedback for tactile and non-tactile user interfaces |
US20130077820A1 (en) | 2011-09-26 | 2013-03-28 | Microsoft Corporation | Machine learning gesture detection |
US20130088520A1 (en) | 2011-10-07 | 2013-04-11 | Research In Motion Limited | Determining a target position for scrolling content |
US20130091462A1 (en) | 2011-10-06 | 2013-04-11 | Amazon Technologies, Inc. | Multi-dimensional interface |
US8427538B2 (en) | 2004-04-30 | 2013-04-23 | Oncam Grandeye | Multiple view and multiple object processing in wide-angle video camera |
US20130104080A1 (en) | 2011-10-19 | 2013-04-25 | Andrew Garrod Bosworth | Automatic Photo Capture Based on Social Components and Identity Recognition |
US8442268B2 (en) | 2007-07-31 | 2013-05-14 | Panasonic Corporation | Video analysis apparatus and method for calculating interpersonal relationship evaluation value using video analysis |
US8475396B2 (en) | 2011-02-11 | 2013-07-02 | AventuSoft, LLC | Method and system of an acoustic scene analyzer for body sounds |
US8478053B2 (en) | 2009-07-15 | 2013-07-02 | Nikon Corporation | Image sorting apparatus |
US20130169536A1 (en) | 2011-02-17 | 2013-07-04 | Orcam Technologies Ltd. | Control of a wearable device |
US20130169682A1 (en) | 2011-08-24 | 2013-07-04 | Christopher Michael Novak | Touch and social cues as inputs into a computer |
US20130177243A1 (en) | 2009-07-20 | 2013-07-11 | Aryk Erwin Grosz | Autoflow in Photobook Development |
US20130201359A1 (en) | 2012-02-06 | 2013-08-08 | Qualcomm Incorporated | Method and apparatus for unattended image capture |
US20130201344A1 (en) | 2011-08-18 | 2013-08-08 | Qualcomm Incorporated | Smart camera for taking pictures automatically |
US8514315B2 (en) | 2009-02-16 | 2013-08-20 | Lg Electronics Inc. | Method for processing image data in portable electronic device, and portable electronic device having camera thereof |
US8520116B2 (en) | 2009-07-07 | 2013-08-27 | Samsung Electronics Co., Ltd. | Photographing apparatus and method |
US20130245396A1 (en) | 2010-06-07 | 2013-09-19 | Affectiva, Inc. | Mental state analysis using wearable-camera devices |
US20130265451A1 (en) | 2012-04-10 | 2013-10-10 | Samsung Electronics Co., Ltd. | Apparatus and method for continuously taking a picture |
US20130314566A1 (en) | 2002-12-18 | 2013-11-28 | Walker Digital, Llc | Systems and methods for suggesting information for a photo to a user associated with the photo |
US20130321403A1 (en) | 2012-06-05 | 2013-12-05 | Apple Inc. | System and method for highlighting a feature in a 3d map while preserving depth |
US20130336543A1 (en) | 2012-06-19 | 2013-12-19 | Steven M. Bennett | Automated memory book creation |
US20130342526A1 (en) | 2012-06-26 | 2013-12-26 | Yi-Ren Ng | Depth-assigned content for depth-enhanced pictures |
US20140002580A1 (en) | 2012-06-29 | 2014-01-02 | Monkeymedia, Inc. | Portable proprioceptive peripatetic polylinear video player |
US20140021828A1 (en) | 2011-01-24 | 2014-01-23 | Commissariat A L'energie Atomique Et Aux Energies Alternatives | Circuit for optimizing the recovery of vibratory energy by a mechanical/electrical converter |
US20140022196A1 (en) | 2011-05-24 | 2014-01-23 | Hewlett-Packard Development Company, L.P. | Region of interest of an image |
US20140043517A1 (en) | 2012-08-09 | 2014-02-13 | Samsung Electronics Co., Ltd. | Image capture apparatus and image capture method |
US8666225B2 (en) | 2009-03-27 | 2014-03-04 | Sony Corporation | Digital cinema management device and digital cinema management method |
US8677257B2 (en) | 2006-08-04 | 2014-03-18 | Apple Inc. | Granular graphical user interface element |
US8677283B2 (en) | 2009-10-21 | 2014-03-18 | Microsoft Corporation | Displaying lists as reacting against barriers |
US20140080428A1 (en) | 2008-09-12 | 2014-03-20 | Digimarc Corporation | Methods and systems for content processing |
US8700392B1 (en) | 2010-09-10 | 2014-04-15 | Amazon Technologies, Inc. | Speech-inclusive device interfaces |
US20140104424A1 (en) | 2012-10-11 | 2014-04-17 | GM Global Technology Operations LLC | Imaging surface modeling for camera modeling and virtual view synthesis |
US8708903B2 (en) | 2006-05-12 | 2014-04-29 | Bao Tran | Patient monitoring appliance |
US20140152585A1 (en) | 2012-12-04 | 2014-06-05 | Research In Motion Limited | Scroll jump interface for touchscreen input/output device |
US20140160316A1 (en) | 2012-12-12 | 2014-06-12 | Lg Electronics Inc. | Mobile terminal and control method thereof |
US20140184849A1 (en) * | 2013-01-03 | 2014-07-03 | Samsung Electronics Co., Ltd. | Apparatus having camera and method for image photographing |
US8775971B2 (en) | 2008-12-05 | 2014-07-08 | Microsoft Corporation | Touch display scroll control |
US20140218283A1 (en) | 2013-02-01 | 2014-08-07 | Samsung Electronics Co., Ltd. | Method of controlling an operation of a camera apparatus and a camera apparatus |
US8810599B1 (en) | 2010-11-02 | 2014-08-19 | Google Inc. | Image recognition in an augmented reality application |
US20140242560A1 (en) | 2013-02-15 | 2014-08-28 | Emotient | Facial expression training using feedback from automatic facial expression recognition |
US20140241616A1 (en) | 2013-02-26 | 2014-08-28 | Adience SER LTD | Matching users across identifiable services based on images |
US20140253791A1 (en) | 2013-03-07 | 2014-09-11 | Nokia Corporation | Method, apparatus and computer program for selecting images |
US20140270707A1 (en) | 2013-03-15 | 2014-09-18 | Disney Enterprises, Inc. | Method and System for Detecting and Recognizing Social Interactions In a Video |
US8886298B2 (en) | 2004-03-01 | 2014-11-11 | Microsoft Corporation | Recall device |
US20140333675A1 (en) | 2011-12-26 | 2014-11-13 | Hideaki Nakaoka | Display control device and display control method |
US8897485B2 (en) | 2012-06-29 | 2014-11-25 | Intellectual Ventures Fund 83 Llc | Determining an interest level for an image |
US8902198B1 (en) | 2012-01-27 | 2014-12-02 | Amazon Technologies, Inc. | Feature tracking for device input |
US20140354845A1 (en) | 2013-05-31 | 2014-12-04 | Apple Inc. | Identifying Dominant and Non-Dominant Images in a Burst Mode Capture |
US20140372205A1 (en) | 2013-06-12 | 2014-12-18 | Google Inc. | Systems and methods for selecting and serving content items based on view probability |
US8924886B2 (en) | 2008-11-13 | 2014-12-30 | Kabushiki Kaisha Toshiba | Image display device and image display method |
US8938124B2 (en) | 2012-05-10 | 2015-01-20 | Pointgrab Ltd. | Computer vision based tracking of a hand |
US20150029349A1 (en) * | 2013-07-23 | 2015-01-29 | Michael BEN ISRAEL | Digital image processing |
US20150058944A1 (en) | 2013-08-20 | 2015-02-26 | Ohad Schachtel | Social driven portal using mobile devices |
US20150074532A1 (en) | 2013-09-10 | 2015-03-12 | Avigilon Corporation | Method and apparatus for controlling surveillance system with gesture and/or audio commands |
US20150071547A1 (en) | 2013-09-09 | 2015-03-12 | Apple Inc. | Automated Selection Of Keeper Images From A Burst Photo Captured Set |
US20150086109A1 (en) | 2013-09-23 | 2015-03-26 | Adobe Systems Incorporated | Using machine learning to define user controls for photo adjustments |
US20150111601A1 (en) | 2013-10-18 | 2015-04-23 | Logos Technologies, Llc | Systems and methods for displaying distant images at mobile computing devices |
US20150117760A1 (en) | 2013-10-30 | 2015-04-30 | Nec Laboratories America, Inc. | Regionlets with Shift Invariant Neural Patterns for Object Detection |
US9024842B1 (en) | 2011-07-08 | 2015-05-05 | Google Inc. | Hand gestures to signify what is important |
US9030446B2 (en) | 2012-11-20 | 2015-05-12 | Samsung Electronics Co., Ltd. | Placement of optical sensor on wearable electronic device |
US20150143298A1 (en) | 2013-11-18 | 2015-05-21 | Maestro Devices, LLC | Control system for governing and/or monitoring how an image data-stack is viewed |
US9060127B2 (en) | 2013-01-23 | 2015-06-16 | Orcam Technologies Ltd. | Apparatus for adjusting image capture settings |
US9077823B1 (en) | 2014-10-31 | 2015-07-07 | Interactive Memories, Inc. | Systems and methods for automatically generating a photo-based project having a flush photo montage on the front cover |
US9086756B2 (en) | 2009-11-18 | 2015-07-21 | Opera Software Asa | Snapping to text columns while scrolling |
WO2015142719A2 (en) | 2014-03-19 | 2015-09-24 | Qualcomm Incorporated | Method and apparatus for establishing connection between electronic devices |
US20150310896A1 (en) | 2014-04-23 | 2015-10-29 | Sony Corporation | Systems and methods for reviewing video content |
US20150350504A1 (en) * | 2014-06-03 | 2015-12-03 | 2P & M Holdings, LLC | RAW Camera Peripheral for Handheld Mobile Unit |
US9219830B1 (en) | 2014-10-31 | 2015-12-22 | Interactive Memories, Inc. | Methods and systems for page and spread arrangement in photo-based projects |
US20160007008A1 (en) | 2014-07-01 | 2016-01-07 | Apple Inc. | Mobile camera system |
US20160119536A1 (en) | 2014-10-28 | 2016-04-28 | Google Inc. | Systems and methods for autonomously generating photo summaries |
US20160127641A1 (en) | 2014-11-03 | 2016-05-05 | Robert John Gove | Autonomous media capturing |
US9342871B2 (en) | 2014-05-30 | 2016-05-17 | Apple Inc. | Scene motion correction in fused image systems |
US20160139761A1 (en) | 2014-11-13 | 2016-05-19 | Interactive Memories, Inc. | Automatic target box in methods and systems for editing content-rich layouts in media-based projects |
US20160173782A1 (en) * | 2014-12-11 | 2016-06-16 | Facebook, Inc. | Systems and methods for time-lapse selection subsequent to capturing media content |
US20160173752A1 (en) * | 2014-12-10 | 2016-06-16 | Intel Corporation | Techniques for context and performance adaptive processing in ultra low-power computer vision systems |
US20160203386A1 (en) | 2015-01-13 | 2016-07-14 | Samsung Electronics Co., Ltd. | Method and apparatus for generating photo-story based on visual context analysis of digital content |
US9418375B1 (en) | 2015-09-30 | 2016-08-16 | International Business Machines Corporation | Product recommendation using sentiment and semantic analysis |
US20160286119A1 (en) | 2011-04-18 | 2016-09-29 | 360fly, Inc. | Mobile Device-Mountable Panoramic Camera System and Method of Displaying Images Captured Therefrom |
US20160320643A1 (en) | 2015-04-29 | 2016-11-03 | Samsung Display Co., Ltd. | Manufacturing method of display device |
US20160321784A1 (en) | 2015-04-28 | 2016-11-03 | Qualcomm Incorporated | Reducing image resolution in deep convolutional networks |
US20160321427A1 (en) | 2015-04-28 | 2016-11-03 | Siemens Medical Solutions Usa, Inc. | Patient-Specific Therapy Planning Support Using Patient Matching |
US9491360B2 (en) | 2013-06-06 | 2016-11-08 | Apple Inc. | Reference frame selection for still image stabilization |
US20160328643A1 (en) | 2015-05-07 | 2016-11-10 | Siemens Aktiengesellschaft | Method and System for Approximating Deep Neural Networks for Anatomical Object Detection |
US20160344927A1 (en) * | 2015-05-21 | 2016-11-24 | Apple Inc. | Time Lapse User Interface Enhancements |
US20160358634A1 (en) | 2015-06-07 | 2016-12-08 | Apple Inc. | Method And Apparatus For Finding And Using Video Portions That Are Relevant To Adjacent Still Images |
US20160358383A1 (en) | 2015-06-05 | 2016-12-08 | Steffen Gauglitz | Systems and methods for augmented reality-based remote collaboration |
US9542585B2 (en) | 2013-06-06 | 2017-01-10 | Apple Inc. | Efficient machine-readable object detection and tracking |
US9665960B1 (en) | 2014-12-22 | 2017-05-30 | Amazon Technologies, Inc. | Image-based item location identification |
US20170178012A1 (en) | 2015-12-17 | 2017-06-22 | Microsoft Technology Licensing, Llc | Precaching via input method trajectory prediction |
US20170220234A1 (en) | 2014-07-31 | 2017-08-03 | Hewlett-Packard Development Company, Lp | Implicitly grouping annotations with a document |
US9762651B1 (en) | 2014-07-11 | 2017-09-12 | Google Inc. | Redaction suggestion for sharing screen content |
US20170302903A1 (en) | 2012-06-26 | 2017-10-19 | Lytro, Inc. | Depth-assigned content for depth-enhanced virtual reality images |
US9838641B1 (en) | 2015-12-30 | 2017-12-05 | Google Llc | Low power framework for processing, compressing, and transmitting images at a mobile image capture device |
US9836819B1 (en) | 2015-12-30 | 2017-12-05 | Google Llc | Systems and methods for selective retention and editing of images captured by mobile image capture device |
US9836484B1 (en) | 2015-12-30 | 2017-12-05 | Google Llc | Systems and methods that leverage deep learning to selectively store images at a mobile image capture device |
Family Cites Families (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
WO2008073366A2 (en) * | 2006-12-08 | 2008-06-19 | Sobayli, Llc | Target object recognition in images and video |
US20140300758A1 (en) * | 2013-04-04 | 2014-10-09 | Bao Tran | Video processing systems and methods |
KR102294734B1 (en) * | 2014-09-30 | 2021-08-30 | 삼성전자주식회사 | Method and apparatus for image registration, and ultrasonic diagnosis apparatus |
US9418319B2 (en) * | 2014-11-21 | 2016-08-16 | Adobe Systems Incorporated | Object detection using cascaded convolutional neural networks |
US9704054B1 (en) * | 2015-09-30 | 2017-07-11 | Amazon Technologies, Inc. | Cluster-trained machine learning for image processing |
US10192129B2 (en) * | 2015-11-18 | 2019-01-29 | Adobe Systems Incorporated | Utilizing interactive deep learning to select objects in digital visual media |
-
2015
- 2015-12-30 US US14/984,869 patent/US10225511B1/en active Active
-
2018
- 2018-08-22 US US16/109,708 patent/US10728489B2/en active Active
-
2020
- 2020-07-23 US US16/936,815 patent/US11159763B2/en active Active
Patent Citations (265)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4952051A (en) | 1988-09-27 | 1990-08-28 | Lovell Douglas C | Method and apparatus for producing animated drawings and in-between drawings |
US5164831A (en) | 1990-03-15 | 1992-11-17 | Eastman Kodak Company | Electronic still camera providing multi-format storage of full and reduced resolution images |
US5227835A (en) | 1990-12-21 | 1993-07-13 | Eastman Kodak Company | Teachable camera |
USRE36207E (en) | 1991-05-13 | 1999-05-04 | Omniview, Inc. | Omniview motionless camera orientation system |
US5267332A (en) | 1991-06-19 | 1993-11-30 | Technibuild Inc. | Image recognition system |
US7006881B1 (en) | 1991-12-23 | 2006-02-28 | Steven Hoffberg | Media recording device with remote graphic user interface |
US20050046584A1 (en) | 1992-05-05 | 2005-03-03 | Breed David S. | Asset system control arrangement and method |
US20060208169A1 (en) | 1992-05-05 | 2006-09-21 | Breed David S | Vehicular restraint system control system and method using multiple optical imagers |
US5812193A (en) | 1992-11-07 | 1998-09-22 | Sony Corporation | Video camera system which automatically follows subject changes |
US6005611A (en) | 1994-05-27 | 1999-12-21 | Be Here Corporation | Wide-angle image dewarping method and apparatus |
US5546145A (en) | 1994-08-30 | 1996-08-13 | Eastman Kodak Company | Camera on-board voice recognition |
US5699449A (en) | 1994-11-14 | 1997-12-16 | The University Of Connecticut | Method and apparatus for implementation of neural networks for face recognition |
US6014183A (en) | 1997-08-06 | 2000-01-11 | Imagine Products, Inc. | Method and apparatus for detecting scene changes in a digital video stream |
US6509915B2 (en) | 1997-10-31 | 2003-01-21 | Eastman Kodak Company | Systems and methods for direct image manipulation |
US6448956B1 (en) | 1997-10-31 | 2002-09-10 | Eastman Kodak Company | Systems and methods for direct image manipulation |
US6614408B1 (en) | 1998-03-25 | 2003-09-02 | W. Stephen G. Mann | Eye-tap for electronic newsgathering, documentary video, photojournalism, and personal safety |
US7826092B2 (en) | 1998-11-20 | 2010-11-02 | Nikon Corporation | Image processing apparatus having image selection function, and recording medium having image selection function program |
US6825875B1 (en) | 1999-01-05 | 2004-11-30 | Interval Research Corporation | Hybrid recording unit including portable video recorder and auxillary device |
US6563532B1 (en) | 1999-01-05 | 2003-05-13 | Internal Research Corporation | Low attention recording unit for use by vigorously active recorder |
US7031555B2 (en) | 1999-07-30 | 2006-04-18 | Pixlogic Llc | Perceptual similarity image retrieval |
US6671405B1 (en) | 1999-12-14 | 2003-12-30 | Eastman Kodak Company | Method for automatic assessment of emphasis and appeal in consumer images |
US20010020837A1 (en) | 1999-12-28 | 2001-09-13 | Junichi Yamashita | Information processing device, information processing method and storage medium |
US20030191816A1 (en) | 2000-01-11 | 2003-10-09 | Spoovy, Llc | System and method for creating and delivering customized multimedia communications |
US6757027B1 (en) | 2000-02-11 | 2004-06-29 | Sony Corporation | Automatic video editing |
US6940545B1 (en) | 2000-02-28 | 2005-09-06 | Eastman Kodak Company | Face detecting camera and method |
US6301440B1 (en) | 2000-04-13 | 2001-10-09 | International Business Machines Corp. | System and method for automatically setting image acquisition controls |
US20020033848A1 (en) | 2000-04-21 | 2002-03-21 | Sciammarella Eduardo Agusto | System for managing data objects |
US6870532B2 (en) | 2000-06-09 | 2005-03-22 | Interactive Imaging Systems, Inc. | Image display |
US7751683B1 (en) | 2000-11-10 | 2010-07-06 | International Business Machines Corporation | Scene change marking for thumbnail extraction |
US20040080618A1 (en) | 2000-11-20 | 2004-04-29 | Norris Timothy Sweyn | Smart camera system |
US20040162647A1 (en) | 2001-07-16 | 2004-08-19 | Takamasa Koshizen | Behavior control apparatus and method |
US6516154B1 (en) | 2001-07-17 | 2003-02-04 | Eastman Kodak Company | Image revising camera and method |
US7616248B2 (en) | 2001-07-17 | 2009-11-10 | Eastman Kodak Company | Revised recapture camera and method |
US6930718B2 (en) | 2001-07-17 | 2005-08-16 | Eastman Kodak Company | Revised recapture camera and method |
US7511838B2 (en) | 2001-07-27 | 2009-03-31 | Hewlett-Packard Development Company, L.P. | Method and apparatus for reviewing captured images |
US7076102B2 (en) | 2001-09-27 | 2006-07-11 | Koninklijke Philips Electronics N.V. | Video monitoring system employing hierarchical hidden markov model (HMM) event learning and classification |
US20030058340A1 (en) | 2001-09-27 | 2003-03-27 | Koninklijke Philips Electronics N.V. | Video monitoring system employing hierarchical hidden markov model (HMM) event learning and classification |
US6680748B1 (en) | 2001-09-27 | 2004-01-20 | Pixim, Inc., | Multi-mode camera and method therefor |
US20030146938A1 (en) | 2001-12-20 | 2003-08-07 | Bernhard Geiger | Fast scrolling through image sets containing markers |
US7352918B2 (en) | 2001-12-21 | 2008-04-01 | International Business Machines Corporation | Method and circuits for scaling images using neural networks |
US20040125088A1 (en) | 2001-12-28 | 2004-07-01 | John Zimmerman | Touch-screen image scrolling system and method |
US20040005915A1 (en) | 2002-05-17 | 2004-01-08 | Hunter Andrew Arthur | Image transmission |
US20040075743A1 (en) | 2002-05-22 | 2004-04-22 | Sony Computer Entertainment America Inc. | System and method for digital image selection |
US20070201694A1 (en) | 2002-06-18 | 2007-08-30 | Bolle Rudolf M | Privacy management in imaging system |
US20060187305A1 (en) | 2002-07-01 | 2006-08-24 | Trivedi Mohan M | Digital processing of video images |
US20040012508A1 (en) | 2002-07-19 | 2004-01-22 | Wolfson Stanley J. | Keyboard modification system |
US7233684B2 (en) | 2002-11-25 | 2007-06-19 | Eastman Kodak Company | Imaging method and system using affective information |
US20040101212A1 (en) | 2002-11-25 | 2004-05-27 | Eastman Kodak Company | Imaging method and system |
US20040114176A1 (en) | 2002-12-17 | 2004-06-17 | International Business Machines Corporation | Editing and browsing images for virtual cameras |
US20130314566A1 (en) | 2002-12-18 | 2013-11-28 | Walker Digital, Llc | Systems and methods for suggesting information for a photo to a user associated with the photo |
US20060161867A1 (en) | 2003-01-21 | 2006-07-20 | Microsoft Corporation | Media frame object visualization system |
US20040143590A1 (en) | 2003-01-21 | 2004-07-22 | Wong Curtis G. | Selection bins |
US20040143604A1 (en) | 2003-01-21 | 2004-07-22 | Steve Glenner | Random access editing of media |
US7729532B2 (en) | 2003-02-26 | 2010-06-01 | Walker Digital, Llc | System for image analysis in a network that is structured with multiple layers and differentially weighted neurons |
US20040212637A1 (en) | 2003-04-22 | 2004-10-28 | Kivin Varghese | System and Method for Marking and Tagging Wireless Audio and Video Recordings |
US7532234B2 (en) | 2003-06-19 | 2009-05-12 | Microsoft Corporation | Automatic analysis and adjustment of digital images upon acquisition |
US7809162B2 (en) | 2003-06-26 | 2010-10-05 | Fotonation Vision Limited | Digital image processing using face detection information |
US7616233B2 (en) | 2003-06-26 | 2009-11-10 | Fotonation Vision Limited | Perfecting of digital image capture parameters within acquisition devices using face detection |
US7742625B2 (en) | 2003-06-27 | 2010-06-22 | Hewlett-Packard Development Company, L.P. | Autonomous camera having exchangable behaviours |
US7714898B2 (en) | 2003-07-26 | 2010-05-11 | Hewlett-Packard Development Company, L.P. | Image capture device having a learning function |
US20050030387A1 (en) | 2003-07-26 | 2005-02-10 | Maurizio Pilu | Image capture device having a learning function |
US20050062845A1 (en) | 2003-09-12 | 2005-03-24 | Mills Lawrence R. | Video user interface system and method |
US9288375B2 (en) | 2003-12-24 | 2016-03-15 | Inventor Holdings, Llc | Method and apparatus for automatically capturing and managing images |
WO2005065283A2 (en) | 2003-12-24 | 2005-07-21 | Walker Digital, Llc | Method and apparatus for automatically capturing and managing images |
US20120242844A1 (en) | 2003-12-24 | 2012-09-27 | Walker Digital, Llc | Automatic capture and management of images |
US20080192129A1 (en) * | 2003-12-24 | 2008-08-14 | Walker Jay S | Method and Apparatus for Automatically Capturing and Managing Images |
US7924323B2 (en) | 2003-12-24 | 2011-04-12 | Walker Digital, Llc | Method and apparatus for automatically capturing and managing images |
US20150146026A1 (en) | 2003-12-24 | 2015-05-28 | Walker Digital, Llc | Method and apparatus for automatically capturing and managing images |
US8466987B2 (en) | 2003-12-24 | 2013-06-18 | Walker Digital, Llc. | Automatic capture and management of images |
US20110128414A1 (en) | 2003-12-24 | 2011-06-02 | Walker Digital, Llc | Method and apparatus for automatically capturing and managing images |
US9288376B2 (en) | 2003-12-24 | 2016-03-15 | Inventor Holdings, Llc | Method and apparatus for automatically capturing and managing images |
US20050192924A1 (en) | 2004-02-17 | 2005-09-01 | Microsoft Corporation | Rapid visual sorting of digital files and data |
US20050192808A1 (en) | 2004-02-26 | 2005-09-01 | Sharp Laboratories Of America, Inc. | Use of speech recognition for identification and classification of images in a camera-equipped mobile handset |
US8886298B2 (en) | 2004-03-01 | 2014-11-11 | Microsoft Corporation | Recall device |
US20050200486A1 (en) | 2004-03-11 | 2005-09-15 | Greer Richard S. | Patient visual monitoring system |
US20050231589A1 (en) | 2004-03-23 | 2005-10-20 | Yu-Lin Chiang | Panoramic photographing monitoring and tracking system and method |
US20050228849A1 (en) | 2004-03-24 | 2005-10-13 | Tong Zhang | Intelligent key-frame extraction from a video |
US8427538B2 (en) | 2004-04-30 | 2013-04-23 | Oncam Grandeye | Multiple view and multiple object processing in wide-angle video camera |
US20140002588A1 (en) | 2004-04-30 | 2014-01-02 | Oncam Grandeye | Multiple View and Multiple Object Processing in Wide-Angle Video Camera |
US20050276495A1 (en) | 2004-06-11 | 2005-12-15 | Samsung Electronics Co., Ltd. | Method of providing digital audio broadcasting (DAB) slide show including interactive information, apparatus for processing the same, and DAB receiver |
US7430369B2 (en) | 2004-08-16 | 2008-09-30 | Canon Kabushiki Kaisha | Image capture apparatus and control method therefor |
US20060115185A1 (en) | 2004-11-17 | 2006-06-01 | Fuji Photo Film Co., Ltd. | Editing condition setting device and program for photo movie |
US8208697B2 (en) | 2004-12-17 | 2012-06-26 | Koninklijke Philips Electronics N.V. | Method and apparatus for automatically developing a high performance classifier for producing medically meaningful descriptors in medical diagnosis imaging |
US20060268121A1 (en) | 2005-02-20 | 2006-11-30 | Nucore Technology Inc. | In-camera cinema director |
US20090204920A1 (en) | 2005-07-14 | 2009-08-13 | Aaron John Beverley | Image Browser |
US8180106B2 (en) | 2005-07-26 | 2012-05-15 | Canon Kabushiki Kaisha | Image capturing apparatus and image capturing method |
US7761812B2 (en) | 2005-07-27 | 2010-07-20 | Microsoft Corporation | Media user interface gallery control |
US20070124783A1 (en) | 2005-11-23 | 2007-05-31 | Grandeye Ltd, Uk, | Interactive wide-angle video server |
US8723951B2 (en) | 2005-11-23 | 2014-05-13 | Grandeye, Ltd. | Interactive wide-angle video server |
US20140375761A1 (en) | 2005-11-23 | 2014-12-25 | Grandeye Ltd. | Interactive wide-angle video server |
US20070132874A1 (en) | 2005-12-09 | 2007-06-14 | Forman George H | Selecting quality images from multiple captured images |
US8238695B1 (en) | 2005-12-15 | 2012-08-07 | Grandeye, Ltd. | Data reduction techniques for processing wide-angle video |
US20070146337A1 (en) | 2005-12-23 | 2007-06-28 | Bas Ording | Continuous scrolling list with acceleration |
US20110022985A1 (en) | 2005-12-23 | 2011-01-27 | Bas Ording | Scrolling List with Floating Adjacent Index Symbols |
US7551754B2 (en) | 2006-02-24 | 2009-06-23 | Fotonation Vision Limited | Method and apparatus for selective rejection of digital images |
US7804983B2 (en) | 2006-02-24 | 2010-09-28 | Fotonation Vision Limited | Digital image acquisition control and correction method and apparatus |
US8265348B2 (en) | 2006-02-24 | 2012-09-11 | DigitalOptics Corporation Europe Limited | Digital image acquisition control and correction method and apparatus |
US7792335B2 (en) | 2006-02-24 | 2010-09-07 | Fotonation Vision Limited | Method and apparatus for selective disqualification of digital images |
US8005268B2 (en) | 2006-02-24 | 2011-08-23 | Tessera Technologies Ireland Limited | Digital image acquisition control and correction method and apparatus |
US20070203942A1 (en) | 2006-02-27 | 2007-08-30 | Microsoft Corporation | Video Search and Services |
US8708903B2 (en) | 2006-05-12 | 2014-04-29 | Bao Tran | Patient monitoring appliance |
US8677257B2 (en) | 2006-08-04 | 2014-03-18 | Apple Inc. | Granular graphical user interface element |
US8224122B2 (en) | 2006-12-15 | 2012-07-17 | Microsoft Corporation | Dynamic viewing of wide angle images |
US20080144968A1 (en) | 2006-12-15 | 2008-06-19 | Microsoft Corporation | Dynamic viewing of wide angle images |
US20100214216A1 (en) | 2007-01-05 | 2010-08-26 | Invensense, Inc. | Motion sensing and processing on mobile devices |
US20090303343A1 (en) | 2007-03-05 | 2009-12-10 | Fotonation Ireland Limited | Low-light video frame enhancement |
US7729602B2 (en) | 2007-03-09 | 2010-06-01 | Eastman Kodak Company | Camera using multiple lenses and image sensors operable in a default imaging mode |
US20080229235A1 (en) | 2007-03-12 | 2008-09-18 | Jean-Marie Vau | Variable-speed browsing method for digital images |
US8132096B1 (en) | 2007-03-26 | 2012-03-06 | Hewlett-Packard Development Company, L.P. | Image composition evaluation |
US7676145B2 (en) | 2007-05-30 | 2010-03-09 | Eastman Kodak Company | Camera configurable for autonomous self-learning operation |
US7817914B2 (en) | 2007-05-30 | 2010-10-19 | Eastman Kodak Company | Camera configurable for autonomous operation |
US20080304808A1 (en) | 2007-06-05 | 2008-12-11 | Newell Catherine D | Automatic story creation using semantic classifiers for digital assets and associated metadata |
US8442268B2 (en) | 2007-07-31 | 2013-05-14 | Panasonic Corporation | Video analysis apparatus and method for calculating interpersonal relationship evaluation value using video analysis |
US8041076B1 (en) | 2007-08-09 | 2011-10-18 | Adobe Systems Incorporated | Generation and usage of attractiveness scores |
US20090046094A1 (en) | 2007-08-16 | 2009-02-19 | Hamilton Ii Rick Allen | Method and apparatus for predicting avatar movement in a virtual universe |
US20110279461A1 (en) | 2007-08-16 | 2011-11-17 | International Business Machines Corporation | Spawning projected avatars in a virtual universe |
US20090141969A1 (en) | 2007-11-29 | 2009-06-04 | Nec Laboratories America, Inc. | Transfer Learning Methods and systems for Feed-Forward Visual Recognition Systems |
US8200025B2 (en) | 2007-12-07 | 2012-06-12 | University Of Ottawa | Image classification and search |
US8180112B2 (en) | 2008-01-21 | 2012-05-15 | Eastman Kodak Company | Enabling persistent recognition of individuals in images |
US7953690B2 (en) | 2008-01-25 | 2011-05-31 | Eastman Kodak Company | Discovering social relationships from personal photo collections |
US8200019B2 (en) | 2008-02-13 | 2012-06-12 | Samsung Electronics Co., Ltd. | Method and system for automatically extracting photography information |
US20110043631A1 (en) | 2008-03-03 | 2011-02-24 | Videoiq, Inc. | Use of video camera analytics for content aware detection and redundant storage of occurrences of events of interest |
US20090219411A1 (en) | 2008-03-03 | 2009-09-03 | Videolq, Inc. | Content aware storage of video data |
US20090254867A1 (en) | 2008-04-03 | 2009-10-08 | Microsoft Corporation | Zoom for annotatable margins |
US20090263028A1 (en) | 2008-04-21 | 2009-10-22 | Core Logic, Inc. | Selecting Best Image |
US20090325607A1 (en) | 2008-05-28 | 2009-12-31 | Conway David P | Motion-controlled views on mobile computing devices |
US20100031186A1 (en) | 2008-05-28 | 2010-02-04 | Erick Tseng | Accelerated Panning User Interface Interactions |
US20090300506A1 (en) | 2008-05-30 | 2009-12-03 | Microsoft Corporation | Mark-up extensions for semantically more relevant thumbnails of content |
US20090307618A1 (en) | 2008-06-05 | 2009-12-10 | Microsoft Corporation | Annotate at multiple levels |
US20090310851A1 (en) | 2008-06-12 | 2009-12-17 | Microsoft Corporation | 3d content aggregation built into devices |
US20090324010A1 (en) | 2008-06-26 | 2009-12-31 | Billy Hou | Neural network-controlled automatic tracking and recognizing system and method |
US20090324098A1 (en) | 2008-06-27 | 2009-12-31 | Sony Ericsson Mobile Communications Ab | Mobile phone with selective photographic system and method |
US20100020224A1 (en) | 2008-07-24 | 2010-01-28 | Canon Kabushiki Kaisha | Method for selecting desirable images from among a plurality of images and apparatus thereof |
US20110121414A1 (en) | 2008-07-28 | 2011-05-26 | Robert Bosch Gmbh | Encapsulation, MEMS and Method of Selective Encapsulation |
US20110212717A1 (en) | 2008-08-19 | 2011-09-01 | Rhoads Geoffrey B | Methods and Systems for Content Processing |
US20100046842A1 (en) | 2008-08-19 | 2010-02-25 | Conwell William Y | Methods and Systems for Content Processing |
US20100048242A1 (en) | 2008-08-19 | 2010-02-25 | Rhoads Geoffrey B | Methods and systems for content processing |
US20170236407A1 (en) | 2008-08-19 | 2017-08-17 | Digimarc Corporation | Methods and systems for content processing |
US20100058240A1 (en) | 2008-08-26 | 2010-03-04 | Apple Inc. | Dynamic Control of List Navigation Based on List Item Properties |
US20100056211A1 (en) | 2008-09-04 | 2010-03-04 | Samsung Electronics Co., Ltd. | Method and apparatus for taking pictures on a mobile communication terminal having a camera module |
US20150304797A1 (en) | 2008-09-12 | 2015-10-22 | Digimarc Corporation | Methods and systems for content processing |
US20140080428A1 (en) | 2008-09-12 | 2014-03-20 | Digimarc Corporation | Methods and systems for content processing |
US20170215028A1 (en) | 2008-09-12 | 2017-07-27 | Digimarc Corporation | Methods and systems for content processing |
US20110211040A1 (en) | 2008-11-05 | 2011-09-01 | Pierre-Alain Lindemann | System and method for creating interactive panoramic walk-through applications |
US8924886B2 (en) | 2008-11-13 | 2014-12-30 | Kabushiki Kaisha Toshiba | Image display device and image display method |
US8775971B2 (en) | 2008-12-05 | 2014-07-08 | Microsoft Corporation | Touch display scroll control |
US20100199232A1 (en) | 2009-02-03 | 2010-08-05 | Massachusetts Institute Of Technology | Wearable Gestural Interface |
US8514315B2 (en) | 2009-02-16 | 2013-08-20 | Lg Electronics Inc. | Method for processing image data in portable electronic device, and portable electronic device having camera thereof |
US20100231730A1 (en) | 2009-03-13 | 2010-09-16 | Yuka Ichikawa | Image sensing device and camera |
US8666225B2 (en) | 2009-03-27 | 2014-03-04 | Sony Corporation | Digital cinema management device and digital cinema management method |
US8072495B2 (en) | 2009-03-27 | 2011-12-06 | Primax Electronics Ltd. | Automatic image capturing system |
US8520116B2 (en) | 2009-07-07 | 2013-08-27 | Samsung Electronics Co., Ltd. | Photographing apparatus and method |
US8478053B2 (en) | 2009-07-15 | 2013-07-02 | Nikon Corporation | Image sorting apparatus |
US20130177243A1 (en) | 2009-07-20 | 2013-07-11 | Aryk Erwin Grosz | Autoflow in Photobook Development |
US20120106848A1 (en) | 2009-09-16 | 2012-05-03 | Darryl Greig | System And Method For Assessing Photgrapher Competence |
US8311364B2 (en) | 2009-09-25 | 2012-11-13 | Eastman Kodak Company | Estimating aesthetic quality of digital images |
US20110075917A1 (en) | 2009-09-25 | 2011-03-31 | Cerosaletti Cathleen D | Estimating aesthetic quality of digital images |
US20110074699A1 (en) | 2009-09-25 | 2011-03-31 | Jason Robert Marr | Device, Method, and Graphical User Interface for Scrolling a Multi-Section Document |
US8677283B2 (en) | 2009-10-21 | 2014-03-18 | Microsoft Corporation | Displaying lists as reacting against barriers |
US20110098056A1 (en) | 2009-10-28 | 2011-04-28 | Rhoads Geoffrey B | Intuitive computing methods and systems |
US20110098918A1 (en) | 2009-10-28 | 2011-04-28 | Google Inc. | Navigation Images |
US9086756B2 (en) | 2009-11-18 | 2015-07-21 | Opera Software Asa | Snapping to text columns while scrolling |
US20110159921A1 (en) | 2009-12-31 | 2011-06-30 | Davis Bruce L | Methods and arrangements employing sensor-equipped smart phones |
WO2011116309A1 (en) | 2010-03-19 | 2011-09-22 | Digimarc Corporation | Intuitive computing methods and systems |
US20110243397A1 (en) | 2010-03-30 | 2011-10-06 | Christopher Watkins | Searching digital image collections using face recognition |
US20130245396A1 (en) | 2010-06-07 | 2013-09-19 | Affectiva, Inc. | Mental state analysis using wearable-camera devices |
US20120054670A1 (en) | 2010-08-27 | 2012-03-01 | Nokia Corporation | Apparatus and method for scrolling displayed information |
US20120066638A1 (en) | 2010-09-09 | 2012-03-15 | Microsoft Corporation | Multi-dimensional auto-scrolling |
US8700392B1 (en) | 2010-09-10 | 2014-04-15 | Amazon Technologies, Inc. | Speech-inclusive device interfaces |
US20120076427A1 (en) | 2010-09-24 | 2012-03-29 | Stacie L Hibino | Method of selecting important digital images |
US20160335804A1 (en) | 2010-11-02 | 2016-11-17 | Google Inc. | Range of Focus in an Augmented Reality Application |
US20130342574A1 (en) | 2010-11-02 | 2013-12-26 | Google Inc. | Range of Focus in an Augmented Reality Application |
US8810599B1 (en) | 2010-11-02 | 2014-08-19 | Google Inc. | Image recognition in an augmented reality application |
US20140297683A1 (en) | 2010-11-02 | 2014-10-02 | Google Inc. | Range of Focus in an Augmented Reality Application |
US20120105475A1 (en) | 2010-11-02 | 2012-05-03 | Google Inc. | Range of Focus in an Augmented Reality Application |
US8890896B1 (en) | 2010-11-02 | 2014-11-18 | Google Inc. | Image recognition in an augmented reality application |
US20120147220A1 (en) * | 2010-12-10 | 2012-06-14 | Samsung Electronics Co., Ltd. | Digital image processing apparatus for quickly entering into reproduction mode and method of controlling the same |
US20120174005A1 (en) | 2010-12-31 | 2012-07-05 | Microsoft Corporation | Content-based snap point |
US20140021828A1 (en) | 2011-01-24 | 2014-01-23 | Commissariat A L'energie Atomique Et Aux Energies Alternatives | Circuit for optimizing the recovery of vibratory energy by a mechanical/electrical converter |
US8475396B2 (en) | 2011-02-11 | 2013-07-02 | AventuSoft, LLC | Method and system of an acoustic scene analyzer for body sounds |
US20130169536A1 (en) | 2011-02-17 | 2013-07-04 | Orcam Technologies Ltd. | Control of a wearable device |
US20120242851A1 (en) * | 2011-03-25 | 2012-09-27 | William Vernon Fintel | Digital camera having burst image capture mode |
US20120257071A1 (en) * | 2011-04-06 | 2012-10-11 | Prentice Wayne E | Digital camera having variable duration burst mode |
US20160286119A1 (en) | 2011-04-18 | 2016-09-29 | 360fly, Inc. | Mobile Device-Mountable Panoramic Camera System and Method of Displaying Images Captured Therefrom |
US20120290950A1 (en) | 2011-05-12 | 2012-11-15 | Jeffrey A. Rapaport | Social-topical adaptive networking (stan) system allowing for group based contextual transaction offers and acceptances and hot topic watchdogging |
US20120294514A1 (en) | 2011-05-19 | 2012-11-22 | Xerox Corporation | Techniques to enable automated workflows for the creation of user-customized photobooks |
US20140022196A1 (en) | 2011-05-24 | 2014-01-23 | Hewlett-Packard Development Company, L.P. | Region of interest of an image |
US20120300019A1 (en) | 2011-05-25 | 2012-11-29 | Microsoft Corporation | Orientation-based generation of panoramic fields |
US9024842B1 (en) | 2011-07-08 | 2015-05-05 | Google Inc. | Hand gestures to signify what is important |
US20130201344A1 (en) | 2011-08-18 | 2013-08-08 | Qualcomm Incorporated | Smart camera for taking pictures automatically |
US20130055150A1 (en) | 2011-08-24 | 2013-02-28 | Primesense Ltd. | Visual feedback for tactile and non-tactile user interfaces |
US20130169682A1 (en) | 2011-08-24 | 2013-07-04 | Christopher Michael Novak | Touch and social cues as inputs into a computer |
US20130077820A1 (en) | 2011-09-26 | 2013-03-28 | Microsoft Corporation | Machine learning gesture detection |
US20130091462A1 (en) | 2011-10-06 | 2013-04-11 | Amazon Technologies, Inc. | Multi-dimensional interface |
US20130088520A1 (en) | 2011-10-07 | 2013-04-11 | Research In Motion Limited | Determining a target position for scrolling content |
US20130104080A1 (en) | 2011-10-19 | 2013-04-25 | Andrew Garrod Bosworth | Automatic Photo Capture Based on Social Components and Identity Recognition |
US20140333675A1 (en) | 2011-12-26 | 2014-11-13 | Hideaki Nakaoka | Display control device and display control method |
US8902198B1 (en) | 2012-01-27 | 2014-12-02 | Amazon Technologies, Inc. | Feature tracking for device input |
US20130201359A1 (en) | 2012-02-06 | 2013-08-08 | Qualcomm Incorporated | Method and apparatus for unattended image capture |
US20130265451A1 (en) | 2012-04-10 | 2013-10-10 | Samsung Electronics Co., Ltd. | Apparatus and method for continuously taking a picture |
US8938124B2 (en) | 2012-05-10 | 2015-01-20 | Pointgrab Ltd. | Computer vision based tracking of a hand |
US20130321403A1 (en) | 2012-06-05 | 2013-12-05 | Apple Inc. | System and method for highlighting a feature in a 3d map while preserving depth |
US20130336543A1 (en) | 2012-06-19 | 2013-12-19 | Steven M. Bennett | Automated memory book creation |
US20130342526A1 (en) | 2012-06-26 | 2013-12-26 | Yi-Ren Ng | Depth-assigned content for depth-enhanced pictures |
US20170302903A1 (en) | 2012-06-26 | 2017-10-19 | Lytro, Inc. | Depth-assigned content for depth-enhanced virtual reality images |
US8897485B2 (en) | 2012-06-29 | 2014-11-25 | Intellectual Ventures Fund 83 Llc | Determining an interest level for an image |
US20140002580A1 (en) | 2012-06-29 | 2014-01-02 | Monkeymedia, Inc. | Portable proprioceptive peripatetic polylinear video player |
US20140043517A1 (en) | 2012-08-09 | 2014-02-13 | Samsung Electronics Co., Ltd. | Image capture apparatus and image capture method |
US20140104424A1 (en) | 2012-10-11 | 2014-04-17 | GM Global Technology Operations LLC | Imaging surface modeling for camera modeling and virtual view synthesis |
US9030446B2 (en) | 2012-11-20 | 2015-05-12 | Samsung Electronics Co., Ltd. | Placement of optical sensor on wearable electronic device |
US20140152585A1 (en) | 2012-12-04 | 2014-06-05 | Research In Motion Limited | Scroll jump interface for touchscreen input/output device |
US20140160316A1 (en) | 2012-12-12 | 2014-06-12 | Lg Electronics Inc. | Mobile terminal and control method thereof |
US20140184849A1 (en) * | 2013-01-03 | 2014-07-03 | Samsung Electronics Co., Ltd. | Apparatus having camera and method for image photographing |
US9060127B2 (en) | 2013-01-23 | 2015-06-16 | Orcam Technologies Ltd. | Apparatus for adjusting image capture settings |
US20140218283A1 (en) | 2013-02-01 | 2014-08-07 | Samsung Electronics Co., Ltd. | Method of controlling an operation of a camera apparatus and a camera apparatus |
US20140242560A1 (en) | 2013-02-15 | 2014-08-28 | Emotient | Facial expression training using feedback from automatic facial expression recognition |
US20140241616A1 (en) | 2013-02-26 | 2014-08-28 | Adience SER LTD | Matching users across identifiable services based on images |
US20140253791A1 (en) | 2013-03-07 | 2014-09-11 | Nokia Corporation | Method, apparatus and computer program for selecting images |
US20140270707A1 (en) | 2013-03-15 | 2014-09-18 | Disney Enterprises, Inc. | Method and System for Detecting and Recognizing Social Interactions In a Video |
US20140354845A1 (en) | 2013-05-31 | 2014-12-04 | Apple Inc. | Identifying Dominant and Non-Dominant Images in a Burst Mode Capture |
US9542585B2 (en) | 2013-06-06 | 2017-01-10 | Apple Inc. | Efficient machine-readable object detection and tracking |
US9491360B2 (en) | 2013-06-06 | 2016-11-08 | Apple Inc. | Reference frame selection for still image stabilization |
US20140372205A1 (en) | 2013-06-12 | 2014-12-18 | Google Inc. | Systems and methods for selecting and serving content items based on view probability |
US20150029349A1 (en) * | 2013-07-23 | 2015-01-29 | Michael BEN ISRAEL | Digital image processing |
US20150058944A1 (en) | 2013-08-20 | 2015-02-26 | Ohad Schachtel | Social driven portal using mobile devices |
US20150071547A1 (en) | 2013-09-09 | 2015-03-12 | Apple Inc. | Automated Selection Of Keeper Images From A Burst Photo Captured Set |
US20150074532A1 (en) | 2013-09-10 | 2015-03-12 | Avigilon Corporation | Method and apparatus for controlling surveillance system with gesture and/or audio commands |
US20150086109A1 (en) | 2013-09-23 | 2015-03-26 | Adobe Systems Incorporated | Using machine learning to define user controls for photo adjustments |
US20150111601A1 (en) | 2013-10-18 | 2015-04-23 | Logos Technologies, Llc | Systems and methods for displaying distant images at mobile computing devices |
US20150117760A1 (en) | 2013-10-30 | 2015-04-30 | Nec Laboratories America, Inc. | Regionlets with Shift Invariant Neural Patterns for Object Detection |
US20150143298A1 (en) | 2013-11-18 | 2015-05-21 | Maestro Devices, LLC | Control system for governing and/or monitoring how an image data-stack is viewed |
WO2015142719A2 (en) | 2014-03-19 | 2015-09-24 | Qualcomm Incorporated | Method and apparatus for establishing connection between electronic devices |
US20150310896A1 (en) | 2014-04-23 | 2015-10-29 | Sony Corporation | Systems and methods for reviewing video content |
US9342871B2 (en) | 2014-05-30 | 2016-05-17 | Apple Inc. | Scene motion correction in fused image systems |
US20150350504A1 (en) * | 2014-06-03 | 2015-12-03 | 2P & M Holdings, LLC | RAW Camera Peripheral for Handheld Mobile Unit |
US20160007008A1 (en) | 2014-07-01 | 2016-01-07 | Apple Inc. | Mobile camera system |
US9762651B1 (en) | 2014-07-11 | 2017-09-12 | Google Inc. | Redaction suggestion for sharing screen content |
US9811352B1 (en) | 2014-07-11 | 2017-11-07 | Google Inc. | Replaying user input actions using screen capture images |
US9798708B1 (en) | 2014-07-11 | 2017-10-24 | Google Inc. | Annotating relevant content in a screen capture image |
US9824079B1 (en) | 2014-07-11 | 2017-11-21 | Google Llc | Providing actions for mobile onscreen content |
US9788179B1 (en) | 2014-07-11 | 2017-10-10 | Google Inc. | Detection and ranking of entities from mobile onscreen content |
US9886461B1 (en) | 2014-07-11 | 2018-02-06 | Google Llc | Indexing mobile onscreen content |
US20170220234A1 (en) | 2014-07-31 | 2017-08-03 | Hewlett-Packard Development Company, Lp | Implicitly grouping annotations with a document |
US20170041532A1 (en) | 2014-10-28 | 2017-02-09 | Google Inc. | Systems and methods for autonomously generating photo summaries |
US20160119536A1 (en) | 2014-10-28 | 2016-04-28 | Google Inc. | Systems and methods for autonomously generating photo summaries |
US9077823B1 (en) | 2014-10-31 | 2015-07-07 | Interactive Memories, Inc. | Systems and methods for automatically generating a photo-based project having a flush photo montage on the front cover |
US9219830B1 (en) | 2014-10-31 | 2015-12-22 | Interactive Memories, Inc. | Methods and systems for page and spread arrangement in photo-based projects |
US20160127641A1 (en) | 2014-11-03 | 2016-05-05 | Robert John Gove | Autonomous media capturing |
US20160139761A1 (en) | 2014-11-13 | 2016-05-19 | Interactive Memories, Inc. | Automatic target box in methods and systems for editing content-rich layouts in media-based projects |
US20160173752A1 (en) * | 2014-12-10 | 2016-06-16 | Intel Corporation | Techniques for context and performance adaptive processing in ultra low-power computer vision systems |
US20160173782A1 (en) * | 2014-12-11 | 2016-06-16 | Facebook, Inc. | Systems and methods for time-lapse selection subsequent to capturing media content |
US9665960B1 (en) | 2014-12-22 | 2017-05-30 | Amazon Technologies, Inc. | Image-based item location identification |
US20160203386A1 (en) | 2015-01-13 | 2016-07-14 | Samsung Electronics Co., Ltd. | Method and apparatus for generating photo-story based on visual context analysis of digital content |
US20160321427A1 (en) | 2015-04-28 | 2016-11-03 | Siemens Medical Solutions Usa, Inc. | Patient-Specific Therapy Planning Support Using Patient Matching |
US20160321784A1 (en) | 2015-04-28 | 2016-11-03 | Qualcomm Incorporated | Reducing image resolution in deep convolutional networks |
US20160320643A1 (en) | 2015-04-29 | 2016-11-03 | Samsung Display Co., Ltd. | Manufacturing method of display device |
US20160328643A1 (en) | 2015-05-07 | 2016-11-10 | Siemens Aktiengesellschaft | Method and System for Approximating Deep Neural Networks for Anatomical Object Detection |
US20160344927A1 (en) * | 2015-05-21 | 2016-11-24 | Apple Inc. | Time Lapse User Interface Enhancements |
US20160358383A1 (en) | 2015-06-05 | 2016-12-08 | Steffen Gauglitz | Systems and methods for augmented reality-based remote collaboration |
US20160358634A1 (en) | 2015-06-07 | 2016-12-08 | Apple Inc. | Method And Apparatus For Finding And Using Video Portions That Are Relevant To Adjacent Still Images |
US9418375B1 (en) | 2015-09-30 | 2016-08-16 | International Business Machines Corporation | Product recommendation using sentiment and semantic analysis |
US20170178012A1 (en) | 2015-12-17 | 2017-06-22 | Microsoft Technology Licensing, Llc | Precaching via input method trajectory prediction |
US9838641B1 (en) | 2015-12-30 | 2017-12-05 | Google Llc | Low power framework for processing, compressing, and transmitting images at a mobile image capture device |
US9836819B1 (en) | 2015-12-30 | 2017-12-05 | Google Llc | Systems and methods for selective retention and editing of images captured by mobile image capture device |
US9836484B1 (en) | 2015-12-30 | 2017-12-05 | Google Llc | Systems and methods that leverage deep learning to selectively store images at a mobile image capture device |
Non-Patent Citations (22)
Title |
---|
Bagnall, "Author Identification Using Multi-Headed Recurrent Neural Networks", Notebook for the PAN@CLEF Authori Identification Challenge, Jun. 16, 2015, 9 pages. |
Berry et al., "The Use of a Wearable Camera, SenseCam, as a Pictorial Diary to Improve Autobiographical Memory in a Patient with Limbic Encephalitis: A Preliminary Report", Neuropsychological Rehabilitation, vol. 17, Issue 4/5, Aug.-Oct. 2007, pp. 582-601. |
Blighe et al., "Identifying Different Settings in a Visual Diary", Ninth International Workshop on Image Analysis for Multimedia Interactive Services, Klagenfurt, Austria, May 7-9, 2008, pp. 24-27. |
Byrne et al., "Everyday Concept Detection in Visual Lifelogs: Validation, Relationships and Trends", Multimedia Tools and Applications, vol. 49, No. 1, Aug. 2010, pp. 119-144. |
Charara, "How Machine Learning Will Take Wearable Data to the Next Level", wareable.com/wearable-tech/machine-learning-wearable-data-sensors-2015, retrieved on Sep. 17, 2015, 6 pages. |
Davis et al., "From Context to Content: Leveraging Context to Infer Media Metadata", Proceedings of the ACM International Conference on Multimedia, New York, New York, Oct. 10-16, 2004, pp. 188-195. |
Doherty et al., "Automatically Augmenting Lifelog Events Using Pervasively Generated Content from Millions of People", Sensors, vol. 10, Issue 3, Feb. 26, 2010, pp. 1423-1446. |
Doherty et al., "Combining Image Descriptors to Effectively Retrieve Events from Visual Lifelogs", ACM International Conference on Multimedia Information Retrieval, Vancouver, Canada, Oct. 30-31, 2008, pp. 10-17. |
Harris, "Why Machine Learning Might be a Wearable Camera's Best Friend", gigaom.com/2013/09/13/why-machine-learning-might-be-a-wearable-cameras-best-friend/, retrieved on Sep. 17, 2015-4 pages. |
Harris, "Why Machine Learning Might be a Wearable Camera's Best Friend", gigaom.com/2013/09/13/why-machine-learning-might-be-a-wearable-cameras-best-friend/, retrieved on Sep. 17, 2015—4 pages. |
Higginbotham, "How Facebook is Teaching Computers to See", fortune.com/2015/06/15/facebook-ai-moments/, retrieved on Sep. 17, 2015, 5 pages. |
Hodges et al., "SenseCam: A Wearable Camera Which Stimulates and Rehabilitates Autobiographical Memory", Memory, vol. 19, Issue 7, Oct. 2011, pp. 685-696. |
International Search Report & Written Opinion for PCT/US2016/045681 dated Sep. 26, 2016, 11 pages. |
Jones et al., "Automated Annotation of Landmark Images Using Community Contributed Datasets and Web Resources", International Conference on Semantic and Digital Media Technologies, Saarbrucken, Germany, Dec. 1-3, 2010, 16 pages. |
Lomas, "Neurence's Cloud Platform Gives Wearables Eyes that Can See and Ears that Can Hear", http://techcrunch.com/2014/12/18/neurence-sense-launch/, retrieved on Sep. 17, 2015, 12 pages. |
Lu et al., "Story-Driven Summarization for Egocentric Video", Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition, Portland, Oregon, Jun. 23-28, 2013, pp. 2714-2721. |
Mnih et al., "Recurrent Models of Visual Attention", Advances in Neural Information Processing Systems, Montreal, Canada, Dec. 8-13, 2014, pp. 2201-2212. |
Movidius: Myriad 2 Vision Processor Product Brief, 2014, movidius.com/solutions/vision-processing-unit, retrieved on Sep. 17, 2015, 2 pages. |
Starner et al., "The Gesture Pendant: A Self-Illuminating, Wearable, Infrared Computer Vision System for Home Automation Control and Medical Monitoring", Proceedings of the 4th IEEE International Symposium on Wearable Computers, Atlanta, Georgia, Oct. 16-17, 2000, 8 pages. |
Tang et al., "Learning Generative Models with Visual Attention", Advances in Neural Information Processing Systems, Montreal, Canada, Dec. 8-13, 2014, pp. 1808-1816. |
Van Laerhoven et al., "Real-Time Analysis of Data from Many Sensors with Neural Networks", Proceedings of the 5th IEEE International Symposium on Wearable Computers, Zurich, Switzerland, Oct. 8-9, 2001, 8 pages. |
Wingfield, "A New Action Camera, Born From a Cycling Crash", bits.blogs.nytimes.com/2015/08/05/a-new-action-camera-born-from-a-cycling-crash/? _r=0, retrieved on Oct. 6, 2015, 2 pages. |
Cited By (19)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US11240430B2 (en) | 2018-01-12 | 2022-02-01 | Movidius Ltd. | Methods and apparatus to operate a mobile camera for low-power usage |
US10574890B2 (en) * | 2018-01-12 | 2020-02-25 | Movidius Ltd. | Methods and apparatus to operate a mobile camera for low-power usage |
US20190222756A1 (en) * | 2018-01-12 | 2019-07-18 | Movidius Ltd. | Methods and apparatus to operate a mobile camera for low-power usage |
US11625910B2 (en) | 2018-01-12 | 2023-04-11 | Movidius Limited | Methods and apparatus to operate a mobile camera for low-power usage |
US11947826B2 (en) | 2018-05-15 | 2024-04-02 | Samsung Electronics Co., Ltd. | Method for accelerating image storing and retrieving differential latency storage devices based on access rates |
US11659155B2 (en) * | 2018-08-07 | 2023-05-23 | Lg Innotek Co., Ltd. | Camera |
US10915995B2 (en) | 2018-09-24 | 2021-02-09 | Movidius Ltd. | Methods and apparatus to generate masked images based on selective privacy and/or location tracking |
US11423517B2 (en) | 2018-09-24 | 2022-08-23 | Movidius Ltd. | Methods and apparatus to generate masked images based on selective privacy and/or location tracking |
US11783086B2 (en) | 2018-09-24 | 2023-10-10 | Movidius Ltd. | Methods and apparatus to generate masked images based on selective privacy and/or location tracking |
US20210312181A1 (en) * | 2018-09-27 | 2021-10-07 | Fujifilm Corporation | Image processing device, image processing method, program, and recording medium |
US11594027B2 (en) * | 2018-09-27 | 2023-02-28 | Fujifilm Corporation | Image processing device, image processing method, program, and recording medium |
US11341603B2 (en) * | 2019-03-22 | 2022-05-24 | Stmicroelectronics (Grenoble 2) Sas | Electronic image processing device |
CN111723638A (en) * | 2019-03-22 | 2020-09-29 | 意法半导体(格勒诺布尔2)公司 | Electronic image processing apparatus |
CN112712098A (en) * | 2019-10-25 | 2021-04-27 | 北京四维图新科技股份有限公司 | Image data processing method and device |
CN110740264B (en) * | 2019-10-31 | 2021-06-04 | 重庆工商职业学院 | Intelligent camera data rapid acquisition system and acquisition method |
CN110740264A (en) * | 2019-10-31 | 2020-01-31 | 重庆工商职业学院 | intelligent camera data rapid acquisition system and acquisition method |
CN114363540A (en) * | 2020-10-13 | 2022-04-15 | 豪威科技股份有限公司 | Camera system with PWM activation, frame-wise self-refresh, DRAM to reduce standby power consumption |
CN114363540B (en) * | 2020-10-13 | 2022-10-21 | 豪威科技股份有限公司 | Camera system with PWM activation, frame-wise self-refresh, DRAM to reduce standby power consumption |
CN114666501A (en) * | 2022-03-17 | 2022-06-24 | 深圳市百泰实业股份有限公司 | Intelligent control method for camera of wearable device |
Also Published As
Publication number | Publication date |
---|---|
US10728489B2 (en) | 2020-07-28 |
US11159763B2 (en) | 2021-10-26 |
US20180367752A1 (en) | 2018-12-20 |
US20200351466A1 (en) | 2020-11-05 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US11159763B2 (en) | Low power framework for controlling image sensor mode in a mobile image capture device | |
US10732809B2 (en) | Systems and methods for selective retention and editing of images captured by mobile image capture device | |
US9836484B1 (en) | Systems and methods that leverage deep learning to selectively store images at a mobile image capture device | |
US9838641B1 (en) | Low power framework for processing, compressing, and transmitting images at a mobile image capture device | |
US9836819B1 (en) | Systems and methods for selective retention and editing of images captured by mobile image capture device | |
US10372991B1 (en) | Systems and methods that leverage deep learning to selectively store audiovisual content | |
US11403509B2 (en) | Systems and methods for providing feedback for artificial intelligence-based image capture devices | |
US11200916B2 (en) | Highlighting media through weighting of people or contexts | |
CN109068019B (en) | Automatic music video creation and intelligent gallery from photo album | |
US9251765B2 (en) | Image processing device, image processing method, and program for generating composite image | |
US9195880B1 (en) | Interactive viewer for image stacks | |
US11595580B2 (en) | Microvideo system, format, and method of generation | |
KR102228457B1 (en) | Methed and system for synchronizing usage information between device and server | |
US20240144971A1 (en) | System and Method for Performing a Rewind Operation with a Mobile Image Capture Device |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 4 |
US8965104B1 - Machine vision calibration with cloud computing systems - Google Patents
Machine vision calibration with cloud computing systems Download PDFInfo
- Publication number
- US8965104B1 US8965104B1 US13/601,319 US201213601319A US8965104B1 US 8965104 B1 US8965104 B1 US 8965104B1 US 201213601319 A US201213601319 A US 201213601319A US 8965104 B1 US8965104 B1 US 8965104B1
- Authority
- US
- United States
- Prior art keywords
- image processing
- image
- robot
- parameter set
- processing algorithm
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active, expires
Links
- 238000012545 processing Methods 0.000 claims abstract description 328
- 230000007613 environmental effect Effects 0.000 claims abstract description 83
- 238000004458 analytical method Methods 0.000 claims abstract description 27
- 238000000034 method Methods 0.000 claims description 80
- 230000008569 process Effects 0.000 claims description 21
- 238000004891 communication Methods 0.000 claims description 17
- 230000004044 response Effects 0.000 claims description 16
- 230000008859 change Effects 0.000 claims description 6
- 238000013442 quality metrics Methods 0.000 claims description 6
- 238000004519 manufacturing process Methods 0.000 claims description 3
- 230000005540 biological transmission Effects 0.000 claims 1
- 230000000875 corresponding effect Effects 0.000 description 47
- 238000003860 storage Methods 0.000 description 17
- 230000006870 function Effects 0.000 description 15
- 230000002596 correlated effect Effects 0.000 description 7
- 230000001413 cellular effect Effects 0.000 description 6
- 210000000078 claw Anatomy 0.000 description 5
- 238000010586 diagram Methods 0.000 description 5
- 230000003287 optical effect Effects 0.000 description 4
- 230000008901 benefit Effects 0.000 description 3
- 238000013461 design Methods 0.000 description 3
- 230000007246 mechanism Effects 0.000 description 3
- 210000004247 hand Anatomy 0.000 description 2
- 238000007726 management method Methods 0.000 description 2
- 230000002776 aggregation Effects 0.000 description 1
- 238000004220 aggregation Methods 0.000 description 1
- 210000004556 brain Anatomy 0.000 description 1
- 230000015556 catabolic process Effects 0.000 description 1
- 230000010267 cellular communication Effects 0.000 description 1
- 230000001276 controlling effect Effects 0.000 description 1
- 238000013500 data storage Methods 0.000 description 1
- 230000007423 decrease Effects 0.000 description 1
- 238000006731 degradation reaction Methods 0.000 description 1
- 230000004438 eyesight Effects 0.000 description 1
- 230000003993 interaction Effects 0.000 description 1
- 230000002452 interceptive effect Effects 0.000 description 1
- 230000007774 longterm Effects 0.000 description 1
- 238000012423 maintenance Methods 0.000 description 1
- 230000004297 night vision Effects 0.000 description 1
- 238000005192 partition Methods 0.000 description 1
- 230000002085 persistent effect Effects 0.000 description 1
- 238000002310 reflectometry Methods 0.000 description 1
- 239000000779 smoke Substances 0.000 description 1
- 239000013589 supplement Substances 0.000 description 1
- 230000001360 synchronised effect Effects 0.000 description 1
- 210000003813 thumb Anatomy 0.000 description 1
- 230000007704 transition Effects 0.000 description 1
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06T—IMAGE DATA PROCESSING OR GENERATION, IN GENERAL
- G06T7/00—Image analysis
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06T—IMAGE DATA PROCESSING OR GENERATION, IN GENERAL
- G06T5/00—Image enhancement or restoration
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V10/00—Arrangements for image or video recognition or understanding
- G06V10/96—Management of image or video recognition tasks
Definitions
- Cloud computing refers to the provision of computing resources via a computer network.
- both data and software are fully contained on a user's computer.
- the user's computer may contain relatively little software or data (perhaps just a minimal operating system and web browser, for example), and may serve as a display terminal for processes occurring on a network of computers.
- One common shorthand term used to describe a cloud computing system or service (or even an aggregation of cloud services) is “the cloud.”
- Cloud computing is sometimes referred to as “client-server computing.”
- client-server computing may include a distributed application structure that partitions tasks or workloads between providers of a resource or service (e.g., servers), and service requesters (e.g., clients).
- client-server computing generally involves a one-to-one relationship between the server and the client, whereas cloud computing includes generic services that can be accessed by generic clients such that a one-to-one relationship or connection may not be required.
- cloud computing generally includes client-server computing along with additional services and functionality.
- cloud computing may free users from certain hardware and software installation and maintenance tasks through the use of simplified hardware on the user's computer.
- the user's computer can access a vast network of computing resources (e.g., processors, disk drives, etc.), the user is not limited just to the computing and storage power of his or her local computer.
- the sharing of computing resources across many users may reduce computing costs to individuals. For example, multiple computers connected to the cloud may be able to share the same pool of computing power, applications, and files. Users can store and access personal files such as music, pictures, videos, and bookmarks or play games or use productivity applications on a remote server rather than physically carrying around a storage medium, such as a DVD or thumb drive.
- a user may open a web browser and connect to a host of web servers that run user interface software configured to collect commands from the user and interpret the commands into commands on the servers.
- the servers may handle the computing, and can either store or retrieve information from database servers or file servers and display an updated page to the user.
- cloud computing data across multiple servers can be synchronized around the world allowing for collaborative work on one file or project, from multiple users around the world, for example.
- any of the methods described herein may be implemented in the form of instructions stored on a non-transitory, computer readable media. When executed by a computing device, the instructions may cause the computing device to perform functions of the disclosed method. Further examples may also include articles of manufacture including tangible computer-readable media that have computer-readable instructions encoded thereon, and the instructions may comprise instructions to perform functions of the methods described herein.
- the computer readable media may include non-transitory computer readable media, such as computer-readable media that stores data for short periods of time like register memory, processor cache, and Random Access Memory (RAM).
- the computer readable media may also include non-transitory media, such as secondary or persistent long term storage, like read only memory (ROM), optical or magnetic disks, or compact-disc read only memory (CD-ROM), for example.
- the computer readable media may also be any other volatile or non-volatile storage system.
- the computer readable media may be considered a computer readable storage media, for example, or a tangible storage media.
- circuitry configured to perform logical functions in any of the processes or methods described herein.
- many types of devices may be used or configured to perform logical functions in any of the processes or methods described herein.
- many types of devices and/or components or sub-components of the devices) may be used or configured as means for performing functions of any of the methods described herein (or any portions of the methods described herein).
- a cloud computing system may be configured to receive an image from an image sensor associated with a computing device.
- the computing device may be a robot with a machine vision system
- the image sensor may be a digital camera or other type of image sensor associated with the robot's machine vision system.
- the cloud computing system may receive multiple images from the robot in some embodiments.
- the robot sends the image (or images) to the cloud computing system so that the cloud computing system can analyze the image (or images) and calibrate the robot's machine vision system based on the analysis as described herein.
- the cloud computing system may be configured to apply multiple different image processing algorithms to the received image multiple times.
- each image processing algorithm (of the multiple image processing algorithms) may have a number of different corresponding configurable parameters, and each application of a particular image processing algorithm to the image may be executed with a different parameter set that includes one or more image processing parameters for use with that particular image processing algorithm.
- Applying the multiple different image processing algorithms to the image multiple times with different parameter sets each time enables the cloud computing system to generate a set of image processing results, where each individual image processing result (in the set of image processing results) is the result of one particular application of one particular image processing algorithm configured with one particular parameter set to the image received from the computing device.
- the cloud computing system may also be configured to determine a quality score for each image processing result (in the set of image processing results) in some embodiments.
- a quality score for a particular image processing result may be determined by comparing attributes of that particular image processing result with a set of quality metrics associated with the image processing algorithm that was used to generate that particular image processing result.
- the cloud computing system may be configured rank the quality scores from highest to lowest, and then select an image processing algorithm and a corresponding parameter set that was used to generate an image processing result having a corresponding quality score that exceeds a minimum quality threshold.
- the cloud computing system may select the image processing algorithm and the corresponding parameter set that was used to generate the image processing resulting having the highest corresponding quality score.
- the cloud computing may then instruct the computing device that originally sent the image to use the selected image processing algorithm and the selected parameter set for image processing operations.
- the cloud computing system may just instruct the computing device to execute the stored copy of the selected image processing algorithm with the stored parameter set.
- the cloud computing system may send one or both of the selected image processing algorithm and the parameter set to the computing device in addition to the instructions to use the selected image processing algorithm and the selected parameter set for image processing operations.
- the computing device may send both an image and environmental data to the cloud computing system.
- the environmental data may include information about the environmental conditions in the area where in the computing device is operating, including conditions in which the image was captured, such as, for example, the amount of light in the area, the source of the light in the area (e.g., sunlight, fluorescent, incandescent, etc.), the direction of the source of light relative to the sensor that captured the image, the location where the image was captured (e.g., GPS location, inside/outside, etc.), the time of day when the image was captured, the weather conditions when the image was captured, information about the background or objects in the background of the captured image, and/or other similar information.
- the source of the light in the area e.g., sunlight, fluorescent, incandescent, etc.
- the direction of the source of light relative to the sensor that captured the image e.g., GPS location, inside/outside, etc.
- the time of day when the image was captured e.g., GPS location, inside/outside,
- the cloud computing system may correlate the environmental data with the selected image processing algorithm and parameter set. Correlating environmental data with selected image processing algorithms and parameter sets may enable the cloud computing system to build and maintain a machine vision knowledge base comprising a collection of which image processing algorithms and parameter sets work well in different environmental conditions.
- the cloud computing system may be configured to use the information in the machine vision knowledge base for calibrating machine vision systems for computing devices such as robots.
- the cloud computing system may be able to select an image processing algorithm and parameter set based on information stored in the machine vision knowledge base without having to perform the multiple algorithm analysis described above.
- FIG. 1 is a high-level conceptual diagram showing components of a cloud computing system according to some embodiments of the disclosed systems and methods.
- FIG. 2A illustrates a high-level block diagram of a robot according to some embodiments of the disclosed systems and methods.
- FIG. 2B shows a graphical depiction of an example robot according to some embodiments of the disclosed systems and methods.
- FIG. 2C shows a graphical depiction of another example robot according to some embodiments of the disclosed systems and methods.
- FIG. 3 shows a conceptual block diagram example of using a cloud computing system for machine vision calibration according some embodiments of the disclosed systems and methods.
- FIG. 4 shows an example method for use by a cloud computing system to calibrate machine vision systems for robots according to some embodiments.
- FIG. 5 shows another example method for use by a cloud computing system to calibrate machine vision systems for robots according to some embodiments.
- FIG. 6 shows an example method for use by a robot for calibrating its machine vision system with a cloud computing system according to some embodiments.
- FIG. 1 is a high-level conceptual diagram showing components of a cloud computing system 102 according to some embodiments of the disclosed systems and methods.
- Cloud-based computing generally refers to networked computer architectures where application execution, service provision, and data storage may be divided, to some extent, between clients and cloud computing devices.
- the “cloud” may refer to a service or a group of services accessible over a network (e.g., the Internet) by clients, server devices, and cloud computing systems, for example.
- cloud computing enables a shared pool of configurable computing resources (e.g., networks, servers, storage, applications, and services) that can be provisioned and released with minimal management effort or interaction by the cloud service provider.
- configurable computing resources e.g., networks, servers, storage, applications, and services
- a cloud-based application may store copies of data and/or executable program code in the cloud computing system, while allowing client devices to download at least some of this data and program code as needed for execution at the client devices.
- downloaded data and program code can be tailored to the capabilities of specific client devices (e.g., a personal computer, tablet computer, mobile phone, smartphone, and/or robot) accessing the cloud-based application. Additionally, dividing application execution and storage between client devices and the cloud computing system allows more processing to be performed by the cloud computing system, thereby taking advantage of the cloud computing system's processing power and capability, for example.
- Cloud-based computing can also refer to distributed computing architectures where data and program code for cloud-based applications are shared between one or more client devices and/or cloud computing devices on a near real-time basis. Portions of this data and program code may be dynamically delivered, as needed or otherwise, to various clients accessing the cloud-based application. Details of the cloud-based computing architecture may be largely transparent to users of client devices. Thus, a PC user or a robot client device accessing a cloud-based application may not be aware that the PC or robot downloads program logic and/or data from the cloud computing system, or that the PC or robot offloads processing or storage functions to the cloud computing system, for example.
- the cloud computing system 102 includes one or more cloud services 104 , one or more cloud platforms 106 , cloud infrastructure 108 components, and cloud knowledge bases 110 .
- the cloud computing system 102 may include more of fewer components, and each of the cloud services 104 , the cloud platforms 106 , the cloud infrastructure components 108 , and the cloud knowledge bases 110 may comprise multiple computing and storage elements as well.
- one or more of the described functions of the cloud computing system 102 may be divided into additional functional or physical components, or combined into fewer functional or physical components.
- the example cloud computing system 102 shown in FIG. 1 is a networked computing architecture.
- the cloud services 104 may represent queues for handling requests from client devices.
- the cloud platforms 106 may include client-interface frontends for the cloud computing system 102 .
- the cloud platforms 106 may be coupled to the cloud services 104 to perform functions for interacting with client devices.
- the cloud platforms 106 may include applications for accessing the cloud computing system 102 via user interfaces, such as a web browser.
- the cloud platforms 106 may also include robot interfaces configured to exchange data with robot clients.
- the cloud infrastructure 108 may include service, billing, and other operational and infrastructure components of the cloud computing system 102 .
- the cloud knowledge bases 110 are configured to store data for use by the cloud computing system 102 , and thus, the cloud knowledge bases 110 may be accessed by any of the cloud services 104 , the cloud platforms 106 , and/or the cloud infrastructure components 108 .
- client devices may be configured to communicate with components of the cloud computing system 102 for the purpose of accessing data and executing applications provided by the cloud computing system 102 .
- a computer 112 a mobile device 114 , a host 116 , and a robot client 118 are shown as examples of the types of client devices that may be configured to communicate with the cloud computing system 102 .
- more or fewer client devices may communicate with the cloud computing system 102 .
- other types of client devices may also be configured to communicate with the cloud computing system 102 as well.
- the computer 112 shown in FIG. 1 may be any type of computing device (e.g., PC, laptop computer, tablet computer, etc.), and the mobile device 114 may be any type of mobile computing device (e.g., laptop, smartphone, mobile telephone, cellular telephone, tablet computer, etc.) configured to transmit and/or receive data to/from the cloud computing system 102 .
- the host 116 may be any type of computing device with a transmitter/receiver including a laptop computer, a mobile telephone, a smartphone, a tablet computer etc., which is configured to transmit/receive data to/from the cloud computing system 102 .
- the robot client 118 may include any type of computing device that is configured to communicate with the cloud computing system 102 and has an actuation capability (e.g., electromechanical capabilities) for moving about its environment and/or interacting with objects in its environment.
- the robot client 118 may include various combinations of computing devices, sensors, and electromechanical actuation elements.
- the robot client 118 may collect data via one or more sensors, and upload the data to the cloud computing system 102 via one or more communications interfaces.
- the cloud computing system 102 may be configured to analyze data received from the robot client 118 , and return processed data and/or instructions to the robot client 118 .
- a robot client 118 may be configured to send and receive data to a remote host 116 via the cloud computing system 102 .
- the robot client 118 may be configured to send/receive data to/from another client device via the cloud computing system 102 .
- the robot client may be configured to send/receive information to/from the computer 112 , the mobile device 114 , and/or even other robots either directly, indirectly via the cloud computing system 102 , or indirectly via other network systems.
- the robot client 118 may include one or more sensors, such as a digital camera or other type of image sensor.
- Other sensors may further include a gyroscope, accelerometer, Global Positioning System (GPS) receivers, infrared sensors, sonar, optical sensors, biosensors, Radio Frequency identification (RFID) systems, Near Field Communication (NFC) chip sensors, wireless sensors, and/or compasses, among others, for example.
- GPS Global Positioning System
- RFID Radio Frequency identification
- NFC Near Field Communication
- any of the client devices may also include a user-interface (UI) configured to allow a user to interact with the client device.
- the robot client 118 may include various buttons and/or a touchscreen interface configured to receive commands from a human or provide output information to a human.
- the robot client 118 may also include a microphone configured to receive voice commands from a human.
- the robot client 118 may also include one or more interfaces that allow various types of user-interface devices to be connected to the robot client 118 .
- the mobile device 114 , the computer 112 , and/or the host 116 may be configured to run a user-interface for sending and receiving information to/from the robot client 118 or otherwise configuring and controlling the robot client 118 .
- communication links between client devices and the cloud 102 may include wired connections, such as a serial or parallel bus, Ethernet, optical connections, or other type of wired connection.
- Communication links may also be wireless links, such as Bluetooth, IEEE 802.11 (IEEE 802.11 may refer to IEEE 802.11-2007, IEEE 802.11n-2009, or any other IEEE 802.11 revision), CDMA, 3G, GSM, WiMAX, or other wireless based data communication links.
- IEEE 802.11 may refer to IEEE 802.11-2007, IEEE 802.11n-2009, or any other IEEE 802.11 revision
- CDMA Code Division Multiple Access
- 3G Third Generation
- GSM Global System for Mobile communications
- WiMAX Worldwide Interoperability for Microwave Access
- the client devices may be configured to communicate with the cloud computing system 102 via wireless access points.
- Access points may take various forms.
- an access point may take the form of a wireless access point (WAP) or wireless router.
- WAP wireless access point
- an access point may be a base station in a cellular network that provides Internet connectivity via the cellular network.
- the client devices may include a wired or wireless network interface through which the client devices can connect to the cloud computing system 102 directly or via access points.
- the client devices may be configured to use one or more protocols such as 802.11, 802.16 (WiMAX), LTE, GSM, GPRS, CDMA, EV-DO, and/or HSPDA, among others.
- the client devices may be configured to use multiple wired and/or wireless protocols, such as “3G” or “4G” data connectivity using a cellular communication protocol (e.g., CDMA, GSM, or WiMAX, as well as for “WiFi” connectivity using 802.11).
- Other types of communications interfaces and protocols could be used as well.
- FIG. 2A illustrates a high-level block diagram of a robot 200 according to some embodiments of the disclosed systems and methods.
- the robot 200 includes a processor 202 , memory or storage 204 , sensors 206 , and electromechanical actuation devices 208 .
- the robot 200 may have one or communications interfaces (not shown) for communicating with the cloud computing system 102 (as shown in FIG. 1 ).
- the communications interfaces may include wired or wireless interfaces. Examples of wired interfaces include, for example, a parallel interface, a Universal Serial Bus (USB) interface, an Ethernet interface, an optical interface, or any other type of wired communications interface now known or later developed.
- USB Universal Serial Bus
- wireless interface examples include, for example, a Bluetooth interface, an IEEE 802.11 (and its variants) interface, a cellular (such as GSM, CDMA, UMTS, EV-DO, WiMAX, or LTE) interface, a Zigbee interface, or any other type of wireless communications interface now known or later developed.
- the storage 204 may be used for storing data from various sensors 206 of the robot 200 .
- the storage 204 may also be used for storing program instructions for execution by the processor 202 .
- the processor 202 may include one or more processors or other data processing sub-systems.
- the processor 202 may be coupled to the storage 204 and may be configured to control the robot 200 based on the program instructions stored at least partially in the storage 204 .
- the processor 202 may also be configured to receive and interpret data from the various sensors 206 on the robot 200 .
- sensors 206 that may be configured for use on the robot 200 include, for example, smoke sensors, light sensors, radio sensors, infrared sensors, microphones, gyroscopes, accelerometers, cameras, radars, capacitive sensors, touch sensors, or any other type of sensor now known or later developed.
- the robot 200 may also have electromechanical actuation devices 208 configured to enable the robot 200 to move about its environment or interact with objects in its environment.
- the robot 200 may have one or more electromechanical devices 208 , such as motors, wheels, movable arms, electromagnets, hands, grasping claws, tool attachments, etc., that enable the robot 200 to move about its environment, interact with objects located in its environment, and/or perform tasks with objects in its environment.
- the various sensors 206 and electromechanical devices 208 on the robot 200 may be modular in nature.
- different modules may be added to or removed from the robot 200 depending on particular requirements.
- the robot 200 may remove or perhaps power down one or more modules to reduce power usage.
- the robot 200 may add one or more additional modular electromechanical devices 208 as required.
- a robot may remove a modular “grasping claw” electromechanical device from its arm, and replace the “grasping claw” electromechanical device with a “tool interface” mechanism configured to accept various tool implements such as a screwdriver, bit driver, knife, wrench, or other tool, etc. to enable the robot to perform a specific task.
- a robot may remove a small-wheeled drive mechanism configured for indoor use, and replace it with a large-wheeled drive mechanism configured for outdoor use. From a sensor standpoint, the robot may remove a camera interface configured for daytime use, and replace it with a night-vision enabled interface configured for use in dark or unlit areas.
- Other types of modular electromechanical devices 208 and/or modular sensors 206 could be used as well. Robots with modular sensors 206 and electromechanical devices 208 may be advantageous in situations where the robot 200 may need to adapt to different situations and environments and/or use different tools, sensors and/or other attachments to accomplish various tasks.
- the processor 202 , storage 204 , and sensors 206 of the robot 200 may optionally be components of a removable device 210 indicated by the dashed line shown in the FIG. 2A .
- the robot 200 may have a number of mechanical actuation devices 208 (e.g., a movable base, one or more grasping claws, robot hands, etc.), and the robot 200 may be configured to receive a removable device 210 to function as the “brains” or control unit of the robot 200 .
- the removable device 210 may correspond to a mobile telephone, a smartphone, a tablet computer, a laptop computer, etc.
- the device 210 may be a smartphone configured to plug in to the robot.
- the smartphone When plugged in to the robot, the smartphone may form an interactive display configured to receive commands from a human, for example.
- the smartphone may also provide a robot with sensors (e.g., a camera, compass, GPS receiver, accelerometer, etc.), one or more wireless communications interfaces, and processing capabilities, for example.
- the robot 200 may be able to leverage the sensor and communications capabilities of neighboring client devices to supplement or augment its own sensor and communications capabilities.
- the robot 200 may access a separate smartphone via a Bluetooth connection, and use the smartphone's cellular data network interface to access the cloud computing system 102 shown in FIG. 1 .
- the robot 200 may be configured to connect to other sensors to obtain information.
- the robot 200 may be configured to connect to security system cameras or other sensors positioned near the entrance of a warehouse to monitor the shipments into and out of the warehouse, for example.
- the robot 200 will have a machine vision system.
- a robot machine vision system typically includes (i) at least one image sensor configured to obtain image data and (ii) at least one processor configured to process images obtained via the at least one image sensor for use by the robot.
- a robot may use its machine vision system (alone or in combination with other sensor systems) to navigate through an area, to identify objects in its environment, to track objects in its environment, to interact with objects in its environment (e.g., grasp and manipulate an object), etc.
- the robot's 200 machine vision system may be entirely contained within the removable device 210 .
- the robot 200 may rely on (i) an image sensor 206 (e.g., a digital camera) in the removable device 210 to capture images and (ii) processor 202 to process images captured by the image sensor 206 .
- the robot 200 may have a built-in (i.e., onboard, integrated, etc.) machine vision system that includes (i) a built-in image sensor (or sensors) to capture images and (ii) a built-in processor (or processors) to process images captured by the built-in image sensor(s).
- FIG. 2B shows a graphical depiction of an example robot 212 according to some embodiments of the disclosed systems and methods.
- the robot 212 is shown as a mechanical form of a person including arms, legs, and a head.
- the robot 212 may be configured to receive any number of various modules or components, such a smartphone or tablet computer, which may be configured to operate or control the robot 212 , or otherwise be used by the robot 212 for sensor, processing, and/or communications capabilities.
- a smartphone (e.g., removable device 210 of FIG. 2A ) can be attached to the robot 212 .
- the smartphone may include one or more components of the robot's 212 machine vision system.
- the smartphone may include on one or more image sensors (e.g., a digital camera) that are configured to capture images for the robot 212 to use in connection with its machine vision system.
- one or more onboard processors of the robot 212 may be configured to process the images collected by the image sensors of the smartphone.
- the robot 212 may have onboard image sensors configured to capture images for the robot 212 to use in connection with its machine vision system, and one or more processors of the smartphone may be configured to process images captured by the one or more onboard image sensors of the robot 212 .
- FIG. 2C shows a graphical depiction of another example robot 214 according to some embodiments of the disclosed systems and methods.
- the robot 214 includes a computing device 216 , image sensors 218 , and a mechanical actuator 220 .
- the computing device 216 may be a laptop or other type of portable computing device which may be configured to receive data from the sensors 218 .
- the sensors 218 may include a camera, infrared sensors, and other motion sensing or computer vision elements for use in connection with the robot's 214 machine vision system.
- the mechanical actuator 220 may include an arm with a grasping claw or other type of attachment, a base with wheels, and a motor upon which the computing device 216 and the sensors 218 can be positioned, for example.
- Any of the robots illustrated in FIGS. 2A-2C may be configured to operate according to a robot operating system, e.g., an operating system designed for specific functions of the robot.
- a robot operating system may provide libraries and tools (e.g., hardware abstraction, device drivers, visualizers, message-passing, package management, etc.) to enable robots to execute robot applications.
- libraries and tools e.g., hardware abstraction, device drivers, visualizers, message-passing, package management, etc.
- a robot operating system may include publish and subscribe functionality and may also include functionality to control components of the robot, such as head tracking, base movement (e.g., velocity control, navigation framework), etc.
- a robot may have a machine vision system that the robot uses (alone or in combination with other sensor systems) to navigate through an area, to identify objects in its environment, to track objects in an environment, to interact with objects in the environment (e.g., grasp and manipulate an object), etc.
- a particular robot's machine vision system may include (i) at least one image sensor configured to obtain image data and (ii) at least one processor configured to process image data obtained via the at least one image sensor.
- the robot's machine vision system can be configured to execute different image processing algorithms depending on the task the robot may be performing, the particular sensor that the robot may be using with its machine vision system, the particular environment that the robot may be navigating through, and/or other factors.
- the robot's machine vision system when navigating within a room, it may be desirable for the robot's machine vision system to execute a particular image processing algorithm designed to identify walls, doors, windows, large objects, and people to help the robot navigate through the room without running into obstacles. But when the robot needs to perform a particular task, such as retrieving a red pen from a cup of pens for a user, for example, it may be desirable for the robot's machine vision system to execute a different image processing algorithm designed to discern finer details between smaller objects so that the robot can distinguish between individual pens in the cup rather than simply treating the cup of pens as a single object, or simply treating the desk and all of its contents (including the cup of pens) as a single object, for example.
- each individual image processing algorithm that can be executed by the robot's machine vision system can also be calibrated and/or fine-tuned by adjusting values for various image processing parameters.
- Each individual image processing algorithm may have different corresponding image processing parameters, and each parameter may have a wide range of configurable values.
- the previously-described image processing algorithm for use in traveling within the office building may have a number of different configurable parameters for fine-tuning the image processing algorithm to operate in different environments.
- the robot may travel through internal hallways lit by fluorescent lighting along the ceiling, and the robot may also travel within individual offices and conference rooms lit via combinations of overhead fluorescent lighting, wall-mounted or tabletop-based incandescent lighting, and/or natural sunlight from exterior windows.
- the robot may need to periodically recalibrate and/or fine-tune its machine vision system to adjust to environmental changes, such as changes in the type of light source (fluorescent lighting vs. incandescent lighting, vs. sunlight), the direction of the light source (overhead versus from outward facing windows), the intensity of the light source (e.g., in the morning, the east side of the building may have direct sunlight while the west side may have indirect sunlight, etc.), etc.
- Changing the parameters for the image processing algorithm may improve the image processing results produced by the machine vision system's application of the image processing algorithm to the image data captured by the robot's image sensor(s). And with better image processing results, the robot may able to perform its task better. For example, if changing the parameters for a particular image processing algorithm helps the robot to identify walls, doors, windows, objects, and people better, then the robot may be less likely to run in to things as it navigates through a particular area.
- the machine vision system may change to a different image processing algorithm altogether (with a whole new set of corresponding image processing parameters). For example, if the office building lost power and the hallway became very dark, then the robot may need to switch to a totally different image processing algorithm designed to process images in low light environments.
- the example “low light” image processing algorithm may also have different corresponding image processing parameters, and each parameter for use with the “low light” algorithm may also have a wide range of configurable values.
- the robot needs to locate and retrieve a particular object based in part an image on the surface of the object (e.g., a coffee cup with a particular design or logo), then it may be desirable for the robot to use a different image processing algorithm configured with a set of corresponding image processing parameters to help the robot's machine vision system identify the particular design or logo on the cup.
- a different image processing algorithm configured with a set of corresponding image processing parameters to help the robot's machine vision system pick out the details of the code from other information on the surface object.
- machine vision systems in the presently disclosed embodiments may be configurable to execute many different image processing algorithms in various circumstances, and each of the different image processing algorithms may be highly configurable with many different parameter settings having many different values. Having the capability to execute many different highly configurable image processing algorithms may enable a robot to perform a wide variety of tasks in a wide variety of different environmental conditions. However, it may be impractical to store all the potential image processing algorithms available to the machine vision system in the robot's local memory. Similarly, it may difficult for a robot to determine or choose a particular image processing algorithm and a corresponding set of parameter settings for use by its machine vision system in different operating environments and circumstances.
- a cloud computing system may be used to determine or select an image processing algorithm along with a corresponding set of image processing parameters for use by a robot's machine vision system.
- the cloud computing system can be configured to analyze image data received from a robot (and perhaps additional information received from the robot as described later, e.g., environmental data, task data, and/or object data), and then determine or select one or both of (i) an image processing algorithm and (ii) a corresponding set of one or more image processing parameters for use with the selected image processing algorithm. Then, the cloud computing system may send an indication of the selected algorithm and corresponding parameter set (or perhaps even the actual algorithm code configured with the appropriate parameter settings) to the robot for the robot's machine vision system to execute locally.
- the robot's machine vision system can be configured to execute the selected algorithm with the corresponding parameter set locally, the robot is able to perform image processing tasks with little or no network latency that may be present for alternative systems and methods where actual image processing is performed by a cloud computing system or other type of computing system located remotely from the robot.
- the cloud computing system can analyze many different algorithms configured with many different combinations of parameter settings to determine an algorithm and parameter set appropriate for a particular robot in a particular operating environment or situation. Additionally, in some examples, because the cloud computing system can be configured to send an indication of the algorithm and a parameter set for the robot's machine vision system to use rather than sending the image processing results back to the robot, the systems and methods described herein make efficient use of bandwidth between the cloud computing system and the robot.
- FIG. 3 shows an example 300 of a robot 301 using a cloud computing system for machine vision calibration according some embodiments of the disclosed systems and methods.
- the robot 301 may be similar to any of the robots shown and described herein with respect to FIGS. 1 and 2 A- 2 C.
- the cloud computing system in example 300 includes a cloud processing engine 302 and a machine vision knowledge base 303 .
- the cloud computing system may be similar to the cloud computing system shown and described herein with respect to FIG. 1 .
- the robot 301 sends image data 304 to the cloud processing engine 302 of the cloud computing system.
- the cloud processing engine 302 is configured to use the image data 304 to determine a particular image processing algorithm and corresponding parameter set for the robot 301 to use with the robot's 301 machine vision system.
- the cloud processing engine 302 may send the determined image processing algorithm and parameter set to the robot 301 via a response 317 .
- the image data 304 may comprise an image captured by an image sensor associated with the robot 301 , such as a digital camera, infrared sensor, a 3D scanner, or any type of image sensor now known or later developed.
- the image data 304 may additionally or alternatively comprise an image that has a reduced resolution or color space compared to the image captured by the image sensor associated with the robot 301 .
- the image data 304 may also contain information about the type of sensor that the robot 301 used to obtain the image associated with the image data 304 .
- the robot may also send environmental data along with the image data 304 .
- the environmental data may be associated with the image captured by the robot's 301 image sensor alone or in combination with one or more other of the robot's 301 sensors (e.g., GPS sensors, light sensors, accelerometers, etc.).
- the environmental data may include an amount of light, a type of light source, a direction of the light source, a geographic location (e.g., Global Positioning System or similar coordinates), a weather condition (sunny, cloudy, rain, etc.), a type of background (color, design/pattern, reflectivity, etc.), a speed that the robot is traveling, or any other type of data associated the robot's 301 environment or surroundings that may have at least some impact on the operation and function of the robot's 301 machine vision system.
- a geographic location e.g., Global Positioning System or similar coordinates
- a weather condition unsunny, cloudy, rain, etc.
- a type of background color, design/pattern, reflectivity, etc.
- the robot 301 may additionally send information about the task it is trying to accomplish and/or the objects that it is attempting to interact with.
- the cloud processing engine 302 may take the task that the robot 301 is trying to accomplish and/or the object or objects that the robot 301 is trying to interact with into consideration when determining or selecting a particular image processing algorithm and corresponding parameter set for the robot 301 to use with its machine vision system.
- the cloud processing engine 302 is configured to (i) analyze the image data 304 (along with perhaps additional data, e.g., environmental data, task data, and/or object data) received from the robot 301 , (ii) select an image processing algorithm and a set of one or more parameters (for use with the selected image processing algorithm) for the robot 301 to use with its machine vision system, and (iii) send a response 317 to the robot 301 with an indication of the selected image processing algorithm and corresponding parameter set based on the cloud processing engine's 302 analysis of the image data 304 (and perhaps the additional data as well).
- additional data e.g., environmental data, task data, and/or object data
- the cloud processing engine 302 receives the image data 304 (and perhaps additional data, e.g., environmental data, task data, and/or object data) from the robot 301 .
- the image data 304 includes at least one image.
- the cloud processing engine 302 may perform at least one of a few different functions.
- the cloud processing engine 302 may apply a plurality of different image processing algorithms 305 , 306 , 307 to the image included in the image data 304 .
- the cloud processing engine 302 may analyze environmental data (and/or task data and/or object data) received from the robot 301 , compare the received environmental data with environmental data stored in the machine vision knowledge base 303 .
- the cloud processing engine 302 may perform some combination of the algorithm analysis and environmental data lookup functions. Each of the functions is described below in turn.
- the cloud processing engine 302 applies a plurality of different image processing algorithms 305 , 306 , 307 to the image included in the image data 304 .
- Each algorithm 305 , 306 , and 307 can be applied to the image multiple times, and each application of the image processing algorithm to the image is executed with a set of parameters.
- image processing algorithm 1 shown as block 305 is applied to the image x number times as shown in block 308
- image processing algorithm 2 shown as block 306 is applied to the image y number of times as shown in block 311
- algorithm n shown as block 307 is applied to the image z number of times as shown in block 314 .
- the cloud computing system may store many different image processing algorithms for use with many different types of machine vision systems that may be deployed by many different types of robots.
- the robot's 301 machine vision system may not be able to execute every image processing algorithm stored by the cloud computing system.
- the image processing algorithms that can be executed by the robot's 301 machine vision system may be based on the type of image sensors associated with the robot 301 and/or the processing capability of the robot 301 (or at least the processing capability available to the robot's machine vision system). Nevertheless, a particular robot's machine vision system may be able to execute many different image processing algorithms.
- new image processing algorithms may be added to the cloud computing system over time as new image processing algorithms are developed, and older image processing algorithms may be removed from the cloud computing system as older algorithms are discarded in favor of newer algorithms.
- the total number of image processing algorithms “n” in the plurality of algorithms 305 - 307 to be applied to the image received from the robot 301 may include all of the image processing algorithms that can be executed by the robot's 301 machine vision system.
- the robot's 301 machine vision system may be able to execute hundreds (or more) different image processing algorithms.
- the cloud processing engine 302 has substantial computing resources compared to the robot 301 , the cloud processing engine 302 is able execute many different image processing algorithms very quickly (perhaps even in parallel or at least substantially in parallel), or at least likely more quickly than an individual robot might be able to perform a similar computation.
- the cloud processing system 302 may select some subset of all of the image processing algorithms that can be executed by the robot's 301 machine vision system to include in the plurality of “n” algorithms 305 - 307 to be applied to the image.
- the subset of image processing algorithms included in the plurality of “n” algorithms 305 - 307 to be applied to the image may be based on other information included in the additional data received from the robot 301 .
- the cloud computing system may use environmental data, task data, and/or object data (as previously described) received from the robot 301 to select or determine which algorithms to be applied to the image.
- the cloud processing engine 302 may access the machine vision knowledge base 303 to determine which image processing algorithms to apply to the image.
- the machine vision knowledge base 303 is described in more detail later.
- the cloud processing engine 302 shown in example 300 applies “n” different image processing algorithms 305 , 306 , 307 to the image included in the image data 304 received from the robot 301 .
- Example 300 also shows each algorithm of the plurality of algorithms 305 , 306 , 307 being applied to the image multiple times. In operation, each application of the image processing algorithm to the image is executed with a different set of image processing parameters (which may include some similar or same parameters), and each application of a particular algorithm configured with a corresponding parameter set yields a different image processing result.
- algorithm 1 is configured with image processing parameter set 1-1 and applied to the image to generate image processing result 1-1
- image processing algorithm 1 is configured with image processing parameter set 1-2 and applied to the image to generate image processing result 1-2
- algorithm 2 is configured with image processing parameter set 2-1 and applied to the image to generate image processing result 2-1
- image processing algorithm 2 is configured with image processing parameter set 2-2 and applied to the image to generate image processing result 2-2, and so on through the application of algorithm 2 configured with image processing parameter set 2-y to the image to generate image processing result 2-y.
- algorithm n i.e., the last of the “n” total algorithms in the plurality of algorithms applied to image
- image processing algorithm n is configured with image processing parameter set n-2 and applied to the image to generate image processing result n-2
- algorithm n configured with parameter set n-z to the image to generate image processing result n-z.
- the application of the multiple algorithms configured with the multiple different parameter sets can be performed in parallel or at least substantially in parallel to generate a plurality of different image processing results.
- algorithm 1 is applied to the image with “x” different parameter sets to generate “x” different image processing results 309 ;
- algorithm 2 is applied to the image with “y” different parameter sets to generate “y” different image processing results 312
- algorithm n is applied to the image with “z” different parameter sets to generate “z” different image processing results 316 .
- “x”, “y”, and “z” may be very large numbers.
- algorithm 1 has three parameters, and each parameter has 15 unique settings, then, at least in some embodiments, “x” may equal 3 15 , and thus, the cloud processing engine 302 may apply algorithm 1 to the image up to 14,348,907 times (depending on the specific algorithm, parameters, and parameter settings). But because the cloud processing engine 302 has substantial computing resources compared to the robot 301 , the cloud processing engine 302 is able execute an algorithm (even multiple different algorithms) with multiple different parameter sets very quickly (perhaps even in parallel or at least substantially in parallel), or at least likely more quickly than an individual robot might be able to perform a similar computation (or set of computations).
- the cloud processing system 302 may select some subset of the total number of parameter sets to use with an algorithm. For example, for algorithm 1 shown in block 305 , the subset of “x” parameter sets 308 may be based on the additional data received from the robot 301 . In operation, the cloud computing system may use the additional data (e.g., environmental data, task data, and/or object data as previously described) to determine a subset of parameter sets to use when applying a particular algorithm to an image. In some embodiments, the cloud processing engine 302 may access the machine vision knowledge base 303 to determine which parameter sets to use when applying a particular algorithm to an image. The machine vision knowledge base 303 is described in more detail later.
- the cloud processing engine 302 determines a quality score for each image processing result. For example, the cloud processing engine 302 determines a quality score for each of the different image processing results 309 (result 1-1 through result 1-x) generated via the application of algorithm 1 configured with the different parameter sets 308 (parameter set 1-1 through parameter set 1-x), thereby generating “x” different quality scores 310 (score 1-1 through score 1-x). The cloud processing engine 302 calculates quality scores for each of the other image processing results as well.
- the quality score generated for an individual image processing result may be based on a comparison of one or more attributes of the individual image processing result with a set of one or more quality metrics associated with the algorithm that was used to generate the individual image processing result.
- the quality score generated for an individual image processing result may be based on objective quality measures that may be relevant to multiple (or perhaps all) of the image processing algorithms.
- the quality score generated for an individual image processing result may be based on a combination of algorithm-specific metrics and objective metrics.
- the cloud processing engine 302 determines which quality score is the highest. After determining the highest quality score, the cloud processing engine 302 selects the image processing algorithm and the parameter set that was used to generate the image processing result having the highest score, and then the cloud processing engine 302 sends an indication of the selected algorithm and parameter set to the robot 301 via response 317 . In situations where multiple image processing results have the highest score, the cloud processing engine 302 may be configured to select one of the multiple highest scoring results based in part on environmental data, task data, and/or object data (as previously described) received from the robot 301 . In some embodiments, rather than selecting the image processing result having the highest quality score, the cloud processing engine 302 may instead select an image processing result having a quality score that meets or exceeds a minimum quality score threshold.
- quality score 2-2 is shaded to indicate that it has the highest quality score of the different sets of quality scores 310 , 313 and 316 that were determined for the corresponding sets of image processing results 309 , 312 , and 315 . Because image processing result 2-2 had the highest quality score, the cloud processing system 302 in example 300 is shown selecting algorithm 2 and parameter set 2-2 as the algorithm and parameter set for the robot 301 to use with its machine vision system. In operation, the cloud processing engine 302 (alone or in combination with other cloud computing system components) sends the robot 301 a response 317 based on the selected algorithm and parameter set.
- the robot 301 may have copies of the program code for one or more commonly used image processing algorithms.
- the response 317 sent from the cloud processing engine 302 to the robot 301 may include an indication of the selected algorithm and an indication of the parameter settings.
- the robot's 301 machine vision system may execute the indicated algorithm configured with the indicated parameter settings.
- the robot 301 may not have a copy of the program code for the selected image processing algorithm.
- the response 317 sent from the cloud processing engine 302 to the robot 301 may also include program code for the selected image processing algorithm.
- the robot's 301 machine vision system can execute the selected algorithm with the selected parameter settings.
- the cloud processing engine 302 may also send the robot 301 one or more quality metrics associated with the selected image processing algorithm. Additionally or alternatively, the robot 301 may also store one or more objective metrics. In operation, the robot 301 may periodically measure the performance of its machine vision system based in part on one or more of the received quality metrics associated with the selected algorithm and/or the objective quality metrics.
- the robot 301 may obtain and send new image data 304 (and perhaps additional data) to the cloud processing engine 302 , and the cloud computing engine 302 may select either (i) a new parameter set to use with the current algorithm being executed by the robot's machine vision system (which would be the algorithm previously selected by the cloud processing engine 302 ) or (ii) a new algorithm and corresponding parameter set.
- any set of one or more of the following conditions could be sufficient to trigger the process of obtaining an sending new image data (perhaps along with additional data) to the cloud processing system 302 for selecting a new parameter set or a new algorithm and parameter set: (i) the quality score of an image processing result falls below a threshold quality score; (ii) the quality score of a later image processing results differs more than a predetermined amount from the quality score of an earlier image processing result; (iii) the rate of change in quality scores of image processing results measured over a period of time is greater than a threshold rate of change; or (iv) any combination of the foregoing. Other methods of measuring algorithm performance degradation could be used as well.
- the selection of the new parameter set or algorithm and parameter set may be performed by any of the methods described herein.
- the cloud computing system 302 may conduct the multiple algorithm analysis described above to determine a new parameter set or new algorithm and parameter set.
- the cloud computing system 302 could query the machine vision knowledge base 303 to determine a new parameter set or new algorithm and parameter set.
- the cloud computing system 302 could query the machine vision knowledge base 303 to select a set of candidate algorithms and/or parameter sets for use in a multiple algorithm analysis described herein.
- an advantage to having the robot 301 monitor the performance of its machine vision system locally is that the robot can be configured to determine when it needs to update the algorithm being executed by its machine vision system.
- the robot can continue using the current algorithm with its current parameter set until it receives an updated parameter set (or an indication of a new algorithm with a new parameter set) from the cloud computing system.
- the transition between a prior machine vision system configuration and an updated machine vision system configuration is substantially seamless.
- the robot can be configured to send image data to the cloud computing system periodically, the bandwidth required for the machine vision system calibration methods described above can be lower than a comparable machine vision system calibration method where the robot streams image data to a cloud computing system for analysis and processing.
- some embodiments may include a machine vision knowledge base 303 .
- the cloud computing engine 302 may also send (i) at least some of the image data 304 , (ii) at least some of the additional data (e.g., environmental data, task data, and/or object data) if applicable, and (iii) at least some of the information associated with the response 317 to the machine vision knowledge base 303 .
- the additional data e.g., environmental data, task data, and/or object data
- the cloud processing engine 302 may send the selected algorithm and parameter set (or at least an indication of the selected algorithm and parameter set) to the machine vision knowledge base 303 along with the environmental data, task data, and/or object data (as previously described) that may have been received from the robot 301 along with the image data 304 .
- Example 300 shows the machine vision knowledge base 303 storing example dataset 320 which includes correlations of different environmental data with different combinations of algorithms and parameter sets based on results from the cloud processing engine's 302 analysis of many different images received from many different robots.
- the machine vision knowledge base 303 can be configured to store the “best” algorithms and parameter sets (e.g., most often used algorithms and parameter sets) for use by robots in various environments.
- different algorithms and parameter sets could be correlated or associated with certain lighting conditions, e.g., particular type of light source, particular direction of light source, particular intensity of light source, etc.
- different algorithms and parameter sets could be correlated or associated with certain locations, e.g., certain GPS coordinates, certain rooms of a house or a building, etc.
- the cloud processing engine 302 can be configured to determine or infer certain environmental conditions rather than rely on environmental data received from a robot. Determining or inferring environmental conditions might be advantageous in situations where a robot lacks sensors to record certain environmental conditions. For example, for outdoor images and/or for indoor images affected by sunlight from windows, the cloud processing engine 302 could infer the direction and intensity of sunlight based on a robot's location and current weather data at that location, and the inferred direction and intensity of sunlight and the local weather conditions could be correlated with certain algorithms and parameter sets in the machine vision knowledge base 303 .
- Example data 320 shows the machine vision knowledge base 303 storing “w” different environments, where each environment has a corresponding algorithm and parameter set. Different environments (as defined by environmental data) may be associated with the same corresponding algorithm and parameter set. In operation, the number “w” of different environments may be very large. In some embodiments, the machine vision knowledge base 303 may even be configured to store many hundreds of millions of different environments and their corresponding algorithms and parameter sets. In some embodiments, the machine vision knowledge base 303 may also include datasets including correlations with task and/or object data with various algorithms and parameter sets as well. Although the example data 320 is shown as a table, other types of data sets and data structures could be used as well.
- the cloud processing engine 302 may be configured to query the machine vision knowledge base 303 based on environmental data, task data, and/or object data received from a particular robot to select an algorithm and parameter set for use by the particular robot.
- the cloud processing engine 302 may not need to perform the multiple algorithm analysis procedure described above if it is able to select an appropriate algorithm and parameter set based on a machine vision knowledge base 303 query.
- later robots that need to configure their machine vision systems for operation in a particular environment can benefit from the algorithms and corresponding parameter sets that the cloud computing system 302 has previously determined for earlier robots that have operated in the same (or similar) environment as the later robot.
- the cloud processing engine 302 may search or query the machine vision knowledge base 303 to identify an algorithm and parameter set that is correlated or otherwise associated with the same or similar environmental data, object data, and/or task data received from the robot 301 . If the machine vision knowledge base 303 contains an algorithm with a corresponding parameter set that is correlated or associated with the same or similar environmental data, object data, and/or task data received from the robot 301 , then the cloud processing engine 302 may simply return that particular algorithm and parameter set to the robot 301 in the response 317 without having to perform the multiple algorithm analysis procedure described above.
- the cloud processing engine 302 may search or query the machine vision knowledge base 303 to identify one or more candidate algorithms and parameter sets that are correlated with the same or similar environmental data, object data, and/or task data received from the robot 301 in the image data 304 .
- the candidate algorithms and parameter sets for the different environmental conditions (or tasks, objects, etc.) selected from the machine vision knowledge base 302 may be based on a history of the algorithms and parameter sets determined by the multiple algorithm analysis process described above.
- the cloud processing engine 302 may then perform the multiple algorithm analysis process described above to select one of the algorithms and parameter sets to return to the robot 301 in the response 317 .
- the cloud computing system can use the machine vision knowledge base 303 to reduce the total number of algorithms and parameter sets to evaluate in the multiple algorithm analysis process described above.
- the cloud computing system may be configured to periodically re-evaluate algorithms and parameter sets that have previously been correlated or associated with particular environmental data, task data, and/or object data stored in the machine vision knowledge base 303 . In some instances, the cloud computing system may revise the algorithms and parameter sets associated with particular environmental data, task data, and/or object data based on more detailed algorithm analyses.
- the cloud processing engine 302 may select an algorithm and parameter set for the robot 301 based on a “first pass” analysis of a limited number of algorithms and parameter sets. Analyzing a limited number of algorithms and parameter sets in a “first pass” manner may enable the cloud processing engine 302 to quickly identify and select an acceptable (but perhaps not optimal) algorithm and parameter set for the robot 301 to use so that the cloud processing engine 302 can send the robot 301 a quick response.
- the cloud processing engine 302 may be able to determine a better algorithm and parameter set after analyzing the image with a greater number of algorithms and parameter sets.
- the cloud processing engine 302 can re-visit the earlier results of the “first pass” analysis to determine whether better performing algorithms and parameter sets can be found for the image. And if the cloud processing engine 302 finds a better performing algorithm and/or parameter set for that particular image, the cloud processing engine 302 may update the data in the machine vision knowledge base 303 to associate the better performing algorithm and/or parameter set with the environmental data, object data, and/or task data that was received along with the image on which the cloud processing engine 302 previously performed the quick “first pass” analysis.
- the cloud processing engine 302 may also be configured to re-run analyses on previously-received images when new image processing algorithms become available. If the new image processing algorithm performs better in certain environments, then the machine vision knowledge base can be updated accordingly. In this manner, the cloud processing engine 302 improves the data in the machine vision knowledge base 303 over time so that better-performing algorithms and corresponding parameter sets can be returned to robots in response to machine vision calibration requests.
- FIG. 4 shows an example method 400 for use by a cloud computing system to calibrate machine vision for robots according to some embodiments.
- the cloud computing system and the robot may be similar to any of the cloud computing systems (and their cloud computing components) and robots described herein with respect to FIGS. 1-3 .
- Method 400 begins at block 401 .
- a cloud computing system receives image data from a robot.
- the image data may be similar to the image data described previously herein.
- the cloud computing system may also receive additional data, e.g., environmental data, task data, and/or object data as described herein.
- the cloud computing system applies a plurality of different image processing algorithms to the image a plurality of times to generate a plurality of different image processing results, where each application of each algorithm to the image is performed with a different set of one or more image processing parameters.
- the application of multiple algorithms to the image may be similar to the procedure described herein with respect to FIG. 3 .
- the cloud computing system determines a plurality of quality scores, where each image processing result has a corresponding quality score. Determining a quality score may be similar to the procedures for determining a quality score described herein with respect to FIG. 3 . Then, at block 405 , the cloud computing system determines which image processing result of the plurality of image processing results from block 404 has the highest quality score. Determining which image processing result has the highest quality score may be similar to the procedures for determining a highest quality score described herein with respect to FIG. 3 .
- the cloud computing system may determine which image processing result of the plurality of image processing results from block 404 is above a threshold quality score, and if multiple image processing results are above the threshold quality score, the cloud computing system may select any algorithm and parameter set corresponding to any result above the threshold quality score.
- the cloud computing system selects the image processing algorithm and the corresponding set of one or more image processing parameters that were used to generate the image processing result that had the highest quality score from block 405 . Then, at block 407 , the cloud computing system instructs the robot that sent the image data to use the selected image processing algorithm and corresponding parameter set for its machine vision system. Example method 400 then ends at block 408 .
- FIG. 5 shows another example method 500 for use by a cloud computing system to calibrate machine vision systems for robots according to some embodiments.
- the cloud computing system and the robot may be similar to any of the cloud computing systems (and their cloud computing components) and robots described herein with respect to FIGS. 1-3 .
- Method 500 begins at block 501 .
- the cloud computing system receives, from a robot, (i) image data and (ii) additional data.
- the image data includes at least one image (but could perhaps include multiple images).
- the additional data includes at least one of environmental data, task data, and/or object.
- the image data, at least one image, environmental data, task data, and/or object data of block 502 may be similar to the image data, at least one image, environmental data, task data, and/or object data described elsewhere herein.
- the cloud computing system queries a machine vision knowledge base.
- the machine vision knowledge base includes a plurality of different image processing algorithms and corresponding image processing parameter settings, where individual algorithms and parameter sets are associated with different environmental data, task data, and/or object data.
- the machine vision knowledge base of block 503 may be similar to the machine vision knowledge base shown and described herein with respect to FIG. 3 .
- the cloud computing system selects an image processing algorithm and corresponding parameter set from the machine vision knowledge base of block 503 based at least in part on at least one of (i) the environmental data received from the robot, (ii) the task data received from the robot, and/or (iii) the object data received from the robot.
- the robot's machine vision system can be calibrated for its current environment, task, etc. based at least in part on results from the machine vision knowledge base query.
- the cloud computing system instructs the robot to use the selected image processing algorithm and corresponding parameter set at block 505 .
- Example method 500 then ends at block 506 .
- block 505 may include selecting a plurality of image processing algorithms and corresponding parameter sets from the machine vision knowledge base based at least in part on at least one of (i) the environmental data received from the robot, (ii) the task data received from the robot, and/or (iii) the object data received from the robot.
- the cloud processing system may then use the selected plurality of image processing algorithms and corresponding parameter sets in a multiple algorithm analysis procedure similar to the procedure described in blocks 403 - 406 shown and described herein with respect to FIG. 4 .
- the cloud computing system can instruct the robot to use the particular image processing algorithm and corresponding parameter set at block 505 .
- Example method 500 then ends at block 506 .
- FIG. 6 shows an example method 600 for use by a robot for calibrating its machine vision system with a cloud computing system according to some embodiments.
- the cloud computing system and the robot may be similar to any of the cloud computing systems (and their cloud computing components) and robots described herein with respect to FIGS. 1-3 .
- Example method 600 begins at block 601 .
- the robot obtains an image from one or more image sensors.
- the image sensor may be integrated with the robot.
- the image sensor may be integrated with a detachable device (e.g., a smartphone or similar mobile computing device with a sensor) as describe herein with respect to FIGS. 2A , 2 B, and 2 C.
- the image sensor of block 602 may be similar to any of the image sensors described elsewhere herein.
- the robot may optionally determine environmental data, task data, and/or object data associated with its surroundings, a task it is attempting to perform, and/or an object it is attempting to interact with.
- the environmental data, task data, and/or object data of block 603 may be similar to any of the environmental data, task data, and/or object data described elsewhere herein.
- the robot sends the image to a cloud computing system.
- the robot may also send the determined environmental data, task data, and/or object data associated to the cloud computing system at block 605 .
- the cloud computing system After the cloud computing system receives the image (along with the optional environmental data, task data, and/or object data), the cloud computing system selects an image processing algorithm and corresponding parameter set based on an analysis of the image received from the robot (and perhaps also based on the environmental data, task data, and/or object data received from the robot) according to any of the procedures shown and described herein with respect to FIGS. 3-5 .
- the robot receives, from the cloud computing system, an indication of an image processing algorithm and a set of one or more image processing parameters for use with the indicated image processing algorithm.
- the robot may additionally receive program code associated with the indicated image processing algorithm as described herein.
- Example method 600 then ends at block 608 .
Abstract
Description
Claims (21)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/601,319 US8965104B1 (en) | 2012-02-10 | 2012-08-31 | Machine vision calibration with cloud computing systems |
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US201261597495P | 2012-02-10 | 2012-02-10 | |
US13/601,319 US8965104B1 (en) | 2012-02-10 | 2012-08-31 | Machine vision calibration with cloud computing systems |
Publications (1)
Publication Number | Publication Date |
---|---|
US8965104B1 true US8965104B1 (en) | 2015-02-24 |
Family
ID=52473043
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/601,319 Active 2033-05-02 US8965104B1 (en) | 2012-02-10 | 2012-08-31 | Machine vision calibration with cloud computing systems |
Country Status (1)
Country | Link |
---|---|
US (1) | US8965104B1 (en) |
Cited By (25)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20140016856A1 (en) * | 2012-05-11 | 2014-01-16 | Cornell University | Prediction of successful grasps by end of arm tooling |
US20140200840A1 (en) * | 2012-12-19 | 2014-07-17 | Instrument Works Pty Ltd | Platform for Portable Sensing Applications |
US20140270494A1 (en) * | 2013-03-15 | 2014-09-18 | Sri International | Computer vision as a service |
US20140348420A1 (en) * | 2013-05-24 | 2014-11-27 | Tata Consultancy Services Limited | Method and system for automatic selection of one or more image processing algorithm |
US20150224648A1 (en) * | 2014-02-13 | 2015-08-13 | GM Global Technology Operations LLC | Robotic system with 3d box location functionality |
US9486922B2 (en) * | 2012-02-07 | 2016-11-08 | X Development Llc | Systems and methods for determining a status of a component of a device |
CN106737751A (en) * | 2017-01-15 | 2017-05-31 | 禾思凯尔智能科技（东莞）有限公司 | A kind of service robot grasp system and its control method based on cloud information bank |
US20180224825A1 (en) * | 2017-02-08 | 2018-08-09 | Omron Corporation | Image processing system, image processing device, method of reconfiguring circuit in fpga, and program for reconfiguring circuit in fpga |
US10098204B1 (en) * | 2018-03-13 | 2018-10-09 | Cisco Technology, Inc. | System to determine the placement of smart light emitters |
US10163002B2 (en) * | 2015-09-29 | 2018-12-25 | Cloud Network Technology Singapore Pte. Ltd. | Pedestrian detection system and method |
US20190065904A1 (en) * | 2016-01-25 | 2019-02-28 | Koninklijke Philips N.V. | Image data pre-processing |
US10453165B1 (en) * | 2017-02-27 | 2019-10-22 | Amazon Technologies, Inc. | Computer vision machine learning model execution service |
CN110502719A (en) * | 2019-08-06 | 2019-11-26 | 上海展湾信息科技有限公司 | Edge calculations model management system and method |
CN110587608A (en) * | 2019-09-19 | 2019-12-20 | 唐山智无忧机器人科技有限公司 | Robot vision system and processing method thereof |
CN110744545A (en) * | 2019-11-01 | 2020-02-04 | 北京云迹科技有限公司 | Method and device for controlling robot, storage medium and electronic equipment |
US20200202476A1 (en) * | 2018-12-20 | 2020-06-25 | Here Global B.V. | Single component data processing system and method utilizing a trained neural network |
US10723027B2 (en) * | 2017-09-26 | 2020-07-28 | Toyota Research Institute, Inc. | Robot systems incorporating cloud services systems |
US10733004B2 (en) * | 2017-04-26 | 2020-08-04 | At&T Intellectual Property I, L.P. | Intelligent service on-demand robot virtualization |
WO2020117357A3 (en) * | 2018-10-01 | 2020-08-20 | EmergeX, LLC | Methods and systems for navigating autonomous and semi-autonomous vehicles |
CN111723598A (en) * | 2019-03-18 | 2020-09-29 | 北京邦天信息技术有限公司 | Machine vision system and implementation method thereof |
US20210035056A1 (en) * | 2016-09-26 | 2021-02-04 | Cybernet Systems Corp. | Automated warehousing using robotic forklifts or other material handling vehicles |
US20210049541A1 (en) * | 2019-08-12 | 2021-02-18 | Walmart Apollo, Llc | Systems, devices, and methods for scanning a shopping space |
CN113079389A (en) * | 2021-03-23 | 2021-07-06 | 国网江苏省电力有限公司信息通信分公司 | Resource self-adaptive adjusting method in edge computing environment |
US20220203547A1 (en) * | 2020-12-31 | 2022-06-30 | Plus One Robotics, Inc. | System and method for improving automated robotic picking via pick planning and interventional assistance |
WO2023200396A1 (en) * | 2022-04-13 | 2023-10-19 | Simpple Pte Ltd | System and method for facilitating cleaning area |
Citations (13)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5835627A (en) * | 1995-05-15 | 1998-11-10 | Higgins; Eric W. | System and method for automatically optimizing image quality and processing time |
US6301396B1 (en) | 1996-11-21 | 2001-10-09 | Cognex Corporation | Nonfeedback-based machine vision methods for determining a calibration relationship between a camera and a moveable object |
US20020181786A1 (en) * | 1998-06-08 | 2002-12-05 | Stark Lawrence W. | Intelligent systems and methods for processing image data based upon anticipated regions of visual interest |
US20040102682A1 (en) * | 2002-11-26 | 2004-05-27 | Gudrun Zahlmann | Method and system for supporting the evaluation of a picture of an eye |
US20060182361A1 (en) * | 2005-02-17 | 2006-08-17 | Eastman Kodak Company | Selection of alternative image processing operations to maintain high image quality |
US20070076934A1 (en) * | 2005-10-05 | 2007-04-05 | Arun Krishnan | Automatic CAD algorithm selection |
US20070133851A1 (en) * | 2005-12-12 | 2007-06-14 | General Electric Company | Method and apparatus for selecting computer-assisted algorithms based on protocol and/or parameters of an acquisistion system |
US20070206228A1 (en) * | 2006-03-01 | 2007-09-06 | Ricoh Company, Ltd. | Method and apparatus for processing image, and computer program product |
US20070233321A1 (en) * | 2006-03-29 | 2007-10-04 | Kabushiki Kaisha Toshiba | Position detecting device, autonomous mobile device, method, and computer program product |
US7656425B2 (en) | 2006-03-31 | 2010-02-02 | Mitutoyo Corporation | Robust field of view distortion calibration |
US7957583B2 (en) | 2007-08-02 | 2011-06-07 | Roboticvisiontech Llc | System and method of three-dimensional pose estimation |
US20120032960A1 (en) * | 2009-04-20 | 2012-02-09 | Fujifilm Corporation | Image processing apparatus, image processing method, and computer readable medium |
US20120197464A1 (en) * | 2011-01-28 | 2012-08-02 | Intouch Health | Interfacing with a mobile telepresence robot |
-
2012
- 2012-08-31 US US13/601,319 patent/US8965104B1/en active Active
Patent Citations (13)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5835627A (en) * | 1995-05-15 | 1998-11-10 | Higgins; Eric W. | System and method for automatically optimizing image quality and processing time |
US6301396B1 (en) | 1996-11-21 | 2001-10-09 | Cognex Corporation | Nonfeedback-based machine vision methods for determining a calibration relationship between a camera and a moveable object |
US20020181786A1 (en) * | 1998-06-08 | 2002-12-05 | Stark Lawrence W. | Intelligent systems and methods for processing image data based upon anticipated regions of visual interest |
US20040102682A1 (en) * | 2002-11-26 | 2004-05-27 | Gudrun Zahlmann | Method and system for supporting the evaluation of a picture of an eye |
US20060182361A1 (en) * | 2005-02-17 | 2006-08-17 | Eastman Kodak Company | Selection of alternative image processing operations to maintain high image quality |
US20070076934A1 (en) * | 2005-10-05 | 2007-04-05 | Arun Krishnan | Automatic CAD algorithm selection |
US20070133851A1 (en) * | 2005-12-12 | 2007-06-14 | General Electric Company | Method and apparatus for selecting computer-assisted algorithms based on protocol and/or parameters of an acquisistion system |
US20070206228A1 (en) * | 2006-03-01 | 2007-09-06 | Ricoh Company, Ltd. | Method and apparatus for processing image, and computer program product |
US20070233321A1 (en) * | 2006-03-29 | 2007-10-04 | Kabushiki Kaisha Toshiba | Position detecting device, autonomous mobile device, method, and computer program product |
US7656425B2 (en) | 2006-03-31 | 2010-02-02 | Mitutoyo Corporation | Robust field of view distortion calibration |
US7957583B2 (en) | 2007-08-02 | 2011-06-07 | Roboticvisiontech Llc | System and method of three-dimensional pose estimation |
US20120032960A1 (en) * | 2009-04-20 | 2012-02-09 | Fujifilm Corporation | Image processing apparatus, image processing method, and computer readable medium |
US20120197464A1 (en) * | 2011-01-28 | 2012-08-02 | Intouch Health | Interfacing with a mobile telepresence robot |
Non-Patent Citations (2)
Title |
---|
Bistry et al. "A Cloud Computing Approach to Complex Robot Vision Tasks Using Smart Camera Systems." IEEE/RSJ International Conference on Intelligent Robots and Systems, Oct. 18, 2010, pp. 3195-3200. * |
Guizzo. "Robots with Their Heads in the Clouds." IEEE Spectrum, Mar. 2011, pp. 16-17. * |
Cited By (41)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9486922B2 (en) * | 2012-02-07 | 2016-11-08 | X Development Llc | Systems and methods for determining a status of a component of a device |
US9098913B2 (en) * | 2012-05-11 | 2015-08-04 | Cornell University | Prediction of successful grasps by end of arm tooling |
US20140016856A1 (en) * | 2012-05-11 | 2014-01-16 | Cornell University | Prediction of successful grasps by end of arm tooling |
US20140200840A1 (en) * | 2012-12-19 | 2014-07-17 | Instrument Works Pty Ltd | Platform for Portable Sensing Applications |
US20170091590A1 (en) * | 2013-03-15 | 2017-03-30 | Sri International | Computer vision as a service |
US9152870B2 (en) * | 2013-03-15 | 2015-10-06 | Sri International | Computer vision as a service |
US20160004936A1 (en) * | 2013-03-15 | 2016-01-07 | Sri International | Computer vision as a service |
US9466013B2 (en) * | 2013-03-15 | 2016-10-11 | Sri International | Computer vision as a service |
US20140270494A1 (en) * | 2013-03-15 | 2014-09-18 | Sri International | Computer vision as a service |
US9275307B2 (en) * | 2013-05-24 | 2016-03-01 | Tata Consultancy Services Limited | Method and system for automatic selection of one or more image processing algorithm |
US20140348420A1 (en) * | 2013-05-24 | 2014-11-27 | Tata Consultancy Services Limited | Method and system for automatic selection of one or more image processing algorithm |
US20150224648A1 (en) * | 2014-02-13 | 2015-08-13 | GM Global Technology Operations LLC | Robotic system with 3d box location functionality |
US9233469B2 (en) * | 2014-02-13 | 2016-01-12 | GM Global Technology Operations LLC | Robotic system with 3D box location functionality |
US10163002B2 (en) * | 2015-09-29 | 2018-12-25 | Cloud Network Technology Singapore Pte. Ltd. | Pedestrian detection system and method |
US10769498B2 (en) * | 2016-01-25 | 2020-09-08 | Koninklijke Philips N.V. | Image data pre-processing |
US20190065904A1 (en) * | 2016-01-25 | 2019-02-28 | Koninklijke Philips N.V. | Image data pre-processing |
US20210035056A1 (en) * | 2016-09-26 | 2021-02-04 | Cybernet Systems Corp. | Automated warehousing using robotic forklifts or other material handling vehicles |
US11727349B2 (en) * | 2016-09-26 | 2023-08-15 | Cybernet Systems Corp. | Automated warehousing using robotic forklifts or other material handling vehicles |
US11961041B2 (en) * | 2016-09-26 | 2024-04-16 | Cybernet Systems Corporation | Automated warehousing using robotic forklifts or other material handling vehicles |
US20210049543A1 (en) * | 2016-09-26 | 2021-02-18 | Cybernet Systems Corp. | Automated warehousing using robotic forklifts or other material handling vehicles |
CN106737751A (en) * | 2017-01-15 | 2017-05-31 | 禾思凯尔智能科技（东莞）有限公司 | A kind of service robot grasp system and its control method based on cloud information bank |
US20180224825A1 (en) * | 2017-02-08 | 2018-08-09 | Omron Corporation | Image processing system, image processing device, method of reconfiguring circuit in fpga, and program for reconfiguring circuit in fpga |
US10474124B2 (en) * | 2017-02-08 | 2019-11-12 | Omron Corporation | Image processing system, image processing device, method of reconfiguring circuit in FPGA, and program for reconfiguring circuit in FPGA |
US10453165B1 (en) * | 2017-02-27 | 2019-10-22 | Amazon Technologies, Inc. | Computer vision machine learning model execution service |
US10733004B2 (en) * | 2017-04-26 | 2020-08-04 | At&T Intellectual Property I, L.P. | Intelligent service on-demand robot virtualization |
US10723027B2 (en) * | 2017-09-26 | 2020-07-28 | Toyota Research Institute, Inc. | Robot systems incorporating cloud services systems |
US10433400B1 (en) | 2018-03-13 | 2019-10-01 | Cisco Technology, Inc. | System to determine the placement of smart light emitters |
US10098204B1 (en) * | 2018-03-13 | 2018-10-09 | Cisco Technology, Inc. | System to determine the placement of smart light emitters |
WO2020117357A3 (en) * | 2018-10-01 | 2020-08-20 | EmergeX, LLC | Methods and systems for navigating autonomous and semi-autonomous vehicles |
US11300965B2 (en) | 2018-10-01 | 2022-04-12 | EmergeX, LLC | Methods and systems for navigating autonomous and semi-autonomous vehicles |
US11853812B2 (en) * | 2018-12-20 | 2023-12-26 | Here Global B.V. | Single component data processing system and method utilizing a trained neural network |
US20200202476A1 (en) * | 2018-12-20 | 2020-06-25 | Here Global B.V. | Single component data processing system and method utilizing a trained neural network |
CN111723598A (en) * | 2019-03-18 | 2020-09-29 | 北京邦天信息技术有限公司 | Machine vision system and implementation method thereof |
CN110502719A (en) * | 2019-08-06 | 2019-11-26 | 上海展湾信息科技有限公司 | Edge calculations model management system and method |
US20210049541A1 (en) * | 2019-08-12 | 2021-02-18 | Walmart Apollo, Llc | Systems, devices, and methods for scanning a shopping space |
US11915192B2 (en) * | 2019-08-12 | 2024-02-27 | Walmart Apollo, Llc | Systems, devices, and methods for scanning a shopping space |
CN110587608A (en) * | 2019-09-19 | 2019-12-20 | 唐山智无忧机器人科技有限公司 | Robot vision system and processing method thereof |
CN110744545A (en) * | 2019-11-01 | 2020-02-04 | 北京云迹科技有限公司 | Method and device for controlling robot, storage medium and electronic equipment |
US20220203547A1 (en) * | 2020-12-31 | 2022-06-30 | Plus One Robotics, Inc. | System and method for improving automated robotic picking via pick planning and interventional assistance |
CN113079389A (en) * | 2021-03-23 | 2021-07-06 | 国网江苏省电力有限公司信息通信分公司 | Resource self-adaptive adjusting method in edge computing environment |
WO2023200396A1 (en) * | 2022-04-13 | 2023-10-19 | Simpple Pte Ltd | System and method for facilitating cleaning area |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US8965104B1 (en) | Machine vision calibration with cloud computing systems | |
JP6749480B2 (en) | System, method and non-transitory computer readable storage medium for parking a vehicle | |
US10507577B2 (en) | Methods and systems for generating instructions for a robotic system to carry out a task | |
US8447863B1 (en) | Systems and methods for object recognition | |
US8428777B1 (en) | Methods and systems for distributing tasks among robotic devices | |
US9895802B1 (en) | Projection of interactive map data | |
JP6440745B2 (en) | Method and system for augmented reality displaying a virtual representation of the action of a robotic device | |
JP7072640B2 (en) | Methods, systems, and equipment to improve convolution efficiency | |
JP7090751B2 (en) | Systems and methods to control vehicle movement | |
US9399290B2 (en) | Enhancing sensor data by coordinating and/or correlating data attributes | |
US8374421B1 (en) | Methods and systems for extracting still frames from a compressed video | |
US8386078B1 (en) | Methods and systems for providing a data library for robotic devices | |
US8886829B1 (en) | Methods and systems for robot cloud computing using slug trails | |
US9399294B1 (en) | Displaying estimated image data in a user interface | |
US8380349B1 (en) | Methods and systems for providing instructions to a robotic device | |
US20190219973A1 (en) | Determining States and Modifying Environments According to States | |
US10377042B2 (en) | Vision-based robot control system | |
US9751212B1 (en) | Adapting object handover from robot to human using perceptual affordances | |
US9817395B2 (en) | Autonomous navigation of people using a robot network | |
US20170102699A1 (en) | Drone control through imagery | |
US8947522B1 (en) | Systems and methods to adjust actions based on latency levels | |
US11062474B2 (en) | System and method for optical tracking | |
CN104406601A (en) | Navigation method, sending terminal and reception terminal | |
CN114199243A (en) | Pose estimation and motion planning method and device for robot and robot |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:HICKMAN, RYAN M.;BRUCE, JAMES R.;REEL/FRAME:034058/0320Effective date: 20120816 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
AS | Assignment |
Owner name: X DEVELOPMENT LLC, CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:GOOGLE INC.;REEL/FRAME:039900/0610Effective date: 20160901 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044142/0357Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 4 |
|
AS | Assignment |
Owner name: X DEVELOPMENT LLC, CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:GOOGLE INC.;REEL/FRAME:047631/0671Effective date: 20160901 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CORRECTIVE ASSIGNMENT TO CORRECT THE CORRECTIVE BY NULLIFICATIONTO CORRECT INCORRECTLY RECORDED APPLICATION NUMBERS PREVIOUSLY RECORDED ON REEL 044142 FRAME 0357. ASSIGNOR(S) HEREBY CONFIRMS THE CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:047837/0678Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 8TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1552); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 8 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:X DEVELOPMENT LLC;REEL/FRAME:064658/0001Effective date: 20230401 |
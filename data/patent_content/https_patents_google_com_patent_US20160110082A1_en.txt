US20160110082A1 - Arbitrary size content item generation - Google Patents
Arbitrary size content item generation Download PDFInfo
- Publication number
- US20160110082A1 US20160110082A1 US14/730,865 US201514730865A US2016110082A1 US 20160110082 A1 US20160110082 A1 US 20160110082A1 US 201514730865 A US201514730865 A US 201514730865A US 2016110082 A1 US2016110082 A1 US 2016110082A1
- Authority
- US
- United States
- Prior art keywords
- content item
- data
- elements
- content
- template
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Abandoned
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/01—Input arrangements or combined input and output arrangements for interaction between user and computer
- G06F3/048—Interaction techniques based on graphical user interfaces [GUI]
- G06F3/0484—Interaction techniques based on graphical user interfaces [GUI] for the control of specific functions or operations, e.g. selecting or manipulating an object, an image or a displayed text element, setting a parameter value or selecting a range
- G06F3/04847—Interaction techniques to control parameter settings, e.g. interaction with sliders or dials
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/10—Text processing
- G06F40/103—Formatting, i.e. changing of presentation of documents
- G06F40/106—Display of layout of documents; Previewing
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/958—Organisation or management of web site content, e.g. publishing, maintaining pages or automatic linking
- G06F16/972—Access to data in other repository systems, e.g. legacy data or dynamic Web page generation
-
- G06F17/2247—
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/01—Input arrangements or combined input and output arrangements for interaction between user and computer
- G06F3/048—Interaction techniques based on graphical user interfaces [GUI]
- G06F3/0481—Interaction techniques based on graphical user interfaces [GUI] based on specific properties of the displayed interaction object or a metaphor-based environment, e.g. interaction with desktop elements like windows or icons, or assisted by a cursor's changing behaviour or appearance
- G06F3/0482—Interaction with lists of selectable items, e.g. menus
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/10—Text processing
- G06F40/12—Use of codes for handling textual entities
- G06F40/14—Tree-structured documents
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/10—Text processing
- G06F40/12—Use of codes for handling textual entities
- G06F40/14—Tree-structured documents
- G06F40/143—Markup, e.g. Standard Generalized Markup Language [SGML] or Document Type Definition [DTD]
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/10—Text processing
- G06F40/166—Editing, e.g. inserting or deleting
- G06F40/186—Templates
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q30/00—Commerce
- G06Q30/02—Marketing; Price estimation or determination; Fundraising
- G06Q30/0241—Advertisements
- G06Q30/0273—Determination of fees for advertising
- G06Q30/0275—Auctions
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q30/00—Commerce
- G06Q30/02—Marketing; Price estimation or determination; Fundraising
- G06Q30/0241—Advertisements
- G06Q30/0276—Advertisement creation
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/40—Client devices specifically adapted for the reception of or interaction with content, e.g. set-top-box [STB]; Operations thereof
- H04N21/47—End-user applications
- H04N21/472—End-user interface for requesting content, additional data or services; End-user interface for interacting with content, e.g. for content reservation or setting reminders, for requesting event notification, for manipulating displayed content
Definitions
- first-party content providers can provide information for public presentation on resources, for instance webpages, documents, applications, and/or other resources.
- the first-party content can include text, video, and/or audio information provided by the first-party content providers via, for instance, a resource server for presentation on a client device over the Internet.
- the first-party content may be a webpage requested by the client device or a stand-alone application (e.g., a video game, a chat program, etc.) running on the client device.
- Additional third-party content can also be provided by third-party content providers for presentation on the client device together with the first-party content provided by the first-party content providers.
- the third-party content may be a public service announcement or advertisement that appears in conjunction with a requested resource, such as a webpage (e.g., a search result webpage from a search engine, a webpage that includes an online article, a webpage of a social networking service, etc.) or with an application (e.g., an advertisement within a game).
- a person viewing a resource can access the first-party content that is the subject of the resource as well as the third-party content that may or may not be related to the subject matter of the resource.
- Implementations described herein relate to systems and methods to generate arbitrary sized content items automatically using a given URL and width and height constraints.
- the system can receive a content item template having a set of elements for creating a content item and content item data for the set of elements. Placeholders for each element can be generated and space allocations for the elements can be determined. Once space is allocated for the elements, a determination of whether a conflict exists based on the space allocations for each element and, if no conflict exists, a content item may be generated using the content item data and the determined space allocations.
- the system will pre-render or generate layout information, such as the space allocations, offline using a real browser for select common content item sizes for an arbitrary sized content item template and will store the layout information.
- layout information such as the space allocations
- the system retrieves the layout information and the assets for the content item to be rendered.
- the system transmits to the client device the layout information and asset information in an HTML file along with a JavaScript file to assemble the content item at the client device.
- the JavaScript file detects whether layout information is included in the HTML file and, if so, uses the pre-generated layout information in rendering the content item at the client device. If no layout information is included in the HTML file with the asset information, then the JavaScript file will determine the layout at the client device.
- Content item components can also be implemented to define one or more types of content item template elements and can include attributes for each type of element, such as name, type, priority and weight.
- the content item template may then include several layout variations, where each layout variation has one or more elements that invoke a defined content item component, and each element defines how it is related to other elements and how to arrange the component inside the element.
- the layout variations can be combined into one configuration file, and then the configuration file and layout engine JavaScript can be linked into same HTML file.
- the content item generation system may utilize smart asset selection to select assets, such as the content item data for the set of elements of a content item template, and/or to eliminate elements from the to-be generated content item based on contextual data of the client device (e.g., eliminating images from the final rendered ad if a mobile client device has a poor or low bandwidth connection (such as 2 G versus a better or higher bandwidth connection of WiFi) or using image assets having similar aspect ratios to the content item slot size).
- assets such as the content item data for the set of elements of a content item template
- the content item generation system may utilize smart asset selection to select assets, such as the content item data for the set of elements of a content item template, and/or to eliminate elements from the to-be generated content item based on contextual data of the client device (e.g., eliminating images from the final rendered ad if a mobile client device has a poor or low bandwidth connection (such as 2 G versus a better or higher bandwidth connection of WiFi) or using image assets having similar aspect ratios to the
- the system includes one or more processors and one or more storage devices that include instructions that cause the one or more processors to perform several operations.
- the operations include receiving a template having a set of elements for creating a content item and content item data for the set of elements, the content item data for the set of elements including an asset selected based on contextual data received from a client device.
- the operations also include generating a placeholder for each element of the set of elements of the template and determining a space allocation for each element of the set of elements based, at least in part, on the generated placeholders for each element of the set of elements.
- the operations further include determining if a conflict exists based on the determined space allocations for each element of the set of elements and generating a content item using the content item data for the set of elements and the determined space allocations responsive to determining no conflict exists.
- the method includes receiving a landing page URL, a first dimensional value, and a second dimensional value.
- the method also includes receiving a content item template having a set of elements for creating a content item and generating a placeholder for each element of the set of elements of the content item template based, at least in part, on the first dimensional value and the second dimensional value.
- the method further includes determining a space allocation for each element of the set of elements based, at least in part, on the generated placeholders for each element of the set of elements and determining if a conflict exists based on the determined space allocations for each element of the set of elements.
- the method still further includes storing, in a database, layout data associated with the first dimensional value and the second dimensional value for the content item template based on the determined space allocations and responsive to determining no conflict exists.
- the operations may include receiving a request for a content item from a client device that includes a first dimensional value for a content item slot, a second dimensional value for the content item slot, and contextual data.
- the operations also include determining a landing page URL for a content item to be served responsive to the request from the client device and determining content item data for the content item based on the landing page URL and the received contextual data.
- the operations further include outputting a content item template, the determined content item data, and a script to generate the content item from the content item template and the determined content item data by the client device.
- FIG. 1 is an overview depicting an implementation of a system of providing information via a computer network
- FIG. 2 is a block diagram depicting an implementation of a content item generation system in greater detail and having a layout generator and a scorer;
- FIG. 3 is a block diagram depicting an implementation of the layout generator of FIG. 2 in greater detail having a layout parser, an anchor manager, one or more element renderers, a space manager, and a conflict resolver;
- FIG. 4 is a block process diagram depicting an implementation of a process flow for the layout generator and scorer of FIG. 2 ;
- FIG. 5 is a block diagram depicting an implementation of the layout parser of FIGS. 3-4 ;
- FIG. 6 is a block diagram depicting an implementation of the anchor manager of FIGS. 3-4 ;
- FIG. 7 is a block diagram depicting an implementation of the one or more element renderers of FIGS. 3-4 ;
- FIG. 8 is a block diagram depicting an implementation of the space manager of FIGS. 3-4 having a growth module
- FIG. 9A is a diagram depicting an implementation of a content item having an initial minimum space allocation for an image element and an initial minimum space allocation for a text element;
- FIG. 9B is a diagram of the content item of FIG. 9A with a final space allocation for the image element and a final space allocation for the text element after applying a growth function of the growth module the space manager of FIG. 8 ;
- FIG. 10 is a block diagram depicting an implementation of the conflict resolver of FIGS. 3-4 ;
- FIG. 11 is a process diagram depicting an implementation of a process for creating a configuration file for a content item template for the content item generation system of FIG. 2
- FIG. 12 is a process diagram depicting an implementation of a process for generating a content item
- FIG. 13 is a process diagram depicting an implementation of a process for serving a script to a client device for having the client device generate display data for a content item;
- FIG. 14 is a block diagram depicting an implementation of a landing page resource associated with a landing page URL
- FIG. 15A is a block diagram depicting an implementation of a first generated content item generated based on contextual data
- FIG. 15B is a block diagram depicting an implementation of a second generated content item generated based on other contextual data
- FIG. 16A is a block diagram depicting an implementation of a generated content item having third arbitrary dimensions and using a second content item template
- FIG. 16B is a block diagram depicting an implementation of another generated content item having fourth arbitrary dimensions and using the second content item template.
- FIG. 17 is a block diagram depicting a general architecture for a computer system that may be employed to implement various elements of the systems and methods described and illustrated herein.
- a computing device can view a resource, such as a webpage, a document, an application, etc.
- the computing device may access the resource via the Internet by communicating with a server, such as a webpage server, corresponding to that resource.
- the resource includes first-party content that is the subject of the resource from a first-party content provider and may also include additional third-party provided content, such as advertisements or other content.
- a webpage server and/or a client device can communicate with a data processing system, such as a content item selection system, to request a content item to be presented with the requested webpage, such as through the execution of code of the resource to request a third-party content item to be presented with the resource.
- the content item selection system can select a third-party content item and provide data to effect presentation of the content item with the requested webpage on a display of the client device.
- the content item is selected and served with a resource associated with a search query response.
- a search engine may return search results on a search results webpage and may include third-party content items related to the search query in one or more content item slots of the search results webpage.
- the computing device may also be used to view or execute an application, such as a mobile application.
- the application may include first-party content that is the subject of the application from a first-party content provider and may also include additional third-party provided content, such as advertisements or other content.
- a resource server and/or a client device can communicate with a data processing system, such as a content item selection system, to request a content item to be presented with a user interface of the application and/or otherwise.
- the content item selection system can select a third-party content item and provide data to effect presentation of the content item with the application on a display of the client device.
- a device identifier may be associated with the client device.
- the device identifier may be a randomized number associated with the client device to identify the device during subsequent requests for resources and/or content items.
- the device identifier may be configured to store and/or cause the client device to transmit information related to the client device to the content item selection system and/or resource server (e.g., values of sensor data, a web browser type, an operating system, historical resource requests, historical content item requests, etc.).
- the users may be provided with an opportunity to control whether programs or features collect user information (e.g., information about a user's social network, social actions or activities, profession, a user's preferences, or a user's current location), or to control whether and/or how to receive content from the content server that may be more relevant to the user.
- user information e.g., information about a user's social network, social actions or activities, profession, a user's preferences, or a user's current location
- certain data may be treated in one or more ways before it is stored or used, so that personally identifiable information is removed.
- a user's identity may be treated so that no personally identifiable information can be determined for the user, or a user's geographic location may be generalized where location information is obtained (such as to a city, ZIP code, or state level), so that a particular location of a user cannot be determined.
- location information such as to a city, ZIP code, or state level
- the user may have control over how information is collected about the user and used by a content server.
- a third-party content provider when providing third-party content items for presentation with requested resources via the Internet or other network, may utilize a content item management service to control or otherwise influence the selection and serving of the third-party content items.
- a third-party content provider may specify selection criteria (such as keywords) and corresponding bid values that are used in the selection of the third-party content items.
- the bid values may be utilized by the content item selection system in an auction to select and serve content items for presentation with a resource.
- a third-party content provider may place a bid in the auction that corresponds to an agreement to pay a certain amount of money if a user interacts with the provider's content item (e.g., the provider agrees to pay $3 if a user clicks on the provider's content item).
- a third-party content provider may place a bid in the auction that corresponds to an agreement to pay a certain amount of money if the content item is selected and served (e.g., the provider agrees to pay $0.005 each time a content item is selected and served or the provider agrees to pay $0.05 each time a content item is selected or clicked).
- the content item selection system uses content item interaction data to determine the performance of the third-party content provider's content items. For instance, users may be more inclined to click on third-party content items on certain webpages over others. Accordingly, auction bids to place the third-party content items may be higher for high-performing webpages, categories of webpages, and/or other criteria, while the bids may be lower for low-performing webpages, categories of webpages, and/or other criteria.
- one or more performance metrics for the third-party content items may be determined and indications of such performance metrics may be provided to the third-party content provider via a user interface for the content item management account.
- the performance metrics may include a cost per impression (CPI) or cost per thousand impressions (CPM), where an impression may be counted, for instance, whenever a content item is selected to be served for presentation with a resource.
- the performance metric may include a click-through rate (CTR), defined as the number of clicks on the content item divided by the number of impressions.
- CTR click-through rate
- CPA cost per action
- CVR conversion rate
- CPC cost per click-through
- CPS cost per sale
- CPL cost per lead
- eCPM effective CPM
- a webpage or other resource (such as, for instance, an application) includes one or more content item slots in which a selected and served third-party content item may be displayed.
- the code e.g., JavaScript®, HTML, etc.
- defining a content item slot for a webpage or other resource may include instructions to request a third-party content item from the content item selection system to be presented with the webpage.
- the selection of a third-party content item to be served with the resource by a content item selection system may be based on several influencing factors, such as a predicted click through rate (pCTR), a predicted conversion rate (pCVR), a bid associated with the content item, etc.
- influencing factors may be used to generate a value, such as a score, against which other scores for other content items may be compared by the content item selection system through an auction.
- an auction may include bids based on whether a user clicks on the third-party content item, whether a user performs a specific action based on the presentation of the third-party content item, whether the third-party content item is selected and served, and/or other types of bids. For instance, a bid based on whether the third-party content item is selected and served may be a lower bid (e.g., $0.005) while a bid based on whether a user performs a specific action may be a higher bid (e.g., $5).
- the bid may be adjusted to account for a probability associated with the type of bid and/or adjusted for other reasons. For instance, the probability of the user performing the specific action may be low, such as 0.2%, while the probability of the selected and served third-party content item may be 100% (e.g., the selected and served content item will occur if it is selected during the auction, so the bid is unadjusted). Accordingly, a value, such as a score or a normalized value, may be generated to be used in the auction based on the bid value and the probability or another modifying value.
- the content item selection system may select the third-party content item with the highest value from the auction.
- the content item selection system may select the content item associated with the bid based on whether the user performs the specific action due to the higher value or score associated with that bid.
- data to effect presentation of the third-party content item on a display of the client device may be provided to the client device using a network.
- a content item such as an advertisement
- the content item may be generated on-demand, such as responsive to a request for a content item, or the content item may be generated and data for the content item may be stored in a database or presented in a user interface to a third-party content provider generating content items.
- the landing page URL, first dimensional value, and/or second dimensional value may be received from a client device, a first-party content provider, or a third-party content provider.
- the first dimensional value and second dimensional value may be received from a client device in response to the client device requesting a resource of the first-party content provider having a content item slot.
- the client device may receive data for the first-party resource and transmit a request for a content item, such as an advertisement, including the first dimensional value and second dimensional value to a content item selection system.
- the content item selection system may select a third-party content provider and a content item generation system or content item generation script may be used to generate a content item using a landing page URL of the third-party content provider, the first dimensional value, and the second dimensional value.
- the content item selection system may output layout data to display a pre-generated content item with the resource of the first-party content provider.
- the content item selection system may output a content item generation script with content item data for the script to generate the content item at the client device.
- the first dimensional value and second dimensional value may be received from the first-party content provider in response to a client device requesting a resource of the first-party content provider having a content item slot.
- the landing page URL, first dimensional value, and second dimensional value may be received from a third-party content provider independent of a client device requesting a resource.
- a third-party content provider may utilize a content item generation system or content item generation script to generate content items of different sizes to be stored in a database and served responsive to subsequent content item requests from a client devices or first-party content providers.
- the content item data determined from the landing page URL may be determined using a resource renderer capable of interpreting a resource associated with the landing page URL and creating a visual representation (e.g., an image, a display, etc.) thereof.
- the resource of the landing page URL may include marked-up content (e.g., HTML, XML, image URLs, etc.) as well as formatting information (e.g., CSS, XSL, etc.).
- the resource renderer may download the marked-up content and formatting information and render the resource associated with the landing page URL according to World Wide Web Consortium (W3C) standards.
- W3C World Wide Web Consortium
- the resource renderer may thus create a “snapshot image” of the resource associated with the landing page URL and/or construct a document object model (DOM) tree representing the various components of the resource associated with the landing page URL.
- DOM document object model
- the content item data may include image data, color data, text data, logo data, etc.
- an image module may parse the DOM tree of the resource associated with the landing page URL to identify and extract images and image metadata (e.g., image URL, display position, display size, alt text, etc.) for the image data.
- image metadata e.g., image URL, display position, display size, alt text, etc.
- a color module may use the snapshot image and/or DOM tree of the resource associated with the landing page URL to select colors for color data for the content item to be generated.
- a text module may be configured to automatically generate textual data for the content item (e.g., a textual description, a headline, etc.), such as by using the DOM tree or snapshot image of the resource associated with the landing page URL to create a summary of the text displayed on the resource associated with the landing page URL.
- logo data for one or more logos may be extracted using the DOM tree or snapshot image of the resource associated with the landing page URL.
- a logo image may be a trademark, a business logo, a product logo, a company logo, or any other image associated with a particular product, service, or organization.
- the content item data such as image data, color data, text data, logo data, etc., may be retrieved from a database or received from a third-party content provider for the generated content item.
- contextual data may be included with the landing page URL, the first dimensional value, and/or the second dimensional value.
- the contextual data may include device type data, network connection type data, network connection speed data, etc.
- the contextual data may be utilized to select content item data for a generated content item to tailor the generated content item based on the contextual data.
- the contextual data may include data indicative of a WiFi network connection type.
- the selected content data for the content item to be generated may include larger images, high definition video, etc.
- the contextual data may include data indicative of a 2 G network connection type.
- the selected content data for the content item to be generated may instead include smaller images, low definition video, etc.
- the selection of content item data may also be based on the first dimensional value and second dimensional value. For instance, an image for the content item may be selected that has a similar aspect ratio to the content item to be generated.
- the one or more content item templates may be stored in a content item template database and retrieved responsive to a request for one or more content item templates from a content item generation system.
- the content item templates define the elements and arrangement of elements for a content item to be generated from the content item template.
- the one or more content item templates may be a constrained XML configuration file that defines one or more elements of the content item template.
- Each content item template can define one or more content item components for the content item template.
- Each content item component can include attributes, such as a name, a type, a priority, and a weight.
- the name attribute may be a designer-defined name to reference the content item component.
- the type attribute may be a designer-selected content item type, such as a headline, logo, product, description, button, etc., that is associated with a default priority and/or a default weight.
- the priority attribute may be a designer-defined value that may be used to prioritize the removal of elements of the content item template. In some implementations, the lower the value, the higher the priority with a 0 value for elements that cannot be removed from the generated content item.
- the weight attribute may be a designer-defined value that may be used to prioritize the growth of elements of the content item when additional space is available.
- the content item template further includes one or more templates for content items that utilize one or more of the content item components to define one or more elements for a layout for a content item.
- the content item template may include one or more rendering boxes for the elements.
- Each rendering box and/or element includes one or more of the content item components, and at least two anchors defining the arrangement of the element relative to another element and/or relative to the content item itself (e.g., a button element may be defined by a right anchor relative to a right edge of the content item and a bottom anchor relative to a bottom edge of the content item).
- An anchor is used to describe a relationship between two elements of the content item template or between an element and the content item to be generated from the content item template.
- An anchor is defined by a reference (e.g., another element) or a distance (e.g., a fixed distance such as pixels (px) or a relative distance such as 10%) to the content item itself.
- a content item generation system and/or a content item generation script may generate and score content items for each content item template for a given set of dimensions, such as the first dimensional value and the second dimensional value, to maximize space utilization.
- the content item generation system and/or a content item generation script may parse a layout configuration file of a content item template to determine layout element data for one or more elements of the content item template.
- the content item generation system and/or a content item generation script may then determine a placeholder for each element of the one or more elements based on the anchors of the layout element data, the dimensional values for the content item to be generated, and the content item data.
- the content item generation system and/or a content item generation script may utilize one or more element renderers to determine an initial space allocation for each element of the one or more elements based on the placeholder.
- the content item generation system and/or a content item generation script may determine a final space allocation for each element of the one or more elements based on the initial space allocation and modifying any elements by using a growth function to expand the initial space allocation to maximize the space utilization of the content item.
- the content item generation system and/or a content item generation script may then determine if any conflicts exist for the content item based on the determined final space allocations. Such conflicts may include overlap of elements, overflow of an element beyond the dimensions of the content item, insufficient margin, text truncation, and/or other content item template-specific conflicts.
- the content item generation system and/or a content item generation script may eliminate an element from the one or more elements of the content item template and return to determine the placeholders based on the reduced set of elements.
- the element that is removed from the one or more elements may be based on the priority values of the elements (e.g., removing the element with the greatest priority value indicative of the element being lower in importance to the content item template).
- the element determined to be removed may be indicated as a required element based on the layout element data.
- the content item generation system and/or a content item generation script may select a new content item template, parse the template, and proceed to generate a content item using the new template.
- the content item generation system and/or a content item generation script may halt generation of the content item and output an error (e.g., if no other content item templates may be used).
- the content item generation system and/or content item generation script may determine a score for the content item, in some implementations.
- the score for the content item may be based on the number of elements in the generated content item compared to the number of elements of the content item template, the number of unused pixels, an average number of unused pixels per vertical or horizontal line, weightings for one or more elements, etc.
- the content item generation system and/or content item generation script may generate several content items, each having an associated score, and the content item generation system may rank the scores and select the highest-scoring generated content item.
- data to display the selected highest-scoring generated content item may be outputted from the content item generation system to a client device to display the generated content item with a first-party content provider resource.
- the data to display the content item may be utilized by the content item generation script to display the generated content item on a display of the client device.
- layout data and/or data to display the highest-scoring generated content item may be stored in a database to be output at a later time.
- layout data may be generated for a predetermined set of content item slot dimensions, such as common content item slot dimensions of 300 pixels (px) by 250 px, 336 px by 280 px, 970 px by 100 px, 160 px by 600 px, 320 px by 50 px, etc.
- the layout data may be generated using a real web browser executing on a computing device, such as a server, for each of the predetermined set of content item slot dimensions.
- the layout data for the one of the predetermined set of content item slot dimensions may be retrieved and transmitted to a client device with the content item data for the content item to be displayed on a display of the client device.
- a script executing on the client device may then generate the display data for displaying the content item on the client device using the layout data and the content item data.
- all or a subset of the generated content items and the associated scores may be stored in a database.
- data for all or a subset of the generated content items and the associated scores may be output to a user interface of a computing device of the third-party content provider for selection.
- the content item generation system may be integrated into a content item generation user interface for a third-party content provider. Responsive to input of a landing page URL and dimensions for a desired content item from the third-party content provider, the content item generation system may output a set of generated content items and associated scores such that the third-party content item provider may select a generated content item, even if the generated content item does not have the highest score.
- FIG. 1 is a block diagram of an implementation of a system 100 for providing information via at least one computer network such as the network 106 .
- the network 106 may include a local area network (LAN), wide area network (WAN), a telephone network, such as the Public Switched Telephone Network (PSTN), a wireless link, an intranet, the Internet, or combinations thereof.
- the system 100 can also include at least one data processing system, such as a content item selection system 108 .
- the content item selection system 108 can include at least one logic device, such as a computing device having a data processor, to communicate via the network 106 , for instance with a resource server 104 , a client device 110 , and/or a third-party content server 102 .
- the content item selection system 108 can include one or more data processors, such as a content placement processor, configured to execute instructions stored in a memory device to perform one or more operations described herein.
- the one or more data processors and the memory device of the content item selection system 108 may form a processing module.
- the processor may include a microprocessor, an application-specific integrated circuit (ASIC), a field-programmable gate array (FPGA), etc., or combinations thereof.
- the memory may include, but is not limited to, electronic, optical, magnetic, or any other storage or transmission device capable of providing processor with program instructions.
- the memory may include a floppy disk, compact disc read-only memory (CD-ROM), digital versatile disc (DVD), magnetic disk, memory chip, read-only memory (ROM), random-access memory (RAM), Electrically Erasable Programmable Read-Only Memory (EEPROM), erasable programmable read only memory (EPROM), flash memory, optical media, or any other suitable memory from which processor can read instructions.
- the instructions may include code from any suitable computer programming language such as, but not limited to, C, C++, C#, Java®, JavaScript®, Perl®, HTML, XML, Python®, and Visual Basic®.
- the processor may process instructions and output data to effect presentation of one or more content items to the resource server 104 and/or the client device 110 .
- the content item selection system 108 may include one or more databases configured to store data.
- the content item selection system 108 may also include an interface configured to receive data via the network 106 and to provide data from the content item selection system 108 to any of the other devices on the network 106 .
- the content item selection system 108 can include a server, such as an advertisement server or otherwise.
- the content item selection system 108 may include a content item generation system 120 .
- the content item generation system 120 may part of the same system as the content item selection system 108 or the content item generation system 120 may be separate from the content item selection system 108 .
- the content item generation system 120 may be a sub-system of the content item selection system 108 or the content item generation system 120 may be a separate system in communication with the content item selection system 108 .
- the content item generation system 120 may be constructed in a similar manner to the content item selection system 108 described herein.
- the content item selection system 108 may be omitted and the content item generation system 120 may be connected to the network 106 to communicate with the third-party content server 102 , resource server 104 , and/or client device 110 .
- the client device 110 can include one or more devices such as a computer, laptop, desktop, smart phone, tablet, personal digital assistant, set-top box for a television set, a smart television, or server device configured to communicate with other devices via the network 106 .
- the device may be any form of electronic device that includes a data processor and a memory.
- the memory may store machine instructions that, when executed by a processor, cause the processor to perform one or more of the operations described herein.
- the memory may also store data to effect presentation of one or more resources, content items, etc. on the computing device.
- the processor may include a microprocessor, an application-specific integrated circuit (ASIC), a field-programmable gate array (FPGA), etc., or combinations thereof.
- the memory may include, but is not limited to, electronic, optical, magnetic, or any other storage or transmission device capable of providing processor with program instructions.
- the memory may include a floppy disk, compact disc read-only memory (CD-ROM), digital versatile disc (DVD), magnetic disk, memory chip, read-only memory (ROM), random-access memory (RAM), Electrically Erasable Programmable Read-Only Memory (EEPROM), erasable programmable read only memory (EPROM), flash memory, optical media, or any other suitable memory from which processor can read instructions.
- the instructions may include code from any suitable computer programming language such as, but not limited to, ActionScript®, C, C++, C#, HTML, Java®, JavaScript®, Perl®, Python®, Visual Basic®, and XML.
- the client device 110 can execute a software application (e.g., a web browser or other application) to retrieve content from other computing devices over network 106 .
- a software application e.g., a web browser or other application
- Such an application may be configured to retrieve first-party content from a resource server 104 .
- an application running on the client device 110 may itself be first-party content (e.g., a game, a media player, etc.).
- the client device 110 may execute a web browser application which provides a browser window on a display of the client device.
- the web browser application that provides the browser window may operate by receiving input of a uniform resource locator (URL), such as a web address, from an input device (e.g., a pointing device, a keyboard, a touch screen, or another form of input device).
- URL uniform resource locator
- one or more processors of the client device executing the instructions from the web browser application may request data from another device connected to the network 106 referred to by the URL address (e.g., a resource server 104 ).
- the other device may then provide web page data and/or other data to the client device 110 , which causes visual indicia to be displayed by the display of the client device 110 .
- the browser window displays the retrieved first-party content, such as web pages from various websites, to facilitate user interaction with the first-party content.
- the resource server 104 can include a computing device, such as a server, configured to host a resource, such as a web page or other resource (e.g., articles, comment threads, music, video, graphics, search results, information feeds, etc.).
- the resource server 104 may be a computer server (e.g., a file transfer protocol (FTP) server, file sharing server, web server, etc.) or a combination of servers (e.g., a data center, a cloud computing platform, etc.).
- the resource server 104 can provide resource data or other content (e.g., text documents, PDF files, and other forms of electronic documents) to the client device 110 .
- the client device 110 can access the resource server 104 via the network 106 to request data to effect presentation of a resource of the resource server 104 .
- One or more third-party content providers may have third-party content servers 102 to directly or indirectly provide data for third-party content items to the content item selection system 108 and/or to other computing devices via network 106 .
- the content items may be in any format that may be presented on a display of a client device 110 , for instance, graphical, text, image, audio, video, etc.
- the content items may also be a combination (hybrid) of the formats.
- the content items may be banner content items, interstitial content items, pop-up content items, rich media content items, hybrid content items, Flash® content items, cross-domain iframe content items, etc.
- the content items may also include embedded information such as hyperlinks, metadata, links, machine-executable instructions, annotations, etc.
- the third-party content servers 102 may be integrated into the content item selection system 108 and/or the data for the third-party content items may be stored in a database of the content item selection system 108 .
- the content item selection system 108 can receive, via the network 106 , a request for a content item to present with a resource.
- the received request may be received from a resource server 104 , a client device 110 , and/or any other computing device.
- the resource server 104 may be owned or ran by a first-party content provider that may include instructions for the content item selection system 108 to provide third-party content items with one or more resources of the first-party content provider on the resource server 104 .
- the resource may include a web page.
- the client device 110 may be a computing device operated by a user (represented by a device identifier), which, when accessing a resource of the resource server 104 , can make a request to the content item selection system 108 for content items to be presented with the resource, for instance.
- the content item request can include requesting device information (e.g., a web browser type, an operating system type, one or more previous resource requests from the requesting device, one or more previous content items received by the requesting device, a language setting for the requesting device, a geographical location of the requesting device, a time of a day at the requesting device, a day of a week at the requesting device, a day of a month at the requesting device, a day of a year at the requesting device, etc.) and resource information (e.g., URL of the requested resource, one or more keywords of the content of the requested resource, text of the content of the resource, a title of the resource, a category of the resource, a type of the resource, etc.).
- the information that the content item selection system 108 receives can include a HyperText Transfer Protocol (HTTP) cookie which contains a device identifier (e.g., a random number) that represents the client device 110 .
- HTTP HyperText Transfer Protocol
- the device information and/or the resource information may be encoded prior to being appended to the content item request URL.
- the requesting device information and/or the resource information may be utilized by the content item selection system 108 to select third-party content items and/or a third-party content provider for a content item to be served with the requested resource and presented on a display of a client device 110 .
- the content item generation system 120 may generate one or more content items responsive to the request for a content item.
- a resource of a resource server 104 may include a search engine feature.
- the search engine feature may receive a search query (e.g., a string of text) via an input feature (an input text box, etc.).
- the search engine may search an index of documents (e.g., other resources, such as web pages, etc.) for relevant search results based on the search query.
- the search results may be transmitted as a second resource to present the relevant search results, such as a search result web page, on a display of a client device 110 .
- the search results may include web page titles, hyperlinks, etc.
- One or more third-party content items may also be presented with the search results in a content item slot of the search result web page.
- the resource server 104 and/or the client device 110 may request one or more content items from the content item selection system 108 to be presented in the content item slot of the search result web page.
- the content item request may include additional information, such as the user device information, the resource information, a quantity of content items, a format for the content items, the search query string, keywords of the search query string, information related to the query (e.g., geographic location information and/or temporal information), etc.
- a delineation may be made between the search results and the third-party content items to avert confusion.
- the content item generation system 120 may be utilized to generate one or more content items independent of a request for a content item (e.g., to pre-generate one or more content items).
- the content item generation system 120 may generate the one or more content items responsive to a request from a third-party content provider, such as via the third-party content server 102 and/or a client device 110 of the third-party content provider.
- the one or more generated content items and/or layout data for the one or more generated content items may be stored in a database to be selected and served responsive to a subsequent content item request.
- the one or more generated content items may be presented in a user interface to the third-party content provider such that the third-party content provider may select one or more of the generated content items to be saved and stored in a database.
- the content item generation system 120 includes a layout generator 200 and a scorer 208 .
- the layout generator 200 is configured to receive content item generation data, one or more content item templates, and content item data to generate one or more content items and/or layout data for one or more content items based on the one or more content item templates.
- a scorer 208 is configured to generate a score for the layouts of the generated one or more content items.
- the content item generation system 120 is configured to rank the layouts of the generated one or more content items based on the score and select the highest-scoring layout.
- the content item generation system 120 may then transmit data to display the highest-scoring layout for the generated content item responsive to the content item generation data from the content item requestor 202 .
- the content item generation system 120 may store data to display the highest-scoring generated content item and/or layout data for the highest-scoring generated content item in a content item database 210 (shown in phantom).
- layout data for each of a predetermined set of content item slot dimensions may be generated and stored in a content item database 210 .
- the predetermined set of content item slot dimensions may be common content item slot dimensions, such as 300 pixels (px) by 250 px, 336 px by 280 px, 970 px by 100 px, 160 px by 600 px, 320 px by 50 px, etc.
- the layout data may be generated using a web browser executing on the content item generation system 120 for each of the predetermined set of content item slot dimensions.
- the layout data for the predetermined set of content item slot dimensions may be retrieved and transmitted to a client device with the content item data for the content item to be displayed on a display of the client device.
- the content item generation system 120 may output data to display the generated one or more content items and the associated score.
- the data to display the generated one or more content items and the associated score may be presented in a user interface of the content item requestor 202 (or a device in communication therewith).
- a user of the device of the content item requestor 202 may select one or more of the generated content items using the user interface to be stored in a database, such as the content item database 210 .
- the generated one or more content items may be HTML content items in some implementations.
- the content item generation data may include a first dimensional value, a second dimensional value, and/or a landing page URL from a content item requestor 202 .
- the content item requestor 202 may be the content item selection system 108 for generating a content item responsive to a content item request.
- the content item requestor 202 may be a third-party content provider generating a content item independent of a content item request.
- the content item generation system may transmit the landing page URL to a landing page analysis system 204 for retrieving content item data for generating content items.
- the landing page analysis system 204 may include a resource renderer capable of interpreting a resource associated with the landing page URL and creating a visual representation (e.g., an image, a display, etc.) thereof.
- the resource of the landing page URL may include marked-up content (e.g., HTML, XML, image URLs, etc.) as well as formatting information (e.g., CSS, XSL, etc.).
- the resource renderer may download the marked-up content and formatting information and render the resource associated with the landing page URL according to World Wide Web Consortium (W3C) standards.
- W3C World Wide Web Consortium
- the resource renderer may thus create a “snapshot image” of the resource associated with the landing page URL and/or construct a document object model (DOM) tree representing the various components of the resource associated with the landing page URL.
- DOM document object model
- the snapshot image may be a visual representation of the resource associated with the landing page URL.
- the snapshot image may illustrate the visual appearance of the resource associated with the landing page URL as presented on a user interface of a client device (e.g., an electronic display screen, a computer monitor, a touch-sensitive display, etc.) after rendering the resource associated with the landing page URL.
- the snapshot image may include color information (e.g., pixel color, brightness, saturation, etc.) and style information (e.g., square corners, rounded edges, modern, rustic, etc.) for the resource associated with the landing page URL.
- the snapshot image may be a picture file having any viable file extension (e.g. jpg, .png, .bmp, etc.).
- the DOM tree may be a hierarchical model of the resource associated with the landing page URL.
- the DOM tree may include image information (e.g., image URLs, display positions, display sizes, alt text, etc.), font information (e.g., font names, sizes, effects, etc.), color information (e.g., RGB color values, hexadecimal color codes, etc.) and text information for the resource associated with the landing page URL.
- the landing page analysis system 204 may store the snapshot image and/or DOM tree in a memory for subsequent use.
- the content item data may include image data, color data, text data, logo data, etc.
- an image module may parse the DOM tree of the resource associated with the landing page URL to identify and extract images and image metadata (e.g., image URL, display position, display size, alt text, etc.) for the image data.
- image metadata may be used to determine an on-page saliency for each image displayed on the resource associated with the landing page URL.
- the image module extracts images and image metadata from other data sources (e.g., a repository of previously-used or approved images, a repository of stock images, etc.).
- the image module may analyze the extracted images to detect the visual content of the images. Detecting visual content may include, for instance, determining a location of a salient object represented in the image, determining a location of text in the image, and/or determining whether the image can be cropped or processed to improve the visual impact of the image. In some implementations, the image module analyzes the extracted images to detect the semantic content of the images. Detecting semantic content may include, for instance, identifying an object depicted in an image or a meaning conveyed by an image. The image module may assign one or more labels or keywords to an image describing the semantic content thereof. The labels and/or keywords can be used to determine a relevancy of the image to a particular third-party content item.
- the image module may process the images to prepare the images for use in a third-party content item.
- the image processing may include cropping the images to emphasize salient objects or to remove text, resizing the images, formatting the images, or otherwise adjusting the images.
- the image module may filter and rank images based on various attributes of the images.
- the image module may determine a quality score and/or on-page salience score for each of the images.
- the quality score for an image may indicate an aesthetic appearance of the image based on various image attributes.
- the salience score may indicate a prominence with which an extracted image is displayed on the resource associated with the landing page URL.
- the image module may discard or filter images that have a display size less than a threshold display size or a quality score less than a threshold quality score.
- the image module of the landing page analysis system 204 ranks the images based on the salience scores associated with the images.
- the image module may select the top ranking image or images for inclusion in the content item data.
- the image module may determine a data size for each image to determine larger data sized images and smaller data sized images.
- a color module of the landing page analysis system 204 may use the snapshot image and/or DOM tree of the resource associated with the landing page URL to select colors for the content item data. For instance, the color module may select colors for the background, headline, description, button background, and/or button text of the content item.
- the color scheme may include one or more colors corresponding to the colors displayed on the resource associated with the landing page URL.
- the color module may extracts several color clusters from the snapshot image using a clustering technique (e.g., k-means clustering).
- a text module may be configured to automatically generate textual data for the content item (e.g., a textual description, a headline, etc.), such as by using the DOM tree or snapshot image of the resource associated with the landing page URL to create a summary of the text displayed on the resource associated with the landing page URL.
- the text module may retrieve textual data from other data sources in addition to or in lieu of the resource associated with the landing page URL.
- text module 216 may receive textual data from user-created reviews of a business, product, or service. The reviews may be retrieved from an Internet resource (e.g., website) on which users are permitted to post or submit comments, reviews, or other text related to a particular business, product, or service.
- the text module may identify and extract a snippet of a review that includes a positive phrase for inclusion in the content item data. In some implementations, the text module may identify a font of the text and include data indicative of the font in the content item data.
- logo data for one or more logos may be extracted using the DOM tree or snapshot image of the resource associated with the landing page URL.
- a logo image may be a trademark, a business logo, a product logo, a company logo, or any other image associated with a particular product, service, or organization.
- the landing page analysis system 204 may query a databases to identify logo images based on the landing page URL and/or a domain name of the landing page URL such that logo information may be readily retrieved by specifying a URL.
- the third-party content provider may transmit content item data to the content item generation system 120 such that the landing page analysis system 204 does not analyze a resource associated with the landing page URL to determine and retrieve content item data.
- the content item generation data may also include contextual data.
- the contextual data may include device type data, network connection type data, network connection speed data, etc.
- the contextual data may be utilized to select content item data for a generated content item to tailor the generated content item based on the contextual data.
- the contextual data may include data indicative of a WiFi network connection type.
- the image module may select or rank larger data size images, high definition video, etc. higher based on the contextual data.
- the contextual data may include data indicative of a 2 G network connection type.
- the image module may select or rank smaller data size images, low definition video, etc. lower based on the contextual data.
- the image module may select or rank images based on the first dimensional value and second dimensional value. For instance, the image module may select or rank an image based on a similarity of an aspect ratio of the first and second dimensional values to an aspect ratio of one or more candidate images.
- the content item generation system 120 receives one or more content item templates from a content item template database 206 .
- the content item generation system 120 may receive one or more content item templates from a designer of content item templates.
- the content item templates define the elements and arrangement of elements for a content item to be generated from the content item template.
- the one or more content item templates may be a constrained XML configuration file that defines one or more elements of the content item template.
- Each content item template can define one or more content item components for the content item template.
- Each content item component can include attributes, such as a name, a type, a priority, and a weight.
- the name attribute may be a designer-defined name to reference the content item component.
- the type attribute may be a designer-selected content item type, such as a headline, logo, product image, description, button, etc., that is associated with a default priority and/or a default weight.
- the priority attribute may be a designer-defined value that may be used to prioritize the removal of elements of the content item template. In some implementations, the lower the value, the higher the priority with a 0 value for elements that cannot be removed from the generated content item.
- the weight attribute may be a designer-defined value that may be used to prioritize the growth of elements of the content item when additional space is available.
- the content item template further includes one or more templates for content items that utilize one or more of the content item components to define one or more elements for a layout for a content item.
- the content item template may include one or more rendering boxes for the elements.
- Each rendering box and/or element includes one or more of the content item components, and at least two anchors defining the arrangement of the element relative to another element and/or relative to the content item itself (e.g., a button element may be defined by a right anchor relative to a right edge of the content item and a bottom anchor relative to a bottom edge of the content item).
- the content item generation system 120 may retrieve all of the content item templates from the content item template database 206 as a set of content item templates. In other implementations, the content item generation system 120 may filter the content item templates of the content item template database 206 for a subset of content item templates. In still other implementations, the content item generation system 120 may retrieve a single content item template, such as in response to a selection of a third-party content provider for a content item slot.
- the content item generation system 120 may use the first dimensional value and the second dimensional value to determine the set of content item templates to generate content items. For instance, if the first dimensional value is 580 pixels (i.e., 580 pixels in width) and the second dimensional value is 100 pixels (i.e., 100 pixels in height), then a content item template having vertically stacked image, text, logo, and button elements may not be suitable for such dimensions given the limited vertical height dimension. Accordingly, the content item generation system 120 may exclude such content item templates from the set of content item templates retrieved from the content item template database 206 .
- the content item templates may be annotated with one or more values indicative of a minimum and/or maximum aspect ratio for a generated content item from the content item template.
- the content item generation system 120 may determine a ratio of the first dimensional value to the second dimensional value and use the determined ratio to filter content item templates for which the determined ratio is below the minimum aspect ratio or above the maximum aspect ratio.
- content item templates may be excluded based on the first dimensional value and second dimensional value.
- the content item templates may be filtered based on the content item data in addition to or in lieu of the dimensional value filtering. For instance, if the content item data does not include text data, then the content item generation system 120 may retrieve only content item templates that do not include a text element. The content item templates may be annotated with one or more values indicative of the elements included in the content item template for such filtering.
- the layout generator 200 uses the content item generation data, the set of one or more content item templates, and the content item data, the layout generator 200 generates one or more content items as described in greater detail herein.
- the layout generator 200 may be a script may be transmitted to a client device with the content item generation data, a selected content item template, and selected content item data to generate a content item.
- the content item generation system 120 may receive the content item generation data, select a content item template, and select content item data for the script to generate a content item.
- the layout generator 200 includes a layout parser 220 , an anchor manager 222 , one or more element renderers 224 , a space manager 226 , and a conflict resolver 228 .
- the layout parser 220 receives a content item template and parses the content item template into one or more layout elements and/or rendering boxes and associated data for the one or more layout elements and/or rendering boxes (e.g., component type, component arrangement, anchor data, element or rendering box name, priority value, weight value, etc.).
- the layout parser 220 will be described in greater detail in reference to FIG. 5 .
- the anchor manager 222 receives a set of one or more parsed layout elements and/or rendering boxes and associated data and determines a placeholder for each of the set of one or more parsed layout elements and/or rendering boxes based on the associated data for the one or more elements, the first dimensional value and second dimensional value, and the content item data.
- the placeholder is the maximum space that an element or rendering box can occupy in the content item based on the anchors for the element, the dimensions of the content item to be generated, and the content item data to be used to populate the element. Because some elements or rendering boxes may depend from other elements or rendering boxes based on the anchors, the anchor manager 222 performs a topological sorting to determine an order in which to determine the placeholders for the one or more elements or rendering boxes.
- an element such as a logo element
- an anchor referencing another element such as a button element
- the placeholder for the button element may need to be determined prior to determining the placeholder for logo element.
- the button element further includes an anchor to another element, such as an image element
- the placeholder for the image element may need to be determined prior either of the placeholders for the button element or the logo element.
- a topological sorting is performed to sort the layout elements or rendering boxes based on their anchor dependencies.
- a placeholder for each element or rendering box of the sorted list of elements and/or rendering boxes may be determined using the anchor manager 222 .
- the anchor manager 222 outputs the placeholders for each element and/or rendering box to a corresponding element renderer 224 .
- the anchor manager 222 may omit one or more elements and/or rendering boxes to reduce the amount of data for the content item based on received contextual data. For instance, if the contextual data includes network connection type data indicative of a low throughput or low speed network connection type, such as a 2 G connection type, then the anchor manager 222 can exclude one or more elements and/or rendering boxes based on the priority attributes of the various elements.
- the anchor manager 222 will be described in greater detail in reference to FIG. 6 .
- the element renderers 224 receive the placeholders for each corresponding element and/or rendering box and determine an initial space allocation based on the placeholders and the one or more anchors for each element or rendering box.
- the element renderers 224 may include an image element renderer, a text element renderer, and a button element renderer.
- the initial space allocation is the space an element can occupy in the layout of the content item based on the placeholder and subject to the one or more anchors of the element or rendering box.
- an image analyzer 230 shown in FIG. 4
- the element renderers 224 will be described in greater detail in reference to FIG. 8 .
- the space manager 226 receives the initial space allocations from the one or more element renderers 224 and determines a final space allocation for each element and/or rendering box for the generated content item.
- the space manager 226 determines a final space allocation for each element and/or rendering box based on the corresponding initial space allocation, determines a minimum space allocation for each element and/or rendering box based on the corresponding initial space allocation, the one or more anchors, and the weight attribute, and modifies the space allocation of each element and/or rendering box using a growth function to utilize any remaining space subject to the weight attribute and the one or more anchors.
- the space manager 226 will be described in greater detail in reference to FIGS. 8-9B .
- the conflict resolver 228 receives the final space allocations for the one or more elements and/or rendering boxes of the content item and determines if any conflicts exist based on the final space allocations. Such conflicts may include overlap of elements and/or rendering boxes, overflow of an element or rendering box beyond the dimensions of the content item, insufficient margin, text truncation, and/or other content item template-specific conflicts. If a conflict exists, then the conflict resolver 228 may eliminate an element from the set of one or more elements and/or rendering boxes and return the new set of elements and/or rendering boxes to the anchor manager 222 to determine the placeholders based on the new set of elements and/or rendering boxes.
- the element that is removed from the one or more elements and/or rendering boxes may be based on the priority attribute of the elements (e.g., removing the element with the highest priority attribute value indicative of the element being lower in importance to the content item template).
- the conflict resolver 228 may send data to the layout parser 220 to parse a new content item template from the set of content item templates or the conflict resolver 228 may halt generation of the content item and output an error (e.g., if no other content item templates may be used and/or if a single template is to be used).
- the conflict resolver 228 may receive one or more rules for the conflicts from a conflict system 232 (shown in FIG. 4 ).
- the conflict system 232 may include a margin definer to define a margin needed for each element and/or rendering box based on the content item size.
- the conflict system 232 may further include conflict rules defining when text truncation may occur based on the content item size and/or other content item template-specific conflict rules.
- FIG. 4 depicts an overview of a process diagram of an implementation of a process flow for the layout generator 200 and scorer 208 of FIG. 2 that may be implemented by a content item generation system 120 .
- the details of the process flow will be described in greater detail in reference to FIGS. 5-10 .
- the layout parser 220 receives a set of one or more layout templates from a content item template database 206 .
- a content item template defines one or more elements and/or rendering boxes and an arrangement of the one or more elements and/or rendering boxes for a content item to be generated from the content item template.
- the one or more content item templates may be constrained XML configuration files that define one or more elements and/or rendering boxes of a corresponding content item template.
- other mark-up languages may be used for the one or more content item templates.
- Each content item template can define one or more content item components for the content item template.
- Each content item component can include attributes, such as a name, a type, a priority, and a weight.
- the name attribute may be a designer-defined name to reference the content item component.
- the type attribute may be a designer-selected content item type, such as a headline, logo, product image, description, button, etc., that is associated with a default priority and/or a default weight.
- the priority attribute may be a designer-defined value that may be used to prioritize the removal of elements of the content item template. In some implementations, the lower the value, the higher the priority with a 0 value for elements that cannot be removed from the generated content item.
- the weight attribute may be a designer-defined value that may be used to prioritize the growth of elements of the content item when additional space is available.
- An implementation of defined content item components for a content item template XML configuration file may be defined by the following:
- product1image content item component has a type attribute of “product,” a priority attribute of 0, and a weight attribute of 2;
- logoimage content item component has a type attribute of “logo” and a priority attribute of 0;
- the text1 content item component has a type attribute of “headline;”
- the text2 content item component has a type attribute of “description” and a priority attribute of 0;
- the clicktext content item component has a type attribute of “button” and a priority attribute of 0.
- the defined content item components may be included as one or more elements for a content item template and/or in one or more rendering boxes of a content item template of the content item template XML configuration file.
- the content item template further includes one or more templates for content items that utilize one or more of the content item components to define one or more elements for a layout for a content item.
- the content item template may include one or more rendering boxes for the elements.
- Each rendering box and/or element includes one or more of the content item components, and at least two anchors defining the arrangement of the element and/or rendering box relative to another element and/or rendering box and/or relative to the content item itself (e.g., a button element may be defined by a right anchor relative to a right edge of the content item and a bottom anchor relative to a bottom edge of the content item).
- An implementation of a content item template XML configuration file for a banner type content item template that utilizes the aforementioned content item components may be defined by the following:
- banner ⁇ productimage: ⁇ spec: ‘product1image, left’, left: ‘0’, top: ‘0’, right: ‘50%’, bottom: ‘0’ ⁇
- textbox ⁇ spec: ‘vertical-list, -text1-text2-, top’, top: ‘0’, left: ‘productimage’, right: ‘logoandbutton’, bottom: ‘0’ ⁇
- logoandbutton ⁇ spec: ‘vertical-list, -logoimage-clicktext-, right’, top: ‘0’, left: ‘50%’, bottom: ‘0’ ⁇ ⁇ ,
- the first rendering box “productimage,” includes a “spec” attribute that declares that there is a single content item component, “product1image,” that is left-aligned for the first rendering box.
- the first rendering box also includes four anchors, left, top, right, and bottom, with the left, top, and bottom anchors indicating the first rendering box will be anchored to the left, top, and bottom edges of the content item to be generated.
- the right anchor includes a relative value, 50%, that indicates the right portion of the first rendering box is to be at 50% of the content item's width away from the right edge of the content item to be generated.
- a second rendering box, “text box,” includes a “spec” attribute that declares that there are two content item components, “text1” and “text2,” that are vertically stacked and have equal spacing, and the second rendering box is top-aligned.
- the first rendering box also includes four anchors, left, top, right, and bottom, with the top and bottom anchors indicating the first rendering box will be anchored to the top and bottom edges of the content item to be generated.
- the left anchor includes a reference to the “productimage” first rendering box and the right anchor includes a reference to the “logoandbutton” third rendering box that indicates the left portion of the second rendering box is to be adjacent to the first rendering box and the right portion of the second rendering box is to be adjacent to the third rendering box.
- the spacing between the second rendering box and the first and third rendering boxes will be optimized by the content item generation system 120 and/or a content item generation script.
- the third rendering box “logoandbutton,” includes a “spec” attribute that declares that there are two content item components, “logoimage” and “clicktext,” that are vertically stacked and have equal spacing, and the third rendering box is right-aligned.
- the third rendering box also includes three anchors, left, top, and bottom, with the top and bottom anchors indicating the third rendering box will be anchored to the top and bottom edges of the content item to be generated.
- the left anchor includes a relative value, 50%, that indicates the left portion of the third rendering box is to be at 50% of the content item's width away from the left edge of the content item to be generated.
- several content item templates or layouts may be included in a single content item template XML configuration file.
- the layout parser 220 may receive the content item template XML configuration file and parse the file into the three rendering boxes and further into the various elements for each rendering box. The layout parser 220 may also parse the “spec” attribute, components, priority attribute values, associated anchors, and/or the arrangement of the elements for each rendering box. The layout parser 220 then sends a set of parsed layout elements and/or rendering boxes and associated data to the anchor manager 222 .
- the anchor manager 222 receives the set of parsed layout elements and/or rendering boxes and associated data, the first dimensional value and second dimensional value, and the content item data.
- the anchor manager 222 is configured to determine a placeholder for each of the one or more parsed layout elements and/or rendering boxes based on the associated data for the one or more elements, the first dimensional value and the second dimensional value, and the content item data.
- the placeholder is the maximum space that an element and/or rendering box can occupy in the content item. Because some elements and/or rendering boxes may depend from other elements and/or rendering boxes based on the anchors, the anchor manager 222 performs a topological sorting to determine an order in which to determine the placeholders for the one or more elements and/or rendering boxes.
- the placeholder for the first rendering box and third rendering box may need to be determined prior to determining the placeholder for the second rendering box.
- the topological sorting may also utilize the priority attribute values to determine which placeholder to determine if two or more elements are not dependent upon other elements and/or rendering boxes or depend on elements and/or rendering boxes for which a placeholder has already been determined.
- An anchor is used to describe a relationship between two elements and/or rendering boxes of the content item template or between an element and/or rendering box and the content item to be generated from the content item template.
- An anchor is defined by a reference (e.g., another element, rendering box, or the content item itself), a distance (e.g., a fixed distance, such as pixels (px), or a relative size of the reference, such as 10% of the size of the content item), and a type (e.g., an edge of the element from which the distance to the reference is measured, such as top, bottom, left, or right).
- the space manager 226 may increase the space allocation of an element and/or rendering box to fit the maximum width and/or height possible of a placeholder for the element and/or rendering box based on the weight attribute and any available space for the element and/or rendering box given the first and second dimensional values for the content item slot. If the space manager 226 cannot increase the space allocation of the element and/or rendering box to the maximum width and/or height of the placeholder for the element and/or rendering box, then the space manager 226 will fit the element and/or rendering box in the center of the placeholder and return the extra space to buffer for other elements and/or rendering boxes of the content item.
- the topological sorting performed by the anchor manager 222 may determine that the placeholders for the “productimage” and “logoandbutton” rendering boxes may be determined first based on the priority attribute values and the dependency of the “textbox” rendering box on the “productimage” and “logoandbutton” rendering boxes.
- the anchor manager 222 may begin with the “productimage” rendering box over the “logoandbutton” rendering box based on the “productimage” rendering box having all four anchors defined.
- the anchor manager 222 may determine the placeholders for each element and/or rendering box based on the topological sorting. For a content item to be generated having a first dimensional value of 200 pixels wide and a second dimensional value of 200 pixels high and the image data for a product image element of the “productimage” rendering box has dimensions of 100 pixels wide by 200 pixels high, then the anchor manager 222 can determine a placeholder for the “productimage” rendering box as ⁇ left:0, top:0, bottom:200, right:100 ⁇ .
- the anchor manager 222 can determine a placeholder for the “logoandbutton” rendering box as ⁇ left:170, top:70, bottom:130, right:200 ⁇ .
- the anchor manager 222 can determine a placeholder for the “textbox” rendering box as ⁇ left:100, top:0, bottom:200, right:170 ⁇ .
- the anchor manager 220 may generate placeholders for each element in addition to or in lieu of the rendering boxes.
- the anchor manager 222 sends the generated placeholders for each element and/or rendering boxes to a corresponding element renderer 224 .
- the element renderers 224 receive the placeholder for each corresponding element and/or rendering box that has the corresponding element from the anchor manager 222 and determine an initial space allocation based on the placeholder of the one or more anchors for each element and/or rendering box.
- the element renderers 224 may include image element renderers, text element renderers, and button element renderers.
- An image element renderer 224 may be allocated for each image element of a content item template. An image element renderer 224 determines an initial space allocation for a corresponding image element of the content item. The initial space allocation may be determined based on the original aspect ratio and size of an image for the image element. For instance, the image renderer 224 may limit the change in aspect ratio of the image to a predetermined range, such as 0.8, inclusive to 1.25, inclusive.
- the initial space allocation may be determined to be ⁇ left:0, top:0, bottom:200, right:[80, 125] ⁇ , where the width may be the range of 80 pixels, inclusive, to 125 pixels, inclusive.
- a final width value or location of the right side of the image element may subsequently be determined by the space manager 226 for a final space allocation. If both the height and width of the image is less than the dimensions of the initial space allocation, then the image is positioned in the center of the initial space allocation.
- a text element renderer 224 may be allocated for each text element of a content item template.
- a text element renderer 224 determines an initial space allocation for a corresponding text element of the content item template. If the sizing of the text for the text element is the same as the initial space allocation, then the text element is the same as the corresponding placeholder for the text element. If sizing of the text is smaller or larger than the initial placeholder, then the determined initial space allocation may include a range based on a minimum font size and a maximum font size. The minimum font size and the maximum font size may be based on the size of the content item to be generated. That is, the font size may be proportional to or otherwise vary with the size of a dimension of the content item to be generated.
- a button element renderer 224 may be allocated for each button element of a content item template.
- a button element renderer 224 determines an initial space allocation for a corresponding button element of the content item template.
- the placeholder, initial space allocation, and final space allocation for a button may be the same predetermined size based on the first dimensional value and the second dimensional value (e.g., predetermined sizes for buttons may be used).
- the initial space allocation for the button element is the same as the corresponding placeholder for the button element.
- the size of the button may be flexible, such that the determined initial space allocation for the button may be linearly scaled based on one or more of the other elements, such as an image element or a text element.
- the initial space allocations for each element and/or each element of each rendering box of the content item template may be sent to the space manager 226 to determine a final space allocation for content item to be generated.
- the space manager 226 receives the initial space allocations from the element renderers 224 to determine a final space allocation for each element and/or for each element of each rendering box. For each element having the same sizing as the initial space allocation, then the space manager 226 determines a final space allocation to be the same as the corresponding initial space allocation. For each element that has a differing size than the initial space allocation, the space manager 226 determines a minimum space allocation for each element based on the corresponding initial space allocation minimum range value or values and modifies the space allocation of each element using a growth function of a growth module 250 to utilize any remaining space.
- the space manager 226 uses a growth function of the growth module 250 for each element and/or each element of a rendering box to increment a dimension of the space allocation of each element by one pixel each iteration until the dimensions of the space allocations cannot incremented further without overlapping another element and/or rendering box.
- the growth function may increment each element in sequence based on the weight attribute value of the element and/or component. That is, the growth function may increment the dimensions of an element having the lowest numerical weight attribute value first, then the dimensions of an element having the next lowest numerical weight attribute value, etc. until all elements that can be incremented have been incremented.
- the growth function may prioritize image elements over text elements and text elements over button elements. The growth function iterates through the eligible elements until the dimensions of the space allocations cannot incremented further without overlapping another element.
- the numerical weight attribute value may correspond to the number of pixels to grow the element and/or component for each iteration. For instance, a numerical weight attribute value of 2 may indicate that the element and/or component is to be incremented by 2 pixels while other elements and/or components are incremented by 1 pixel.
- FIGS. 9A-9B depict an application of the growth function of the growth module 250 for a content item 300 having two elements, an image element 310 and a text element 320 .
- the image element 310 is anchored to the left edge of the content item to be generated, but the right anchor can be expanded by the growth function.
- the text element 320 includes is centered in an initial placeholder and both the left and right anchors can be expanded by the growth function.
- an initial space allocation determined for the image element 310 and/or a rendering box for the image element by an image element renderer 224 may be ⁇ left:0, top:0, bottom:100, right:[80,120] ⁇ based on a size of the image being 100 pixels by 100 pixels and the anchors for the rendering box for the image element 310 indicating that the rendering box will be anchored to the left, top, and bottom edges of the content item to be generated.
- the right anchor may have a relative value, 50%, that indicates the right portion of the first rendering box is to be at 50% of the content item's width away from the right edge of the content item to be generated.
- An initial space allocation determined for the text element 320 by a text element renderer 224 may be ⁇ left:[80,120], top:0, bottom:100, right:[180,200] ⁇ based on a size of the text being 100 pixels by 60 pixels and the anchors for the rendering box for the text element 320 indicating that the rendering box will be aligned to the right and anchored to the top and bottom edges of the content item to be generated.
- the left anchor may be dependent upon the image element such that the left edge of text element 320 will be adjacent the image element 310 for the content item to be generated.
- FIG. 9A depicts the image element 310 positioned in the content item 300 for the minimal right range value of 80 from the corresponding initial space allocation determined by the image element renderer 224 and the text element 320 positioned in the content item 300 for the minimal left range value of 120 and the minimal right range value of 180 from the corresponding initial space allocation determined by the text element renderer 224 .
- the right range value of the image element may be incremented by one pixel to a value of 81
- the left range value of the text element 320 may be incremented by one pixel to a value of 119
- the right range value of the text element 320 may be incremented by one pixel to a value of 181.
- the growth function may iterate through each single pixel increment until the final space allocation for the image element 310 is ⁇ left:0, top:0, bottom:100, right:100 ⁇ and the final space allocation for the text element 320 is ⁇ left:100, top:0, bottom:100, right:200 ⁇ , as shown in FIG. 9B .
- the final space allocations for the one or more elements and/or rendering boxes have been determined by the space manager 226 .
- the final space allocations are sent to the conflict resolver 228 .
- the conflict resolver 228 receives the final space allocations and determines if any conflicts exist based on the final space allocations. Such conflicts may include overlap of elements and/or rendering boxes, overflow of an element beyond the dimensions of the content item and/or rendering box, insufficient margin, text truncation, and/or other content item template-specific conflicts.
- the conflict resolver 228 may compare the values of each final space allocation to determine whether a portion of the final space allocation of one element and/or rendering box overlaps a portion of the final space allocation of another element and/or rendering box.
- the conflict resolver 228 may compare the values of each final space allocation to the first dimensional value and the second dimensional value to determine whether a final space allocation exceeds a dimensional value of the content item to be generated such that an element and/or rendering box overflows the dimensions of the content item. In some implementations, the conflict resolver 228 may add one or more margin values to the final space allocations and compare the final margin-increased space allocations to determine whether insufficient margin exists. In some instances, the conflict resolver 228 may receive a calculated margin value from a conflict system 232 (shown in FIG. 4 ) based on a content item size. In still further implementations, the conflict resolver 228 may determine whether one or more words in a text element is truncated. In still other implementations, the conflict resolver 228 may apply other content item template-specific rules received from the conflict system 232 .
- the conflict resolver 228 may eliminate an element and/or rendering box from the set of one or more elements and/or rendering boxes and return a new, reduced set of elements and/or rendering boxes to the anchor manager 222 to determine the placeholders based on the new set of elements and/or rendering boxes.
- the element and/or rendering box that is removed from the one or more elements and/or rendering boxes may be based on the priority values of the elements (e.g., removing the element and/or rendering boxes with the highest numerical priority value indicative of the element and/or rendering box being lower in importance to the content item template).
- the conflict resolver 228 may send data to the layout parser 220 to parse a new content item template from the set of content item templates or the conflict resolver 228 may halt generation of the content item and output an error (e.g., if no other content item templates may be used).
- the conflict resolver 228 may pass the data for the content item and final space allocations to the scorer 208 .
- the scorer 208 may determine a score for the content item based on the final space allocations.
- the score for the content item may be based on the number of elements in the generated content item compared to the number of elements of the content item template (e.g., if a content item template has 4 elements and the generated content item can only use 3 because of conflicts, the score may be decreased), the number of unused pixels (e.g., total pixels occupied by elements divided by the total pixels of the content item), an average number of unused pixels per vertical or horizontal line, and/or weightings for one or more elements (e.g., an eliminated image element may have a higher weighting, resulting in a lower score, than an eliminated text element with a lower weighting).
- the process of generating layouts for content items and elements may be performed for several content item templates from a set of content item templates and a score for each generated content item layout may be determined.
- the content item generation system 120 may rank the scores and select the highest-scoring generated content item.
- the content item generation system 120 outputs data to display the selected highest-scoring generated content item to the content item requestor 202 or to a content item database 210 to be stored.
- layout data may be generated for a predetermined set of content item slot dimensions, such as common content item slot dimensions of 300 pixels (px) by 250 px, 336 px by 280 px, 970 px by 100 px, 160 px by 600 px, 320 px by 50 px, etc.
- the layout data may be generated by using the layout generator 200 with a real web browser executing on a computing device, such as a server, for each of the predetermined set of content item slot dimensions.
- the layout data for the one of the predetermined set of content item slot dimensions may be retrieved and transmitted to a client device with the content item data for the content item to be displayed on a display of the client device.
- a script executing on the client device may then generate the display data for displaying the content item on the client device using the layout data and the content item data without having to recalculate the layout data.
- the layout generator 200 may be a script that can perform the aforementioned steps for a received content item template to generate the layout data and the display data for a generated content item at the client device using a content item template, the first dimensional value, the second dimensional value, and the content item data. That is, in some instances the content item generation system 120 may receive a request for an arbitrary sized content item from a client device that includes the first dimensional value and the second dimensional value. The content item generation system 120 may determine a third-party content provider for which a content item is to be generated for the arbitrary sized content item slot, such as via selection criteria for the third-party content provider, data regarding the client device, and bids for an auction.
- a landing page URL may be received and/or determined by the landing page analysis system 204 of the content item generation system 120 .
- contextual data may be included with the request to the content item generation system.
- the contextual data may include device type data, network connection type data, network connection speed data, etc.
- the contextual data may be utilized to select content item data for a generated content item to tailor the generated content item based on the contextual data.
- the contextual data may include data indicative of a WiFi network connection type.
- the image module of the landing page analysis system 204 may select or rank larger data size images, high definition video, etc. higher based on the contextual data.
- the contextual data may include data indicative of a 2 G network connection type.
- the image module of the landing page analysis system 204 may select or rank smaller data size images, low definition video, etc. lower based on the contextual data. In other instances, the image module of the landing page analysis system 204 may select or rank images based on the first dimensional value and second dimensional value. For instance, the image module may select or rank an image based on a similarity of an aspect ratio of the first and second dimensional values to an aspect ratio of one or more candidate images.
- the content item generation system 120 may then transmit the script, the content item template, the first dimensional value, the second dimensional value, and the content item data to the client device, where the script having the layout generator 200 generates the layout data for the content item to be generated and the display data for displaying the content item on a display of the client device.
- FIG. 11 depicts a process 400 for creating a configuration file for a content item template for the content item generation system 120 .
- the process 400 includes creating one or more components for the configuration file (block 402 ).
- the creation of the one or more components may include defining one or more attributes, such as a name, a type, a priority, and a weight.
- the name attribute may be a designer-defined name to reference the content item component.
- the type attribute may be a designer-selected content item type, such as a headline, logo, product image, description, button, etc., that is associated with a default priority and/or a default weight.
- the priority attribute may be a designer-defined value that may be used to prioritize the removal of elements of the content item template. In some implementations, the lower the value, the higher the priority with a 0 value for elements that cannot be removed from the generated content item.
- the weight attribute may be a designer-defined value that may be used to prioritize the growth of elements of the content item when additional space is available.
- the process 400 also includes creating one or more content item templates for the configuration file (block 404 ).
- the creation of one or more content item templates may include creating one or more types content item templates that utilize the aforementioned content item components.
- the content item templates may include one or more elements and/or one or more rendering boxes with one or more elements and, in some implementations, an arrangement for the one or more elements in the rendering box, such as a vertical list, a table, a product table, a background image, a shape, etc., and an alignment, such as left, right, top, bottom, etc.
- the one or more elements and/or one or more rendering boxes may include one or more anchors as described herein.
- the process 400 may, in some instances, include testing the configuration file using one or more content item slot sizes, such as one of the common content item slot sizes (block 406 ). That is, the designer of the content item template may utilize a script executing the layout generator 200 with a common content item slot size as the first dimensional value and second dimensional value to test the content item template.
- the tested content item template may be submitted after testing or without testing.
- FIG. 12 depicts an implementation of a process 500 for generating layout data for one or more content item slot dimensions from a predetermined set of content item slot dimensions based on a landing page URL, a first dimensional value, and a second dimensional value implemented by the content item generation system 120 .
- the process 500 includes receiving a landing page URL, a first dimensional value, and a second dimensional value (block 502 ).
- the landing page URL, first dimensional value, and second dimensional value may be received from a database of the content item generation system 120 .
- the first dimensional value and the second dimensional value may be dimensional values corresponding to common content item slot dimensions of 300 px by 250 px, 336 px by 280 px, 970 px by 100 px, 160 px by 600 px, 320 px by 50 px, etc.
- the landing page URL, first dimensional value, and second dimensional value may instead be specified by and received from a third-party content provider.
- a third-party content provider may utilize a content item generation system to generate content items for different common content item slot sizes to be stored in a database and served responsive to subsequent content item requests from client devices or first-party content providers.
- Content item data may be determined from the landing page URL by a landing page analysis system.
- the process 500 may further include receiving a content item template having a set of elements and/or rendering boxes for creating a content item (block 504 ).
- a selected content item template may be retrieved from the database or received from a third-party content provider.
- the process 500 may further include generating a placeholder for each element and/or rendering box of the content item template (block 506 ).
- the generated placeholder for each element and/or rendering box may be generated by an anchor manager based on the associated data for the one or more elements and/or rendering boxes, such as anchors, the first dimensional value and second dimensional value, and the content item data.
- the process 500 further includes determining a space allocation for each element and/or rendering box based on the generated placeholders (block 508 ).
- an initial space allocation may be determined by an element renderer using a placeholder for each element and/or each element of a rendering box.
- a final space allocation may be determined by a space manager. The final space allocation may include using a growth function to increment a dimension of a minimum initial space allocation for one or more elements and/or rendering boxes.
- the process 500 includes determining if a conflict exists based on the determined space allocations for each element and/or rendering box (block 510 ).
- a conflict resolver may determine is an overlap conflict, an overflow conflict, an insufficient margin conflict, a text truncation conflict, and/or other content item template-specific conflicts exist. If a conflict exists, then the conflict resolver may eliminate an element and/or rendering box from the set of one or more elements and/or rendering boxes and return the new set of elements and/or rendering boxes to the anchor manager to determine the placeholders based on the new set of elements and/or rendering boxes.
- the element and/or rendering box that is removed from the one or more elements and/or rendering boxes may be based on the priority values of the elements (e.g., removing the element and/or rendering box with the element with the highest numerical priority value indicative of the element being lower in importance to the content item template).
- the conflict resolver may halt generation of the content item and output an error.
- the process 500 further includes generating layout data for the one or more content item slot dimensions from a predetermined set of content item slot dimensions for a content item using the determined space allocations and responsive to determining no conflict exists (block 512 ).
- the layout data may be in the form of an initial x-coordinate, y-coordinate, width, height, and/or font-size for each element and/or each rendering box of the layout. That is, a layout position of an element and/or rendering box based on the generated layout data may be defined by (x, y, width, height, font-size).
- the layout data including the layout positions may be stored in a database for subsequent use when a request having the same content item slot dimensions is received.
- the layout data can be retrieved from the database and output to the client device responsive to the request.
- a script to generate display data for the content item at the client device based on the layout data can be output with the layout data to the client device.
- FIG. 13 depicts another process 600 for serving a script to a client device and having the client device generate display data for a generated content item.
- the process 600 includes receiving a first dimensional value and a second dimensional value. (block 602 ).
- the first dimensional value and second dimensional value may be received from a client device as part of a request for a content item for a content item slot.
- contextual data may also be received with the first dimensional value and the second dimensional value.
- the contextual data may include device type data, network connection type data, network connection speed data, etc.
- the process also includes receiving a receiving a landing page URL (block 604 ).
- the landing page URL may be received responsive to and/or selected by the content item generation system 120 by determining a third-party content provider for which a content item is to be generated for the content item slot, such as via selection criteria for the third-party content provider, data regarding the client device, and bids for an auction.
- a landing page URL may be received and/or determined by the landing page analysis system 204 of the content item generation system 120 .
- the content item generation system 120 determines content item data based on the landing page URL.
- the contextual data may be utilized to determine or select content item data for a generated content item to tailor the generated content item based on the contextual data.
- the contextual data may include data indicative of a WiFi network connection type.
- the image module of the landing page analysis system 204 may select or rank larger data size images, high definition video, etc. higher based on the contextual data.
- the contextual data may include data indicative of a 2 G network connection type.
- the image module of the landing page analysis system 204 may select or rank smaller data size images, low definition video, etc. lower based on the contextual data.
- the image module of the landing page analysis system 204 may select or rank images based on the first dimensional value and second dimensional value. For instance, the image module may select or rank an image based on a similarity of an aspect ratio of the first and second dimensional values to an aspect ratio of one or more candidate images.
- the content item generation system may retrieve the layout data from a database (block 606 ) and transmit the layout data with the content item data to the client device for a script to generate display data for the content item at the client device using the layout data and the content item data (block 608 ). If the layout data has not been stored, then the content item generation system 120 may then transmit a script having the layout generator 200 , a content item template, the first dimensional value, the second dimensional value, and the content item data to the client device (block 610 ), where the script having the layout generator 200 generates the layout data for the content item to be generated and the display data for displaying the content item on a display of the client device.
- FIG. 14 depicts an example of a landing page resource 700 associated with a landing page URL.
- the landing page resource 700 includes a logo image 702 , textual portions 704 , 706 , 708 , 710 , 712 , images 714 , 716 , 718 , 720 , 722 , 724 , 726 , and a menu portion 728 .
- the landing page analysis system 204 may include a resource renderer capable of interpreting the landing page resource 700 associated with the landing page URL and creating a visual representation (e.g., an image, a display, etc.) thereof.
- the resource renderer may create a “snapshot image” of the landing page resource 700 associated with the landing page URL and/or construct a document object model (DOM) tree representing the various components of the landing page resource 700 associated with the landing page URL.
- the landing page analysis system 204 may extract content item data including the logo image 702 , textual portion 704 , and image 714 .
- FIGS. 15A-16B depict implementations of generated content items using content item templates, arbitrary dimensional values for the first dimensional value and second dimensional value, and extracted content item data from a landing page resource.
- FIG. 16A depicts a first generated content item 800 having a first dimensional value of 350 pixels wide and a second dimensional value of 50 pixels high and using a content item template.
- the first generated content item 800 includes a product image 802 , a textual portion 804 , and a logo image 806 .
- the first content generated content item 800 may include the product image 802 based on the contextual data indicating that the connection speed and/or connection type is a WiFi connection.
- FIG. 16B depicts a second generated content item 810 having a first dimensional value of 350 pixels wide and a second dimensional value of 50 pixels high and using the content item template.
- the second generated content item 810 includes the textual portion 804 , the logo image 806 , and a button 812 .
- the second content generated content item 810 may exclude the product image 802 based on the contextual data indicating that the connection speed and/or connection type is a lower speed or type of connection, such as a 2 G or 3 G connection.
- FIG. 16A depicts a generated content item 900 having a first dimensional value of 970 pixels wide and a second dimensional value of 100 pixels and using a second content item template.
- the generated content item 900 includes a product image 902 , a textual portion 904 , a logo image 906 , and a button 908 .
- the product image 902 is a first image having a first aspect ratio where the height is greater than the width of the image.
- FIG. 16B depicts a second generated content item 910 having a first dimensional value of 970 pixels and a second dimensional value of 100 pixels and using the second content item template.
- the generated content item 910 includes a second product image 912 , the textual portion 904 , the logo image 906 , and the button 908 .
- the second product image 912 is a second image having a second aspect ratio where the width is greater than the height of the image.
- the landing page analysis system 204 and/or the content item generation system 120 may compare an aspect ratio of the first dimensional value and the second dimensional value to the aspect ratios of one or more candidate product images, such as the first product image 902 and the second product image 912 .
- the landing page analysis system 204 and/or the content item generation system 120 may then select a product image that has the closest or most similar aspect ratio (e.g., by comparing the aggregate difference between the dimensional values).
- the landing page analysis system 204 and/or the content item generation system 120 may select the second product image 912 for the content item template based on the image having a more similar aspect ratio.
- FIG. 17 is a block diagram of a computer system 1000 that can be used to implement the client device 110 , content item selection system 108 , third-party content server 102 , resource server 104 , etc.
- the computing system 1000 includes a bus 1005 or other communication component for communicating information and a processor 1010 coupled to the bus 1005 for processing information.
- the computing system 1000 can also include one or more processors 1010 coupled to the bus for processing information.
- the computing system 1000 also includes main memory 1015 , such as a RAM or other dynamic storage device, coupled to the bus 1005 for storing information, and instructions to be executed by the processor 1010 .
- Main memory 1015 can also be used for storing position information, temporary variables, or other intermediate information during execution of instructions by the processor 1010 .
- the computing system 1000 may further include a ROM 1020 or other static storage device coupled to the bus 1005 for storing static information and instructions for the processor 1010 .
- a storage device 1025 such as a solid state device, magnetic disk or optical disk, is coupled to the bus 1005 for persistently storing information and instructions.
- Computing device 1000 may include, but is not limited to, digital computers, such as laptops, desktops, workstations, personal digital assistants, servers, blade servers, mainframes, cellular telephones, smart phones, mobile computing devices (e.g., a notepad, e-reader, etc.) etc.
- the computing system 1000 may be coupled via the bus 1005 to a display 1035 , such as a Liquid Crystal Display (LCD), Thin-Film-Transistor LCD (TFT), an Organic Light Emitting Diode (OLED) display, LED display, Electronic Paper display, Plasma Display Panel (PDP), and/or other display, etc., for displaying information to a user.
- a display 1035 such as a Liquid Crystal Display (LCD), Thin-Film-Transistor LCD (TFT), an Organic Light Emitting Diode (OLED) display, LED display, Electronic Paper display, Plasma Display Panel (PDP), and/or other display, etc.
- An input device 1030 such as a keyboard including alphanumeric and other keys, may be coupled to the bus 1005 for communicating information and command selections to the processor 1010 .
- the input device 1030 may be integrated with the display 1035 , such as in a touch screen display.
- the input device 1030 can include a cursor control, such as
- the processes and/or methods described herein can be implemented by the computing system 1000 in response to the processor 1010 executing an arrangement of instructions contained in main memory 1015 .
- Such instructions can be read into main memory 1015 from another computer-readable medium, such as the storage device 1025 .
- Execution of the arrangement of instructions contained in main memory 1015 causes the computing system 1000 to perform the illustrative processes and/or method steps described herein.
- One or more processors in a multi-processing arrangement may also be employed to execute the instructions contained in main memory 1015 .
- hard-wired circuitry may be used in place of or in combination with software instructions to effect illustrative implementations. Thus, implementations are not limited to any specific combination of hardware circuitry and software.
- Implementations of the subject matter and the operations described in this specification can be implemented in digital electronic circuitry, or in computer software embodied on a tangible medium, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them.
- the subject matter described in this specification can be implemented as one or more computer programs, i.e., one or more modules of computer program instructions, encoded on one or more computer storage media for execution by, or to control the operation of, data processing apparatus.
- the program instructions can be encoded on an artificially-generated propagated signal, e.g., a machine-generated electrical, optical, or electromagnetic signal that is generated to encode information for transmission to suitable receiver apparatus for execution by a data processing apparatus.
- a computer storage medium can be, or be included in, a computer-readable storage device, a computer-readable storage substrate, a random or serial access memory array or device, or a combination of one or more of them.
- a computer storage medium is not a propagated signal, a computer storage medium can be a source or destination of computer program instructions encoded in an artificially-generated propagated signal.
- the computer storage medium can also be, or be included in, one or more separate components or media (e.g., multiple CDs, disks, or other storage devices). Accordingly, the computer storage medium is both tangible and non-transitory.
- the operations described in this specification can be performed by a data processing apparatus on data stored on one or more computer-readable storage devices or received from other sources.
- the terms “data processing apparatus,” “computing device,” or “processing circuit” encompass all kinds of apparatus, devices, and machines for processing data, including a programmable processor, a computer, a system on a chip, or multiple ones, a portion of a programmed processor, or combinations of the foregoing.
- the apparatus can include special purpose logic circuitry, e.g., an FPGA or an ASIC.
- the apparatus can also include, in addition to hardware, code that creates an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, a cross-platform runtime environment, a virtual machine, or a combination of one or more of them.
- the apparatus and execution environment can realize various different computing model infrastructures, such as web services, distributed computing and grid computing infrastructures.
- a computer program (also known as a program, software, software application, script, or code) can be written in any form of programming language, including compiled or interpreted languages, declarative or procedural languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, object, or other unit suitable for use in a computing environment.
- a computer program may, but need not, correspond to a file in a file system.
- a program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub-programs, or portions of code).
- a computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
- processors suitable for the execution of a computer program include, for instance, both general and special purpose microprocessors, and any one or more processors of any kind of digital computer.
- a processor will receive instructions and data from a read-only memory or a random access memory or both.
- the essential elements of a computer are a processor for performing actions in accordance with instructions and one or more memory devices for storing instructions and data.
- a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks.
- mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks.
- a computer need not have such devices.
- a computer can be embedded in another device, e.g., a mobile telephone, a personal digital assistant (PDA), a mobile audio or video player, a game console, a Global Positioning System (GPS) receiver, or a portable storage device (e.g., a universal serial bus (USB) flash drive), to name just a few.
- Devices suitable for storing computer program instructions and data include all forms of non-volatile memory, media and memory devices, including, for instance, semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks; magneto-optical disks; and CD-ROM and DVD disks.
- the processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
- implementations of the subject matter described in this specification can be implemented on a computer having a display device, e.g., a CRT (cathode ray tube) or LCD monitor, for displaying information to the user and a keyboard and a pointing device, e.g., a mouse or a trackball, by which the user can provide input to the computer.
- a display device e.g., a CRT (cathode ray tube) or LCD monitor
- keyboard and a pointing device e.g., a mouse or a trackball
- Other kinds of devices can be used to provide for interaction with a user as well; for instance, feedback provided to the user can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form, including acoustic, speech, or tactile input.
- references to “or” may be construed as inclusive so that any terms described using “or” may indicate any of a single, more than one, and all of the described terms.
Abstract
A system for automatically generating a content item may include receiving a content item template having a set of elements for creating a content item and content item data for the set of elements. In some implementations, the content item data may include one or more assets that are selected based on contextual data for a content item request. The contextual data may include a connection type or speed. A placeholder for each element of the set of elements of the content item template may be generated and a space allocation for each element may be determined based on the generated placeholders for each element. A determination if a conflict exists based on the determined space allocations for each element may be made and, responsive to determining no conflict exists, a content item may be generated using the content item data and the determined space allocations.
Description
- This application is a Continuation of International Application number PCT/CN2014/088945, filed Oct. 20, 2014, entitled ARBITRARY SIZE CONTENT ITEM GENERATION, which is incorporated herein by reference in its entirety.
- In a networked environment, such as the Internet or other networks, first-party content providers can provide information for public presentation on resources, for instance webpages, documents, applications, and/or other resources. The first-party content can include text, video, and/or audio information provided by the first-party content providers via, for instance, a resource server for presentation on a client device over the Internet. The first-party content may be a webpage requested by the client device or a stand-alone application (e.g., a video game, a chat program, etc.) running on the client device. Additional third-party content can also be provided by third-party content providers for presentation on the client device together with the first-party content provided by the first-party content providers. For instance, the third-party content may be a public service announcement or advertisement that appears in conjunction with a requested resource, such as a webpage (e.g., a search result webpage from a search engine, a webpage that includes an online article, a webpage of a social networking service, etc.) or with an application (e.g., an advertisement within a game). Thus, a person viewing a resource can access the first-party content that is the subject of the resource as well as the third-party content that may or may not be related to the subject matter of the resource.
- Implementations described herein relate to systems and methods to generate arbitrary sized content items automatically using a given URL and width and height constraints. The system can receive a content item template having a set of elements for creating a content item and content item data for the set of elements. Placeholders for each element can be generated and space allocations for the elements can be determined. Once space is allocated for the elements, a determination of whether a conflict exists based on the space allocations for each element and, if no conflict exists, a content item may be generated using the content item data and the determined space allocations.
- In some instances, the system will pre-render or generate layout information, such as the space allocations, offline using a real browser for select common content item sizes for an arbitrary sized content item template and will store the layout information. When a request for a content item of that common content item size is requested, the system retrieves the layout information and the assets for the content item to be rendered. The system transmits to the client device the layout information and asset information in an HTML file along with a JavaScript file to assemble the content item at the client device. The JavaScript file detects whether layout information is included in the HTML file and, if so, uses the pre-generated layout information in rendering the content item at the client device. If no layout information is included in the HTML file with the asset information, then the JavaScript file will determine the layout at the client device.
Content item components can also be implemented to define one or more types of content item template elements and can include attributes for each type of element, such as name, type, priority and weight. The content item template may then include several layout variations, where each layout variation has one or more elements that invoke a defined content item component, and each element defines how it is related to other elements and how to arrange the component inside the element. The layout variations can be combined into one configuration file, and then the configuration file and layout engine JavaScript can be linked into same HTML file. - Further still, the content item generation system may utilize smart asset selection to select assets, such as the content item data for the set of elements of a content item template, and/or to eliminate elements from the to-be generated content item based on contextual data of the client device (e.g., eliminating images from the final rendered ad if a mobile client device has a poor or low bandwidth connection (such as 2 G versus a better or higher bandwidth connection of WiFi) or using image assets having similar aspect ratios to the content item slot size). Thus, the content item generation system can generate tailored arbitrary-sized content items for a client device based on the contextual data.
- One implementation relates to a system for automatically generating a content item. The system includes one or more processors and one or more storage devices that include instructions that cause the one or more processors to perform several operations. The operations include receiving a template having a set of elements for creating a content item and content item data for the set of elements, the content item data for the set of elements including an asset selected based on contextual data received from a client device. The operations also include generating a placeholder for each element of the set of elements of the template and determining a space allocation for each element of the set of elements based, at least in part, on the generated placeholders for each element of the set of elements. The operations further include determining if a conflict exists based on the determined space allocations for each element of the set of elements and generating a content item using the content item data for the set of elements and the determined space allocations responsive to determining no conflict exists.
- Another implementation relates to a method for generating layout data for a content item template. The method includes receiving a landing page URL, a first dimensional value, and a second dimensional value. The method also includes receiving a content item template having a set of elements for creating a content item and generating a placeholder for each element of the set of elements of the content item template based, at least in part, on the first dimensional value and the second dimensional value. The method further includes determining a space allocation for each element of the set of elements based, at least in part, on the generated placeholders for each element of the set of elements and determining if a conflict exists based on the determined space allocations for each element of the set of elements. The method still further includes storing, in a database, layout data associated with the first dimensional value and the second dimensional value for the content item template based on the determined space allocations and responsive to determining no conflict exists.
- Yet a further implementation relates to a computer readable storage device storing instructions that, when executed by one or more processors, cause the one or more processors to perform several operations. The operations may include receiving a request for a content item from a client device that includes a first dimensional value for a content item slot, a second dimensional value for the content item slot, and contextual data. The operations also include determining a landing page URL for a content item to be served responsive to the request from the client device and determining content item data for the content item based on the landing page URL and the received contextual data. The operations further include outputting a content item template, the determined content item data, and a script to generate the content item from the content item template and the determined content item data by the client device.
- The details of one or more implementations are set forth in the accompanying drawings and the description below. Other features, aspects, and advantages of the disclosure will become apparent from the description, the drawings, and the claims, in which:
-
FIG. 1 is an overview depicting an implementation of a system of providing information via a computer network; -
FIG. 2 is a block diagram depicting an implementation of a content item generation system in greater detail and having a layout generator and a scorer; -
FIG. 3 is a block diagram depicting an implementation of the layout generator ofFIG. 2 in greater detail having a layout parser, an anchor manager, one or more element renderers, a space manager, and a conflict resolver; -
FIG. 4 is a block process diagram depicting an implementation of a process flow for the layout generator and scorer ofFIG. 2 ; -
FIG. 5 is a block diagram depicting an implementation of the layout parser ofFIGS. 3-4 ; -
FIG. 6 is a block diagram depicting an implementation of the anchor manager ofFIGS. 3-4 ; -
FIG. 7 is a block diagram depicting an implementation of the one or more element renderers ofFIGS. 3-4 ; -
FIG. 8 is a block diagram depicting an implementation of the space manager ofFIGS. 3-4 having a growth module; -
FIG. 9A is a diagram depicting an implementation of a content item having an initial minimum space allocation for an image element and an initial minimum space allocation for a text element; -
FIG. 9B is a diagram of the content item ofFIG. 9A with a final space allocation for the image element and a final space allocation for the text element after applying a growth function of the growth module the space manager ofFIG. 8 ; -
FIG. 10 is a block diagram depicting an implementation of the conflict resolver ofFIGS. 3-4 ; -
FIG. 11 is a process diagram depicting an implementation of a process for creating a configuration file for a content item template for the content item generation system ofFIG. 2 -
FIG. 12 is a process diagram depicting an implementation of a process for generating a content item; -
FIG. 13 is a process diagram depicting an implementation of a process for serving a script to a client device for having the client device generate display data for a content item; -
FIG. 14 is a block diagram depicting an implementation of a landing page resource associated with a landing page URL; -
FIG. 15A is a block diagram depicting an implementation of a first generated content item generated based on contextual data; -
FIG. 15B is a block diagram depicting an implementation of a second generated content item generated based on other contextual data; -
FIG. 16A is a block diagram depicting an implementation of a generated content item having third arbitrary dimensions and using a second content item template; -
FIG. 16B is a block diagram depicting an implementation of another generated content item having fourth arbitrary dimensions and using the second content item template; and -
FIG. 17 is a block diagram depicting a general architecture for a computer system that may be employed to implement various elements of the systems and methods described and illustrated herein. - It will be recognized that some or all of the figures are schematic representations for purposes of illustration. The figures are provided for the purpose of illustrating one or more embodiments with the explicit understanding that they will not be used to limit the scope or the meaning of the claims.
- Following below are more detailed descriptions of various concepts related to, and implementations of, methods, apparatuses, and systems for providing information on a computer network. The various concepts introduced above and discussed in greater detail below may be implemented in any of numerous ways as the described concepts are not limited to any particular manner of implementation. Specific implementations and applications are provided primarily for illustrative purposes.
- A computing device (e.g., a client device) can view a resource, such as a webpage, a document, an application, etc. In some implementations, the computing device may access the resource via the Internet by communicating with a server, such as a webpage server, corresponding to that resource. The resource includes first-party content that is the subject of the resource from a first-party content provider and may also include additional third-party provided content, such as advertisements or other content. In one implementation, responsive to receiving a request to access a webpage, a webpage server and/or a client device can communicate with a data processing system, such as a content item selection system, to request a content item to be presented with the requested webpage, such as through the execution of code of the resource to request a third-party content item to be presented with the resource. The content item selection system can select a third-party content item and provide data to effect presentation of the content item with the requested webpage on a display of the client device. In some instances, the content item is selected and served with a resource associated with a search query response. For instance, a search engine may return search results on a search results webpage and may include third-party content items related to the search query in one or more content item slots of the search results webpage.
- The computing device (e.g., a client device) may also be used to view or execute an application, such as a mobile application. The application may include first-party content that is the subject of the application from a first-party content provider and may also include additional third-party provided content, such as advertisements or other content. In one implementation, responsive to use of the application, a resource server and/or a client device can communicate with a data processing system, such as a content item selection system, to request a content item to be presented with a user interface of the application and/or otherwise. The content item selection system can select a third-party content item and provide data to effect presentation of the content item with the application on a display of the client device.
- In some instances, a device identifier may be associated with the client device. The device identifier may be a randomized number associated with the client device to identify the device during subsequent requests for resources and/or content items. In some instances, the device identifier may be configured to store and/or cause the client device to transmit information related to the client device to the content item selection system and/or resource server (e.g., values of sensor data, a web browser type, an operating system, historical resource requests, historical content item requests, etc.).
- In situations in which the systems discussed here collect personal information about users, or may make use of personal information, the users may be provided with an opportunity to control whether programs or features collect user information (e.g., information about a user's social network, social actions or activities, profession, a user's preferences, or a user's current location), or to control whether and/or how to receive content from the content server that may be more relevant to the user. In addition, certain data may be treated in one or more ways before it is stored or used, so that personally identifiable information is removed. For instance, a user's identity may be treated so that no personally identifiable information can be determined for the user, or a user's geographic location may be generalized where location information is obtained (such as to a city, ZIP code, or state level), so that a particular location of a user cannot be determined. Thus, the user may have control over how information is collected about the user and used by a content server.
- A third-party content provider, when providing third-party content items for presentation with requested resources via the Internet or other network, may utilize a content item management service to control or otherwise influence the selection and serving of the third-party content items. For instance, a third-party content provider may specify selection criteria (such as keywords) and corresponding bid values that are used in the selection of the third-party content items. The bid values may be utilized by the content item selection system in an auction to select and serve content items for presentation with a resource. For instance, a third-party content provider may place a bid in the auction that corresponds to an agreement to pay a certain amount of money if a user interacts with the provider's content item (e.g., the provider agrees to pay $3 if a user clicks on the provider's content item). In other instances, a third-party content provider may place a bid in the auction that corresponds to an agreement to pay a certain amount of money if the content item is selected and served (e.g., the provider agrees to pay $0.005 each time a content item is selected and served or the provider agrees to pay $0.05 each time a content item is selected or clicked). In some instances, the content item selection system uses content item interaction data to determine the performance of the third-party content provider's content items. For instance, users may be more inclined to click on third-party content items on certain webpages over others. Accordingly, auction bids to place the third-party content items may be higher for high-performing webpages, categories of webpages, and/or other criteria, while the bids may be lower for low-performing webpages, categories of webpages, and/or other criteria.
- In some instances, one or more performance metrics for the third-party content items may be determined and indications of such performance metrics may be provided to the third-party content provider via a user interface for the content item management account. For instance, the performance metrics may include a cost per impression (CPI) or cost per thousand impressions (CPM), where an impression may be counted, for instance, whenever a content item is selected to be served for presentation with a resource. In some instances, the performance metric may include a click-through rate (CTR), defined as the number of clicks on the content item divided by the number of impressions. Still other performance metrics, such as cost per action (CPA) (where an action may be clicking on the content item or a link therein, a purchase of a product, a referral of the content item, etc.), conversion rate (CVR), cost per click-through (CPC) (counted when a content item is clicked), cost per sale (CPS), cost per lead (CPL), effective CPM (eCPM), and/or other performance metrics may be used.
- In some instances, a webpage or other resource (such as, for instance, an application) includes one or more content item slots in which a selected and served third-party content item may be displayed. The code (e.g., JavaScript®, HTML, etc.) defining a content item slot for a webpage or other resource may include instructions to request a third-party content item from the content item selection system to be presented with the webpage. In some implementations, the code may include an image request having a content item request URL that may include one or more parameters (e.g., /page/contentitem?devid=abc123&devnfo=A34r0). Such parameters may, in some implementations, be encoded strings such as “devid=abc123” and/or “devnfo=A34r0.”
- The selection of a third-party content item to be served with the resource by a content item selection system may be based on several influencing factors, such as a predicted click through rate (pCTR), a predicted conversion rate (pCVR), a bid associated with the content item, etc. Such influencing factors may be used to generate a value, such as a score, against which other scores for other content items may be compared by the content item selection system through an auction.
- During an auction for a content item slot for a resource, such as a webpage, several different types of bid values may be utilized by third-party content providers for various third-party content items. For instance, an auction may include bids based on whether a user clicks on the third-party content item, whether a user performs a specific action based on the presentation of the third-party content item, whether the third-party content item is selected and served, and/or other types of bids. For instance, a bid based on whether the third-party content item is selected and served may be a lower bid (e.g., $0.005) while a bid based on whether a user performs a specific action may be a higher bid (e.g., $5). In some instances, the bid may be adjusted to account for a probability associated with the type of bid and/or adjusted for other reasons. For instance, the probability of the user performing the specific action may be low, such as 0.2%, while the probability of the selected and served third-party content item may be 100% (e.g., the selected and served content item will occur if it is selected during the auction, so the bid is unadjusted). Accordingly, a value, such as a score or a normalized value, may be generated to be used in the auction based on the bid value and the probability or another modifying value. The value or score for a bid based on whether the third-party content item is selected and served may be $0.005*1.00=0.005 and the value or score for a bid based on whether a user performs a specific action may be $5*0.002=0.01. To maximize the income generated, the content item selection system may select the third-party content item with the highest value from the auction. In some implementations, the content item selection system may select the content item associated with the bid based on whether the user performs the specific action due to the higher value or score associated with that bid.
- Once a third-party content item is selected by the content item selection system, data to effect presentation of the third-party content item on a display of the client device may be provided to the client device using a network.
- In some instances, it may be useful to automatically generate content items for a third-party content provider using a landing page uniform resource locator (URL), a first dimensional value, and a second dimensional value. That is, given a landing page of a third-party content provider and the dimensions for a content item slot, a content item, such as an advertisement, may be automatically generated based on one or more content item templates using the dimensions and content item data determined from the landing page URL. In some implementations, the content item may be generated on-demand, such as responsive to a request for a content item, or the content item may be generated and data for the content item may be stored in a database or presented in a user interface to a third-party content provider generating content items.
- The landing page URL, first dimensional value, and/or second dimensional value may be received from a client device, a first-party content provider, or a third-party content provider. In some instances, the first dimensional value and second dimensional value may be received from a client device in response to the client device requesting a resource of the first-party content provider having a content item slot. The client device may receive data for the first-party resource and transmit a request for a content item, such as an advertisement, including the first dimensional value and second dimensional value to a content item selection system. The content item selection system may select a third-party content provider and a content item generation system or content item generation script may be used to generate a content item using a landing page URL of the third-party content provider, the first dimensional value, and the second dimensional value. In some implementations, the content item selection system may output layout data to display a pre-generated content item with the resource of the first-party content provider. In other implementations, the content item selection system may output a content item generation script with content item data for the script to generate the content item at the client device. In some instances, the first dimensional value and second dimensional value may be received from the first-party content provider in response to a client device requesting a resource of the first-party content provider having a content item slot.
- In some implementations, the landing page URL, first dimensional value, and second dimensional value may be received from a third-party content provider independent of a client device requesting a resource. For instance, a third-party content provider may utilize a content item generation system or content item generation script to generate content items of different sizes to be stored in a database and served responsive to subsequent content item requests from a client devices or first-party content providers.
- The content item data determined from the landing page URL may be determined using a resource renderer capable of interpreting a resource associated with the landing page URL and creating a visual representation (e.g., an image, a display, etc.) thereof. For instance, the resource of the landing page URL may include marked-up content (e.g., HTML, XML, image URLs, etc.) as well as formatting information (e.g., CSS, XSL, etc.). The resource renderer may download the marked-up content and formatting information and render the resource associated with the landing page URL according to World Wide Web Consortium (W3C) standards. The resource renderer may thus create a “snapshot image” of the resource associated with the landing page URL and/or construct a document object model (DOM) tree representing the various components of the resource associated with the landing page URL.
- In some implementations, the content item data may include image data, color data, text data, logo data, etc. In some implementations, an image module may parse the DOM tree of the resource associated with the landing page URL to identify and extract images and image metadata (e.g., image URL, display position, display size, alt text, etc.) for the image data. In some instances, a color module may use the snapshot image and/or DOM tree of the resource associated with the landing page URL to select colors for color data for the content item to be generated. A text module may be configured to automatically generate textual data for the content item (e.g., a textual description, a headline, etc.), such as by using the DOM tree or snapshot image of the resource associated with the landing page URL to create a summary of the text displayed on the resource associated with the landing page URL. In still further instances, logo data for one or more logos may be extracted using the DOM tree or snapshot image of the resource associated with the landing page URL. A logo image may be a trademark, a business logo, a product logo, a company logo, or any other image associated with a particular product, service, or organization. In some implementations, the content item data, such as image data, color data, text data, logo data, etc., may be retrieved from a database or received from a third-party content provider for the generated content item.
- In some implementations, contextual data may be included with the landing page URL, the first dimensional value, and/or the second dimensional value. The contextual data may include device type data, network connection type data, network connection speed data, etc. As will be described in greater detail herein, the contextual data may be utilized to select content item data for a generated content item to tailor the generated content item based on the contextual data. For instance, the contextual data may include data indicative of a WiFi network connection type. The selected content data for the content item to be generated may include larger images, high definition video, etc. In another instance, the contextual data may include data indicative of a 2 G network connection type. The selected content data for the content item to be generated may instead include smaller images, low definition video, etc. or may omit one or more elements from the content item to reduce the amount of data for the content item. In other instances, the selection of content item data may also be based on the first dimensional value and second dimensional value. For instance, an image for the content item may be selected that has a similar aspect ratio to the content item to be generated.
- The one or more content item templates may be stored in a content item template database and retrieved responsive to a request for one or more content item templates from a content item generation system. The content item templates define the elements and arrangement of elements for a content item to be generated from the content item template. In some implementations, the one or more content item templates may be a constrained XML configuration file that defines one or more elements of the content item template. Each content item template can define one or more content item components for the content item template. Each content item component can include attributes, such as a name, a type, a priority, and a weight. The name attribute may be a designer-defined name to reference the content item component. The type attribute may be a designer-selected content item type, such as a headline, logo, product, description, button, etc., that is associated with a default priority and/or a default weight. The priority attribute may be a designer-defined value that may be used to prioritize the removal of elements of the content item template. In some implementations, the lower the value, the higher the priority with a 0 value for elements that cannot be removed from the generated content item. The weight attribute may be a designer-defined value that may be used to prioritize the growth of elements of the content item when additional space is available.
- The content item template further includes one or more templates for content items that utilize one or more of the content item components to define one or more elements for a layout for a content item. In some instances, the content item template may include one or more rendering boxes for the elements. Each rendering box and/or element includes one or more of the content item components, and at least two anchors defining the arrangement of the element relative to another element and/or relative to the content item itself (e.g., a button element may be defined by a right anchor relative to a right edge of the content item and a bottom anchor relative to a bottom edge of the content item).
- An anchor is used to describe a relationship between two elements of the content item template or between an element and the content item to be generated from the content item template. An anchor is defined by a reference (e.g., another element) or a distance (e.g., a fixed distance such as pixels (px) or a relative distance such as 10%) to the content item itself.
- Using one or more content item templates and the content item data, a content item generation system and/or a content item generation script may generate and score content items for each content item template for a given set of dimensions, such as the first dimensional value and the second dimensional value, to maximize space utilization. The content item generation system and/or a content item generation script may parse a layout configuration file of a content item template to determine layout element data for one or more elements of the content item template. The content item generation system and/or a content item generation script may then determine a placeholder for each element of the one or more elements based on the anchors of the layout element data, the dimensional values for the content item to be generated, and the content item data. The content item generation system and/or a content item generation script may utilize one or more element renderers to determine an initial space allocation for each element of the one or more elements based on the placeholder.
- The content item generation system and/or a content item generation script may determine a final space allocation for each element of the one or more elements based on the initial space allocation and modifying any elements by using a growth function to expand the initial space allocation to maximize the space utilization of the content item. The content item generation system and/or a content item generation script may then determine if any conflicts exist for the content item based on the determined final space allocations. Such conflicts may include overlap of elements, overflow of an element beyond the dimensions of the content item, insufficient margin, text truncation, and/or other content item template-specific conflicts.
- If a conflict exists, the content item generation system and/or a content item generation script may eliminate an element from the one or more elements of the content item template and return to determine the placeholders based on the reduced set of elements. The element that is removed from the one or more elements may be based on the priority values of the elements (e.g., removing the element with the greatest priority value indicative of the element being lower in importance to the content item template). In some implementations, the element determined to be removed may be indicated as a required element based on the layout element data. In such an instance, the content item generation system and/or a content item generation script may select a new content item template, parse the template, and proceed to generate a content item using the new template. In other instances, the content item generation system and/or a content item generation script may halt generation of the content item and output an error (e.g., if no other content item templates may be used).
- If no conflict exists, then the content item generation system and/or content item generation script may determine a score for the content item, in some implementations. The score for the content item may be based on the number of elements in the generated content item compared to the number of elements of the content item template, the number of unused pixels, an average number of unused pixels per vertical or horizontal line, weightings for one or more elements, etc. In some implementations, the content item generation system and/or content item generation script may generate several content items, each having an associated score, and the content item generation system may rank the scores and select the highest-scoring generated content item. In some implementations, data to display the selected highest-scoring generated content item may be outputted from the content item generation system to a client device to display the generated content item with a first-party content provider resource. In other implementations, the data to display the content item may be utilized by the content item generation script to display the generated content item on a display of the client device.
- In other implementations, layout data and/or data to display the highest-scoring generated content item may be stored in a database to be output at a later time. For instance, for each content item template, layout data may be generated for a predetermined set of content item slot dimensions, such as common content item slot dimensions of 300 pixels (px) by 250 px, 336 px by 280 px, 970 px by 100 px, 160 px by 600 px, 320 px by 50 px, etc. The layout data may be generated using a real web browser executing on a computing device, such as a server, for each of the predetermined set of content item slot dimensions. Thus, when a request is received having content item slot dimensions corresponding to one of the predetermined set of content item slot dimensions, then the layout data for the one of the predetermined set of content item slot dimensions may be retrieved and transmitted to a client device with the content item data for the content item to be displayed on a display of the client device. A script executing on the client device may then generate the display data for displaying the content item on the client device using the layout data and the content item data.
- In still further implementations, all or a subset of the generated content items and the associated scores may be stored in a database. In still other implementations, data for all or a subset of the generated content items and the associated scores may be output to a user interface of a computing device of the third-party content provider for selection. For instance, the content item generation system may be integrated into a content item generation user interface for a third-party content provider. Responsive to input of a landing page URL and dimensions for a desired content item from the third-party content provider, the content item generation system may output a set of generated content items and associated scores such that the third-party content item provider may select a generated content item, even if the generated content item does not have the highest score.
- While the foregoing has provided an overview of automatically generating a content item using arbitrary dimensions, the following provides more details regarding various implementations.
-
FIG. 1 is a block diagram of an implementation of asystem 100 for providing information via at least one computer network such as thenetwork 106. Thenetwork 106 may include a local area network (LAN), wide area network (WAN), a telephone network, such as the Public Switched Telephone Network (PSTN), a wireless link, an intranet, the Internet, or combinations thereof. Thesystem 100 can also include at least one data processing system, such as a contentitem selection system 108. The contentitem selection system 108 can include at least one logic device, such as a computing device having a data processor, to communicate via thenetwork 106, for instance with aresource server 104, aclient device 110, and/or a third-party content server 102. The contentitem selection system 108 can include one or more data processors, such as a content placement processor, configured to execute instructions stored in a memory device to perform one or more operations described herein. In other words, the one or more data processors and the memory device of the contentitem selection system 108 may form a processing module. The processor may include a microprocessor, an application-specific integrated circuit (ASIC), a field-programmable gate array (FPGA), etc., or combinations thereof. The memory may include, but is not limited to, electronic, optical, magnetic, or any other storage or transmission device capable of providing processor with program instructions. The memory may include a floppy disk, compact disc read-only memory (CD-ROM), digital versatile disc (DVD), magnetic disk, memory chip, read-only memory (ROM), random-access memory (RAM), Electrically Erasable Programmable Read-Only Memory (EEPROM), erasable programmable read only memory (EPROM), flash memory, optical media, or any other suitable memory from which processor can read instructions. The instructions may include code from any suitable computer programming language such as, but not limited to, C, C++, C#, Java®, JavaScript®, Perl®, HTML, XML, Python®, and Visual Basic®. The processor may process instructions and output data to effect presentation of one or more content items to theresource server 104 and/or theclient device 110. In addition to the processing circuit, the contentitem selection system 108 may include one or more databases configured to store data. The contentitem selection system 108 may also include an interface configured to receive data via thenetwork 106 and to provide data from the contentitem selection system 108 to any of the other devices on thenetwork 106. The contentitem selection system 108 can include a server, such as an advertisement server or otherwise. - The content
item selection system 108 may include a contentitem generation system 120. In some implementations, the contentitem generation system 120 may part of the same system as the contentitem selection system 108 or the contentitem generation system 120 may be separate from the contentitem selection system 108. For instance, the contentitem generation system 120 may be a sub-system of the contentitem selection system 108 or the contentitem generation system 120 may be a separate system in communication with the contentitem selection system 108. In implementations where the contentitem generation system 120 is separate from the contentitem selection system 108, the contentitem generation system 120 may be constructed in a similar manner to the contentitem selection system 108 described herein. - In still further implementations, the content
item selection system 108 may be omitted and the contentitem generation system 120 may be connected to thenetwork 106 to communicate with the third-party content server 102,resource server 104, and/orclient device 110. - The
client device 110 can include one or more devices such as a computer, laptop, desktop, smart phone, tablet, personal digital assistant, set-top box for a television set, a smart television, or server device configured to communicate with other devices via thenetwork 106. The device may be any form of electronic device that includes a data processor and a memory. The memory may store machine instructions that, when executed by a processor, cause the processor to perform one or more of the operations described herein. The memory may also store data to effect presentation of one or more resources, content items, etc. on the computing device. The processor may include a microprocessor, an application-specific integrated circuit (ASIC), a field-programmable gate array (FPGA), etc., or combinations thereof. The memory may include, but is not limited to, electronic, optical, magnetic, or any other storage or transmission device capable of providing processor with program instructions. The memory may include a floppy disk, compact disc read-only memory (CD-ROM), digital versatile disc (DVD), magnetic disk, memory chip, read-only memory (ROM), random-access memory (RAM), Electrically Erasable Programmable Read-Only Memory (EEPROM), erasable programmable read only memory (EPROM), flash memory, optical media, or any other suitable memory from which processor can read instructions. The instructions may include code from any suitable computer programming language such as, but not limited to, ActionScript®, C, C++, C#, HTML, Java®, JavaScript®, Perl®, Python®, Visual Basic®, and XML. - The
client device 110 can execute a software application (e.g., a web browser or other application) to retrieve content from other computing devices overnetwork 106. Such an application may be configured to retrieve first-party content from aresource server 104. In some cases, an application running on theclient device 110 may itself be first-party content (e.g., a game, a media player, etc.). In one implementation, theclient device 110 may execute a web browser application which provides a browser window on a display of the client device. The web browser application that provides the browser window may operate by receiving input of a uniform resource locator (URL), such as a web address, from an input device (e.g., a pointing device, a keyboard, a touch screen, or another form of input device). In response, one or more processors of the client device executing the instructions from the web browser application may request data from another device connected to thenetwork 106 referred to by the URL address (e.g., a resource server 104). The other device may then provide web page data and/or other data to theclient device 110, which causes visual indicia to be displayed by the display of theclient device 110. Accordingly, the browser window displays the retrieved first-party content, such as web pages from various websites, to facilitate user interaction with the first-party content. - The
resource server 104 can include a computing device, such as a server, configured to host a resource, such as a web page or other resource (e.g., articles, comment threads, music, video, graphics, search results, information feeds, etc.). Theresource server 104 may be a computer server (e.g., a file transfer protocol (FTP) server, file sharing server, web server, etc.) or a combination of servers (e.g., a data center, a cloud computing platform, etc.). Theresource server 104 can provide resource data or other content (e.g., text documents, PDF files, and other forms of electronic documents) to theclient device 110. In one implementation, theclient device 110 can access theresource server 104 via thenetwork 106 to request data to effect presentation of a resource of theresource server 104. - One or more third-party content providers may have third-
party content servers 102 to directly or indirectly provide data for third-party content items to the contentitem selection system 108 and/or to other computing devices vianetwork 106. The content items may be in any format that may be presented on a display of aclient device 110, for instance, graphical, text, image, audio, video, etc. The content items may also be a combination (hybrid) of the formats. The content items may be banner content items, interstitial content items, pop-up content items, rich media content items, hybrid content items, Flash® content items, cross-domain iframe content items, etc. The content items may also include embedded information such as hyperlinks, metadata, links, machine-executable instructions, annotations, etc. In some instances, the third-party content servers 102 may be integrated into the contentitem selection system 108 and/or the data for the third-party content items may be stored in a database of the contentitem selection system 108. - In an implementation, the content
item selection system 108 can receive, via thenetwork 106, a request for a content item to present with a resource. The received request may be received from aresource server 104, aclient device 110, and/or any other computing device. Theresource server 104 may be owned or ran by a first-party content provider that may include instructions for the contentitem selection system 108 to provide third-party content items with one or more resources of the first-party content provider on theresource server 104. In one implementation, the resource may include a web page. - The
client device 110 may be a computing device operated by a user (represented by a device identifier), which, when accessing a resource of theresource server 104, can make a request to the contentitem selection system 108 for content items to be presented with the resource, for instance. The content item request can include requesting device information (e.g., a web browser type, an operating system type, one or more previous resource requests from the requesting device, one or more previous content items received by the requesting device, a language setting for the requesting device, a geographical location of the requesting device, a time of a day at the requesting device, a day of a week at the requesting device, a day of a month at the requesting device, a day of a year at the requesting device, etc.) and resource information (e.g., URL of the requested resource, one or more keywords of the content of the requested resource, text of the content of the resource, a title of the resource, a category of the resource, a type of the resource, etc.). The information that the contentitem selection system 108 receives can include a HyperText Transfer Protocol (HTTP) cookie which contains a device identifier (e.g., a random number) that represents theclient device 110. - In some implementations, the device information and/or the resource information may be appended to a content item request URL (e.g., contentitem.item/page/contentitem?devid=abc123&devnfo=A34r0). In some implementations, the device information and/or the resource information may be encoded prior to being appended to the content item request URL. The requesting device information and/or the resource information may be utilized by the content
item selection system 108 to select third-party content items and/or a third-party content provider for a content item to be served with the requested resource and presented on a display of aclient device 110. As will be described in greater detail below, in some implementations, the contentitem generation system 120 may generate one or more content items responsive to the request for a content item. - In some instances, a resource of a
resource server 104 may include a search engine feature. The search engine feature may receive a search query (e.g., a string of text) via an input feature (an input text box, etc.). The search engine may search an index of documents (e.g., other resources, such as web pages, etc.) for relevant search results based on the search query. The search results may be transmitted as a second resource to present the relevant search results, such as a search result web page, on a display of aclient device 110. The search results may include web page titles, hyperlinks, etc. One or more third-party content items may also be presented with the search results in a content item slot of the search result web page. Accordingly, theresource server 104 and/or theclient device 110 may request one or more content items from the contentitem selection system 108 to be presented in the content item slot of the search result web page. The content item request may include additional information, such as the user device information, the resource information, a quantity of content items, a format for the content items, the search query string, keywords of the search query string, information related to the query (e.g., geographic location information and/or temporal information), etc. In some implementations, a delineation may be made between the search results and the third-party content items to avert confusion. - In another implementation, the content
item generation system 120 may be utilized to generate one or more content items independent of a request for a content item (e.g., to pre-generate one or more content items). The contentitem generation system 120 may generate the one or more content items responsive to a request from a third-party content provider, such as via the third-party content server 102 and/or aclient device 110 of the third-party content provider. In some implementations, the one or more generated content items and/or layout data for the one or more generated content items may be stored in a database to be selected and served responsive to a subsequent content item request. In some instances, the one or more generated content items may be presented in a user interface to the third-party content provider such that the third-party content provider may select one or more of the generated content items to be saved and stored in a database. - While the foregoing has provided an overview of a
system 100 for selecting and serving content items toclient devices 110 and/or generating content items using a contentitem generation system 120, implementations for generating content items using arbitrary dimensional data will now be described in greater detail. - Referring to
FIG. 2 , the contentitem generation system 120 includes alayout generator 200 and ascorer 208. As will be described in greater detail in reference toFIGS. 3-11 , thelayout generator 200 is configured to receive content item generation data, one or more content item templates, and content item data to generate one or more content items and/or layout data for one or more content items based on the one or more content item templates. Ascorer 208 is configured to generate a score for the layouts of the generated one or more content items. In some implementations, the contentitem generation system 120 is configured to rank the layouts of the generated one or more content items based on the score and select the highest-scoring layout. The contentitem generation system 120 may then transmit data to display the highest-scoring layout for the generated content item responsive to the content item generation data from thecontent item requestor 202. In some implementations, the contentitem generation system 120 may store data to display the highest-scoring generated content item and/or layout data for the highest-scoring generated content item in a content item database 210 (shown in phantom). In some instances, layout data for each of a predetermined set of content item slot dimensions may be generated and stored in acontent item database 210. The predetermined set of content item slot dimensions may be common content item slot dimensions, such as 300 pixels (px) by 250 px, 336 px by 280 px, 970 px by 100 px, 160 px by 600 px, 320 px by 50 px, etc. The layout data may be generated using a web browser executing on the contentitem generation system 120 for each of the predetermined set of content item slot dimensions. Thus, when a request is received having content item slot dimensions as content item generation data that corresponds to one of the predetermined set of content item slot dimensions, then the layout data for the predetermined set of content item slot dimensions may be retrieved and transmitted to a client device with the content item data for the content item to be displayed on a display of the client device. - In still further implementations, the content
item generation system 120 may output data to display the generated one or more content items and the associated score. The data to display the generated one or more content items and the associated score may be presented in a user interface of the content item requestor 202 (or a device in communication therewith). In some implementations, a user of the device of the content item requestor 202 may select one or more of the generated content items using the user interface to be stored in a database, such as thecontent item database 210. The generated one or more content items may be HTML content items in some implementations. - The content item generation data may include a first dimensional value, a second dimensional value, and/or a landing page URL from a
content item requestor 202. In some implementations, the content item requestor 202 may be the contentitem selection system 108 for generating a content item responsive to a content item request. In other implementations, the content item requestor 202 may be a third-party content provider generating a content item independent of a content item request. - The content item generation system may transmit the landing page URL to a landing
page analysis system 204 for retrieving content item data for generating content items. The landingpage analysis system 204 may include a resource renderer capable of interpreting a resource associated with the landing page URL and creating a visual representation (e.g., an image, a display, etc.) thereof. For instance, the resource of the landing page URL may include marked-up content (e.g., HTML, XML, image URLs, etc.) as well as formatting information (e.g., CSS, XSL, etc.). The resource renderer may download the marked-up content and formatting information and render the resource associated with the landing page URL according to World Wide Web Consortium (W3C) standards. The resource renderer may thus create a “snapshot image” of the resource associated with the landing page URL and/or construct a document object model (DOM) tree representing the various components of the resource associated with the landing page URL. - The snapshot image may be a visual representation of the resource associated with the landing page URL. The snapshot image may illustrate the visual appearance of the resource associated with the landing page URL as presented on a user interface of a client device (e.g., an electronic display screen, a computer monitor, a touch-sensitive display, etc.) after rendering the resource associated with the landing page URL. The snapshot image may include color information (e.g., pixel color, brightness, saturation, etc.) and style information (e.g., square corners, rounded edges, modern, rustic, etc.) for the resource associated with the landing page URL. In some implementations, the snapshot image may be a picture file having any viable file extension (e.g. jpg, .png, .bmp, etc.).
- The DOM tree may be a hierarchical model of the resource associated with the landing page URL. The DOM tree may include image information (e.g., image URLs, display positions, display sizes, alt text, etc.), font information (e.g., font names, sizes, effects, etc.), color information (e.g., RGB color values, hexadecimal color codes, etc.) and text information for the resource associated with the landing page URL. The landing
page analysis system 204 may store the snapshot image and/or DOM tree in a memory for subsequent use. - In some implementations, the content item data may include image data, color data, text data, logo data, etc. In some implementations, an image module may parse the DOM tree of the resource associated with the landing page URL to identify and extract images and image metadata (e.g., image URL, display position, display size, alt text, etc.) for the image data. The image metadata may be used to determine an on-page saliency for each image displayed on the resource associated with the landing page URL. In some implementations, the image module extracts images and image metadata from other data sources (e.g., a repository of previously-used or approved images, a repository of stock images, etc.).
- In some implementations, the image module may analyze the extracted images to detect the visual content of the images. Detecting visual content may include, for instance, determining a location of a salient object represented in the image, determining a location of text in the image, and/or determining whether the image can be cropped or processed to improve the visual impact of the image. In some implementations, the image module analyzes the extracted images to detect the semantic content of the images. Detecting semantic content may include, for instance, identifying an object depicted in an image or a meaning conveyed by an image. The image module may assign one or more labels or keywords to an image describing the semantic content thereof. The labels and/or keywords can be used to determine a relevancy of the image to a particular third-party content item.
- The image module may process the images to prepare the images for use in a third-party content item. The image processing may include cropping the images to emphasize salient objects or to remove text, resizing the images, formatting the images, or otherwise adjusting the images.
- The image module may filter and rank images based on various attributes of the images. The image module may determine a quality score and/or on-page salience score for each of the images. The quality score for an image may indicate an aesthetic appearance of the image based on various image attributes. The salience score may indicate a prominence with which an extracted image is displayed on the resource associated with the landing page URL. The image module may discard or filter images that have a display size less than a threshold display size or a quality score less than a threshold quality score. In some implementations, the image module of the landing
page analysis system 204 ranks the images based on the salience scores associated with the images. The image module may select the top ranking image or images for inclusion in the content item data. In some implementations, the image module may determine a data size for each image to determine larger data sized images and smaller data sized images. - In some instances, a color module of the landing
page analysis system 204 may use the snapshot image and/or DOM tree of the resource associated with the landing page URL to select colors for the content item data. For instance, the color module may select colors for the background, headline, description, button background, and/or button text of the content item. The color scheme may include one or more colors corresponding to the colors displayed on the resource associated with the landing page URL In some implementations, the color module may extracts several color clusters from the snapshot image using a clustering technique (e.g., k-means clustering). - A text module may be configured to automatically generate textual data for the content item (e.g., a textual description, a headline, etc.), such as by using the DOM tree or snapshot image of the resource associated with the landing page URL to create a summary of the text displayed on the resource associated with the landing page URL. In some implementations, the text module may retrieve textual data from other data sources in addition to or in lieu of the resource associated with the landing page URL. For instance, text module 216 may receive textual data from user-created reviews of a business, product, or service. The reviews may be retrieved from an Internet resource (e.g., website) on which users are permitted to post or submit comments, reviews, or other text related to a particular business, product, or service. In some implementations, the text module may identify and extract a snippet of a review that includes a positive phrase for inclusion in the content item data. In some implementations, the text module may identify a font of the text and include data indicative of the font in the content item data.
- In still further instances, logo data for one or more logos may be extracted using the DOM tree or snapshot image of the resource associated with the landing page URL. A logo image may be a trademark, a business logo, a product logo, a company logo, or any other image associated with a particular product, service, or organization. In some implementations, the landing
page analysis system 204 may query a databases to identify logo images based on the landing page URL and/or a domain name of the landing page URL such that logo information may be readily retrieved by specifying a URL. - In some implementations, such as when a third-party content provider is utilizing the content
item generation system 120 to generate one or more content items independent of a content item request, the third-party content provider may transmit content item data to the contentitem generation system 120 such that the landingpage analysis system 204 does not analyze a resource associated with the landing page URL to determine and retrieve content item data. - In some implementations, the content item generation data may also include contextual data. The contextual data may include device type data, network connection type data, network connection speed data, etc. The contextual data may be utilized to select content item data for a generated content item to tailor the generated content item based on the contextual data. For instance, the contextual data may include data indicative of a WiFi network connection type. The image module may select or rank larger data size images, high definition video, etc. higher based on the contextual data. In another instance, the contextual data may include data indicative of a 2 G network connection type. The image module may select or rank smaller data size images, low definition video, etc. lower based on the contextual data. In other instances, the image module may select or rank images based on the first dimensional value and second dimensional value. For instance, the image module may select or rank an image based on a similarity of an aspect ratio of the first and second dimensional values to an aspect ratio of one or more candidate images.
- Still referring to
FIG. 2 , the contentitem generation system 120 receives one or more content item templates from a contentitem template database 206. In other instances, the contentitem generation system 120 may receive one or more content item templates from a designer of content item templates. The content item templates define the elements and arrangement of elements for a content item to be generated from the content item template. In some implementations, the one or more content item templates may be a constrained XML configuration file that defines one or more elements of the content item template. Each content item template can define one or more content item components for the content item template. Each content item component can include attributes, such as a name, a type, a priority, and a weight. The name attribute may be a designer-defined name to reference the content item component. The type attribute may be a designer-selected content item type, such as a headline, logo, product image, description, button, etc., that is associated with a default priority and/or a default weight. The priority attribute may be a designer-defined value that may be used to prioritize the removal of elements of the content item template. In some implementations, the lower the value, the higher the priority with a 0 value for elements that cannot be removed from the generated content item. The weight attribute may be a designer-defined value that may be used to prioritize the growth of elements of the content item when additional space is available. - The content item template further includes one or more templates for content items that utilize one or more of the content item components to define one or more elements for a layout for a content item. In some instances, the content item template may include one or more rendering boxes for the elements. Each rendering box and/or element includes one or more of the content item components, and at least two anchors defining the arrangement of the element relative to another element and/or relative to the content item itself (e.g., a button element may be defined by a right anchor relative to a right edge of the content item and a bottom anchor relative to a bottom edge of the content item).
- In some implementations, the content
item generation system 120 may retrieve all of the content item templates from the contentitem template database 206 as a set of content item templates. In other implementations, the contentitem generation system 120 may filter the content item templates of the contentitem template database 206 for a subset of content item templates. In still other implementations, the contentitem generation system 120 may retrieve a single content item template, such as in response to a selection of a third-party content provider for a content item slot. - In some implementations, the content
item generation system 120 may use the first dimensional value and the second dimensional value to determine the set of content item templates to generate content items. For instance, if the first dimensional value is 580 pixels (i.e., 580 pixels in width) and the second dimensional value is 100 pixels (i.e., 100 pixels in height), then a content item template having vertically stacked image, text, logo, and button elements may not be suitable for such dimensions given the limited vertical height dimension. Accordingly, the contentitem generation system 120 may exclude such content item templates from the set of content item templates retrieved from the contentitem template database 206. In some implementations, the content item templates may be annotated with one or more values indicative of a minimum and/or maximum aspect ratio for a generated content item from the content item template. The contentitem generation system 120 may determine a ratio of the first dimensional value to the second dimensional value and use the determined ratio to filter content item templates for which the determined ratio is below the minimum aspect ratio or above the maximum aspect ratio. Thus, content item templates may be excluded based on the first dimensional value and second dimensional value. - In some implementations, the content item templates may be filtered based on the content item data in addition to or in lieu of the dimensional value filtering. For instance, if the content item data does not include text data, then the content
item generation system 120 may retrieve only content item templates that do not include a text element. The content item templates may be annotated with one or more values indicative of the elements included in the content item template for such filtering. - Using the content item generation data, the set of one or more content item templates, and the content item data, the
layout generator 200 generates one or more content items as described in greater detail herein. In other implementations, thelayout generator 200 may be a script may be transmitted to a client device with the content item generation data, a selected content item template, and selected content item data to generate a content item. Thus, the contentitem generation system 120 may receive the content item generation data, select a content item template, and select content item data for the script to generate a content item. - Referring to
FIG. 3 , thelayout generator 200 includes alayout parser 220, ananchor manager 222, one ormore element renderers 224, aspace manager 226, and aconflict resolver 228. Thelayout parser 220 receives a content item template and parses the content item template into one or more layout elements and/or rendering boxes and associated data for the one or more layout elements and/or rendering boxes (e.g., component type, component arrangement, anchor data, element or rendering box name, priority value, weight value, etc.). Thelayout parser 220 will be described in greater detail in reference toFIG. 5 . - The
anchor manager 222 receives a set of one or more parsed layout elements and/or rendering boxes and associated data and determines a placeholder for each of the set of one or more parsed layout elements and/or rendering boxes based on the associated data for the one or more elements, the first dimensional value and second dimensional value, and the content item data. The placeholder is the maximum space that an element or rendering box can occupy in the content item based on the anchors for the element, the dimensions of the content item to be generated, and the content item data to be used to populate the element. Because some elements or rendering boxes may depend from other elements or rendering boxes based on the anchors, theanchor manager 222 performs a topological sorting to determine an order in which to determine the placeholders for the one or more elements or rendering boxes. That is, if an element, such as a logo element, includes an anchor referencing another element, such as a button element, then the placeholder for the button element may need to be determined prior to determining the placeholder for logo element. If the button element further includes an anchor to another element, such as an image element, then the placeholder for the image element may need to be determined prior either of the placeholders for the button element or the logo element. Thus, a topological sorting is performed to sort the layout elements or rendering boxes based on their anchor dependencies. A placeholder for each element or rendering box of the sorted list of elements and/or rendering boxes may be determined using theanchor manager 222. Theanchor manager 222 outputs the placeholders for each element and/or rendering box to acorresponding element renderer 224. In some implementations, theanchor manager 222 may omit one or more elements and/or rendering boxes to reduce the amount of data for the content item based on received contextual data. For instance, if the contextual data includes network connection type data indicative of a low throughput or low speed network connection type, such as a 2 G connection type, then theanchor manager 222 can exclude one or more elements and/or rendering boxes based on the priority attributes of the various elements. Theanchor manager 222 will be described in greater detail in reference toFIG. 6 . - The element renderers 224 receive the placeholders for each corresponding element and/or rendering box and determine an initial space allocation based on the placeholders and the one or more anchors for each element or rendering box. The element renderers 224 may include an image element renderer, a text element renderer, and a button element renderer. The initial space allocation is the space an element can occupy in the layout of the content item based on the placeholder and subject to the one or more anchors of the element or rendering box. In some implementations, an image analyzer 230 (shown in
FIG. 4 ), may be used with animage element renderer 224 to determine salient portions of an image and/or perform smart cropping of an image to determine the initial space allocation. The element renderers 224 will be described in greater detail in reference toFIG. 8 . - The
space manager 226 receives the initial space allocations from the one ormore element renderers 224 and determines a final space allocation for each element and/or rendering box for the generated content item. Thespace manager 226 determines a final space allocation for each element and/or rendering box based on the corresponding initial space allocation, determines a minimum space allocation for each element and/or rendering box based on the corresponding initial space allocation, the one or more anchors, and the weight attribute, and modifies the space allocation of each element and/or rendering box using a growth function to utilize any remaining space subject to the weight attribute and the one or more anchors. Thespace manager 226 will be described in greater detail in reference toFIGS. 8-9B . - The
conflict resolver 228 receives the final space allocations for the one or more elements and/or rendering boxes of the content item and determines if any conflicts exist based on the final space allocations. Such conflicts may include overlap of elements and/or rendering boxes, overflow of an element or rendering box beyond the dimensions of the content item, insufficient margin, text truncation, and/or other content item template-specific conflicts. If a conflict exists, then theconflict resolver 228 may eliminate an element from the set of one or more elements and/or rendering boxes and return the new set of elements and/or rendering boxes to theanchor manager 222 to determine the placeholders based on the new set of elements and/or rendering boxes. The element that is removed from the one or more elements and/or rendering boxes may be based on the priority attribute of the elements (e.g., removing the element with the highest priority attribute value indicative of the element being lower in importance to the content item template). In some implementations, if the element determined to be removed is indicated as a required element (e.g., has a priority attribute value of 0), then theconflict resolver 228 may send data to thelayout parser 220 to parse a new content item template from the set of content item templates or theconflict resolver 228 may halt generation of the content item and output an error (e.g., if no other content item templates may be used and/or if a single template is to be used). In some implementations, theconflict resolver 228 may receive one or more rules for the conflicts from a conflict system 232 (shown inFIG. 4 ). Theconflict system 232 may include a margin definer to define a margin needed for each element and/or rendering box based on the content item size. Theconflict system 232 may further include conflict rules defining when text truncation may occur based on the content item size and/or other content item template-specific conflict rules. -
FIG. 4 depicts an overview of a process diagram of an implementation of a process flow for thelayout generator 200 andscorer 208 ofFIG. 2 that may be implemented by a contentitem generation system 120. The details of the process flow will be described in greater detail in reference toFIGS. 5-10 . - Referring the
FIG. 5 , thelayout parser 220 receives a set of one or more layout templates from a contentitem template database 206. A content item template defines one or more elements and/or rendering boxes and an arrangement of the one or more elements and/or rendering boxes for a content item to be generated from the content item template. In some implementations, the one or more content item templates may be constrained XML configuration files that define one or more elements and/or rendering boxes of a corresponding content item template. In other implementations, other mark-up languages may be used for the one or more content item templates. Each content item template can define one or more content item components for the content item template. Each content item component can include attributes, such as a name, a type, a priority, and a weight. The name attribute may be a designer-defined name to reference the content item component. The type attribute may be a designer-selected content item type, such as a headline, logo, product image, description, button, etc., that is associated with a default priority and/or a default weight. The priority attribute may be a designer-defined value that may be used to prioritize the removal of elements of the content item template. In some implementations, the lower the value, the higher the priority with a 0 value for elements that cannot be removed from the generated content item. The weight attribute may be a designer-defined value that may be used to prioritize the growth of elements of the content item when additional space is available. - An implementation of defined content item components for a content item template XML configuration file may be defined by the following:
-
elements: { product1image: ‘product,0,2’, logoimage: ‘logo,0’, text1: ‘headline’, text2: ‘description,0’, clicktext: ‘button,0’ }, - where product1image content item component has a type attribute of “product,” a priority attribute of 0, and a weight attribute of 2; the logoimage content item component has a type attribute of “logo” and a priority attribute of 0; the text1 content item component has a type attribute of “headline;” the text2 content item component has a type attribute of “description” and a priority attribute of 0; and the clicktext content item component has a type attribute of “button” and a priority attribute of 0. Thus, the defined content item components may be included as one or more elements for a content item template and/or in one or more rendering boxes of a content item template of the content item template XML configuration file.
- The content item template further includes one or more templates for content items that utilize one or more of the content item components to define one or more elements for a layout for a content item. In some instances, the content item template may include one or more rendering boxes for the elements. Each rendering box and/or element includes one or more of the content item components, and at least two anchors defining the arrangement of the element and/or rendering box relative to another element and/or rendering box and/or relative to the content item itself (e.g., a button element may be defined by a right anchor relative to a right edge of the content item and a bottom anchor relative to a bottom edge of the content item).
- An implementation of a content item template XML configuration file for a banner type content item template that utilizes the aforementioned content item components may be defined by the following:
-
banner: { productimage:{ spec: ‘product1image, left’, left: ‘0’, top: ‘0’, right: ‘50%’, bottom: ‘0’ }, textbox: { spec: ‘vertical-list, -text1-text2-, top’, top: ‘0’, left: ‘productimage’, right: ‘logoandbutton’, bottom: ‘0’ }, logoandbutton: { spec: ‘vertical-list, -logoimage-clicktext-, right’, top: ‘0’, left: ‘50%’, bottom: ‘0’ } }, - In the aforementioned banner template, there are three rendering boxes defined for the template. The first rendering box, “productimage,” includes a “spec” attribute that declares that there is a single content item component, “product1image,” that is left-aligned for the first rendering box. The first rendering box also includes four anchors, left, top, right, and bottom, with the left, top, and bottom anchors indicating the first rendering box will be anchored to the left, top, and bottom edges of the content item to be generated. The right anchor includes a relative value, 50%, that indicates the right portion of the first rendering box is to be at 50% of the content item's width away from the right edge of the content item to be generated.
- A second rendering box, “text box,” includes a “spec” attribute that declares that there are two content item components, “text1” and “text2,” that are vertically stacked and have equal spacing, and the second rendering box is top-aligned. The first rendering box also includes four anchors, left, top, right, and bottom, with the top and bottom anchors indicating the first rendering box will be anchored to the top and bottom edges of the content item to be generated. The left anchor includes a reference to the “productimage” first rendering box and the right anchor includes a reference to the “logoandbutton” third rendering box that indicates the left portion of the second rendering box is to be adjacent to the first rendering box and the right portion of the second rendering box is to be adjacent to the third rendering box. The spacing between the second rendering box and the first and third rendering boxes will be optimized by the content
item generation system 120 and/or a content item generation script. - The third rendering box, “logoandbutton,” includes a “spec” attribute that declares that there are two content item components, “logoimage” and “clicktext,” that are vertically stacked and have equal spacing, and the third rendering box is right-aligned. The third rendering box also includes three anchors, left, top, and bottom, with the top and bottom anchors indicating the third rendering box will be anchored to the top and bottom edges of the content item to be generated. The left anchor includes a relative value, 50%, that indicates the left portion of the third rendering box is to be at 50% of the content item's width away from the left edge of the content item to be generated. In some implementations, several content item templates or layouts may be included in a single content item template XML configuration file.
- The
layout parser 220 may receive the content item template XML configuration file and parse the file into the three rendering boxes and further into the various elements for each rendering box. Thelayout parser 220 may also parse the “spec” attribute, components, priority attribute values, associated anchors, and/or the arrangement of the elements for each rendering box. Thelayout parser 220 then sends a set of parsed layout elements and/or rendering boxes and associated data to theanchor manager 222. - Referring to
FIG. 6 , theanchor manager 222 receives the set of parsed layout elements and/or rendering boxes and associated data, the first dimensional value and second dimensional value, and the content item data. Theanchor manager 222 is configured to determine a placeholder for each of the one or more parsed layout elements and/or rendering boxes based on the associated data for the one or more elements, the first dimensional value and the second dimensional value, and the content item data. The placeholder is the maximum space that an element and/or rendering box can occupy in the content item. Because some elements and/or rendering boxes may depend from other elements and/or rendering boxes based on the anchors, theanchor manager 222 performs a topological sorting to determine an order in which to determine the placeholders for the one or more elements and/or rendering boxes. That is, if an element or rendering box, such as the second rendering box for the “textbox” above, includes an anchor referencing another element, such as the first rendering box for the “productimage” and third rendering box for the “logoandbutton”, then the placeholder for the first rendering box and third rendering box may need to be determined prior to determining the placeholder for the second rendering box. In some instances, the topological sorting may also utilize the priority attribute values to determine which placeholder to determine if two or more elements are not dependent upon other elements and/or rendering boxes or depend on elements and/or rendering boxes for which a placeholder has already been determined. - An anchor is used to describe a relationship between two elements and/or rendering boxes of the content item template or between an element and/or rendering box and the content item to be generated from the content item template. An anchor is defined by a reference (e.g., another element, rendering box, or the content item itself), a distance (e.g., a fixed distance, such as pixels (px), or a relative size of the reference, such as 10% of the size of the content item), and a type (e.g., an edge of the element from which the distance to the reference is measured, such as top, bottom, left, or right). In some implementations, the
space manager 226 may increase the space allocation of an element and/or rendering box to fit the maximum width and/or height possible of a placeholder for the element and/or rendering box based on the weight attribute and any available space for the element and/or rendering box given the first and second dimensional values for the content item slot. If thespace manager 226 cannot increase the space allocation of the element and/or rendering box to the maximum width and/or height of the placeholder for the element and/or rendering box, then thespace manager 226 will fit the element and/or rendering box in the center of the placeholder and return the extra space to buffer for other elements and/or rendering boxes of the content item. - Based on the dependency of the anchors, the topological sorting performed by the
anchor manager 222 may determine that the placeholders for the “productimage” and “logoandbutton” rendering boxes may be determined first based on the priority attribute values and the dependency of the “textbox” rendering box on the “productimage” and “logoandbutton” rendering boxes. Theanchor manager 222 may begin with the “productimage” rendering box over the “logoandbutton” rendering box based on the “productimage” rendering box having all four anchors defined. - The
anchor manager 222 may determine the placeholders for each element and/or rendering box based on the topological sorting. For a content item to be generated having a first dimensional value of 200 pixels wide and a second dimensional value of 200 pixels high and the image data for a product image element of the “productimage” rendering box has dimensions of 100 pixels wide by 200 pixels high, then theanchor manager 222 can determine a placeholder for the “productimage” rendering box as {left:0, top:0, bottom:200, right:100}. If the image data for the logo image element of the “logoandbutton” rendering box has dimensions of 30 pixels wide by 30 pixels high and the button element of the “logoandbutton” rendering box is also 30 pixels wide by 30 pixels high, then theanchor manager 222 can determine a placeholder for the “logoandbutton” rendering box as {left:170, top:70, bottom:130, right:200}. Theanchor manager 222 can determine a placeholder for the “textbox” rendering box as {left:100, top:0, bottom:200, right:170}. In some instances, theanchor manager 220 may generate placeholders for each element in addition to or in lieu of the rendering boxes. Theanchor manager 222 sends the generated placeholders for each element and/or rendering boxes to acorresponding element renderer 224. - Referring to
FIG. 7 , the element renderers 224 receive the placeholder for each corresponding element and/or rendering box that has the corresponding element from theanchor manager 222 and determine an initial space allocation based on the placeholder of the one or more anchors for each element and/or rendering box. The element renderers 224 may include image element renderers, text element renderers, and button element renderers. - An
image element renderer 224 may be allocated for each image element of a content item template. Animage element renderer 224 determines an initial space allocation for a corresponding image element of the content item. The initial space allocation may be determined based on the original aspect ratio and size of an image for the image element. For instance, theimage renderer 224 may limit the change in aspect ratio of the image to a predetermined range, such as 0.8, inclusive to 1.25, inclusive. For instance, if an image element has a placeholder of {left:0, top:0, bottom:200, right:100} and the image is 200 pixels high by 100 pixels wide, then the initial space allocation may be determined to be {left:0, top:0, bottom:200, right:[80, 125]}, where the width may be the range of 80 pixels, inclusive, to 125 pixels, inclusive. A final width value or location of the right side of the image element may subsequently be determined by thespace manager 226 for a final space allocation. If both the height and width of the image is less than the dimensions of the initial space allocation, then the image is positioned in the center of the initial space allocation. - A
text element renderer 224 may be allocated for each text element of a content item template. Atext element renderer 224 determines an initial space allocation for a corresponding text element of the content item template. If the sizing of the text for the text element is the same as the initial space allocation, then the text element is the same as the corresponding placeholder for the text element. If sizing of the text is smaller or larger than the initial placeholder, then the determined initial space allocation may include a range based on a minimum font size and a maximum font size. The minimum font size and the maximum font size may be based on the size of the content item to be generated. That is, the font size may be proportional to or otherwise vary with the size of a dimension of the content item to be generated. - A
button element renderer 224 may be allocated for each button element of a content item template. Abutton element renderer 224 determines an initial space allocation for a corresponding button element of the content item template. In some implementations, the placeholder, initial space allocation, and final space allocation for a button may be the same predetermined size based on the first dimensional value and the second dimensional value (e.g., predetermined sizes for buttons may be used). In other implementations, if a size for a button element is a defined size, then the initial space allocation for the button element is the same as the corresponding placeholder for the button element. In some implementations, the size of the button may be flexible, such that the determined initial space allocation for the button may be linearly scaled based on one or more of the other elements, such as an image element or a text element. - The initial space allocations for each element and/or each element of each rendering box of the content item template may be sent to the
space manager 226 to determine a final space allocation for content item to be generated. - Referring to
FIG. 8 , thespace manager 226 receives the initial space allocations from theelement renderers 224 to determine a final space allocation for each element and/or for each element of each rendering box. For each element having the same sizing as the initial space allocation, then thespace manager 226 determines a final space allocation to be the same as the corresponding initial space allocation. For each element that has a differing size than the initial space allocation, thespace manager 226 determines a minimum space allocation for each element based on the corresponding initial space allocation minimum range value or values and modifies the space allocation of each element using a growth function of agrowth module 250 to utilize any remaining space. That is, if all the elements fit for the minimal range value of the corresponding initial space allocation for the element and/or for the rendering box, then thespace manager 226 uses a growth function of thegrowth module 250 for each element and/or each element of a rendering box to increment a dimension of the space allocation of each element by one pixel each iteration until the dimensions of the space allocations cannot incremented further without overlapping another element and/or rendering box. In some implementations, the growth function may increment each element in sequence based on the weight attribute value of the element and/or component. That is, the growth function may increment the dimensions of an element having the lowest numerical weight attribute value first, then the dimensions of an element having the next lowest numerical weight attribute value, etc. until all elements that can be incremented have been incremented. In some implementations, if the numerical weight attribute values are equal, then the growth function may prioritize image elements over text elements and text elements over button elements. The growth function iterates through the eligible elements until the dimensions of the space allocations cannot incremented further without overlapping another element. - In some implementations, the numerical weight attribute value may correspond to the number of pixels to grow the element and/or component for each iteration. For instance, a numerical weight attribute value of 2 may indicate that the element and/or component is to be incremented by 2 pixels while other elements and/or components are incremented by 1 pixel.
-
FIGS. 9A-9B depict an application of the growth function of thegrowth module 250 for acontent item 300 having two elements, animage element 310 and atext element 320. Theimage element 310 is anchored to the left edge of the content item to be generated, but the right anchor can be expanded by the growth function. Thetext element 320 includes is centered in an initial placeholder and both the left and right anchors can be expanded by the growth function. For thecontent item 300 to be generated having a first dimensional value of 200 pixels wide and a second dimensional value of 100 pixels high, an initial space allocation determined for theimage element 310 and/or a rendering box for the image element by animage element renderer 224 may be {left:0, top:0, bottom:100, right:[80,120]} based on a size of the image being 100 pixels by 100 pixels and the anchors for the rendering box for theimage element 310 indicating that the rendering box will be anchored to the left, top, and bottom edges of the content item to be generated. The right anchor may have a relative value, 50%, that indicates the right portion of the first rendering box is to be at 50% of the content item's width away from the right edge of the content item to be generated. An initial space allocation determined for thetext element 320 by atext element renderer 224 may be {left:[80,120], top:0, bottom:100, right:[180,200]} based on a size of the text being 100 pixels by 60 pixels and the anchors for the rendering box for thetext element 320 indicating that the rendering box will be aligned to the right and anchored to the top and bottom edges of the content item to be generated. The left anchor may be dependent upon the image element such that the left edge oftext element 320 will be adjacent theimage element 310 for the content item to be generated.FIG. 9A depicts theimage element 310 positioned in thecontent item 300 for the minimal right range value of 80 from the corresponding initial space allocation determined by theimage element renderer 224 and thetext element 320 positioned in thecontent item 300 for the minimal left range value of 120 and the minimal right range value of 180 from the corresponding initial space allocation determined by thetext element renderer 224. Applying the growth function of thegrowth module 250, the right range value of the image element may be incremented by one pixel to a value of 81, the left range value of thetext element 320 may be incremented by one pixel to a value of 119, and the right range value of thetext element 320 may be incremented by one pixel to a value of 181. The growth function may iterate through each single pixel increment until the final space allocation for theimage element 310 is {left:0, top:0, bottom:100, right:100} and the final space allocation for thetext element 320 is {left:100, top:0, bottom:100, right:200}, as shown inFIG. 9B . - Once the final space allocations for the one or more elements and/or rendering boxes have been determined by the
space manager 226, the final space allocations are sent to theconflict resolver 228. - Referring to
FIG. 10 , theconflict resolver 228 receives the final space allocations and determines if any conflicts exist based on the final space allocations. Such conflicts may include overlap of elements and/or rendering boxes, overflow of an element beyond the dimensions of the content item and/or rendering box, insufficient margin, text truncation, and/or other content item template-specific conflicts. Theconflict resolver 228 may compare the values of each final space allocation to determine whether a portion of the final space allocation of one element and/or rendering box overlaps a portion of the final space allocation of another element and/or rendering box. Theconflict resolver 228 may compare the values of each final space allocation to the first dimensional value and the second dimensional value to determine whether a final space allocation exceeds a dimensional value of the content item to be generated such that an element and/or rendering box overflows the dimensions of the content item. In some implementations, theconflict resolver 228 may add one or more margin values to the final space allocations and compare the final margin-increased space allocations to determine whether insufficient margin exists. In some instances, theconflict resolver 228 may receive a calculated margin value from a conflict system 232 (shown inFIG. 4 ) based on a content item size. In still further implementations, theconflict resolver 228 may determine whether one or more words in a text element is truncated. In still other implementations, theconflict resolver 228 may apply other content item template-specific rules received from theconflict system 232. - If a conflict exists, then the
conflict resolver 228 may eliminate an element and/or rendering box from the set of one or more elements and/or rendering boxes and return a new, reduced set of elements and/or rendering boxes to theanchor manager 222 to determine the placeholders based on the new set of elements and/or rendering boxes. The element and/or rendering box that is removed from the one or more elements and/or rendering boxes may be based on the priority values of the elements (e.g., removing the element and/or rendering boxes with the highest numerical priority value indicative of the element and/or rendering box being lower in importance to the content item template). In some implementations, if the element determined to be removed is indicated as a required element, then theconflict resolver 228 may send data to thelayout parser 220 to parse a new content item template from the set of content item templates or theconflict resolver 228 may halt generation of the content item and output an error (e.g., if no other content item templates may be used). - If no conflict exists, then the
conflict resolver 228 may pass the data for the content item and final space allocations to thescorer 208. Thescorer 208 may determine a score for the content item based on the final space allocations. The score for the content item may be based on the number of elements in the generated content item compared to the number of elements of the content item template (e.g., if a content item template has 4 elements and the generated content item can only use 3 because of conflicts, the score may be decreased), the number of unused pixels (e.g., total pixels occupied by elements divided by the total pixels of the content item), an average number of unused pixels per vertical or horizontal line, and/or weightings for one or more elements (e.g., an eliminated image element may have a higher weighting, resulting in a lower score, than an eliminated text element with a lower weighting). - The process of generating layouts for content items and elements may be performed for several content item templates from a set of content item templates and a score for each generated content item layout may be determined. In some implementations, the content
item generation system 120 may rank the scores and select the highest-scoring generated content item. In some implementations, the contentitem generation system 120 outputs data to display the selected highest-scoring generated content item to the content item requestor 202 or to acontent item database 210 to be stored. - In some implementations, layout data may be generated for a predetermined set of content item slot dimensions, such as common content item slot dimensions of 300 pixels (px) by 250 px, 336 px by 280 px, 970 px by 100 px, 160 px by 600 px, 320 px by 50 px, etc. The layout data may be generated by using the
layout generator 200 with a real web browser executing on a computing device, such as a server, for each of the predetermined set of content item slot dimensions. Thus, when a request is received having content item slot dimensions corresponding to one of the predetermined set of content item slot dimensions, the layout data for the one of the predetermined set of content item slot dimensions may be retrieved and transmitted to a client device with the content item data for the content item to be displayed on a display of the client device. A script executing on the client device may then generate the display data for displaying the content item on the client device using the layout data and the content item data without having to recalculate the layout data. - In some implementations, the
layout generator 200 may be a script that can perform the aforementioned steps for a received content item template to generate the layout data and the display data for a generated content item at the client device using a content item template, the first dimensional value, the second dimensional value, and the content item data. That is, in some instances the contentitem generation system 120 may receive a request for an arbitrary sized content item from a client device that includes the first dimensional value and the second dimensional value. The contentitem generation system 120 may determine a third-party content provider for which a content item is to be generated for the arbitrary sized content item slot, such as via selection criteria for the third-party content provider, data regarding the client device, and bids for an auction. - Once the third-party content provider is selected, a landing page URL may be received and/or determined by the landing
page analysis system 204 of the contentitem generation system 120. In some implementations, contextual data may be included with the request to the content item generation system. The contextual data may include device type data, network connection type data, network connection speed data, etc. The contextual data may be utilized to select content item data for a generated content item to tailor the generated content item based on the contextual data. For instance, the contextual data may include data indicative of a WiFi network connection type. The image module of the landingpage analysis system 204 may select or rank larger data size images, high definition video, etc. higher based on the contextual data. In another instance, the contextual data may include data indicative of a 2 G network connection type. The image module of the landingpage analysis system 204 may select or rank smaller data size images, low definition video, etc. lower based on the contextual data. In other instances, the image module of the landingpage analysis system 204 may select or rank images based on the first dimensional value and second dimensional value. For instance, the image module may select or rank an image based on a similarity of an aspect ratio of the first and second dimensional values to an aspect ratio of one or more candidate images. - The content
item generation system 120 may then transmit the script, the content item template, the first dimensional value, the second dimensional value, and the content item data to the client device, where the script having thelayout generator 200 generates the layout data for the content item to be generated and the display data for displaying the content item on a display of the client device. -
FIG. 11 depicts aprocess 400 for creating a configuration file for a content item template for the contentitem generation system 120. Theprocess 400 includes creating one or more components for the configuration file (block 402). The creation of the one or more components may include defining one or more attributes, such as a name, a type, a priority, and a weight. The name attribute may be a designer-defined name to reference the content item component. The type attribute may be a designer-selected content item type, such as a headline, logo, product image, description, button, etc., that is associated with a default priority and/or a default weight. The priority attribute may be a designer-defined value that may be used to prioritize the removal of elements of the content item template. In some implementations, the lower the value, the higher the priority with a 0 value for elements that cannot be removed from the generated content item. The weight attribute may be a designer-defined value that may be used to prioritize the growth of elements of the content item when additional space is available. - The
process 400 also includes creating one or more content item templates for the configuration file (block 404). The creation of one or more content item templates may include creating one or more types content item templates that utilize the aforementioned content item components. The content item templates may include one or more elements and/or one or more rendering boxes with one or more elements and, in some implementations, an arrangement for the one or more elements in the rendering box, such as a vertical list, a table, a product table, a background image, a shape, etc., and an alignment, such as left, right, top, bottom, etc. The one or more elements and/or one or more rendering boxes may include one or more anchors as described herein. - The
process 400 may, in some instances, include testing the configuration file using one or more content item slot sizes, such as one of the common content item slot sizes (block 406). That is, the designer of the content item template may utilize a script executing thelayout generator 200 with a common content item slot size as the first dimensional value and second dimensional value to test the content item template. The tested content item template may be submitted after testing or without testing. -
FIG. 12 depicts an implementation of aprocess 500 for generating layout data for one or more content item slot dimensions from a predetermined set of content item slot dimensions based on a landing page URL, a first dimensional value, and a second dimensional value implemented by the contentitem generation system 120. Theprocess 500 includes receiving a landing page URL, a first dimensional value, and a second dimensional value (block 502). The landing page URL, first dimensional value, and second dimensional value may be received from a database of the contentitem generation system 120. The first dimensional value and the second dimensional value may be dimensional values corresponding to common content item slot dimensions of 300 px by 250 px, 336 px by 280 px, 970 px by 100 px, 160 px by 600 px, 320 px by 50 px, etc. In some implementations, the landing page URL, first dimensional value, and second dimensional value may instead be specified by and received from a third-party content provider. For instance, a third-party content provider may utilize a content item generation system to generate content items for different common content item slot sizes to be stored in a database and served responsive to subsequent content item requests from client devices or first-party content providers. Content item data may be determined from the landing page URL by a landing page analysis system. - The
process 500 may further include receiving a content item template having a set of elements and/or rendering boxes for creating a content item (block 504). A selected content item template may be retrieved from the database or received from a third-party content provider. - The
process 500 may further include generating a placeholder for each element and/or rendering box of the content item template (block 506). The generated placeholder for each element and/or rendering box may be generated by an anchor manager based on the associated data for the one or more elements and/or rendering boxes, such as anchors, the first dimensional value and second dimensional value, and the content item data. - The
process 500 further includes determining a space allocation for each element and/or rendering box based on the generated placeholders (block 508). In some implementations, an initial space allocation may be determined by an element renderer using a placeholder for each element and/or each element of a rendering box. A final space allocation may be determined by a space manager. The final space allocation may include using a growth function to increment a dimension of a minimum initial space allocation for one or more elements and/or rendering boxes. - The
process 500 includes determining if a conflict exists based on the determined space allocations for each element and/or rendering box (block 510). A conflict resolver may determine is an overlap conflict, an overflow conflict, an insufficient margin conflict, a text truncation conflict, and/or other content item template-specific conflicts exist. If a conflict exists, then the conflict resolver may eliminate an element and/or rendering box from the set of one or more elements and/or rendering boxes and return the new set of elements and/or rendering boxes to the anchor manager to determine the placeholders based on the new set of elements and/or rendering boxes. The element and/or rendering box that is removed from the one or more elements and/or rendering boxes may be based on the priority values of the elements (e.g., removing the element and/or rendering box with the element with the highest numerical priority value indicative of the element being lower in importance to the content item template). In some implementations, if the element determined to be removed is indicated as a required element, then the conflict resolver may halt generation of the content item and output an error. - The
process 500 further includes generating layout data for the one or more content item slot dimensions from a predetermined set of content item slot dimensions for a content item using the determined space allocations and responsive to determining no conflict exists (block 512). In some implementations, the layout data may be in the form of an initial x-coordinate, y-coordinate, width, height, and/or font-size for each element and/or each rendering box of the layout. That is, a layout position of an element and/or rendering box based on the generated layout data may be defined by (x, y, width, height, font-size). The layout data including the layout positions may be stored in a database for subsequent use when a request having the same content item slot dimensions is received. - In some implementations, when a request for a content item for a content item slot having the same dimensions as that of the first dimensional value and second dimensional value to create the layout data, the layout data can be retrieved from the database and output to the client device responsive to the request. In some instances, a script to generate display data for the content item at the client device based on the layout data can be output with the layout data to the client device.
-
FIG. 13 depicts anotherprocess 600 for serving a script to a client device and having the client device generate display data for a generated content item. Theprocess 600 includes receiving a first dimensional value and a second dimensional value. (block 602). The first dimensional value and second dimensional value may be received from a client device as part of a request for a content item for a content item slot. In some implementations, contextual data may also be received with the first dimensional value and the second dimensional value. The contextual data may include device type data, network connection type data, network connection speed data, etc. - The process also includes receiving a receiving a landing page URL (block 604). The landing page URL may be received responsive to and/or selected by the content
item generation system 120 by determining a third-party content provider for which a content item is to be generated for the content item slot, such as via selection criteria for the third-party content provider, data regarding the client device, and bids for an auction. Once the third-party content provider is selected, a landing page URL may be received and/or determined by the landingpage analysis system 204 of the contentitem generation system 120. The contentitem generation system 120 determines content item data based on the landing page URL. In some implementations, the contextual data may be utilized to determine or select content item data for a generated content item to tailor the generated content item based on the contextual data. For instance, the contextual data may include data indicative of a WiFi network connection type. The image module of the landingpage analysis system 204 may select or rank larger data size images, high definition video, etc. higher based on the contextual data. In another instance, the contextual data may include data indicative of a 2 G network connection type. The image module of the landingpage analysis system 204 may select or rank smaller data size images, low definition video, etc. lower based on the contextual data. In other instances, the image module of the landingpage analysis system 204 may select or rank images based on the first dimensional value and second dimensional value. For instance, the image module may select or rank an image based on a similarity of an aspect ratio of the first and second dimensional values to an aspect ratio of one or more candidate images. - If layout data has been stored for the received a first dimensional value a second dimensional value, then the content item generation system may retrieve the layout data from a database (block 606) and transmit the layout data with the content item data to the client device for a script to generate display data for the content item at the client device using the layout data and the content item data (block 608). If the layout data has not been stored, then the content
item generation system 120 may then transmit a script having thelayout generator 200, a content item template, the first dimensional value, the second dimensional value, and the content item data to the client device (block 610), where the script having thelayout generator 200 generates the layout data for the content item to be generated and the display data for displaying the content item on a display of the client device. -
FIG. 14 depicts an example of alanding page resource 700 associated with a landing page URL. Thelanding page resource 700 includes alogo image 702,textual portions images menu portion 728. In some implementations, the landingpage analysis system 204 may include a resource renderer capable of interpreting thelanding page resource 700 associated with the landing page URL and creating a visual representation (e.g., an image, a display, etc.) thereof. The resource renderer may create a “snapshot image” of thelanding page resource 700 associated with the landing page URL and/or construct a document object model (DOM) tree representing the various components of thelanding page resource 700 associated with the landing page URL. In some implementations, the landingpage analysis system 204 may extract content item data including thelogo image 702,textual portion 704, andimage 714. -
FIGS. 15A-16B depict implementations of generated content items using content item templates, arbitrary dimensional values for the first dimensional value and second dimensional value, and extracted content item data from a landing page resource.FIG. 16A depicts a first generatedcontent item 800 having a first dimensional value of 350 pixels wide and a second dimensional value of 50 pixels high and using a content item template. The first generatedcontent item 800 includes aproduct image 802, atextual portion 804, and alogo image 806. The first content generatedcontent item 800 may include theproduct image 802 based on the contextual data indicating that the connection speed and/or connection type is a WiFi connection.FIG. 16B depicts a second generatedcontent item 810 having a first dimensional value of 350 pixels wide and a second dimensional value of 50 pixels high and using the content item template. The second generatedcontent item 810 includes thetextual portion 804, thelogo image 806, and abutton 812. The second content generatedcontent item 810 may exclude theproduct image 802 based on the contextual data indicating that the connection speed and/or connection type is a lower speed or type of connection, such as a 2 G or 3 G connection.FIG. 16A depicts a generatedcontent item 900 having a first dimensional value of 970 pixels wide and a second dimensional value of 100 pixels and using a second content item template. The generatedcontent item 900 includes aproduct image 902, atextual portion 904, alogo image 906, and abutton 908. Theproduct image 902 is a first image having a first aspect ratio where the height is greater than the width of the image.FIG. 16B depicts a second generatedcontent item 910 having a first dimensional value of 970 pixels and a second dimensional value of 100 pixels and using the second content item template. The generatedcontent item 910 includes asecond product image 912, thetextual portion 904, thelogo image 906, and thebutton 908. Thesecond product image 912 is a second image having a second aspect ratio where the width is greater than the height of the image. In some implementations, the landingpage analysis system 204 and/or the contentitem generation system 120 may compare an aspect ratio of the first dimensional value and the second dimensional value to the aspect ratios of one or more candidate product images, such as thefirst product image 902 and thesecond product image 912. The landingpage analysis system 204 and/or the contentitem generation system 120 may then select a product image that has the closest or most similar aspect ratio (e.g., by comparing the aggregate difference between the dimensional values). Thus, the landingpage analysis system 204 and/or the contentitem generation system 120 may select thesecond product image 912 for the content item template based on the image having a more similar aspect ratio. -
FIG. 17 is a block diagram of acomputer system 1000 that can be used to implement theclient device 110, contentitem selection system 108, third-party content server 102,resource server 104, etc. Thecomputing system 1000 includes abus 1005 or other communication component for communicating information and aprocessor 1010 coupled to thebus 1005 for processing information. Thecomputing system 1000 can also include one ormore processors 1010 coupled to the bus for processing information. Thecomputing system 1000 also includesmain memory 1015, such as a RAM or other dynamic storage device, coupled to thebus 1005 for storing information, and instructions to be executed by theprocessor 1010.Main memory 1015 can also be used for storing position information, temporary variables, or other intermediate information during execution of instructions by theprocessor 1010. Thecomputing system 1000 may further include aROM 1020 or other static storage device coupled to thebus 1005 for storing static information and instructions for theprocessor 1010. Astorage device 1025, such as a solid state device, magnetic disk or optical disk, is coupled to thebus 1005 for persistently storing information and instructions.Computing device 1000 may include, but is not limited to, digital computers, such as laptops, desktops, workstations, personal digital assistants, servers, blade servers, mainframes, cellular telephones, smart phones, mobile computing devices (e.g., a notepad, e-reader, etc.) etc. - The
computing system 1000 may be coupled via thebus 1005 to adisplay 1035, such as a Liquid Crystal Display (LCD), Thin-Film-Transistor LCD (TFT), an Organic Light Emitting Diode (OLED) display, LED display, Electronic Paper display, Plasma Display Panel (PDP), and/or other display, etc., for displaying information to a user. Aninput device 1030, such as a keyboard including alphanumeric and other keys, may be coupled to thebus 1005 for communicating information and command selections to theprocessor 1010. In another implementation, theinput device 1030 may be integrated with thedisplay 1035, such as in a touch screen display. Theinput device 1030 can include a cursor control, such as a mouse, a trackball, or cursor direction keys, for communicating direction information and command selections to theprocessor 1010 and for controlling cursor movement on thedisplay 1035. - According to various implementations, the processes and/or methods described herein can be implemented by the
computing system 1000 in response to theprocessor 1010 executing an arrangement of instructions contained inmain memory 1015. Such instructions can be read intomain memory 1015 from another computer-readable medium, such as thestorage device 1025. Execution of the arrangement of instructions contained inmain memory 1015 causes thecomputing system 1000 to perform the illustrative processes and/or method steps described herein. One or more processors in a multi-processing arrangement may also be employed to execute the instructions contained inmain memory 1015. In alternative implementations, hard-wired circuitry may be used in place of or in combination with software instructions to effect illustrative implementations. Thus, implementations are not limited to any specific combination of hardware circuitry and software. - Although an implementation of a
computing system 1000 has been described in reference toFIG. 17 , implementations of the subject matter and the functional operations described in this specification can be implemented in other types of digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them. - Implementations of the subject matter and the operations described in this specification can be implemented in digital electronic circuitry, or in computer software embodied on a tangible medium, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them. The subject matter described in this specification can be implemented as one or more computer programs, i.e., one or more modules of computer program instructions, encoded on one or more computer storage media for execution by, or to control the operation of, data processing apparatus. Alternatively or in addition, the program instructions can be encoded on an artificially-generated propagated signal, e.g., a machine-generated electrical, optical, or electromagnetic signal that is generated to encode information for transmission to suitable receiver apparatus for execution by a data processing apparatus. A computer storage medium can be, or be included in, a computer-readable storage device, a computer-readable storage substrate, a random or serial access memory array or device, or a combination of one or more of them. Moreover, while a computer storage medium is not a propagated signal, a computer storage medium can be a source or destination of computer program instructions encoded in an artificially-generated propagated signal. The computer storage medium can also be, or be included in, one or more separate components or media (e.g., multiple CDs, disks, or other storage devices). Accordingly, the computer storage medium is both tangible and non-transitory.
- The operations described in this specification can be performed by a data processing apparatus on data stored on one or more computer-readable storage devices or received from other sources.
- The terms “data processing apparatus,” “computing device,” or “processing circuit” encompass all kinds of apparatus, devices, and machines for processing data, including a programmable processor, a computer, a system on a chip, or multiple ones, a portion of a programmed processor, or combinations of the foregoing. The apparatus can include special purpose logic circuitry, e.g., an FPGA or an ASIC. The apparatus can also include, in addition to hardware, code that creates an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, a cross-platform runtime environment, a virtual machine, or a combination of one or more of them. The apparatus and execution environment can realize various different computing model infrastructures, such as web services, distributed computing and grid computing infrastructures.
- A computer program (also known as a program, software, software application, script, or code) can be written in any form of programming language, including compiled or interpreted languages, declarative or procedural languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, object, or other unit suitable for use in a computing environment. A computer program may, but need not, correspond to a file in a file system. A program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub-programs, or portions of code). A computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
- Processors suitable for the execution of a computer program include, for instance, both general and special purpose microprocessors, and any one or more processors of any kind of digital computer. Generally, a processor will receive instructions and data from a read-only memory or a random access memory or both. The essential elements of a computer are a processor for performing actions in accordance with instructions and one or more memory devices for storing instructions and data. Generally, a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks. However, a computer need not have such devices. Moreover, a computer can be embedded in another device, e.g., a mobile telephone, a personal digital assistant (PDA), a mobile audio or video player, a game console, a Global Positioning System (GPS) receiver, or a portable storage device (e.g., a universal serial bus (USB) flash drive), to name just a few. Devices suitable for storing computer program instructions and data include all forms of non-volatile memory, media and memory devices, including, for instance, semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks; magneto-optical disks; and CD-ROM and DVD disks. The processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
- To provide for interaction with a user, implementations of the subject matter described in this specification can be implemented on a computer having a display device, e.g., a CRT (cathode ray tube) or LCD monitor, for displaying information to the user and a keyboard and a pointing device, e.g., a mouse or a trackball, by which the user can provide input to the computer. Other kinds of devices can be used to provide for interaction with a user as well; for instance, feedback provided to the user can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form, including acoustic, speech, or tactile input.
- While this specification contains many specific implementation details, these should not be construed as limitations on the scope of what may be claimed, but rather as descriptions of features specific to particular implementations. Certain features described in this specification in the context of separate implementations can also be implemented in combination in a single implementation. Conversely, various features described in the context of a single implementation can also be implemented in multiple implementations separately or in any suitable subcombination. Moreover, although features may be described above as acting in certain combinations and even initially claimed as such, one or more features from a claimed combination can in some cases be excised from the combination, and the claimed combination may be directed to a subcombination or variation of a subcombination.
- Similarly, while operations are depicted in the drawings in a particular order, this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order, or that all illustrated operations be performed, to achieve desirable results. In certain circumstances, multitasking and parallel processing may be advantageous. Moreover, the separation of various system components in the implementations described above should not be understood as requiring such separation in all implementations, and it should be understood that the described program components and systems can generally be integrated in a single software product or packaged into multiple software products embodied on tangible media.
- References to “or” may be construed as inclusive so that any terms described using “or” may indicate any of a single, more than one, and all of the described terms.
- Thus, particular implementations of the subject matter have been described. Other implementations are within the scope of the following claims. In some cases, the actions recited in the claims can be performed in a different order and still achieve desirable results. In addition, the processes depicted in the accompanying figures do not necessarily require the particular order shown, or sequential order, to achieve desirable results. In certain implementations, multitasking and parallel processing may be advantageous.
- The claims should not be read as limited to the described order or elements unless stated to that effect. It should be understood that various changes in form and detail may be made by one of ordinary skill in the art without departing from the spirit and scope of the appended claims. All implementations that come within the spirit and scope of the following claims and equivalents thereto are claimed.
Claims (20)
1. A system for automatically generating a content item comprising:
one or more processors; and one or more storage devices storing instructions that, when executed by the one or more processors, cause the one or more processors to perform operations comprising:
receiving a template having a set of elements for creating a content item and content item data for the set of elements, the content item data for the set of elements including an asset selected based on contextual data received from a client device,
generating a placeholder for each element of the set of elements of the template,
determining a space allocation for each element of the set of elements based, at least in part, on the generated placeholders for each element of the set of elements,
determining if a conflict exists based on the determined space allocations for each element of the set of elements, and
generating a content item using the content item data for the set of elements and the determined space allocations responsive to determining no conflict exists.
2. The system of claim 1 , wherein the contextual data comprises a connection type.
3. The system of claim 1 , wherein the contextual data comprises a connection speed.
4. The system of claim 1 , wherein the one or more storage devices store instructions that cause the one or more processors to perform operations further comprising:
determining an arrangement for one or more elements of the set of elements for a rendering box based on the template.
5. The system of claim 4 , wherein the arrangement comprises a vertical list, a table, a product table, a background image, or a shape.
6. The system of claim 1 , wherein the content item data comprises one or more images from a landing page URL.
7. The system of claim 6 , wherein the one or more images from the landing page URL are selected based on a connection speed or a connection type.
8. The system of claim 1 , wherein each element of the set of elements is defined by a content item component.
9. The system of claim 8 , wherein the content item component comprises one or more attributes of a type attribute, a priority attribute, or a weight attribute.
9. The system of claim 1 , wherein determining a space allocation for each element of the set of elements comprises receiving data for one or more anchors for the each element, wherein the one or more anchors reference another element of the set of elements or the template.
11. The system of claim 1 , wherein determining a space allocation for each element of the set of elements comprises:
determining an initial space allocation for each element of the set of elements based on a generated placeholder for the element,
determining a minimum space allocation for each element of the set of elements based on the initial space allocation, and
incrementing a dimension of the determined minimum space allocation for each element of the set of elements based on a growth function.
12. The system of claim 10, wherein the growth function increments the determined minimum space allocation by a predetermined pixel value based on a weight attribute for the each element.
13. A method for generating layout data for a content item template comprising:
receiving, at one or more data processors, a landing page URL, a first dimensional value, and a second dimensional value;
receiving, at one or more data processors, a content item template having a set of elements for creating a content item;
generating, using one or more data processors, a placeholder for each element of the set of elements of the content item template based, at least in part, on the first dimensional value and the second dimensional value;
determining, using one or more data processors, a space allocation for each element of the set of elements based, at least in part, on the generated placeholders for each element of the set of elements;
determining, using one or more processors, if a conflict exists based on the determined space allocations for each element of the set of elements; and
storing, in a database, layout data associated with the first dimensional value and the second dimensional value for the content item template based on the determined space allocations and responsive to determining no conflict exists.
14. The method of claim 13 , wherein the layout data comprises one or more of a x-coordinate, a y-coordinate, a width, a height, or a font-size for each element of the set of elements.
15. The method of claim 13 , wherein the layout data comprises one or more of a x-coordinate, a y-coordinate, a width, a height, or a font-size for a rendering box comprising one or more elements of the set of elements.
16. The method of claim 13 further comprising:
receiving, at one or more data processors, a request for a content item for a content item slot from a client device comprising the first dimensional value and the second dimensional value; and
outputting the stored layout data responsive to the request from the client device.
17. The method of claim 16 , wherein outputting the stored layout data further comprises outputting a script to generate display data for a content item at the client device based on the layout data.
18. A computer readable storage device storing instructions that, when executed by one or more processors, cause the one or more processors to perform operations comprising:
receiving a request for a content item from a client device comprising a first dimensional value for a content item slot, a second dimensional value for the content item slot, and contextual data;
determining a landing page URL for a content item to be served responsive to the request from the client device;
determining content item data for the content item based on the landing page URL and the received contextual data; and
outputting a content item template, the determined content item data, and a script to generate the content item from the content item template and the determined content item data by the client device.
19. The computer readable storage device of claim 18 , wherein the contextual information comprises a connection type or a connection speed for the client device.
20. The computer readable storage device of claim 18 , wherein determining the landing page URL for the content comprises selecting a third-party content provider based on an auction.
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
PCT/CN2014/088945 WO2016061732A1 (en) | 2014-10-20 | 2014-10-20 | Arbitrary size content item generation |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
PCT/CN2014/088945 Continuation WO2016061732A1 (en) | 2014-10-20 | 2014-10-20 | Arbitrary size content item generation |
Publications (1)
Publication Number | Publication Date |
---|---|
US20160110082A1 true US20160110082A1 (en) | 2016-04-21 |
Family
ID=55749089
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US14/730,865 Abandoned US20160110082A1 (en) | 2014-10-20 | 2015-06-04 | Arbitrary size content item generation |
Country Status (5)
Country | Link |
---|---|
US (1) | US20160110082A1 (en) |
CN (1) | CN106664463A (en) |
DE (1) | DE112014007077T5 (en) |
GB (1) | GB2546008A (en) |
WO (1) | WO2016061732A1 (en) |
Cited By (13)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20160371230A1 (en) * | 2014-02-14 | 2016-12-22 | Google Inc. | Methods and systems for providing an actionable object within a third-party content slot of an information resource of a content publisher |
US20180143986A1 (en) * | 2016-11-18 | 2018-05-24 | Adobe Systems Incorporated | Generating persuasive electronic messages using interplay of message content features |
US20190156375A1 (en) * | 2017-11-21 | 2019-05-23 | International Business Machines Corporation | Visually and/or semantically integrating a digital advertisement within a digital composition |
US20190220591A1 (en) * | 2016-02-01 | 2019-07-18 | Google Llc | Systems and methods for deploying countermeasures against unauthorized scripts interfering with the rendering of content elements on information resources |
US10444942B2 (en) * | 2014-06-16 | 2019-10-15 | Sony Corporation | Display control apparatus and display control method to optimize and display objects of various forms |
CN111506843A (en) * | 2019-01-31 | 2020-08-07 | 浙江宇视科技有限公司 | Picture loading method and system, electronic equipment and storage medium |
US10951634B2 (en) | 2016-02-01 | 2021-03-16 | Google Llc | Systems and methods for dynamically restricting the rendering of unauthorized content included in information resources |
US11144950B2 (en) * | 2016-01-12 | 2021-10-12 | Tencent Technology (Shenzhen) Company Limited | Information delivery method and apparatus, server, and storage medium |
US11151615B2 (en) * | 2018-03-23 | 2021-10-19 | Casio Computer Co., Ltd. | Advertisement management apparatus, advertisement management method, and computer readable storage medium |
US11151327B2 (en) * | 2019-02-28 | 2021-10-19 | Atlassian Pty Ltd. | Autonomous detection of compound issue requests in an issue tracking system |
US20220137799A1 (en) * | 2020-10-30 | 2022-05-05 | Canva Pty Ltd | System and method for content driven design generation |
US11455762B2 (en) * | 2017-12-14 | 2022-09-27 | Adobe Inc. | Text border tool and enhanced corner options for background shading |
JP2023032063A (en) * | 2021-08-26 | 2023-03-09 | 株式会社unknown | Information processing apparatus and program |
Families Citing this family (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
EP3679536A1 (en) * | 2018-11-13 | 2020-07-15 | Google LLC. | Systems and methods of selecting visual elements based on sentiment analysis |
Citations (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20120089933A1 (en) * | 2010-09-14 | 2012-04-12 | Apple Inc. | Content configuration for device platforms |
US20120192258A1 (en) * | 2009-07-17 | 2012-07-26 | Boldstreet Inc. | Hotspot network access system and method |
US8274529B1 (en) * | 2008-12-09 | 2012-09-25 | Adobe Systems Incorporated | Systems and methods for providing content for use in multiple environments |
US20130086031A1 (en) * | 2011-10-04 | 2013-04-04 | Microsoft Corporation | Maximizing content item information on a search engine results page |
US20130132209A1 (en) * | 2011-11-11 | 2013-05-23 | Google Inc. | Generating an advertising campaign |
US20140074608A1 (en) * | 2012-08-31 | 2014-03-13 | Bridgetree, Inc. | Rapid identification of search terms that surge in response to current events |
Family Cites Families (8)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20090119614A1 (en) * | 2007-11-07 | 2009-05-07 | Nokia Corporation | Method, Apparatus and Computer Program Product for Heirarchical Navigation with Respect to Content Items of a Media Collection |
US20110065082A1 (en) * | 2009-09-17 | 2011-03-17 | Michael Gal | Device,system, and method of educational content generation |
US20110112909A1 (en) * | 2009-11-10 | 2011-05-12 | Alcatel-Lucent Usa Inc. | Multicasting personalized high definition video content to consumer storage |
CN102314655A (en) * | 2010-07-09 | 2012-01-11 | 百度在线网络技术（北京）有限公司 | Advertisement generating method and equipment |
WO2013020084A1 (en) * | 2011-08-04 | 2013-02-07 | Google Inc. | Providing knowledge panels with search results |
EP2573726A1 (en) * | 2011-09-21 | 2013-03-27 | Koninklijke KPN N.V. | Method and system for providing a cross-context optimal experience |
US20130185670A1 (en) * | 2012-01-12 | 2013-07-18 | Google Inc. | Graphical view of social content streams |
US20130298000A1 (en) * | 2012-05-02 | 2013-11-07 | Scott ZUCCARINO | Socially relevant content in a news domain |
-
2014
- 2014-10-20 DE DE112014007077.7T patent/DE112014007077T5/en not_active Ceased
- 2014-10-20 CN CN201480080247.7A patent/CN106664463A/en active Pending
- 2014-10-20 WO PCT/CN2014/088945 patent/WO2016061732A1/en active Application Filing
- 2014-10-20 GB GB1622348.9A patent/GB2546008A/en not_active Withdrawn
-
2015
- 2015-06-04 US US14/730,865 patent/US20160110082A1/en not_active Abandoned
Patent Citations (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8274529B1 (en) * | 2008-12-09 | 2012-09-25 | Adobe Systems Incorporated | Systems and methods for providing content for use in multiple environments |
US20120192258A1 (en) * | 2009-07-17 | 2012-07-26 | Boldstreet Inc. | Hotspot network access system and method |
US20120089933A1 (en) * | 2010-09-14 | 2012-04-12 | Apple Inc. | Content configuration for device platforms |
US20130086031A1 (en) * | 2011-10-04 | 2013-04-04 | Microsoft Corporation | Maximizing content item information on a search engine results page |
US20130132209A1 (en) * | 2011-11-11 | 2013-05-23 | Google Inc. | Generating an advertising campaign |
US20140074608A1 (en) * | 2012-08-31 | 2014-03-13 | Bridgetree, Inc. | Rapid identification of search terms that surge in response to current events |
Cited By (23)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20160371230A1 (en) * | 2014-02-14 | 2016-12-22 | Google Inc. | Methods and systems for providing an actionable object within a third-party content slot of an information resource of a content publisher |
US10067916B2 (en) * | 2014-02-14 | 2018-09-04 | Google Llc | Methods and systems for providing an actionable object within a third-party content slot of an information resource of a content publisher |
US10444942B2 (en) * | 2014-06-16 | 2019-10-15 | Sony Corporation | Display control apparatus and display control method to optimize and display objects of various forms |
US11144950B2 (en) * | 2016-01-12 | 2021-10-12 | Tencent Technology (Shenzhen) Company Limited | Information delivery method and apparatus, server, and storage medium |
US11363040B2 (en) | 2016-02-01 | 2022-06-14 | Google, Llc | Systems and methods for dynamically restricting the rendering of unauthorized content included in information resources |
US20190220591A1 (en) * | 2016-02-01 | 2019-07-18 | Google Llc | Systems and methods for deploying countermeasures against unauthorized scripts interfering with the rendering of content elements on information resources |
US20210342439A1 (en) * | 2016-02-01 | 2021-11-04 | Google Llc | Systems and methods for deploying countermeasures against unauthorized scripts interfering with the rendering of content elements on information resources |
US10951634B2 (en) | 2016-02-01 | 2021-03-16 | Google Llc | Systems and methods for dynamically restricting the rendering of unauthorized content included in information resources |
US11068584B2 (en) * | 2016-02-01 | 2021-07-20 | Google Llc | Systems and methods for deploying countermeasures against unauthorized scripts interfering with the rendering of content elements on information resources |
US11947377B2 (en) | 2016-02-01 | 2024-04-02 | Google Llc | Systems and methods for dynamically restricting the rendering of unauthorized content included in information resources |
US11907360B2 (en) * | 2016-02-01 | 2024-02-20 | Google Llc | Systems and methods for deploying countermeasures against unauthorized scripts interfering with the rendering of content elements on information resources |
US11886546B2 (en) | 2016-02-01 | 2024-01-30 | Google Llc | Systems and methods for dynamically restricting the rendering of unauthorized content included in information resources |
US10783549B2 (en) * | 2016-11-18 | 2020-09-22 | Adobe Inc. | Determining persuasiveness of user-authored digital content items |
US20180143986A1 (en) * | 2016-11-18 | 2018-05-24 | Adobe Systems Incorporated | Generating persuasive electronic messages using interplay of message content features |
US20190156375A1 (en) * | 2017-11-21 | 2019-05-23 | International Business Machines Corporation | Visually and/or semantically integrating a digital advertisement within a digital composition |
US11270353B2 (en) * | 2017-11-21 | 2022-03-08 | International Business Machines Corporation | Visually and/or semantically integrating a digital advertisement within a digital composition |
US11455762B2 (en) * | 2017-12-14 | 2022-09-27 | Adobe Inc. | Text border tool and enhanced corner options for background shading |
US11151615B2 (en) * | 2018-03-23 | 2021-10-19 | Casio Computer Co., Ltd. | Advertisement management apparatus, advertisement management method, and computer readable storage medium |
CN111506843A (en) * | 2019-01-31 | 2020-08-07 | 浙江宇视科技有限公司 | Picture loading method and system, electronic equipment and storage medium |
US11972216B2 (en) | 2019-02-28 | 2024-04-30 | Atlassian Pty Ltd. | Autonomous detection of compound issue requests in an issue tracking system |
US11151327B2 (en) * | 2019-02-28 | 2021-10-19 | Atlassian Pty Ltd. | Autonomous detection of compound issue requests in an issue tracking system |
US20220137799A1 (en) * | 2020-10-30 | 2022-05-05 | Canva Pty Ltd | System and method for content driven design generation |
JP2023032063A (en) * | 2021-08-26 | 2023-03-09 | 株式会社unknown | Information processing apparatus and program |
Also Published As
Publication number | Publication date |
---|---|
CN106664463A (en) | 2017-05-10 |
WO2016061732A1 (en) | 2016-04-28 |
DE112014007077T5 (en) | 2017-07-06 |
GB2546008A (en) | 2017-07-05 |
GB201622348D0 (en) | 2017-02-15 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US20230281383A1 (en) | Arbitrary size content item generation | |
US11586801B2 (en) | Automatically determining a size for a content item for a web page | |
US20160110082A1 (en) | Arbitrary size content item generation | |
US10146743B2 (en) | Systems and methods for optimizing content layout using behavior metrics | |
US11004109B2 (en) | Automated creative extension selection for content performance optimization | |
AU2014399168B2 (en) | Automated click type selection for content performance optimization | |
US20150206169A1 (en) | Systems and methods for extracting and generating images for display content | |
US11586684B2 (en) | Serving multiple content items responsive to a single request | |
WO2015066891A1 (en) | Systems and methods for extracting and generating images for display content | |
US20140229296A1 (en) | System and method for extracting style information from web pages and generating advertisements | |
JP2017134854A (en) | Systems and methods for optimizing content layout using behavior metrics |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:ZHANG, GUANNAN;OU, ZHENGUO;REEL/FRAME:035788/0629Effective date: 20150602 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044129/0001Effective date: 20170929 |
|
STCB | Information on status: application discontinuation |
Free format text: ABANDONED -- FAILURE TO RESPOND TO AN OFFICE ACTION |
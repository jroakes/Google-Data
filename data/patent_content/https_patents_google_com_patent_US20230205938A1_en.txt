US20230205938A1 - Feature-preserving proxy mesh generation - Google Patents
Feature-preserving proxy mesh generation Download PDFInfo
- Publication number
- US20230205938A1 US20230205938A1 US17/998,719 US202117998719A US2023205938A1 US 20230205938 A1 US20230205938 A1 US 20230205938A1 US 202117998719 A US202117998719 A US 202117998719A US 2023205938 A1 US2023205938 A1 US 2023205938A1
- Authority
- US
- United States
- Prior art keywords
- micro
- text
- credentials
- submission
- credential
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Pending
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F30/00—Computer-aided design [CAD]
- G06F30/10—Geometric CAD
Definitions
- the systems and methods herein recognize that unequal backgrounds and social circumstances are part of many minoritized individuals' lives and that these circumstances are underrepresented in credentials for applications such as college.
- the systems and methods herein address this recognition by turning these backgrounds and circumstances into assets through a process of drawing upon and documenting their lived experiences within the language of educational, social, and cultural capital.
- the systems and methods do so in a technical manner that allows for differing levels of input to be normalized so that each background and circumstance can appropriately, and ethically, be turned into a useable credential.
- lived experiences are understood from a phenomenological perspective and through a Funds of Knowledge framework.
- Lived Experiences are rich in meaning and imbued with skills and competencies and recognizing, validating, and valuing students' Lived Experiences can play an important role in bridging the opportunity gap in educational achievement, career pathways and enhancement.
- the present disclosure describes a skills documentation system that bridges the gap between individual users, educational organizations, and companies to assist with college admissions, new employee recruitment, career pathways, and career enhancement.
- the system can be used by individuals to match their skills with ideal career fields, connect with learning content, and peer and adult mentors.
- the system employs education and psychology frameworks to create a skills profile to provide additional data for college admissions, career recommendations, and job recruitment for employers.
- the systems and methods herein utilize an online portal that translates peoples' everyday life experiences into trusted credentials using research frameworks and proprietary Machine Learning technology.
- the systems and methods result in a portfolio of highly valued skills sought and recognized and trusted by educational institutions and workplaces.
- the systems and methods herein focus on amplifying skills and talents not often recognized in traditional admission or hiring processes.
- FIG. 1 shows a system for micro-credential accreditation, in embodiments.
- FIG. 2 shows the data ingestion module of FIG. 1 , in further detail.
- FIGS. 3 - 10 show example prompts presented to applicant via applicant device of FIG. 1 to obtain a text submission, in embodiments.
- FIG. 11 shows an example method for requesting and/or receiving text submission data for converting to a micro-credential, in embodiments.
- FIG. 12 shows a method for converting compiled data into a pre-processed submission ready for classification by a micro-credential predictive module, in an embodiment.
- FIG. 13 illustrates PAM structure in contrast with LDA and multinomial Dirichlet models.
- FIG. 14 shows a method for training the predictive model of FIG. 1 , in embodiments.
- FIG. 15 shows a method for classifying a submission to output one or more micro-credentials, in an embodiment.
- FIG. 16 illustrates a functional block diagram of a model calibration method to maintain a prediction model for micro-credential accreditation, in embodiments.
- FIG. 17 shows an example micro-credential display, in embodiments.
- FIGS. 18 - 21 show example displays for filtering previously submitted text submissions for micro-credential accreditation, in embodiments.
- FIG. 1 shows a system 100 for micro-credential accreditation, in embodiments.
- System 100 includes an accreditation portal 102 that is accessible by one or more applicants 104 (e.g., people desiring to have micro-credentials, or other life experiences accredited), accreditors 106 (e.g., persons, or entities such as universities, workplaces, etc. that are providing credit for the applicants' lived experiences), and administrators 108 (e.g., personnel that manage the accreditation portal 102 , which may be the same as or different than the accreditors 106 ).
- applicants 104 e.g., people desiring to have micro-credentials, or other life experiences accredited
- accreditors 106 e.g., persons, or entities such as universities, workplaces, etc. that are providing credit for the applicants' lived experiences
- administrators 108 e.g., personnel that manage the accreditation portal 102 , which may be the same as or different than the accreditors 106 ).
- Accreditation portal 102 may be a server, or other external or cloud-hosted system, that provides functionality discussed herein.
- accreditation portal 102 may host, or otherwise control, web-based access portal that the applicant 104 , accreditors 106 , and administrators 108 access via computing devices 110 .
- Computing devices 110 may be any one or more of a laptop computer, desktop computer, smart phones, tablets, and other devices capable of accessing the web browser, or other portal, hosted by accreditation portal 102 .
- Computing device 110 ( 1 ) may be referred to herein as applicant device 110 ( 1 ).
- Computing device 110 ( 2 ) may be referred to herein as accreditor device 110 ( 2 ).
- Computing device 110 ( 3 ) may be referred to herein as administrator device 110 ( 3 ).
- Accreditation portal 102 includes one or more processors 112 and a data store 114 that stores necessary data to implement the functionality of one or more of a data ingestion module 116 , a micro-credential predictive module 118 , and generated micro-credentials 122 and associated accreditation credits 123 (which may be one or more combined micro-credentials 122 that collectively qualify the applicant 104 for a given accreditation credit 123 , as configured by the administrator 108 or accreditor 106 interacting with their given computing device 110 to set user-specific configuration settings of the accreditation portal 102 ).
- the processor 112 may be any type of circuit or integrated circuit capable of performing logic, control, and input/output operations.
- the processor 112 may include one or more of a microprocessor with one or more central processing unit (CPU) cores, a graphics processing unit (GPU), a digital signal processor (DSP), a field-programmable gate array (FPGA), a system-on-chip (SoC), a microcontroller unit (MCU), and an application-specific integrated circuit (ASIC).
- the processor 112 may also include a memory controller, bus controller, and other components that manage data flow between the processor 112 , data store 114 , and other components connected to the processor 112 .
- the data store 114 (also referred to as memory) includes one or more memory allocations that store machine-readable instructions that, when executed by the processor 112 , control the portal 102 to implement the functionality and methods described herein. Said machine-readable instructions, when executed by processor 112 , implement the various “modules” discussed herein. Data store 114 additionally stores necessary data to implement the functionality and methods described herein.
- Accreditation portal 102 may interface with devices 110 to ingest necessary data (e.g., text describing lived experiences submitted to the portal by the applicant 104 ), and display the associated micro-credentials 122 and associated accreditation credits 123 .
- necessary data e.g., text describing lived experiences submitted to the portal by the applicant 104
- display the associated micro-credentials 122 and associated accreditation credits 123 e.g., text describing lived experiences submitted to the portal by the applicant 104
- the lived experience texts are collected via the devices 110 ( 1 ) detecting interaction by the applicant 104 with the hosted platform by accreditation portal 102 via applicant device 110 ( 1 ).
- Various API calls and responses are utilized between the accreditation portal 102 and the device 110 ( 1 ) to receive the necessary information.
- FIG. 2 shows the data ingestion module 116 of FIG. 1 , in further detail.
- Applicant 104 interacts with device 110 ( 1 ) to provide a lived experience submission, which is received by accreditation portal 102 through one or more API calls/responses.
- Raw submission 202 is stored in a data store 114 of the accreditation portal 102 .
- FIGS. 3 - 11 show example prompt/response flow that is displayed on device 110 ( 1 ) for the applicant 104 to input a submission that is stored as raw submission 202 , in an embodiment.
- Screenshot 300 shows a screenshot where the applicant 104 is provided with a prompt on device 110 ( 1 ) to select an experience in the pre-existing categories 302 (such as, but not limited to: action, process, quality), sub-categories 304 (e.g., type of action), and location 306 (e.g., home, work, school, shopping, other).
- action, process, quality e.g., quality of action
- sub-categories 304 e.g., type of action
- location 306 e.g., home, work, school, shopping, other.
- Screenshot 400 shows a screenshot where the applicant 104 is provided with a prompt on device 110 ( 1 ) to select additional people involved in the experience represented in the current submission. Since the applicant 104 is submitting their lived experience, the prompt in screenshot 400 prompts applicants to indicate where the experience took place and who participating with them in the experience. This helps the applicant 104 contextualize the experience they are planning to submit. This also allows applicant 104 to submit a diversity of experiences in terms of location and various aspects of their life.
- Screenshot 500 shows a screenshot where the applicant 104 is provided with a prompt on device 110 ( 1 ) to select provide a text description of the lived experience.
- This prompt (describe what happened in this experience) sets the stage for the user for submitting the experience.
- the prompt in screenshot 500 narrows down or make the experience focused on specific events (rather than a sequence of events) and allows the accreditation portal 102 to be able to interpret the applicant's 104 understanding of their experience.
- Screenshot 600 shows a screenshot where the applicant 104 is provided with a prompt on device 110 ( 1 ) to select provide additional text description of the lived experience.
- This prompt (what did you learn from this experience) is used to help the applicant 104 concretized their actions (e.g., in difficult situations) and use the experience as a learning tool from the past experience as well moving forward.
- Screenshot 700 shows a screenshot where the applicant 104 is provided with a prompt on device 110 ( 1 ) to select provide additional text description of the lived experience.
- This prompt (what would you do differently) is used to help the applicant 104 describe what and how much they learned from the experience, be it whether they did the right thing in their view (and wouldn't do anything differently), or did something wrong and would change how their actions in similar situations.
- Screenshot 800 shows a selection prompt requesting the applicant 104 to select a content area (e.g., category) to which the submitted text applies.
- Screenshot 800 is in an example of AP courses for college credit, however other categories may be prompted depending on the applicant 104 and target micro-credentials.
- Screenshot 900 shows alternate categories provided in the content-area prompt. Additional categories include engineering, business, environmental literacy, arts/culture, computer science, science, mathematics, literature, management, architecture, global issues, languages, healthcare, agriculture/farming, technical education, education, sports, media, peer mentoring, other.
- Screenshot 1000 shows a selection prompt requesting the applicant 104 to provide evidence (or indicate they could provide evidence) of the submitted experience. This allows the portal 102 to have an understanding of the veracity of the submitted experience.
- FIG. 11 shows an example method for requesting and/or receiving, from applicant 104 , data for converting to a micro-credential, in embodiments.
- Method 1100 is performed using system 100 , such as execution of the data ingestion module 116 , for example.
- the method 1100 requests/receives an indication of a selected category associated with a submitted data.
- the data ingestion module 116 implements one or more API calls/responses to/from the user device 110 ( 1 ) to receive a selected category (e.g., drop-down menu 302 of FIG. 3 ).
- the method 1100 requests/receives an indication of an associated event that occurred that is associated with a submitted data.
- the data ingestion module 116 implements one or more API calls/responses to/from the user device 110 ( 1 ) to receive a selected action (e.g., drop-down menu 304 of FIG. 3 ). Selectable choices presented to the Applicant 104 (e.g., via device 110 ( 1 )) may be pre-determined based on the selection in step 1102 .
- the method 1100 requests/receives an indication of a location where the associated event occurred and is associated with a submitted data.
- the data ingestion module 116 implements one or more API calls/responses to/from the user device 110 ( 1 ) to receive a selected location (e.g., selection list 306 of FIG. 3 ). Selectable choices presented to the Applicant 104 (e.g., via device 110 ( 1 )) may be pre-determined based on the selection in one or both of step 1102 and 1104 .
- the method 1100 requests/receives an indication of other persons that were involved in the associated event and is associated with a submitted data.
- the data ingestion module 116 implements one or more API calls/responses to/from the user device 110 ( 1 ) to receive a selected action (e.g., selection list 402 of FIG. 4 ). Selectable choices presented to the Applicant 104 (e.g., via device 110 ( 1 )) may be pre-determined based on the selection in one or more of steps 1102 - 1106 .
- the method 1100 requests/receives a text description of the associated event and is associated with a submitted data.
- the data ingestion module 116 implements one or more API calls/responses to/from the user device 110 ( 1 ) to receive a text description including one or more of the scenario/event that occurred, personal experience in the scenario/event, actions the applicant 104 engaged in, and lessons learnt during the scenario/event (e.g., input to the prompts shown in FIGS. 5 - 7 ).
- Selectable choices presented to the Applicant 104 may be pre-determined based on the selection in one or more of steps 1102 - 1106 .
- the method 1100 requests/receives an indication of available evidence, or the evidence itself, of the associated event and is associated with a submitted data.
- the data ingestion module 116 implements one or more API calls/responses to/from the user device 110 ( 1 ) to receive an indication of available evidence, or the evidence itself (e.g., response to prompt shown in FIG. 10 ).
- the responses received in blocks 1102 - 1112 may be saved collectively or individually as raw submission 202 of FIG. 2 .
- the method 1100 may compile the responses into a complied submission 204 .
- the raw submission 202 may be a series of data responses received in response to any one or more of the above-discussed prompts. These responses are then, by the data ingestion module 116 , formatted into a compiled submission 204 .
- Compiled submission 204 takes the disparate responses to the prompts and puts them into a text string describing the input experience.
- prompts that have a selectable answer e.g., 302 , 304 , 306 of FIG.
- Data ingestion module 112 may further process the compiled data 204 (e.g., after implementation of method 1100 ), to generate a processed submission 206 .
- the data ingestion module 112 may generate processed submission 206 by processing the compiled text data 204 to prepare for classification by the predictive model 120 of micro-credential predictive module 118 ( FIG. 1 ) to generate one or more micro-credentials 122 which may, independently or in combination, qualify the applicant 104 for one or more accreditation credits 123 .
- the data ingestion module 112 may remove stop words within the compiled data 204 , implement stemming on the compiled data 204 , implement lemmatization on the compiled data 204 , convert the compiled data 204 to a plurality of N-Grams, covert the compiled data 204 (after any one or more of the above pre-processing techniques) into the term-frequency inverse document frequency (tf-idf) matrix.
- FIG. 12 shows a method 1200 for converting the compiled data 204 into a pre-processed submission 206 ready for classification by the micro-credential predictive module 118 , in an embodiment.
- Method 1200 is implemented by the data ingestion module 112 , for example.
- gibberish text within complied data 204 is removed.
- the data ingestion module 112 analyzes the complied data 204 and removes text that is incoherent, and unable to be corrected via spell-check, or other correction methods.
- the remaining complied data 204 is standardized.
- the data ingestion module 112 analyzes the remaining complied data 204 after block 1202 and standardizes the text.
- the text may be standardized by performing spell check, removing redundant and/or duplicate words, etc.
- whitespace within complied data 204 is removed.
- the data ingestion module 112 analyzes the complied data 204 and removes whitespace that is within, before, or after the text portion of the submission.
- stop-words within the remaining complied data 204 are removed.
- the data ingestion module 112 analyzes the remaining complied data 204 and removes stop-words therein. Extremely common words in text which would appear to be of little value in helping select micro-credentials matching the submitted experience by the applicant 104 are excluded from the vocabulary entirely. These words are referred to herein as “stop words.” Stop words include, but are not limited to, words such as “the”, “is”, “are”, and so on.
- stop word list The general strategy for determining a stop word list is to sort the terms by occurrence frequency in a particular experience text document, and then to take the most frequent terms, often hand-filtered for their semantic content relative to the domain of the documents being indexed, as a stop list, the members of which are then discarded during indexing. In some natural language processing applications stop word removal will have very little impact on its predictive performance, rather it reduces computational complexity of training the model.
- stemming on the remaining complied data 204 is implemented.
- the data ingestion module 112 analyzes the remaining complied data 204 after block 1208 and implements stemming.
- Stemming may be performed after other blocks within method 1200 without departing from the scope hereof.
- Stemming is used in information retrieval systems to make sure variants of words are not left out when text is retrieved (Julie Beth Lovins. 1968. Development of a stemming algorithm. Mech. Transl. Comput. Linguistics, 11(1-2):22-31.). The process is used in removing derivational suffixes as well as inflections (i.e.
- block 1210 implements Porter's stemmer. (Porter, M. F., 1980. An algorithm for suffix stripping. Program ; which is incorporated by reference herein).
- lemmatization on the remaining complied data 204 is implemented.
- the data ingestion module 112 analyzes the remaining complied data 204 after block 1210 and implements lemmatization. Lemmatization may be performed after other blocks within method 1200 without departing from the scope hereof. Lemmatization puts emphasis on vocabulary and morphological analysis of word and tries to remove inflectional endings, thereby returning words to their dictionary form. Lemmatization checks to make sure that words are properly used in text. For example, it analyzes if query words are used as verbs or nouns.
- a plurality of N-grams is generated from the remaining complied data 204 is implemented.
- the data ingestion module 112 analyzes the remaining complied data 204 after block 1212 and generates a plurality of N-grams. N-gram generation may be performed after other blocks within method 1200 without departing from the scope hereof.
- N-grams are phrases constructed with consecutive N words in the source text. Each of the N-gram can then be considered a term in the text retrieval and analysis.
- a Term Frequency Inverse Document Frequency (TF-IDF) Matrix is generated from the remaining complied data 204 .
- the data ingestion module 112 analyzes the remaining complied data 204 after block 1214 and generates a TF-IDF Matrix.
- TF-IDF Matrix generation may be performed after other blocks within method 1200 without departing from the scope hereof.
- the TF-IDF scoring algorithm considers frequency of the terms appearing in a document, and at the same time put more weight on those terms that occur less frequently across documents in the text corpus.
- tf t,d describes how frequent the term t is in a given document d, and is expressed as log normalized as Log(1+tf t,d ).
- df refers to document frequency and relates to the number of document that contains the search keyword.
- the inverse document frequency (idf) describes the relevance of the search term in relation to all the documents in the collection, as depicted in the following equation:
- the processed submission 206 may then be analyzed by micro-credential predictive module 118 via classification of the processed submission 206 by the predictive model 120 .
- the predictive model 120 is based on one or more of a Pachinko Allocation Model (PAM), a Latent Dirichlet Allocation (LDA) Model, and a MLkNN model.
- Topic modeling discovers the thematic structure of a given text corpus. It models the relationships between the vocabulary of the corpus and the documents through the thematic structure. Topic models gained popularity in recent years as the learned structure and relationships can be used for the analysis of large-scale natural language text data, including query, discover trends, language translation, document classification, information retrieval, text summarization, sentiment analysis and various data mining problems. Given a corpus of text documents, parameter estimation in these topic models extracts a lower dimensional set of multinomial, i.e., multi-label word distributions called topics. Mixtures of the topics provide high probability to the training data, and the highest probability words in each topic provide the keywords that briefly summarize the themes in the text corpus (e.g., the processed submission 206 ).
- the topic modeling problem can be attempted as a multi-label classification problem, where each document may belong to several pre-defined topics simultaneously.
- the problem can be formally defined here.
- Let X denote the domain of documents and let Y ⁇ 1, 2, . . . , Q ⁇ , be the finite set of topics, i.e., the labels.
- the learning algorithm will produce a real-valued function of the form, ⁇ : X ⁇ Y ⁇ . It is assumed that, given a document, x i , and its associated topic label set, Y i , a successful learning system is going to return larger values for labels in Y i than those not in Y i , i.e., ⁇ (x i , y 1 )> ⁇ (x i , y 2 ), for any y 1 ⁇ Y i and y 1 ⁇ Y i .
- FIG. 13 illustrates the PAM structure in contrast with LDA and multinomial Dirichlet models.
- the four topic model structures include: (a) Dirichlet multinomial: for each document, a multinomial distribution over words is sampled from a single Dirichlet distribution. (b) LDA: it samples a multinomial over topics for each document, and then generates words from the topics. (c) a 4-level PAM: it contains a root, a set of super-topics, a set of sub-topics and a word vocabulary. Both the root and the super-topics are associated with Dirichlet distributions, from which multinomials over their children for each document are sampled. (d) PAM: an arbitrary directed acyclic graph (DAG) structure encoding the topic correlations. Each interior node is considered a topic and associated with a Dirichlet distribution
- DAG arbitrary directed acyclic graph
- the LDA2vec model learns dense word vectors jointly with Dirichlet distributed latent document-level mixtures of topic vectors (Christopher E Moody. 2016. Mixing dirichlet topic models and word embeddings to make lda2vec.arXiv preprint arXiv:1605.02019.).
- the predictive model 120 used by micro-credential predictive module 118 is based on Pachinko Allocation Model instead of the LDA as the algorithm improves upon LDA based approaches by modeling correlations between topics in addition to the word correlations which constitute topics.
- PAM may be advantageous, in certain embodiments, as it provides more flexibility and greater expressive power than Latent Dirichlet allocation.
- the predictive model 120 used by the micro-credential predictive module 118 is trained based on a Pam2vec algorithm.
- the total loss term, L is the sum of the Skipgram Negative Sampling Loss (SGNS), L ij neg with the addition of a Pachinko-likelihood term over document weights, L d .
- the loss is conducted using a context vector, ⁇ right arrow over (c j ) ⁇ , pivot word vector, w j , target word vector w i , and negatively-sampled word vector w l . Pairs of pivot and target words (j, i) are extracted when they co-occur in a moving window scanning across the corpus (e.g., processed submission 206 ).
- the pivot word For every pivot-target pair of words the pivot word is used to predict the nearby target word. Each word is represented with a fixed-length dense distributed-representation vector. The same word vectors are used in both the pivot and target representations. Both words and document vectors are then embedded into the same space and the predictive model 120 is trained based on both representations simultaneously. By adding the pivot and document vectors together, both spaces are effectively joined.
- FIG. 14 shows a method 1400 for training the predictive model 120 of FIG. 1 , in embodiments.
- Method 1400 is implemented by accreditation portal 102 , such as via a micro-credential predictive module 118 , in an embodiment.
- Training data may be a plurality of the received processed submissions 206 , or may be created ones thereof that are associated with appropriate micro-credentials.
- method 1400 calculates a total loss term of the training sample received in block 1402 .
- micro-credential predictive module 118 calculates the total loss term, L, as the sum of the Skipgram Negative Sampling Loss (SGNS), L ij neg with the addition of a Pachinko-likelihood term over document weights, L d .
- the loss is conducted using a context vector ⁇ right arrow over (c j ) ⁇ , pivot word vector, ⁇ right arrow over (w j ) ⁇ , target word vector w i , and negatively-sampled word vector w l .
- the method 1400 extracts pivot and target words of said training sample, and represents them with a fixed-length dense vectors.
- micro-credential predictive module 118 extracts pairs of pivot and target words (j, i) when they co-occur in a moving window scanning across the corpus (e.g., said given sample processed submission 206 ). For every pivot-target pair of words the pivot word is used to predict the nearby target word. Each word is represented with a fixed-length dense distributed-representation vector.
- the method 1400 embeds the extracted words and vectors together in a single embedded space, and trains a predictive model using the embedded space.
- the method 1400 outputs the trained predictive model.
- micro-credential predictive module 118 outputs predictive model 120 of FIG. 1 .
- the trained predictive model 120 is used to characterize one or more micro-credentials 122 to a submission received from applicant 104 .
- the predictive model 120 may be based on a single predictive algorithm (e.g., the Pam2vec algorithm discussed above with respect to FIG. 14 ), or a plurality of predictive algorithms.
- FIG. 15 shows a method 1500 for classifying a submission (e.g., processed submission 206 ) to output one or more micro-credentials (e.g., micro-credentials 122 of FIG. 1 ), in an embodiment.
- a submission e.g., processed submission 206
- micro-credentials e.g., micro-credentials 122 of FIG. 1
- the method 1500 receives a submission for analysis.
- the micro-credential predictive module 118 receives the processed submission 206 from the data ingestion module 116 .
- Method 1500 then implements one or more of branches 1504 , 1506 , and 1508 .
- Branch 1504 implements a ML-kNN predictive model (which is an example of predictive model 120 ).
- ML-kNN is an effective realization of the multilabel classification algorithm (Min-Ling Zhang and Zhi-Hua Zhou. 2007. Ml-knn: A lazy learning approach to multi-label learning. Pattern recognition, 40(7):2038-2048, which is incorporated herein by reference.). For each unseen document instance, its k nearest neighbors in the training set are first identified (block 1510 ).
- MAP maximum a posteriori
- Branch 1506 implements a latent dirichlet allocation predictive model (which is an example of predictive model 120 ).
- Latent Dirichlet Allocation is a topic model applied mostly to generate texts based on topic of choice (David M Blei, Andrew Y Ng, and Michael I Jordan. 2003. Latent dirichlet allocation. Journal of machine Learning research, 3(January):993-1022; which is incorporated by reference herein.). It also can be employed in the text categorization problems.
- the received submission is split into a plurality of sequential features (block 1518 ).
- LDA is then implemented (block 1520 ) which represents each document as a mixture of topics, where each topic is a multinomial distribution over words with respect to a vocabulary.
- the method 1500 LDA first samples a per-document multinomial distribution over topics from a Dirichlet distribution. Then it repeatedly samples a topic from this multinomial and samples a word from the topic. Topics extracted (block 1522 ) by LDA capture correlations among words. An output prediction vector of the given topic to a set of potential micro-credentials is calculated (block 1524 ) for each generated topic, and those satisfying a threshold value are indicated as appropriate micro-credentials.
- Branch 1508 implements a pachinko dirichlet allocation predictive model (which is an example of predictive model 120 ).
- the Pachinko Allocation Model utilizes a multi-level directed acyclic graph (DAG) structure to model the topic correlations and hierarchies, where the leaf nodes represent the words, and the nodes in the inner levels represent topics (Wei Li and Andrew McCallum. 2006. Pachinko allocation: Dag-structured mixture models of topic correlations. In Proceedings of the 23rd international conference on Machine learning, pages 577-584; which is incorporated by reference herein).
- the received submission is split into a plurality of sequential features (block 1526 ).
- PDA model block 1528 ) topics are considered distribution over words in the vocabulary.
- Topics extracted (block 1530 ) by PAM capture correlations among words.
- An output prediction vector of the given topic to a set of potential micro-credentials is calculated (block 1532 ) for each generated topic, and those satisfying a threshold value are indicated as appropriate micro-credentials.
- branches 1504 , 1506 , and 1508 there may be more or fewer branches without departing from the scope hereof.
- different predictive models may be used other than those shown.
- other types of applicable predictive models include, but are not limited to, logistic regression, support vector machines, and Nai ⁇ umlaut over (v) ⁇ e Bayes.
- target micro-credentials 124 e.g., 152 potential assignable micro-credentials.
- the potential assignable micro-credentials may be separated into a hierarchy (e.g., three levels: level 1, level 2, and level 3).
- Each target micro-credential 124 may be associated with a target classifier 126 (which may be any one or more of the branches discussed in method 1500 ). Certain target micro-credentials 124 may be available only depending on specific responses to the prompts discussed in FIGS. 3 - 11 . If applicant says they would not do anything differently in response to the “moving forward” prompt shown in FIG. 7 , a “reflection” micro-credential may not be available.
- an individual binary classifier may be fit to each micro-credential target (e.g., using logistic regression, per target). These binary classifiers may then be used (in addition to or in alternative to branches 1504 , 1506 , and 1508 ) to classify micro-credentials to a received submission.
- method 1500 applies ensemble multi-label learning.
- multiple different learning algorithms must come to a consensus on target potential micro-credentials associated with the received submission by each branch.
- the associated prediction vectors must reach a desired threshold.
- Each of the three branches ( 1504 , 1506 , 1508 ) may be separate multi-label (i.e., multi-output) classifiers that independently predicts the micro-credentials for a given submission ( 1516 , 1524 , 1532 ).
- the ensemble multi-label learner receives the predictions from the three branches and combines the predictions, through one or both of Boosting and stacked generalization and generates the final consensus prediction of micro-credentials.
- Block 1536 the target potential micro-credentials that are collectively agreed upon in block 1534 (or those output by one or more branches if block 1534 is not included) are output as assigned micro-credentials (e.g., micro-credentials 122 ) and associated with the received submission.
- Block 1536 may include identifying a plurality of the assigned micro-credentials 122 that collectively qualify the applicant 104 for one or more accreditation credits 123 based on configuration settings defined by accreditor 106 interaction with accreditor device 110 ( 2 ).
- Block 1536 may include transmitting an API call to display one or more of the assigned micro-credentials 122 and associated accreditation credits 123 on the applicant device 110 ( 1 ) and/or accreditor device 110 ( 2 ).
- Machine learning models are inherently sensitive to the distribution of the training dataset.
- the population data distribution may change after the model is built on a subset obtained at a specific timestamp in the past. If it happens, the model will suffer consequences like increasing in the misclassification rate, losing reliability. Therefore, post-training model maintenance and calibration is a necessary step which needs to be scheduled on a regular basis.
- annotated data e.g., training data used to create and/or update the prediction model 120
- annotated data impacts correctness, and possibly inherent biases implemented by the prediction model 120 .
- a training phase was initiated that focused on creating a process for establishing interrater reliability (IRR) using the educational research literature.
- the IRR process included the following steps: 1) training a diverse group of data taggers as qualitative data labelers/coders using the accreditation platform 102 ; and 2) using accreditation platform 102 driven a priori labels/codes to analyze submitted narratives (e.g., submissions 202 ).
- This training phase methodology led to outlining the procedure to establish IRR using a priori codes.
- the coded data will then be used to develop a second phase methodology in which a machine learning algorithm will be created.
- Table 2 establishes that two-way mixed effects model where people effects are random and measures effects are fixed. It is assumed that the estimator is the same, whether the integration effect is present or not. Type C intraclass correlation coefficients using a consistency definition. The between-measure variance is excluded from the denominator variance. The estimate is computed assuming the interaction effect is absent, because it is not capable of estimation otherwise. The calculation shown in table 2 provides for a high confidence in data coding, which is then used to code a larger set of data for preparing the prediction model 120 .
- the second approach is to apply incremental update on the model parameters after each new training sample whenever pushed from the platform.
- FIG. 16 illustrates a functional block diagram of a model calibration method 1600 with a flow diagram which depicts all the modules necessary to maintain the model (e.g., predictive model 120 ) deployed in production.
- Method 1600 is implemented using the model maintenance module 128 , for example.
- the method 1600 implements of three components: i) Aggregator 1602 , ii) Validator 1604 , and iii) Model comparator 1606 .
- a new sample 1608 is received and stored within a buffer 1610 of size m samples.
- Method 1600 then re-computes the statistics of the m samples including the new sample 1608 . It reports to the validator 1604 when the buffer 1610 is full.
- the pipeline utilizes an adaptive algorithm to change the size of buffer 1610 in each run based on the variance observed in the statistics.
- the validator 1604 employs an ensemble machine learning approach to detect if any of the new samples 1608 present in the buffer 1610 is an outlier. If an outlier is present, it re-assesses the statistics calculated by the aggregator module 1602 and then triggers the incremental model parameter update (block 1612 ) on a model clone 130 .
- the updates do not affect the model being used in the production environment (e.g., predictive model 120 ). Incremental update steps vary significantly by model types, model complexity and difference between the previous and new statistics.
- the validator module 1604 therefore, needs to account for successfully deciphering and understanding the general trends of the data and semantics of the population statistics.
- Method 1600 utilizes multifarious techniques involving machine common sense reasoning, rare event modeling and model selection from an ensemble to address the changes.
- the model comparator 1606 then performs an evaluation (block 1614 ) using a pre-determined validation data to compare model performances of the production environment (e.g., predictive model 120 ) and the newly updated model clone 134 . If the predictive performance of the updated model clone 134 is satisfactory, it triggers a backup and deploy event to replace the production environment model (e.g., predictive model 120 ) in production with a model update 132 .
- Model maintenance module 128 may further analyze the outputs of the models and verify that the models are performing in an ethical manner.
- the purpose of the embodiments of the systems and methods described herein is to improve outcomes for minoritized students, but unintentional and unwanted bias may occur in machine learning framework.
- Model maintenance module 128 may compensate for this unintentional and unwanted bias by monitoring the output and verifying it is performing appropriately.
- Machine learning models may be inherently biased if the data to which they are trained on has said inherent bias (see my comment above).
- the training data is annotated using human annotators, and thus the annotators shape the data used by the model.
- Model maintenance module 128 may analyze the output of the models 120 and provide valuable feedback to our human annotators. This feedback provides annotators the opportunity to reconsider their own inherent biases and to account for the way the models leverage their annotations. The only way to achieve ethical results in use cases such as these is to view the entire process iteratively—from end to end. The annotators do not simply decide on annotations once and for all.
- the alternative is to ensure that the unfairness generated by an algorithm on particular annotations is distributed equally among all groups. This does not usually improve the situation much because it fails to account for and address the characteristics of the data that are leading to the unwanted bias in the first place. Further, such superficial alternative approaches fail to provide guidance on how the machine learning fueled platform like the systems and methods described herein should address the root cause of the unwanted biases. To address these inherent bias problems, the model maintenance module 128 may implement a machine-in-the-loop strategy to understand the intersection of machine and human bias for an effective and fair micro-credentialing process.
- the model maintenance module 128 may analyze the output micro-credentials 122 to calculate a fairness metric 134 .
- the fairness metric 134 is based on conditional statistical parity (CSP). CSP measures whether particular groups of applicants 104 have equal probability of receiving a favorable outcome (in this case a credential 122 ) while permitting a legitimate factor to affect the prediction fairly.
- the applicant pool considered for the fairness metric may have required thresholds, such as number of submitted experiences. In one embodiment, submissions from applicants 104 who have not submitted at least 5 submissions are not considered for the fairness metric 134 because applicants 104 who have submitted fewer than 5 experiences to be too inexperienced and exclude them from consideration.
- the model maintenance module 128 may identify a CSP value 136 of each target micro-credential 124 .
- the CSP value 136 is calculated by determining the probability of said target micro-credential 124 being issued to a certain demographic group of applicants 104 .
- the micro-credentials 122 may be divided into a hierarchy of levels.
- CSP was found for many—but not all—credentials.
- the applicants 104 who identified as white achieved a CSP of 0.1049 for the “working with others” credential, whereas students who identify as black or African American achieved a CSP of 0.0368 (see 2). If the data annotations are taken to be authoritative (and not unintentionally inherently biased), students who identify as black or African American would necessarily be somehow deficient (perhaps due to systemic discouragement of these experiences).
- the model maintenance module 128 may trigger a model update 132 .
- the CSP threshold value 138 is equal to or greater than 0.05 as credentials of concern.
- the following example shows a processed submission (e.g., processed submission 206 ) that was not assigned at least 5 micro-credentials by human annotators (e.g., 5 of the target micro-credential 124 were not included as a micro-credential 122 when human annotators assigned micro-credentials, and thus would not be used to train the predictive model 120 ).
- the submission text was as follows: “So, I have been working on this project for some time and the challenge I am facing is to balance various responsibilities—I have to manage multiple roles and various tasks. I have been feeling very stressed out and feeling the need to take a break. I reached out to some family and friends and have a conversation and found a way to destress. I learnt that there are ups and down in this process and one should keep the bigger picture in mind and not let bad news get me down. I would not allow myself to go down this path for too long and seek some interventions earlier.”
- the machine learning model (e.g., predictive model 120 ) predicted the following level-3 codes that the human coders missed during annotations.
- the predictions were later marked approved after review of by annotators (e.g., administrator 108 ) and being included as new training data to generate model update 132 .
- the following example shows a processed submission (e.g., processed submission 206 ) that was not assigned at least 6 micro-credentials by human annotators (e.g., 6 of the target micro-credential 124 were not included as a micro-credential 122 when human annotators assigned micro-credentials, and thus would not be used to train the predictive model 120 ).
- the submission text was as follows: “I worked with my sister to resolve a family conflict related to my mothers health. She did not do her part and that led to my mother's deteriorating health. I learnt that I can not trust and rely on my sister. I would have found other people to take care of my mom's health and manage the situation. I will identify 2-3 resource people and keep in touch with them to make sure that this doesn't happen again.”
- the machine learning model (e.g., predictive model 120 ) predicted the following level-3 codes that the human coders missed during annotations.
- the predictions were later marked approved after review by annotators (e.g., administrator 108 ) and are being included as new training data to generate model update 132 .
- a sample of output micro-credentials 122 were evaluated. When the possible race categories were isolated to “white” and “black or African American” for the sake of illustration, 12.8% of the level-2 micro-credentials have a difference in CSP greater than or equal to 0.05. 60% of these differences favored white submissions. The annotators assessed these differences looking especially for initial annotations that might contain some annotator bias. For instance, Table 4 outlines effectiveness of model refinement through the proposed iterative pipeline on a particular level-2 micro-credential, “Working with Others”.
- the output micro-credentials 122 were sent back to annotators 108 and asked them to reconsider the annotations for credentials exhibiting a difference in CSP value 136 greater than or equal to 0.05 (e.g., CSP threshold 138 ) between two demographic groups.
- This reconsideration was performed one demographic group at a time, so that the annotators 108 could consider possible systemic bias as explanations. For example, the annotators discovered that black or African American students in the sample tend to talk about working with others passively, whereas white students tend to describe working with others actively.
- accreditation portal 140 may further include a display module 140 .
- Display module 140 interacts with applicant device 110 ( 1 ), accreditor device 110 ( 2 ), and administrator device 110 ( 3 ) to display information via one or more API calls/requests with the hosted URL browser on the given computing device 110 .
- FIG. 17 depicts a screenshot 1700 implemented by display module 140 showing a plurality if micro-credentials 122 gained 1702 and remaining needed 1704 to achieve an accreditation credit 123 , in an embodiment.
- Display module 140 further includes various filters that are accessible by applicant 104 , accreditor 106 , and administrator 108 , via interaction with their respective computing device 110 .
- FIGS. 18 - 19 show a screenshot 1800 and 1900 , respectively allowing a user to filter for experiences submitted (e.g., submissions 202 , 204 , or 206 ) within a selectable period 1902 .
- FIG. 20 shows a screenshot 2000 of displayed and selectable experiences submitted after selection of one of the selectable periods 1802 , of FIGS. 18 - 19 , in an embodiment.
- FIG. 21 shows a screenshot 2100 displayed in response to user-selection of one of the displayed and selectable experiences shown in FIG. 20 , in an embodiment.
- FIGS. 18 - 21 show displays associated with the applicant device 110 ( 1 ), similar displays may be configured by the display module 140 for each of the accreditor device 110 ( 2 ) and administrator device 110 ( 3 ) to display and interact with each of the accreditor 106 and administrator 108 .
- the accreditor device 110 ( 2 ) may display an interactive display interactable by the accreditor 106 to receive configuration settings such as number of micro-credentials 122 required to achieve a given accreditation credit 123 , and which accreditation credits 123 are available to given applicants 104 .
Abstract
Systems and methods provide micro-credential accreditation. The systems and methods analyze, using one or more prediction models, received text submissions received from applicants via interaction with an applicant device. The prediction model(s) fit one or more micro-credentials to the received text submission, which may collectively or independently qualify the applicant for one or more accreditation credits. By processing the received text submission, the systems and methods allow for consistent and standard output of micro-credentials by the prediction model(s). Furthermore, the systems and methods provide for monitoring the prediction model output(s) to ensure ethical fairness across varying demographic groups of applicants.
Description
- This application claims priority to U.S. Provisional Application Ser. No. 63/087,072, entitled “System and Method for Micro Credential Accreditation”, filed on Oct. 2, 2020, and which is incorporated herein by reference in its entirety.
- As the result of a long and complex history of racism, classism and oppression, minority individuals lag behind their majority peers in academic achievement, career readiness, and career enhancement. This lag has been influenced by structural inequalities such as those framed by poverty, migration, and/or undocumented status or homelessness. (Massey, D. S., & Denton, N. A. (1993), American apartheid: Segregation and the making of the underclass. Harvard University Press). This lag has also been called an opportunity gap because, in part, minoritized individuals lack access to the majority peers' experiences and discourses upon which educational and professional achievement is defined. (Carter, P. L., & Weiner, K. G. (Eds.). (2013). Closing the opportunity gap: What America must do to give every child an even chance. Oxford University Press). As such, the lived experiences of minoritized individuals are often defined in terms of deficits and do not carry the cultural capital found in more privileged students' experiences (AP courses, early college, funded extracurricular experiences, gap year opportunities). Yet, many minoritized individuals bring a unique set of life experiences (e.g., immigrant families, resilience, perseverance, stress management, and conflict resolution) that have provided them with the skills and competencies that are key outcomes that could provide alternative affordances (e.g., bilingualism, problem-solving, critical thinking, collaboration). The embodiments discussed herein turn the unequal backgrounds and social circumstances that are part of many minoritized individuals' lives into assets through a process of drawing upon and documenting their lived experiences within the language of educational, social, and cultural capital. (Darling-Hammond, L. (2015), The flat world and education: How America's commitment to equity will determine our future. Teachers College Press).
- The systems and methods herein recognize that unequal backgrounds and social circumstances are part of many minoritized individuals' lives and that these circumstances are underrepresented in credentials for applications such as college. The systems and methods herein address this recognition by turning these backgrounds and circumstances into assets through a process of drawing upon and documenting their lived experiences within the language of educational, social, and cultural capital. Moreover, the systems and methods do so in a technical manner that allows for differing levels of input to be normalized so that each background and circumstance can appropriately, and ethically, be turned into a useable credential.
- In this disclosure, lived experiences (LivedX) are understood from a phenomenological perspective and through a Funds of Knowledge framework.
- Phenomenology allows for an exploration of Lived Experiences as a function of being in the world, encounters with others, temporality, spatiality, and a focus on personal existence. (Heidegger, M. (2008). Being and Time. New York, N.Y.: Harper Perennial). The below-discussed framework provides a way for situating personal existence within a sociocultural and sociopolitical framework as “historically accumulated and culturally developed bodies of knowledge and skills for household or individual functioning and well-being.” (Moll, L. C., Amanti, C., Neff, D., & Gonzalez, N. (1992). Funds of knowledge for teaching: Using a qualitative approach to connect homes and classrooms. Theory into practice, 31(2), 132-141). Peoples' lives are not blank slates and their Lived Experiences are unique and different for each individual while being central to their existence. Furthermore, Lived Experiences are rich in meaning and imbued with skills and competencies and recognizing, validating, and valuing students' Lived Experiences can play an important role in bridging the opportunity gap in educational achievement, career pathways and enhancement.
- Every day we develop a skill or up skill ourselves by doing basic tasks at home, school, work, internships, apprenticeships, and volunteer activities. These skills do not receive their due credit in educational and workplace settings. Something as small as planning a trip over the weekend involves many skills such as time management, financial management, collaboration, communication, co-ordination and many more. Until now these life skills also known as soft skills, highly valuable skills, marketable skills, essential life skills, and/or power skills (individually and collectively referenced herein as “skills”) have not been recognised. The systems and methods disclosed herein allow for documentation of individuals' life experiences (also known as lived experiences). However, mere documentation has limitations in that such documented life experiences must be appropriately validated and assigned a credential amount. The systems and methods apply technical AI and Machine learning to validate these skills embedded in each experience, issue micro-credentials, and accredit them in a manner that is trustworthy, and useable without breaching ethical considerations.
- The present disclosure describes a skills documentation system that bridges the gap between individual users, educational organizations, and companies to assist with college admissions, new employee recruitment, career pathways, and career enhancement. The system can be used by individuals to match their skills with ideal career fields, connect with learning content, and peer and adult mentors. The system employs education and psychology frameworks to create a skills profile to provide additional data for college admissions, career recommendations, and job recruitment for employers. The systems and methods herein utilize an online portal that translates peoples' everyday life experiences into trusted credentials using research frameworks and proprietary Machine Learning technology. The systems and methods result in a portfolio of highly valued skills sought and recognized and trusted by educational institutions and workplaces. The systems and methods herein focus on amplifying skills and talents not often recognized in traditional admission or hiring processes.
-
FIG. 1 shows a system for micro-credential accreditation, in embodiments. -
FIG. 2 shows the data ingestion module ofFIG. 1 , in further detail. -
FIGS. 3-10 show example prompts presented to applicant via applicant device ofFIG. 1 to obtain a text submission, in embodiments. -
FIG. 11 shows an example method for requesting and/or receiving text submission data for converting to a micro-credential, in embodiments. -
FIG. 12 shows a method for converting compiled data into a pre-processed submission ready for classification by a micro-credential predictive module, in an embodiment. -
FIG. 13 illustrates PAM structure in contrast with LDA and multinomial Dirichlet models. -
FIG. 14 shows a method for training the predictive model ofFIG. 1 , in embodiments. -
FIG. 15 shows a method for classifying a submission to output one or more micro-credentials, in an embodiment. -
FIG. 16 illustrates a functional block diagram of a model calibration method to maintain a prediction model for micro-credential accreditation, in embodiments. -
FIG. 17 shows an example micro-credential display, in embodiments. -
FIGS. 18-21 show example displays for filtering previously submitted text submissions for micro-credential accreditation, in embodiments. -
FIG. 1 shows asystem 100 for micro-credential accreditation, in embodiments.System 100 includes anaccreditation portal 102 that is accessible by one or more applicants 104 (e.g., people desiring to have micro-credentials, or other life experiences accredited), accreditors 106 (e.g., persons, or entities such as universities, workplaces, etc. that are providing credit for the applicants' lived experiences), and administrators 108 (e.g., personnel that manage theaccreditation portal 102, which may be the same as or different than the accreditors 106). -
Accreditation portal 102 may be a server, or other external or cloud-hosted system, that provides functionality discussed herein. Thus,accreditation portal 102 may host, or otherwise control, web-based access portal that theapplicant 104,accreditors 106, andadministrators 108 access viacomputing devices 110.Computing devices 110 may be any one or more of a laptop computer, desktop computer, smart phones, tablets, and other devices capable of accessing the web browser, or other portal, hosted byaccreditation portal 102. Computing device 110(1) may be referred to herein as applicant device 110(1). Computing device 110(2) may be referred to herein as accreditor device 110(2). Computing device 110(3) may be referred to herein as administrator device 110(3). -
Accreditation portal 102 includes one ormore processors 112 and adata store 114 that stores necessary data to implement the functionality of one or more of adata ingestion module 116, a micro-credentialpredictive module 118, and generated micro-credentials 122 and associated accreditation credits 123 (which may be one or morecombined micro-credentials 122 that collectively qualify theapplicant 104 for a givenaccreditation credit 123, as configured by theadministrator 108 oraccreditor 106 interacting with their givencomputing device 110 to set user-specific configuration settings of the accreditation portal 102). Theprocessor 112 may be any type of circuit or integrated circuit capable of performing logic, control, and input/output operations. For example, theprocessor 112 may include one or more of a microprocessor with one or more central processing unit (CPU) cores, a graphics processing unit (GPU), a digital signal processor (DSP), a field-programmable gate array (FPGA), a system-on-chip (SoC), a microcontroller unit (MCU), and an application-specific integrated circuit (ASIC). Theprocessor 112 may also include a memory controller, bus controller, and other components that manage data flow between theprocessor 112,data store 114, and other components connected to theprocessor 112. - The data store 114 (also referred to as memory) includes one or more memory allocations that store machine-readable instructions that, when executed by the
processor 112, control the portal 102 to implement the functionality and methods described herein. Said machine-readable instructions, when executed byprocessor 112, implement the various “modules” discussed herein.Data store 114 additionally stores necessary data to implement the functionality and methods described herein. -
Accreditation portal 102 may interface withdevices 110 to ingest necessary data (e.g., text describing lived experiences submitted to the portal by the applicant 104), and display the associated micro-credentials 122 and associated accreditation credits 123. The lived experience texts are collected via the devices 110(1) detecting interaction by theapplicant 104 with the hosted platform byaccreditation portal 102 via applicant device 110(1). Various API calls and responses are utilized between theaccreditation portal 102 and the device 110(1) to receive the necessary information. -
FIG. 2 shows thedata ingestion module 116 ofFIG. 1 , in further detail.Applicant 104 interacts with device 110(1) to provide a lived experience submission, which is received byaccreditation portal 102 through one or more API calls/responses.Raw submission 202 is stored in adata store 114 of theaccreditation portal 102. -
FIGS. 3-11 show example prompt/response flow that is displayed on device 110(1) for theapplicant 104 to input a submission that is stored asraw submission 202, in an embodiment. -
Screenshot 300, ofFIG. 3 , shows a screenshot where theapplicant 104 is provided with a prompt on device 110(1) to select an experience in the pre-existing categories 302 (such as, but not limited to: action, process, quality), sub-categories 304 (e.g., type of action), and location 306 (e.g., home, work, school, shopping, other). This allows theapplicant 104 to identify and focus on a recent experience that might be of importance/value to them and they are interested in documenting. -
Screenshot 400, ofFIG. 4 , shows a screenshot where theapplicant 104 is provided with a prompt on device 110(1) to select additional people involved in the experience represented in the current submission. Since theapplicant 104 is submitting their lived experience, the prompt inscreenshot 400 prompts applicants to indicate where the experience took place and who participating with them in the experience. This helps theapplicant 104 contextualize the experience they are planning to submit. This also allowsapplicant 104 to submit a diversity of experiences in terms of location and various aspects of their life. -
Screenshot 500, ofFIG. 5 , shows a screenshot where theapplicant 104 is provided with a prompt on device 110(1) to select provide a text description of the lived experience. This prompt (describe what happened in this experience) sets the stage for the user for submitting the experience. By asking them to describe the experience (thoughts and feelings), the prompt inscreenshot 500 narrows down or make the experience focused on specific events (rather than a sequence of events) and allows theaccreditation portal 102 to be able to interpret the applicant's 104 understanding of their experience. -
Screenshot 600, ofFIG. 6 , shows a screenshot where theapplicant 104 is provided with a prompt on device 110(1) to select provide additional text description of the lived experience. This prompt (what did you learn from this experience) is used to help theapplicant 104 concretized their actions (e.g., in difficult situations) and use the experience as a learning tool from the past experience as well moving forward. -
Screenshot 700, ofFIG. 7 , shows a screenshot where theapplicant 104 is provided with a prompt on device 110(1) to select provide additional text description of the lived experience. This prompt (what would you do differently) is used to help theapplicant 104 describe what and how much they learned from the experience, be it whether they did the right thing in their view (and wouldn't do anything differently), or did something wrong and would change how their actions in similar situations. -
Screenshot 800, ofFIG. 8 , shows a selection prompt requesting theapplicant 104 to select a content area (e.g., category) to which the submitted text applies.Screenshot 800 is in an example of AP courses for college credit, however other categories may be prompted depending on theapplicant 104 and target micro-credentials.Screenshot 900, ofFIG. 9 , shows alternate categories provided in the content-area prompt. Additional categories include engineering, business, environmental literacy, arts/culture, computer science, science, mathematics, literature, management, architecture, global issues, languages, healthcare, agriculture/farming, technical education, education, sports, media, peer mentoring, other. -
Screenshot 1000, ofFIG. 10 , shows a selection prompt requesting theapplicant 104 to provide evidence (or indicate they could provide evidence) of the submitted experience. This allows the portal 102 to have an understanding of the veracity of the submitted experience. -
FIG. 11 shows an example method for requesting and/or receiving, fromapplicant 104, data for converting to a micro-credential, in embodiments.Method 1100 is performed usingsystem 100, such as execution of thedata ingestion module 116, for example. - In
block 1102, themethod 1100 requests/receives an indication of a selected category associated with a submitted data. In one example ofblock 1102, thedata ingestion module 116 implements one or more API calls/responses to/from the user device 110(1) to receive a selected category (e.g., drop-down menu 302 ofFIG. 3 ). - In
block 1104, themethod 1100 requests/receives an indication of an associated event that occurred that is associated with a submitted data. In one example ofblock 1104, thedata ingestion module 116 implements one or more API calls/responses to/from the user device 110(1) to receive a selected action (e.g., drop-down menu 304 ofFIG. 3 ). Selectable choices presented to the Applicant 104 (e.g., via device 110(1)) may be pre-determined based on the selection instep 1102. - In
block 1106, themethod 1100 requests/receives an indication of a location where the associated event occurred and is associated with a submitted data. In one example ofblock 1106, thedata ingestion module 116 implements one or more API calls/responses to/from the user device 110(1) to receive a selected location (e.g.,selection list 306 ofFIG. 3 ). Selectable choices presented to the Applicant 104 (e.g., via device 110(1)) may be pre-determined based on the selection in one or both ofstep - In
block 1108, themethod 1100 requests/receives an indication of other persons that were involved in the associated event and is associated with a submitted data. In one example ofblock 1108, thedata ingestion module 116 implements one or more API calls/responses to/from the user device 110(1) to receive a selected action (e.g.,selection list 402 ofFIG. 4 ). Selectable choices presented to the Applicant 104 (e.g., via device 110(1)) may be pre-determined based on the selection in one or more of steps 1102-1106. - In
block 1110, themethod 1100 requests/receives a text description of the associated event and is associated with a submitted data. In one example ofblock 1110, thedata ingestion module 116 implements one or more API calls/responses to/from the user device 110(1) to receive a text description including one or more of the scenario/event that occurred, personal experience in the scenario/event, actions theapplicant 104 engaged in, and lessons learnt during the scenario/event (e.g., input to the prompts shown inFIGS. 5-7 ). Selectable choices presented to the Applicant 104 (e.g., via device 110(1)) may be pre-determined based on the selection in one or more of steps 1102-1106. - In
block 1112, themethod 1100 requests/receives an indication of available evidence, or the evidence itself, of the associated event and is associated with a submitted data. In one example ofblock 1112, thedata ingestion module 116 implements one or more API calls/responses to/from the user device 110(1) to receive an indication of available evidence, or the evidence itself (e.g., response to prompt shown inFIG. 10 ). - The responses received in blocks 1102-1112 may be saved collectively or individually as
raw submission 202 ofFIG. 2 . Inblock 1114, themethod 1100 may compile the responses into a compliedsubmission 204. Referring back toFIG. 2 , theraw submission 202 may be a series of data responses received in response to any one or more of the above-discussed prompts. These responses are then, by thedata ingestion module 116, formatted into a compiledsubmission 204. Compiledsubmission 204 takes the disparate responses to the prompts and puts them into a text string describing the input experience. In the text string of the compiledresponse 204, prompts that have a selectable answer (e.g., 302, 304, 306 ofFIG. 3 ) may be compiled into a first portion of the text string, and prompts that have a text-input response (e.g.,input FIG. 5 ) may be included as-is as a second portion of the text string. Below is an example of submitted narrative: -
- This experience took place at my [Other]. I was with some Strangers. I was at the DMV and saw someone trying to ask for the bathroom in ASL. I knew what they were saying so I stood up and helped them find the bathroom. I learned that it does not matter where you are and what you are doing, helping someone who needs it is important. I would not do anything different next time.
“This experience too place at my [other].” is generated in response to a selection in input drop-down 302. “I was with some Strangers.” is generated in response to selection ofbox 402 ofFIG. 4 .
- This experience took place at my [Other]. I was with some Strangers. I was at the DMV and saw someone trying to ask for the bathroom in ASL. I knew what they were saying so I stood up and helped them find the bathroom. I learned that it does not matter where you are and what you are doing, helping someone who needs it is important. I would not do anything different next time.
- Auto-generating the narrative, as opposed to allowing the user to simply input a narrative and output what the user inputs, allows for a consistently formatted narrative for review. Thus, each user's lived experience can be accurately analyzed by the back-end system, or a reviewer at a work, college, school, etc., to provide an appropriate one or more micro credentials therefore.
-
Data ingestion module 112 may further process the compiled data 204 (e.g., after implementation of method 1100), to generate a processedsubmission 206. Thedata ingestion module 112 may generate processedsubmission 206 by processing the compiledtext data 204 to prepare for classification by thepredictive model 120 of micro-credential predictive module 118 (FIG. 1 ) to generate one or more micro-credentials 122 which may, independently or in combination, qualify theapplicant 104 for one or more accreditation credits 123. To generate the processedsubmission 206, thedata ingestion module 112 may remove stop words within the compileddata 204, implement stemming on the compileddata 204, implement lemmatization on the compileddata 204, convert the compileddata 204 to a plurality of N-Grams, covert the compiled data 204 (after any one or more of the above pre-processing techniques) into the term-frequency inverse document frequency (tf-idf) matrix. -
FIG. 12 shows amethod 1200 for converting the compileddata 204 into apre-processed submission 206 ready for classification by the micro-credentialpredictive module 118, in an embodiment.Method 1200 is implemented by thedata ingestion module 112, for example. - In
block 1202, gibberish text within complieddata 204 is removed. In one example ofblock 1202, thedata ingestion module 112 analyzes the complieddata 204 and removes text that is incoherent, and unable to be corrected via spell-check, or other correction methods. - In
block 1204, the remaining complieddata 204 is standardized. In one example ofblock 1204, thedata ingestion module 112 analyzes the remaining complieddata 204 afterblock 1202 and standardizes the text. The text may be standardized by performing spell check, removing redundant and/or duplicate words, etc. - In
block 1206, whitespace within complieddata 204 is removed. In one example ofblock 1206, thedata ingestion module 112 analyzes the complieddata 204 and removes whitespace that is within, before, or after the text portion of the submission. - In
block 1208, stop-words within the remaining complieddata 204 are removed. In one example ofblock 1208, thedata ingestion module 112 analyzes the remaining complieddata 204 and removes stop-words therein. Extremely common words in text which would appear to be of little value in helping select micro-credentials matching the submitted experience by theapplicant 104 are excluded from the vocabulary entirely. These words are referred to herein as “stop words.” Stop words include, but are not limited to, words such as “the”, “is”, “are”, and so on. The general strategy for determining a stop word list is to sort the terms by occurrence frequency in a particular experience text document, and then to take the most frequent terms, often hand-filtered for their semantic content relative to the domain of the documents being indexed, as a stop list, the members of which are then discarded during indexing. In some natural language processing applications stop word removal will have very little impact on its predictive performance, rather it reduces computational complexity of training the model. - In
block 1210, stemming on the remaining complieddata 204 is implemented. In one example ofblock 1210, thedata ingestion module 112 analyzes the remaining complieddata 204 afterblock 1208 and implements stemming. Stemming may be performed after other blocks withinmethod 1200 without departing from the scope hereof. Stemming is used in information retrieval systems to make sure variants of words are not left out when text is retrieved (Julie Beth Lovins. 1968. Development of a stemming algorithm. Mech. Transl. Comput. Linguistics, 11(1-2):22-31.). The process is used in removing derivational suffixes as well as inflections (i.e. suffixes that change the form of words and their grammatical functions) so that word variants can be conflated into the same roots or stems. For example, words like “playing”, “plays”, “played” have the same common root “play”. Therefore, by stemming we transform all the word derivations into their corresponding root. It also reduces computational complexity of the process, and increase predictive performance of the model. In one embodiment, block 1210 implements Porter's stemmer. (Porter, M. F., 1980. An algorithm for suffix stripping. Program; which is incorporated by reference herein). - In
block 1212, lemmatization on the remaining complieddata 204 is implemented. In one example ofblock 1212, thedata ingestion module 112 analyzes the remaining complieddata 204 afterblock 1210 and implements lemmatization. Lemmatization may be performed after other blocks withinmethod 1200 without departing from the scope hereof. Lemmatization puts emphasis on vocabulary and morphological analysis of word and tries to remove inflectional endings, thereby returning words to their dictionary form. Lemmatization checks to make sure that words are properly used in text. For example, it analyzes if query words are used as verbs or nouns. - In
block 1214, a plurality of N-grams is generated from the remaining complieddata 204 is implemented. In one example ofblock 1214, thedata ingestion module 112 analyzes the remaining complieddata 204 afterblock 1212 and generates a plurality of N-grams. N-gram generation may be performed after other blocks withinmethod 1200 without departing from the scope hereof. In embodiments that optionally includeblock 1214, instead of working with single words to construct the vocabulary in a Bag-of-word model, N-grams are phrases constructed with consecutive N words in the source text. Each of the N-gram can then be considered a term in the text retrieval and analysis. - In
block 1216, a Term Frequency Inverse Document Frequency (TF-IDF) Matrix is generated from the remaining complieddata 204. In one example ofblock 1216, thedata ingestion module 112 analyzes the remaining complieddata 204 afterblock 1214 and generates a TF-IDF Matrix. TF-IDF Matrix generation may be performed after other blocks withinmethod 1200 without departing from the scope hereof. The TF-IDF scoring algorithm considers frequency of the terms appearing in a document, and at the same time put more weight on those terms that occur less frequently across documents in the text corpus. The term frequency, tft,d describes how frequent the term t is in a given document d, and is expressed as log normalized as Log(1+tft,d). On the other hand, df refers to document frequency and relates to the number of document that contains the search keyword. The inverse document frequency (idf) describes the relevance of the search term in relation to all the documents in the collection, as depicted in the following equation: -
- where N is the total number of documents in the text corpus. The (tf-idf) is therefore defined as:
-
- The processed
submission 206 may then be analyzed by micro-credentialpredictive module 118 via classification of the processedsubmission 206 by thepredictive model 120. In one example, thepredictive model 120 is based on one or more of a Pachinko Allocation Model (PAM), a Latent Dirichlet Allocation (LDA) Model, and a MLkNN model. - Topic modeling discovers the thematic structure of a given text corpus. It models the relationships between the vocabulary of the corpus and the documents through the thematic structure. Topic models gained popularity in recent years as the learned structure and relationships can be used for the analysis of large-scale natural language text data, including query, discover trends, language translation, document classification, information retrieval, text summarization, sentiment analysis and various data mining problems. Given a corpus of text documents, parameter estimation in these topic models extracts a lower dimensional set of multinomial, i.e., multi-label word distributions called topics. Mixtures of the topics provide high probability to the training data, and the highest probability words in each topic provide the keywords that briefly summarize the themes in the text corpus (e.g., the processed submission 206).
- The topic modeling problem can be attempted as a multi-label classification problem, where each document may belong to several pre-defined topics simultaneously. The problem can be formally defined here. Let X denote the domain of documents and let Y={1, 2, . . . , Q}, be the finite set of topics, i.e., the labels. Given a training set, T={(xi, Yi)}i=1 m, where xi∈X, Yi∈ drawn from an unknown distribution D, the objective is to generate a multi-label classifier, h: X→2Y, which optimizes some specific evaluation metric. Instead of providing only the input to output label mapping, the learning algorithm will produce a real-valued function of the form, ƒ: X×Y→
-
FIG. 13 illustrates the PAM structure in contrast with LDA and multinomial Dirichlet models. InFIG. 13 , the four topic model structures include: (a) Dirichlet multinomial: for each document, a multinomial distribution over words is sampled from a single Dirichlet distribution. (b) LDA: it samples a multinomial over topics for each document, and then generates words from the topics. (c) a 4-level PAM: it contains a root, a set of super-topics, a set of sub-topics and a word vocabulary. Both the root and the super-topics are associated with Dirichlet distributions, from which multinomials over their children for each document are sampled. (d) PAM: an arbitrary directed acyclic graph (DAG) structure encoding the topic correlations. Each interior node is considered a topic and associated with a Dirichlet distribution - The LDA2vec model learns dense word vectors jointly with Dirichlet distributed latent document-level mixtures of topic vectors (Christopher E Moody. 2016. Mixing dirichlet topic models and word embeddings to make lda2vec.arXiv preprint arXiv:1605.02019.). In one embodiment, the
predictive model 120 used by micro-credentialpredictive module 118 is based on Pachinko Allocation Model instead of the LDA as the algorithm improves upon LDA based approaches by modeling correlations between topics in addition to the word correlations which constitute topics. PAM may be advantageous, in certain embodiments, as it provides more flexibility and greater expressive power than Latent Dirichlet allocation. - In one embodiment, the
predictive model 120 used by the micro-credentialpredictive module 118 is trained based on a Pam2vec algorithm. In this model, the total loss term, L is the sum of the Skipgram Negative Sampling Loss (SGNS), Lij neg with the addition of a Pachinko-likelihood term over document weights, Ld. The loss is conducted using a context vector, {right arrow over (cj)}, pivot word vector,wj , target word vector wi, and negatively-sampled word vector wl. Pairs of pivot and target words (j, i) are extracted when they co-occur in a moving window scanning across the corpus (e.g., processed submission 206). For every pivot-target pair of words the pivot word is used to predict the nearby target word. Each word is represented with a fixed-length dense distributed-representation vector. The same word vectors are used in both the pivot and target representations. Both words and document vectors are then embedded into the same space and thepredictive model 120 is trained based on both representations simultaneously. By adding the pivot and document vectors together, both spaces are effectively joined. -
FIG. 14 shows amethod 1400 for training thepredictive model 120 ofFIG. 1 , in embodiments.Method 1400 is implemented byaccreditation portal 102, such as via a micro-credentialpredictive module 118, in an embodiment. - In
block 1402,method 1400 receives training data. Training data may be a plurality of the received processedsubmissions 206, or may be created ones thereof that are associated with appropriate micro-credentials. - In
block 1404,method 1400 calculates a total loss term of the training sample received inblock 1402. In one example ofblock 1404, micro-credentialpredictive module 118 calculates the total loss term, L, as the sum of the Skipgram Negative Sampling Loss (SGNS), Lij neg with the addition of a Pachinko-likelihood term over document weights, Ld. The loss is conducted using a context vector {right arrow over (cj)}, pivot word vector, {right arrow over (wj)}, target word vector wi, and negatively-sampled word vector wl. - In
block 1406, themethod 1400 extracts pivot and target words of said training sample, and represents them with a fixed-length dense vectors. In one example ofblock 1404, micro-credentialpredictive module 118 extracts pairs of pivot and target words (j, i) when they co-occur in a moving window scanning across the corpus (e.g., said given sample processed submission 206). For every pivot-target pair of words the pivot word is used to predict the nearby target word. Each word is represented with a fixed-length dense distributed-representation vector. - In
block 1408, themethod 1400 embeds the extracted words and vectors together in a single embedded space, and trains a predictive model using the embedded space. - In
block 1410, themethod 1400 outputs the trained predictive model. In one example ofblock 1410, micro-credentialpredictive module 118 outputspredictive model 120 ofFIG. 1 . - As discussed above, the trained
predictive model 120 is used to characterize one or more micro-credentials 122 to a submission received fromapplicant 104. Thepredictive model 120 may be based on a single predictive algorithm (e.g., the Pam2vec algorithm discussed above with respect toFIG. 14 ), or a plurality of predictive algorithms. -
FIG. 15 shows amethod 1500 for classifying a submission (e.g., processed submission 206) to output one or more micro-credentials (e.g., micro-credentials 122 ofFIG. 1 ), in an embodiment. - In
block 1502, themethod 1500 receives a submission for analysis. In one example ofblock 1502, the micro-credentialpredictive module 118 receives the processedsubmission 206 from thedata ingestion module 116. -
Method 1500 then implements one or more ofbranches -
Branch 1504 implements a ML-kNN predictive model (which is an example of predictive model 120). ML-kNN is an effective realization of the multilabel classification algorithm (Min-Ling Zhang and Zhi-Hua Zhou. 2007. Ml-knn: A lazy learning approach to multi-label learning. Pattern recognition, 40(7):2038-2048, which is incorporated herein by reference.). For each unseen document instance, its k nearest neighbors in the training set are first identified (block 1510). Subsequently, based on assessment of information gained from the predicted label sets of these neighboring instances, i.e., the number of neighboring instances (block 1512) belonging to each possible class, maximum a posteriori (MAP) principle is employed (block 1514) to determine the label set for the unseen instance (block 1516). -
Branch 1506 implements a latent dirichlet allocation predictive model (which is an example of predictive model 120). Latent Dirichlet Allocation (LDA) is a topic model applied mostly to generate texts based on topic of choice (David M Blei, Andrew Y Ng, and Michael I Jordan. 2003. Latent dirichlet allocation. Journal of machine Learning research, 3(January):993-1022; which is incorporated by reference herein.). It also can be employed in the text categorization problems. The received submission is split into a plurality of sequential features (block 1518). LDA is then implemented (block 1520) which represents each document as a mixture of topics, where each topic is a multinomial distribution over words with respect to a vocabulary. To generate a document, themethod 1500 LDA first samples a per-document multinomial distribution over topics from a Dirichlet distribution. Then it repeatedly samples a topic from this multinomial and samples a word from the topic. Topics extracted (block 1522) by LDA capture correlations among words. An output prediction vector of the given topic to a set of potential micro-credentials is calculated (block 1524) for each generated topic, and those satisfying a threshold value are indicated as appropriate micro-credentials. -
Branch 1508 implements a pachinko dirichlet allocation predictive model (which is an example of predictive model 120). The Pachinko Allocation Model (PAM) utilizes a multi-level directed acyclic graph (DAG) structure to model the topic correlations and hierarchies, where the leaf nodes represent the words, and the nodes in the inner levels represent topics (Wei Li and Andrew McCallum. 2006. Pachinko allocation: Dag-structured mixture models of topic correlations. In Proceedings of the 23rd international conference on Machine learning, pages 577-584; which is incorporated by reference herein). The received submission is split into a plurality of sequential features (block 1526). Then, to implement PDA model (block 1528), topics are considered distribution over words in the vocabulary. It samples a topic path for each word to identify the topic associations. The model is trained with Gibbs sampling method. Topics extracted (block 1530) by PAM capture correlations among words. An output prediction vector of the given topic to a set of potential micro-credentials is calculated (block 1532) for each generated topic, and those satisfying a threshold value are indicated as appropriate micro-credentials. - Although only three branches (
branches level 1,level 2, and level 3). Each target micro-credential 124 may be associated with a target classifier 126 (which may be any one or more of the branches discussed in method 1500). Certain target micro-credentials 124 may be available only depending on specific responses to the prompts discussed inFIGS. 3-11 . If applicant says they would not do anything differently in response to the “moving forward” prompt shown inFIG. 7 , a “reflection” micro-credential may not be available. In one embodiment, an individual binary classifier may be fit to each micro-credential target (e.g., using logistic regression, per target). These binary classifiers may then be used (in addition to or in alternative tobranches - Referring back to
FIG. 15 , inblock 1534,method 1500 applies ensemble multi-label learning. In one example, multiple different learning algorithms must come to a consensus on target potential micro-credentials associated with the received submission by each branch. In another example, the associated prediction vectors must reach a desired threshold. Each of the three branches (1504, 1506, 1508) may be separate multi-label (i.e., multi-output) classifiers that independently predicts the micro-credentials for a given submission (1516, 1524, 1532). The ensemble multi-label learner (1534) receives the predictions from the three branches and combines the predictions, through one or both of Boosting and stacked generalization and generates the final consensus prediction of micro-credentials. - In
block 1536, the target potential micro-credentials that are collectively agreed upon in block 1534 (or those output by one or more branches ifblock 1534 is not included) are output as assigned micro-credentials (e.g., micro-credentials 122) and associated with the received submission.Block 1536 may include identifying a plurality of the assigned micro-credentials 122 that collectively qualify theapplicant 104 for one ormore accreditation credits 123 based on configuration settings defined byaccreditor 106 interaction with accreditor device 110(2).Block 1536 may include transmitting an API call to display one or more of the assigned micro-credentials 122 and associatedaccreditation credits 123 on the applicant device 110(1) and/or accreditor device 110(2). - Machine learning models are inherently sensitive to the distribution of the training dataset. The population data distribution may change after the model is built on a subset obtained at a specific timestamp in the past. If it happens, the model will suffer consequences like increasing in the misclassification rate, losing reliability. Therefore, post-training model maintenance and calibration is a necessary step which needs to be scheduled on a regular basis.
- The following illustrates how annotated data (e.g., training data used to create and/or update the prediction model 120) impacts correctness, and possibly inherent biases implemented by the
prediction model 120. To create initial training data to train theprediction model 120 for use, a training phase was initiated that focused on creating a process for establishing interrater reliability (IRR) using the educational research literature. The IRR process included the following steps: 1) training a diverse group of data taggers as qualitative data labelers/coders using theaccreditation platform 102; and 2) usingaccreditation platform 102 driven a priori labels/codes to analyze submitted narratives (e.g., submissions 202). This training phase methodology led to outlining the procedure to establish IRR using a priori codes. The coded data will then be used to develop a second phase methodology in which a machine learning algorithm will be created. - According to Walter et al.'s 1998 power calculations for interrater reliability, a minimum of 2 raters are needed for 43 pieces of information to have enough power to find Interclass Correlation Coefficient (ICC) agreement above 0.70. Since we wanted to compare pre and post, 4 raters instead of only 2 ensures more power for comparisons (i.e. 2 raters×2 attempts) and the same rationale was used as we wanted to compare 3 frameworks (2 raters×3 frameworks). Therefore 6 raters are recommended for coding. Additionally, if we wanted to conduct t tests by pre-post or by “correct” answer for each code, a power analysis using G*Power software shows that 42-45 items are needed. As we expect a few problematic observations, 45 items/observations are recommended.
-
TABLE 1 Pre and post coding results Pre-Training Post-Training Considering the Items Average Correct Answers 59% 83% Average Agreement (not necessarily 59% 70% correct) Number of Items Matched Correct & 21 (47%) 22 (50%) Agreement percentages ICC for the Measure 0.46 0.83 Considering the Coders Coder 1 Correctness 53% 80 % Coder 2 Correctness 56% 81 % Coder 3 Correctness 58% 77 % Coder 4 Correctness 64% 89% Coder 5 Correctness 67% 84 % Coder 6 Correctness 53% 82% - We then ran statistical analysis to measure Intraclass Correlation at 95% confidence interval and share the results in Table 2:
-
TABLE 2 Average total agreement = 80% Intraclass Correlation Coefficient 95% Confidence Interval F Test with True Value Intraclass Lower Upper 0 Correlationb Bound Bound Value df1 df2 Sig Single Measures .477a .397 .561 6.462 119 595 .000 Average Measures .845c .798 .884 6.462 119 595 .000 - Table 2 establishes that two-way mixed effects model where people effects are random and measures effects are fixed. It is assumed that the estimator is the same, whether the integration effect is present or not. Type C intraclass correlation coefficients using a consistency definition. The between-measure variance is excluded from the denominator variance. The estimate is computed assuming the interaction effect is absent, because it is not capable of estimation otherwise. The calculation shown in table 2 provides for a high confidence in data coding, which is then used to code a larger set of data for preparing the
prediction model 120. - One simple solution, where the prediction model is biased due to poor data labeling during training would be to retrain the model with the new training dataset when available. But, the approach may become time consuming and model still may suffer the aforementioned issues during the retraining interval. The second approach, is to apply incremental update on the model parameters after each new training sample whenever pushed from the platform.
-
FIG. 16 illustrates a functional block diagram of a model calibration method 1600 with a flow diagram which depicts all the modules necessary to maintain the model (e.g., predictive model 120) deployed in production. Method 1600 is implemented using themodel maintenance module 128, for example. The method 1600 implements of three components: i)Aggregator 1602, ii)Validator 1604, and iii)Model comparator 1606. - A
new sample 1608 is received and stored within abuffer 1610 of size m samples. Method 1600 then re-computes the statistics of the m samples including thenew sample 1608. It reports to thevalidator 1604 when thebuffer 1610 is full. The pipeline utilizes an adaptive algorithm to change the size ofbuffer 1610 in each run based on the variance observed in the statistics. - The
validator 1604 employs an ensemble machine learning approach to detect if any of thenew samples 1608 present in thebuffer 1610 is an outlier. If an outlier is present, it re-assesses the statistics calculated by theaggregator module 1602 and then triggers the incremental model parameter update (block 1612) on amodel clone 130. The updates do not affect the model being used in the production environment (e.g., predictive model 120). Incremental update steps vary significantly by model types, model complexity and difference between the previous and new statistics. Thevalidator module 1604, therefore, needs to account for successfully deciphering and understanding the general trends of the data and semantics of the population statistics. Method 1600 utilizes multifarious techniques involving machine common sense reasoning, rare event modeling and model selection from an ensemble to address the changes. - The
model comparator 1606 then performs an evaluation (block 1614) using a pre-determined validation data to compare model performances of the production environment (e.g., predictive model 120) and the newly updatedmodel clone 134. If the predictive performance of the updatedmodel clone 134 is satisfactory, it triggers a backup and deploy event to replace the production environment model (e.g., predictive model 120) in production with amodel update 132. -
Model maintenance module 128 may further analyze the outputs of the models and verify that the models are performing in an ethical manner. The purpose of the embodiments of the systems and methods described herein is to improve outcomes for minoritized students, but unintentional and unwanted bias may occur in machine learning framework.Model maintenance module 128 may compensate for this unintentional and unwanted bias by monitoring the output and verifying it is performing appropriately. - Machine learning models (e.g., predictive models 120) may be inherently biased if the data to which they are trained on has said inherent bias (see my comment above). The training data is annotated using human annotators, and thus the annotators shape the data used by the model.
Model maintenance module 128 may analyze the output of themodels 120 and provide valuable feedback to our human annotators. This feedback provides annotators the opportunity to reconsider their own inherent biases and to account for the way the models leverage their annotations. The only way to achieve ethical results in use cases such as these is to view the entire process iteratively—from end to end. The annotators do not simply decide on annotations once and for all. Rather, they are privy to the sorts of mistakes the machine learning model makes from their annotations in order to consider possible biases in their own annotation work. They consider how to address the root (rather than superficial) of the unwanted bias (Corbett-Davies, S. and Goel, S. (2018). The measure and mis-measure of fairness: A critical review of fair machine learning. CoRR, abs/1808.00023.; Fazelpour, S. and Lipton, Z. C. (2020). Algorithmic fairness from a non-ideal perspective. AIES '20, 219 page 57-63, New York, N.Y., USA. Association for Computing Machinery.; Estrada, D. (2020). Ideal theory in AI ethics. CoRR, abs/2011.02279.). - The alternative is to ensure that the unfairness generated by an algorithm on particular annotations is distributed equally among all groups. This does not usually improve the situation much because it fails to account for and address the characteristics of the data that are leading to the unwanted bias in the first place. Further, such superficial alternative approaches fail to provide guidance on how the machine learning fueled platform like the systems and methods described herein should address the root cause of the unwanted biases. To address these inherent bias problems, the
model maintenance module 128 may implement a machine-in-the-loop strategy to understand the intersection of machine and human bias for an effective and fair micro-credentialing process. - Referring back to
FIG. 1 , themodel maintenance module 128 may analyze the output micro-credentials 122 to calculate afairness metric 134. In one embodiment, thefairness metric 134 is based on conditional statistical parity (CSP). CSP measures whether particular groups ofapplicants 104 have equal probability of receiving a favorable outcome (in this case a credential 122) while permitting a legitimate factor to affect the prediction fairly. The applicant pool considered for the fairness metric may have required thresholds, such as number of submitted experiences. In one embodiment, submissions fromapplicants 104 who have not submitted at least 5 submissions are not considered for thefairness metric 134 becauseapplicants 104 who have submitted fewer than 5 experiences to be too inexperienced and exclude them from consideration. - Thus, to calculate the
fairness metric 134, themodel maintenance module 128 may identify aCSP value 136 of eachtarget micro-credential 124. TheCSP value 136 is calculated by determining the probability of saidtarget micro-credential 124 being issued to a certain demographic group ofapplicants 104. - As discussed above, the micro-credentials 122 may be divided into a hierarchy of levels. In testing of the present embodiments herein, for level-1 and level-2 credentials, CSP was found for many—but not all—credentials. We found that CSP exists for most credentials between most groups, but occasionally a group achieves substantially fewer credentials than other groups. For example, the
applicants 104 who identified as white achieved a CSP of 0.1049 for the “working with others” credential, whereas students who identify as black or African American achieved a CSP of 0.0368 (see 2). If the data annotations are taken to be authoritative (and not unintentionally inherently biased), students who identify as black or African American would necessarily be somehow deficient (perhaps due to systemic discouragement of these experiences). A second possibility also exists, however. Students who identify as black or African American may express how they work with others in ways that are different from white students and in ways that the annotators might have missed. These questions cannot be answered by the outputs of the model alone. They need to be answered by the subject experts (in this case, the annotators). - Accordingly, when the
CSP value 136 for a first demographic ofapplicants 104 for a giventarget micro-credential 124 differs from a second demographic ofapplicants 104 for said given target micro-credential 124 greater than or equal to aCSP threshold value 138, themodel maintenance module 128 may trigger amodel update 132. In one embodiment, theCSP threshold value 138 is equal to or greater than 0.05 as credentials of concern. - The following example shows a processed submission (e.g., processed submission 206) that was not assigned at least 5 micro-credentials by human annotators (e.g., 5 of the
target micro-credential 124 were not included as a micro-credential 122 when human annotators assigned micro-credentials, and thus would not be used to train the predictive model 120). The submission text was as follows: “So, I have been working on this project for some time and the challenge I am facing is to balance various responsibilities—I have to manage multiple roles and various tasks. I have been feeling very stressed out and feeling the need to take a break. I reached out to some family and friends and have a conversation and found a way to destress. I learnt that there are ups and down in this process and one should keep the bigger picture in mind and not let bad news get me down. I would not allow myself to go down this path for too long and seek some interventions earlier.” - In example 1, the machine learning model (e.g., predictive model 120) predicted the following level-3 codes that the human coders missed during annotations. The predictions were later marked approved after review of by annotators (e.g., administrator 108) and being included as new training data to generate
model update 132. -
- Recognize one's emotions, thoughts, behaviors, and/or body sensations.
- Uses strategy to regulate cognitive, behavioral, and/or emotional states in the moment (e.g., reaching out to someone, breathing, etc.)
- 1.2.3 Enacts Self and/or others advocacy
- 1.4.2 Observes situations carefully
- 6.5.2 Reflects on next steps, or what they could have done differently based on the submitted experience.
- The following example shows a processed submission (e.g., processed submission 206) that was not assigned at least 6 micro-credentials by human annotators (e.g., 6 of the
target micro-credential 124 were not included as a micro-credential 122 when human annotators assigned micro-credentials, and thus would not be used to train the predictive model 120). The submission text was as follows: “I worked with my sister to resolve a family conflict related to my mothers health. She did not do her part and that led to my mother's deteriorating health. I learnt that I can not trust and rely on my sister. I would have found other people to take care of my mom's health and manage the situation. I will identify 2-3 resource people and keep in touch with them to make sure that this doesn't happen again.” - In example 2, the machine learning model (e.g., predictive model 120) predicted the following level-3 codes that the human coders missed during annotations. The predictions were later marked approved after review by annotators (e.g., administrator 108) and are being included as new training data to generate
model update 132. -
- 1.1.1 Recognize one's emotions, thoughts, behaviors, and/or body sensations
- 1.4.2 Observes situations carefully
- 6.4.3 Implements problem solving strategies
- 6.5.3 Engages in Reflection (Code this micro if the student: 1) Demonstrates that their experience included a reflective process; 2) If student describes some kind of emotional/reflective thinking response that came out of their experience
- 1.2.2 Recognize one's shortcomings to overcome obstacles or improve skills (e.g., I used to do X, but not doing that anymore because it didn't serve)
- 5.5.3 Supports personal mental health
- In example 3, three models were trained for predicting level-3 micro-credentials: Logistic Regression, Nai{umlaut over (v)}e Bayes and Support Vector Machines with linear kernel on a 5000 dimensional “term frequency inverse document frequency” scores of the experience text corpus that were received from
applicants 104. A 10-fold cross-validation was conducted for each of the models, and the evaluation results are presented in Table 3, below. Each of the three classifiers show promising prediction performance where Logistic Regression based multi-output classification demonstrated slightly faster performance than the rest on an average. -
TABLE 3 Experimental evaluation of three Bag-of-Word Models in terms of average accuracy of each of predictions of 152 level-3 microcredential classes, and CPU time required for micro-credential assignment of each experience text submitted. Average Prediction Time Model Name Average Accuracy per Submission Logistic Regression 0.96 ± 0.066 0.089959 Support Vector Machines 0.96 ± 0.006 0.093059 Nai{umlaut over (v)}e Bayes 0.94 ± 0.005 0.109604 - A sample of
output micro-credentials 122 were evaluated. When the possible race categories were isolated to “white” and “black or African American” for the sake of illustration, 12.8% of the level-2 micro-credentials have a difference in CSP greater than or equal to 0.05. 60% of these differences favored white submissions. The annotators assessed these differences looking especially for initial annotations that might contain some annotator bias. For instance, Table 4 outlines effectiveness of model refinement through the proposed iterative pipeline on a particular level-2 micro-credential, “Working with Others”. -
TABLE 4 Conditional statistical parity for the “Working with Others” credential by race, before and after annotation re-assessment. (Results for other credentials will be included later for presentation.) Iteration White African American Before Annotation 0.1049 0.0368 Reassessment After Annotation 0.1049 0.0743 Reassessment - After one iteration of training the model, the
output micro-credentials 122 were sent back toannotators 108 and asked them to reconsider the annotations for credentials exhibiting a difference inCSP value 136 greater than or equal to 0.05 (e.g., CSP threshold 138) between two demographic groups. This reconsideration was performed one demographic group at a time, so that theannotators 108 could consider possible systemic bias as explanations. For example, the annotators discovered that black or African American students in the sample tend to talk about working with others passively, whereas white students tend to describe working with others actively. - Referring to
FIG. 1 ,accreditation portal 140 may further include adisplay module 140.Display module 140 interacts with applicant device 110(1), accreditor device 110(2), and administrator device 110(3) to display information via one or more API calls/requests with the hosted URL browser on the givencomputing device 110.FIG. 17 depicts ascreenshot 1700 implemented bydisplay module 140 showing a plurality ifmicro-credentials 122 gained 1702 and remaining needed 1704 to achieve anaccreditation credit 123, in an embodiment. -
Display module 140 further includes various filters that are accessible byapplicant 104,accreditor 106, andadministrator 108, via interaction with theirrespective computing device 110.FIGS. 18-19 , for example, show ascreenshot submissions selectable period 1902.FIG. 20 shows ascreenshot 2000 of displayed and selectable experiences submitted after selection of one of the selectable periods 1802, ofFIGS. 18-19 , in an embodiment.FIG. 21 shows ascreenshot 2100 displayed in response to user-selection of one of the displayed and selectable experiences shown inFIG. 20 , in an embodiment. - It should be appreciated that, although
FIGS. 18-21 show displays associated with the applicant device 110(1), similar displays may be configured by thedisplay module 140 for each of the accreditor device 110(2) and administrator device 110(3) to display and interact with each of theaccreditor 106 andadministrator 108. For example, the accreditor device 110(2) may display an interactive display interactable by theaccreditor 106 to receive configuration settings such as number ofmicro-credentials 122 required to achieve a givenaccreditation credit 123, and which accreditation credits 123 are available to givenapplicants 104. - Changes may be made in the above methods and systems without departing from the scope hereof. It should thus be noted that the matter contained in the above description or shown in the accompanying drawings should be interpreted as illustrative and not in a limiting sense. The following claims are intended to cover all generic and specific features described herein, as well as all statements of the scope of the present method and system, which, as a matter of language, might be said to fall therebetween.
Claims (20)
1. A method for micro-credential accreditation, comprising:
receiving a text submission from an applicant device describing an event the applicant experienced;
processing the text submission with a predictive model to fit at least one micro-credential to the text submission, the micro-credential at least partially qualifying the applicant for credit from an accreditor;
outputting the at least one micro-credential.
2. The method of claim 1 , wherein outputting the at least one micro-credential includes providing school credit to the applicant.
3. The method of claim 1 , wherein outputting the at least one micro-credential includes displaying, on the applicant device, a chart indicating required micro-credentials to receive a desired accreditation credit.
4. The method of claim 1 , the receiving a text submission comprising providing one or more prompts to the applicant device, and receiving responses to said one or more prompts from the applicant device.
5. The method of claim 4 , the prompts including selectable prompts including a plurality of selectable options, and fillable prompts including an input box for receiving text input.
6. The method of claim 5 , further comprising processing the responses to generate a compiled submission, the compiled submission including a text string, portions of the text string corresponding to a selected one of the selectable options compiled into a first portion text string, and input text from the input box used as a second portion of the text string.
7. The method of claim 1 , further comprising generating a processed submission by:
removing gibberish text within the text submission;
standardizing text within the text submission;
removing white space within the text submission;
removing stop-words within the text submission;
stemming individual words or phrases within the text submission; and,
performing lemmatization on the words or phrases within the text submission;
wherein said processing the text submission includes processing the processed submission.
8. The method of claim 1 , further comprising generating a processed submission by identifying a term frequency inverse document frequency (TD-IDF) matrix from the received text submission; wherein said processing the text submission includes processing the TD-IDF matrix.
9. The method of claim 1 , the processing the text submission comprising applying the text submission, or a processed version thereof, to a Pachinko Allocation Model to fit the at least one micro-credential.
10. The method of claim 1 , the processing the text submission comprising applying the text submission, or a processed version thereof, to a plurality of different prediction models each generating a list of fit micro-credentials, and implementing a consensus algorithm to develop a final list of one or more micro-credential from each least of fit micro-credentials.
11. The method of claim 10 , the consensus algorithm including one or both of Boosting and stacked generalization.
12. The method of claim 1 , further comprising monitoring previously output micro-credentials by demographic groups of applicants to identify whether the predictive model consistent between each demographic group; and updating the predictive model when the predictive model is not consistent within a fairness metric.
13. The method of claim 12 , wherein said monitoring comprises calculating a plurality of conditional statistical parity (CSP) values, each CSP value defining probability of a target micro-credential being issued to each demographic group; and comparing differences between CSP values to a CSP threshold.
14. A system for micro-credential accreditation, comprising:
a processor;
memory operatively coupled to the processor;
a micro-credential predictive module defined as computer-readable instructions within the memory and defining:
a predictive model that, when the micro-credential predictive module is executed by the processor, fits a text submission to one or more target micro-credentials, and outputs the fit target micro-credentials as assigned micro-credentials.
15. The system of claim 14 , wherein the predictive model includes a plurality of target classifiers, each associated with one or more of the target micro-credentials.
16. The system of claim 14 , the target micro-credentials including a hierarchy of levels of micro-credentials.
17. The system of claim 14 , further comprising a model maintenance module that, when executed by the processor, identifies a fairness metric the one or more target micro-credentials.
18. The system of claim 17 , the fairness metric based on conditional statistical parity of the one or more target micro-credentials between different demographic groups.
19. A method for maintaining a predictive model used for micro-credential accreditation, comprising:
outputting a plurality of micro-credentials, said micro-credentials being fit, from a group of target micro-credentials, based on a prediction model analyzing a plurality text submissions received from one or more applicant devices;
analyzing a fairness metric of the target micro-credentials by determining a likelihood that each target micro-credential will be fit to each of a plurality of demographic groups;
updating the prediction model when the fairness metric indicates that the prediction model does not output the target micro-credentials across the demographic groups within a fairness threshold.
20. The method of claim 19 , wherein analyzing the fairness metric comprises:
calculating a plurality of conditional statistical parity (CSP) values, each CSP value defining probability of a target micro-credential being issued to each demographic group; and
comparing differences between CSP values to a CSP threshold.
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US17/998,719 US20230205938A1 (en) | 2014-12-03 | 2021-12-08 | Feature-preserving proxy mesh generation |
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US201462087072P | 2014-12-03 | 2014-12-03 | |
PCT/US2021/072805 WO2023107133A1 (en) | 2021-12-08 | 2021-12-08 | Feature-preserving proxy mesh generation |
US17/998,719 US20230205938A1 (en) | 2014-12-03 | 2021-12-08 | Feature-preserving proxy mesh generation |
Publications (1)
Publication Number | Publication Date |
---|---|
US20230205938A1 true US20230205938A1 (en) | 2023-06-29 |
Family
ID=86897904
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US17/998,719 Pending US20230205938A1 (en) | 2014-12-03 | 2021-12-08 | Feature-preserving proxy mesh generation |
Country Status (1)
Country | Link |
---|---|
US (1) | US20230205938A1 (en) |
Cited By (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20230136726A1 (en) * | 2021-10-29 | 2023-05-04 | Peter A. Chew | Identifying Fringe Beliefs from Text |
-
2021
- 2021-12-08 US US17/998,719 patent/US20230205938A1/en active Pending
Cited By (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20230136726A1 (en) * | 2021-10-29 | 2023-05-04 | Peter A. Chew | Identifying Fringe Beliefs from Text |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
Brinton et al. | Learning about social learning in MOOCs: From statistical analysis to generative model | |
US20190347571A1 (en) | Classifier training | |
Hilbert et al. | Machine learning for the educational sciences | |
US20180102062A1 (en) | Learning Map Methods and Systems | |
Fesler et al. | Text as data methods for education research | |
Goggins et al. | Learning Analytics at" Small" Scale: Exploring a Complexity-Grounded Model for Assessment Automation. | |
Anvar Shathik et al. | A literature review on application of sentiment analysis using machine learning techniques | |
Alswedani et al. | Discovering urban governance parameters for online learning in Saudi Arabia during COVID-19 using topic modeling of twitter data | |
Lima et al. | TECLA: A temperament and psychological type prediction framework from Twitter data | |
AYDIN et al. | Turkish sentiment analysis for open and distance education systems | |
Shafique et al. | Role of Artificial Intelligence in Online Education: A Systematic Mapping Study | |
Yilmaz et al. | Harnessing natural language processing to support decisions around workplace-based assessment: machine learning study of competency-based medical education | |
Hristova et al. | Media coverage and public perception of distance learning during the COVID-19 pandemic: a topic modeling approach based on BERTopic | |
US20230205938A1 (en) | Feature-preserving proxy mesh generation | |
US11550832B2 (en) | Systems and methods for micro-credential accreditation | |
Barkaoui | Using multilevel modeling in language assessment research: A conceptual introduction | |
Hu et al. | Semantic representation analysis: A general framework for individualized, domain-specific and context-sensitive semantic processing | |
Ajani et al. | Design a Mechanism for Opinion Mining | |
Ramesh et al. | Hybrid support vector machine and K‐nearest neighbor‐based software testing for educational assistant | |
Das et al. | Analysis of Student Sentiment Dynamics to Evaluate Teachers Performance in Online Course using Machine Learning | |
Assayed et al. | Psychological Emotion Recognition of Students Using Machine Learning based Chatbot | |
Bonacin et al. | An ontological model for supporting intention-based information sharing on collaborative problem solving | |
Sagum et al. | Application of language modelling in sentiment analysis for faculty comment evaluation | |
Alade et al. | Sentiment analysis of nigerian students’ tweets on education: a data mining approach’ | |
Mathimagal et al. | Intellectual behaviour of student based on education data determined by opinion mining |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:STAVA, ONDREJ;REEL/FRAME:061803/0245Effective date: 20211209 |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: DOCKETED NEW CASE - READY FOR EXAMINATION |
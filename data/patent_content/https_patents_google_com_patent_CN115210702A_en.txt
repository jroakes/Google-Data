CN115210702A - Topology base model supporting improved merging and stable feature identification - Google Patents
Topology base model supporting improved merging and stable feature identification Download PDFInfo
- Publication number
- CN115210702A CN115210702A CN202080098033.8A CN202080098033A CN115210702A CN 115210702 A CN115210702 A CN 115210702A CN 202080098033 A CN202080098033 A CN 202080098033A CN 115210702 A CN115210702 A CN 115210702A
- Authority
- CN
- China
- Prior art keywords
- edge
- edges
- computing system
- vertex
- base model
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Pending
Links
Images
Classifications
-
- G—PHYSICS
- G01—MEASURING; TESTING
- G01C—MEASURING DISTANCES, LEVELS OR BEARINGS; SURVEYING; NAVIGATION; GYROSCOPIC INSTRUMENTS; PHOTOGRAMMETRY OR VIDEOGRAMMETRY
- G01C21/00—Navigation; Navigational instruments not provided for in groups G01C1/00 - G01C19/00
- G01C21/38—Electronic maps specially adapted for navigation; Updating thereof
- G01C21/3863—Structures of map data
- G01C21/387—Organisation of map data, e.g. version management or database structures
- G01C21/3878—Hierarchical structures, e.g. layering
-
- G—PHYSICS
- G01—MEASURING; TESTING
- G01C—MEASURING DISTANCES, LEVELS OR BEARINGS; SURVEYING; NAVIGATION; GYROSCOPIC INSTRUMENTS; PHOTOGRAMMETRY OR VIDEOGRAMMETRY
- G01C21/00—Navigation; Navigational instruments not provided for in groups G01C1/00 - G01C19/00
- G01C21/26—Navigation; Navigational instruments not provided for in groups G01C1/00 - G01C19/00 specially adapted for navigation in a road network
- G01C21/34—Route searching; Route guidance
- G01C21/36—Input/output arrangements for on-board computers
- G01C21/3667—Display of a road map
- G01C21/367—Details, e.g. road map scale, orientation, zooming, illumination, level of detail, scrolling of road map or positioning of current position marker
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/22—Indexing; Data structures therefor; Storage structures
- G06F16/2228—Indexing structures
- G06F16/2272—Management thereof
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/29—Geographical information databases
Abstract
The present disclosure is directed to a system and method for providing a stable topological representation of path networks and features associated with those networks. The present disclosure is exemplified using a road network having applications in mapping, navigation, and autonomous vehicles. Extensions can be learned by practicing the present disclosure. Utilizing implementations disclosed herein may provide advantages for data consolidation between different mapping systems and map data, while improving overall stability by developing common reference standards that are tied to semantic features rather than abstract geographic representations.
Description
Technical Field
The present disclosure relates generally to mapping data and merging. More particularly, the present disclosure relates to computer-implemented systems and methods that may provide improved stability for mapping applications and corresponding data, and provide improved ability to merge and/or correlate features from previously unrelated geographic data sets.
Background
Mapping or indexing the world is an unbounded problem with the enormous amount of types and levels of information detail that often change and the many different possible ways of partitioning the world into distinct features. This problem is particularly challenging for roads or other networks, as roads or networks can extend many miles and can be subdivided in many possible ways. As such, it is highly impractical to create and maintain a single map that incorporates all the data required for all possible use cases.
In view of this problem, many different types and forms of maps have been created to handle different data types or use cases. However, these different maps are often distinct and not directly related to each other. In particular, even a given pair of maps representing the same geographic area may show certain elements (e.g., roads, points of interest, etc.) at different geographic locations and/or may not have a common frame of reference for cross-referencing the elements. Accordingly, there is a need in the art for techniques for improving the ability to combine and/or jointly interpret maps.
Disclosure of Invention
The present disclosure is directed to systems and methods for providing a stable topological representation of path networks and features associated with those networks. The present disclosure is exemplified using a road network having applications in mapping, navigation, and autonomous vehicles. Extensions can be learned by practicing the present disclosure. Utilizing implementations disclosed herein may provide advantages for data consolidation between different mapping systems and map data, while improving overall stability by developing common reference standards that are tied (tie) to semantic features rather than abstract geographic representations.
Drawings
A detailed discussion of embodiments directed to one of ordinary skill in the art is set forth in the specification with reference to the drawings, in which:
FIG. 1 illustrates an example computing system including a basic model of a topology according to this disclosure.
FIG. 2 illustrates an example process flow diagram including an example method for merging two geographic data sets, at least one of which is associated with a base model of topology, in accordance with this disclosure.
FIG. 3 illustrates example edge operations including computer-implemented instructions and results.
Fig. 4A illustrates an example representation of graphical attributes of a display edge (represented as a line segment) and an anchor point (anchor) (represented as a circle) according to this disclosure.
Fig. 4B illustrates an example representation of parameterized positioning that may be associated with an anchor point, according to an example embodiment of the present disclosure.
5A-5D illustrate aspects of a topology base model representation according to the present disclosure. In fig. 5A, a topological base model is shown that includes graphical attributes and more complex characteristics such as road geometry and buildings. In fig. 5B, a more detailed representation of the road network is shown, including additional road segments (illustrated as lines extending from circles) that may be merged with the base model. In fig. 5C-5D, details of the building, such as entry point (5C) or entry point (5D) of a road, are illustrated to represent additional map features that may be incorporated with the base model or associated with one or more property layers.
FIG. 6 illustrates an example representation of a hierarchical order of a base model according to this disclosure. In fig. 6, a topology model is shown illustrating one or more edges, nodes, and/or anchor points in accordance with an example embodiment of the present disclosure. Other layers may be associated with the topology, which may be used to represent physical descriptions such as road geometry (e.g., width), semantic descriptions (e.g., street names), or other detail layers (e.g., road segments, intersections, traffic directions, etc.).
FIG. 7 illustrates an example implementation of a basic model of a topology for merging two sets of discriminative mapping data. In accordance with the present disclosure, both data sets may be provided to a topology base model to generate a mapping between the data sets.
FIG. 8A illustrates example map data that may be used to generate a topological base model or a property layer element of a base model.
Fig. 8B illustrates an example geometric representation of the road network shown in fig. 8A, according to an example embodiment of the present disclosure.
Fig. 8C illustrates an example topological representation of the road network shown in fig. 8A, according to an example embodiment of the present disclosure.
FIG. 8D illustrates the example topological representation in FIG. 8C overlaid with the map data shown in FIG. 8A.
Repeated reference numbers in multiple figures are intended to identify similar features in various implementations.
Detailed Description
SUMMARY
In general, the present disclosure is directed to systems and methods that include and use a topological base model that includes a plurality of stable identifiers for a plurality of semantic features or elements, respectively, included in a geographic area. The identifier remains stable over time. Additional aspects of the present disclosure relate to methods by which a topological base model (also referred to herein as a "base model") can be created and/or updated.
In particular, the base model may include information that supports cohesive relative associations of one or more various distinct map layers. In particular, in one example, a base model may provide a plurality of stable identifiers (e.g., may be represented using edges and vertices) for a plurality of canonical elements (e.g., may be represented using edges and vertices) corresponding to a plurality of semantic features included in a geographic region (e.g., human recognizable/perceptible real-world items such as roads, intersections, buildings, etc.). Such a stable index of semantic features may be used to form the basis for or correlate information from a variety of different maps, map layers, or mapping applications. In particular, the base model may provide a common base, and in some implementations, may provide common geographic data (e.g., world representations) over which one or more specific maps or applications may agree on basic identification and common principles, thereby facilitating shared views and links between such maps and applications.
Accordingly, aspects of the base model (e.g., stable identifiers) may be used to improve correspondence between different maps (or map layers) or mapping applications. In particular, in one example, a first set of geographic data (e.g., map layers) can include features and a set of references that associate the features with certain stable identifiers included in the base model. By utilizing such references, features of the first geographic data set may be linked to certain defined semantic features even if the first geographic data set changes over time. In another example, two different sets of geographic data may each have a respective reference to a stable identifier of the base model. By identifying a common reference to the same stable identifier, it may be determined that two features respectively included in two different maps or map layers correspond to each other (and to the same semantic features), even if the two different maps or map layers have significantly different means of representing physical space and would not be relevant in the absence of a common underlying model.
Such improved correspondence between maps or other geographic data sets may provide advantages to a user by intuitively mapping paths such as roads for applications such as location-aware guidance or other applications that use location information. Furthermore, the base model may be easily correlated with other mapping data by certain merging operations, which may provide improved accuracy and stability for incorporating new data into the base model or transmitting topology information to external applications.
More specifically, the industry has many business and non-business semantic maps that have common characteristics and patterns. Most of these maps have a common set of normative features as a basis, such as roads or buildings. Some maps may additionally include features that are not common in nature but are related to common features in some way (e.g., the entrance to a building is 30 feet east at some well-known intersection). The features contained in these maps typically have some sort of identifier ("ID") that allows for a lookup. However, these IDs are often unstable (particularly for roads). In other words, for a particular map, the feature ID may change frequently between different versions of the map data even if the underlying feature has not changed in the real world. Furthermore, different maps typically have different IDs for the same feature, making it impossible to compare features by ID.
In contrast, to enable joint interpretation or use of two maps, some existing systems may attempt to merge features from their descriptions, which is a difficult problem that often fails to resolve to the same feature, and may result in incorrect positioning of the features. Furthermore, pure geometric merging can produce serious errors in view of possible geometric or geographic differences between different maps.
The present disclosure addresses these issues by providing an improved mechanism for identifying core/base features of a data set and correlating these features with each other via a reference to a common stable identifier included in a base model. These references and the underlying stable identifiers then provide a basis for features that are not of a common type to be related to each other by common features. For example, the first map may include road and building entry point data, and the second map may include roads and sidewalks. By using a reference to one or more stable identifiers included in the base model, a relationship may be determined to link the sidewalk to the entry point via a public path network such as a road. In this way, relationships between different features can be identified by examining the core's, common features. Thus, by mapping a dataset to a common representation such as a topological base model, two or more distinct topologies can be linked by generating a mapping that indicates relative positioning rather than exact positioning.
Another problem addressed by the present disclosure is the changing nature of geographic data sets (e.g., maps) that change over time. In particular, users of maps often need to rely on the ID of the map to use these maps to share or send references compactly, e.g., from a client to a server or between two services. This complicates usage if the ID changes or is inconsistent. Sometimes this makes it difficult to upgrade the map over time (e.g., limits the freshness of the map). Alternatively, this may limit the reliability of the communication, for example leading to merged inconsistencies, or prevent different applications from sharing detailed information about the map.
Aspects of the present disclosure address this issue by providing a common base model that ensures that stable and reliable identifiers of updated map features are also maintained over time. The base model may be published publicly for access by various applications, users, and the like. Further, a service for accessing and interpreting the base model data may be provided. For example, a service may respond to calls to data according to a stable application programming interface ("API"). Thus, other maps may reference their features via the base model ID or a common style/language that describes the relative hierarchical information on the base model. This basic model of accessibility and being served can promote ecosystems that encourage better sharing of topology information.
The use of a common topological base model according to aspects of the present disclosure may allow interoperability between different mapping systems and databases. The different sets of geographic data may be merged using the topological base model, such as outputting at least a portion of the merged data to a client device in response to a request for map data from the client device. In this way, the client device may be able to efficiently receive and utilize information from a plurality of different geographic data sets. The use of a basic model of topology according to aspects of the present disclosure may allow for reduced data transmission, such as between a client requesting map data and a server providing the requested data, or at a client providing updated map data to a server. For example, using a common topological base model to request and receive data from a server may require a reduced amount of data to be transmitted between the server and the client as compared to transmitting purely coordinate-based data.
More specifically, one example aspect of the present disclosure includes a topological road network model (e.g., a graph) that can be used to represent a physical path (e.g., a road network) using relative relationships rather than coordinates (e.g., rather than geocoding such as specific latitude and longitude information). Such a system may include some or all of the following elements. An abstract linear travel path, which may be directional (e.g., having a front end and a back end), and thus may define two directions of travel, forward (toward the front end) and backward (toward the back end). Further, join points may be defined where travelers moving along one path may switch to another path at some point where they coexist on each path. Using these building blocks, a routable network can be constructed in which any path from one point on one edge to another point on the other edge can be expressed as a series of edge joins (edge joins).
This model utilizes semantic (e.g., rather than just geographic) descriptions of the world, which may be more consistent with human understanding of our world. Furthermore, the model may be more resilient to identifying and/or resolving discrepancies regarding the precise geographic location and characteristics related to some or all of the referenced features. In such a representation, the network need not express physical values, such as specific distances or geocoding of elements along the travel route. However, these additional characteristics may be linked or otherwise associated with the network using layers that may store such information, and/or may be obtained by merging the road network model with an external data set that includes such information. For example, in some implementations, the base or property layer may include features such as buildings that may be represented as geometric blocks (parcel). The geometric block may encompass one or more junction points that may be used to represent a facade of a building or other area along the network.
In general, a topology model can be developed that partitions the network into layers that capture the nature of the topology such that for the divergence of the attributes of the graph at higher layers, the structure of the graph, the structure of the routes on the graph, and the merging of the two graphs at one layer are performed as independently as possible. Thus, a robust topological representation according to the present disclosure can define such a representation as a hierarchy that uses non-normalized representations at the lowest or "base" level to minimize the divergence that may arise from merging map representations that may be geographic coordinate-based or image-based.
As an illustrative example, an example topology model may include a hierarchical level having a base model that defines a representation that is substantially transformed into a graph defined by edges, nodes, and anchor points. Although not limited to a specific representation, in one use case, an edge may represent a road, a vertex may represent an end of the edge, and an anchor point (not necessarily confused with an end vertex) may represent a point of interest that terminates a road or marks a junction (e.g., an intersection) or a place of interest (e.g., a building facade) on a road. Thus, as used herein, the concept of the location of an anchor point is not an (x, y) location in space, but rather captures the identity of which edge(s) it is on, and in some cases, parametrically where on that edge an anchor point is relative to any other anchor point referencing that edge. Using such a representation allows a vertex to be implicitly contained as an anchor point; however, not all anchors are vertices, as an anchor may include multiple edges at the same time (e.g., referenced by multiple edges at the same time).
Graphical representations are well known in computer science and can be used to align and merge other data representations. Each graphical element (e.g., edge, node, and anchor) may be associated with a unique and stable ID that may be accessed/referenced by elements in other layers. However, in general, graphic elements cannot access or reference attributes in other layers. Thus, the layered model can be considered to provide basic cross-referencing that occurs via a common reference to the stable IDs contained in the basic model. Detail layers such as semantic descriptions (e.g., road names), physical descriptions (e.g., geometric shapes), or other details (e.g., road segments) may be cross-referenced by identifying stable IDs in the common base model dataset.
Using a base model allows for a representation of a path network at varying levels, which may include denormalized representations (e.g., denormalized graphs), in the sense that intersection may not explicitly join two edges, but such joining may occur through an edge terminating at an anchor point that itself references another adjacent edge. This denormalized form may be deterministically and mechanically normalized to a unique form by cutting all the edges referenced by the anchor points, converting all anchor points to traditional graph vertices. This process may be used to convert anchor points into vertices and provide a classic normalized form for graphics, which may be used in some implementations to merge the base model with other data sets.
Incorporating the base model into an aspect of the physical data, such as another graph or data set representing the physical region, may include adding a physical projection. For example, physical projection may include determining the relative positions of the splice points that share the same edge by defining directionality (e.g., one splice point in front of or behind another splice point on a particular edge). This makes the direction more specific, "starting at splice A, moving forward on the red side, passing splice B to splice C, and then moving backward on the blue side to splice D". Qualitatively speaking, moving forward and/or backward to reach the next splice captures the nature of the motion without limiting the position or order of the edge splices (which can be used to correct for differences in physical characteristics). As another example, the junction points may be defined using parameterized locations on the edges that they join. The most common of which is simply to secure the splice points to the front or back of the corresponding edge. An edge can be considered to have a front and a back, which can be defined in a number of ways, such as from 0.0 at the back point to 1.0 at the front point. The specific coordinates of the engagement points may be determined in terms of a fraction along the edge. Although specific coordinates can be defined in model space, this still does not force specific positioning in physical space, since the edges themselves are not yet in physical form. As yet another example, a physical form (e.g., curvature) may be assigned to the edge itself by mapping each parameterized coordinate on the edge from 0.0 to 1.0 to a point or a region of a patch in the physical model.
For merging of physical identifiers (identities), a requirement may optionally be included in the merging process so that each real-world road driving region may be part of zero or one edge in the graph. Note that this means that one edge in the graph may represent multiple physical "roads", depending on how the roads are partitioned by the particular skeletonization of the physical driving region, but that specific content may be represented by only one edge. Alternatively, a single "road" may be represented using multiple edges (e.g., two edges corresponding to two lanes on the road traveling in opposite directions; four edges corresponding to four lanes; etc.)
In general, the topological graph that forms the basis of the basic model includes edge and anchor graphs. Each entity includes a stable ID, where stability indicates that the ID of the feature remains permanently unchanged over time. However, due to the ever-changing nature of the physical world, the notion of temporal changes may be included in some models. For example, the graph or data underlying the graph may be referenced to a snapshot associated with time (t). Any change in a characteristic, such as connectivity, set of anchor edges, etc., may then result in the optional assignment of new and unique IDs that effectively create new identifications. For example, different periods of the base model may be created, where each period has a set of stable and invariant feature IDs. A mapping between the stable IDs for each pair of epochs can also be maintained for projections between epochs.
Certain operations may be defined to update the base model that conforms to the stable ID features described above. These operations may be classified as being related to edges, anchors, or both in some implementations.
For example, adding an edge may include defining how the edge connects to other edges. Simply adding the edge itself can be done by creating a new ID to the database at the current database time to establish a new identity. The connection to the existing edge may then be made by adding an anchor point that relates the new edge to the existing edge. The relationship with other anchor points may be considered implicit. One example of a type of link may include: the new edge is attached to some other edge at the end point. In this case, the system may create new anchors that each reference both the old edge ID and the new edge ID at the appropriate endpoint. Another example may include: the new edge is attached to the other edge in the middle. This is the same except that the anchor association with the new edge is "unspecified" and not an endpoint.
Some example implementations of the present disclosure support storing graphics in a non-normalized form. If the base model were to use normalized mappings, only one such anchor would be needed, and the old anchor could be deleted and the new anchor created by the union of the attachments of the new and old anchors. Since implementations may include non-normalized forms, existing anchors may not be modified or one or more existing anchors may be added to the reference set of the new anchor if the anchor is topologically intended to be the same connection point.
Additional edge level changes may include deleting edges and fusing edges. For example, deleting may include updating the graphic to set a time (e.g., a time to die). Two edges in a fused non-normalized graph may be divided into fully fused (i.e., the result of the fusion is that the edges are identical) or incomplete (i.e., there are regions of joinder where the edges are identical and there are also regions of unjoinder where the respective IDs of the two edges reference some additional path or surface that is not referenced). As an example, full fusion may be handled from one to another, i.e. where one ID is forwarded to another, or full fusion may be handled as a replacement, where both are replaced by a newly generated edge ID. Generally, the fusion should maintain directionality, and thus the fusion is a forward (matching direction) fusion or a reverse (non-intersecting direction) fusion. In another example, incomplete fusion may be handled by combining complete fusion using the method from one to another as above with up to two new edge IDs that additionally produce a front-end or back-end remainder corresponding to an extinction source edge.
Changes to the anchor point level of the base model have been discussed to some extent with respect to adding edges, splitting or blending edges. For example, an anchor essentially represents a join, so adding a new anchor may include naming the joined edge (e.g., an ID associated with the edge) and/or anchor (e.g., an ID associated with the anchor).
Aspects of the present disclosure may be represented in various forms. For example, a computing system including a memory for building a relational or hierarchical database may be used to store the base model. The computing system may also include memory or hardware including instructions for performing updates to the base model and/or for merging the base model with other mapping information. In some implementations, the computing system may be hosted on a server or in a distributed computing system with cloud connectivity. The distributed computing system may provide advantages for data storage and access to improve the speed, stability and reliability of the data underlying the base model.
Example implementations of the present disclosure may include a computing system having one or more processors and one or more non-transitory computer-readable media (CRMs) that collectively store data and instructions. In general, the data includes a common topological base model that includes a plurality of stable identifiers for a plurality of canonical edges and vertices, respectively, corresponding to semantic features included in the geographic region. The CRM may also include instructions for performing one or more operations that, when executed by one or more processors, cause the system to perform the operations.
The common base model may be used to merge at least a portion of two different geographic data sets. In particular, the merging process may include obtaining a first set of geographic data including a plurality of first edges and first vertices corresponding to a plurality of semantic features, respectively, and at least a first anchor point corresponding to a particular real-world item. In general, a first anchor point is stored having a position defined relative to a particular first edge or a particular first vertex of the plurality of first edges and first vertices. For example, a database may be defined with anchors defined to be related/referenced to one or more edges. Another operation may include obtaining a second set of geographic data including a plurality of second edges and second vertices respectively corresponding to a plurality of semantic features. A stable Identifier (ID) may then be identified from each geographic dataset, the ID being associated with a particular edge or vertex. In accordance with at least these operations, a second anchor point may be generated in the second set of geographic data based on a particular second edge or a particular second vertex.
In some implementations, the data comprising the base model of the topology can also include at least one property layer. One example aspect of a property layer may include attributes indexed to one of the anchors, one of the vertices, one of the edges, or any combination of these. Example characteristics may include description (e.g., road name), geometry (e.g., road width, curvature, intersection type, etc.), building, coordinates, or other information. Another aspect of the property layer may include a hierarchy. For example, a property layer can be defined to reference only the property layer below it, but not the property layer above. In general, the graph including edges, nodes, and anchors is considered the lowest level of the hierarchy, which may provide advantages in terms of maintenance and ID stability.
For some implementations, attributes included in the property layer may be used to support one or more merge operations. For example, identifying a particular second edge or a particular second vertex of the plurality of second edges and second vertices may include: obtaining one or more descriptors included in the second set of geographic data, comparing the one or more descriptors to at least one attribute included in the property layer, determining a closest attribute based at least in part on the comparison; and determining an anchor point, a vertex, or both to which the closest attribute is indexed. Thus, in general, the merging operation may include searching for similarities between the base model and the second data set. Since the external data set may not include the same non-normalized reference, the property layer may provide physical information such as street name, coordinates, or other information that may be compared to the external reference. After identifying a match or close correspondence between the base model and the second data set, the attributes in the property layer may be used to find the anchor point, vertex, or both to which the closest attribute is indexed. In some implementations, the anchor point, vertex, or both to which the closest attribute is indexed can then be used to map at least a portion of the second data set by projecting an unnormalized base model graph or a normalized form of the base model graph onto the second data set. For example, an anchor point corresponding to the descriptor location may be added to the second data set. Anchor information, such as related edges and/or properties from other layers, may then be inherited from the base model.
Referring now to the drawings, example embodiments of the disclosure will be discussed in more detail.
Example apparatus and System
Fig. 1 depicts a block diagram of an example computing system 100, which example computing system 100 may store or transmit information such as a topology base model 122 or 140 and/or a merging system 142, according to an example aspect of the disclosure. In one example implementation, the system 100 may include a user computing device 102 and a server computing system 130 communicatively coupled over a network 180.
The user computing device 102 may be any type of computing device, such as, for example, a personal computing device (e.g., laptop or desktop), a mobile computing device (e.g., a smartphone or tablet), a gaming console or controller, a wearable computing device, an embedded computing device, or any other type of computing device.
The user computing device 102 may include one or more processors 112 and memory 114. The one or more processors 112 may be any suitable processing device (e.g., processor core, microprocessor, ASIC, FPGA, controller, microcontroller, etc.) and may be one processor or operably connected processors. Memory 114 may include one or more non-transitory computer-readable storage media, such as RAM, ROM, EEPROM, EPROM, flash memory devices, disks, and the like, as well as combinations thereof. The memory 114 may store data 116 and instructions 118 that are executed by the processor 112 to cause the user computing device 102 to perform operations.
In some implementations, the user computing device 102 can store or include the topology base model 122.
In some implementations, the topology base model 122 can be received from the server computing system 130 over the network 180, stored in the user computing device memory 114, and then used or otherwise implemented by the one or more processors 112. In some implementations, the user computing device 102 can implement multiple parallel instances of a single topological base model 122 (e.g., to perform parallel merge operations between different sets of map data).
More specifically, the topological base model 122 can provide a stable reference for map features such as roads, buildings, etc. that can be represented as a network (e.g., graph) that is stored and/or indexed. The topology base model 122 can be partitioned into one or more layers, each of which can be accessed and/or downloaded separately, depending on the application or use case.
Additionally or alternatively, the topology base model 140 or one or more features of the topology base model (such as the base model topology or one or more detail layers) can be included in the server computing system 130 in communication with the user computing device 102 according to a client-server relationship, or otherwise stored and implemented by the server computing system 130. For example, the topology base model 140 can be implemented by the server computing system 140 as part of a web service. Thus, the topology base model 122 can be stored and implemented at the user computing device 102, and/or the topology base model 140 can be stored and implemented at the server computing system 130. Since, in some implementations, the topology base model can be segmented into features including graphics (e.g., a base layer) and one or more property layers, each feature can be accessed separately and/or transmitted between the user computing device 102 and the server computing system 130. Alternatively, for some implementations, the topological base model may not be segmented. For example, in some implementations, the topology base model 122 may not be partitioned into separate features to preserve indexing and/or other relationships.
The user computing device 102 may also include one or more user input components 124 that receive user input. For example, the user input component 124 may be a touch-sensitive component (e.g., a touch-sensitive display screen or touchpad) that is sensitive to touch by a user input object (e.g., a finger or stylus). The touch sensitive component may be used to implement a virtual keyboard. Other example user input components include a microphone, a conventional keyboard, or other device through which a user may provide user input.
The server computing system 130 includes one or more processors 132 and memory 134. The one or more processors 132 may be any suitable processing device (e.g., processor core, microprocessor, ASIC, FPGA, controller, microcontroller, etc.) and may be one processor or operably connected processors. Memory 134 may include one or more non-transitory computer-readable storage media, such as RAM, ROM, EEPROM, EPROM, flash memory devices, a disk, and the like, as well as combinations thereof. Memory 134 may store data 136 and instructions 138 that are executed by processor 132 to cause server computing system 130 to perform operations.
In some implementations, the server computing system 130 includes or is otherwise implemented by one or more server computing devices. Where the server computing system 130 includes multiple server computing devices, such server computing devices may operate according to a sequential computing architecture, a parallel computing architecture, or some combination thereof.
As described above, the server computing system 130 may store or otherwise include the topology model 140. In some cases, the server computing system 130 may also include a merging system 142, which merging system 142 may include various trained machine learning models in some cases. Example machine learning models include neural networks or other multi-layered nonlinear models. Example neural networks include feed-forward neural networks, deep neural networks, recurrent neural networks, and convolutional neural networks. In an example implementation, the merging system 142 may be used to identify correspondences between external (i.e., third party) mapping data and data included in the topology base model 140. In this manner, the merging system 142 may be used, at least in part, to generate instructions for fusing and/or updating the topology base model 140 based on third-party data. For example, an example implementation may include obtaining a geographic dataset that includes a graphical representation including a plurality of edges and vertices for representing real-world items in a geographic area, such as traffic reports near an exit ramp. The merging system 142 may identify a particular stable identifier included in the topology base model based at least in part on information included in the geographic dataset, such as a proximate road identifier (e.g., a road name, exit number, or other relevant information). Further, in some cases, the geographic data set may share stable identifiers included in the basic model of topology through an API or other application that may allow the geographic data set to generate anchors corresponding to particular real-world items. In some cases, the geographic dataset may then be used to update the topological base model to include anchor points based on the identification of particular edges and/or the generation of parameterized locations along the edges.
FIG. 1 illustrates one example computing system that can be used to implement the present disclosure. Other computing systems may also be used. For example, in some implementations, the user computing device 102 may include a merging system 142, or may be configured to access the topology base model 140 from the server computing system 130, rather than obtaining the topology base model 122 on the user computing device 102.
Example model Properties
Fig. 4A and 4B depict diagrams of aspects of a basic model of topology. The illustrations are provided as examples for practicing the implementations disclosed herein and are not intended to limit aspects to only what is shown. For example, fig. 4A depicts an illustration of how edges and anchor points may define a path network such as an intersection. In each illustration, the 5 anchor points are depicted as circles, while the edges are depicted as lines. Each edge is not limited to linking only two anchor points and thus a unique individual edge is delineated using different line widths and/or dashed lines. Notably, in the rightmost image, each edge shown is linked to only two anchor points, illustrating one example of how a normalized representation can be produced by "cutting" each edge at any anchor point. Fig. 4B illustrates another aspect of the present disclosure. Although displayed using a parametric definition to indicate relative positioning, it should be noted that any method for generating relative positioning may be used with implementations of the present disclosure. For example, locations along the edge that may be tied to features such as intersections, building facades, or other such information need not be specified or tied to exact coordinate locations. Instead, the parameterized locations may be defined based on defining back-end and front-end. Further, in some cases, there is no need to specify a location, which may provide an advantage when the exact location information (e.g., information obtained from a third party) is not well defined but can still be represented as affecting areas along an edge.
Example model arrangements
5A-5D depict example arrangements of basic models of topology. As shown, FIG. 5A shows a basic model representation, with anchor points shown as circles and edges shown as line segments. In some implementations, FIGS. 5B-5D may be included as one or more property layers that include attributes that are referenced to features of the base model depicted in FIG. 5A. For example, FIG. 5B shows further details of the roadway, including geometry and lanes, FIG. 5C shows further details of the building, such as entrances and/or exits, and FIG. 5D shows the relationship of the building details to the roadway details. For some implementations, these property layers may be included as part of the topology base model. In other implementations, some or all of the detailed information shown in fig. 5B-5D may be included as part of an external (e.g., third party) data set. This information may be merged with the base model shown in FIG. 5A to update the base model or associated property layer.
FIG. 6 depicts another example arrangement of a basic model of a topology representing a hierarchy. As shown, fig. 6 includes a base model topology that supports physical descriptions, semantic descriptions, and in some cases further levels of detail. Along with the various layers, an illustration of an intersection between two streets is also provided. Using such a hierarchical representation allows information to be projected onto the base model topology without the need to track individual attributes that are more likely to change over time. In some implementations, attributes of higher layers may only reference attributes of lower layers. For example, attributes of a semantic description or a physical description may reference a base model topology; however, the opposite is not true.
An example aspect of the base model topology may include anchoring all other layers to a common ID space. Thus, the topology typically contains common graphs that are used to represent real-world locations or items of interest using edge, vertex, and anchor representations. Example aspects of the physical layer may include shapes described in latitude, longitude, and/or elevation that can be referenced to data (e.g., WGS84 or other suitable coordinate system). The elements of the physical layer may include polygons or polylines having a width or width function (band). The physical elements may be accessed as description elements of edges within a common topology. In some cases, the physical layer may be derived by tracking the shape of the road from the imagery, where the shape terminates at the natural boundary of the road or road element, and the shape terminates at an edge such as the road surface.
The source images may also be acquired from ground-acquired or airborne sources aligned with a globally aligned airborne 3D grid (global aligned airborne-seed 3D mesh). An example of deriving physical characteristics from aerial imagery is shown in fig. 8A and 8B, with fig. 8A and 8B showing aerial imagery of an intersection (8A) and a superposition of lines (8B) to partially define aspects of the roads (e.g., width, curvature, intersections, etc.) that make up the intersection). Fig. 8C and 8D illustrate images showing one example of how the aerial information is translated into a topological representation (e.g., a graph of edges, anchor points, and/or vertices) as shown in fig. 8C. Further, such a representation may be projected onto a map image as shown in fig. 8D for use in applications such as route generation in navigation.
Example model application
FIG. 7 depicts an example merge operation for mapping geographic data from a first data set and a second data set using an example topological base model. As shown, the map data 1 and the map data 2 represent images at the same position. To identify correspondences between two different representations of the same path network, a corresponding topological map may be generated using the example base model. For example, the map data 1 may model a highway as two segments, while the map data 2 displays only one segment. Other differences may include the location of the blend or "on-ramp". Pure geometric merging can produce serious errors due to varying geometries in these representations (e.g., not located on the on-ramp of map data 2 as shown by the closed marks from map data 1 when pure geometric merging is used). Rather, according to the present disclosure, mapping each dataset to a common representation, such as a basic model of topology, can be used to link the differential topology by generating a mapping between road segments or using anchor points to modify junctions to indicate relative positioning rather than exact positioning. For example, by using a common topological basic model, a closure mark can be placed on an entrance ramp in the merged map data 2.
As another example embodiment for purposes of illustration, fig. 7 may be applied to demonstrate a computing system according to the present disclosure that includes data storing a topological base model and instructions for determining a correspondence between features in two data sets (e.g., map data 1 and map data 2). The two map data sets may be obtained from various sources, including from external third parties. The map data may include features such as street names, road geometries, or other aspects that may be used to look up (e.g., using database operations or other queries) or otherwise determine a common reference and/or underlying representation using the topological base model. Here, the common reference and/or underlying representation is depicted as merged map data 1 and merged map data 2 that may be generated based on map data 1 and map data 2, respectively. However, this is not meant to limit the different types of representations possible. Other representations of path segments and other features depicted in the map data may be generated and may depend on the level of detail provided in the map data set. Once the common reference has been generated, one or more correspondences between the data sets may be determined, as shown by the relationship: a (0, 0.5) → H, A (0.5, 1) → J, and so forth. While the figure only illustrates the relationships between edge segments, it should be understood that the relationships between vertices (depicted here as circles or semi-circles) may also be generated based at least in part on a common reference to stable identifiers in a common topological base model. In some cases, this common reference may be used to pass information between map data sets, such as by generating new features (e.g., anchors, edges, or vertices) in one of the data sets. For example, if map data 2 lacks a closure represented by a circled dash '-' the relationship of D → I may be used to map a D closure at 0.8 to an I at 0.8. Thus, a new feature may be generated as part of the map data 2 or merged map data 2 to represent the closure (e.g., such as generating an anchor point at the location).
Example method
Fig. 2 depicts a flowchart of an example method of performing a merge according to an example embodiment of the present disclosure. Although fig. 2 depicts steps performed in a particular order for purposes of illustration and discussion, the methods of the present disclosure are not limited to the particular illustrated order or arrangement. The various steps of the method 600 may be omitted, rearranged, combined, and/or adapted in various ways without departing from the scope of the present disclosure.
At 202, a computing system may obtain a first set of geographic data including a plurality of first edges and first vertices corresponding to a plurality of semantic features, respectively, and at least one first anchor point corresponding to a particular real-world item, the first anchor point having a position defined relative to a particular first edge or a particular first vertex of the plurality of first edges and first vertices. Obtaining the first set of geographic data may include accessing a library or a library of stored data, generating or modifying geographic data such as aviation information by superimposing sensor information with a physical representation, or receiving data (e.g., from a third party).
At 204, the computing system may obtain a second geographic dataset that includes a plurality of second edges and second vertices that respectively correspond to the plurality of semantic features. In general, obtaining the second set of geographic data may occur in various ways, including but not limited to the examples provided for obtaining the first set of geographic data.
At 206, the computing system may identify a particular stable identifier included in the common topology base model and associated with the particular first edge or the particular first vertex. As an example, identifying a particular stable identifier may include a table lookup, which may be performed using a conventional database query (e.g., using SQL), a cloud database query, or other search method for accessing reference ID information.
At 208, the computing system may identify a particular second edge or a particular second vertex of the plurality of second edges and second vertices included in the second set of geographic data and associated with the particular stable identifier. One aspect of identifying a particular second edge includes creating a common reference for merging. By identifying the second edge or second vertex based on an association with a particular stable identifier that is also associated with the first edge or first vertex, the merging operation may reduce errors in joining data or mapping attributes to a new data set.
At 210, the computing system may generate a second anchor point in the second geographic data set based on the particular second edge or the particular second vertex, the second anchor point corresponding to the particular real-world item in the second geographic data set. As described above, by using a common reference point, additional reference features may be added to one or both data sets. Although illustrated in this example as generating a second anchor point in the second geographic data set, it should be understood that other graphical elements, such as edges, may be generated and added to the second data set and/or a common reference, such as a topological base model that may be referenced or otherwise accessed (e.g., for additional merge operations) by the first and second geographic data sets.
At least according to a combination of the operations described in fig. 2, two data sets having an association with a topological base model that includes stable identifiers to reference real-world items using a graphical representation can be used to generate sharable information, such as anchor points in a second data set. Further, in some use cases, the first and second geographic data sets may not inherently include a stable reference, but rather one or both data sets may need to have such information obtained by merging with an example topological base map in accordance with aspects of the present disclosure. For example, obtaining a first set of geographic data including a plurality of first edges and first vertices corresponding to the plurality of semantic features, respectively, and at least one first anchor point corresponding to a particular real-world item, the first anchor point having a defined position relative to a particular first edge or a particular first vertex of the plurality of first edges and first vertices may first include obtaining the set of geographic data. In accordance with the present disclosure, the geographic data set may then be merged with the base model of the topology.
As an example, merging the set of geographic data may include accessing a mapping included in or associated with the second set of geographic data and performing a lookup operation on the mapping to identify a particular second edge or a particular second vertex based on a particular stable identifier, the mapping the plurality of second edges and second vertices to the plurality of canonical edges and canonical vertices.
As another example, identifying a particular second edge or a particular second vertex of the plurality of second edges and second vertices may include: one or more descriptors included in the second set of geographic data are obtained, the one or more descriptors providing information such as latitude, longitude, altitude, street name, or a combination thereof. The one or more descriptors may be compared to the example base model, for example by comparing the one or more descriptors to at least one attribute included in a property layer of the base model. Based at least in part on the comparison, a closest attribute (e.g., an attribute that matches one or more descriptors, such as street names) may be determined. As a result, anchor points, vertices, or both, to which the closest attribute is indexed may be identified. In some implementations, the anchor point, vertex, or both to which the closest attribute is indexed can be used, at least in part, to add a plurality of edges and vertices to the second data set that correspond to a plurality of semantic features included in the first geographic data set.
FIG. 3 depicts example operations that provide a method for updating a base model of a topology at a graph level. In the figure, edge operations 300 are shown as computer-implemented instructions and results. At 302, the computing system may establish a unique ID associated with an edge to be added and may also add an anchor to the graph to describe the connectivity of the new edge. At 304, the computing system may add a time to death associated with an edge for deleting the edge from the graph. To allow for stability, the reference to the edge may not be completely deleted, but rather a time indicator may be established to track the age or period of the period during which the edge is active. At 306, the computing system may add a forwarding reference (forwarding reference) to one of the two edges that directs a request to access the edge with the forwarding reference to the other of the two edges to fuse the two edges. Other example fusion operations are shown at 308 and 310. At 310, the computing system may split (e.g., partition) the edge into segments by adding one or more anchor points to the edge.
Additional disclosure
The techniques discussed herein make reference to servers, databases, software applications, and other computer-based systems, as well as actions taken and information sent to and from these systems. The inherent flexibility of computer-based systems allows for a variety of possible configurations, combinations, and divisions of tasks and functions between and among components. For example, the processes discussed herein may be implemented using a single device or component or a plurality of devices or components operating in combination. Databases and applications may be implemented on a single system or may be distributed across multiple systems. The distributed components may operate sequentially or in parallel.
While the present subject matter has been described in detail with respect to various specific example embodiments thereof, each example is provided by way of explanation, not limitation of the disclosure. Alterations, modifications, and equivalents of these embodiments may occur to others skilled in the art upon the reading of the preceding description. Accordingly, the subject disclosure does not preclude inclusion of such modifications, variations and/or additions to the present subject matter as would be readily apparent to one of ordinary skill in the art. For instance, features illustrated or described as part of one embodiment, can be used with another embodiment to yield a still further embodiment. Thus, the present disclosure is intended to cover such alternatives, modifications, and equivalents.
Claims (20)
1. A computing system for processing geographic data, the computing system comprising:
one or more processors; and
one or more non-transitory computer-readable media collectively storing data and instructions;
wherein the data comprises a common topological base model comprising a plurality of stable identifiers for a plurality of canonical edges and canonical vertices, respectively, corresponding to a plurality of semantic features included in a geographic area; and
wherein the instructions, when executed by the one or more processors, cause the one or more processors to perform operations comprising:
determining a correspondence between a first edge or a first vertex included in a first geographic data set and a second edge or a second vertex included in a different second geographic data set based at least in part on a common reference to one of the stable identifiers in the common topological base model, wherein the first edge or the first vertex and the second edge or the second vertex correspond to a same semantic feature of the plurality of semantic features.
2. The computing system of claim 1, wherein to determine a correspondence between a first edge or a first vertex included in the first set of geographic data and a second edge or a second vertex included in a second, different set of geographic data based at least in part on a common reference to one of the stable identifiers in the common topological base model comprises to:
obtaining the first set of geographic data comprising a plurality of first edges and first vertices corresponding to the plurality of semantic features, respectively, and at least one first anchor point corresponding to a particular real world item, the first anchor point having a first position defined relative to a particular first edge or a particular first vertex of the plurality of first edges and first vertices;
obtaining a second geographic dataset comprising a plurality of second edges and second vertices corresponding to the plurality of semantic features, respectively;
identifying one of the stable identifiers included in the common topology base model and associated with the particular first edge or the particular first vertex;
identifying a particular second edge or a particular second vertex of a plurality of second edges and second vertices included in the second set of geographic data and associated with the particular stable identifier; and
generating a second anchor point in the second set of geographic data based on the particular second edge or the particular second vertex, wherein the second anchor point corresponds to the particular real-world item in the second set of geographic data and has a second location defined relative to the particular second edge or the particular second vertex.
3. The computing system of any preceding claim, wherein the data further comprises at least one property layer comprising one or more attributes of one or more of the plurality of semantic features, and wherein each of the one or more attributes is indexed to a particular one of the canonical edge or a canonical vertex.
4. The computing system of claim 3 wherein the common topology base model does not include references to one or more attributes of the at least one property layer.
5. The computing system of any of claims 2-4, wherein to identify a particular second edge or a particular second vertex of the plurality of second edges and second vertices comprises to:
accessing a mapping included in or associated with a second set of geographic data, the mapping a plurality of second edges and second vertices to the plurality of canonical edges and canonical vertices;
performing a lookup operation on the mapping to identify the particular second edge or the particular second vertex based on the particular stable identifier.
6. The computing system of any of claims 3-4, wherein to identify a particular second edge or a particular second vertex of the plurality of second edges and second vertices comprises to:
obtaining one or more descriptors included in the second set of geographic data, wherein the one or more descriptors include: latitude, longitude, altitude, street name, or a combination thereof;
comparing the one or more descriptors to at least one attribute included in the property layer;
determining a closest attribute based at least in part on the comparison; and
determining a canonical anchor, vertex, or both to which the closest attribute is indexed.
7. A computing system, comprising:
one or more processors; and
one or more non-transitory computer-readable media collectively storing:
a topology base model representing a path network, the topology base model comprising:
a graph comprising one or more anchor points, one or more vertices, and one or more edges, wherein at least one edge is linked to at least one vertex; and
at least one property layer comprising one or more properties, wherein each of the one or more properties is indexed to one of the anchors, one of the vertices, one of the edges, or a combination thereof, and wherein none of the anchors, vertices, or edges of the topological base model are indexed to the properties.
8. The computing system of claim 7 wherein the graph is denormalized.
9. The computing system of claim 7 or 8, wherein the one or more non-transitory computer-readable media further store instructions for performing one or more operations for updating the topology base model.
10. The computing system of claim 9, wherein one of the one or more operations comprises adding an edge to the graph, and wherein adding an edge to the graph comprises:
establishing a unique ID associated with the one edge; and
adding an anchor point to the graph.
11. The computing system of claim 9 or 10, wherein one of the one or more operations comprises deleting an edge from the graph, and wherein deleting an edge from the graph comprises:
adding a time of death associated with the one edge.
12. The computing system of any of claims 9-11, wherein one of the one or more operations comprises fusing two edges in the graph, and wherein fusing two edges in the graph comprises:
adding a forwarding reference to one of the two edges, and wherein the forwarding reference directs a request to access an edge with the forwarding reference to the other of the two edges;
creating a new and unique ID and replacing any ID associated with both edges with the new and unique ID; or
The forwarding reference is added to one of the two edges and one or two new and unique IDs are added to one or two edges.
13. The computing system of any of claims 9-12, wherein one of the one or more operations comprises splitting an edge into one or more new edges, and wherein splitting the edge comprises:
an anchor point is added to the edge.
14. The computing system of any of claims 7-13, wherein each of the one or more anchor points includes a direction to move along an edge linked to an anchor point.
15. The computing system of any of claims 7-14, wherein one of the one or more property layers includes information related to a geometric block referencing one of the anchor points included in the graph.
16. The computing system of any of claims 7-15, wherein one of the one or more property layers comprises a plurality of attributes, and wherein each of the plurality of attributes comprises a reference ID and a geometry of each edge.
17. A computing system, comprising:
one or more processors; and
one or more non-transitory computer-readable media collectively storing:
a hierarchical database and instructions for the instructions to be executed,
the hierarchical database includes:
a graph comprising one or more anchor points, one or more vertices, and one or more edges, wherein each edge, each vertex, and each anchor point comprises a unique and stable ID;
a first property layer comprising one or more first properties, wherein each of the one or more first properties is indexed to one of the anchor points, one of the vertices, one of the edges, or a combination thereof; and
a second property layer comprising one or more second properties, wherein each of the one or more second properties is indexed to one of the anchors, one of the vertices, one of the edges, one of the first properties, or a combination thereof;
the instructions, when executed by the one or more processors, cause the computing system to perform one or more operations for updating the hierarchical database.
18. The computing system of claim 17, wherein one of the one or more operations comprises adding an edge, and wherein adding an edge comprises:
establishing a unique ID associated with the one edge; and
adding an anchor point to the graph.
19. The computing system of claim 17 or 18, wherein one of the one or more operations comprises deleting an edge, and wherein deleting an edge comprises:
adding a time of death associated with the one edge.
20. The computing system of any of claims 17-19, wherein one of the one or more operations comprises fusing two edges, and wherein fusing two edges comprises:
adding a forwarding reference to one of the two edges, and wherein the forwarding reference directs a request to access an edge with the forwarding reference to the other of the two edges; and
creating a new and unique ID and replacing any ID associated with both edges with the new and unique ID; or
The forwarding reference is added to one of the two edges and one or two new and unique IDs are added to one or two edges.
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
PCT/US2020/020618 WO2021177934A1 (en) | 2020-03-02 | 2020-03-02 | A topological basemodel supporting improved conflation and stable feature identity |
Publications (1)
Publication Number | Publication Date |
---|---|
CN115210702A true CN115210702A (en) | 2022-10-18 |
Family
ID=70155326
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN202080098033.8A Pending CN115210702A (en) | 2020-03-02 | 2020-03-02 | Topology base model supporting improved merging and stable feature identification |
Country Status (6)
Country | Link |
---|---|
US (2) | US11544299B2 (en) |
EP (1) | EP4094164A1 (en) |
JP (1) | JP2023515685A (en) |
KR (1) | KR20220139431A (en) |
CN (1) | CN115210702A (en) |
WO (1) | WO2021177934A1 (en) |
Families Citing this family (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
KR102601513B1 (en) * | 2022-11-28 | 2023-11-13 | 주식회사 엠큐닉 | Hdmap update system and method with its road map for autonomous driving |
CN116698017B (en) * | 2023-08-07 | 2023-10-31 | 中国科学院合肥物质科学研究院 | Object-level environment modeling method and system for indoor large-scale complex scene |
Family Cites Families (28)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6128577A (en) * | 1996-12-19 | 2000-10-03 | Schlumberger Technology Corporation | Modeling geological structures and properties |
FR2782183B1 (en) * | 1998-08-05 | 2000-10-13 | Geofermat Sarl | METHOD AND SYSTEM FOR PROCESSING SPATIAL REFERENCE INFORMATION, ESPECIALLY CARTOGRAPHIC INFORMATION, APPLICATIONS AND APPARATUS IMPLEMENTING THIS METHOD |
US7689621B1 (en) * | 2000-11-06 | 2010-03-30 | Navteq North America, Llc | Multi-dimensional spatial index for a geographic database |
US20040249686A1 (en) | 2003-06-03 | 2004-12-09 | Murphy Steven Linn | Method and computer program for generating interactive map-based presentation facilitating selection of lodging property |
US7711478B2 (en) * | 2005-06-21 | 2010-05-04 | Mappick Technologies, Llc | Navigation system and method |
US8358819B2 (en) * | 2005-06-24 | 2013-01-22 | University Of Iowa Research Foundation | System and methods for image segmentation in N-dimensional space |
US8571278B2 (en) * | 2005-06-24 | 2013-10-29 | The University Of Iowa Research Foundation | System and methods for multi-object multi-surface segmentation |
US20070260628A1 (en) * | 2006-05-02 | 2007-11-08 | Tele Atlas North America, Inc. | System and method for providing a virtual database environment and generating digital map information |
US7532979B2 (en) * | 2005-11-10 | 2009-05-12 | Tele Atlas North America, Inc. | Method and system for creating universal location referencing objects |
DE102006034407A1 (en) * | 2006-07-25 | 2008-01-31 | Robert Bosch Gmbh | Update procedure for databases, in particular navigation databases |
US20080051989A1 (en) * | 2006-08-25 | 2008-02-28 | Microsoft Corporation | Filtering of data layered on mapping applications |
US7925982B2 (en) * | 2006-09-01 | 2011-04-12 | Cheryl Parker | System and method of overlaying and integrating data with geographic mapping applications |
US8510268B1 (en) * | 2007-11-13 | 2013-08-13 | Google Inc. | Editable geographic data for maps, and applications thereof |
US9128955B2 (en) * | 2008-08-29 | 2015-09-08 | Siemens Product Lifestyle Management Software Inc. | System and method for a spatial index |
US9460114B2 (en) * | 2009-05-15 | 2016-10-04 | Hyundai Motor Company | System for managing relationship and history of combined space of interest (SOI) object and content |
US9020986B1 (en) | 2010-10-05 | 2015-04-28 | Google Inc. | Conflating geographic feature data |
US9235906B2 (en) * | 2012-06-10 | 2016-01-12 | Apple Inc. | Scalable processing for associating geometries with map tiles |
US9753950B2 (en) * | 2013-03-15 | 2017-09-05 | Pictometry International Corp. | Virtual property reporting for automatic structure detection |
GB201501245D0 (en) * | 2015-01-26 | 2015-03-11 | Ordnance Survey | Method and system for generalising topographical map data |
CN107430632B (en) * | 2015-04-13 | 2022-01-04 | 谷歌有限责任公司 | Dynamically controlling a map viewport in accordance with user signals |
US20170039258A1 (en) * | 2015-08-05 | 2017-02-09 | Microsoft Technology Licensing, Llc | Efficient Location-Based Entity Record Conflation |
US10255293B2 (en) * | 2015-10-16 | 2019-04-09 | Oracle Internatinoal Corporation | Generating virtual map tiles according to an ad hoc specification |
US10241963B2 (en) * | 2017-05-19 | 2019-03-26 | The United States Of America, As Represented By The Secretary Of The Navy | Hash-based synchronization of geospatial vector features |
WO2018218146A1 (en) | 2017-05-26 | 2018-11-29 | Google Llc | Data layers for a vehicle map service |
WO2019177870A1 (en) * | 2018-03-15 | 2019-09-19 | Magic Leap, Inc. | Animating virtual avatar facial movements |
US11308673B2 (en) * | 2018-05-03 | 2022-04-19 | Magic Leap, Inc. | Using three-dimensional scans of a physical subject to determine positions and/or orientations of skeletal joints in the rigging for a virtual character |
US11308136B2 (en) * | 2018-08-21 | 2022-04-19 | Sap Se | Different data sources for regions in geographical hierarchies |
US11715245B2 (en) * | 2020-10-05 | 2023-08-01 | Tableau Software, LLC | Map data visualizations with multiple superimposed marks layers |
-
2020
- 2020-03-02 WO PCT/US2020/020618 patent/WO2021177934A1/en unknown
- 2020-03-02 EP EP20716604.2A patent/EP4094164A1/en active Pending
- 2020-03-02 KR KR1020227034081A patent/KR20220139431A/en unknown
- 2020-03-02 CN CN202080098033.8A patent/CN115210702A/en active Pending
- 2020-03-02 JP JP2022552617A patent/JP2023515685A/en active Pending
- 2020-03-02 US US17/251,071 patent/US11544299B2/en active Active
-
2022
- 2022-12-30 US US18/091,953 patent/US20230132820A1/en active Pending
Also Published As
Publication number | Publication date |
---|---|
US20230132820A1 (en) | 2023-05-04 |
EP4094164A1 (en) | 2022-11-30 |
KR20220139431A (en) | 2022-10-14 |
US20220050860A1 (en) | 2022-02-17 |
US11544299B2 (en) | 2023-01-03 |
WO2021177934A1 (en) | 2021-09-10 |
JP2023515685A (en) | 2023-04-13 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US10545029B2 (en) | Lane network construction using high definition maps for autonomous vehicles | |
Wong et al. | Mapping for autonomous driving: Opportunities and challenges | |
US10002156B2 (en) | Version management for incrementally compiled map data | |
US11590989B2 (en) | Training data generation for dynamic objects using high definition map data | |
US20230132820A1 (en) | Topological Basemodel Supporting Improved Conflation and Stable Feature Identity | |
US20230385310A1 (en) | Map Uncertainty and Observation Modeling | |
CN108759840A (en) | A kind of indoor and outdoor integrated three-dimensional navigation path planning method | |
CN114238542A (en) | Multi-level real-time fusion updating method for multi-source traffic GIS road network | |
Lei | Geospatial data conflation: A formal approach based on optimization and relational databases | |
US20050114017A1 (en) | Interactive method for designing parcels | |
CN114820960B (en) | Method, device, equipment and medium for constructing map | |
US20230206584A1 (en) | Method, apparatus, and system for pole extraction from a single image | |
CN115509897A (en) | Automatic driving simulation test map display method and related device | |
O’Donoghue et al. | Seeing things: Inventive reasoning with geometric analogies and topographic maps | |
Dawid et al. | Visualisation of a military topographic spatial database with use of GIS servers | |
Richter et al. | Challenges and experiences in using heterogeneous, geo-referenced data for automatic creation of driving simulator environments | |
Hacar et al. | An experiment on distance metrics used for road matching in data integration | |
US20230132499A1 (en) | Method and apparatus for generating structured trajectories from geospatial observations | |
Padilla-Ruiz et al. | Measuring conflation success | |
Debiasi et al. | 3DArcLens: A technique for the exploration of geographical networks | |
GB2416222A (en) | Cleaning spatial data | |
Sang | New Horizons for the Standford Bunny: A Novel Method for View Analysis | |
Martí | UJI Navigation Network, Development of a pedestrian spatial network within the University Jaume I of Castellón (Spain) | |
Kim et al. | Rule-Based Modeler Component Design for 3D GIS Software | |
Sester | Multiple representation databases |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
SE01 | Entry into force of request for substantive examination |
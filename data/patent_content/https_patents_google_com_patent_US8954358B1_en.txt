US8954358B1 - Cluster-based video classification - Google Patents
Cluster-based video classification Download PDFInfo
- Publication number
- US8954358B1 US8954358B1 US13/288,874 US201113288874A US8954358B1 US 8954358 B1 US8954358 B1 US 8954358B1 US 201113288874 A US201113288874 A US 201113288874A US 8954358 B1 US8954358 B1 US 8954358B1
- Authority
- US
- United States
- Prior art keywords
- videos
- category
- video
- cluster
- labeled
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active, expires
Links
Images
Classifications
-
- G06K9/00718—
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V20/00—Scenes; Scene-specific elements
- G06V20/40—Scenes; Scene-specific elements in video content
- G06V20/41—Higher-level, semantic clustering, classification or understanding of video scenes, e.g. detection, labelling or Markovian modelling of sport events or news items
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F18/00—Pattern recognition
- G06F18/20—Analysing
- G06F18/23—Clustering techniques
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F18/00—Pattern recognition
- G06F18/20—Analysing
- G06F18/25—Fusion techniques
- G06F18/254—Fusion techniques of classification results, e.g. of results related to same input data
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F18/00—Pattern recognition
- G06F18/20—Analysing
- G06F18/29—Graphical models, e.g. Bayesian networks
-
- G06K9/6218—
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V10/00—Arrangements for image or video recognition or understanding
- G06V10/70—Arrangements for image or video recognition or understanding using pattern recognition or machine learning
- G06V10/77—Processing image or video features in feature spaces; using data integration or data reduction, e.g. principal component analysis [PCA] or independent component analysis [ICA] or self-organising maps [SOM]; Blind source separation
- G06V10/80—Fusion, i.e. combining data from various sources at the sensor level, preprocessing level, feature extraction level or classification level
- G06V10/809—Fusion, i.e. combining data from various sources at the sensor level, preprocessing level, feature extraction level or classification level of classification results, e.g. where the classifiers operate on the same input data
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V10/00—Arrangements for image or video recognition or understanding
- G06V10/70—Arrangements for image or video recognition or understanding using pattern recognition or machine learning
- G06V10/84—Arrangements for image or video recognition or understanding using pattern recognition or machine learning using probabilistic graphical models from image or video features, e.g. Markov models or Bayesian networks
Definitions
- the present disclosure generally relates to the field of digital video, and more specifically, to methods of generating accurate classifiers for identifying categories of a video.
- Video hosting services such as YOUTUBETM have become an increasingly popular way of sharing and viewing digital videos, with users contributing tens of millions of videos each year. Accurate categorization of a video is of great value in such systems, permitting users to search for videos corresponding to given categories, and the video hosting service to more accurately match videos with relevant advertising, and the like.
- the descriptive metadata information provided by the user who contributes a video often does not result in the correct categorization of the video. For example, for a set of predetermined categories including categories such as “Sports,” “Basketball,” “Tennis,” and the like, a video entitled with the name of a tennis player featured in the video would not in itself directly permit the video to be properly categorized as “Tennis” or “Sports.”
- Machine learning algorithms can be employed to train a classifier function for a given category (e.g., “Tennis”) that, when applied to features of a video (such as metadata of the video), outputs a measure of the relevance of the video to the category. Then, the trained classifier function for a given category can be applied to a video and the resulting measure of relevance used to determine whether the video is within that category.
- a classifier function for a category most learning algorithms employ supervised learning, which requires as input a training set of videos from a video repository, the training set known a priori to be representative of the category.
- supervised learning tends to produce more accurate classifier functions when trained on a larger training set, and/or a training set with features that are more useful for categorization purposes.
- large scale video hosting services where tens of thousands of videos are being uploaded every day, humans cannot efficiently view and label a sufficiently large sample of videos.
- the classifier functions trained using these small training sets are therefore not as effective as could be desired in categorizing the large number of videos that have not already been manually categorized. Additional means are needed to create a sufficiently large training set for the categorization process.
- a classifier training system trains a classifier functions (hereinafter simply “classifiers”) for categorizing videos representing different categories of a category graph.
- the classifiers are referred to as unified classifiers in that they unify the outputs of a number of separate initial classifiers trained from multiple disparate subsets of a training set of media items. Each unified classifier thus unites different types of training information within a single classifier.
- the training of a unified classifier takes into account inter-category relationships, which enhances training accuracy.
- the classifier training system begins with some set of predetermined categories arranged in a graph indicating relationships between categories, wherein nodes in the graph represent categories, and edges between nodes represent relationships between categories.
- the category graph could include a node for the category “Tennis” with an edge to a node for the parent category “Sports.”
- the classifier training system further begins with a training set of media items from which the unified classifier is trained.
- the media items can include—in addition to videos—other types of content, such as web pages and other textual documents, images, sound files, and the like.
- the training set comprises a first subset of videos, each of which has been previously authoritatively labeled (e.g., by a human expert) as representing one or more of the categories; the training set is accessed from a video repository.
- the classifier training system also begins with one or more other subsets of media items, each set of which can be of a different content type (e.g., web pages rather than videos) or obtained in a different manner. For example, videos that watched before or after one of the videos of the first subset by the same user (“co-watched” with the first video) are automatically inferred to be in the same categories as the video of the first subset.
- each of a plurality of the categories there are multiple initial classifiers, each of which outputs a value indicating whether a given media item represents the initial classifier's category.
- the initial classifiers are trained from combinations of the first subset of videos with the other subsets of media items, such as labeled web documents or audio items. For example, for each category there could be (1) an initial classifier trained from the textual features of the videos of the first subset and of videos co-watched with the videos of the first subset, and (2) another initial classifier trained from the audiovisual features of these same two subsets.
- the training of the initial classifiers may be performed by the classifier training system itself, or it may be performed by another system, with the initial classifiers being provided as input to the classifier training system.
- the initial classifiers for each category are then applied to each media item in the training set to generate scores representing whether (or how strongly) the media item represents the associated categories. For a given media item, these scores—e.g., Boolean or scalar values—form a feature vector describing characteristics of the media items to which they correspond. For example, a given media item there would have a feature vector with M*K features or M*K scores for each represented feature, one for each of the K categories and the M initial classifiers per category. Thus, features from subsets of the media items with potentially different characteristics are combined within a single feature vector.
- these scores e.g., Boolean or scalar values
- the scores computed from the initial classifiers as applied to the media items of the training set are provided as input for a fusion process that trains the unified classifiers, one per category.
- the fusion process learns classifier parameters of a probabilistic graph-based algorithm based on the known category labels of the media items of the training set, on the computed scores, and on the relationships between the categories of the category graph.
- the fusion process relates the scores associated with neighboring nodes of the category graph as part of its computations, thus taking into account the inter-category relationships.
- the unified classifiers can then be applied to an arbitrary video, each unified classifier producing as its output a score for each of the categories that indicates how strongly the video represents that category.
- the classifier training system is not limited to learning unified classifiers for digital videos, specifically, but rather can learn unified classifiers for any media object for which meaningful features can be extracted, including images, presentations, text documents, audio files, and the like.
- FIG. 1 is a block diagram of a video hosting service in which classifier training can be employed, according to one embodiment.
- FIG. 2 illustrates the various components of the classifier training subsystem of FIG. 1 , according to one embodiment.
- FIG. 3 is a data flow diagram representing the relationships and derivations of the various types of data analyzed and/or produced by the training subsystem, according to one embodiment.
- FIG. 4 is a data flow diagram representing the inputs and outputs of processes for training and for applying a unified classifier, respectively, according to one embodiment.
- FIG. 5 illustrates the various components of the co-watch video combiner, according to one embodiment.
- FIG. 1 is a block diagram of a video hosting service 100 in which classifier training can be employed, according to one embodiment.
- the video hosting service 100 represents a system such as that of YOUTUBETM that stores and provides videos to users via client devices 135 .
- the video hosting service 100 communicates with a plurality of content providers 130 and client devices 135 via a network 140 to facilitate sharing of video content between users.
- the video hosting service 100 can additionally obtain data from various external websites 125 .
- FIG. 1 depicts only one instance of website 125 , content provider 130 and client device 135 , though there could be any number of each.
- a user of the content provider device 130 provides video content to the video hosting service 100 and a (usually different) user uses a client device 135 (also referred to simply as “client”) to view that content.
- client device 135 also referred to simply as “client”
- content provider devices 130 may also be used to view content.
- a particular content provider device 130 may be operated by the same entity that operates the video hosting service 100 .
- Content provider functions may include, for example, uploading a video to the video hosting service 100 , editing a video stored by the video hosting service 100 , editing metadata information about a video, or editing content provider preferences associated with a video.
- a client device 135 is a computing device that executes client software, e.g., a web browser or built-in client application, to connect to the video hosting service 100 via a network 140 and to display videos.
- client software e.g., a web browser or built-in client application
- the client device 135 might be, for example, a personal computer, a personal digital assistant, a cellular, mobile, or smart phone, a television “set-top box,” or a laptop computer.
- the client 135 includes an embedded video player such as, for example, the FLASH player from Adobe Systems, Inc. or any other player adapted for the video file formats used in the video hosting service 100 .
- client and content provider may refer to software providing client and content providing functionality, to hardware devices on which the software executes, or to the entities operating the software and/or hardware, as is apparent from the context in which the terms are used.
- the website 125 comprises one or more web pages accessible to the video hosting service 100 via the network 140 .
- the web pages comprise, for example, textual content such as HTML.
- the website may make available additional types of media content, such as general textual documents, presentations, audio files, image files, and the like.
- the network 140 is typically the Internet, but may be any network, including but not limited to a LAN, a MAN, a WAN, a mobile wired or wireless network, a private network, or a virtual private network.
- the video hosting service 100 operates on the video data from the content providers 130 (and, optionally, from the website 125 ) when training video classifiers.
- the video hosting service includes a front end interface 102 , a video serving module 104 , a video search module 106 , an upload server 108 , and a video repository 116 .
- Other conventional features, such as firewalls, load balancers, authentication servers, application servers, failover servers, site management tools, and so forth are not shown so as to more clearly illustrate the features of the video hosting service 100 .
- One example of a suitable service 100 is the YOUTUBETM website, found at www.youtube.com.
- Other video hosting sites are known, as well, and can be adapted to operate according to the teachings disclosed herein.
- module refers to computational logic for providing the specified functionality.
- a module can be implemented in hardware, firmware, and/or software. It will be understood that the named modules described herein represent one embodiment of the present disclosure, and other embodiments may include other modules. In addition, other embodiments may lack modules described herein and/or distribute the described functionality among the modules in a different manner. Additionally, the functionalities attributed to more than one module can be incorporated into a single module. Where the modules described herein are implemented as software, the module can be implemented as a standalone program, but can also be implemented through other means, for example as part of a larger program, as a plurality of separate programs, or as one or more statically or dynamically linked libraries.
- the modules are stored on the computer readable persistent storage devices of the service 100 , loaded into memory, and executed by the one or more processors of the service's computers.
- the foregoing further applies to components described herein as “servers.”
- the various data processing operations described herein are sufficiently complex and time consuming as to require the operation of a computer system such as the system 100 in order to practice embodiments of the disclosure.
- the upload server 108 of the video hosting service 100 receives video content from a content provider 130 . Received content is stored in the video repository 116 .
- a video serving module 104 provides video data from the video repository 116 to the clients. Clients 135 may also search for videos of interest stored in the video repository 116 using a video search module 106 , such as by entering textual queries containing keywords of interest.
- the front end interface 102 provides the interface between client 135 and the various components of the video hosting service 100 .
- the video repository 116 contains a set of videos 117 submitted by content providers 130 .
- the video repository 116 can contain any number of videos 117 , such as tens of thousands or hundreds of millions.
- the video repository 116 is implemented using a database or file system, and indexing system for indexing and retrieving videos.
- Each of the videos 117 has a unique video identifier that distinguishes it from each of the other videos, such as a textual name (e.g., the string “a91qrx8”), an integer, or any other way of uniquely naming a video.
- the videos 117 can be packaged in various containers such as AVI, MP4, or MOV, and can be encoded using video codecs such as MPEG-2, MPEG-4, H.264, and the like.
- the videos 117 further have associated metadata 117 A, e.g., textual metadata such as a title, description, and/or tags provided by a content provider 130 who uploaded the video, or obtained by an analysis of a video done by a component of the video hosting service 100 .
- metadata 117 A e.g., textual metadata such as a title, description, and/or tags provided by a content provider 130 who uploaded the video, or obtained by an analysis of a video done by a component of the video hosting service 100 .
- the video hosting service 100 further comprises a classifier training subsystem 119 that trains an accurate video classifier for a predetermined set of categories, even in the absence of a large number of pre-categorized videos to use as training examples. The trained classifier can then be applied to a given video to determine which of the categories the video represents.
- the classifier training subsystem 119 is part of the video hosting service 100 , as depicted in FIG. 1 .
- the classifier training subsystem 119 is separate from the video hosting service 100 , receiving input from it and providing output to it.
- the classifier training subsystem 119 is described in greater detail in FIG. 2 .
- the service 100 may be implemented using a single computer, or a network of computers, including cloud-based computer implementations.
- the computers are preferably server class computers including one or more high-performance CPUs and 1G or more of main memory, as well as 500 Gb to 2 Tb of computer readable, persistent storage, and running an operating system such as LINUX or variants thereof.
- the operations of the service 100 as described herein can be controlled through either hardware or through computer programs installed in computer storage and executed by the processors of such servers to perform the functions described herein.
- the service 100 includes other hardware elements necessary for the operations described here, including network interfaces and protocols, input devices for data entry, and output devices for display, printing, or other presentations of data.
- FIG. 2 illustrates the various components of the classifier training subsystem 119 , according to one embodiment.
- the classifier training subsystem 119 trains classifiers based in part on a set of categories and on a set of videos that have been previously authoritatively labeled by an authoritative source as representing one or more of the categories. Therefore, a labeled video is any video that has been identified as belonging to a category. This labeled may be a string, integer, or any such identifier.
- a video may be labeled with respect to more than one category.
- a labeled video may mean that it has been identified with respect to a particular category, or that it has been identified as belonging to any category.
- An unlabeled video is any video that has not been identified with respect to a particular category, or that has not been identified with any category.
- a particular video may be identified with more than one category (e.g., sports and racing), and would be considered to be labeled with respect to those categories.
- the video would be considered unlabeled with respect to other categories (e.g. dogs and cats).
- this video may be considered a labeled video.
- a module of the classifier training subsystem 119 further identifies additional training sample items, possibly of different media types, for each of the categories in addition to the labeled videos.
- the different media types for these training items may include—in addition to videos—textual documents such as web pages, audio, and images.
- Each of the additional samples is identified using one of a set of different techniques, such as identifying co-watched videos or identifying web pages authoritatively labeled as representing a particular category.
- co-watched videos are videos played directly before or after one another by the same user.
- co-watched videos are videos that are indirectly played before or after one another by the same user. There may be certain temporal limit, such as all videos watched by one user within five minutes of watching a first video are co-watched with that first video.
- the combination of the labeled videos and the additional training sample items of different media types then serves as a supplemental training set that is provided as input to a classifier training algorithm.
- the various modules of the classifier training subsystem 119 process the supplemental training set, thereby training initial classifiers that can automatically categorize videos with a certain degree of accuracy.
- Output of the classifiers is then combined to train unified classifiers with still higher degrees of accuracy.
- the training of the unified classifiers is done using a graph algorithm that takes into account the structure of the category graph, including the relationships between neighboring categories (e.g., parent or child categories) in the graph.
- the classifier training subsystem 119 stores a predefined category set 205 representing different possible categories that a video could represent, such as “Sports,” “Tennis,” “Gymnastics,” “Arts & Entertainment,” “Movies,” “TV & Video,” and the like.
- the various categories of the category set 205 have some relationship with one or more other categories in the set, such that the set can be represented as a category graph, each node of the graph being a category, and edges between the nodes representing some relationship between the categories represented by the nodes connected by the edge.
- the category set 205 is more specifically a taxonomy in which the categories of the graph are arranged hierarchically as a taxonomy tree, with categories being more general parents and/or more specialized children of other categories.
- categories being more general parents and/or more specialized children of other categories.
- “Sports” could be a top-level parent category with child categories “Tennis” and “Gymnastics”
- “Arts & Entertainment” could be another top-level category with child categories “Movies” and “TV & Video.”
- the child categories may in turn have their own child categories.
- the taxonomy may have any number of levels of any breadth or depth.
- the category set 205 is non-hierarchical, with the nodes of the graph arbitrarily connected.
- a category can be represented in various manners as would be appreciated by one of skill in the art, such as a textual label (e.g., the string “Sports”) and an associated unique shorthand numerical identifier (e.g., 1).
- a video can be said to represent a category if the video contains some semantically understandable representation of the category within the video content itself. For example, a video represents a category “Tennis” if (for instance) there are scenes of a tennis match within the visual content of the video.
- a video can represent many different categories (e.g., both “Sports” and “News”), but users typically are interested in what may be considered the most salient category for the video.
- each of the categories has associated with it some minimum number of training sample items. That is, although there may initially have been some large number of potential categories, the final category set 205 will include only the potential categories that have the minimum number of associated training items.
- the classifier training subsystem 119 further accesses a training set 220 containing various content items, such as videos and web pages, that can be associated with various ones of the categories.
- the content items are labeled—either manually or automatically—with one or more of the categories from the category set 205 .
- the content items, along with their labels, are then used to train classifiers for the various categories with which the content items are associated.
- the training set 220 comprises a set of authoritatively labeled videos 224 (“authoritative videos”), previously authoritatively labeled as representing one or more categories from the category set 205 , and stored in a video repository or other equivalent data store.
- the videos are manually labeled by one or more human experts trained in the meaning and use of the category set 205 ; this involves the human expert viewing a representative portion of each video and then specifying which categories the video represents based on the portion viewed.
- the authoritative labeling is performed by a labeling algorithm that categorizes videos with a high degree of accuracy.
- a hybrid approach is used in which videos are initially categorized by a labeling algorithm, with subsequent human review and validation of some (or all) of the labels.
- a video is labeled with the most applicable leaf node category in the taxonomy. For example, a video about tennis is labeled “Tennis,” not “Sports”; the fact that the video also more generally represents sports can be inferred from the fact that “Tennis” is a child category of “Sports” in the taxonomy tree.
- the videos which are authoritatively labeled represent a subset of the video repository 116 that was determined to be particularly popular, such as the videos most frequently viewed over a particular recent time period.
- a category in order for a category to have a threshold number associated training items in this embodiment, it must first have a sufficient number of popular videos, and then a minimum number of these popular videos must be authoritatively labeled. In other embodiments, the videos need not meet any popularity criterion prior to being labeled.
- the training set 220 also beneficially comprises a set of supplemental training items 245 that can be labeled with less effort, albeit possibly with less certainty. These supplemental training items can then be combined with the authoritatively labeled videos to form a larger training set.
- the supplemental training set preferably includes both similar media items (e.g., other videos) as well as other types of media items (e.g., web pages, images).
- the supplemental training items repository 245 comprises subsets of videos 246 and 247 automatically labeled based on observed relationships, and a subset of web pages 248 authoritatively labeled in a manner similar to that by which the authoritatively labeled videos 224 were labeled. It is appreciated, however, that these particular sets of items are merely representative of one embodiment, and that the supplemental training items repository 245 need not contain items of those same content types, or items labeled using the same techniques, and many contain different numbers of subsets than the three depicted in FIG. 2 .
- the videos 246 of the supplemental training set 245 are automatically labeled based on observed co-watch relationships with the authoritatively labeled videos 224 resulting from user actions. That is, for a given one of the authoritatively labeled videos 224 , the videos that are played before or after it by the same user are considered “co-watched”.
- the videos 246 are generated by providing the authoritatively labeled videos 224 and the unlabeled videos to the co-watch video combiner 500 .
- the combiner uses a graph-based analysis to form clusters of videos that are related, based on their co-watch relationships. For example, the co-watch relationship may be the number (e.g.
- the combiner then labels the videos 246 based on their associations with the clusters.
- the co-watch video combiner depicted in FIG. 5 , comprises an initializer 505 , a clustering sequence 515 , a pruning sequence 525 , and a threshold pruner 535 .
- the authoritatively labeled videos are input into the initializer.
- the initializer first creates a graph having a dummy node for each category in the taxonomy tree. Then, each authoritatively labeled video is assigned to a node, and each of these nodes is attached to the dummy node corresponding to the category label of the authoritatively labeled video.
- a video 224 labeled “Sports” is assigned to a node, which in turn is attached to the dummy node for “Sports.”
- Assigning a video to a node may alternatively comprise associating the meta-data of a video, such as its category and co-watch relationships, and/or its extracted features, such as those described below with respect to the feature extraction module 233 , with a node.
- These groupings are output from the initializer 505 and form the seed set 510 .
- the cluster comprises a group of nodes connected by edges.
- Each node connects to at least one other node with an edge, but does not necessarily connect to all other nodes.
- the nodes and edges are given weights based on the co-watch relationship between the two videos represented by the two nodes attached to the edge. Nodes are added and removed from the seed set based on these weights.
- the seed set 510 and the unlabeled videos 246 are then passed into the clustering sequence 515 .
- the clustering sequence 515 sorts the unlabeled videos by clustering them around the seed clusters based on co-watch relationships. In general, any two co-watched videos will be connected. In this manner, an unlabeled video is assigned to a cluster if it is co-watched with an authoritatively labeled video in that cluster seed some minimum number of times; the minimum can be one, or some higher value. Other assignment functions based on the co-watch values can also be used for cluster assignment. For each edge in the cluster, the clustering sequence 515 assigns a weight to that edge based on the co-watch relationship of the two nodes connected to that edge. For example, the co-watch relationship may be the number (e.g. a count) of times the two videos were co-watched.
- the clustering sequence 515 outputs the clustered sets 520 .
- the pruning sequence 525 takes the clustered sets 520 and prunes them.
- the pruning sequence determines, for each video node, a cluster score, and removes the video if it is outside a threshold.
- This threshold may be a maximum (i.e. the cluster score must be below 10), a minimum (i.e. the cluster score must be above 10), or one or more acceptable ranges (i.e. the cluster score must be between 10 through 20 or 30 through 50).
- the cluster score may be a number of edges to other nodes, and the pruning sequence 525 then identifies and removes nodes in the cluster with less than a minimum number of edges to other nodes (e.g., fewer than 2).
- the cluster score for a video may be the number of unique co-watch videos for that video.
- the pruning sequence 525 applies the text classifier 241 for the category associated with the cluster to the nodes, where the score from the text classifier is the cluster score, and then removes those nodes with a low text classifier score (e.g., lower than 0.5).
- each of the nodes in a cluster is given a cluster score in the form of a weight.
- This weight is the sum of weights of the incident edges to the node.
- the weight is based on the sum of the weights of each of the node's neighbors modified by the weight of the respective incident edge. In this way, the weight is propagated from the authoritatively labeled videos to the unlabeled videos.
- the total weight represents the likelihood that the video at that node belongs to the category represented by the cluster.
- This set of weighted videos 530 is then sent to the threshold pruner 535 .
- the threshold pruner 535 analyzes each of the weighted videos. If the video has a weight lower than some threshold (e.g., 85%), the threshold pruner removes it from the cluster. The remaining videos are labeled with the selected category(ies) and are output as additional training data 245 .
- some threshold e.g., 85%
- Feedback between the clustering sequence 515 and the pruning sequence 525 may be used to optimize the clustering process by pruning unrelated nodes prior to reclustering.
- the clustering and pruning steps can be done iteratively.
- One feedback method is a dense partitioning algorithm, such as described in A Local Algorithm for Finding Dense Subgraphs by Andersen, in the proceedings of the 19 th Annual ACM-SIAM Symposium on Discrete Algorithms, pages 1003-1009, 2008. In these instances, only a portion (e.g., 10% to 25%) of the unlabeled videos 246 are input to the clustering sequence 515 initially, rather than all of the unlabeled videos 246 . These videos are clustered and output as the clustered set 520 .
- the clustered set 520 is then fed to the pruning sequence 525 .
- the pruning sequence then prunes the input set, and outputs the pruned set as the feedback set 522 .
- the clustering sequence 515 then accepts the feedback set 522 in place of the seed set 510 , as well as another portion of the unlabeled videos 246 .
- the clustering sequence 515 then outputs a new cluster set 520 based on the feedback set 522 and the new portion of the unlabeled videos 246 .
- This new cluster set 520 is fed into the pruning sequence 525 .
- the pruning sequence outputs a new feedback set 522 based on the new cluster set 520 .
- the feedback set acts like a “seed set” for repeated iterations of the cycle.
- the searched videos 247 of the supplemental training set 245 are automatically labeled based on the results of video search engines, such as those of YOUTUBETM. That is, each category label is provided as input to a video search engine, and a set of videos is identified as a result. For example, the category label “Tennis” is entered, and the video search engine provides a set of videos determined to represent tennis. The category is then applied as a label to each of the videos in the search result set. In one embodiment, a maximum of 5,000 such videos is labeled for each category, including the videos found to be representative of child categories.
- the authoritatively labeled text documents 248 of the supplemental training set 245 contain primarily textual content, and in one embodiment comprise web pages from various web sites. In other embodiments, the text documents 248 additionally and/or alternatively comprise other types of documents with significant textual content, such as word processing files, pure text files, and the like.
- the text documents 248 may contain non-textual elements, such as backgrounds, images, etc., in addition to their purely textual portions.
- the text documents 248 are labeled in the same manner as the authoritatively labeled videos 224 . That is, a human expert (for example) examines a text document, such as a web page, and labels it with the label of one or more of the categories of the category set 205 .
- the authoritatively labeled web pages 248 can be labeled with far less cost and effort and can thus include a far greater number of items.
- the text documents are tentatively labeled by an automated process, such as a computer program that assigns the tentative labels based on metadata keywords, and the human experts review the tentative labels, accepting or rejecting them as appropriate.
- the training set 220 includes content items obtained using different techniques, such as manual labeling, automatic identification of co-watched videos, and execution of queries on a video search engine.
- the content items may be of different content types, such as video and text, which have different content properties—that is, videos have both audiovisual content and also textual content (e.g., associated textual metadata), whereas text documents have only textual content.
- the various items of the training set 220 need not be equally distributed amongst the various categories of the category set 205 . Rather, different categories may have different numbers of corresponding items. In one embodiment, categories lacking some threshold number of items—e.g., at least 50 authoritatively labeled videos 224 —are discarded for purposes of future classifier training. Thus, for example, although the category set 205 might originally have a thousand distinct categories, only a small number of categories (e.g., 30) might have a sufficient number of associated training items 220 to be included in the classifier training.
- each content item can be associated with some representation of the one or more categories that it represents, e.g., via a list of the shorthand numerical identifiers for the various categories.
- the association could be reversed, with each category being associated with identifiers of the associated content items, such as video identifiers, URLs of web pages or other textual documents, and the like.
- the associations may be stored in any type of data structure that makes access and analysis of the labels efficient.
- the labels can be stored with the metadata of each item 220 , or in a separate table, array, index, tree, or other structure.
- the content of the training set 220 need not wholly or even partially be physically present within the classifier training subsystem 119 of the video hosting service 100 .
- one or more of the authoritatively labeled videos 224 and the supplemental training items 245 are stored on computing systems remote from the video hosting service 100 , and the classifier training subsystem 119 accesses them from their remote locations.
- the authoritatively labeled text documents 248 may be stored remotely on websites 125 from which they originate, with the training set 220 only including a reference such as an URL pointing to the text documents 248 and labels corresponding to categories of the category set 205 that the text documents represent.
- the various videos 224 , 246 , 247 could likewise be stored remotely.
- the classifier training subsystem 119 further comprises a classifier repository 240 containing the classifiers learned based on the content items of the training items repository 220 .
- the classifier repository 240 comprises initial classifiers 241 that result from training on combinations of the authoritatively labeled videos 224 with each of the supplemental training items 245 , such as the combination of the authoritatively labeled videos 224 and the co-watched videos 246 , and the combination of the authoritatively labeled videos 224 and the authoritatively labeled text documents 248 .
- the classifier repository 240 additionally comprises unified classifiers 242 that result from application of a graph-based fusion process to the results of the various initial classifiers 241 .
- the initial classifiers 241 represent preliminary classifiers that are used to produce the final, more effective unified classifiers 242 .
- Each of the initial classifiers 241 is associated with one of the categories in the category set 205 and, when applied to a video, provides a measure of how strongly the video represents that category. For example, an initial classifier 241 for the category “Tennis” provides a score measuring how strongly a given video represents the sport of tennis, e.g., based on the audiovisual content of the video and/or its textual metadata 117 A.
- a classifier produces Boolean scores representing whether or not a given video represents the category of the classifier; in another embodiment, a classifier produces a real number scalar (e.g., ranging from 0.0 to 1.0) representing how strongly (e.g., a measure of likelihood or probability) the video represents the categories, and numbers greater than some threshold can be considered to mean that the video represents the category.
- a real number scalar e.g., ranging from 0.0 to 1.0
- the classifier training subsystem 119 further comprises a classifier training module 230 that analyzes the content items in the training set 220 and trains the set of unified classifiers 242 that can be used to automatically categorize videos.
- the classifier training module 230 comprises a data supplementation module 231 that identifies certain ones of the supplemental training items 245 and adds them to the training set 220 .
- the data supplementation module 231 examines an access log of the video hosting service 100 to determine which videos were co-watched, and compares these videos to the authoritatively labeled videos 224 to identify the set of co-watched videos 246 .
- the data supplementation module 231 performs queries of the video search module 106 using each category label of the category set 205 to identify the searched videos 247 .
- the classifier training module 230 further comprises a partitioning module 232 that partitions the labeled content items of the training items repository 220 —that is, the authoritatively labeled videos 224 and supplemental training items 245 —into positive and negative training subsets based on their labels.
- the co-watched videos 246 and the searched videos 247 inherit the labels of the authoritatively labeled videos 224 to which they are related.
- the partitioning module 232 partitions the training items into some positive subset of items representing the category and some negative subset of items not representing the category.
- the documents representing the category are defined to be the documents labeled as representing either the category or one of its descendant categories (i.e., any child subcategory of the category, or any subcategories of a subcategory, etc.).
- the documents not representing the category are then derivatively defined to be the documents not in the positive subset.
- the partitioning module 232 could partition the training items 220 into a positive subset of content items representing “Sports” and a negative subset of documents not representing “Sports,” a positive subset representing “Tennis” and a negative subset not representing “Tennis,” and so forth, for each category in the category set 205 .
- These training subsets can then be used by an initial classifier training module 234 to train the initial classifiers 241 , as described below.
- the classifier training module 230 further comprises a feature extraction module 233 that extracts relevant features from the various training items 220 , an initial classifier training module 234 that trains a number of initial classifiers 241 for the various categories within the category set 205 using the features extracted by the feature extraction module 233 , and a fusion module 235 that trains the unified classifiers 242 based in part on values produced by the initial classifiers 241 .
- a feature extraction module 233 that extracts relevant features from the various training items 220
- an initial classifier training module 234 that trains a number of initial classifiers 241 for the various categories within the category set 205 using the features extracted by the feature extraction module 233
- a fusion module 235 that trains the unified classifiers 242 based in part on values produced by the initial classifiers 241 .
- the feature extraction module 233 extracts features from the content items of the training items repository 220 , the features serving as descriptive representations of their respective content items for use in learning category classifiers.
- the types of features differ based on the type of the content item from which they are extracted. For example, in the case of text documents from the authoritatively labeled text documents 248 , the feature extraction module 233 extracts textual features from the contents of the documents.
- the textual features that are extracted are weighted text clusters obtained from noisysy- Or Bayesian networks. (For more details, see, for example, Learning Bayesian Networks by R. E.
- the feature extraction module 233 additionally extracts various features from video content of the videos 224 , 247 , 248 .
- the types of features include one or more of the following:
- Audio and visual features are extracted in the same time interval. Then, a 1D Haar wavelet decomposition is applied to the extracted features at 8 scales. Instead of using the wavelet coefficients directly, the maximum, minimum, mean and variance of the wavelet coefficients are used the features in each scale. This multi-scale feature extraction is applied to all of the audio and video content features, except the histogram of local features.
- the initial classifier training module 234 trains the various initial classifiers for each category of the category set 205 . Different initial classifiers are trained based on the different combinations of the authoritatively labeled videos 224 with the various subsets of the supplemental training items 245 . For example, in the embodiment depicted in FIG. 2 , in which the supplemental training items 245 comprise a subset of co-watched videos 246 , a subset of searched videos 247 , and a subset of authoritatively labeled text documents 248 , initial classifiers are trained for the three combinations of the authoritatively labeled videos 224 with each of these three subset. Further, for each combination, classifiers may be learned based on the types of features obtainable from the combination.
- the two combinations of the videos 224 with the videos 246 and 247 each support both audiovisual features and text features, since videos have both audiovisual content and textual metadata, and thus both audiovisual and textual classifiers 241 are trained.
- the combination of the videos 224 with the text documents 248 supports only textual features, since the text documents 248 lack audiovisual content, and thus only textual classifiers are trained.
- each of the K categories has 5 distinct classifiers associated with it, and so there are 5K distinct classifiers in total.
- classifiers are trained only for categories having a sufficient number of associated training items, e.g., at least 50 authoritatively labeled videos 224 .
- the initial classifier training module 234 provides the features extracted by the feature extraction module 233 from the positive and negative training subsets produced by the partitioning module 232 as input to a training algorithm.
- the AdaBoost training algorithm is used for training the classifiers 241 based on audiovisual features from video content
- the support vector machine (SVM) algorithm is used for training the classifiers based on textual features (i.e. the textual features extracted the textual metadata of videos 224 and from the content of text documents 248 ) where there are 10,000 or fewer content items for training, and the LibLinear algorithm where there are more than 10,000 content items.
- a fusion module 235 trains the unified classifiers 242 based (in part) on the combined outputs of the classifiers.
- the training of the unified classifiers takes into account relationships between neighboring categories in the category graph, and also combines training items from different sources and possibly different content domains (e.g., video, text, audio).
- the unified classifiers 242 may then be applied to an arbitrary video (or, in other embodiments, to another type of media item of interest), producing as output a score for each of the categories of the category set 205 , the scores measuring how strongly the video represents that category. Further details on the fusion module 235 are provided below with respect to FIG. 4 .
- the classifier training subsystem 119 optionally comprises a video classification module 250 that applies the initial classifiers 241 and the unified classifiers 242 produced by the classifier training module 230 to determine categories of the category set 205 that are applicable to a given video. Discussion of the use of the video classification module 250 is provided below.
- FIG. 3 illustrates the relationships between the various modules described above, and data processing involved in the process of deriving the unified classifiers 242 , according to one embodiment.
- the process begins with the authoritatively-labeled videos 224 , each of which has been authoritatively labeled as representing one or more categories of the category set 205 .
- the supplemental training items 245 are then added to the authoritatively labeled videos 224 , thereby forming the training set 220 .
- the supplemental training items 245 include co-watched videos 246 , searched videos 247 , and authoritatively labeled web pages 248 , as described above with respect to FIG. 2 .
- Video items 246 and 247 inherit the same category labels as the authoritatively labeled videos 224 to which they are related; the authoritatively labeled web pages 248 are independently labeled, such as by human experts or labeling algorithms.
- the authoritatively labeled videos 224 are combined 305 with each of the sets of supplemental training items 246 - 248 .
- N 1 authoritatively labeled videos 224 and N 2 co-watched videos 246 they are combined into a first combined set having N 1 +N 2 items.
- appropriate features are then extracted 310 from the media items of each of the combined sets that represent the category, and an initial classifier 241 is trained 315 based on those features.
- Features are said to be appropriate for a combined set if they are of a type obtainable from both the authoritatively labeled videos 224 and the other set of supplemental training items 245 in the combination.
- both the authoritatively labeled videos 224 and the co-watched videos 246 are videos having both textual features (e.g., from textual metadata) and audiovisual features
- both a text classifier and an audiovisual classifier are trained for the combination of videos 224 and 246 .
- Each of the initial classifiers 241 is then applied 320 to score each of the media items in the training set 220 .
- the set of scores of the various media items, along with the corresponding labels, are provided as input to the fusion module 235 , which fuses the data together, training 325 a single unified classifier 242 for each of the categories 205 . More specifically, the training 325 results in learning of model parameters, as described in more detail below with respect to FIG. 4 .
- These parameters can then be used in conjunction with the other input data to infer the categories represented by an arbitrary video 320 , as described in more detail below with respect to FIG. 4 .
- the steps of FIG. 3 need not be performed in the exact order described.
- the feature extraction 310 could be performed before the subsets of the training set 220 are combined, and the combination could combine only the extracted feature, vectors.
- the features need not be extracted 310 from all the combinations of the training set 220 before training 315 is performed; rather, extraction and training could be performed for one combination at a time, before proceeding to the next combination.
- some of the steps could occur partially or entirely in parallel on different processing units (e.g., different machines, different processors of a single machine, or different cores of a single processor).
- the unified classifiers 242 need not apply solely to digital videos, but in different embodiments applies to different types of media items, such as audio files, image files, textual files such as web pages, and the like.
- the process for training the unified classifier 242 in these embodiments is analogous to that disclosed above for training the unified classifiers 242 to categorize videos. That is, with the exception of possibly using different types or numbers of subsets within the training set 220 and extracting different types of feature vectors for different types of media items, the process is fundamentally the same in all such embodiments.
- FIG. 4 is a data flow diagram representing the inputs and outputs of processes for training and for applying the unified classifiers 242 , respectively, according to one embodiment.
- the unified classifiers 242 of FIG. 2 are trained by the fusion module 235 .
- the fusion module 235 applies the initial classifiers 241 to each of the media items in the set of training items 220 .
- the classifiers 241 produce a set of with M*K features or M*K scores for each represented feature, where there are K categories and M distinct classifiers per category.
- the set of scores is linearized to form a feature vector for the media item.
- graph-based statistical methods of a fusion algorithm are applied to these feature vectors, to the known category labels of the media items of the training items 220 , and to the graph of the category set 205 to calculate parameter values used in the unified classifiers 242 . More detail on the fusion algorithm is now provided.
- the fusion algorithm uses a Conditional Random Field/Discriminative Random Field (CRF/DRF).
- CRF/DRF is a graph with a set of nodes S and edges E.
- y), is calculated as follows:
- each node i in S represents one of the categories in S (e.g., “Tennis” or “Arts & Entertainment”)
- x i and x j are binary label occurrence variables for the i th and j th nodes in S indicating whether an input video represents the categories of i th and j th nodes
- y is a set of observations y i , each y i being the score resulting from applying
- w i T and v T are parameters tending to maximize A i and I ij
- h i is the set of classifier scores and their quadratic combinations
- ⁇ ij is a pairwise feature vector for category nodes i and j
- N i denotes the neighbor nodes of i (e.g., its parent and/or child nodes).
- w i T parameter value there is a distinct w i T parameter value for each node i, and thus the parameter w is non-homogeneous.
- This training of a potentially different w value for each category node increases the number of parameters needed for the model, but this is computationally feasible when the number of categories is not overly large. For example, this is the case where only a modest number of potential categories have an adequate number of associated authoritatively labeled videos 224 .
- Making w non-homogenous beneficially increases the flexibility of the model, thereby allowing the model to better simulate real-world data.
- association potential A i is a function only of node i
- interaction potential I ij is a function of both node i and its neighbor nodes j.
- a i contributes to the decision of the label occurrences to apply to a node i locally, without considering label occurrences of neighboring nodes
- I ij regulates the label occurrences of node i by performing data dependent smoothing of labels on the neighboring nodes, which serves to take into account inter-category relationships.
- I ij relates the scores associated with neighboring nodes of the graph by computing the product x i *x j , as described further below.
- FIG. 4 represents the inputs and outputs for the training of the unified classifiers 242 by the fusion module 235 using CRF/DRF, operating a fusion process in a training mode 400 A, according to one embodiment.
- the training performed by the fusion algorithm in training mode 400 A takes as input the category set 205 , each category of which represents one of the nodes i in the set S of the CRF/DRF graph.
- the neighbors N i of each node i can be determined from the graph.
- the neighbors N i may include both child and parent nodes, both of which are treated equivalently by the algorithm.
- the training further takes as input the set of observations y and the set of label occurrences x, which are derived from the media items of the training set 220 .
- the observations y are the score feature vectors obtained by applying the initial classifiers 241 to the media items of the training set, and h i and ⁇ ij are a direct result of the values of y.
- each label occurrence value x i of x is expressed as +1 or ⁇ 1, based on whether it indicates that the respective media item does, or does not, represent the category corresponding to node i.
- the interaction potential of equation [3] takes into account inter-category relationships. Specifically, the label occurrences x i and x j of neighboring nodes i and j are multiplied when computing the interaction potential, and using the values +1 and ⁇ 1 for the label occurrences has the effect of producing a negative product when “neighbor” concepts have different label occurrences, thereby reducing the interaction potential. This penalizes parameter values that lead neighbor concepts to have different label occurrences for the same video, which is a desired result, since parent and child concepts are expected to represent the same concepts with higher probability than non-neighboring concepts.
- the authoritative labels of the media items act as the label occurrences x that represent the categories applicable to the media items; that is, each category label that has been authoritatively applied to a training set item causes the label occurrence x i for the item to be +1, and the label occurrences for the category labels not authoritatively applied are ⁇ 1.
- N media items in the training set 220 K categories in the category set 205 , and M different classifiers per category, then there are K*N label occurrences in x (one label per category), and M*K*N scores in observations y (M scores for each of the K categories, for each of the N media items).
- the CRF/DRF expressed by equation [1] above quantifies the probability that a particular video or other media item represents given categories (corresponding to label occurrences x), given that the initial classifiers 241 when applied to that video produce a particular set of scores (observation y).
- the fusion module 235 applies statistical methods to find the parameter values that maximize the probability expressed by equation [1], given the other variables with known values.
- maximum likelihood estimation ML is used in combination with belief propagation (BP), as would be known to one of skill in the art in the field of statistics.
- FIG. 4 further represents the inputs and outputs for the application of the unified classifiers 242 when the fusion algorithm is operating in inference mode 400 B to categorize a video 420 , according to one embodiment.
- node set S and the neighbor nodes N i are known, as are the initial classifiers 241 , and the score observations y can be obtained by applying the initial classifiers 241 to the appropriate feature vectors extracted from the video 420 .
- the categories S (including neighbors for each node i), the observations y, and the parameters w i T and v T act as input for the CRF/DRF algorithm.
- the output, x is a set of label occurrences, one for each category of the category set 205 , each label occurrence representing whether the video 420 is of the corresponding category.
- the fusion algorithm infers whether the video 420 represents the various categories 205 , given the properties of the video represented by the scores of the observation y.
- the inference mode 400 B uses maximum posterior marginal (MPM) with belief propagation (BP) to determine the category label occurrences x by maximizing the conditional probability p(x
- MPM maximum posterior marginal
- BP belief propagation
- the above-described techniques have a number of properties that are particularly useful for performing video recognition in conjunction with a graph of categories.
- the inclusion of the scores from the different types of initial classifiers 241 for a category 205 within the single observation y integrates different types of data within a single classifier, thereby allowing the use of training items 220 obtained in different ways and/or having different types of data.
- the use of the graph algorithms, and in particular the interaction potentials that examine the interplays of neighboring category nodes takes into account the parent-child relationships of the various categories, thereby capturing additional information and resulting in a more accurate classifier.
- the unified classifiers 242 can, when applied to a video (e.g., by the video classification module 250 ), produce a score for every category of the set of categories 205 .
- the unified classifiers 242 may then be applied to categorize videos 117 from the video repository 116 that do not already have authoritatively applied category labels.
- the unified classifiers 242 are provided, as input, with the same type of information that was used to train them—that is, feature vectors of classifier scores.
- the initial classifiers 241 are applied to the input video, producing a feature vector of scores.
- This feature vector of scores is then provided to each of the unified classifiers 242 as depicted in FIG. 4 , and the set of category scores is produced as output.
- the video is assigned a category label for each category for which the associated unified classifier 242 produces a score above some threshold level indicating sufficient certainty that the video is indeed representative of the category.
- only the top-scoring C categories are used to label the video, for some integer C.
- the category set 205 is a taxonomy tree
- a video is not assigned a label with a general parent category having a child sub-category that also applies. For example, if the classifiers for both the “Sports” category and its “Tennis” child category output scores for a given video above the threshold level, the video would be labeled with “Tennis” but not with “Sports,” since the latter can be inferred from the former.
- any category for which the associated unified classifier 242 produces a score for a video above some threshold level has its label assigned to the video, regardless of its parent/child relationships with other categories.
- the category labels assigned to a video can then be used in various ways by users of the video hosting service 100 .
- the labels of the determined categories can be viewed along with other metadata of a video, e.g., appearing as video tags for the video when viewed in a web-based user interface of a video sharing site.
- the labels can also be used to browse videos of a particular type, such as showing all videos that were assigned labels of a chosen category, such as “Tennis.”
- the category can be chosen in various ways, such as by direct user selection of a category.
- the category can be chosen by user selection of a document from which the category can be inferred, such as by application of the initial classifiers to a textual document, by application of the unified classifier to a video, or the like, thus implementing “show videos like this document” functionality.
- they can be integrated into more sophisticated search functionality as one input, such as a search for videos of a particular category and having other additional attributes, such as particular text in their titles, a creation date within a given timeframe, or the like.
- the possible uses of the assigned category label are numerous, and are not limited to these specific examples.
- Certain aspects of the present disclosure include process steps and instructions described herein in the form of an algorithm. It should be noted that the process steps and instructions of the present disclosure could be embodied in software, firmware or hardware, and when embodied in software, could be downloaded to reside on and be operated from different platforms used by real time network operating systems.
- the present disclosure also relates to an apparatus for performing the operations herein.
- This apparatus may be specially constructed for the required purposes, or it may comprise a general-purpose computer selectively activated or reconfigured by a computer program stored on a computer readable medium that can be accessed by the computer.
- a computer program may be stored in a computer readable storage medium, such as, but is not limited to, any type of disk including floppy disks, optical disks, CD-ROMs, magnetic-optical disks, read-only memories (ROMs), random access memories (RAMs), EPROMs, EEPROMs, magnetic or optical cards, application specific integrated circuits (ASICs), or any type of computer-readable storage medium suitable for storing electronic instructions, and each coupled to a computer system bus.
- the computers referred to in the specification may include a single processor or may be architectures employing multiple processor designs for increased computing capability.
- the present disclosure is well suited to a wide variety of computer network systems over numerous topologies.
- the configuration and management of large networks comprise storage devices and computers that are communicatively coupled to dissimilar computers and storage devices over a network, such as the Internet.
Abstract
Description
-
- A color histogram computed using hue and saturation in HSV color space;
- Color motion defined as the cosine distance of color histograms between two consecutive frames;
- Skin color features;
- Edge features using edges detected by a Canny edge detector in regions of interest;
- Line features using lines detected by a probabilistic Hough Transform;
- A histogram of local features using Laplacian-of-Gaussian (LoG) and SIFT (Scale Invariant Feature Transform);
- A histogram of textons;
- Entropy features for each frame using a normalized intensity histogram and entropy differences for multiple frames;
- Facial features such as a number of faces, or the size and aspect ratio of largest face region, with faces being detected by an extension of the AdaBoost classifier;
- Shot boundary detection based features using differences of color histograms from consecutive frames;
- Audio features such as audio volume and 32-bin spectrogram in a fixed time frame centered at the corresponding video frame; and
- “Adult” content features based on a boosting-based classifier in addition to frame-based adult-content features.
where, for purposes of video classification, S is the category graph of the category set 205, each node i in S represents one of the categories in S (e.g., “Tennis” or “Arts & Entertainment”) xi and xj are binary label occurrence variables for the ith and jth nodes in S indicating whether an input video represents the categories of ith and jth nodes, y is a set of observations yi, each yi being the score resulting from applying the ith initial classifier to the input video, and Z is a normalizing constant mapping the result to the range [0.0, 1.0]. The indices i and j thus enumerate over the set of nodes in S. Ai and Iij are referred to as the association potential and the interaction potential, respectively, and are defined as follows:
and
I ij(x i ,x j ,y)=x i x j v Tμij(y),jεN i, [3]
where wi T and vT are parameters tending to maximize Ai and Iij, hi is the set of classifier scores and their quadratic combinations, μij is a pairwise feature vector for category nodes i and j, and Ni denotes the neighbor nodes of i (e.g., its parent and/or child nodes).
Claims (33)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/288,874 US8954358B1 (en) | 2011-11-03 | 2011-11-03 | Cluster-based video classification |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/288,874 US8954358B1 (en) | 2011-11-03 | 2011-11-03 | Cluster-based video classification |
Publications (1)
Publication Number | Publication Date |
---|---|
US8954358B1 true US8954358B1 (en) | 2015-02-10 |
Family
ID=52443709
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/288,874 Active 2033-02-15 US8954358B1 (en) | 2011-11-03 | 2011-11-03 | Cluster-based video classification |
Country Status (1)
Country | Link |
---|---|
US (1) | US8954358B1 (en) |
Cited By (28)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20130304749A1 (en) * | 2012-05-04 | 2013-11-14 | Pearl.com LLC | Method and apparatus for automated selection of intersting content for presentation to first time visitors of a website |
US20140307958A1 (en) * | 2013-04-16 | 2014-10-16 | The Penn State Research Foundation | Instance-weighted mixture modeling to enhance training collections for image annotation |
US20150139555A1 (en) * | 2013-11-19 | 2015-05-21 | Electronics And Telecommunications Research Institute | Shoe image retrieval apparatus and method using matching pair |
US20150363644A1 (en) * | 2014-06-17 | 2015-12-17 | Nantworks, LLC | Activity recognition systems and methods |
US20160203318A1 (en) * | 2012-09-26 | 2016-07-14 | Northrop Grumman Systems Corporation | System and method for automated machine-learning, zero-day malware detection |
US9646079B2 (en) | 2012-05-04 | 2017-05-09 | Pearl.com LLC | Method and apparatus for identifiying similar questions in a consultation system |
US9699196B1 (en) * | 2015-09-29 | 2017-07-04 | EMC IP Holding Company LLC | Providing security to an enterprise via user clustering |
US20170262633A1 (en) * | 2012-09-26 | 2017-09-14 | Bluvector, Inc. | System and method for automated machine-learning, zero-day malware detection |
US9904436B2 (en) | 2009-08-11 | 2018-02-27 | Pearl.com LLC | Method and apparatus for creating a personalized question feed platform |
US20180144269A1 (en) * | 2016-11-23 | 2018-05-24 | Primal Fusion Inc. | System and method of using a knowledge representation for features in a machine learning classifier |
US20180144268A1 (en) * | 2016-11-23 | 2018-05-24 | Primal Fusion Inc. | System and method for generating training data for machine learning classifier |
WO2018094496A1 (en) * | 2016-11-23 | 2018-05-31 | Primal Fusion Inc. | System and method for using a knowledge representation with a machine learning classifier |
US10007679B2 (en) | 2008-08-08 | 2018-06-26 | The Research Foundation For The State University Of New York | Enhanced max margin learning on multimodal data mining in a multimedia database |
CN110489592A (en) * | 2019-07-18 | 2019-11-22 | 平安科技（深圳）有限公司 | Video classification methods, device, computer equipment and storage medium |
CN111723872A (en) * | 2020-06-24 | 2020-09-29 | 浙江大华技术股份有限公司 | Pedestrian attribute identification method and device, storage medium and electronic device |
US10878144B2 (en) | 2017-08-10 | 2020-12-29 | Allstate Insurance Company | Multi-platform model processing and execution management engine |
US10922550B2 (en) * | 2019-05-10 | 2021-02-16 | International Business Machines Corporation | Abnormal video filtering |
CN112380351A (en) * | 2021-01-18 | 2021-02-19 | 上海旻浦科技有限公司 | Text classification method, system, terminal and storage medium |
WO2021167733A1 (en) * | 2020-02-19 | 2021-08-26 | Microsoft Technology Licensing, Llc | System and method for improving machine learning models by detecting and removing inaccurate training data |
US11176452B2 (en) | 2017-02-28 | 2021-11-16 | Cisco Technology, Inc. | Method and system for piracy detection |
CN114245206A (en) * | 2022-02-23 | 2022-03-25 | 阿里巴巴达摩院(杭州)科技有限公司 | Video processing method and device |
US11514364B2 (en) | 2020-02-19 | 2022-11-29 | Microsoft Technology Licensing, Llc | Iterative vectoring for constructing data driven machine learning models |
US11537506B1 (en) | 2018-10-26 | 2022-12-27 | Amazon Technologies, Inc. | System for visually diagnosing machine learning models |
US11556746B1 (en) * | 2018-10-26 | 2023-01-17 | Amazon Technologies, Inc. | Fast annotation of samples for machine learning model development |
US11636387B2 (en) | 2020-01-27 | 2023-04-25 | Microsoft Technology Licensing, Llc | System and method for improving machine learning models based on confusion error evaluation |
US11755949B2 (en) | 2017-08-10 | 2023-09-12 | Allstate Insurance Company | Multi-platform machine learning systems |
US20240095293A1 (en) * | 2021-07-26 | 2024-03-21 | Beijing Zitiao Network Technology Co., Ltd. | Processing method and apparatus based on interest tag, and device and storage medium |
JP7470476B2 (en) | 2019-03-22 | 2024-04-18 | インターナショナル・ビジネス・マシーンズ・コーポレーション | Integration of models with different target classes using distillation |
Citations (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20060047617A1 (en) * | 2004-08-31 | 2006-03-02 | Microsoft Corporation | Method and apparatus for analysis and decomposition of classifier data anomalies |
US7970773B1 (en) * | 2007-05-25 | 2011-06-28 | Amazon Technologies, Inc. | Determining variation sets among product descriptions |
US20120123978A1 (en) * | 2010-11-11 | 2012-05-17 | Google Inc. | Learning Tags for Video Annotation Using Latent Subtags |
US20120213497A1 (en) * | 2011-02-21 | 2012-08-23 | Jiebo Lou | Method for media reliving on demand |
-
2011
- 2011-11-03 US US13/288,874 patent/US8954358B1/en active Active
Patent Citations (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20060047617A1 (en) * | 2004-08-31 | 2006-03-02 | Microsoft Corporation | Method and apparatus for analysis and decomposition of classifier data anomalies |
US7970773B1 (en) * | 2007-05-25 | 2011-06-28 | Amazon Technologies, Inc. | Determining variation sets among product descriptions |
US20120123978A1 (en) * | 2010-11-11 | 2012-05-17 | Google Inc. | Learning Tags for Video Annotation Using Latent Subtags |
US20120213497A1 (en) * | 2011-02-21 | 2012-08-23 | Jiebo Lou | Method for media reliving on demand |
Non-Patent Citations (31)
Title |
---|
Anderson, R., A local algorithm for finding dense subgraphs, In Proc. 19th Annual ACM-SIAM Symposium on Discrete Algorithms, 2008, pp. 1003-1009. |
Blum, A. et al., "Combining labeled and unlabeled data with co-training," In Proc. 11th Annual Conference on Computational Learning Theory, COLT, Jul. 1998, pp. 92-100. |
Davidson, J. et al. "The YouTube Video Recommendation System", RecSys2010, Sep. 26-30, 2010. ACM. pp. 293- 296. * |
Davison, B. D., "Topical locality in the web," In Proc. 23rd Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, 2004, pp. 272-279. |
Dekel, O., et al., "Large margin hierarchical classification," Proceedings of the 21 st International Conference on Machine Learning, Banff, Canada, 2004, 8 pages. |
Deng, J., et al., "ImageNet: A Large-Scale Hierarchical Image Database," IEEE Computer Society Conference on Computer Vision and Pattern Recognition, Jun. 22, 2009, pp. 248-255. |
Dumais, S., et al., "Hierarchical classification of web content," In SIGIR '00: Proceedings of the 23rd annual international ACM SIGIR conference on Research and development in information retrieval, pp. 256-263, New York, NY, USA, 2000. ACM. |
Fan, R.-E., et al., "Liblinear: A library for large linear classification," Journal of Machine Learning Research, 2008, pp. 1871-1874, vol. 9. |
Freund, Y., et al., "A decision-theoretic generalization of on-line learning and an application to Boosting," Journal of Computer and System Sciences, 1997, pp. 119-139, vol. 55, article No. SS971504. |
Goldman, S., et al., "Enhancing supervised learning with unlabeled data," In Proc. 17th International Conference on Machine Learning, 2000, pp. 327-334. |
Guillaumin, M., et al., "Multimodal semi-supervised learning for image classification," In Proc. IEEE Conf. Computer Vision and Pattern Recognition, Jun. 2010, pp. 902-909. |
Gupta, S., et al., "Watch, listen & learn: Co-training on captioned images and videos," In Proc. ECML PKDD, 2008, Part I, LNAI 5211, pp. 457-472. |
Halevy, A., et al., "The unreasonable effectiveness of data," Intelligent Systems, IEEE, Mar. 2009, pp. 8-12, vol. 24, No. 2. |
Huang, J., et al., "Exploring web scale language models for search query processing," In Proc. 19th international conference on World wide web, Apr. 26-30, 2010, pp. 451-460. |
Koller, D., et al., "Hierarchically classifying documents using very few words," In the Proceedings of the Fourteenth International Conference on Machine Learning, ICML, Jul. 8-12, 1997, pp. 170-178. |
Li, L.-J., et al., "Optimol: automatic object picture collection via incremental model learning," In Proc. IEEE Conf. Computer Vision and Pattern Recognition, 2007, 8 Pages. |
Li, L.-J., et al., "Towards total scene understanding: Classification, annotation and segmentation in an automatic framework," In Proc. IEEE Conf. Computer Vision and Pattern Recognition, 2009, pp. 2036-2043. |
Liu, T.-Y., et al., "Support vector machines classification with a very large-scale taxonomy," In SIGKDD Explorations, 2005, pp. 36-43, vol. 7, Issue 1. |
Mahajan, D., et al., "Image classification using the web graph," In Proc. Multimedia, Oct. 25-29, 2010, pp. 991-994. |
Neapolitan, R. E., et al., "Learning Bayesian Networks," Prentice-Hall, Inc., Upper Saddle River, NJ, USA, 2003, Cover page and Table of Contents, 7 Pages. |
Niebles, J. C., et al., "Extracting moving people from internet videos," In ECCV '08: Proceedings of the 10th European Conference on Computer Vision, 2008, pp. 527-540, Part IV, LNCS 5305. |
Schapire, R. E., "The boosting approach to machine learning: An overview," In MSRI Workshop on Non-linear Estimation and Classification, 2002, pp. 1-23. |
Schindler, G., et al., Internet video category recognition. In Proc. First IEEE Workshop on Internet Vision, in CVPR, 2008, pp. 1-7. |
Song, Y., et al., "Taxonomic classification for web-based videos," In Proc. IEEE Conf. Computer Vision and Pattern Recognition, Jun. 2010, pp. 871-878. |
Sun, A., et al., "Hierarchical text classification and evaluation," In ICDM, 2001, pp. 521-528. |
Tang, L., et al., "Large scale multi-label classification via metalabeler," In Proc. 18th International Conference on World Wide Web, Apr. 20-24, 2009, pp. 211-220. |
Wang, Z., et al., "Youtubecat: Learning to categorize wild web videos," In Proc. IEEE Conf. Computer Vision and Pattern Recognition, Jun. 2010, pp. 879-886. |
Yang, W. et al. "Discriminative tag learning on YouTube videos with latent sub-tags", 2011 IEEE Conference on Computer Vision and Pattern Recognition (CVPR), Jun. 20-25, 2011. pp. 3217-3224. DOI: 10.1109/CVPR.2011.5995402. * |
Zanetti, S., et al., "A walk through the web's video clips," In Proc. First IEEE Workshop on Internet Vision, in CVPR, 2008, 8 pages. |
Zhang, J.R. et al. "Improving video classification via youtube video co-watch data." Proceedings of the 2011 ACM workshop on Social and behavioural networked media access. ACM, 2011. pp. 21-26. doi>10.1145/2072627.2072635. * |
Zhu, X., Semi-supervised learning literature survey. In Tech Report. University of Wisconsin-Madison, Jul. 2008, pp. 1-60. |
Cited By (46)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10007679B2 (en) | 2008-08-08 | 2018-06-26 | The Research Foundation For The State University Of New York | Enhanced max margin learning on multimodal data mining in a multimedia database |
US9904436B2 (en) | 2009-08-11 | 2018-02-27 | Pearl.com LLC | Method and apparatus for creating a personalized question feed platform |
US9501580B2 (en) * | 2012-05-04 | 2016-11-22 | Pearl.com LLC | Method and apparatus for automated selection of interesting content for presentation to first time visitors of a website |
US20130304749A1 (en) * | 2012-05-04 | 2013-11-14 | Pearl.com LLC | Method and apparatus for automated selection of intersting content for presentation to first time visitors of a website |
US9646079B2 (en) | 2012-05-04 | 2017-05-09 | Pearl.com LLC | Method and apparatus for identifiying similar questions in a consultation system |
US20160203318A1 (en) * | 2012-09-26 | 2016-07-14 | Northrop Grumman Systems Corporation | System and method for automated machine-learning, zero-day malware detection |
US20170262633A1 (en) * | 2012-09-26 | 2017-09-14 | Bluvector, Inc. | System and method for automated machine-learning, zero-day malware detection |
US11126720B2 (en) * | 2012-09-26 | 2021-09-21 | Bluvector, Inc. | System and method for automated machine-learning, zero-day malware detection |
US9665713B2 (en) * | 2012-09-26 | 2017-05-30 | Bluvector, Inc. | System and method for automated machine-learning, zero-day malware detection |
US9646226B2 (en) * | 2013-04-16 | 2017-05-09 | The Penn State Research Foundation | Instance-weighted mixture modeling to enhance training collections for image annotation |
US20140307958A1 (en) * | 2013-04-16 | 2014-10-16 | The Penn State Research Foundation | Instance-weighted mixture modeling to enhance training collections for image annotation |
US9424466B2 (en) * | 2013-11-19 | 2016-08-23 | Electronics And Telecommunications Research Institute | Shoe image retrieval apparatus and method using matching pair |
US20150139555A1 (en) * | 2013-11-19 | 2015-05-21 | Electronics And Telecommunications Research Institute | Shoe image retrieval apparatus and method using matching pair |
US20170091537A1 (en) * | 2014-06-17 | 2017-03-30 | Nant Holdings Ip, Llc | Activity recognition systems and methods |
US9886625B2 (en) * | 2014-06-17 | 2018-02-06 | Nant Holdings Ip, Llc | Activity recognition systems and methods |
US9547678B2 (en) * | 2014-06-17 | 2017-01-17 | Nant Holdings Ip, Llc | Activity recognition systems and methods |
US20150363644A1 (en) * | 2014-06-17 | 2015-12-17 | Nantworks, LLC | Activity recognition systems and methods |
US9699196B1 (en) * | 2015-09-29 | 2017-07-04 | EMC IP Holding Company LLC | Providing security to an enterprise via user clustering |
JP2019536168A (en) * | 2016-11-23 | 2019-12-12 | プライマル フュージョン インコーポレイテッド | System and method for using knowledge representation with machine learning classifiers |
US20180144269A1 (en) * | 2016-11-23 | 2018-05-24 | Primal Fusion Inc. | System and method of using a knowledge representation for features in a machine learning classifier |
CN110168579A (en) * | 2016-11-23 | 2019-08-23 | 启创互联公司 | For using the system and method for the representation of knowledge using Machine learning classifiers |
US11544579B2 (en) * | 2016-11-23 | 2023-01-03 | Primal Fusion Inc. | System and method for generating training data for machine learning classifier |
US20180144268A1 (en) * | 2016-11-23 | 2018-05-24 | Primal Fusion Inc. | System and method for generating training data for machine learning classifier |
EP3545425A4 (en) * | 2016-11-23 | 2020-07-15 | Primal Fusion Inc. | System and method for using a knowledge representation with a machine learning classifier |
WO2018094496A1 (en) * | 2016-11-23 | 2018-05-31 | Primal Fusion Inc. | System and method for using a knowledge representation with a machine learning classifier |
US11176452B2 (en) | 2017-02-28 | 2021-11-16 | Cisco Technology, Inc. | Method and system for piracy detection |
US10878144B2 (en) | 2017-08-10 | 2020-12-29 | Allstate Insurance Company | Multi-platform model processing and execution management engine |
US11755949B2 (en) | 2017-08-10 | 2023-09-12 | Allstate Insurance Company | Multi-platform machine learning systems |
US11537506B1 (en) | 2018-10-26 | 2022-12-27 | Amazon Technologies, Inc. | System for visually diagnosing machine learning models |
US11556746B1 (en) * | 2018-10-26 | 2023-01-17 | Amazon Technologies, Inc. | Fast annotation of samples for machine learning model development |
JP7470476B2 (en) | 2019-03-22 | 2024-04-18 | インターナショナル・ビジネス・マシーンズ・コーポレーション | Integration of models with different target classes using distillation |
US10922550B2 (en) * | 2019-05-10 | 2021-02-16 | International Business Machines Corporation | Abnormal video filtering |
CN110489592B (en) * | 2019-07-18 | 2024-05-03 | 平安科技（深圳）有限公司 | Video classification method, apparatus, computer device and storage medium |
CN110489592A (en) * | 2019-07-18 | 2019-11-22 | 平安科技（深圳）有限公司 | Video classification methods, device, computer equipment and storage medium |
US11636387B2 (en) | 2020-01-27 | 2023-04-25 | Microsoft Technology Licensing, Llc | System and method for improving machine learning models based on confusion error evaluation |
US11514364B2 (en) | 2020-02-19 | 2022-11-29 | Microsoft Technology Licensing, Llc | Iterative vectoring for constructing data driven machine learning models |
US11636389B2 (en) | 2020-02-19 | 2023-04-25 | Microsoft Technology Licensing, Llc | System and method for improving machine learning models by detecting and removing inaccurate training data |
US11928567B2 (en) * | 2020-02-19 | 2024-03-12 | Microsoft Technology Licensing, Llc | System and method for improving machine learning models by detecting and removing inaccurate training data |
WO2021167733A1 (en) * | 2020-02-19 | 2021-08-26 | Microsoft Technology Licensing, Llc | System and method for improving machine learning models by detecting and removing inaccurate training data |
CN111723872B (en) * | 2020-06-24 | 2023-04-07 | 浙江大华技术股份有限公司 | Pedestrian attribute identification method and device, storage medium and electronic device |
CN111723872A (en) * | 2020-06-24 | 2020-09-29 | 浙江大华技术股份有限公司 | Pedestrian attribute identification method and device, storage medium and electronic device |
CN112380351A (en) * | 2021-01-18 | 2021-02-19 | 上海旻浦科技有限公司 | Text classification method, system, terminal and storage medium |
CN112380351B (en) * | 2021-01-18 | 2021-04-06 | 上海旻浦科技有限公司 | Text classification method, system, terminal and storage medium |
US20240095293A1 (en) * | 2021-07-26 | 2024-03-21 | Beijing Zitiao Network Technology Co., Ltd. | Processing method and apparatus based on interest tag, and device and storage medium |
CN114245206B (en) * | 2022-02-23 | 2022-07-15 | 阿里巴巴达摩院(杭州)科技有限公司 | Video processing method and device |
CN114245206A (en) * | 2022-02-23 | 2022-03-25 | 阿里巴巴达摩院(杭州)科技有限公司 | Video processing method and device |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US8954358B1 (en) | Cluster-based video classification | |
US8533134B1 (en) | Graph-based fusion for video classification | |
US8649613B1 (en) | Multiple-instance-learning-based video classification | |
CA2817103C (en) | Learning tags for video annotation using latent subtags | |
US8452778B1 (en) | Training of adapted classifiers for video categorization | |
US11556743B2 (en) | Learning highlights using event detection | |
US20230306057A1 (en) | Relevance-Based Image Selection | |
US8473981B1 (en) | Augmenting metadata of digital media objects using per object classifiers | |
US9087297B1 (en) | Accurate video concept recognition via classifier combination | |
US8396286B1 (en) | Learning concepts for video annotation | |
US7707162B2 (en) | Method and apparatus for classifying multimedia artifacts using ontology selection and semantic classification | |
US8819024B1 (en) | Learning category classifiers for a video corpus | |
US10032081B2 (en) | Content-based video representation | |
US20140029801A1 (en) | In-Video Product Annotation with Web Information Mining | |
WO2017070656A1 (en) | Video content retrieval system | |
EP2774119B1 (en) | Improving image matching using motion manifolds | |
US20140324864A1 (en) | Graph matching by sub-graph grouping and indexing | |
US8706655B1 (en) | Machine learned classifiers for rating the content quality in videos using panels of human viewers | |
Pedro et al. | Content redundancy in YouTube and its application to video tagging | |
Strat et al. | Hierarchical late fusion for concept detection in videos | |
Hou et al. | Classifying advertising video by topicalizing high-level semantic concepts | |
Hazrati et al. | Addressing the New Item problem in video recommender systems by incorporation of visual features with restricted Boltzmann machines | |
Kordumova et al. | Best practices for learning video concept detectors from social media examples | |
Tsikrika et al. | Reliability and effectiveness of clickthrough data for automatic image annotation | |
Mironica et al. | Fisher kernel based relevance feedback for multimodal video retrieval |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:ZHANG, JOHN;LEUNG, THOMAS;SONG, YANG;REEL/FRAME:027172/0436Effective date: 20111102 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044277/0001Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551)Year of fee payment: 4 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 8TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1552); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 8 |
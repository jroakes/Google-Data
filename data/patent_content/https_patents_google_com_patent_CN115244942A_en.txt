CN115244942A - Integrating secure watermarks into content - Google Patents
Integrating secure watermarks into content Download PDFInfo
- Publication number
- CN115244942A CN115244942A CN202080076096.3A CN202080076096A CN115244942A CN 115244942 A CN115244942 A CN 115244942A CN 202080076096 A CN202080076096 A CN 202080076096A CN 115244942 A CN115244942 A CN 115244942A
- Authority
- CN
- China
- Prior art keywords
- content
- client device
- watermark
- digital component
- watermarked digital
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Pending
Links
- 238000000034 method Methods 0.000 claims abstract description 54
- 230000004044 response Effects 0.000 claims abstract description 31
- 230000009471 action Effects 0.000 claims abstract description 30
- 238000013515 script Methods 0.000 claims description 24
- 230000001960 triggered effect Effects 0.000 claims description 3
- 238000005259 measurement Methods 0.000 description 37
- 230000008569 process Effects 0.000 description 30
- 238000004590 computer program Methods 0.000 description 12
- 238000012545 processing Methods 0.000 description 11
- 238000004891 communication Methods 0.000 description 10
- 230000003993 interaction Effects 0.000 description 7
- 238000010586 diagram Methods 0.000 description 6
- 235000019800 disodium phosphate Nutrition 0.000 description 6
- 241000282412 Homo Species 0.000 description 5
- 230000008859 change Effects 0.000 description 4
- 230000000694 effects Effects 0.000 description 4
- 230000003287 optical effect Effects 0.000 description 3
- 230000000644 propagated effect Effects 0.000 description 3
- 230000000007 visual effect Effects 0.000 description 3
- 238000013459 approach Methods 0.000 description 2
- 230000005540 biological transmission Effects 0.000 description 2
- 238000001514 detection method Methods 0.000 description 2
- 230000006870 function Effects 0.000 description 2
- 230000002452 interceptive effect Effects 0.000 description 2
- 239000003550 marker Substances 0.000 description 2
- 238000010295 mobile communication Methods 0.000 description 2
- 238000000926 separation method Methods 0.000 description 2
- 239000002131 composite material Substances 0.000 description 1
- 238000007405 data analysis Methods 0.000 description 1
- 238000013480 data collection Methods 0.000 description 1
- 230000001419 dependent effect Effects 0.000 description 1
- 238000005516 engineering process Methods 0.000 description 1
- 230000010354 integration Effects 0.000 description 1
- 239000004973 liquid crystal related substance Substances 0.000 description 1
- 238000007726 management method Methods 0.000 description 1
- 238000000691 measurement method Methods 0.000 description 1
- 239000000203 mixture Substances 0.000 description 1
- 238000004806 packaging method and process Methods 0.000 description 1
- 239000004065 semiconductor Substances 0.000 description 1
- 230000001953 sensory effect Effects 0.000 description 1
- 230000003068 static effect Effects 0.000 description 1
- 239000000758 substrate Substances 0.000 description 1
- 238000012546 transfer Methods 0.000 description 1
- 230000009466 transformation Effects 0.000 description 1
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/80—Generation or processing of content or additional data by content creator independently of the distribution process; Content per se
- H04N21/83—Generation or processing of protective or descriptive data associated with content; Content structuring
- H04N21/835—Generation of protective data, e.g. certificates
- H04N21/8358—Generation of protective data, e.g. certificates involving watermark
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F21/00—Security arrangements for protecting computers, components thereof, programs or data against unauthorised activity
- G06F21/10—Protecting distributed programs or content, e.g. vending or licensing of copyrighted material ; Digital rights management [DRM]
- G06F21/16—Program or content traceability, e.g. by watermarking
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/955—Retrieval from the web using information identifiers, e.g. uniform resource locators [URL]
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F21/00—Security arrangements for protecting computers, components thereof, programs or data against unauthorised activity
- G06F21/60—Protecting data
- G06F21/602—Providing cryptographic facilities or services
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/20—Servers specifically adapted for the distribution of content, e.g. VOD servers; Operations thereof
- H04N21/23—Processing of content or additional data; Elementary server operations; Server middleware
- H04N21/234—Processing of video elementary streams, e.g. splicing of video streams, manipulating MPEG-4 scene graphs
- H04N21/23424—Processing of video elementary streams, e.g. splicing of video streams, manipulating MPEG-4 scene graphs involving splicing one content stream with another content stream, e.g. for inserting or substituting an advertisement
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/40—Client devices specifically adapted for the reception of or interaction with content, e.g. set-top-box [STB]; Operations thereof
- H04N21/43—Processing of content or additional data, e.g. demultiplexing additional data from a digital video stream; Elementary client operations, e.g. monitoring of home network or synchronising decoder's clock; Client middleware
- H04N21/442—Monitoring of processes or resources, e.g. detecting the failure of a recording device, monitoring the downstream bandwidth, the number of times a movie has been viewed, the storage space available from the internal hard disk
- H04N21/44204—Monitoring of content usage, e.g. the number of times a movie has been viewed, copied or the amount which has been watched
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/40—Client devices specifically adapted for the reception of or interaction with content, e.g. set-top-box [STB]; Operations thereof
- H04N21/43—Processing of content or additional data, e.g. demultiplexing additional data from a digital video stream; Elementary client operations, e.g. monitoring of home network or synchronising decoder's clock; Client middleware
- H04N21/442—Monitoring of processes or resources, e.g. detecting the failure of a recording device, monitoring the downstream bandwidth, the number of times a movie has been viewed, the storage space available from the internal hard disk
- H04N21/44213—Monitoring of end-user related data
- H04N21/44222—Analytics of user selections, e.g. selection of programs or purchase activity
Abstract
A method includes receiving, by a content server including one or more processors, one or more characteristics of a particular content delivery opportunity from a client device, obtaining, by the content server, a watermarked digital component that is shorthand with a watermark that represents (i) a payload that triggers an action by the client device that detects the watermark and (ii) a reporting location that is linked by the client device in response to detecting the watermark, generating, by the content server, combined content by combining the watermarked digital component with content from a source that is different from a source of the digital component, and providing, by the content server, the combined content to the client device.
Description
Background
This specification relates to tags that are integrated into content and upon receipt cause a device to perform specified actions.
Disclosure of Invention
In general, one innovative aspect of the subject matter described in this specification can be embodied in methods that include: receiving, by a content server comprising one or more processors, one or more characteristics of a particular content delivery opportunity from a client device, obtaining, by the content server, a watermarked digital component that is shorthand with a watermark representing (i) a payload of an action triggered by the client device that detected the watermark and (ii) a reporting location contacted by the client device in response to detecting the watermark, generating, by the content server, combined content by combining the watermarked digital component with content from a source that is different from a source of the digital component, and providing, by the content server, the combined content to the client device. Other embodiments of this aspect include corresponding apparatuses, systems, and computer programs configured to perform various aspects of the methods encoded on computer storage devices.
These and other embodiments may each optionally include one or more of the following features. In some aspects, generating the combined content includes integrating the watermarked digital component into the content at a specified location within the content.
In some aspects, the content is a video stream, and integrating the watermarked digital component into the content includes splicing the watermarked digital component into the video stream at the specified location as a playback location.
In some aspects, integrating the watermarked digital component into the content includes integrating the watermarked digital component into one of: streaming audio, streaming video, game content, or images.
In some aspects, the destination location is a Uniform Resource Locator (URL) contacted by the client device in response to the client device detecting the watermark, and at least a portion of the payload data is transmitted to the URL in response to the client device detecting the watermark.
In some aspects, a given portion of the payload is cryptographically signed, and the cryptographically signed given portion of the payload is transmitted to the URL with data that causes the watermarked digital component to be displayed.
In some aspects, the content server is configured to remove the embedded script from the received digital components, and the watermark is in a form that prevents the watermark from being removed from the watermarked digital components by the content server.
In a networked environment, such as the internet, a first-party content provider may deliver information for presentation in an electronic document, such as a web page or application interface. The document may include content provided by the first party content provider and the third party content provider.
Various techniques may be used to add third-party content to an electronic document. Some documents include tags that instruct a client computer presenting the document to request third-party content items directly from third-party content providers. Other documents include tags that instruct the client computer to invoke intermediary services that cooperate with a plurality of third-party content providers. In some cases, third-party content items are dynamically selected for presentation in an electronic document, and a particular third-party content item selected for a given offer of the document may be different from third-party content items selected for other offers of the same document. The indicia may also instruct the client computer to perform operations such as measuring a particular metric.
Such tags may be used to measure, for example, whether content is delivered, whether content is visible, and how long content is visible, among other factors. This information is valuable to content providers to improve their content and to improve the user experience. In addition, this information can be used to improve the efficiency of the system by allowing content providers to refrain from presenting the content to users who are less likely to be interested in the content, thereby reducing data transmission over the network and associated infrastructure overhead.
In some cases, these measurements may be performed by a system that publishes, delivers, or distributes content, and the content provider relies on the measurement data to improve the user experience of the user of the receiving client computer. However, when content publishers perform these measurements, they may be less accurate, less consistent, and less reliable, while providing the appearance of fully tracked and measured content delivery. Furthermore, some content publishers do not perform measurements or collect information or signals from receiving client computers at all, and cannot guarantee or even determine whether a user of a client computer has consumed or has participated in content after it is delivered. Without these signals, the content provider and the content providing platform would lose valuable information, such as visibility, audibility, and availability of the service, as well as other metrics that impact the content distribution decision, including whether and what content the content provider distributes to the client computers.
In some cases, when the tag is provided to the content publisher for delivery with the content, the tag may not be delivered or may be removed prior to providing the content to the client computer. Indeed, some methods for measuring information may be rendered inoperable if the tag is not delivered with the content to the end user of the client computer.
The following description discusses various techniques and systems for improving the accuracy and reliability of measurements requested by content providers. Since the measurement technology currently requires collaboration of the content distribution system, the content provider is limited to the measurements performed by the distribution system, and these measurements may not be accurate enough or usable for the purpose of the content provider. By including a watermark that causes the receiving client computer to perform specified measurements that the client computer is configured to perform, the proposed system allows the content provider to request specific data tailored to its needs and may reduce the amount of data collected and transferred.
Furthermore, using these measurement signals to identify and select additional digital content may prevent inappropriate or unwanted content from being distributed, thereby reducing wasted resources. The method reduces the amount of resources spent on distributing content that is unlikely to be viewed or wanted and should not be distributed, and more efficiently provides content over a network-the method prevents distribution of content to entities that do not actually consume (listen to and/or view) the content. In other words, computing resources such as network bandwidth, processor cycles, and/or allocated memory are not wasted by using these resources to allocate content that should not be distributed.
The details of one or more embodiments of the subject matter are set forth in the accompanying drawings and the description below. Other features, aspects, and advantages of the subject matter will become apparent from the description, the drawings, and the claims.
Drawings
Fig. 1 is a block diagram of an example environment for improving data integrity by integrating image watermarks into content delivered to user devices.
Fig. 2 depicts a data flow for improving data integrity by integrating image watermarks into content.
FIG. 3 is a flow diagram of an example process for integrating image watermarking into content.
FIG. 4 is a block diagram of an example computer system.
Like reference numbers and designations in the various drawings indicate like elements.
Detailed Description
Metrics for the process of selecting and delivering digital components and content may be obtained by including tags to be delivered with the digital components and content. When a publisher or a provisioning side platform (SSP) issues a server side request for digital components, in order to ensure that the system participating in the content selection process meets the distribution parameters and restrictions defined by the participating content provider and content publisher, the platform is required to pass certain client header fields indicating, for example, selection criteria. The one or more switches participating in each return a set of one or more selection criteria for the candidate number component, the SSP selects one selection criteria from the set and sends a selection notification to the switches. The switch then provides a selection notification to the content provider, at which point the content provider returns a link to its digital components stored on its digital component server. The SSP may then provide the digital components and the requested content to the client device.
However, this method of measuring signals and characteristics important to the content provider to improve its provisioning and user experience relies on the content distribution system to reliably forward the tags selected and provided by the content provider. In some instances, if the tag is not forwarded to the end user with the digital component and the content, only the metrics collected by the content publisher will be provided to the content creator or provider. This may result in no relevance, or in some instances, no data being provided as feedback to the content creator. In systems that rely on content publishers to perform measurements and collect data, the type and amount of feedback available to content creators is entirely dependent on the content publisher.
The systems and methods described below provide an opportunity for content creators to pass instructions directly to clients in a manner that does not result in the publisher-side server removing the instructions, is somewhat resilient to interference by the publisher-side server or other intermediaries, and allows a media player running on the client device to recognize and act upon the instructions. Indeed, while the content publisher and publisher-side servers are capable of executing, stripping, or otherwise modifying instructions included in addition to the digital components provided for presentation with the requested digital content, they must maintain the integrity of the digital components themselves.
Throughout this document, a user (such as an end user, content generator, or content provider, among other types of users) may be provided with controls to allow the user to make selections as to whether and when the systems, programs, or features described herein may enable the collection of user information (e.g., information about the user's social network, social actions or activities, profession, the user's preferences, or the user's current location) and whether to send content or communications from a server to the user. In addition, certain data may be processed in one or more ways before it is stored or used, so that personally identifiable information is removed. For example, the identity of the user may be processed such that personally identifiable information cannot be determined for the user, or the geographic location of the user (such as to a city, zip code, or state level) may be summarized where location information is obtained such that a particular location of the user cannot be determined. Thus, the user may control what information is collected about the user, how the information is used, and what information is provided to the user.
Fig. 1 is a block diagram of an example environment 100 for improving data integrity by integrating image watermarks into content delivered to user devices. The example environment 100 includes a network 102, such as a Local Area Network (LAN), a Wide Area Network (WAN), the Internet, or a combination thereof. Network 102 connects electronic document server 104 ("electronic document server"), user devices 106, digital component distribution system 110 (also referred to as DCDS 110), switch 140, and third party 150. The example environment 100 may include many different electronic document servers 104, user devices 106, switches 140, and third parties 150.
The user device 106 is an electronic device capable of requesting and receiving resources (e.g., electronic documents) over the network 102. Example user devices 106 include personal computers, wearable devices, smart speakers, tablet devices, mobile communication devices (e.g., smart phones), smart appliances, and other devices that can send and receive data over the network 102. In some implementations, the user device can include a speaker that outputs audible information to the user and a microphone that accepts audible input (e.g., spoken text input) from the user. The user device may also include a digital assistant that provides an interactive voice interface for submitting input and/or receiving output provided in response to the input. The user device may also include a display to present visual information (e.g., text, images, and/or video). The user device 106 typically includes a user application, such as a web browser, to facilitate sending and receiving data over the network 102, although a native application executed by the user device 106 may also facilitate sending and receiving data over the network 102.
The user device 106 includes software such as a browser or operating system. In some implementations, the software allows a user to access information over a network, such as network 102, retrieve information from a server, and display information on a display of user device 106. In some embodiments, the software manages the hardware and software resources of the user device 106 and provides common services for other programs on the user device 106. The software may act as an intermediary between the program and the hardware of the user device 106.
An electronic document is data that presents a collection of content at a user device 106. Examples of electronic documents include web pages, word processing documents, portable Document Format (PDF) documents, images, videos, search result pages, and feeds. Native applications (e.g., "apps"), such as applications installed on a mobile, tablet, or desktop computing device, are also examples of electronic documents. An electronic document 105 ("electronic document") may be provided by the electronic document server 104 to the user device 106. For example, the electronic document server 104 may include a server hosting a publisher's website. In this example, the user device 106 may initiate a request for a given publisher web page, and the electronic document server 104 hosting the given publisher web page may respond to the request by sending machine hypertext markup language (HTML) code that initiates presentation of the given web page at the user device 106.
The electronic document may include various contents. For example, the electronic document 105 may include static content (e.g., text or other specified content) that is within the electronic document itself and/or that does not change over time. The electronic document may also include dynamic content that may change over time or on a per-request basis. For example, a publisher of a given electronic document may maintain a data source for populating portions of the electronic document. In this example, the given electronic document may include a tag or script that causes the user device 106 to request content from a data source when the given electronic document is processed (e.g., rendered or executed) by the user device 106. The user device 106 integrates content obtained from the data source into the presentation of the given electronic document to create a composite electronic document that includes the content obtained from the data source. The media content referred to herein is a digital content.
In some cases, a given electronic document may include a digital content tag or digital content script that references the DCDS 110. In these cases, the user device 106 executes the digital content tag or digital content script when the user device 106 processes a given electronic document. Execution of the digital content tag or digital content script configures the user device 106 to generate a request 108 for digital content that is communicated to the DCDS110 over the network 102. For example, a digital content tag or digital content script may enable the user device 106 to generate a packetized data request including a header and payload data. The request 108 may include data such as the name (or network location) of the server from which the digital content was requested, the name (or network location) of the requesting device (e.g., user device 106), and/or information that the DCDS110 may use to select the digital content to provide in response to the request. The request 108 is transmitted by the user device 106 to a server of the DCDS110 over the network 102 (e.g., a telecommunications network).
The request 108 may include data specifying characteristics of the electronic document and the location where the digital content may be presented. For example, the DCDS110 may be provided with data specifying a reference (e.g., a URL) to an electronic document (e.g., a web page) that will present the digital content, available locations of the electronic document (e.g., digital content slots) that may be used to present the digital content, sizes of the available locations, locations of the available locations within instances of the electronic document, and/or media types that are eligible to be provided in the locations. Similarly, data specifying keywords assigned for selecting an electronic document ("document keywords") or an entity referenced by the electronic document (e.g., a person, place, or thing) may also be included in the request 108 (e.g., as payload data) and provided to the DCDS110 to facilitate identification of digital content items that are eligible for presentation with the electronic document.
The request 108 may also include data related to other information, such as information that the user has provided, geographic information indicating the state or region in which the request was submitted, or other information that provides context of the environment in which the digital content is to be displayed (e.g., the type of device at which the digital content is to be displayed, such as a mobile device or tablet device). The user-provided information may include demographic data of the user device 106. For example, demographic information may include age, gender, geographic location, education level, marital status, household income, occupation, hobbies, social media data, and whether the user possesses a particular item, among other characteristics.
Data specifying characteristics of the user device 106 may also be provided in the request 108, such as information identifying the model of the user device 106, the configuration of the user device 106, or the size (e.g., physical size or resolution) of the electronic display (e.g., touchscreen or desktop monitor) on which the electronic document is presented. The request 108 may be transmitted, for example, over a packetized network, and the request 108 itself may be formatted as packetized data with a header and payload data. The header may specify the destination of the packet and the payload data may include any of the information discussed above.
The DCDS110 selects digital content to be provided for presentation with a given electronic document in response to receiving the request 108 and/or using information included in the request 108. In some implementations, the DCDS110 is implemented in a distributed computing system (or environment) that includes, for example, a server and a set of multiple computing devices that are interconnected and that identify and distribute digital content in response to the request 108. The set of multiple computing devices operate together to identify a set of digital content that is eligible for presentation in an electronic document from a corpus of millions or more of available digital content. Millions or more of available digital content may be indexed, for example, in the digital component database 112. Each digital content index entry may reference corresponding digital content and/or include adjusting a distribution parameter (e.g., selection criteria) of the corresponding digital content.
The identification of eligible digital content may be segmented into a plurality of tasks, which are then distributed among the computing devices within the set of multiple computing devices. For example, different computing devices may each analyze different portions of the digital component database 112 to identify various digital content having distribution parameters that match the information included in the request 108.
The digital content to be selected and distributed by the DCDS110 is provided by a third party 150. The third party 150 may be, for example, a content provider that creates digital components. In some implementations, the third party 150 is a content provider curating digital components. Third party 150 may provide candidate digital components, as well as other types of selection criteria such as a bid amount, a set of keywords to which the digital components respond, a threshold delivery rate of the digital components once selected, a threshold amount of user involvement with the digital components once delivered to the end user, and a threshold amount of specific types of users involvement with the digital components once delivered to the end user.
The user devices 106 typically include applications, such as web browsers and/or native applications, to facilitate sending and receiving data over the network 102. A native application is an application developed for a particular platform or a particular device (e.g., a mobile device with a particular operating system). The publisher may develop and provide, e.g., downloadable, the native application to the user device 106. For example, in response to a user of the user device 106 entering a resource address of a resource in an address bar of a web browser or selecting a link referencing the resource address, the web browser can request the resource 105 from a web server hosting the publisher's website. Similarly, the native application may request application content from a publisher's remote server. Some publishers use SSPs to manage the process of obtaining the digital components of their digital component slots for resources and/or applications. SSP is a technical platform implemented in hardware and/or software that automates the process of obtaining the digital components of resources and/or applications. The SSP may interact with one or more demand side platforms ("DSPs") to obtain information, such as selection criteria, that may be used to select digital components for digital component slots. In some embodiments, each issuer may have a corresponding SSP or SSPs. Some publishers may use the same SSP.
In some embodiments, the DCDS110 may perform actions of one or both of SSP and DSP. In this particular example, the DCDS110 performs the SSP actions by interacting with the content publisher and delivering the content to the client device 106.
The system 100 also includes one or more switches 140. The switch 140 is a digital platform that enables the provision and selection of digital components for presentation with requested digital content. A digital part provider, such as third party 150, may create (or otherwise publish) digital parts that are presented in digital part slots of publishers' resources and applications. Digital component provider 150 may use a DSP to manage the provisioning of its digital components for presentation in the digital component slots. A DSP is a technical platform implemented in hardware and/or software that automates the process of distributing digital components for presentation with resources and/or applications. The DSP may interact with multiple switches on behalf of the digital component provider 150 to provide digital components for presentation with multiple different publisher's resources and/or applications. In general, the DSP may receive a request for digital components (e.g., directly from the SSP or through the switch), generate (or select) selection parameters for one or more digital components created by one or more digital component providers based on the request, and provide data related to the digital components (e.g., the digital components themselves) and the selection parameters to the SSP.
The DCDS110 aggregates the results received from the set of multiple computing devices and uses information associated with the aggregated results to select one or more instances of digital content to be provided in response to the request 108. In turn, the DCDS110 may generate and transmit reply data 114 (e.g., digital data representing a reply) over the network 102 that enables the user device 106 to integrate the selected set of digital content into the given electronic document, such that the selected set of digital content and the content of the electronic document are presented together at a display of the user device 106.
An encoding input generator processes a plaintext data item to generate an encoded image that encodes the plaintext data item. The plaintext data items may be any data that can be encoded within the constraints of the encoding input generator. For example, the plaintext data items may be text samples or strings having a maximum length of n characters, since the size of the encoded image may be capable of providing lossless encoding for text samples of a predefined maximum length of only up to n characters. In some implementations, the plaintext data items include a session identifier that uniquely identifies a network session between the client computer 106 and the content server during which a response is served to a request from the client computer 106.
In some implementations, the plaintext data items include or reference source content data that identifies or information associated with particular source content supplied to the client computer 106 (e.g., information indicating which of the source content providers provides the particular source content supplied to the client computer 106 and a timestamp indicating when the source image was supplied or requested). In some implementations, the database stores data that correlates such information about the source content or responses to particular request offerings in order to make detailed information accessible via the session identifier or other information represented by the plaintext data items. The response record database may also associate the session identifier with the source content data, such that the source content data is accessible by querying the database using the session identifier represented by the plaintext data items. The user may then identify, for example, from which source content provider at what time, which of the source content items are served to the client computer for use of the session identifier from the plaintext data item. The source content may be in the form of visual data, audio data, or a combination thereof. For example, the source content may be plaintext data, image data, video data, and/or audio data, among other types of content. For simplicity, the following discussion generally refers to image data. However, it is contemplated that the described system applies to other types of data, and some example embodiments are described.
The plaintext data may include information, described in further detail below, that causes the client device to perform one or more specified measurements when executed by the client device. For example, the plaintext data may include a measurement script that causes the client device to perform a measurement of an amount of time that the content or digital component is viewed by the client device and a type of interaction performed by a user of the client device with the content or digital component.
The encoded image is an image in which a plaintext data item is encoded. In some embodiments, the encoded image is a matrix-type barcode representing a plaintext data item. One example of a suitable matrix-type barcode is a quick response code (QR code). The encoded image may have a predefined size in terms of the number of rows and columns of pixels. Each pixel in the encoded image may encode a binary bit of data, where the value of each bit is represented by a different color. For example, a pixel encoding a binary value "1" may be black, while a pixel encoding a binary value "0" may be white. In some embodiments, the minimum coding unit of the encoded image may actually be larger than a single pixel. But for the purposes of the examples described herein, it is assumed that the minimum coding unit is a single pixel. However, it should be appreciated that the techniques described herein may be extended to implementations in which the smallest coding unit is a set of multiple pixels (e.g., a 2 x 2 or 3 x 3 set of pixels).
The watermark generation system 120 also includes a watermark image generator. The watermark image generator is configured to process the encoded image to generate a semi-transparent watermark image. The semi-transparent watermark image is derived from the encoded image and also encodes a plaintext data item. However, the transparency, color, arrangement of encoded pixels, and/or other characteristics of the watermark image may vary depending on the transparency, color, arrangement of encoded pixels, and/or other characteristics of the encoded image. For example, although the encoded image may be uniformly opaque and composed of encoded pixels packed in close proximity to each other, the watermark image may include some fully transparent pixels and some partially transparent pixels. Moreover, the encoded pixels in the watermark image may be spaced relative to each other such that each encoded pixel is surrounded by non-encoded pixels (i.e., "blank" pixels). The transformation of the encoded image into the watermark image may be performed such that after the watermark image is overlaid and merged on the background source image, the encoded information may be decoded, for example, by reconstructing the encoded image or the watermark image. In some implementations, the watermark image is invisible to a user of the client device receiving the watermark image. For example, the watermark image may be so small in proportion to the digital component or content that the watermark image is set to so that it will not be visible to a human user.
The content delivery system 130 performs content packaging and delivery. For example, the content delivery system 130 may format content, combine media content, and deliver content to user devices. Content delivery system 130 may, for example, detect a digital content slot in which digital content is desired to be delivered within media content delivered to a user device, such as user device 106. The content delivery system 130 may also format the content to include the digital components selected for delivery. For example, the content delivery system 130 may combine the digital components and the content prior to delivery to the user device. Content delivery system 130 may also format the digital components to include watermark images. For example, the content delivery system 130 may integrate a watermark image 122, such as a partially transparent QR code that is not visible to the user, into a digital component to be delivered to the user device as a reply 114 with the requested content. In some implementations, the digital content slots are indicated by a flag or other indicia that indicates to the content delivery system 130 that additional digital content should be provided. These markers may be defined by the media content provider and/or creator. In some implementations, the content delivery system 130 can determine where these markers should be placed within the media content. For example, the content delivery system 130 may detect naturally blank or unobtrusive locations within the image file and place markers for watermark images or for additional digital content to be provided.
In some implementations, the content delivery system 130 can provide additional digital content within the media content stream within the defined slot. For example, in some implementations, the content delivery system 130 can insert a pause at the marker where additional content can be integrated, the pause serving as a defined slot within the audio file.
In some implementations, the content delivery system 130 can pause the delivery of the media content stream upon detecting the marker, deliver the additional digital content separately, and then resume the delivery of the media content.
In some embodiments, the watermark image may be generated directly from the plaintext data without explicitly generating the encoded image as an intermediate operation in implementing the watermark image. Moreover, for embodiments in which the third party 150 employs a source image encoder to directly merge the watermark image on the source image for provision of the merged image to the client computer 106, the third party 150 may directly encode the watermark in the source image without explicitly generating the encoded image, the watermark image, or both. It will be apparent to those skilled in the art how one or more of these operations can be integrated to provide a more direct form of encoding/watermarking of a source image.
FIG. 2 depicts a data flow 200 of a method of improving data integrity by integrating image watermarks into content in the example environment of FIG. 1. The operations of data flow 200 are performed by various components of system 100. For example, the operations of the data flow 200 may be performed by a third-party content provider 150 in communication with the DCDS110 and the client device 106.
The flow begins with step a in which a client device provides a content request to a publisher side server or SSP. For example, the client device 106 may provide content requirements to the DCDS110 that performs the functions of the SSP. The content requirements may include information about the capabilities of the client device 106, the characteristics of the connection through which the client 106 accesses a network, such as the network 102, the location of the requested content, the type of content requested, and information about the current and/or historical activity of the user of the client device 106, among other information. For example, the content requirements may include information about available bandwidth on the connection between the client device 106 and the network 102.
In some implementations, the content requirements include one or more characteristics of the content item presentation opportunity. For example, the content requirements may include receiving a request for a digital component to be presented with the requested content. In some implementations, the content requirements simply include information indicating that particular content is to be delivered to the user.
The flow continues to step B where the SSP sends a request for content to the content provider. For example, the DCDS110 may send a request for a particular web page to the electronic document server 104. The electronic document server 104 may be, for example, a content publisher that hosts a particular website or domain and publishes various content. The requested content may be image content, video content, audio content, or text content, among other types of content, and may be stored within the electronic document server 104 or generated upon request. For example, the requested content may be a video hosted by the electronic document server 104.
The flow continues in step C where the content repository provides the requested content to the SSP. For example, the electronic document server 104 may communicate the requested web page to the DCDS 110. The electronic document server 104 may provide the requested content itself to the DCDS 110. For example, the electronic document server 104 may provide a video file to the DCDS 110. In some implementations, the electronic document server 104 provides the location of the requested content to the DCDS 110. For example, the electronic document server 104 may return a location to the DCDS110 where the requested video file is stored.
The flow continues in step D where the SSP transmits a request to the switch for selection criteria for candidate number components. The request for selection criteria may include information about the capabilities of the client device 106, the characteristics of the connection through which the client 106 accesses a network, such as network 102, the characteristics of the content requested from the electronic document server 104, and information about the current and/or historical activities of the user of the client device 106, among other information. For example, the content requirements may include information about a website from which the user is directed to the content requested from the electronic document server 104.
In one example, the SSP is implemented as the DCDS110 and can provide a request to a switch implemented as switch 140 for selection criteria for one or more candidate number components. The switch 140 collects and manages selection criteria for one or more candidate numeric components that may be selected for presentation with the requested content. The switch 140 receives selection criteria and candidate number components from one or more third-party content providers, such as the third-party content provider 150. The switch 140 may provide all candidate numeric components and selection criteria for those numeric components to the DCDS110 in response to a request for selection criteria for candidate numeric components. In some embodiments, the switch 140 may perform a preliminary selection process to select one or more numeric components from a plurality of candidate numeric components to provide to the DCDS 110. The DCDS110 may solicit selection criteria for candidate numeric components from one or more switches 140.
The flow continues in step E where the switch provides the content creator with a request for selection criteria for candidate numeric components. For example, the switch 140 may solicit candidate number components from the third-party content provider 150. The request provided by the switch 140 may include the same information as the request provided by the DCDS 110. In some embodiments, the request provided by the switch 140 may include more information or restrictions. The switch 140 may request candidate digital components from one or more third-party content providers 150.
The flow continues in step F where the third-party content provider returns one or more selection criteria to the exchange. For example, the third-party content provider 150 may provide one or more selection criteria for candidate numeric components to the switch 140. In this particular example, the third-party content provider 150 provides selection criteria for the candidate number component 114, which is an image that allows the user to click on it to learn about a lovely bird. In some implementations, two or more third-party content providers 150 are in communication with the switch 140 and may each return one or more candidate numeric components and their selection criteria to the switch 140.
In some implementations, the third-party content provider 150 provides candidate number components and selection criteria for those candidate number components to the switch 140 prior to requesting the candidate number components. The switch 140 may perform a preliminary selection process to reduce the number of candidate digit components and the selection criteria of the candidate digit components that are communicated to the DCDS 110. For example, the switch 140 may determine or may be provided with a threshold number of candidate numeric components to provide. In some embodiments, the switch 140 may perform a preliminary selection process based on specific requirements for the selection criteria of the candidate number components. For example, the switch 140 may receive a threshold of one or more selection criteria for candidate numeric components from the DCDS110 and then select only those candidate numeric components having selection criteria that satisfy the threshold.
The flow continues in step G where the switch provides the SSP with one or more selection criteria for the candidate number components for the final selection process. For example, the switch 140 may return one or more selection criteria for candidate digit components to the DCDS 110. The DCDS110 may communicate with and receive selection criteria from one or more switches 140.
The DCDS110 may perform a final selection process using the selection criteria of the candidate digital components received from the switch 140 according to the content selection technique. For example, the DCDS110 may perform a content auction using the selection criteria of the candidate digital components received from the switch 140 and select a winning digital component for presentation with the requested web page provided by the electronic document server 104 based on the selection criteria of the winning digital component.
The flow continues in step H where the SSP provides a selection notification to the switch. For example, the DCDS110 may provide a selection notification to the switch 140. The selection notification may identify the numerical component selected as the winning numerical component and/or the selection criteria for that numerical component. For example, the selection notification may include an identifier of the numeric component.
The process continues in step I where the switch provides a selection notification to the third-party content provider of the selected digital component. For example, the switch 140 may provide a selection notification to the third-party content provider 150 that provided selection criteria for candidate digital components selected as winning digital components. The switch 140 may generate a selection notification to be provided to the third-party content provider 150 based on the selection notification received from the DCDS 110. In some implementations, the switch 140 simply forwards the selection notification to the third-party content provider 150 of the selected digital component. In this particular example, the selected digital component may be an image 114 that allows the user to interact with the image itself to learn about a lovely bird.
Because the selection notification is provided to the third-party content provider 150 once the candidate digital components to be rendered are selected, the system provides the third-party content provider 150 with the opportunity to generate and embed watermarks in the digital components to protect against interference. The script and data embedded within the watermark may, for example, cause the client device to perform a measurement action, such as sending a ping (ping) to the content provider of the digital component to allow the content provider to compare the communication with expected interaction data to improve its content, detect fraud, and improve user experience, among other functions.
The flow continues in step J where the third-party content provider generates a watermark and embeds the watermark in the selected digital component. For example, the third-party content provider 150 may use the watermark generation system 120 to generate a watermark image, such as the watermark image 122. In this particular example, the watermark image 122 is a QR code. The watermark image 122 includes a URL destination and a payload. The URL destination indicates a location to which the payload is to be transferred when watermark image 122 is detected and/or read. The watermark image 122 is not visible to humans. For example, watermark image 122 may be transparent or too small to be seen by the human eye. Because watermark image 122 is not visible to humans, it does not affect the user's experience when consuming the requested content.
Embedding or stenographing the watermark image into the digital component may include, for example, integrating the watermark image into the digital component such that it is not detectable as separate from the digital component. For example, the watermark image may be embedded in the digital component by overlaying the watermark image as an additional layer to the digital component image, and then flattening the layers to make them a single entity. In some embodiments, the watermark image may be embedded into the digital component simply by adding the watermark image as an additional layer without making the layer indistinguishable.
Although the watermarked image 122 is not visible to humans, an application displaying the digital components in which the watermark image 122 is embedded may detect the presence of the watermark image 122 and read the watermark image 122 that causes the client device 106 to perform the specified action. For example, when a client device downloads requested content and a digital component with an embedded watermark and then views or otherwise consumes the digital component, an application that the client device is consuming the digital component may detect the watermarked image. The application will then read the watermark image and the instructions encoded within the watermark image will be executed by the client device. Because the watermark image is embedded within the digital component, in some embodiments, the application will only be able to detect the watermark image if the digital component is downloaded and consumed, thereby providing an additional layer of security. In some implementations, the digital component 114 can be marked or marked so that an application on the client device 106 is paying attention to a signature or label, such as the watermark image 122. For example, digital component 114 may be marked to indicate the presence of watermark image 122, the location of watermark image 122, and/or the format of watermark image 122. In some embodiments, the application is configured to scan the digital components received for the presence of the watermark image. For example, a video player on the client device 106 may be configured to scan video for watermarks in video or audio form.
The payload of the watermark image 122 may simply be the payload to be forwarded to the URL destination. In some implementations, the payload includes a measurement script that causes the client device 106 to perform actions specified by the script, including performing the measurement action, pinging the specified device or location, and communicating the measurement results to the specified device or location, among other actions.
In some implementations, the location within the payload and digital components of the watermark image 122 may be customized to replace or reduce the number of additional measurement scripts that were previously provided separately from the digital components and are therefore susceptible to removal or tampering.
In some embodiments, the watermark image 122 may be made tamper-resistant by embedding cryptographically signed metadata that binds the watermark image 122 to a particular title field that must be forwarded by an SSP such as the DCDS 110. By including cryptographically signed metadata, a content provider, such as the third party content provider 150, can verify that the client device 106 returning the payload to the third party content provider 150 matches the selection criteria and other characteristics of the presentation opportunity as provided or indicated by the request for content.
The flow continues in step K where the third party content provider provides the SSP with the selected digital components with the embedded watermark. For example, the third-party content provider 150 may transmit the digital component 114 with the embedded watermark image 122 invisible to humans to the DCDS 110.
The flow continues in step L where the SSP provides the content and the digital component with the embedded watermark to the client device. For example, the DCDS110 may provide the requested web page and the digital component 114 with the embedded watermark image 122 to the client device 106 for presentation to the user.
In some implementations, the SSP combines the digital components (and thus the watermark image) into the requested content prior to transmitting the content to the client device. In other implementations, the SSP may provide the digital components (and thus the watermark image) and the requested content to the client device, respectively. In either type of embodiment, the integrity of the measurement information contained within the watermark image is maintained.
Although the system is described with respect to image content data for ease of explanation, it is contemplated that the system may be used with any type of content. For example, in some implementations, the requested content may be streaming video. The watermark image may be embedded within each frame of the video, as an overlay or transparent layer on the video, or within a particular frame of the video, among other placements. For example, the requested content may be a video game played online in real time with other players. The watermark images may be embedded within two or more specific frames within the video. In some implementations, the requested content may be streaming audio, and the watermark image may be provided, for example, as metadata or as audio data that is inaudible to humans but detectable by an application playing the content at the client device.
Secure watermarking systems offer a number of advantages. In conventional systems, the collected data is measured and distributed with the interest of an SSP, which executes measurement scripts and performs related measurement actions on behalf of the client device. However, conventional approaches may not be reliable for the data that the content provider wants to use to improve its digital components and user experience. By allowing the collection of metrics specified by a particular content creator or developer, the secure watermarking system allows content providers to improve their content and better address user needs. Additionally, combining digital components with requested content allows the system to be easily scalable to many environments, as the content provider will not need to develop unique content that is specifically formatted for each environment.
The system also reduces the amount of traffic through a network, such as network 102, because the system allows the content provider to control the measurement actions taken and the type and amount of data collected. Instead of waiting for the content publisher to provide data that may not be useful to the content provider's digital components or improvements in the user experience, the content provider has control over how and what measurements are taken.
In some implementations, the system protects the content provider by allowing encryption of the payload within the watermark image. For example, the content provider may encrypt the payload so that only the content provider can decrypt it. When the client device downloads the requested content along with the digital component with the embedded watermark and then views or otherwise consumes the digital component, the application that the client device is consuming the digital component will detect the watermarked image. The application will then read the watermark image and the instructions encoded within the watermark image will be executed by the client device. In this particular example, the client device may simply forward the encrypted payload to the URL destination, which the content provider may access without decrypting the payload or performing any operations with the payload. The content provider may then decrypt the payload to verify that no changes have occurred, and the client device that returned the payload is the client device to which the payload was sent.
The described system removes the intermediate step of a content provider relying on an SSP to provide and execute a measurement script. Thus, the system is more efficient and provides better and more accurate measurements than traditional methods of collecting and measuring data regarding the delivery and consumption of digital components.
The system also simplifies and reduces the workload at the SSP level because the SSP is no longer responsible for forwarding and executing the measurement instructions provided by the content provider. In addition, the system provides integration of measurement processes that simplifies workflow and reduces workload at the client device and traffic on the network by reducing the number of irrelevant measurement actions that the client device is instructed to take and by allowing the client to transmit measurement results or provide a ping directly to the content provider rather than through an SSP or other intermediary.
Moreover, the watermark image allows for more accurate and finer measurements. For example, a content provider may embed watermarks at the beginning of a video and at the end of a video to determine whether the entire video has been consumed. Because the watermark is embedded within the video, the video must be played by an application at the client device in order for the watermark to be detectable and the client device to perform a measurement action or respond by forwarding the payload.
In another example, the content provider may embed more than one watermark within the digital composition. For example, a content provider may embed watermarks in various locations within a digital component to ensure that particular portions of the digital component are visible.
The system prevents intrusive or ineffective actions taken by intermediaries including content publishers and provides a more secure measurement method. For example, the system allows measurement instructions to be delivered directly from the content provider to the client device, since the measurement script is provided by the content provider and embedded in the digital component in a manner that cannot, would not need to be stripped by the content publisher or SSP. In effect, by allowing the content provider to control the placement and format of the embedded watermark, the system provides enhanced security of the watermark, since the SSP will not change the digital components themselves, and in the event that the SSP attempts to change the digital components, it will not know where the watermark is or what format it is. Conventional approaches rely on SSPs to refrain from removing or faithfully executing and forwarding measurement scripts to the client device, and allow SSPs to block the possibility of detecting the ability of digital components to be rendered at the client device. The described method solves this problem by triggering an action by the client device using an embedded watermark that is not readily removable or detectable by an intermediary such as an SSP.
Secure watermarking systems allow systems such as SSPs to detect invalid services and prevent manipulation of information about the device and provide interaction to the content provider. For example, the SSP may check the success rate of certain types of interactions across content providers to determine whether a particular content provider is more prone to the occurrence of invalid services. The SSP may adjust a content provider collection from which the SSP requests (e.g., via the switch) selection criteria and candidate number components based on the data. While the content provider can choose how and what to measure, the SSP can also leverage the collected data to improve the system.
FIG. 3 is a flow diagram of an example process of a privacy preserving process using a space-efficient probabilistic data structure for data collection and analysis. In some implementations, the process 300 may be performed by one or more systems. For example, the process 300 may be implemented by the DCDS110 and/or the user equipment 106 of fig. 1-2. In some implementations, the process 300 may be implemented as instructions stored on a computer-readable medium, which may be non-transitory, and when the instructions are executed by one or more servers, the instructions may cause the one or more servers to perform the operations of the process 300.
As described above, the content requested from the content server may be any type of data, including streaming audio or video data, image data, and text data, among other types of data. For example, the content may be an online video game being played on the client device 106. The DCDS110 may determine that streaming video-game content is being requested from the electronic document server 104 and is to be delivered to the user of the client device 106 based on information from the client device 106.
In some implementations, the action may be to create a ping that is then sent to the reporting location. The reporting location may be, for example, a third party content provider, an SSP (in this example, DCDS 110), or some other specified location. In some implementations, the action can be to launch a script already installed at the client device 106, such as a measurement script that performs the specified measurement action. In some implementations, the action can be downloading a script or other data from a specified location.
In some implementations, the watermark image 122 includes a request for presentation data and a payload. For example, the client device 106 may provide an indication of, or how much of, the digital component is actually presented, as well as other metrics.
In some implementations, the destination location is a Uniform Resource Locator (URL) contacted by the client device in response to the client device detecting the watermark, and the at least a portion of the payload data is transmitted to the URL in response to the client device detecting the watermark. For example, the destination location may be a URL destination that requests the client device 106 to ping in response to detecting the watermark image 122. The payload data may include, for example, a portion of the data requested to be provided to the URL destination as an identification of the client device 106.
In some implementations, a given portion of the payload is cryptographically signed, and the cryptographically signed given portion of the payload is transmitted to the URL with data that causes the watermarked digital component to be displayed. For example, the payload may be cryptographically signed by the third-party content provider 150 so that only the third-party content provider 150 can decrypt it, ensuring that any tampering is detectable by the third-party content provider 150, and allowing for detection of invalid responses from devices that are not client devices 106 or devices that do not contain a payload.
In some embodiments, the content server is configured to remove the embedded script from the received digital components, and the watermark is in a form that prevents the watermark from being removed from the watermarked digital components by the content server. For example, the DCDS110 may be configured to remove embedded scripts from the digital components it receives. Because watermark image 122 is embedded in digital component 114 such that it is integrated with digital component 114, it would not be possible to remove watermark image 122 when an SSP such as DCDS110 is configured to deliver the content without interfering with or altering the content itself.
In some implementations, generating the combined content includes integrating the watermarked digital component into the content at a specified playback position within the content. For example, the requested content may be a video stream, and the DCDS110 may integrate the watermarked digital component into a particular playback location within the video.
In some implementations, the content is a video stream, and integrating the watermarked digital component into the content includes splicing the watermarked digital component into the video stream. For example, the DCDS110 may insert the watermarked digital component into the video stream so that it is combined with the video stream at a particular playback location.
In some implementations, integrating the watermarked digital component into the content includes integrating the watermarked digital component into one of: streaming audio, streaming video, game content, or images. As described above, the DCDS110 may insert the watermarked digital components into any type of content, including streaming audio, streaming video, game content, or images.
The process 300 and system described with reference to fig. 103 may be applied to any streaming environment, such as TV, movies, and online games, among others.
FIG. 4 is a block diagram of an example computer system 400 that may be used to perform the operations described above. The system 400 includes a processor 410, a memory 420, a storage device 430, and an input/output device 440. Each of the components 410, 420, 430, and 440 may be interconnected using a system bus 450. The processor 410 is capable of processing instructions for execution within the system 400. In one implementation, the processor 410 is a single-threaded processor. In another implementation, the processor 410 is a multi-threaded processor. The processor 410 is capable of processing instructions stored in the memory 420 or on the storage device 430.
The storage device 430 is capable of providing mass storage for the system 400. In one implementation, the storage device 430 is a computer-readable medium. In various embodiments, storage device 430 may include: for example, a hard disk device, an optical disk device, a storage device shared by multiple computing devices (e.g., cloud storage devices) over a network, or some other mass storage device.
The input/output device 440 provides input/output operations for the system 400. In one implementation, the input/output devices 440 may include one or more network interface devices (e.g., an Ethernet card), serial communication devices (e.g., an RS-232 port), and/or wireless interface devices (e.g., an 802.11 card). In another embodiment, the input/output devices may include driver devices configured to receive input data and transmit output data to other input/output devices, such as a keyboard, a printer, and a display device 460. However, other implementations may also be used, such as mobile computing devices, mobile communication devices, set-top box television client devices, and so forth.
Although an example processing system has been described in fig. 5, implementations of the subject matter and the functional operations described in this specification can also be implemented in other types of digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them.
The media need not correspond to a file. The media may be stored in a portion of a file that holds other documents, in a single file dedicated to the document in question, or in multiple coordinated files.
Embodiments of the subject matter and the operations described in this specification can be implemented in digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them. Embodiments of the subject matter described in this specification can be implemented as one or more computer programs, i.e., one or more modules of computer program instructions, encoded on a storage medium (or media) on a computer for execution by, or to control the operation of, data processing apparatus. Alternatively or in addition, the program instructions may be encoded on an artificially generated propagated signal (e.g., a machine-generated electrical, optical, or electromagnetic signal that is generated to encode information for transmission to suitable receiver apparatus for execution by a data processing apparatus). The computer storage medium may be or be included in a computer-readable storage device, a computer-readable storage substrate, a random or serial access memory array or device, or a combination of one or more of them. Further, although the computer storage medium is not a propagated signal, the computer storage medium can be a source or destination of computer program instructions encoded in an artificially generated propagated signal. The computer storage medium may also be, or be included in, one or more discrete physical components or media (e.g., multiple CDs, disks, or other storage devices).
The operations described in this specification may be implemented as operations performed by a data processing apparatus on data stored on one or more computer-readable storage devices or received from other sources.
The term "data processing apparatus" includes a wide variety of devices, apparatus and machines for processing data, including: such as a programmable processor, a computer, a system on a chip, or a plurality or combination of the above. An apparatus may comprise special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit). The apparatus can include, in addition to hardware, code that creates an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, a cross-platform runtime environment, a virtual machine, or a combination of one or more of them. The devices and execution environments may implement a variety of different computing model infrastructures, such as web services, distributed computing, and grid computing infrastructures.
A computer program (also known as a program, software application, script, or code) can be written in any form of programming language, including compiled or interpreted languages, declarative or procedural languages, and it can be deployed in any form, including: as a stand-alone program or as a module, component, subroutine, object, or other unit suitable for use in a computing environment. The computer program may, but need not, correspond to a file in a file system. A program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language file), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub programs, or portions of code). A computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
The processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform actions by operating on input data and generating output. The processes and logic flows can also be performed by, and apparatus can also be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).
A processor adapted to execute a computer program comprises: such as general purpose microprocessors and special purpose microprocessors. Generally, a processor will receive instructions and data from a read-only memory or a random access memory or both. The essential elements of a computer are a processor for performing actions in accordance with instructions and one or more memory devices for storing instructions and data. Generally, a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks. However, a computer need not have such devices. Moreover, a computer may be embedded in another device, e.g., a mobile telephone, a Personal Digital Assistant (PDA), a mobile audio or video player, a game console, a Global Positioning System (GPS) receiver, or a portable storage device (e.g., a Universal Serial Bus (USB) flash drive), to name just a few examples. Devices suitable for storing computer program instructions and data include various forms of non-volatile memory, media and storage devices, including: for example, semiconductor memory devices (e.g., EPROM, EEPROM, and flash memory devices); magnetic disks (e.g., internal hard disks or removable disks); magneto-optical disks; and CD-ROM and DVD-ROM disks. The processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
To provide for interaction with a user, embodiments of the subject matter described in this specification can be implemented on a computer having a display device (e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor) for displaying information to the user, a keyboard and a pointing device (such as a mouse or a trackball) by which the user can provide input to the computer. Other kinds of devices may be used to provide for interaction with a user; for example, feedback provided to the user can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form, including acoustic, speech, or tactile input. In addition, the computer may interact with the user by sending documents to and receiving documents from the device used by the user; for example, by sending a web page to a web browser on a user's client device in response to a request received from the web browser.
Embodiments of the subject matter described in this specification can be implemented in a computing system that includes a background component (e.g., as a data server), or that includes a middleware component (e.g., an application server), or that includes a foreground component (e.g., a client computer having a graphical user interface or a web browser through which a user can interact with an implementation of the subject matter described in this specification), or that includes any combination of one or more such background, middleware, or foreground components. The components of the system can be interconnected by any form of digital data communication medium, e.g., a communication network. Examples of communication networks include local area networks ("LANs") and wide area networks ("WANs"), the internet (e.g., the internet), and peer-to-peer networks (e.g., ad hoc peer-to-peer networks).
The computing system may include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other. In some embodiments, the server sends data (e.g., HTML pages) to the client device (e.g., for purposes of displaying data to a user interacting with the client device and receiving user input from a user interacting with the client device). Data generated at the client device (e.g., a result of the user interaction) may be received at the server from the client device.
While this specification contains many specific implementation details, these should not be construed as limitations on the scope of any inventions or of what may be claimed, but rather as descriptions of features specific to particular implementations of particular inventions. Certain features that are described in this specification in the context of separate embodiments can also be implemented in combination in a single embodiment. Conversely, various features that are described in the context of a single embodiment can also be implemented in multiple embodiments separately or in any suitable subcombination. Moreover, although features may be described above as acting in certain combinations and even initially claimed as such, one or more features from a claimed combination can in some cases be excised from the combination, and the claimed combination may be directed to a subcombination or variation of a subcombination.
Also, while operations are depicted in the drawings in a particular order, this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order, or that all illustrated operations be performed, to achieve desirable results. In some circumstances, multitasking and parallel processing may be advantageous. Moreover, the separation of various system components in the embodiments described above should not be understood as requiring such separation in all embodiments, and it should be understood that the described program components and systems can generally be integrated together in a single software product or packaged into multiple software products.
Thus, particular embodiments of the present subject matter have been described. Other embodiments are within the scope of the following claims. In some cases, the actions recited in the claims can be performed in a different order and still achieve desirable results. In addition, the processes depicted in the accompanying figures do not necessarily require the particular order shown, or sequential order, to achieve desirable results. In some embodiments, multitasking and parallel processing may be advantageous.
Claims (20)
1. A method, comprising:
receiving, by a content server comprising one or more processors, one or more characteristics of a particular content delivery opportunity from a client device;
obtaining, by the content server, a watermarked digital component that is shorthand with a watermark that represents (i) a payload that triggers an action by a client device that detects the watermark and (ii) a reporting location that is contacted by the client device in response to detecting the watermark;
generating, by the content server, combined content by combining the watermarked digital component with content from a source different from a source of the digital component; and
providing, by the content server, the combined content to the client device.
2. The method of claim 1, wherein generating combined content comprises integrating the watermarked digital component into the content at a specified location within the content.
3. The method of claim 2, wherein the content is a video stream,
wherein integrating the watermarked digital components into the content comprises splicing the watermarked digital components into the video stream at the specified location; and
wherein the specified position is a playback position.
4. The method of claim 2, wherein integrating the watermarked digital component into the content comprises integrating the watermarked digital component into one of: streaming audio, streaming video, game content, or images.
5. The method of any preceding claim, wherein:
the destination location is a uniform resource locator, URL, contacted by the client device in response to the client device detecting the watermark; and
in response to the client device detecting the watermark, transmitting at least a portion of payload data to the URL.
6. The method of claim 5, wherein:
a given portion of the payload is cryptographically signed; and
the given portion of the payload that is cryptographically signed is transmitted to the URL along with data that causes the watermarked digital component to be displayed.
7. The method of any preceding claim, wherein:
the content server is configured to remove the embedded script from the received digital components; and
the watermark is in a form that prevents the watermark from being removed from the watermarked digital component by the content server.
8. A system, comprising:
one or more processors; and
one or more memory elements comprising instructions that, when executed, cause the one or more processors to perform operations comprising:
receiving, by a content server comprising one or more processors, one or more characteristics of a particular content delivery opportunity from a client device;
obtaining, by the content server, a watermarked digital component that is shorthand with a watermark that represents (i) a payload that triggers an action by a client device that detects the watermark and (ii) a reporting location that is contacted by the client device in response to detecting the watermark;
generating, by the content server, combined content by combining the watermarked digital component with content from a source different from a source of the digital component; and
providing, by the content server, the combined content to the client device.
9. The system of claim 8, wherein generating combined content comprises integrating the watermarked digital component into the content at a specified location within the content.
10. The system of claim 9, wherein the content is a video stream,
wherein integrating the watermarked digital components into the content comprises splicing the watermarked digital components into the video stream at the specified location; and
wherein the specified position is a playback position.
11. The system of claim 9, wherein integrating the watermarked digital component into the content comprises integrating the watermarked digital component into one of: streaming audio, streaming video, game content, or images.
12. The system of any one of claims 8 to 11, wherein:
the destination location is a uniform resource locator, URL, contacted by the client device in response to the client device detecting the watermark; and
in response to the client device detecting the watermark, transmitting at least a portion of payload data to the URL.
13. The method of claim 12, wherein:
a given portion of the payload is cryptographically signed; and
the cryptographically signed given portion of the payload is communicated to the URL with data that causes the watermarked digital component to be displayed.
14. The method of any of claims 8 to 13, wherein:
the content server is configured to remove the embedded script from the received digital components; and
the watermark is in a form that prevents the watermark from being removed from the watermarked digital component by the content server.
15. A computer storage medium encoded with instructions that, when executed by a distributed computing system, cause the distributed computing system to perform operations comprising:
receiving, by a content server comprising one or more processors, one or more characteristics of a particular content delivery opportunity from a client device;
obtaining, by the content server, a watermarked digital component that is shorthand with a watermark that represents (i) a payload of an action triggered by a client device that detected the watermark and (ii) a reporting location that was contacted by the client device in response to detecting the watermark;
generating, by the content server, combined content by combining the watermarked digital component with content from a source different from a source of the digital component; and
providing, by the content server, the combined content to the client device.
16. The computer storage medium of claim 15, wherein generating combined content comprises integrating the watermarked digital component into the content at a specified location within the content.
17. The computer storage medium of claim 16, wherein the content is a video stream,
wherein integrating the watermarked digital component into the content comprises stitching the watermarked digital component into the video stream at the specified location; and
wherein the specified position is a playback position.
18. The computer storage medium of claim 16, wherein integrating the watermarked digital component into the content comprises integrating the watermarked digital component into one of: streaming audio, streaming video, game content, or images.
19. The computer storage medium of any of claims 15 to 18, wherein:
the destination location is a uniform resource locator, URL, contacted by the client device in response to the client device detecting the watermark; and
in response to the client device detecting the watermark, transmitting at least a portion of payload data to the URL.
20. The computer storage medium of claim 19, wherein:
a given portion of the payload is cryptographically signed; and
the given portion of the payload that is cryptographically signed is sent to the URL along with data that causes the watermarked digital component to be displayed.
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
PCT/US2020/062594 WO2022115111A1 (en) | 2020-11-30 | 2020-11-30 | Integrating secure watermarks into content |
Publications (1)
Publication Number | Publication Date |
---|---|
CN115244942A true CN115244942A (en) | 2022-10-25 |
Family
ID=73856592
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN202080076096.3A Pending CN115244942A (en) | 2020-11-30 | 2020-11-30 | Integrating secure watermarks into content |
Country Status (6)
Country | Link |
---|---|
US (1) | US20230022018A1 (en) |
EP (1) | EP4035411A1 (en) |
JP (1) | JP7405969B2 (en) |
KR (1) | KR20220077136A (en) |
CN (1) | CN115244942A (en) |
WO (1) | WO2022115111A1 (en) |
Families Citing this family (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
IL251149A0 (en) * | 2017-03-14 | 2017-06-29 | Google Inc | Semi-transparent watermarks for served content |
Family Cites Families (8)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
GB2386782B (en) | 2002-03-22 | 2005-09-21 | Sony Uk Ltd | Material storage |
JP2005184524A (en) | 2003-12-19 | 2005-07-07 | Victor Co Of Japan Ltd | Electronic mail delivery system utilizing electronic watermark |
CA2574998C (en) * | 2004-07-23 | 2011-03-15 | Nielsen Media Research, Inc. | Methods and apparatus for monitoring the insertion of local media content into a program stream |
US8356247B2 (en) * | 2008-12-16 | 2013-01-15 | Rich Media Worldwide, Llc | Content rendering control system and method |
EP2686779A4 (en) * | 2011-03-18 | 2014-09-17 | Nielsen Co Us Llc | Methods and apparatus to determine media impressions |
US20160050468A1 (en) | 2014-08-14 | 2016-02-18 | Nagravision S.A. | Mitigation of collusion attacks against watermarked content |
JP2017011503A (en) | 2015-06-22 | 2017-01-12 | ソニー株式会社 | Receiver, transmitter, and data processing method |
US10825043B2 (en) * | 2017-01-31 | 2020-11-03 | Oath Inc. | Methods and systems for processing viewability metrics |
-
2020
- 2020-11-30 KR KR1020227013865A patent/KR20220077136A/en unknown
- 2020-11-30 WO PCT/US2020/062594 patent/WO2022115111A1/en unknown
- 2020-11-30 EP EP20828621.1A patent/EP4035411A1/en active Pending
- 2020-11-30 JP JP2022525857A patent/JP7405969B2/en active Active
- 2020-11-30 US US17/767,114 patent/US20230022018A1/en active Pending
- 2020-11-30 CN CN202080076096.3A patent/CN115244942A/en active Pending
Also Published As
Publication number | Publication date |
---|---|
EP4035411A1 (en) | 2022-08-03 |
WO2022115111A1 (en) | 2022-06-02 |
JP7405969B2 (en) | 2023-12-26 |
US20230022018A1 (en) | 2023-01-26 |
KR20220077136A (en) | 2022-06-08 |
JP2023508123A (en) | 2023-03-01 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US11375044B2 (en) | Custom digital components | |
KR101706289B1 (en) | Matching content providers and interested content users | |
US9633358B2 (en) | Interactive presentations with integrated tracking systems | |
CN105450724B (en) | Method, apparatus, and tangible computer-readable storage medium for monitoring a media presentation device | |
US20120166520A1 (en) | Determining Advertising Effectiveness Outside of a Social Networking System | |
US20110239103A1 (en) | Detecting virality paths and supporting referral monetization | |
JP7405969B2 (en) | Incorporating a secure watermark into your content | |
CN104471559B (en) | The method and apparatus performed effectively for module | |
US20220405407A1 (en) | Privacy preserving cross-domain machine learning | |
JP2023549009A (en) | Cryptographically secure control using secure multiparty computation | |
KR102324802B1 (en) | Systems and methods for encryption of content request data | |
WO2021236066A1 (en) | Combating false information with crowdsourcing | |
JP7448686B2 (en) | Privacy-preserving cross-domain experimental group division and monitoring | |
US20240160678A1 (en) | Distributing digital components based on predicted attributes | |
CN116368488A (en) | Localized cryptographic techniques for privacy protection | |
WO2023234938A1 (en) | Distributing digital components based on predicted attributes | |
CN114651254A (en) | Securing information access in online interactions | |
JP2023524366A (en) | Privacy-Preserving Measurements Using Secure Multi-Party Computation | |
JP2020205107A (en) | Custom digital components | |
GB2597384A (en) | Custom digital components |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
SE01 | Entry into force of request for substantive examination |
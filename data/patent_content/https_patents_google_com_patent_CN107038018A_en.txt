CN107038018A - Access the data in multidimensional tensor - Google Patents
Access the data in multidimensional tensor Download PDFInfo
- Publication number
- CN107038018A CN107038018A CN201710025689.7A CN201710025689A CN107038018A CN 107038018 A CN107038018 A CN 107038018A CN 201710025689 A CN201710025689 A CN 201710025689A CN 107038018 A CN107038018 A CN 107038018A
- Authority
- CN
- China
- Prior art keywords
- tensor
- index
- value
- circulation
- address
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Granted
Links
- 238000000034 method Methods 0.000 claims abstract description 12
- 230000004087 circulation Effects 0.000 claims description 92
- 238000012545 processing Methods 0.000 claims description 31
- 230000004044 response Effects 0.000 claims description 9
- 238000004590 computer program Methods 0.000 description 12
- 230000008569 process Effects 0.000 description 7
- 238000013500 data storage Methods 0.000 description 5
- 230000006870 function Effects 0.000 description 5
- 238000004891 communication Methods 0.000 description 4
- 238000010586 diagram Methods 0.000 description 4
- 230000009471 action Effects 0.000 description 3
- 230000000712 assembly Effects 0.000 description 3
- 238000000429 assembly Methods 0.000 description 3
- 230000002349 favourable effect Effects 0.000 description 3
- 108091023043 Alu Element Proteins 0.000 description 2
- 230000008859 change Effects 0.000 description 2
- 230000005611 electricity Effects 0.000 description 2
- 239000011159 matrix material Substances 0.000 description 2
- 230000009467 reduction Effects 0.000 description 2
- 238000000926 separation method Methods 0.000 description 2
- 241000208340 Araliaceae Species 0.000 description 1
- 235000005035 Panax pseudoginseng ssp. pseudoginseng Nutrition 0.000 description 1
- 235000003140 Panax quinquefolius Nutrition 0.000 description 1
- 238000004422 calculation algorithm Methods 0.000 description 1
- 238000004364 calculation method Methods 0.000 description 1
- 230000015556 catabolic process Effects 0.000 description 1
- 125000004122 cyclic group Chemical group 0.000 description 1
- 230000003247 decreasing effect Effects 0.000 description 1
- 238000006731 degradation reaction Methods 0.000 description 1
- 238000005516 engineering process Methods 0.000 description 1
- 210000004602 germ cell Anatomy 0.000 description 1
- 235000008434 ginseng Nutrition 0.000 description 1
- 230000003993 interaction Effects 0.000 description 1
- 230000009191 jumping Effects 0.000 description 1
- 239000004973 liquid crystal related substance Substances 0.000 description 1
- 238000012423 maintenance Methods 0.000 description 1
- 238000007726 management method Methods 0.000 description 1
- 230000004048 modification Effects 0.000 description 1
- 238000012986 modification Methods 0.000 description 1
- 239000004065 semiconductor Substances 0.000 description 1
- 230000001953 sensory effect Effects 0.000 description 1
- 241000894007 species Species 0.000 description 1
- 239000000758 substrate Substances 0.000 description 1
- 230000000007 visual effect Effects 0.000 description 1
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F17/00—Digital computing or data processing equipment or methods, specially adapted for specific functions
- G06F17/10—Complex mathematical operations
- G06F17/16—Matrix or vector computation, e.g. matrix-matrix or matrix-vector multiplication, matrix factorization
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F9/00—Arrangements for program control, e.g. control units
- G06F9/06—Arrangements for program control, e.g. control units using stored programs, i.e. using an internal store of processing equipment to receive or retain programs
- G06F9/30—Arrangements for executing machine instructions, e.g. instruction decode
- G06F9/30098—Register arrangements
- G06F9/3012—Organisation of register space, e.g. banked or distributed register file
- G06F9/3013—Organisation of register space, e.g. banked or distributed register file according to data content, e.g. floating-point registers, address registers
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F9/00—Arrangements for program control, e.g. control units
- G06F9/06—Arrangements for program control, e.g. control units using stored programs, i.e. using an internal store of processing equipment to receive or retain programs
- G06F9/30—Arrangements for executing machine instructions, e.g. instruction decode
- G06F9/34—Addressing or accessing the instruction operand or the result ; Formation of operand address; Addressing modes
- G06F9/355—Indexed addressing
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F9/00—Arrangements for program control, e.g. control units
- G06F9/06—Arrangements for program control, e.g. control units using stored programs, i.e. using an internal store of processing equipment to receive or retain programs
- G06F9/30—Arrangements for executing machine instructions, e.g. instruction decode
- G06F9/30003—Arrangements for executing specific machine instructions
- G06F9/30007—Arrangements for executing specific machine instructions to perform operations on data operands
- G06F9/3001—Arithmetic instructions
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F9/00—Arrangements for program control, e.g. control units
- G06F9/06—Arrangements for program control, e.g. control units using stored programs, i.e. using an internal store of processing equipment to receive or retain programs
- G06F9/30—Arrangements for executing machine instructions, e.g. instruction decode
- G06F9/30003—Arrangements for executing specific machine instructions
- G06F9/30007—Arrangements for executing specific machine instructions to perform operations on data operands
- G06F9/30036—Instructions to perform operations on packed data, e.g. vector, tile or matrix operations
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F9/00—Arrangements for program control, e.g. control units
- G06F9/06—Arrangements for program control, e.g. control units using stored programs, i.e. using an internal store of processing equipment to receive or retain programs
- G06F9/30—Arrangements for executing machine instructions, e.g. instruction decode
- G06F9/30003—Arrangements for executing specific machine instructions
- G06F9/3005—Arrangements for executing specific machine instructions to perform operations for flow control
- G06F9/30054—Unconditional branch instructions
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F9/00—Arrangements for program control, e.g. control units
- G06F9/06—Arrangements for program control, e.g. control units using stored programs, i.e. using an internal store of processing equipment to receive or retain programs
- G06F9/30—Arrangements for executing machine instructions, e.g. instruction decode
- G06F9/30003—Arrangements for executing specific machine instructions
- G06F9/3005—Arrangements for executing specific machine instructions to perform operations for flow control
- G06F9/30061—Multi-way branch instructions, e.g. CASE
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F9/00—Arrangements for program control, e.g. control units
- G06F9/06—Arrangements for program control, e.g. control units using stored programs, i.e. using an internal store of processing equipment to receive or retain programs
- G06F9/30—Arrangements for executing machine instructions, e.g. instruction decode
- G06F9/30003—Arrangements for executing specific machine instructions
- G06F9/3005—Arrangements for executing specific machine instructions to perform operations for flow control
- G06F9/30065—Loop control instructions; iterative instructions, e.g. LOOP, REPEAT
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F9/00—Arrangements for program control, e.g. control units
- G06F9/06—Arrangements for program control, e.g. control units using stored programs, i.e. using an internal store of processing equipment to receive or retain programs
- G06F9/30—Arrangements for executing machine instructions, e.g. instruction decode
- G06F9/30098—Register arrangements
- G06F9/30101—Special purpose registers
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F9/00—Arrangements for program control, e.g. control units
- G06F9/06—Arrangements for program control, e.g. control units using stored programs, i.e. using an internal store of processing equipment to receive or retain programs
- G06F9/30—Arrangements for executing machine instructions, e.g. instruction decode
- G06F9/32—Address formation of the next instruction, e.g. by incrementing the instruction counter
- G06F9/321—Program or instruction counter, e.g. incrementing
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F9/00—Arrangements for program control, e.g. control units
- G06F9/06—Arrangements for program control, e.g. control units using stored programs, i.e. using an internal store of processing equipment to receive or retain programs
- G06F9/30—Arrangements for executing machine instructions, e.g. instruction decode
- G06F9/32—Address formation of the next instruction, e.g. by incrementing the instruction counter
- G06F9/322—Address formation of the next instruction, e.g. by incrementing the instruction counter for non-sequential address
- G06F9/325—Address formation of the next instruction, e.g. by incrementing the instruction counter for non-sequential address for loops, e.g. loop detection or loop counter
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F9/00—Arrangements for program control, e.g. control units
- G06F9/06—Arrangements for program control, e.g. control units using stored programs, i.e. using an internal store of processing equipment to receive or retain programs
- G06F9/30—Arrangements for executing machine instructions, e.g. instruction decode
- G06F9/34—Addressing or accessing the instruction operand or the result ; Formation of operand address; Addressing modes
- G06F9/345—Addressing or accessing the instruction operand or the result ; Formation of operand address; Addressing modes of multiple operands or results
- G06F9/3455—Addressing or accessing the instruction operand or the result ; Formation of operand address; Addressing modes of multiple operands or results using stride
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F9/00—Arrangements for program control, e.g. control units
- G06F9/06—Arrangements for program control, e.g. control units using stored programs, i.e. using an internal store of processing equipment to receive or retain programs
- G06F9/30—Arrangements for executing machine instructions, e.g. instruction decode
- G06F9/34—Addressing or accessing the instruction operand or the result ; Formation of operand address; Addressing modes
- G06F9/355—Indexed addressing
- G06F9/3555—Indexed addressing using scaling, e.g. multiplication of index
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F9/00—Arrangements for program control, e.g. control units
- G06F9/06—Arrangements for program control, e.g. control units using stored programs, i.e. using an internal store of processing equipment to receive or retain programs
- G06F9/30—Arrangements for executing machine instructions, e.g. instruction decode
- G06F9/38—Concurrent instruction execution, e.g. pipeline, look ahead
- G06F9/3836—Instruction issuing, e.g. dynamic instruction scheduling or out of order instruction execution
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F2212/00—Indexing scheme relating to accessing, addressing or allocation within memory systems or architectures
- G06F2212/45—Caching of specific data in cache memory
- G06F2212/454—Vector or matrix data
Abstract
The application is related to the data accessed in multidimensional tensor.Method, system and device for handling the instruction for being used for accessing N-dimensional tensor, described device includes multiple tensors and indexes element and multiple dimension multiplier elements, wherein, each dimension multiplier element in the dimension multiplier element has correspondence tensor index element.Described device includes one or more processors, one or more of processors are configured to obtain the instruction for the element-specific for being used to access N-dimensional tensor, wherein, the N-dimensional tensor has multiple elements across each dimension arrangement in N number of dimension, and wherein, N is equal to or the integer more than 1；The address that one or more of element tensor index one or more of element and the multiple dimension multiplier element dimension multiplier member usually determines the element-specific is indexed using the multiple tensor；And the data of the identified address of the element-specific of the output indication for accessing the N-dimensional tensor.
Description
Background technology
This specification is related generally to using register for calculating memory address value.Register can be used to processing
Branch condition.
The content of the invention
One innovative aspect of the theme according to described in this specification, register can be used for iteration nesting circulation
Structure, to calculate corresponding storage address, and for allowing programmer's processing cycle boundary condition.Generally, register can
With the previous cycle index being disposed in some set of maintenance architecture state, including loop boundary value, each circulation
Variable, the dimension multiplier for calculating memory address value, and for handling the program counter value of branch's loop boundary.Should
Arrangement is favourable for handling one or more multidimensional data structures.Using these architecture state set, processor can
Index variables are moved to new position, search memory address value and the instruction for jumping to new branch target to perform.
Generally, one of theme described in this specification innovative aspect can be embodied in for handling with visiting
In the device of instruction for asking N-dimensional tensor.Described device includes：Multiple tensor index elements and multiple dimension multiplier elements, wherein,
Each dimension multiplier element in the dimension multiplier element has correspondence tensor index element.Described device include one or
Multiple processors, one or more of processors are configured to obtain the instruction for the element-specific for being used to access N-dimensional tensor, its
In, the N-dimensional tensor has multiple elements across each dimension arrangement in N number of dimension, and wherein, and N is equal to or greatly
In 1 integer；Multiplied using one or more of the multiple tensor index element tensor index element and the multiple dimension
One or more of daughter element dimension multiplier member usually determines the address of the element-specific；And output indication is used to access
The data of the identified address of the element-specific of the N-dimensional tensor.
These and other embodiments each can alternatively include one or more of following characteristics.For example, described
The address of element-specific can be the address offset with another element of the N-dimensional tensor.It is described specific in order to determine
The address of element, each tensor indexed for one or more of tensors in element indexes element, this corresponding
The value stored in amount index element can be multiplied by the corresponding tensor index member of one or more multiple tensors index elements
The value stored in element, to generate corresponding multiplied value.The address can be determined by determining the summation of the multiplied value
Skew.
The multiple tensor index element can be arranged in M groups tensor index element, and M is greater than 1 positive integer.Often
Group tensor index element, which can be assigned to, to be distinguished and different multidimensional tensors.
Described device can include multiple tensor boundary elements, wherein, each in the multiple tensor boundary element
Tensor boundary element can have the corresponding tensor in the multiple tensor indexes element to index element.The instruction can be with table
Show includes the instruction of first circulation circulation nested with second circulation for handling, and the second circulation is the first circulation
Outer circulation, wherein, the first circulation carrys out iteration using the first index variables, and wherein, the second circulation uses second
Index variables carry out iteration.
One or more of processors may be configured to the multiple tensor indexing the value stored in element, institute
The value stated the value stored in multiple dimension multiplier elements and stored in the multiple tensor boundary element is set to initially
Change value.One or more of processors can be further configured to the first tensor in the multiple tensor boundary element
The value stored in boundary element is provided for the upper boundary values of first index variables of first circulation described in iteration；Will
The value stored in the second tensor boundary element in the multiple tensor boundary element is provided for described in iteration second and followed
The upper boundary values of second index variables of ring；By institute in the first dimension multiplier element in the multiple dimension multiplier element
The value of storage is set to predetermined value；And will be stored in the second dimension multiplier element in the multiple dimension multiplier element
Value is set to the upper boundary values of first index variables.
In order to determine the address of the element in the N-dimensional tensor, one or more of processors may be configured to by
The value stored in the first tensor index element in the multiple tensor index element is set to first index variables
Currency；The multiple tensor is indexed to the value stored in the second tensor index element in element and is set to second rope
Draw the currency of variable；The value stored in the first dimension multiplier element is multiplied by institute in the first tensor index element
The value of storage, to obtain the first multiplied value；The value stored in the second dimension multiplier element is multiplied by second tensor
The value stored in index element, to obtain the second multiplied value；And by least to first multiplied value and described second
Multiplied value sums to determine the address.
One or more of processors, which may be configured to receive, to be used to update in the first tensor index element
The instruction of the value stored；Receive the instruction for being used to updating the value stored in the first tensor index element it
Afterwards, determine that first tensor is indexed between the value stored in element and the value stored in the first tensor boundary element
Difference meet threshold value；And in response to determining that first tensor indexes the value stored in element and the first tensor border
Difference between the value stored in element meets the threshold value, updates the value stored in the first tensor index element.Often
When the secondary first circulation is completed, first index variables are incremented by the first increment value.In order to update the first tensor rope
First increment value can be incremented by by drawing the value stored in the value stored in element, the first tensor index element.
One or more of processors, which may be configured to receive, to be used to update institute in the first tensor index element
The instruction of the value of storage；After the instruction for updating the value stored in the first tensor index element is received, really
Difference between the value stored in the fixed first tensor index element and the value stored in the first tensor boundary element
It is unsatisfactory for threshold value.In response to determining that first tensor is indexed in the value and the first tensor boundary element that are stored in element
Difference between the value stored is unsatisfactory for the threshold value, and one or more of processors may be configured to reset described first
The value stored in tensor index element；And update the value stored in the second tensor index element.Every time described the
When two circulations are completed, second index variables are incremented by the second increment value.In order to update in the second tensor index element
The value stored in the value stored, the second tensor index element can be incremented by second increment value.
One or more of processors can include one or more ALUs.Tensor index element and
Each in the dimension multiplier element is register.Described device can include multiple branch target elements, wherein, it is described
Each branch target element in multiple branch target elements has the corresponding tensor in the multiple tensor indexes element
Index element, and wherein, each branch target element in the multiple branch target element be configured to store when with
The address for the instruction that the iteration of the corresponding circulation of respective branch object element is performed when completing.
Theme described in this specification can be implemented in a particular embodiment to realize one in advantages below
It is individual or multiple.Program is allowed to be followed using an instruction come iteration depth nesting to keep tracking memory address value using register
Ring.Memory address value can quickly be determined based on the value stored in register by the simple algorithm calculations of application.Use
The number that ALU reduces the calculating cycle at processor to determine memory address value to allow, and be other calculating
Task increases processor bandwidth.Tensor can be traveled through with the instruction of the number of reduction.Two-dimentional register architecture allows many
Tensor is tieed up, each multidimensional tensor, which has, to be treated by while the different dimensions tracked.By the way that with branch target table, branch can be reduced
Instruct related expense.
This aspect and otherwise other embodiment include corresponding system, device and are configured to perform institute
State acting and being coded in the computer program on computer memory device for method.One or more system for computer energy
It is enough to match somebody with somebody by means of installing the software for causing system execution action on this system, firmware, hardware or its combination in operation
Put.One or more computer programs can be by means of coming so configured with instruction, and the instruction is when by data processing equipment
The device is caused to perform action during execution.
The details of one or more embodiments of theme described in this specification is able in the following drawings and description
Statement.Other potential feature, aspect and advantages of this theme will become aobvious and easy according to description, accompanying drawing and claim
See.
Brief description of the drawings
Fig. 1 is the block diagram of exemplary computing system.
Fig. 2A-Fig. 2 H illustrate example tensor Traversal Unit.
Fig. 3 illustrates example tensor Traversal Unit.
Fig. 4 is the flow chart that diagram is used to determine the example of the process of the address of multidimensional tensor variable.
The similar reference numerals element similar with title instruction in each accompanying drawing.
Embodiment
Generally, when software algorithm handles N-dimensional tensor, nested circulation can be used, wherein traversal is responsible in each circulation
Each dimension of the N-dimensional tensor.Multidimensional tensor can be matrix or multi-dimensional matrix.Each dimension of N-dimensional tensor can be with
Including one or more elements, wherein each element can store corresponding data value.For example, tensor can be the change in program
Amount, the wherein variable can have three dimensions.First dimension can have the length of 300 elements, and the second dimension can have
There is the length of 1000 elements, and third dimension can have the length of 20 elements.Needed with nesting circulation to travel through tensor
Want the memory address value of calculating elements with load or storage element corresponding data value.For example, for circulations are nested circulations,
Wherein it can be nested for traveling through the three-dimensional tensor by three circulations of three loop index variation-trackings.In some cases,
Processor may need to perform cyclic boundary condition (bound condition), such as be set using outer circulation index variables
The loop boundary of interior circulation.For example, in innermost layer (inner-most) circulation for determining whether to exit nested circulation, program can
With what the outermost layer (outer-most) of the currency of the loop index variable of innermost loop circulation nested with this was circulated
The currency of loop index variable is compared.
These tasks may need substantial amounts of instruction, such as branch instruction and integer arithmetic instruction.When each loop boundary
When very little and very big number of cycles, quite a few of total execution time may be expended by calculating, and severe degradation globality
Energy.For example, processor can be designed to the tensor input of processing N-dimensional.Processor can be implemented on 2 dimension frameworks, and it is by (N-
2) individual dimension leaves software for handle.When N is very big, the disposal of N-2 dimension computationally may for processor
It is very heavy, because the calculating needs the computation bandwidth of very a large amount.The hardware tensor Traversal Unit of processor can pass through reduction
Processor dimension number of required processing when traveling through tensor improves the computation bandwidth of processor.
Fig. 1 shows the block diagram of the exemplary computing system 100 for traveling through tensor.Generally, computing system 100 handles defeated
Enter 104 to generate output 116.Computing system 100 may be configured to perform linear algebra calculating.Input 104 can be can
Any suitable data handled by computing system 100.Computing system 100 includes processing unit 102, storage medium 104 and opened
Measure Traversal Unit 106.
General, when processing unit 102 performs the instruction of the element-specific for accessing tensor, tensor Traversal Unit
106 determine the address of the element-specific of the tensor so that processing unit 102 can represent this with access storage media 104 to read
The data 114 of the value of element-specific.For example, program can include nested circulation and processing unit 102 can be performed for root
Access according to the current index variate-value associated with the nesting circulation element of the two-dimensional array variable in nesting circulation
Instruction.Based on the current index variate-value associated with nesting circulation, tensor Traversal Unit 106 can determine deviant, should
Deviant represents the skew of the first element away from the two-dimensional array variable.Then, processing unit 102 can use the deviant with
The element-specific of the two-dimensional array variable is accessed from storage medium.
Processing unit 102 is configured to the instruction that processing is used to perform in computing system 100, and the instruction includes storage
Instruction 112 in storage medium 104 or other instructions being stored in another storage device.Processing unit 102 can be wrapped
Include one or more processors.Storage medium 104 is in the inner storag information of computing system 100.In some embodiments, storage is situated between
Matter 104 is volatile memory-elements.In some other embodiments, storage medium 104 is Nonvolatile memery unit.
Storage medium 104 can also be another form of computer-readable medium, such as floppy device, hard disc apparatus, compact disk equipment or
Person's tape unit, flash memory or other similar solid-state memory devices or equipment array, including storage area network
Equipment in network or other configurations.The instruction by processing unit 102 when being performed so that processing unit 102 performs one or many
Individual task.
Tensor Traversal Unit 106 is configured to determine the state associated with one or more tensors.The state can be wrapped
Include loop boundary value, previous cycle index variables value, the dimension multiplier for calculating memory address value, and/or for disposing
The program counter value of branch's loop boundary.Tensor Traversal Unit 106 includes tensor state elements 122 and ALU
124.Each in tensor state elements 122 can be memory element, such as register or any other suitable storage electricity
Road.In some embodiments, tensor state elements 122 can physically or logically be arranged to different groups, with
Lower reference picture 2A- Fig. 2 H and Fig. 3 carry out detailed description thereof.In some embodiments, the group of tensor state elements 122 can
To be physically or logically arranged to Multidimensional numerical.For example, each group of tensor state elements 122 can be in physics
It is arranged to above or in logic two-dimensional array.ALU 124 includes being configured to perform the one of arithmetic sum logical operation
Individual or multiple ALUs (ALU).For example, ALU 124 can include digital circuit, it is configured to perform
Addition, subtraction, multiplication, division, logical AND, logic or or any other suitable arithmetic sum logical operation.
Fig. 2A shows the example collection of the tensor state elements 200 of tensor Traversal Unit.Tensor state elements 200 can be with
Corresponding to the tensor state elements 122 of tensor Traversal Unit 106.Tensor state elements 200 include the group that tensor indexes element 202
The group of group, the group of tensor boundary element 204 and dimension multiplier element 206.Tensor index element 202 can be physically
Or the 2 dimension groups with M rows and N row are arranged in logic, wherein M and N are the integer more than or equal to 1.In some implementations
In mode, every a line of tensor index element 202 can represent the tensor index information of tensor.If for example, application definition
Two array variable Vs 1 and V2, then tensor Traversal Unit can assign row 202a and row 202b track respectively aray variable V1 and
V2 tensor index information.In some embodiments, each row of tensor index element 202 can represent associated with tensor
Nested loop index variate-value tensor index information.If for example, application definition has the nested circulation of three circulations
For access variable V1, wherein, each circulation of nesting circulation is indexed by nested loop index variable i, j and k,
Amount Traversal Unit can assign tensor to index element X1,1、X1,2And, X1,3Come track respectively nested loop index variable i, j and
k.Nested-attribute index information is more specifically described referring to Fig. 2 D- Fig. 2 H.
Tensor boundary element 204 can be physically or logically arranged to identical with tensor index element 202
Dimension 2 dimension groups, wherein each element in tensor boundary element 204 have tensor index element 202 in pair
Answer element.In some embodiments, every a line of tensor boundary element 204 can represent the tensor boundary information of tensor.Example
Such as, if application definition two array variable Vs 1 and V2, tensor Traversal Unit can assign row 204a and the row 204b to divide
Not Gen Zong aray variable V1 and V2 tensor boundary information.In some embodiments, each row of tensor index element 204 can
To represent the tensor boundary information of the nested loop index variate-value associated with tensor.If for example, application definition has
Three the nested of circulation are circulated for access variable V1, wherein, each circulation of nesting circulation is become by nested loop index
Measure i, j and k to index, tensor Traversal Unit can assign tensor boundary element Y1,1、Y1,2And Y1,3Come track respectively with it is nested
Loop index variable i, j and k associated tensor boundary information.Nested border letter is more specifically described referring to Fig. 2 C
Breath.
Dimension multiplier element 206 can be physically or logically arranged to identical with tensor index element 202
Dimension 2 dimension groups, wherein each element in dimension multiplier element 206 have tensor index element 202 in pair
The element answered.In some embodiments, every a line of dimension multiplier element 206 can represent the dimension multiplier information of tensor.
If for example, application definition two array variable Vs 1 and V2, tensor Traversal Unit can assign row 206a and row 206b to come
Aray variable V1 and V2 dimension multiplier information are tracked respectively.In some embodiments, each row of dimension multiplier element 206
The dimension multiplier information of the nested loop index variate-value associated with tensor can be represented.If for example, application definition tool
There is the nested circulation of three circulations for access variable V1, wherein, each circulation of nesting circulation is by nested loop index
Variable i, j and k are indexed, and tensor Traversal Unit can assign dimension multiplier element Z1,1、Z1,2And Z1,3Come track respectively with it is embedding
Cover the associated dimension multiplier information of loop index variable i, j and k.Dimension multiplier is more specifically described referring to Fig. 2 D
Information.
Fig. 2 B- Fig. 2 H show how tensor Traversal Unit can handle showing for tensor using tensor state elements 200
Example.Reference picture 2B, program 212 can be stored in another storage that can be performed in storage medium 104 or by processing unit 102
In medium.Program 212, which is specified, has the first dimension --- 4 and second dimension --- 2 character array variable V.Program 212 refers to
The fixed nested for circulations for being used to travel through the variable V, wherein for circulates the outer circulation to be tracked by nested loop index variable i
To travel through V the first dimension and travel through V the second dimension with the interior circulation tracked by nested loop index variable j.One
In a little embodiments, tensor state elements 200 can be initialised at the beginning of program.For example, processor can be performed just
The instruction " InitializeElements (initialization element) " of beginningization tensor state elements 200.The instruction can be can be by
Manage the hardware instruction in the instruction set that device is performed.In some embodiments, upon initialization, tensor state elements 200
In each element be arranged to predetermined value.Herein, upon initialization, each element of tensor state elements 200 can
To be arranged to zero.
Fig. 2 C illustrate according to program 212 to set the tensor boundary information in tensor boundary element 204.For example, processing
Device can perform instruction " SetTensorBound (the setting tensor sides for setting the tensor boundary information in tensor boundary element 204
Boundary) ".In some embodiments, tensor boundary information represents the coboundary of corresponding nested loop index variable.Herein, it is interior
Nested loop index variable i has coboundary 4, and outer nesting loop index variable j has coboundary 2.Tensor side is being set
After tensor boundary information in bound component 204, (the i.e. Y of element 2141,2) it is arranged to 4, and (the i.e. Y of element 2161,1) be set
For 2.
Fig. 2 D illustrate according to program 212 to set the dimension multiplier information in dimension multiplier element 206.For example, processing
Device, which can be performed, to be set the instruction of the dimension multiplier information in dimension multiplier element 206 " SetDimensionMultiplier (is set
Put dimension multiplier) ".In some embodiments, dimension multiplier information represents that the corresponding element in tensor index element 202 can be with
The multiplier multiplied.Herein, character variable V has the first dimension 4 and the second dimension 2.If element V [0] [0] is stored in basis
At storage address P and element V [0] [1] is stored at storage address P+1, then element V [1] [0] is stored in storage
At the P+2 of device address.Therefore, element V [i] [j] corresponding storage address is P+ (i × 2)+(j × 1).Therefore, the dimension of outer circulation
It is 2 to spend multiplier information, and the dimension multiplier information of interior circulation is 1.Dimension multiplier letter in dimension multiplier element 206 is set
After breath, (the i.e. Z of element 2221,2) it is arranged to 2, and (the i.e. Z of element 2241,1) it is arranged to 1.
Fig. 2 E are illustrated according to program 212 come access elements V [0] [0].For example, processor can perform positioning with being visited
The instruction " LocateTensor (positioning tensor) " of the corresponding storage address of the element asked.In some embodiments, should
Instruction can include background memory address.For example, instruction " LocateTensor " can include the first element as variable V
Element V [0] [0] storage address.In some embodiments, the instruction can include corresponding with tensor to be visited
Line number code.For example, instruction " LocateTensor " can include the line number code corresponding with variable V.Herein, line number code is 1.
In some embodiments, in response to receiving the instruction, ALU is (for example, ALU
106) value stored in each element in element 202 and corresponding dimension multiplier element 206 are indexed by calculating tensor
Multiplication products between middle stored value and to determine that storage address is offset.Herein, ALU element Z1,NIn
The value stored multiplies element X1,NMiddle stored value, use element Z1,N-1Middle stored value multiplies element X1,N-1It is middle to be stored
Value ..., use element Z1,2Middle stored value multiplies element X1,2Middle stored value and use element Z1,1It is middle stored
Value multiplies element X1,1Middle stored value.Then, ALU sums to determine and positive visit together to the product of all multiplications
The corresponding storage address of the element asked.It is zero because tensor indexes all values in element 202, therefore storage address is inclined
Shifting is zero, as indicated by frame 230.Then, by the way that background memory address (i.e. P) is added into storage address skew (i.e. 0)
And determine storage address and based on identified storage address come institute's data storage in access storage media, processor
It is able to access that element V [0] [0].
Fig. 2 F are illustrated according to program 212 come access elements V [0] [1].For example, in program, iteration is crossed in first and followed
After ring, nested loop index variable is updated (i.e. i=0 and j=0), and processor can enter the second interior circulation in program
Shi Zhihang updates the instruction " IterateTensor (iteration tensor) " (i.e. i=0 and j=1) that tensor indexes element 202.One
In a little embodiments, tensor Traversal Unit updates tensor by the way that the tensor with minimum index is indexed into the incremental predetermined value of element
Index element 202.For example, referring to Fig. 2 F, tensor can be indexed (the i.e. X of element 228 by tensor Traversal Unit1,1) it is incremented by 1.One
In a little other embodiments, tensor Traversal Unit can be successively decreased predetermined value by the way that the tensor with minimum index is indexed into element
To update tensor index element 202.
In some embodiments, tensor Traversal Unit indexes tensor on institute's updated value and the tensor border in element 202
Value in element 204 is compared, and determines whether to have met threshold value.For example, tensor Traversal Unit can be by tensor rope
The institute's updated value (i.e. 1) drawn in element 228 is compared with the value (i.e. 2) in tensor boundary element 216, and determines tensor rope
Draw the value whether institute's updated value in element 228 is less than in tensor boundary element 216.Herein, the institute in tensor index element 228
Institute's updated value that updated value is less than in the value in tensor boundary element 216, and tensor index element 228 is still 1.
Then, the storage address corresponding with V [0] [1] is positioned by execute instruction " LocateTensor ", is handled
Device is able to access that element V [0] [1].All values in reference picture 2F, tensor index element 202 in addition to tensor indexes element 228
It is zero.Tensor index element 228 has value 1, and ALU can determine that storage address skew is 1, such as frame 232
It is indicated.Then, by by background memory address (i.e. P) be added to storage address skew (i.e. 1) and with determining memory
Location and based on identified storage address come institute's data storage in access storage media, processor is able to access that element V
[0][1]。
Fig. 2 G are illustrated according to program 212 come access elements V [1] [0].For example, in program, second of iteration is excessively interior
After circulation, nested loop index variable is updated (i.e. i=1 and j=0), and processor can perform renewal tensor rope
Draw the instruction " IterateTensor " of element 202.For example, tensor can be indexed (the i.e. X of element 228 by tensor Traversal Unit1,1)
It is incremented by 1.Tensor Traversal Unit can index tensor in institute's updated value (i.e. 2) and tensor boundary element 216 in element 228
Value (i.e. 2) is compared, and determines that institute's updated value in tensor index element 228 is not less than in tensor boundary element 216
Value.In some embodiments, it is not satisfied in response to threshold value, institute's updated value can be continued band by tensor Traversal Unit
(carry over), which indexes element to next tensor and reset current tensor, indexes element.For example, because tensor indexes member
Institute's updated value in element 228 is not less than the value in tensor boundary element 216, therefore tensor can be indexed member by tensor Traversal Unit
Element 226 is incremented by 1, and tensor index element 228 is reset back into 0.
Then, the storage address corresponding with V [1] [0] is positioned by execute instruction " LocateTensor ", is handled
Device is able to access that element V [1] [0].All values in reference picture 2G, tensor index element 202 in addition to tensor indexes element 226
It is zero.Tensor index element 226 has value 1, and ALU can determine that storage address skew is 2, such as frame 234
It is indicated.Then, by by background memory address (i.e. P) be added to storage address skew (i.e. 2) and with determining memory
Location and based on identified storage address come institute's data storage in access storage media, processor is able to access that element V
[1][0]。
Fig. 2 H are illustrated according to program 212 come access elements V [3] [1].For example, program can continue to follow in iteration progress
Ring is with outer circulation until nested loop index variable is in its coboundary (i=3 and j=1).Pass through execute instruction
" LocateTensor " positions the storage address corresponding with V [3] [1], and processor is able to access that element V [3] [1].Ginseng
According to Fig. 2 H, all values in tensor index element 202 in addition to tensor indexes element 226 and 228 are zero.Tensor indexes element
226 have value 3, and tensor index element 228 has value 1.ALU can determine that storage address skew is 7,
As indicated at block 236.Then, determine to deposit by the way that background memory address (i.e. P) is added into storage address skew (i.e. 7)
Memory address and based on identified storage address come institute's data storage in access storage media, processor is able to access that
Element V [3] [1].
Then, processor, which can be performed, updates the instruction " IterateTensor " that tensor indexes element 202.For example, tensor
Tensor can be indexed (the i.e. X of element 228 by Traversal Unit1,1) it is incremented by 1.Tensor Traversal Unit can index tensor in element 228
Institute's updated value (i.e. 2) be compared with the value (i.e. 2) in tensor boundary element 216, and determine tensor index element 228 in
Institute's updated value be not less than tensor boundary element 216 in value.Opened by institute's updated value in tensor index element 228 is not less than
The value in boundary element 216 is measured, therefore tensor index element 226 can be incremented by 1 by tensor Traversal Unit, and tensor is indexed
Element 228 resets back to 0.Tensor Traversal Unit can index tensor institute's updated value (i.e. 3+1=4) and tensor in element 226
Value (i.e. 4) in boundary element 214 is compared, and determines that institute's updated value in tensor index element 226 is not less than tensor
Value in boundary element 214.The value that institute's updated value in element 228 is not less than in tensor boundary element 214 is indexed by tensor,
Therefore next tensor can be indexed element (i.e. X by tensor Traversal Unit1,3) it is incremented by 1, and tensor index element 226 is reset
Return 0.However, due to corresponding tensor boundary element (i.e. Y1,3) it is 0, therefore threshold value is not satisfied.Tensor Traversal Unit will continue
Untill whole tensors index element of the first row of replacement tensor index element 202 at the first row is reset as 0.
In the example above by reference to described by Fig. 2 B- Fig. 2 H, the order to element V tensor traversal is V [0] [0], V
[0] [1], V [1] [0], V [1] [1], V [2] [0], V [2] [1], V [3] [0] and V [3] [1].In some embodiments, lead to
Cross (the i.e. Y of element 2141,2) in tensor boundary information be set to 2 and by (the i.e. Y of element 2161,1) in tensor boundary information set
It is set to 4, and by (the i.e. Z of element 2221,2) in dimension multiplier information be set to 1 and by (the i.e. Z of element 2241,1) in dimension multiply
Sub-information is set to 2, and program can be with V [0] [0], V [1] [0], V [2] [0], V [3] [0], V [0] [1], V [1] [1], V [2]
[1] and V [3] [1] order travels through element V.
Fig. 3 shows the example collection of the tensor state elements 300 of tensor Traversal Unit.Tensor state elements 300 can be with
Corresponding to the tensor state elements 122 or tensor state elements 200 of tensor Traversal Unit 106.Tensor Traversal Unit 300 includes
Tensor indexes group, the group of tensor boundary element 304, the group of dimension multiplier element 306 and the branch's mesh of element 302
Mark the group of element 308.Branch target element 308 can physically or logically be arranged to 2 dimension groups, wherein branch's mesh
Marking each element in element 308 has the corresponding element in tensor indexes element 302.In some embodiments, divide
Every a line of branch object element 308 can represent the branch target information of tensor.In some embodiments, branch target element
308 each row can represent the branch target information of the nested loop index variate-value associated with tensor.In some implementations
In mode, for N-dimensional tensor --- tensor index element 302, tensor boundary element 304 and the dimension that wherein there are N row multiply
Daughter element 306, the corresponding branch target 308 that there may be N+1 row, because in the presence of N+1 situation for meeting boundary threshold.
In some embodiments, branch target information can be included in nested circulation complete to treat during loop iteration by
Manage the storage address for the instruction that device is performed.For example, when the value that tensor is indexed in element is updated, processor can basis
The storage address stored in corresponding branch target element carrys out execute instruction.Reference picture 3, program 312 can be stored
In storage medium 104 or in another storage medium that can be performed by processing unit 102.Program 312, which is specified, has first
Dimension --- 4 and second dimension --- 2 character array variable V.Program 312 is specified to be followed for traveling through the nested for of the variable V
The circulation of ring, the wherein for travels through V the first dimension with the outer circulation tracked by nested loop index variable i and with by embedding
The interior circulation of loop index variable j tracking is covered to travel through V the second dimension.Program 312 also specifies the bar for exiting interior circulation
Part, it requires computing device minimum functions (minimum function) instruction to carry out nested loop index variable i and number 2
Compare.In some embodiments, the storage address of minimum function instructions can be stored in branch target element 324
In so that the continuous band that element 326 indexes element 328 to tensor is indexed if there is from tensor, this will be performed by processor
Minimum function instructions are with the branch condition for determining interior circulation and the tensor boundary information for setting the interior circulation.Similarly, no
Storage address with instruction can be stored in branch target element 322 so that if first without being indexed to tensor
There is being incremented by for tensor index element 326 in the case of the continuous band of element 328, the different instruction will be performed by processor.
Fig. 4 be a diagram that the flow chart of the example of the process 400 for the address for determining multidimensional tensor variable.Process 400 can be with
Performed by one or more system for computer, for example computing system 100.The system includes that there are multiple tensors to index element
With the tensor Traversal Unit of multiple dimension multiplier elements, wherein each element in the dimension multiplier element has corresponding
Amount index element.In some embodiments, the system can include multiple tensor boundary elements, wherein the plurality of tensor border
Each element in element can have the corresponding tensor in multiple tensors index element to index element.In some implementations
In mode, the system includes one or more ALUs.
System obtains the instruction of the element-specific for accessing N-dimensional tensor, and wherein the N-dimensional tensor has across in N number of dimension
Each dimension arrangement multiple elements, and wherein N is equal to or the integer (402) more than 1.For example, processing unit 102
The instruction of the element-specific for accessing tensor can be performed.
In some embodiments, instruction can represent to include first circulation circulation nested with second circulation for handling
Instruction, the second circulation is the outer circulation of the first circulation, and the wherein first circulation carrys out iteration using the first index variables, and
And wherein the second circulation carrys out iteration using the second index variables.For example, program 212 can be stored in storage medium 104
Or in another storage medium that can be performed by processing unit 102.Program 212 can be specified with the first dimension --- 4 Hes
Second dimension --- 2 character array variable V.Program 212 can specify the nested for for traveling through the variable V to circulate, wherein
For circulations travel through V the first dimension with the outer circulation tracked by nested loop index variable i and with by nested rope circuit
Draw the interior circulation of variable j tracking to travel through V the second dimension.
System uses one or more of multiple tensors index element tensor index element and multiple dimension multiplier elements
One or more of dimension multiplier member usually determine the address (404) of the element-specific.In some embodiments, this is specific
The address of element can be the address offset of another element away from N-dimensional tensor.For in one or more tensors index element
Each tensor index element, corresponding tensor can index the value that is stored in element and be multiplied by one or more by system
The value stored in corresponding tensor index element in amount index element, to generate corresponding multiplied value.System can be by true
Determine the summation of the multiplied value to determine address offset.For example, ALU (such as ALU 106) can pass through
The value stored in each element in tensor index element 202 is calculated to be stored with corresponding dimension multiplier element 206
Value between multiplication products summation come determine storage address offset.
In some embodiments, system can index multiple tensors value, the multiple dimension multipliers stored in element
The value stored in element and the value stored in multiple tensor boundary elements are set to initialization value.For example, processor can be with
Perform the instruction " InitializeElements " of initialization tensor state elements 200.Upon initialization, tensor state elements
Each element in 200 can be configured to zero.
In some embodiments, system can be by institute in the first tensor boundary element in multiple tensor boundary elements
The value of storage is provided for the upper boundary values of the first index variables of iteration first circulation.System can be by multiple tensor sides
The value stored in the second tensor boundary element in bound component is provided for the second index variables of iteration second circulation
Upper boundary values.For example, processor can perform the instruction " InitializeElements " of initialization tensor state elements 200.
Upon initialization, each element in tensor state elements 200 can be configured to zero.System can be by multiple dimensions
The value stored in the first dimension multiplier element in multiplier element is set to predetermined value.System can be by multiple dimension multipliers
The value stored in the second dimension multiplier element in element is set to the upper boundary values of the first index variables.For example, processor
The instruction " SetTensorBound " that the tensor boundary information in tensor boundary element 204 is set can be performed.Index is being set
After index boundary information in boundary element 204, (the i.e. Y of element 2141,2) it is arranged to 4, and (the i.e. Y of element 2161,1) set
It is set to 2.
In some embodiments, the first tensor in indexing element in multiple tensors can be indexed institute in element by system
The value of storage is set to the currency of first index variables.System can be by the second tensor in indexing element in multiple tensors
The value stored in index element is set to the currency of second index variables.System can be by the first dimension multiplier element
The value stored is multiplied by the first tensor index element the value that is stored to obtain the first multiplied value.System can be by the second dimension
The value stored in multiplier element is multiplied by the second tensor index element the value that is stored to obtain the second multiplied value.System can be with
By determining address at least to first multiplied value and second multiplied value summation.For example, ALU element Z1,N
Middle stored value multiplies element X1,NMiddle stored value, use element Z1,N-1Middle stored value multiplies element X1,N-1It is middle to be deposited
The value of storage ..., use element Z1,2Middle stored value multiplies element X1,2Middle stored value and use element Z1,1It is middle to be stored
Value multiply element X1,1Middle stored value.Then, ALU the product of all multiplications is summed together with determine with just
The corresponding storage address of the element of access.
In some embodiments, system can receive the instruction for updating the value stored in the first tensor index element.
For example, processor, which can be performed, updates the instruction " IterateTensor " that tensor indexes element 202.Receiving renewal first
After the instruction of value stored in tensor index element, system can determine the first tensor index the value that is stored in element with
Difference between the value stored in first tensor boundary element meets threshold value.In response to determining in the first tensor index element
Difference between the value stored and the value stored in the first tensor boundary element meets threshold value, and system can update this first
The value stored in amount index element.For example, referring to Fig. 2 F, tensor can be indexed (the i.e. X of element 228 by tensor Traversal Unit1,1)
It is incremented by 1.Institute's updated value in tensor index element 228 is less than the value in tensor boundary element 216, and tensor index element
Institute's updated value is still 1 in 228.
In some embodiments, when each first circulation is completed, the first index variables can be incremented by the first increment value.
System can will index incremental first increment value of value stored in element in the first tensor.For example, entering in program in second
Circulate after (i.e. i=0 and j=1), tensor can be indexed (the i.e. X of element 228 by tensor Traversal Unit1,1) it is incremented by 1.
In some embodiments, system can receive the finger for updating and the value stored in element being indexed in the first tensor
Order.For example, processor, which can be performed, updates the instruction " IterateTensor " that tensor indexes element 202.Receiving renewal
After the instruction of the value stored in one tensor index element, system can determine what is stored in the first tensor indexes element
Difference between the value stored in value and the first tensor boundary element is unsatisfactory for threshold value.In response to determining to index member in the first tensor
Difference between the value stored in element and the value stored in the first tensor boundary element is unsatisfactory for threshold value, and system can reset this
The value stored in first tensor index element, and update the value stored in the second tensor index element.For example, tensor time
(the i.e. X of element 228 can be indexed by tensor by going through unit1,1) it is incremented by 1.Tensor Traversal Unit can index tensor in element 228
Institute's updated value (i.e. 2) is compared with the value (i.e. 2) in tensor boundary element 216, and is determined in tensor index element 228
Institute's updated value is not less than the value in tensor boundary element 216.The institute's updated value indexed by tensor in element 228 is not less than tensor
Value in boundary element 216, therefore tensor index element 226 can be incremented by 1 by tensor Traversal Unit, and tensor is indexed into member
Element 228 resets back to 0.
In some embodiments, when each second circulation is completed, the second index variables can be incremented by the second increment value.
System can will index incremental second increment value of value stored in element in the second tensor.For example, entering outer circulation in program
Subsequent cycle (i.e. i=1 and j=0) after, tensor can be indexed element 226 (i.e. X by tensor Traversal Unit1,2) it is incremented by 1.
System output indication is used for the data (406) for determining address for accessing the element-specific of N-dimensional tensor.For example, place
Manage the element-specific for the N-dimensional aray variable that unit 102 can use storage address deviant to come in access storage media.
In some embodiments, system includes multiple branch target elements, wherein in the plurality of branch target element
There is each element the corresponding tensor in multiple tensors index element to index element, and wherein the plurality of branch target member
Each element in element is configured to store to be performed in the iteration completion of circulation corresponding with corresponding branch target element
Instruction address.For example, tensor Traversal Unit 300 includes the group of the branch target element 308 of storage branch target information.
Branch target element can be included in the storage address of the instruction by computing device when the nested loop iteration circulated is completed.
The embodiment of theme and functional performance described in this specification can be with Fundamental Digital Circuit, with tangible embodiment
Computer software or firmware, with hardware --- including the structure and its equivalent structures disclosed in this specification or with it
One or more of combination realize.The embodiment of theme described in this specification can be implemented as one or many
One or more modules of individual computer program, i.e. computer program instructions, it is coded in tangible non-transitory program carrier
On, for by data processing equipment execution or the operation of control data processing unit.Alternatively or in addition, programmed instruction energy
Enough it is coded on manually generated transmitting signal, electricity, light or the electromagnetic signal of the signal such as machine generation, it is generated
To be encoded to information for be transferred to suitable acceptor device for data processing equipment perform.Computer storage is situated between
Matter can be machine readable storage device, machine readable storage substrate, random or serial access memory equipment or they in
One or more combinations.
Term " data processing equipment " covers various devices, equipment and the machine for processing data, including can for example compile
Thread processor, computer or multiple processors or computer.The device can include dedicated logic circuit, and such as FPGA is (existing
Field programmable gate array) or ASIC (application specific integrated circuit).In addition to hardware, the device can also include creating and be used to be begged for
The code of the performing environment of the computer program of opinion, for example, constitute processor firmware, protocol stack, data base management system, operation
The code of the combination of system or one or more of which.
Computer program (also referred to as program, software, software application, module, software module, script or code) can be with
Any type of programming language is write, including compiling or interpretative code, declaratively or process programming language, and it can be with any
Form is disposed, including as stand-alone program or as being suitable to the module, component, the subroutine or other that use in a computing environment
Unit.Computer program can with but the file that not need to correspond in file system.Program, which can be stored in, keeps other programs
Or in a part for the file of data --- such as being stored in one or more of marking language document script ---, be exclusively used in
In the single file of the program discussed or multiple cooperation files --- for example store one or more modules, subprogram or
In the file of code section.Computer program can be deployed as on a computer or positioned at one place or across multiple
Performed on multiple computers that place is distributed and passes through interconnection of telecommunication network.
Process and logic flow described in this specification can be performed by one or more programmable calculators, institute
Programmable calculator is stated to perform one or more computer programs to hold by operating on the input data and generating output
Row function.The process and logic flow can also be performed by dedicated logic circuit and device can also be implemented as special logic
Circuit, the dedicated logic circuit such as FPGA (field programmable gate array), ASIC (application specific integrated circuit) or GPGPU
(general graphical processing unit).
Be adapted for carrying out computer program processor include such as general purpose microprocessor or special microprocessor or this
Both, or any other species CPU.Generally, CPU will be from read-only storage or arbitrary access
Memory or both reception instruction and data.The required element of computer is that the center processing for being practiced or carried out instruction is single
Member and one or more memory devices for store instruction and data.Generally, computer will also include being used for data storage
One or more mass-memory units --- such as disk, magneto-optic disk or CD, or be operatively coupled to connect from it
Receive data or to its transmit data or both.However, computer need not have such equipment.In addition, computer capacity
Enough it is embedded into another equipment, such as mobile phone, personal digital assistant (PDA), Mobile audio frequency or video player, game control
Platform processed, global positioning system (GPS) receiver or portable memory apparatus --- for example USB (USB) flash memory drives
Dynamic device, only gives a few examples.
It is suitable for storing computer program instructions and the computer-readable medium of data is non-volatile including form of ownership
Memory, medium and memory devices, including such as semiconductor memory devices, such as EPROM, EEPROM and flash storage
Device equipment；Disk, such as internal hard drive or removable disk；Magneto-optic disk；And CD ROM and DVD-ROM disks.Processor and storage
Device by supplemented or can be incorporated in dedicated logic circuit.
Interacted to provide with user, the embodiment of the theme described in this specification can be implemented in with
Under computer on：For the display device to user's display information --- such as CRT (cathode-ray tube) or LCD (liquid crystals
Show device) monitor；And keyboard and instruction equipment --- such as mouse or trace ball, user can be provided by it to computer
Input.Other kinds of equipment could be used for providing to be interacted with user；The feedback for being supplied to user can be any shape
The sensory feedback of formula, such as visual feedback, audio feedback or touch feedback；And can receive from user in any
The input of form, including sound, voice or sense of touch.In addition, computer can send text by the equipment used to user
Shelves and document and the user mutual are received from it, such as by response to from the web-browsing on the client device of user
Device receive request and to the web browser send webpage.
The embodiment of the theme described in this manual can be implemented in computing systems, and the computing system includes example
Such as the aft-end assembly of data server, middleware component either including such as application server or including for example having
There are the front end assemblies of the client computer of graphic user interface or Web browser --- user can by the Web browser
Interacted with the embodiment of the theme described in this specification, or including one or more such aft-end assemblies, centre
Any combinations of part component or front end assemblies.The component of system can for example, by communication network any form or medium
Digital data communications is interconnected.The example of communication network includes LAN (" LAN ") and wide area network (" WAN "), such as internet.
Computing system can include client and server.Client and server is generally remote from each other and typically passed through
Communication network interaction.The relation of client and server, which is relied on corresponding computer, to be run and has client-clothes each other
Be engaged in device relation computer program and produce.
Although this specification includes many embodiment details, these be not necessarily to be construed as to any invention or
The limitation of the scope for the content that can be claimed, but the distinctive spy of specific embodiment to specific invention should be interpreted
The description levied.In this specification some features described under the context of separate embodiments also can in single embodiment group
Close and realize.On the contrary, each feature described under single embodiment context also can in various embodiments individually or with
Any suitable sub-portfolio is realized.In addition, although may describe feature as working and very with some combinations above
To initially so claimed, but one or more features from combination claimed can be from some cases
Left out in combination, and combination claimed can be related to the modification of sub-portfolio or sub-portfolio.
Similarly, although operation is depicted with particular order in the accompanying drawings, but this is understood not to need with shown
Particular order or such operation performed with consecutive order or needs to perform all illustrated operations can be only achieved the phase
The result of prestige.In some cases, multitask and parallel processing can be favourable.In addition, each germline in above-described embodiment
The separation of system component is understood not to be required for such separation in all embodiments, and it is to be understood that described
Program assembly and system usually can together be integrated in single software product or be encapsulated into multiple software product.
The specific embodiment of this theme has been described.Other embodiment is fallen within the scope of the appended claims.Example
Such as, action described in claims can be executed in different order and still reach to desired result.It is used as one
The process described in individual example, accompanying drawing be not necessarily required to shown in particular order or consecutive order reach desired result.
In some embodiments, multitask and parallel processing can be favourable.
Claims (20)
1. a kind of device for being used to handle the instruction for being used for accessing N-dimensional tensor, described device includes：
Multiple tensors index element；
Multiple dimension multiplier elements, wherein, each dimension multiplier element in the multiple dimension multiplier element has correspondence
Tensor indexes element；And
One or more processors, one or more of processors are configured to：
The instruction of the element-specific for accessing N-dimensional tensor is obtained, wherein, the N-dimensional tensor has across each in N number of dimension
Multiple elements of individual dimension arrangement, and wherein, N is equal to or the integer more than 1；
Use one or more of the multiple tensor index element tensor index element and the multiple dimension multiplier element
One or more of dimension multiplier member usually determine the address of the element-specific；And
Output indication is used for the data for accessing the identified address of the element-specific of the N-dimensional tensor.
2. device according to claim 1,
Wherein, the address of the element-specific is the address offset with another element of the N-dimensional tensor, and
Wherein it is determined that the address of the element-specific includes：
Each tensor indexed for one or more of tensors in element indexes element, and the corresponding tensor is indexed into element
The value stored in the corresponding tensor index element that middle stored value is multiplied by one or more of tensor index elements, with
Generate corresponding multiplied value；And
The address offset is determined by determining the summation of the multiplied value.
3. device according to claim 1,
Wherein, the multiple tensor index element is arranged in M groups tensor index element, and M is greater than 1 positive integer, and
Wherein, every group of tensor index element, which is assigned to, distinguishes and different multidimensional tensors.
4. device according to claim 1, further comprises multiple tensor boundary elements, wherein, the multiple tensor side
There is each tensor boundary element in bound component the corresponding tensor in the multiple tensor indexes element to index element.
5. device according to claim 4, wherein, the instruction represents to be used to handle to include first circulation and second circulation
Nested circulation instruction, the second circulation is the outer circulation of the first circulation, wherein, the first circulation uses first
Index variables carry out iteration, and wherein, the second circulation carrys out iteration using the second index variables.
6. device according to claim 5, wherein, one or more of processors are further configured to：
The multiple tensor is indexed the value stored in element, the value stored in the multiple dimension multiplier element and
The value stored in the multiple tensor boundary element is set to initialization value.
7. device according to claim 5, wherein, one or more of processors are further configured to：
The value stored in the first tensor boundary element in the multiple tensor boundary element is provided for described in iteration
The upper boundary values of first index variables of first circulation；
The value stored in the second tensor boundary element in the multiple tensor boundary element is provided for described in iteration
The upper boundary values of second index variables of second circulation；
The value stored in the first dimension multiplier element in the multiple dimension multiplier element is set to predetermined value；And
The value stored in the second dimension multiplier element in the multiple dimension multiplier element is set to first index
The upper boundary values of variable.
8. device according to claim 7, wherein it is determined that the address of the element in the N-dimensional tensor includes：
The multiple tensor is indexed to the value stored in the first tensor index element in element and is set to first index
The currency of variable；
The multiple tensor is indexed to the value stored in the second tensor index element in element and is set to second index
The currency of variable；
The described value stored in the first dimension multiplier element is multiplied by what is stored in the first tensor index element
Described value, to obtain the first multiplied value；
The described value stored in the second dimension multiplier element is multiplied by what is stored in the second tensor index element
Described value, to obtain the second multiplied value；And
By determining the address at least to first multiplied value and second multiplied value summation.
9. device according to claim 8, wherein, one or more of processors are further configured to：
Receive the instruction for updating the described value stored in the first tensor index element；
After the instruction for updating the described value stored in the first tensor index element is received, institute is determined
State between the described value stored in the first tensor index element and the described value stored in the first tensor boundary element
Difference meet threshold value；And
In response to institute in the described value for determining to be stored in the first tensor index element and the first tensor boundary element
The difference between the described value of storage meets the threshold value, updates stored in the first tensor index element described
Value.
10. device according to claim 9,
Wherein, when the first circulation is completed every time, first index variables are incremented by the first increment value, and
Wherein, updating the described value stored in the first tensor index element includes indexing first tensor in element
The described value stored is incremented by first increment value.
11. device according to claim 8, wherein, one or more of processors are further configured to：
Receive the instruction for updating the described value stored in the first tensor index element；
After the instruction for updating the described value stored in the first tensor index element is received, institute is determined
State between the described value stored in the first tensor index element and the described value stored in the first tensor boundary element
Difference be unsatisfactory for threshold value；And
In response to institute in the described value for determining to be stored in the first tensor index element and the first tensor boundary element
The difference between the described value of storage is unsatisfactory for the threshold value：
Reset the described value stored in the first tensor index element；And
Update the described value stored in the second tensor index element.
12. device according to claim 11,
Wherein, when the second circulation is completed every time, second index variables are incremented by the second increment value, and
Wherein, updating the described value stored in the second tensor index element includes indexing second tensor in element
The described value stored is incremented by second increment value.
13. device according to claim 1, wherein, one or more of processors are patrolled including one or more arithmetic
Collect unit.
14. device according to claim 1, wherein, the multiple tensor index element and the multiple dimension multiplier member
Each in element is register.
15. device according to claim 1, further comprises multiple branch target elements, wherein, the multiple branch's mesh
Marking each branch target element in element, there is the corresponding tensor in the multiple tensor indexes element to index element, and
And wherein, each branch target element in the multiple branch target element, which is configured to store, works as and the respective branch mesh
The address for the instruction that the iteration of the corresponding circulation of mark element is performed when completing.
16. a kind of system for being used to handle the instruction for being used for accessing N-dimensional tensor, including：
One or more processors, one or more of processors are configured to perform Linear Algebra Operation to N-dimensional tensor, its
In, the N-dimensional tensor has multiple elements across each dimension arrangement in N number of dimension, and wherein, N be equal to or
Integer more than 1；
Multiple tensors index element；
Multiple dimension multiplier elements, wherein, each dimension multiplier element in the multiple dimension multiplier element has correspondence
Tensor indexes element；And
Circuit, the circuit is configured to：
Obtain the instruction of the element-specific for accessing the N-dimensional tensor；
Use one or more of the multiple tensor index element tensor index element and the multiple dimension multiplier element
One or more of dimension multiplier member usually determine the address of the element-specific；And
It is used to access determined by the element-specific of the N-dimensional tensor to one or more of processor output indications
The data of address.
17. system according to claim 16,
Wherein, the address of the element-specific is the address offset with another element of the N-dimensional tensor, and
Wherein it is determined that the address of the element-specific includes：
Each tensor indexed for one or more of tensors in element indexes element, and the corresponding tensor is indexed into element
The value stored in the corresponding tensor index element that middle stored value is multiplied by one or more of tensor index elements, with
Generate corresponding multiplied value；And
The address offset is determined by determining the summation of the multiplied value.
18. a kind of computer implemented method for being used to handle the instruction for being used for accessing N-dimensional tensor, including：
The instruction of the element-specific for accessing N-dimensional tensor is obtained, wherein, the N-dimensional tensor has across each in N number of dimension
Multiple elements of individual dimension arrangement, and wherein, N is equal to or the integer more than 1；
One in one or more of element tensor index element and multiple dimension multiplier elements is indexed using multiple tensors
Or multiple dimension multiplier members usually determine the address of the element-specific；And
Output indication is used for the data for accessing the identified address of the element-specific of the N-dimensional tensor.
19. method according to claim 18,
Wherein, the address of the element-specific is the address offset with another element of the N-dimensional tensor, and
Wherein it is determined that the address of the element-specific includes：
Each tensor indexed for one or more of tensors in element indexes element, and the corresponding tensor is indexed into element
The value stored in the corresponding tensor index element that middle stored value is multiplied by one or more of tensor index elements, with
Generate corresponding multiplied value；And
The address offset is determined by determining the summation of the multiplied value.
20. method according to claim 18, wherein, the instruction represents that including first circulation and second for processing follows
The instruction of the nested circulation of ring, the second circulation is the outer circulation of the first circulation, wherein, the first circulation uses the
One index variables carry out iteration, and wherein, the second circulation carrys out iteration using the second index variables.
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
CN201910630145.2A CN110457069B (en) | 2016-02-03 | 2017-01-13 | Accessing data in a multidimensional tensor |
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US15/014,265 | 2016-02-03 | ||
US15/014,265 US9875104B2 (en) | 2016-02-03 | 2016-02-03 | Accessing data in multi-dimensional tensors |
Related Child Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201910630145.2A Division CN110457069B (en) | 2016-02-03 | 2017-01-13 | Accessing data in a multidimensional tensor |
Publications (2)
Publication Number | Publication Date |
---|---|
CN107038018A true CN107038018A (en) | 2017-08-11 |
CN107038018B CN107038018B (en) | 2019-07-19 |
Family
ID=57860636
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201910630145.2A Active CN110457069B (en) | 2016-02-03 | 2017-01-13 | Accessing data in a multidimensional tensor |
CN201710025689.7A Active CN107038018B (en) | 2016-02-03 | 2017-01-13 | Access the data in multidimensional tensor |
Family Applications Before (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201910630145.2A Active CN110457069B (en) | 2016-02-03 | 2017-01-13 | Accessing data in a multidimensional tensor |
Country Status (7)
Country | Link |
---|---|
US (4) | US9875104B2 (en) |
EP (1) | EP3226121A3 (en) |
JP (3) | JP6896415B2 (en) |
KR (4) | KR101924500B1 (en) |
CN (2) | CN110457069B (en) |
SG (2) | SG10201610917TA (en) |
TW (4) | TWI700587B (en) |
Cited By (8)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN109255438A (en) * | 2018-09-17 | 2019-01-22 | 地平线(上海)人工智能技术有限公司 | The method and apparatus for adjusting tensor data |
CN109857744A (en) * | 2019-02-13 | 2019-06-07 | 上海燧原智能科技有限公司 | Sparse tensor computation method, apparatus, equipment and storage medium |
CN110209503A (en) * | 2019-08-01 | 2019-09-06 | 上海燧原智能科技有限公司 | Specification calculation method, device, equipment and the medium of multidimensional tensor |
CN111291240A (en) * | 2018-12-06 | 2020-06-16 | 华为技术有限公司 | Method for processing data and data processing device |
CN112257857A (en) * | 2019-07-22 | 2021-01-22 | 中科寒武纪科技股份有限公司 | Tensor processing method and related product |
CN113419779A (en) * | 2020-05-08 | 2021-09-21 | 黑芝麻智能科技(重庆)有限公司 | Extensible multi-precision data pipeline system and method |
CN113836049A (en) * | 2021-09-17 | 2021-12-24 | 海飞科(南京)信息技术有限公司 | Memory access method and electronic device |
CN114489798A (en) * | 2022-01-25 | 2022-05-13 | 海飞科(南京)信息技术有限公司 | Method and electronic device for determining an out-of-range state of a tensor element |
Families Citing this family (24)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9256480B2 (en) * | 2012-07-25 | 2016-02-09 | Mobileye Vision Technologies Ltd. | Computer architecture with a hardware accumulator reset |
US9875104B2 (en) * | 2016-02-03 | 2018-01-23 | Google Llc | Accessing data in multi-dimensional tensors |
US9959498B1 (en) * | 2016-10-27 | 2018-05-01 | Google Llc | Neural network instruction set architecture |
US10175980B2 (en) | 2016-10-27 | 2019-01-08 | Google Llc | Neural network compute tile |
US10360163B2 (en) | 2016-10-27 | 2019-07-23 | Google Llc | Exploiting input data sparsity in neural network compute units |
US10896367B2 (en) * | 2017-03-07 | 2021-01-19 | Google Llc | Depth concatenation using a matrix computation unit |
WO2018174934A1 (en) | 2017-03-20 | 2018-09-27 | Intel Corporation | Systems, methods, and apparatus for matrix move |
US10684955B2 (en) | 2017-04-21 | 2020-06-16 | Micron Technology, Inc. | Memory devices and methods which may facilitate tensor memory access with memory maps based on memory operations |
US10248908B2 (en) | 2017-06-19 | 2019-04-02 | Google Llc | Alternative loop limits for accessing data in multi-dimensional tensors |
WO2019009870A1 (en) | 2017-07-01 | 2019-01-10 | Intel Corporation | Context save with variable save state size |
US10175912B1 (en) | 2017-07-05 | 2019-01-08 | Google Llc | Hardware double buffering using a special purpose computational unit |
US10108538B1 (en) | 2017-07-31 | 2018-10-23 | Google Llc | Accessing prologue and epilogue data |
GB2567038B (en) * | 2017-07-31 | 2019-09-25 | Google Llc | Accessing prologue and epilogue data |
GB2568776B (en) | 2017-08-11 | 2020-10-28 | Google Llc | Neural network accelerator with parameters resident on chip |
US11620490B2 (en) * | 2017-10-17 | 2023-04-04 | Xilinx, Inc. | Multi-layer neural network processing by a neural network accelerator using host communicated merged weights and a package of per-layer instructions |
KR102027034B1 (en) * | 2017-11-24 | 2019-09-30 | 서울대학교산학협력단 | Apparatus for supporting multi-dimensional data analysis through parallel processing and method for the same |
WO2019113007A1 (en) * | 2017-12-05 | 2019-06-13 | Wave Computing, Inc. | Pipelined tensor manipulation within a reconfigurable fabric |
US10956315B2 (en) * | 2018-07-24 | 2021-03-23 | Micron Technology, Inc. | Memory devices and methods which may facilitate tensor memory access |
CN111324294B (en) * | 2018-12-17 | 2023-11-07 | 地平线(上海)人工智能技术有限公司 | Method and device for accessing tensor data |
CN111723917B (en) * | 2019-03-21 | 2022-11-01 | 中科寒武纪科技股份有限公司 | Operation method, device and related product |
CN111767508B (en) * | 2020-07-09 | 2024-02-23 | 地平线(上海)人工智能技术有限公司 | Method, device, medium and equipment for computing tensor data by computer |
CN111737007B (en) * | 2020-07-24 | 2021-06-18 | 北京一流科技有限公司 | Frequency division processing system and method for data object |
US11954580B2 (en) * | 2020-09-16 | 2024-04-09 | Meta Platforms, Inc. | Spatial tiling of compute arrays with shared control |
US11868329B2 (en) | 2022-05-20 | 2024-01-09 | International Business Machines Corporation | Multidimensional cube multivariate regression |
Citations (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
WO2001090888A1 (en) * | 2000-05-23 | 2001-11-29 | Theis Jean Paul | A data processing system having an address generation unit with hardwired multidimensional memory indexing support |
CN1492316A (en) * | 2003-09-09 | 2004-04-28 | 大唐微电子技术有限公司 | Montgomery analog multiplication algorithm and its analog multiplication and analog power operation circuit |
US20040093550A1 (en) * | 2002-11-12 | 2004-05-13 | Andrew Kadatch | Matrix multiplication in a Galois field for forward error correction |
WO2013095601A1 (en) * | 2011-12-23 | 2013-06-27 | Intel Corporation | Instruction for element offset calculation in a multi-dimensional array |
CN104838357A (en) * | 2012-12-27 | 2015-08-12 | 英特尔公司 | Vectorization of collapsed multi-nested loops |
CN105260322A (en) * | 2014-06-30 | 2016-01-20 | 中兴通讯股份有限公司 | Method and device for eliminating cyclic shift of cyclic buffer |
Family Cites Families (26)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
JPS58114245A (en) * | 1981-12-28 | 1983-07-07 | Fujitsu Ltd | Vector-converting system of index increment |
JP3102027B2 (en) | 1990-11-20 | 2000-10-23 | 日本電気株式会社 | Nesting management mechanism for loop control |
US5958048A (en) * | 1996-08-07 | 1999-09-28 | Elbrus International Ltd. | Architectural support for software pipelining of nested loops |
GB2359641B (en) | 2000-02-25 | 2002-02-13 | Siroyan Ltd | Mapping circuitry and method |
EP1261914B1 (en) * | 2000-03-08 | 2005-12-07 | Sun Microsystems, Inc. | Processing architecture having an array bounds check capability |
US6647484B1 (en) * | 2000-09-19 | 2003-11-11 | 3 Dsp Corporation | Transpose address mode in general purpose DSP processor |
JP2003244190A (en) * | 2002-02-19 | 2003-08-29 | Matsushita Electric Ind Co Ltd | Processor for data flow control switch and data flow control switch |
US6952821B2 (en) * | 2002-08-19 | 2005-10-04 | Hewlett-Packard Development Company, L.P. | Method and system for memory management optimization |
US7107199B2 (en) * | 2002-10-31 | 2006-09-12 | Hewlett-Packard Development Company, L.P. | Method and system for the design of pipelines of processors |
US7225439B2 (en) * | 2003-03-21 | 2007-05-29 | Sun Microsystems, Inc. | Combining write-barriers within an inner loop with fixed step |
WO2006079940A2 (en) | 2005-01-25 | 2006-08-03 | Nxp B.V. | Multi-threaded processor |
US8806183B1 (en) | 2006-02-01 | 2014-08-12 | Ixys Ch Gmbh | Blank bit and processor instructions employing the blank bit |
US8904155B2 (en) | 2006-03-17 | 2014-12-02 | Qualcomm Incorporated | Representing loop branches in a branch history register with multiple bits |
US8438365B2 (en) * | 2006-10-06 | 2013-05-07 | Calos Fund Limited Liability Company | Efficient data loading in a data-parallel processor |
ATE463788T1 (en) * | 2007-06-26 | 2010-04-15 | Ericsson Telefon Ab L M | DATA PROCESSING UNIT FOR NESTED LOOP INSTRUCTIONS |
US20100122066A1 (en) | 2008-11-12 | 2010-05-13 | Freescale Semiconductor, Inc. | Instruction method for facilitating efficient coding and instruction fetch of loop construct |
US20100274972A1 (en) | 2008-11-24 | 2010-10-28 | Boris Babayan | Systems, methods, and apparatuses for parallel computing |
CA2684226A1 (en) | 2009-10-30 | 2011-04-30 | Ibm Canada Limited - Ibm Canada Limitee | Eleminating redundant operations for common properties using shared real registers |
US9519617B2 (en) * | 2011-07-14 | 2016-12-13 | Texas Instruments Incorporated | Processor with instruction variable data distribution |
US20140181171A1 (en) | 2012-12-24 | 2014-06-26 | Pavel Dourbal | Method and system for fast tensor-vector multiplication |
CN103440513B (en) * | 2013-09-17 | 2017-01-18 | 西安电子科技大学 | Method for determining specific visual cognition state of brain based on sparse nonnegative tensor factorization (SNTF) |
US8947447B1 (en) | 2014-02-13 | 2015-02-03 | Raycast Systems, Inc. | Computer hardware architecture and data structures for ray binning to support incoherent ray traversal |
US11170294B2 (en) | 2016-01-07 | 2021-11-09 | Intel Corporation | Hardware accelerated machine learning |
US9875104B2 (en) * | 2016-02-03 | 2018-01-23 | Google Llc | Accessing data in multi-dimensional tensors |
KR102459854B1 (en) | 2016-05-26 | 2022-10-27 | 삼성전자주식회사 | Accelerator for deep neural networks |
US10175980B2 (en) | 2016-10-27 | 2019-01-08 | Google Llc | Neural network compute tile |
-
2016
- 2016-02-03 US US15/014,265 patent/US9875104B2/en active Active
- 2016-12-26 JP JP2016250976A patent/JP6896415B2/en active Active
- 2016-12-28 SG SG10201610917TA patent/SG10201610917TA/en unknown
- 2016-12-28 SG SG10202104454YA patent/SG10202104454YA/en unknown
- 2016-12-29 KR KR1020160182981A patent/KR101924500B1/en active IP Right Grant
- 2016-12-30 TW TW108144554A patent/TWI700587B/en active
- 2016-12-30 TW TW109123874A patent/TWI772842B/en active
- 2016-12-30 EP EP16207511.3A patent/EP3226121A3/en active Pending
- 2016-12-30 TW TW107126366A patent/TWI681291B/en active
- 2016-12-30 TW TW105144084A patent/TWI635390B/en active
-
2017
- 2017-01-13 CN CN201910630145.2A patent/CN110457069B/en active Active
- 2017-01-13 CN CN201710025689.7A patent/CN107038018B/en active Active
- 2017-03-13 US US15/456,812 patent/US9875100B2/en active Active
- 2017-12-15 US US15/844,192 patent/US10228947B2/en active Active
-
2018
- 2018-11-20 KR KR1020180143824A patent/KR102472424B1/en active IP Right Grant
-
2019
- 2019-03-11 US US16/298,535 patent/US10838724B2/en active Active
-
2021
- 2021-06-09 JP JP2021096509A patent/JP7225314B2/en active Active
-
2022
- 2022-11-24 KR KR1020220159111A patent/KR102596365B1/en active IP Right Grant
-
2023
- 2023-02-08 JP JP2023017754A patent/JP2023059898A/en active Pending
- 2023-10-26 KR KR1020230144479A patent/KR20230153972A/en not_active Application Discontinuation
Patent Citations (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
WO2001090888A1 (en) * | 2000-05-23 | 2001-11-29 | Theis Jean Paul | A data processing system having an address generation unit with hardwired multidimensional memory indexing support |
US20040093550A1 (en) * | 2002-11-12 | 2004-05-13 | Andrew Kadatch | Matrix multiplication in a Galois field for forward error correction |
CN1492316A (en) * | 2003-09-09 | 2004-04-28 | 大唐微电子技术有限公司 | Montgomery analog multiplication algorithm and its analog multiplication and analog power operation circuit |
WO2013095601A1 (en) * | 2011-12-23 | 2013-06-27 | Intel Corporation | Instruction for element offset calculation in a multi-dimensional array |
CN104838357A (en) * | 2012-12-27 | 2015-08-12 | 英特尔公司 | Vectorization of collapsed multi-nested loops |
CN105260322A (en) * | 2014-06-30 | 2016-01-20 | 中兴通讯股份有限公司 | Method and device for eliminating cyclic shift of cyclic buffer |
Cited By (14)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN109255438A (en) * | 2018-09-17 | 2019-01-22 | 地平线(上海)人工智能技术有限公司 | The method and apparatus for adjusting tensor data |
CN111291240B (en) * | 2018-12-06 | 2023-12-08 | 华为技术有限公司 | Method for processing data and data processing device |
CN111291240A (en) * | 2018-12-06 | 2020-06-16 | 华为技术有限公司 | Method for processing data and data processing device |
CN109857744A (en) * | 2019-02-13 | 2019-06-07 | 上海燧原智能科技有限公司 | Sparse tensor computation method, apparatus, equipment and storage medium |
CN112257857A (en) * | 2019-07-22 | 2021-01-22 | 中科寒武纪科技股份有限公司 | Tensor processing method and related product |
CN110209503A (en) * | 2019-08-01 | 2019-09-06 | 上海燧原智能科技有限公司 | Specification calculation method, device, equipment and the medium of multidimensional tensor |
CN110209503B (en) * | 2019-08-01 | 2019-10-25 | 上海燧原智能科技有限公司 | Specification calculation method, device, equipment and the medium of multidimensional tensor |
CN113419779A (en) * | 2020-05-08 | 2021-09-21 | 黑芝麻智能科技(重庆)有限公司 | Extensible multi-precision data pipeline system and method |
CN113419779B (en) * | 2020-05-08 | 2023-07-07 | 黑芝麻智能科技(重庆)有限公司 | Scalable multi-precision data pipeline system and method |
WO2023040460A1 (en) * | 2021-09-17 | 2023-03-23 | 海飞科(南京)信息技术有限公司 | Memory access method and electronic device |
CN113836049B (en) * | 2021-09-17 | 2023-08-08 | 海飞科(南京)信息技术有限公司 | Memory access method and electronic device |
CN113836049A (en) * | 2021-09-17 | 2021-12-24 | 海飞科(南京)信息技术有限公司 | Memory access method and electronic device |
CN114489798A (en) * | 2022-01-25 | 2022-05-13 | 海飞科(南京)信息技术有限公司 | Method and electronic device for determining an out-of-range state of a tensor element |
CN114489798B (en) * | 2022-01-25 | 2024-04-05 | 海飞科(南京)信息技术有限公司 | Method and electronic device for determining out-of-range state of tensor element |
Also Published As
Similar Documents
Publication | Publication Date | Title |
---|---|---|
CN107038018A (en) | Access the data in multidimensional tensor | |
KR102261768B1 (en) | Alternative loop limit | |
US10534607B2 (en) | Accessing data in multi-dimensional tensors using adders | |
US11379707B2 (en) | Neural network instruction set architecture | |
CN108615072B (en) | Performing average pooling in hardware | |
CN107454966B (en) | Prefetch weights for neural network processors | |
US20210173623A1 (en) | Systems and methods for stencil amplification | |
US9946539B1 (en) | Accessing data in multi-dimensional tensors using adders | |
Xia et al. | A high-performance cellular automata model for urban simulation based on vectorization and parallel computing technology | |
CN109324827A (en) | Access preamble and end of data | |
JP7485740B2 (en) | Neural Network Instruction Set Architecture |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
SE01 | Entry into force of request for substantive examination | ||
CB02 | Change of applicant information | ||
CB02 | Change of applicant information |
Address after: American CaliforniaApplicant after: Google limited liability companyAddress before: American CaliforniaApplicant before: Google Inc. |
|
REG | Reference to a national code |
Ref country code: HKRef legal event code: DERef document number: 1242809Country of ref document: HK |
|
GR01 | Patent grant | ||
GR01 | Patent grant |
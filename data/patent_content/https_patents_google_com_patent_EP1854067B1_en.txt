EP1854067B1 - Method for estimating motion and occlusion - Google Patents
Method for estimating motion and occlusion Download PDFInfo
- Publication number
- EP1854067B1 EP1854067B1 EP06700103.2A EP06700103A EP1854067B1 EP 1854067 B1 EP1854067 B1 EP 1854067B1 EP 06700103 A EP06700103 A EP 06700103A EP 1854067 B1 EP1854067 B1 EP 1854067B1
- Authority
- EP
- European Patent Office
- Prior art keywords
- motion
- site
- occlusion
- frame
- vector
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active
Links
- 238000000034 method Methods 0.000 title claims description 53
- 239000013598 vector Substances 0.000 claims description 85
- 230000002123 temporal effect Effects 0.000 claims description 11
- 230000006870 function Effects 0.000 claims description 10
- 239000011159 matrix material Substances 0.000 claims description 6
- 238000012545 processing Methods 0.000 claims description 6
- 238000011156 evaluation Methods 0.000 claims description 3
- 230000000644 propagated effect Effects 0.000 claims description 3
- 230000003044 adaptive effect Effects 0.000 claims description 2
- 238000000354 decomposition reaction Methods 0.000 claims description 2
- 230000003190 augmentative effect Effects 0.000 claims 2
- 238000013138 pruning Methods 0.000 claims 1
- 238000004422 calculation algorithm Methods 0.000 description 8
- 230000000694 effects Effects 0.000 description 4
- 101100228469 Caenorhabditis elegans exp-1 gene Proteins 0.000 description 3
- 230000006978 adaptation Effects 0.000 description 3
- 238000005352 clarification Methods 0.000 description 3
- 230000003287 optical effect Effects 0.000 description 3
- 238000004364 calculation method Methods 0.000 description 2
- 230000003750 conditioning effect Effects 0.000 description 2
- 238000001514 detection method Methods 0.000 description 2
- 238000009499 grossing Methods 0.000 description 2
- 239000000463 material Substances 0.000 description 2
- 238000005259 measurement Methods 0.000 description 2
- 238000003491 array Methods 0.000 description 1
- 238000013476 bayesian approach Methods 0.000 description 1
- 230000005540 biological transmission Effects 0.000 description 1
- 239000000872 buffer Substances 0.000 description 1
- 230000001143 conditioned effect Effects 0.000 description 1
- 238000012854 evaluation process Methods 0.000 description 1
- 238000001914 filtration Methods 0.000 description 1
- 239000012530 fluid Substances 0.000 description 1
- 239000012634 fragment Substances 0.000 description 1
- 238000010348 incorporation Methods 0.000 description 1
- 238000004519 manufacturing process Methods 0.000 description 1
- 238000012067 mathematical method Methods 0.000 description 1
- 238000012986 modification Methods 0.000 description 1
- 230000004048 modification Effects 0.000 description 1
- 208000024891 symptom Diseases 0.000 description 1
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/50—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using predictive coding
- H04N19/503—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using predictive coding involving temporal prediction
- H04N19/51—Motion estimation or motion compensation
- H04N19/553—Motion estimation dealing with occlusions
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06T—IMAGE DATA PROCESSING OR GENERATION, IN GENERAL
- G06T7/00—Image analysis
- G06T7/20—Analysis of motion
- G06T7/215—Motion-based segmentation
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06T—IMAGE DATA PROCESSING OR GENERATION, IN GENERAL
- G06T7/00—Image analysis
- G06T7/20—Analysis of motion
- G06T7/223—Analysis of motion using block-matching
- G06T7/238—Analysis of motion using block-matching using non-full search, e.g. three-step search
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06T—IMAGE DATA PROCESSING OR GENERATION, IN GENERAL
- G06T2207/00—Indexing scheme for image analysis or image enhancement
- G06T2207/10—Image acquisition modality
- G06T2207/10016—Video; Image sequence
Definitions
- the determination of motion from an image sequence is currently employed for a wide variety of tasks.
- the MPEG and H.261/2/3 standards employ motion information in order to efficiently compress image sequence data.
- the idea is that generally image content does not change substantially between frames in any interesting image sequence, excepting for motion.
- the various MPEG and H.26x standards exploit this idea and in practice stipulate an allowable maximum amount of frames over which such motion compensated prediction is possible. It is because of video coding in particular that motion estimation has been widely studied and is of industrial importance.
- Motion estimation is also useful for a number of video content retrieval tasks e.g. shot cut detection [6] and event detection [7]. It is also vital and heavily used for reconstructing missing images, deinterlacing, and performing sequence restoration tasks in general [20, 15].
- Block Matching motion estimation algorithm is perhaps the most popular estimator and numerous variants have been proposed in the scientific [18, 3, 21,10] and patent literature [19, 9,17] from as early as 1988.
- the general idea is to assume that blocks of pixels (16 ⁇ 16 in the MPEG2 standard, and optionally 8 ⁇ 8 in the MPEG 4 standard) contain a single object moving with some simple and single motion. An exhaustive search in the previous and/or next frames for the best matching block of pixels of the same size, then yields the relevant motion vector.
- occlusion estimation is related to allowing for motion discontinuities at the boundaries of moving objects. Since 1991 (Black et al [4], [22]) this idea has been pursued in that way. Motion discontinuity estimation is now widely accepted to be a vital piece of information required to assist image manipulation tasks in general. For instance, in [11] an invention is described that uses a block splitting method to aid deinterlacing of video by extracting motion discontinuity information.
- Kokaram Anil'On missing data treatment for degraded video and film archives: a survey and a new Bayesian approach', in IEEE Transactions on Image Processing, 13, (3), 2004, p397 - 415 , discloses a Bayesian framework that achieves joint processing of noise, missing data, and occlusion.
- I n x I n - 1 ⁇ x + d n , n - 1 x + e n b x
- I n x I n + 1 ⁇ x + d n , n + 1 x + e n f x
- d h is the horizontal component of motion while d k is the vertical.
- the second equation is the same except relating the current pixel to a pixel in the next frame. See figure 7 for a clarifying illustration of the various vector terms used.
- equations simply state that the current image can be created by rearranging the positions of pixels from the previous OR the next frames. They are the basis for all known block matching algorithms, and most known optical flow algorithms. In fact, the situation is more complicated than that. In some situations, an object will cover the current pixel in the next frame. Then equation 2 would not be valid because the current pixel will not exist in the next frame. Similarly, a pixel in the current frame may have been revealed by an object moving away from that site in the previous frame. In that case equation 1 becomes invalid.
- the invention therefore estimates four quantities at each site x.
- the first two quantities are the forward and backward motion d n , n +1 (x), and d n , n -1 (x) respectively.
- the last two are occlusion indicators.
- These are two quantities O b (x), O f (x) which indicate the extent to which the site x is covered or revealed in the next, or, from the previous frames. They have a maximum value of 1 and a minimum value of 0. Being set to 1 indicates that the pixel does NOT exist in the relevant frame, while set to 0 means that the pixel DOES exist in the relevant frame. When O b is set to 1 for instance, this means that the pixel does not exist in the previous frame.
- the preferred low pass filter is a separable Gaussian filter with a size of P taps.
- h refers to one the P filter taps with range 0... P -1, ⁇ g 2 controls the amount of smoothing. Larger values yield more smoothing.
- the motion estimation and refinement process then begins at the coarsest level L.
- Level 0 is the original resolution image.
- estimates are propagated and refined at successively higher resolutions until the final output at level 0 results.
- the invention takes as input a set of motion vectors from any previous motion estimation step. These vectors may be specified on either a block basis or a pixel basis. In a preferred embodiment a gradient based block motion estimator is used. This step is indicated as block (2) in the overall process in figure 4 .
- the matrix is then defined as follows.
- z g x x 1 g y x 1 g x x 2 g y x 2 g x x 3 g y x 3 g x x 4 g y x 4 ⁇
- ⁇ is related to the noise e ( ⁇ ) in equation 1. In this invention it is configured differently as disclosed later.
- the new estimate for motion may be fractional.
- bilinear interpolation is used to retrieve the pixels at the off grid locations in the previous frame.
- ⁇ is more correctly identified as a regularising term which makes G T G invertible and also controls the rate of convergence of the solution.
- a recipe for adapting ⁇ to the conditioning of G T G is given and this is used in this invention.
- this may be a symptom of either low gradient, or there is a dominant edge in the block. It is well known that motion cannot be accurately estimated in the direction parallel to an edge. [5] does not address this issue.
- a recipe for addressing this problem is presented, however the solution there is not recursive and does not incorporate any of the good convergence properties of equation 4.
- the essense of this new adaptation is to measure the ill-conditioning in G T G and then select either the regularised solution disclosed above, or use Singular Value Decomposition in the case of ill- conditioning.
- This is the adaptation used in this invention. Therefore, at each iteration the motion update is estimated as follows.
- e max T is the eigen vector corresponding to the eigen value ⁇ max .
- ⁇ is a threshold on the allowable ill-conditioning in the matrix G T G.
- the preferred value is 100.0 f . It is ⁇ that allows the selection of the two different updating strategies.
- the threshold z t determines which blocks are detected to contain moving objects or not Assuming that most of the image contains pixels that are not part of moving objects, then by calculating the interframe difference for no motion most of the sites can contribute to an estimate of z t .
- the steps are as follows to calculate z t for estimating motion between the current and previous frame pair.
- block sizes vary depending on the size of the image.
- S - denote the state of the pixel sites in terms of motion and occlusion at the pixels in the neighbourhood of the size x, but NOT including the site x itself. This neighbourhood may also include pixels in the previous and next frames. In other words, it is required to manipulate the probability distribution of the unknowns (motion, occlusion) GIVEN the motion, occlusion data at the pixel sites around and image data in the current, previous and next frames.
- the p.d.f may be expressed as a combination of a likelihood and a number of priors which incorporate various known properties of motion and occlusion fields.
- ⁇ acts as a hypothesis check on outliers in the gaussian distribution for the displaced pixel difference e(x).
- ⁇ 2.76 2 gives a 90% chance that occlusion will be selected when that error exceeds 2.76 2 ⁇ 2 ⁇ ⁇ e 2 .
- This expression encodes the notion that when there is no occlusion, the current and next or previous pixels, compensated for motion, should be similar.
- the first piece of prior information to be encoded is the fact that in a local region of pixels, it is expected that the occlusion state s and the motion field d should be smooth.
- a markov random field is used to encode this idea.
- the spatial smoothness prior for backward motion is the same as for forward motion and is as follows. p ⁇ d n , n - 1
- D - 1 ⁇ exp - ⁇ ⁇ p j ⁇ N , j 1 : 8 ⁇ j ⁇ f ⁇ d n , n - 1 - d n , n - 1 p j
- the vectors p j are taken from the 8 nearest neighbour sites to x( N ), the site under consideration.
- ⁇ 1 for the neighbourhood sites on the vertical and the horizontal, and 1 / 2 for the 4 diagonal neighbourhood sites.
- ⁇ controls the overall smoothness strength that is applied.
- ⁇ 2.0 is preferred. This prior essentially penalises the estimated motion from being significantly different from its neighbours. See figure 5 for clarification of the spatial relationship between the current site x and its neighbourhood.
- the function f ( ⁇ ) allows for motion discontinuities by encoding the idea that either the motion field is generally so smooth that the vectors are the same, but where they are different they are very different. Many different robust functions may be used here, e.g. Huber's function, Tukey's function.
- an explicit image edge detector may be used e.g. Canny or any zero crossing edge detector.
- the output is 0.
- the output is the usual euclidean distance. This idea allows motion across an image edge to be independent, and assumes that motion edges are likely to occur at image edges.
- a spatial smoothness constraint on the occlusion field s can be configured as follows. p ⁇ s
- S - ⁇ 1 ⁇ exp - ⁇ ⁇ p j ⁇ N , j 1 : 8 ⁇ j s ⁇ s p j
- This prior may be configured in another fashion by comparing d n , n -1 with d n -1, n -2 (and similar for d n , n +1 ) for brevity this is not explicitly stated here.
- this alternate prior can be constructed by replacing d n -1, n with d n -1, n -2 and replacing d n +1, n with d n +1, n +2 in the expression above.
- the expression above is preferred but there are situations in which the alternate expression may be suitable e.g. in the case where the current frame is missing for some reason.
- ⁇ 1 ⁇
- ⁇ d 2 2.0.
- ⁇ d 2 controls the match between motion that is expected in time. A large value tolerates very poor matches.
- the mask is an image that is the same size as the images being handled.
- the values at pixels in the mask are set to 1 where the corresponding image pixel is to be considered and set to 0 where the image pixel is to be ignored.
- this mask or weights image corresponding to frame n as W n .
- the value of the pixels in this image are at most 1 and at least 0. Their values may occupy a continuum of values inbetween or be binary. This weight information can be incorporated into the invention disclosed here in order to estimation motion and occlusion only for the user specified regions in the mask.
- the modification required is to weight the interframe difference measurements in equations 10 and 13 using the values W n -1 ⁇ , W n -1 ⁇ , W n -1 ⁇ .
- the weights therefore allow interframe differences to be ignored at mask boundaries, in which case the spatial motion and occlusion smoothness constraints will dominate.
- the energy evaluations disclosed above are replaced with the following.
- ⁇ n need not contain binary values only.
- This process can be implemented in hardware using FPGA arrays, and a CPU controller. More interestingly, recognise that it is the interframe differences and intervector differences that comsume most of the compute activity in this process.
- the Graphics Processing Unit (GPU) in a general purpose PC can perform such operations at a much higher rate than the CPU.
- GPU Graphics Processing Unit
- FIG 8 Pixels 1,2,3,4,5,6 can all be processed at the same time since the energy calculations there employ independent and non-overlapping spatial information.
- the other interleaved checkerboard 7, 8, 9,10 of sites can then be processed simultaneously, and so on.
- This kind of parallel operation is possible on the GPU by exploiting the vertex and fragment programming facility built into the GPU cores by manufacturers such as ATI and NVIDIA.
Description
- The determination of motion from an image sequence is currently employed for a wide variety of tasks. For instance, in video coding the MPEG and H.261/2/3 standards employ motion information in order to efficiently compress image sequence data. The idea is that generally image content does not change substantially between frames in any interesting image sequence, excepting for motion. Thus if it were possible to transmit one frame at the start of a scene, and then simply send the motion information for subsequent frames instead of the actual picture material, then all the subsequent frames in that scene could be built at the receiver. The various MPEG and H.26x standards exploit this idea and in practice stipulate an allowable maximum amount of frames over which such motion compensated prediction is possible. It is because of video coding in particular that motion estimation has been widely studied and is of industrial importance.
- Motion estimation is also useful for a number of video content retrieval tasks e.g. shot cut detection [6] and event detection [7]. It is also vital and heavily used for reconstructing missing images, deinterlacing, and performing sequence restoration tasks in general [20, 15].
- The Block Matching motion estimation algorithm is perhaps the most popular estimator and numerous variants have been proposed in the scientific [18, 3, 21,10] and patent literature [19, 9,17] from as early as 1988. The general idea is to assume that blocks of pixels (16 × 16 in the MPEG2 standard, and optionally 8 × 8 in the
MPEG 4 standard) contain a single object moving with some simple and single motion. An exhaustive search in the previous and/or next frames for the best matching block of pixels of the same size, then yields the relevant motion vector. - Of course motion in an image sequence does not necessarily obey the block matching assumption. Typically at the boundaries of moving objects, blocks will contain two types of pixels. Some will be part of the moving object, while others will be part of another moving object or a stationary background. This situation is shown in
figure 1 . While this does not affect the use of block matching for video coding very much, it does have an implication for image manipulation e.g. restoration, deinterlacing, enhancement. In those applications processing blocks at motion boundaries without acknowledging the motion discontinuity causes poor image quality at the output sometimes giving the effect of dragging or tearing at moving object boundaries. One method for solving this problem is to split blocks at such boundaries e.g. as proposed in [8]. De Haan et al [17] propose an invention that also describes one such variant of that idea. - As early as 1981 [14, 13, 12] it was recognised that having a motion vector for every pixel in an image might overcome this problem. Various schemes have since then been proposed to do this based typically on some image gradient observations and the incorporation of the notion that motion in a local area of the image should be smooth in some sense. These are typically iterative methods and the result is a motion vector for every pixel in the image, yielding what is called the optical flow for an image. However, although estimating a vector for every pixel does overcome the problem somewhat, there is still no notion in determining optical flow of whether that pixel exists in future or previous frames i.e. there is no understanding of occlusion.
- In some sense, occlusion estimation is related to allowing for motion discontinuities at the boundaries of moving objects. Since 1991 (Black et al [4], [22]) this idea has been pursued in that way. Motion discontinuity estimation is now widely accepted to be a vital piece of information required to assist image manipulation tasks in general. For instance, in [11] an invention is described that uses a block splitting method to aid deinterlacing of video by extracting motion discontinuity information.
- Kokaram, Anil'On missing data treatment for degraded video and film archives: a survey and a new Bayesian approach', in IEEE Transactions on Image Processing, 13, (3), 2004, p397 - 415, discloses a Bayesian framework that achieves joint processing of noise, missing data, and occlusion.
- This invention is novel in the following aspects:
- It provides a single process for unifying the estimation of motion with the direct and explicit estimation of occlusion. (Unlike inventions [19, 9, 17] which are specifically targeted at motion (and not occlusion)).
- It allows for motion information from any motion estimator (block matching or otherwise) to be refined to output motion and occlusion information. In the preferred embodiment a gradient based estimator is used. In [19] a refinement process is proposed which results only in motion information, and which uses block matching. None of the previous work proposes any such refinement idea.
- It allows unimportant objects to be ignored in estimation. This is important particularly for the motion picture post production industry in which it is often the case that users will already know the positon and extent of objects to be ignored. None of the previous work allows for this situation.
- It allows the information to be created at pixel resolution. (Unlike inventions [19, 9, 17] which are specifically targeted at the block resolution).
- It exploits a pyramid of successively coarser resolution images to allow for larger ranges of motion. None of the previous work incorporates this idea.
-
-
Figure 1 : The three frames n - 1, n, n + 1 are shown with a single square object translating across the images. Dark regions are shown in frame n (the current frame) which are occluded in frame n + 1, and uncovered from frame n - 1. It is this effect that the state s incorporates. The motion undergone by the object is also indicated as a vector in frame n = 1 and frame n + 1. This invention estimates and refines the motion from the current frame into the previous (n = 1) and next (n + 1) frames. -
Figure 2 : The three frames n = 1, n, n + 1 are shown together with their reduced size versions forming the multiresolution pyramid required. Motion estimation begins atlevel 2 in this case and then propagated and sucessively refined at each level until the final, original resolution level is processed and termination is achieved. -
Figure 3 : Two frames of 6 × 6 pixels are shown in which a central block of 5 × 5 pixels is being used for estimating motion. The sequence is the site indexing required (using raster scan) to create the vector z and gradient matrix G. Thus inter image differences are read out into z and gradients are read out into G. -
Figure 4 : The preferred overall motion estimation and motion/occlusion refinement process is shown. Block (3) is preferred but optional. -
Figure 5 : The relationship between the current site x and its neighbours p j : j = 1 : 8 is shown. On the left a representative vector neighbourhood is shown, while on the right a representative occlusion state s neighbourhood is shown. The occlusion states are shown as circles that are either clear or dark indicating some value of s. This neighbourhood configuration is used in calculating the various spatial smoothness energies indicated in the description of this invention. -
Figure 6 : The two frames n, n + 1 are shown, represented as 1-dimensional strips of 13 pixels for clarity. An object that is 4 pixels long (shown as a dark set of pixels) is moving by 2 pixels per frame. The use of the motion between n + 1, n + 2 to create a candidate for motion in the current frame n is shown. In effect, all the motion in n + 1 is baclprojected along their own directions and wherever they hit in the current frame n, a temporal candidate is found for that site. The example shows d n+1,n+2(x) being backprojected to hit the site x - d n+1,n+2(x). Of course it is unlikely that the hits will occur on the integer pixel grid, and in that case, the hit is assigned as a candidate to the nearest rounded pixel location. -
Figure 7 : Three frames n = 1, n, n + 1 are shown, represented as 1-dimensional strips of 13 pixels for clarity. An object that is 4 pixels long (shown as a dark set of pixels) is moving by 2 pixels per frame across the three frame sequence. The figure makes clear the relationship betwen pixel positions and the motion vectors d n,n-1,... both forward and backward in time. The invention estimates d n,n+1, d n,n-1 given all other motion information shown. The figure also indicates that the temporal prior compares d n,n-1(x) with d n-1,n at the displaced location x + d n,n+1. These two vectors should match (be mirror reflections of each other) if no occlusion is occuring. The alternative prior configuration can also be identified in the figure as well. In that alternate case, d n,n+1 is compared with d n+1,n+2. -
Figure 8 : An image of 5 × 7 pixels showing the sequence in which pixel sites are visited for estimating motion and occlusion using a checkerboard scan. - Define the current image under consideration as frame n, then the previous image is indexed with n = 1 and the next with n + 1. A pixel at a site h, k (i.e. column h, and row k) in frame n has a value that is denoted as In (h, k). This can also be expressed as In (x) where x = [h, k] is the position vector indicating a pixel at site h, k. To understand the outputs of the invention, it is sensible to state an initial image sequence model as follows.
- In the first equation, the current pixel In (x) is shown to be the same as a pixel in the previous frame n - 1 except at another location, and with some added noise
figure 7 for a clarifying illustration of the various vector terms used. - These two equations simply state that the current image can be created by rearranging the positions of pixels from the previous OR the next frames. They are the basis for all known block matching algorithms, and most known optical flow algorithms. In fact, the situation is more complicated than that. In some situations, an object will cover the current pixel in the next frame. Then
equation 2 would not be valid because the current pixel will not exist in the next frame. Similarly, a pixel in the current frame may have been revealed by an object moving away from that site in the previous frame. In thatcase equation 1 becomes invalid. - The invention therefore estimates four quantities at each site x. The first two quantities are the forward and backward motion d n,n+1(x), and d n,n-1(x) respectively. The last two are occlusion indicators. These are two quantities Ob (x), Of (x) which indicate the extent to which the site x is covered or revealed in the next, or, from the previous frames. They have a maximum value of 1 and a minimum value of 0. Being set to 1 indicates that the pixel does NOT exist in the relevant frame, while set to 0 means that the pixel DOES exist in the relevant frame. When Ob is set to 1 for instance, this means that the pixel does not exist in the previous frame. When Of is set to 1, this means that the pixel does not exist in the next frame. These quantities are therefore indicators of occlusion, value close to one indicate occluded pixels, while close to zero indicate valid motion. In the preferred embodiment of this invention these indicators are binary, however this need not be the case.
Figure 1 explains how occlusion occurs in a sequence. - For simplicity at each site the two occlusion variables can be combined into a single variable s = Ob , Of . This state variable s can be interpreted as follows.
- s = 00: There is no occlusion in either the previous or next frames and so both equations for motion, 1 and 2, are valid and the pixel exists in all frames.
- s = 10: There IS occlusion in the previous frame and so the pixel only exists in the current and next frames. Only
equation 2 is valid. - s = 01: There IS occlusion in the next frame and so the pixel only exists in the current and previous frames. The
equation 1 is valid. - s = 11: There IS occlusion in both next and previous frames. This cannot be true in any normally behaving image sequence. For it to occur there must be something wrong with the image data. A classic case occurs when the current image data is missing, e.g. due to digital data dropout in transmission or image damage in film (blotches and line scratches [15]).
- In order to handle large values of motion and to improve the convergence of the overall process it is preferable to operate on a multiresolution basis. Therefore firstly, for each image I n-1, In , I n+1, a pyramid of L images are created by low pass filtering and then downsampling the original image L times. This is shown as block (1) in the overall process in
figure 4 . Thus for image In for instance, of size M × N rows and columns, successively smaller images are created of size (M/2) × (N/2), (M/4) × (N/4), (M/8) × (N/8) and so on, up to (M/(2 L )) × (N/(2 L )). This situation is illustrated infigure 2 . The preferred low pass filter is a separable Gaussian filter with a size of P taps. The filter coefficients g[h] are given by the equation belowrange 0... P-1,level L. Level 0 is the original resolution image. Then estimates are propagated and refined at successively higher resolutions until the final output atlevel 0 results. - The invention takes as input a set of motion vectors from any previous motion estimation step. These vectors may be specified on either a block basis or a pixel basis. In a preferred embodiment a gradient based block motion estimator is used. This step is indicated as block (2) in the overall process in
figure 4 . - For this part the invention uses mathematical methods described in [2]. Given a block size of B × B pixels, and an initial estimate for motion d0 (which may be zero), the goal is to update the initial estimate to generate the correct motion d. It is possible to estimate that update u such that d = d0 + u. The subscripts · n,n-1 etc are dropped for simplicity. Consider equation 1 (the situation is the same for the forward motion in equation 2). This equation can be linearised by substituting for u and expanding the right hand term I n-1(x + d(x)) as a Taylor series about d0. The linearised equation at each pixel site can be collected for the entire block to yield the following solution.
- G is a matrix (of size B 2 × 2) containing the horizonal gx (·) and vertical gradients gy (·) at each pixel site in the block (in the frame n = 1) scanned in a raster scan fashion. These gradients are estimated using pixel differencing, thus gx (h, k) = 0.5(I n-1(h + 1, k) - I n-1(h - 1, k)) and gy (h, k) = 0.5(I n-1(h, k + 1) - I n-1(h, k -1)). The matrix is then defined as follows.
- In [2], µ is related to the noise e(·) in
equation 1. In this invention it is configured differently as disclosed later. - The sequence for scanning measurements to create z and G is shown in
figure 3 . - In practice, one iteration is not enough to update the initial estimate to the correct motion d. Instead, the update is used to create a new estimate d̂ = u + d0 and that in turn is recursively used as the new initial estimate for further updating. The process is therefore iterative, and converges to a solution after a certain number of iterations T. The recursive procedure is terminated when any one of the following stopping criterion is true
- Iterations exceed the maximum allowed. Tmar = 20 is preferred.
- The sum squared prediction error ∥z∥ = z T z is below a threshold zt . Two options are preferred for setting this threshold, zt = B2 × 4 works for many applications, and also the threshold can be estimated adaptively (disclosed later). This adaptivity has not been presented previously.
- There is no significant gradient in the block under consideration in the previous frame.
- ∥u∥ < ut , where ut = 0.01 is preferred.
- At each iteration, the new estimate for motion may be fractional. In that case bilinear interpolation is used to retrieve the pixels at the off grid locations in the previous frame.
- The term µ is more correctly identified as a regularising term which makes G T G invertible and also controls the rate of convergence of the solution. In [5] a recipe for adapting µ to the conditioning of G T G is given and this is used in this invention. However, when G T G is ill conditioned, this may be a symptom of either low gradient, or there is a dominant edge in the block. It is well known that motion cannot be accurately estimated in the direction parallel to an edge. [5] does not address this issue. In [16] a recipe for addressing this problem is presented, however the solution there is not recursive and does not incorporate any of the good convergence properties of
equation 4. By combining these ideas together, a new adaptation for µ can be proposed. - The essense of this new adaptation is to measure the ill-conditioning in G T G and then select either the regularised solution disclosed above, or use Singular Value Decomposition in the case of ill- conditioning. This is the adaptation used in this invention. Therefore, at each iteration the motion update is estimated as follows.
- Note that the same situation exists for forward and backward motion estimation.
- The threshold zt determines which blocks are detected to contain moving objects or not Assuming that most of the image contains pixels that are not part of moving objects, then by calculating the interframe difference for no motion most of the sites can contribute to an estimate of zt . The steps are as follows to calculate zt for estimating motion between the current and previous frame pair.
- 1. Calculate ε(x) = [In (x) - I n-1(x)]2 at each site x in frame n.
- 2. Create a histogram of these values using bins of 0... 255 in unit steps.
- 3. Reject those sites constituting the upper P% of the histogram. P = 60 is a suitable conservative value.
- 4. For those remaining sites calculate the mean value of ε(x), ε̂.
- 5. Set zt = B 2 ×ε̂
- In this invention block sizes vary depending on the size of the image. For an image of size 1440 x 1152, the preferred B = 16, for 720 × 576, B = 9, for 360 × 288 B = 9, for 144 × 288 B = 5, and for all smaller resolutions the same.
- The previous steps result in a motion vector per image block. To initialise each pixel with a motion vector, the block vector has to be assigned to individual pixels. This is done for each block with the steps as below
- 1. A set of 9 candidate vectors are selected for a block. These candidates are collected from the current block, and its eight nearest neighbours.
- 2. The candidates are then pruned to remove repeated vectors, or vectors which are within 0.1 pixels of each other in length. Denote the pruned candidate vector as v c where there are C candidates in all.
- 3. For each pixel in the block, the prediction error for each candidate |In (x) - I n-1(x + v c )| is measured.
- 4. The vector candidate yielding the lowest prediction error is used as the assigned vector for this site.
- The same process is used for forward motion assignment. Note that a simpler assigment process is to just repeat the block based vector for all pixels in the block. That idea does work, but sometimes results in more iterations required in the next and final step. The preferred process is the candidate selection disclosed here. This is shown as block (5) in the
figure 4 . - Given initial estimates for motion from any prior motion estimation step at a particular resolution level L, the task now is to incorporate new constraints in order to estimate the true motion information. Consider a single site x in frame n. It is required to estimate d n,n-1, d n,n+1, Ob , Of at that site. Note that the position argument has been dropped for simplicity. Proceeding in a probabilistic fashion, it is required to manipulate p(d n,n-1, d n,n+1, s|D-, S-, In , I n-1, I n+1). Here D-, S - denote the state of the pixel sites in terms of motion and occlusion at the pixels in the neighbourhood of the size x, but NOT including the site x itself. This neighbourhood may also include pixels in the previous and next frames. In other words, it is required to manipulate the probability distribution of the unknowns (motion, occlusion) GIVEN the motion, occlusion data at the pixel sites around and image data in the current, previous and next frames.
-
- To use this expression, suitable functional forms have to be designed for each of the terms above. These are disclosed below.
-
-
- This expression encodes the notion that when there is no occlusion, the current and next or previous pixels, compensated for motion, should be similar.
- The first piece of prior information to be encoded is the fact that in a local region of pixels, it is expected that the occlusion state s and the motion field d should be smooth. A markov random field is used to encode this idea. The spatial smoothness prior for backward motion is the same as for forward motion and is as follows.
- Here the vectors p j are taken from the 8 nearest neighbour sites to x(N), the site under consideration. λ = 1 for the neighbourhood sites on the vertical and the horizontal, and
figure 5 for clarification of the spatial relationship between the current site x and its neighbourhood. - The function f(·) allows for motion discontinuities by encoding the idea that either the motion field is generally so smooth that the vectors are the same, but where they are different they are very different. Many different robust functions may be used here, e.g. Huber's function, Tukey's function. Here a simple robust function is preferred which is as follows
- In another alternate form for f(·) an explicit image edge detector may be used e.g. Canny or any zero crossing edge detector. When an edge is detected between a pair of vectors in the calculation above, the output is 0. In cases where there is no edge, the output is the usual euclidean distance. This idea allows motion across an image edge to be independent, and assumes that motion edges are likely to occur at image edges.
-
- In this case the occlusion configuration at the current site is encouraged to be similar to the configuration at sites in the neighbourhood. See
figure 5 for clarification of the spatial relationship between the current site x and its neighbourhood. - Another observation typically made about any motion in a real image sequence is that the motion is smooth in time, except when there is occlusion. See
figure 7 for a clarification. There are several ways to encode this notion mathematically. The simplest is to employ already existing estimates for motion in the previous and next frames as follows. - This expression encourages vectors to agree between frames. Thus, provided there is no occlusion, the motion between n and n - 1 for instance, should be the same as the motion between n -1 1 and n. The state s = 11 is not allowed here. The temporal relationship between the motion vectors used here is indicated in
figure 7 . - This prior may be configured in another fashion by comparing d n,n-1 with d n-1,n-2 (and similar for d n,n+1) for brevity this is not explicitly stated here. However this alternate prior can be constructed by replacing d n-1,n with d n-1,n-2 and replacing d n+1,n with d n+1,n+2 in the expression above. In practice the expression above is preferred but there are situations in which the alternate expression may be suitable e.g. in the case where the current frame is missing for some reason. Typically β1 = β, and
- The problem is highly non-linear. However, the key idea is to recognise that given existing estimates for motion, the correct motion estimate already exists somewhere in the image. This implies then that a solution can be generated by combining the Iterated Conditional Modes algorithm of Besag [1] with a candidate selection process. In essence, the final algorithm proceeds by selecting a subset of vectors from the surrounding region in time and space, then evaluating each of these vectors using the expression in
equation 9 and combining it with occlusion. The candidate with the best probability is selected for the current site, and then the next site is visited. Since all the candidates are being substituted into the same expression, using the log probability removes the need to calculate exponentials. Furthermore, maximising probability is then the same as minimising the log probability, therefore the evaluation process is simplified extensively. This step is shown as block (6) infigure 4 . - 1. A set of initial candidates for motion are created by using the motion at the current site x and the 8 nearest neighbours. In addition another candidate can be generated by selecting the vector that occurs the most in a block of B 1̇ × B 1̇ pixels around the current site. Here B 1̇ = 64 is sensible. This yields 10 candidates.
Finally a set of additional candidates can be generated by projecting vectors from the previous or next frames into the current one. Thus vectors d n-n (x) can be mapped to become the candidate for forward motion at site x + d n-1,n (x) in frame n. Similarly for n - 1. Of course using this projection idea implies that not all the sites in frame n get hit with the same number of temporal candidates. Nevertheless at most sites in n temporal candidates will result.Figures 6 and7 show this possibility.
This set of vectors (the initial 10 and the additional temporal candidates if they exist) is then pruned to remove repeated vectors, or those that are closer together than vl pixels in length. vl = 0.1 is preferred. Two sets are generated - 2. The candidate sets are combined to create candidate pairs. Thus if there are Nb backward and Nf forward candidates for motion, there are Nc = Nb × Nf pairs of combinations.
- 3. With each of the Nc candidate pairs, there are 4 possibilities for occlusion states s. Thus 4Nc candidates are created by associating every candidate motion pair with 4 of the occlusion candidates.
- 4. For each candidate
- 5. The total energy is then calculated as E(vc ) = E 1(v c ) + E 2(v c ) + E 3(v c ) + E 4(v c )
- 6. The configuration v c that gives the least energy E(v c ) over all the candidates is selected as the solution at that site.
- In practice a number of iterations of the algorithm above are used over the whole image. However, in each iteration over the image, it is advantageous to avoid scanning consecutive pixels. This would reuse neighbourhoods that overlap and it likely to propagate errors. Many alternative scan patterns can be used. A checkerboard scan pattern is preferred here. This is shown in
figure 8 . The process terminates when either there is no change of the vector and occlusion solution during an iteration anywhere in the image, or when the iterations exceed a maximum amount. 10 is a preferred maximum number of iterations. - In addition, and particularly for offline film postproduction and fluid flow tracking applications, multiple passes over the entire sequence are advantageous. These passes are useful particularly when the temporal smoothness prior as for instance specified in
equation 13. - This process is repeated at each image resolution level. To initialise motion and occlusion information at a level L given termination at level L =1 it is necessary to upsample the motion and occlusion field by a factor of 2. This is done by zero-order hold, i.e. at a site x in level L, the inital motion information comes from the site x/2 in level L-1, rounded to the nearest pixel. See
figure 2 for an indication of the multiresolution creation. This step is denoted block (4) infigure 4 . - The algorithm described here can operate on either a block or pixel basis. All the pixel wise operations disclosed above can be implemented on a block basis instead. Vector differences are then calculated between vectors specified on a block rather than a pixel grid. It is further computationally attractive to postpone the pixel assignment step till the final resolution level L = 0. In that case, occlusion information is ignored at previous levels (i.e. s = 00 everywhere), and only estimated at level L = 0.
- This is the preferred configuration for this process. It is denoted block (3) in
figure 4 . - In the postproduction community it is common to find a situation in which part of the image is known to contain content that is not important for motion estimation. This also occurs in MPEG4 in which for a certain object, the requirement is to estimate the motion of that object, ignoring the motion of the image material around it. In the postproduction scenario the requirement to ignore certain image regions arises particularly when views are to be interpolated between a given set of images representing different camera view angles, or taken at different times. A process called inbetweening. In that scenrio it is sometimes nesessary to estimate motion of different objects separately, and the user may specify the location of the object manually. In MPEG4 the notion is that each object should have its own associated motion that is compressed separately from the motion of the rest of the objects in the image.
- In both cases the motion estimation problem is therefore accompanied by some kind of mask information. The mask is an image that is the same size as the images being handled. The values at pixels in the mask are set to 1 where the corresponding image pixel is to be considered and set to 0 where the image pixel is to be ignored. Denote this mask or weights image corresponding to frame n as Wn . The value of the pixels in this image are at most 1 and at least 0. Their values may occupy a continuum of values inbetween or be binary. This weight information can be incorporated into the invention disclosed here in order to estimation motion and occlusion only for the user specified regions in the mask.
- The modification required is to weight the interframe difference measurements in
equations -
- Note again that ωn need not contain binary values only.
- This process can be implemented in hardware using FPGA arrays, and a CPU controller. More interestingly, recognise that it is the interframe differences and intervector differences that comsume most of the compute activity in this process. The Graphics Processing Unit (GPU) in a general purpose PC can perform such operations at a much higher rate than the CPU. To exploit the GPU, it is required to export to the GPU memory the image frames, the current motion vector fields, and occlusion information. This data can be held in p-buffers on the GPU. Computational efficiency is achieved by exploiting the checkerboard scan at each iteration of the process. Consider
figure 8 .Pixels checkerboard -
- [1] J. Besag. On the statistical analysis of dirty pictures. Journal of the Royal Statistical Society B, 48:259 302, 1986.
- [2] J. Biemond, L. Looijenga, D. E. Boekee, and R.HJ.M. Plompen. A pel-recursive Wiener based displacement estimation algorithm. Signal Processing, 13:399-412, 1987.
- [3] M. Bierling. Displacement estimation by hierarchical block matching. In SPIE VCIP, pages 942-951, 1988.
- [4] M. J. Black and P. Anandan. A framework for the robust estimation of optical flow. In Fourth International Conf. on Computer Vision, pages 231-236, May 1993.
- [5] L. Böröczky, J. N. Driessen, and J. Biemond. Adaptive algorithms for pel-recursive displacement estimation. In Proceeding SPIE VCIP, pages 1210-1221, 1990.
- [6] P. Bouthémy, M. Gelgon, and F. Ganansia. A unified approach to shot change detection and camera motion characterization. IEEE Transactions on Circuits and Systems for Video Technology, 9:1030-1044, 1999.
- [7] H. Denman, N. Rea, and A.Kokaram. Content based analysis for video from snooker broadcasts. In International Conference on Image and Video Retrieval CIVR2002, July 18-19 2002.
- [8] D. P. Elias and N. G. Kingsbury. An efficient block segmentation algorithm for true motion estimation. In Sixth IEE International Conference on Image Processing and Its Applications, .
- [9] KERDRANVAT MICHEL (FR), BOLENDER NADINE (FR), HACKETT ANDREW (FR), and KNEE MICHAEL (GB). Method and apparatus for motion estimation using block matching. US Patent, (
US6438170 ), August 20th 2002. - [10] M. Ghanbari. The cross-search algorithm for motion estimation. IEEE Transactions on Communications, 38:950-953, July 1990.
- [11] Gerard De Haan and Anna Pelagotti. Motion vector estimation and detection of covered/uncovered image parts. Patent, (
WO9922520 - [12] H. Higgins. The interpretation of a moving retinal image. Proceedings of the Royal Society, London, B 208:385-397, 1980.
- [13] H. Higgins. The visual ambiguity of a moving plane. Proceedings of the Royal Society, London, B 223:165-175, 1984.
- [14] B. Horn and B. Schunck. Determining optical flow. Artificial Intelligence, 17:185-203,1981.
- [15] A. C. Kokaram. Motion Picture Restoration: Digital Algorithms for Artefact Suppression in Degraded Motion Picture Film and Video. Springer Verlag, ISBN 3-540-76040-7, 1998.
- [16] D. M. Martinez. Model-based motion estimation and its application to restoration and interpolation of motion pictures. PhD thesis, Massachusetts Institute of Technology, 1986.
- [17] Gerard De Haan (NL). Method for motion vector determination. Patent, (
WO2004082294 ), September 23rd 2004. - [18] V. Seferidis and M. Ghanbari. Hierarchical motion estimation using texture analysis. In IEE 4th Conference on Image Processing, pages 61-64, 1992.
- [19] Christoph Stiller. Method for estimation of motion in a captured image. European Patent, (
EP0477616 ), April 1st 1992. - [20] A. Murat Tekalp. Digital Video Processing. Prentice Hall, 1995.
- [21] A. Zaccarin and B. Liu. Fast algorithms for block motion estimation. In IEEE ICASSP, .
- [22] M.J. Black and P. Anandan. Robust dynamic motion estimation over time. In CVPR91, pages 296-302, 1991.
Claims (28)
- A method for estimating motion and occlusion between three or more image frames, comprising:determining an energy for a set of candidate pairs, each candidate pair including a forward motion vector candidate and a backward motion vector candidate, by jointly evaluating the motion vector candidates and occlusion states of the set of candidate pairs using a combination of interframe difference, spatial motion correlation, temporal motion correlation and occlusion information, wherein the spatial motion correlation incorporates motion discontinuities in space and the temporal motion correlation incorporates motion discontinuities in time; and estimating motion and occlusion between the three or more frames by selecting a candidate pair from the set of candidate pairs based on the determined energies.
- A method as in claim 1, wherein each candidate pair further includes an occlusion state vector including a forward occlusion state and a backward occlusion state used for determining the energy for the set of candidate pairs.
- A method as in claim 1 further comprising: generating the set of candidate pairs for motion estimation wherein the candidate pairs are derived from the surrounding region in time and space, the current site, and the most common vector in a block centred on the current site.
- A method as in claim 1 further comprising: generating the set of candidate pairs for motion estimation wherein the motion vector candidates are derived from the eight nearest neighbours, the current site, the most common vector in a block centred on the current site, and the motion vector candidates are created by projecting motion from a previous and a next frame into a current frame.
- A method as in any of the preceding claims, wherein provision is made for ignoring user specified regions by weighting out the correlation terms using a weights image wn .
- A method as in any of the preceding claims, in which the spatial motion correlation for backward motion is expressed using a robust functional f(·) as follows:p(d n,n-1| D -) is the spatial motion correlation for backward motion;A is a variable that controls the overall smoothness strength;j is an identifier of sites in the surrounding region around the site x being estimated;λ j is a pre-determined constant;f(·) is any robust function;dn,n-1 is the motion vector between the previous frame and the current frame; andpj is a motion vector for site j.
- A method as in any of the preceding claims, wherein the spatial motion correlation is expressed using a robust functional f(·) in which the output of f(·) is zero if there is an edge between the current pixel site and the neighbourhood pixel site under consideration.
- A method as in any of the preceding claims, wherein the spatial occlusion correlation is expressed using a form which compares a current occlusion configuration at the current site with an occlusion configuration of the 8 nearest neighbours.
- A method as in any of the preceding claims, wherein the temporal motion correlation is expressed using the difference between motion vectors in time, including at least one forward motion vector and at least one backward motion vector if there is no occlusion.
- A method as in any of the preceding claims wherein the motion vectors in the surrounding region in time and space are initialized using a combination of gradient based estimation and eigenvalue analysis on an iterative basis in which each iteration over a block yields an updated initial estimate of motion that includes an update to an initial or previously update initial estimate for motion calculated by using the ill-conditioning of gradients to select either a regularised Wiener based solution or a singular value decomposition solution.
- A method as in any of the preceding claims wherein the motion vectors in the surrounding region in time and space are initialized using a combination of gradient based estimation and eigenvalue analysis on an iterative basis in which each iteration over a block yields an updated initial estimate d̂ of motion that includes an update u to an initial or previously updated initial estimate d 0 of motion as follows:amax is an intermediate variable;emax is an eigen vector;G is a matrix containing the horizontal and vertical gradients at each site;λ max is a maximum eigen value for GTG ;λmin is a minimum eigen value for GTG ;α is a threshold on the allowable ill-conditioning in the matrix GTG ;µ is a regularizing term;I is a value at a current site; andz is a vector that collects displaced differences at each site.
- A method as in claim 10 or claim 11, wherein the stopping criterion for the iterations is at least one of the following:(a) ∥ z ∥< zl , where ∥ z ∥ is a sum squared prediction error vector related to motion compensated interframe differences and zt is a threshold estimated according to an adaptive method that employs a histogram of the zero-motion interframe differences;(b) There is no significant gradient in the block in the previous or next frame;(c) The magnitude ∥ u ∥ of the update u to a current estimate of motion is less than a threshold ut ;(d) The number of iterations exceeds a maximum allowed.
- A method as in claim 10 or claim 11, wherein the stopping criterion for the iterations is one of the following:(a) There is no significant change of the motion and occlusion states after a complete pass over the image;(b) The number of iterations exceeds a maximum allowed number.
- A method as in any of the preceding claims, using a Graphics Processing Unit to determine interframe differences and intervector differences.
- A method as in any of the preceding claims, wherein processing occurs over a series of different resolution images, the results at the coarser resolutions being propagated and refined over subsequent finer resolutions.
- A method as in any of the preceding claims, wherein the propagation of motion from a coarser resolution to a finer resolution includes assigning motion derived from blocks at the coarser resolution to blocks and/or pixels at the finer resolution such that the motion selected gives the lowest prediction error.
- A method as in any of the preceding claims, wherein the motion and/or occlusion field is refined over a number of iterations by selecting the motion and/or occlusion that minimises an energy based on the sum of energies derived from inter-frame image correlation measures, intra-frame and inter-frame motion correlation measures, and/or intra-frame and/or inter-frame occlusion measures.
- A method as in any of the preceding claims, wherein candidates are evaluated based on
the sum of energy functions as below
wherein:EI(vc), E2(vc), E3(vc), and E4(vc) are energy functions;sc is an occlusion state vector of the current site;In(x) is the value at site x and frame n;β is a constant used as a hypothesis check on outliers;Λ is a variable that controls the overall smoothness strength;j is an identifier of sites in the surrounding region around the site x being estimated;λ j is a pre-determined constant;f(·) is any robust function;dn,n-1 is a motion vector between the previous frame and the current frame;pj is a position vector for site j;s(pj ) is the occlusion state vector of pj;β1 is a constant used as a hypothesis check on outliers. - A method as in any of the preceding claims, wherein motion and/or occlusion estimates are generated at each pixel in an image and the pixels in the current image are visited according to a checkerboard scanning pattern.
- A method as in any of the preceding claims, wherein multiple iterations are made across the entire image sequence, reusing motion and/or occlusion estimates generated from previous iterations.
- A method as in any of the preceding claims, wherein candidates are augmented with occlusion information.
- A method as in claim 20, wherein candidates are augmented with occlusion information specified as 4 states s indicating occlusion in the forward and backward directions.
- A method as in claim 22, wherein the image, motion and occlusion correlation measures are multiplied by the product of motion compensated weights in more than one frame.
- A method as in any of the preceding claims, wherein the inter-frame image differences or correlation, and intra-frame motion and/or occlusion differences or correlation, are multiplied by the product of motion compensated weights coincident with pixel sites.
- A method as in any of the preceding claims, wherein provision is made for ignoring portions of the image using a weights image wn in which a value of 0 indicates pixel data to be ignored and a value of 1 indicates valid pixel data, and in which the energy evaluations used are as follows:
in whichE1(vc), E2(vc), E3(vc), and E4(vc) are energy evaluations;sc is an occlusion state vector of the current site;In(x) is the value at site x and frame n;β is a constant used as a hypothesis check on outliers;A is a variable that controls the overall smoothness strength;j is an identifier of sites in the surrounding region around the site x being estimated;λ j is a pre-determined constant;f(·) is any robust function;dn,n-1 is a motion vector between the previous frame and the current frame;pj is a motion vector for site j;s(pj ) is the occlusion state vector of pj;β1 is a constant used as a hypothesis check on outliers. - A method as in any of the preceding claims, wherein the set of candidate vectors is created using at least the steps of:creating two sets of initial motion vector candidates, one for each of forward and backwards motion, using at least one of: motion estimates from the next frame or the previous frame, the most common vector in a block centred on the current site, the vectors in the neighbourhood of the current site, or the vector at the current site;pruning each of the two sets of initial motion vector candidates to remove repeated vectors based on a closeness threshold vt.combining the two sets into a set of candidate pairs; andcreating the set of candidate vectors by combining the set of candidate pairs with a set of occlusion state possibilities.
- A method as in claim 10, claim 11, claim 12, or claim 13, wherein the initial estimate is zero.
- A method as in claim 10, claim 11, claim 12, claim 13, or claim 27, wherein the motion vectors in the surrounding region in time and space are initialized on a block level, and an updated initial motion estimate is assigned to pixels in the block using the steps of:selecting a set of pixel candidate vectors from the current block and its nearest neighbors;measuring a prediction error for each of the pixel candidate vectors for each pixel in the current block; andselecting for each pixel an initial motion vector from the pixel candidate vector having the smallest prediction error for that pixel.
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
GBGB0500174.8A GB0500174D0 (en) | 2005-01-06 | 2005-01-06 | Method for estimating motion and occlusion |
PCT/IE2006/000001 WO2006072925A2 (en) | 2005-01-06 | 2006-01-05 | Method for estimating motion and occlusion |
Publications (2)
Publication Number | Publication Date |
---|---|
EP1854067A2 EP1854067A2 (en) | 2007-11-14 |
EP1854067B1 true EP1854067B1 (en) | 2015-07-01 |
Family
ID=34203683
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
EP06700103.2A Active EP1854067B1 (en) | 2005-01-06 | 2006-01-05 | Method for estimating motion and occlusion |
Country Status (4)
Country | Link |
---|---|
US (2) | US8064644B2 (en) |
EP (1) | EP1854067B1 (en) |
GB (1) | GB0500174D0 (en) |
WO (1) | WO2006072925A2 (en) |
Families Citing this family (29)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8605786B2 (en) * | 2007-09-04 | 2013-12-10 | The Regents Of The University Of California | Hierarchical motion vector processing method, software and devices |
KR20110022133A (en) * | 2009-08-27 | 2011-03-07 | 삼성전자주식회사 | Move estimating method and image processing apparauts |
US20120033896A1 (en) * | 2010-08-08 | 2012-02-09 | Geoffrey Louis Barrows | Visual Motion Processing with Offset Downsampling |
GB2501836B (en) * | 2011-03-09 | 2014-08-06 | Canon Kk | Video encoding |
US9326008B2 (en) | 2012-04-10 | 2016-04-26 | Google Inc. | Noise reduction for image sequences |
US9338451B2 (en) | 2012-04-12 | 2016-05-10 | Qualcomm Incorporated | Common spatial candidate blocks for parallel motion estimation |
KR101908388B1 (en) | 2012-07-19 | 2018-10-17 | 삼성전자 주식회사 | Occlusion reconstruction apparatus and method, and occlusion reconstructing video decoding apparatus |
KR101977802B1 (en) * | 2012-10-10 | 2019-05-13 | 삼성전자주식회사 | Motion estimation apparatus and method thereof in a video system |
US9300906B2 (en) * | 2013-03-29 | 2016-03-29 | Google Inc. | Pull frame interpolation |
US9772983B2 (en) * | 2013-09-19 | 2017-09-26 | Verizon Patent And Licensing Inc. | Automatic color selection |
US20150110190A1 (en) * | 2013-10-21 | 2015-04-23 | Sony Corporation | Method and apparatus for motion estimation |
CN104754179B (en) * | 2013-12-31 | 2017-11-07 | 澜起科技（上海）有限公司 | The fully-automated synthesis method and system of static nature information in dynamic image |
US9554086B1 (en) * | 2014-01-03 | 2017-01-24 | Pixelworks, Inc. | True motion vector editing tool |
JP6344953B2 (en) * | 2014-04-07 | 2018-06-20 | パナソニック株式会社 | Trajectory analysis apparatus and trajectory analysis method |
US9917988B2 (en) * | 2014-04-09 | 2018-03-13 | Mediatek Inc. | Method for detecting occlusion areas |
US10554965B2 (en) | 2014-08-18 | 2020-02-04 | Google Llc | Motion-compensated partitioning |
US9986260B2 (en) * | 2014-11-14 | 2018-05-29 | Avago Technologies General Ip (Singapore) Pte. Ltd. | Census transform data compression methods and systems |
US10268901B2 (en) * | 2015-12-04 | 2019-04-23 | Texas Instruments Incorporated | Quasi-parametric optical flow estimation |
US9589316B1 (en) * | 2016-01-22 | 2017-03-07 | Intel Corporation | Bi-directional morphing of two-dimensional screen-space projections |
US10397600B1 (en) | 2016-01-29 | 2019-08-27 | Google Llc | Dynamic reference motion vector coding mode |
US10462457B2 (en) | 2016-01-29 | 2019-10-29 | Google Llc | Dynamic reference motion vector coding mode |
US10277844B2 (en) | 2016-04-20 | 2019-04-30 | Intel Corporation | Processing images based on generated motion data |
US20180192071A1 (en) * | 2017-01-05 | 2018-07-05 | Mediatek Inc. | Decoder-side motion vector restoration for video coding |
WO2019234673A1 (en) * | 2018-06-07 | 2019-12-12 | Beijing Bytedance Network Technology Co., Ltd. | Chroma dmvr |
TWI719519B (en) | 2018-07-02 | 2021-02-21 | 大陸商北京字節跳動網絡技術有限公司 | Block size restrictions for dmvr |
JP7319365B2 (en) | 2018-11-22 | 2023-08-01 | 北京字節跳動網絡技術有限公司 | Adjustment method for inter-prediction based on sub-blocks |
JP7481430B2 (en) * | 2019-08-13 | 2024-05-10 | 北京字節跳動網絡技術有限公司 | Motion Accuracy in Subblock-Based Inter Prediction |
CN114762330A (en) | 2019-09-22 | 2022-07-15 | 北京字节跳动网络技术有限公司 | Sub-picture encoding and decoding of video |
US11172219B2 (en) * | 2019-12-30 | 2021-11-09 | Texas Instruments Incorporated | Alternating frame processing operation with predicted frame comparisons for high safety level use |
Family Cites Families (8)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
DE4030703A1 (en) | 1990-09-28 | 1992-04-02 | Bosch Gmbh Robert | METHOD FOR ESTIMATING MOTION IN A TAKEN IMAGE |
DE69423166T2 (en) * | 1993-09-08 | 2000-07-06 | Thomson Consumer Electronics | Method and device for motion evaluation with block matching |
JP2001507552A (en) | 1997-10-29 | 2001-06-05 | コーニンクレッカ フィリップス エレクトロニクス エヌ ヴィ | Motion vector prediction and detection of hidden / exposed image parts |
WO2000011863A1 (en) * | 1998-08-21 | 2000-03-02 | Koninklijke Philips Electronics N.V. | Problem area location in an image signal |
US6466624B1 (en) * | 1998-10-28 | 2002-10-15 | Pixonics, Llc | Video decoder with bit stream based enhancements |
US7085401B2 (en) * | 2001-10-31 | 2006-08-01 | Infowrap Systems Ltd. | Automatic object extraction |
WO2004082294A1 (en) | 2003-03-14 | 2004-09-23 | Koninklijke Philips Electronics N.V. | Method for motion vector determination |
JP4198608B2 (en) * | 2004-01-15 | 2008-12-17 | 株式会社東芝 | Interpolated image generation method and apparatus |
-
2005
- 2005-01-06 GB GBGB0500174.8A patent/GB0500174D0/en not_active Ceased
-
2006
- 2006-01-05 US US11/813,464 patent/US8064644B2/en active Active
- 2006-01-05 WO PCT/IE2006/000001 patent/WO2006072925A2/en active Application Filing
- 2006-01-05 EP EP06700103.2A patent/EP1854067B1/en active Active
-
2011
- 2011-10-31 US US13/285,496 patent/US8229174B2/en active Active
Also Published As
Publication number | Publication date |
---|---|
GB0500174D0 (en) | 2005-02-16 |
EP1854067A2 (en) | 2007-11-14 |
US8229174B2 (en) | 2012-07-24 |
WO2006072925A2 (en) | 2006-07-13 |
US8064644B2 (en) | 2011-11-22 |
US20080285806A1 (en) | 2008-11-20 |
WO2006072925A3 (en) | 2006-12-28 |
US20120044998A1 (en) | 2012-02-23 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
EP1854067B1 (en) | Method for estimating motion and occlusion | |
Kokaram et al. | Interpolation of missing data in image sequences | |
US6480615B1 (en) | Motion estimation within a sequence of data frames using optical flow with adaptive gradients | |
Wang et al. | Best neighborhood matching: An information loss restoration technique for block-based image coding systems | |
Stiller | Object-based estimation of dense motion fields | |
US6252974B1 (en) | Method and apparatus for depth modelling and providing depth information of moving objects | |
US8385630B2 (en) | System and method of processing stereo images | |
EP0652536B1 (en) | Method and apparatus for estimating motion vector fields by rejecting local outliers | |
EP1639829B1 (en) | Optical flow estimation method | |
Lim et al. | Estimation of occlusion and dense motion fields in a bidirectional Bayesian framework | |
JP2004530367A (en) | Motion vector prediction method and motion vector prediction device | |
KR20060055296A (en) | Methods to estimate noise variance from a video sequence | |
You et al. | Moving object tracking in H. 264/AVC bitstream | |
Wei et al. | An efficient two-pass MAP-MRF algorithm for motion estimation based on mean field theory | |
Lee et al. | MAP-based stochastic diffusion for stereo matching and line fields estimation | |
EP1955548B1 (en) | Motion estimation using motion blur information | |
JP2006350618A (en) | Moving image processor | |
Kuo et al. | An efficient motion estimation algorithm for video coding using Kalman filter | |
Kokaram | Practical, unified, motion and missing data treatment in degraded video | |
Stuke et al. | Estimation of multiple motions using block matching and markov random fields | |
Corrigan et al. | Pathological motion detection for robust missing data treatment | |
Kokaram | Practical mcmc for missing data treatment in degraded video | |
Morier et al. | Relative depth estimation of video objects for image interpolation | |
Malo et al. | Perceptually weighted optical flow for motion-based segmentation in MPEG-4 paradigm | |
Wu | Multi-view hockey tracking with trajectory smoothing and camera selection |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PUAI | Public reference made under article 153(3) epc to a published international application that has entered the european phase |
Free format text: ORIGINAL CODE: 0009012 |
|
17P | Request for examination filed |
Effective date: 20070815 |
|
AK | Designated contracting states |
Kind code of ref document: A2Designated state(s): AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HU IE IS IT LI LT LU LV MC NL PL PT RO SE SI SK TR |
|
DAX | Request for extension of the european patent (deleted) | ||
17Q | First examination report despatched |
Effective date: 20090702 |
|
RAP1 | Party data changed (applicant data changed or rights of an application transferred) |
Owner name: GOOGLE INC. |
|
RIN1 | Information on inventor provided before grant (corrected) |
Inventor name: ANIL KOKARAM |
|
GRAP | Despatch of communication of intention to grant a patent |
Free format text: ORIGINAL CODE: EPIDOSNIGR1 |
|
INTG | Intention to grant announced |
Effective date: 20150109 |
|
GRAS | Grant fee paid |
Free format text: ORIGINAL CODE: EPIDOSNIGR3 |
|
GRAA | (expected) grant |
Free format text: ORIGINAL CODE: 0009210 |
|
AK | Designated contracting states |
Kind code of ref document: B1Designated state(s): AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HU IE IS IT LI LT LU LV MC NL PL PT RO SE SI SK TR |
|
REG | Reference to a national code |
Ref country code: GBRef legal event code: FG4D |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R081Ref document number: 602006045820Country of ref document: DEOwner name: GOOGLE LLC (N.D.GES.D. STAATES DELAWARE), MOUN, USFree format text: FORMER OWNER: KOKARAM, ANIL, BRAY, WICKLOW, IE |
|
REG | Reference to a national code |
Ref country code: ATRef legal event code: REFRef document number: 734358Country of ref document: ATKind code of ref document: TEffective date: 20150715Ref country code: CHRef legal event code: EP |
|
REG | Reference to a national code |
Ref country code: IERef legal event code: FG4D |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R096Ref document number: 602006045820Country of ref document: DE |
|
REG | Reference to a national code |
Ref country code: ATRef legal event code: MK05Ref document number: 734358Country of ref document: ATKind code of ref document: TEffective date: 20150701 |
|
REG | Reference to a national code |
Ref country code: NLRef legal event code: MPEffective date: 20150701 |
|
REG | Reference to a national code |
Ref country code: LTRef legal event code: MG4D |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: LTFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20150701Ref country code: FIFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20150701Ref country code: GRFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20151002Ref country code: LVFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20150701 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: ESFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20150701Ref country code: SEFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20150701Ref country code: PTFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20151102Ref country code: ISFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20151101Ref country code: PLFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20150701Ref country code: ATFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20150701 |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R097Ref document number: 602006045820Country of ref document: DE |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: ITFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20150701Ref country code: CZFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20150701Ref country code: SKFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20150701Ref country code: EEFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20150701Ref country code: DKFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20150701 |
|
PLBE | No opposition filed within time limit |
Free format text: ORIGINAL CODE: 0009261 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: NO OPPOSITION FILED WITHIN TIME LIMIT |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: ROFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20150701Ref country code: BEFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20160131 |
|
26N | No opposition filed |
Effective date: 20160404 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: LUFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20160105Ref country code: SIFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20150701 |
|
REG | Reference to a national code |
Ref country code: CHRef legal event code: PL |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: MCFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20150701 |
|
REG | Reference to a national code |
Ref country code: FRRef legal event code: STEffective date: 20160930 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: CHFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20160131Ref country code: LIFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20160131 |
|
REG | Reference to a national code |
Ref country code: IERef legal event code: MM4A |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: FRFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20160201 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: BEFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20150701 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: IEFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20160105 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: NLFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20150701 |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R082Ref document number: 602006045820Country of ref document: DERepresentative=s name: SPLANEMANN PATENTANWAELTE PARTNERSCHAFT MBB, DERef country code: DERef legal event code: R081Ref document number: 602006045820Country of ref document: DEOwner name: GOOGLE LLC (N.D.GES.D. STAATES DELAWARE), MOUN, USFree format text: FORMER OWNER: GOOGLE INC., MOUNTAIN VIEW, CALIF., US |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: HUFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMIT; INVALID AB INITIOEffective date: 20060105Ref country code: CYFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20150701 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: TRFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20150701 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: BGFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20150701 |
|
PGFP | Annual fee paid to national office [announced via postgrant information from national office to epo] |
Ref country code: GBPayment date: 20230127Year of fee payment: 18 |
|
P01 | Opt-out of the competence of the unified patent court (upc) registered |
Effective date: 20230505 |
|
PGFP | Annual fee paid to national office [announced via postgrant information from national office to epo] |
Ref country code: DEPayment date: 20240129Year of fee payment: 19 |
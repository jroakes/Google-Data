US5991713A - Efficient method for compressing, storing, searching and transmitting natural language text - Google Patents
Efficient method for compressing, storing, searching and transmitting natural language text Download PDFInfo
- Publication number
- US5991713A US5991713A US08/979,181 US97918197A US5991713A US 5991713 A US5991713 A US 5991713A US 97918197 A US97918197 A US 97918197A US 5991713 A US5991713 A US 5991713A
- Authority
- US
- United States
- Prior art keywords
- dictionary
- predetermined
- file
- text
- words
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Lifetime
Links
Images
Classifications
-
- H—ELECTRICITY
- H03—ELECTRONIC CIRCUITRY
- H03M—CODING; DECODING; CODE CONVERSION IN GENERAL
- H03M7/00—Conversion of a code where information is represented by a given sequence or number of digits to a code where the same, similar or subset of information is represented by a different sequence or number of digits
- H03M7/30—Compression; Expansion; Suppression of unnecessary data, e.g. redundancy reduction
- H03M7/3084—Compression; Expansion; Suppression of unnecessary data, e.g. redundancy reduction using adaptive string matching, e.g. the Lempel-Ziv method
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/20—Natural language analysis
- G06F40/205—Parsing
- G06F40/221—Parsing markup language streams
Definitions
- the present invention relates to information storage and retrieval systems. Specifically, the invention is directed to a method for tokenizing and compressing text. The method is ideally suited to text compression within a distributed linked file system such as hypertext markup language (“HTML”) files stored on the internet.
- HTML hypertext markup language
- each document has its own unique encoding for each word.
- the word "house” might be assigned a numeric value of 103, and in another document the word "house” might be assigned the number 31464.
- This document specific tokenization means that a unique table or vocabulary must be maintained as part of each document that maps the tokens assigned to words.
- a vocabulary table must be stored with the compressed text and must be transmitted with compressed text to any processor (client or server) that will either further store, search or decompress the document.
- the assignment of tokens to words is so tightly optimized to the frequency distribution of words in the particular encoded document that when the existing text needs to be updated by even a few words or phrases the entire encoding scheme must be redone to accommodate any new strings that may be present.
- the strings are assigned their own unique tokens. Examples of such character strings are numeric values, codes, table framing characters or other character-based diagrams. While conventional compression methods may be acceptable when documents contain only a small number of such strings, the encoding scheme can break down if the document requires representation of larger numbers of such strings.
- Examples of documents that might be difficult to encode are those that contain scientific or financial tables that have many unique numbers.
- Fifth, the close optimization of token assignment to word frequency may be complicated with documents that contain large numbers of unique words. Examples of these kinds of document include dictionaries, thesauri, and technical material containing tables of chemical, drug, or astronomical names.
- conventional compression techniques do not easily accommodate documents that include text from more than one national natural language, such as for example a translated document that includes both U.S. English and International French.
- a method of efficient compression, storage, and transmission takes advantage of the fact that most of the text manipulated by distributed information systems is, in fact, written in natural languages comprised of a finite vocabulary of words, phrases, sentences, etc. . . .
- a vocabulary of under 2000 general words augmented by about 100-200 special terms that are specific to the type of business being discussed, generally serves adequately.
- the method achieves significant efficiencies over prior art by using a set of predetermined dictionaries or vocabularies that are specific to the national language (such as English and/or German) and possibly the subject area (such as Medical, Legal or Computer Science) of the textual information being encoded, stored, searched and transmitted.
- national language such as English and/or German
- subject area such as Medical, Legal or Computer Science
- the method includes steps of parsing words from text in an input file and comparing the parsed words to a predetermined dictionary.
- the dictionary has a plurality of vocabulary words in it and numbers or tokens corresponding to each vocabulary word.
- a further step is determining which of the parsed words are not present in the predetermined dictionary and creating at least one supplemental dictionary including the parsed words that are not present in the predetermined dictionary.
- the predetermined dictionary and the supplemental dictionary are stored together in a compressed file. Also, the parsed words are replaced with numbers or tokens corresponding to the numbers assigned in the predetermined and supplemental dictionary and the numbers or tokens are stored in the compressed file.
- FIG. 1 depicts a view of conventional information storage and retrieval systems on the internet.
- FIG. 2 depicts a conventional typical hypertext markup language (“HTML”) file.
- HTML hypertext markup language
- FIG. 3 depicts a plurality of HTML files stored on the intemet contained within a boundary for illustrative purposes.
- FIG. 4 depicts a method according to a preferred embodiment present invention for collecting a group of linked files and hyperbinding the collection.
- FIG. 5 depicts a collection of hyperlinked files stored in a distributed information system
- FIG. 6 depicts the collection of hyperlinked files shown in FIG. 5 with organizational aids including hypertext links added to the collection.
- FIG. 7 depicts a compiler 50 operating on HTML files within a boundary and producing a compiled HTML file therefrom according to a preferred embodiment of the invention.
- FIG. 8 illustrates a method for compiling a file according to an embodiment of the present invention.
- FIG. 9 depicts a predetermined dictionary file that used during compression or compilation according to a preferred embodiment of the present invention.
- FIG. 10 depicts the mapping of token ranges from two predetermined dictionary files into a store dictionary file according to a preferred embodiment of the present invention.
- FIG. 12 depicts an exploded view of an internet access server used to couple a client computer to the internet.
- FIG. 13 illustrates a client computer coupled to a remote server computer through an internet access server.
- FIG. 14 depicts a method for optimizing transmission of remote hyperlinked files according to a preferred embodiment of the present invention.
- FIG. 1 depicts a view of the internet.
- a plurality of client computers 10 are coupled to a plurality of interconnected server computers 12 over the internet.
- Each client computer 10 may be coupled to the internet in various ways including through an internet access provider 14 and through a server computer 12.
- Client computers 10 are coupled to an internet access provider 14 through lines 18, which represent communication channels such as a telephone line from a modem of the client computer 10 to the internet access provider 14.
- the client computer 10 may also be coupled to the internet via a local area network connection to a server 12, for example using an ethernet or a token ring network.
- the servers 12 are coupled to each other and to the internet service provider 14 through a plurality of interconnected networks and communication links, represented by lines 16, that collectively comprise the internet.
- Each of the servers 12 has a unique identifier or name that can be used to communicate with it.
- these server names are expressed as character strings, for example www.ibm.com that are translated by mechanisms in the network to unique numeric addresses pursuant to the well known internet Domain Name System ("DNS").
- DNS internet Domain Name System
- the server's name along with additional characters that identify a specific web-page constitute an identifier known as a Uniform Resource Locator (URL). While this information can be anything that identifies the requested material, this additional information is frequently file and/or directory names that reference the file system on the server 12.
- a common method of accessing information on the internet is with a browser residing on the client computer 10.
- information on the server computers 12 is typically stored in a format that is usable by browsers.
- this format is hypertext markup language ("HTML"), which is readable.
- the browser enables a user at the client computer 10 to receive HTML files transmitted from server computers 12 using widely available protocols, including the hypertext transfer protocol ("HTTP").
- HTTP hypertext transfer protocol
- the HTML file is rendered by the browser as a page (or "web page”).
- Rendering includes displaying text, pictures, and video and playing recorded sound.
- Commonly available browsers include Netscape Navigator, Mosaic, and Internet Explorer supplied by Microsoft corporation.
- FIG. 2 depicts a typical HTML file.
- HTML files include a plurality of tags with corresponding text and objects.
- the objects include, for example, pictures, sound, and video.
- the tags specify how to format the corresponding text and objects for rendering by the browser. For example, the ⁇ P> tag preceding a block of text indicates that the ensuing text is to be formatted and displayed as a paragraph.
- a format is specified with two tags, a beginning and an ending tag which surrounds the text or object corresponding to the format. For example, referring to FIG. 2, the title "baseball" is given to an HTML file as follows:
- tags used in HTML allow a user to identify many different types of text including paragraphs, titles, headings, citations, emphasis, numbered and or unnumbered lists etc.
- Tags can also enclose, or nest, other tags providing a combination effect. While these tags do not explicitly specify how the text they enclose is to be formatted there are conventional rules as to how each type of text should best be formatted for display. Additional data called attributes may be specified with tags that specify that a particular presentation format be imparted to the text. For example, attributes on tags allow authors of HTML files to specify many text formats including: right, left and center justification, boldface or italics. Other tags allow authors to embed pictures, video, and sound or other non-text objects into HITML files. Typically, these tags specify the location and size of the object as well as the location of the object file on the internet.
- HTML Hypertext link tag. This tag allows an author of one HTML file to specify links to a plurality of other HTML files. Thus, when an HTML file is displayed as a web page on a user's browser, the user may select one of the hypertext links and instantly redirect their browser to request and render the web page corresponding to the selected link.
- FIG. 3 depicts a plurality of HTML files stored on the internet for illustrative purposes.
- the HTML files may reside on the same server 12 or on separate servers 12 coupled to the internet.
- File 20 includes hypertext links to files 22, 24 and 26.
- File 22 includes hypertext links to files 28 and 30.
- File 24 contains hypertext links to files 30 and 26.
- file 26 contains a hypertext link to file 32.
- An author desiring to render access to some or all of the hypertext files depicted in FIG. 3 more efficient, according to the present invention identifies the files which are to be included a collection. Prior to creation of the collection , the user must select which files to include. For example, referring to FIG. 3, a user may include in the collection all of the files within the boundary 40.
- the boundary 40 is typically chosen by the author because they know that files 20 through 28 share a common characteristic, for example, they all pertain to baseball players.
- Files 30 through 34 may be excluded from the collection because the files are less relevant to the common characteristic.
- the methods used to determine the scope of hypertext material, such as but not limited to tagged HTML, SGML or XML files, to be included in a collection may either be manually specified or automatically developed from the linked structure of the material.
- Manual specification identifies existing sets of files, database entries, or previously existing collections to be included in or excluded from the collection process. For example, on the World Wide Web, such manual specification might include lists of server sites, file directories or URL text string patterns that are to be considered within (or ruled out of) the scope of the binding operation.
- the collection process also employs automatic hypertext link traversal to discover candidate material.
- the method examines the hypertext material, much as an appropriate browser would, to uncover links to other material and possibly add it to the collection. This operation is performed recursively. That is each, each discovered link is examined for further links which may be taken and so on.
- this automatic method of discovering material one or more "starting points" or "home pages" in the hypertext tree are identified by the author. Additionally, the author may also specify that the binding software traverse all of the hypertext links within the candidate space established by the previously discussed scoping methods until a set of constraint parameters are met.
- constraint parameters include, but are not limited to, a single link, some specified number of link levels, links contained within a whole or partial specification of a document's base statement, mandatory vs. discretionary links, etc. This technique lends itself to quickly binding structured collections of material which have some logical ordering determined by the linked structure of the components themselves.
- the methods according to preferred embodiments of the invention establish a structure for the material that is included in the collection.
- This structure may be likened to a composite "table of contents" for all of the material included in the scope of the collection by the aforementioned methods.
- This structure is accumulated in primary or auxiliary memory as the binding operation proceeds and the relationship between all the included objects is recorded.
- this table constitutes a complete record or "graph" of the hypertext interconnections within the collection and it can be used in the subsequent process of creating additional organizational aids for the collection.
- the graph at least defines which objects are part of the collection. For example, if the author specifies that all the HTML files in a certain area of storage (a directory, disk or site) are to bound into a collection, and none of these files contained any hyperlinks to any of others that were present, the resulting graph would contain at least a simple list of all the HTML files that were included and some default ordering for the material.
- a method for organizing a collection is depicted in FIG. 4.
- step 600 the scope of the files included within the collection is determined as described above.
- step 602 a graph of the material within the collection is identified as described above.
- step 604 the organization of the material within the collection is analyzed and in step 606 organizational aids are added to the collection by an additional process called HyperBinding.
- HyperBinding is a process that examines the map of the collection to create new pages and links to include in the HyperBound collection to enhance its usability.
- static hyperbinding simply uses the information collected in the map constructed by previous steps to construct new links and navigational information such as buttons and menus to allow the user to easily traverse the relationships represented in the collected map.
- This mechanism creates lists and tables corresponding to the hierarchy of links represented in the map but factors those links away from the body of text. These lists then allow the user to see the structure of the material separately from the body of the data. This works well in many cases because hypertext authors frequently include sufficient links in their material that expose the implied organization of the data even though they do not necessarily include all the navigational pages and links that a user may desire.
- One form of dynamic hyperbinding involves automatic structural analysis of the link graph to discover clusters of strongly related material. Based on the mapped structure of links, a link density clustering analysis involves determining where many hyperlinks connect a common set of objects. There will frequently be more than one density cluster identified for a given collection. In a given set of n linked hypertext objects there may be as few as n-1 links connecting them or as many as (n 2 -n)/(n-1) in a fully connected mesh. In determining when a cluster exists the ratio of the number of hypertext objects that constitute the candidate group of objects to the number of links that connect them is a measure of the density of their interconnection.
- Candidate objects for inclusion in possible clusters may be located either by recursively traversing the graph or more efficiently by locating nodes in the graph that are either pointed to by many others nodes or that themselves point to many other nodes.
- both the number of times a particular object is targeted and also where it is targeted from are important. For example, the link density of a cluster containing an object targeted from 50,000 other objects will be low (near n-1) and therefore probably not identified as a cluster.
- the link density of this cluster would be higher (equal to 2*(n-1)) and it might be identified as cluster. In a candidate list of pages that were all pointing to each other the density would approach (n 2 -n)/(n-1) and would almost certainly be a cluster.
- the nodes (or linked files) A, D, C, E, B have ten links between the five objects. Therefore the link density is 2.
- the group of items J, F, I, G, H also has ten links among five items and would have the same link density. However the items E, B, K, L, M, F, H only have six links among seven objects yielding a link density of less than 1.
- a threshold based on the link density, a criteria for defining a cluster is created. Assuming a threshold of 1.5, the two clusters 300 and 350 would be identified because each has a link density in excess of the threshold.
- files E, B, K, I, M, F, and H with a link density of 1 would not constitute a collection.
- the total size of a candidate cluster is also a factor in determining its value. Very small clusters that only contain a few objects would not be of value in very large collections. Also very large clusters that contained most of the items in the collection would similarly be of little value.
- a different clustering analysis is performed.
- linguistic and statistical analysis methods including phrase identification, word frequency analysis, and situational ranking is used to determine the content of a hypertext object.
- Situation ranking categorizes word and phrase location in the document (such as within a title, heading level, or a list-item) along with simple language frequency.
- More sophisticated language processing such as grammatical structure and usage analysis may also be employed to categorize the hypertext object. Clusters are then determined by relating files within the collection that have similar semantic or linguistic content.
- the software can examine the objects outward from the center of one of more clusters, trying to find an edge of relevant material for each cluster.
- the most dense spot in a cluster (the logical center) may be identified by finding the node that has the largest number of links from and to it.
- FIG. 6 shows two such additional navigational aids.
- the first navigational aid 320 is a hypertext page added to the collection that appears similar to a "table of contents".
- the page 320 includes hypertext links 325 and 328 pointing to file A and J respectively.
- File A and J are hierarchically the first two pages in the clusters 320 and 346 identified in FIG. 5.
- the page 320 was created by the "static hyperbinding" method of traversing the map created in previous steps.
- Page 320 contains hypertext links 335 and 338 that point to pages C and I that are at the center (point of highest cluster density of the clusters identified in FIG. 10.
- Page 330 can be thought of as a "subject" map that is like the "back of the book index" in printed material.
- hypertext links may take the form of lists and tables that in turn point to other lists and tables so that all or part of the total collection of organizational material may be seen by the user.
- These hyperlinks also point directly to the referenced material, and may have associated text and graphical information, so that the user may easily navigate directly to a reference page from the list or table.
- These navigational additions to the collection give the user a "sense" of their "position" within the overall collection which can be valuable in helping them to determine how they might use the rest of the data that is part of the collection.
- the methods and mechanism of hyperbinding create a hypertext collection that is more easily managed than the individual hypertext pages that make it up. Such a collection is more readily navigated, searched, printed, transmitted and manipulated than the individual objects that comprise the collection.
- FIG. 7 depicts a compiler 50 operating on the hypertext material within the boundary 40 and the resulting output of a compiled file 52.
- the compiled file 52 includes a tag tree 54, a search index 56, a canonical and supplemental vocabulary 56, compressed text 60, and compressed objects 62.
- the contents of the compiled file 52 correspond to the contents of each of the hypertext files that were fed into the compiler 50 as well as the hypertext links between the files.
- the tag tree includes the structure of each individual file that was fed into the compiler.
- each tag includes a pointer to a place within the compiled file that includes the data corresponding to the tag.
- each tag in the compiled file points to either compiled text, or a compiled object.
- the pointer points to another tag in the structured tag tree.
- FIG. 8 depicts a method for compiling hypertext according to the present invention.
- the author identifies the hypertext objects for compilation as those within the boundary 40, selected for their relevance to the common subject of baseball players.
- the author can identify files for compilation to the compiler in various ways, including by supplying the compiler with their hypertext addresses (for example URLs of the HTML files).
- the author may use static or dynamic hyperbinding to create a hyperbound document for compilation.
- step 202 the compiler retrieves each file.
- the retrieval process includes fetching each object identified to the compiler, and in addition, fetching required objects that are referenced by tags within those files. These referenced files will frequently be either other hypertext files or object files representing a stored picture, video, or sound.
- step 204 the compiler parses the hypertext file in order to separate the tags from the corresponding text and objects.
- a correspondence table is created to preserve the relationship between the tags and the corresponding text and objects.
- steps 206 through 214 the compiler compresses the text contained within the files and stores the compressed text in accordance with a preferred method of compression and storage detailed below.
- compression method set forth below is preferred, for purposes of compressing the compiled file, compression may be performed with any suitable technique including: Huffman, Lempel-Ziv or simple run-length encoding.
- the method of compression set forth in steps 206 to 213 and described immediately hereafter is suitable not only for compiled hypertext material, but also for text files and text stream compression in any information storage and retrieval system.
- each instance of a unique word within the text is identified.
- the compiler selects a canonical vocabulary (or dictionary) that includes a portion of the unique words identified in the text.
- the compiler may have several dictionaries to choose from for this purpose. For example, separate dictionaries may include: common English words, medical terminology, chemical terminology, legal terminology, etc. . . .
- the compiler 50 chooses one or more of the dictionaries as appropriate in order to include a large percentage of the unique words identified within the text.
- Each dictionary has a plurality of vocabulary words in it and numbers (or tokens) corresponding to each vocabulary word.
- the lists of words and tokens in each of the predetermined dictionaries are separated into token ranges that correspond to the expected frequency of words in the natural language as a whole. All predetermined dictionaries have at least one word list and token range included in them but any number of additional token ranges can be present.
- FIG. 9 shows a typical natural language dictionary file 400 that includes a header 420 and three token ranges.
- the most frequently occurring words within the natural language are assigned a token with the Ultra-High Frequency ("UHF") token range 440.
- the next most frequent words are similarly assigned values in the High Frequency (“HF”) token range 460, and the least frequent words are assigned value in the Low-Frequency (“LF”) token range 480.
- Most of the words in a particular natural language are considered very infrequent (called very low frequency or VLF vocabulary) and are not included in the predetermined dictionary for that particular natural language.
- VLF vocabulary very low frequency or VLF vocabulary
- step 208 in order to select a dictionary, the compiler or a compression processor automatically samples all, or portions, of the text in a document to be compressed and determines an approximation of what percentage of terms in the document appear in particular predetermined dictionaries. Alternatively, the end user may specify manually what dictionaries the system should employ for encoding a particular document.
- the compiler 50 employs mechanisms for making use of multiple dictionaries, each specifying its own encoding.
- Each dictionary specifies a correspondence between words and encoded token numbers to the same base number (usually 1).
- base number usually 1
- a single unified token range can be dynamically constructed as a document and is encoded and compressed.
- each dictionary used for encoding is assigned offset values for each of the token ranges it embodies. These offset values are recorded in the header 420 of the dictionary file 400 as dictionaries are selected for use.
- FIG. 10 shows how the token ranges specified in each dictionary can occupy part of the overall token space.
- an English dictionary 500 and a French dictionary 510 will be used.
- dictionary 500 the English words corresponding to a token range might be assigned an offset of zero and thereby correspond to tokens starting with number 1, while the French dictionary 510 uses a token range starting at offset of, for example, 100 thereby causing all of the words in the French dictionary to be numbered 101 and up in the stored dictionary file 520.
- dictionary offset values allows token assignments within each predetermined dictionary to be made without regard to whether a dictionary 400 may be used in combination with another dictionary 400 during the encoding of a specific document. Based on the relative frequency of occurrence of words in each token range of the English and French language, offset values are assigned to each token range. Supplemental dictionaries are similarly added dynamically to support the words not included in any predetermined dictionary. In some cases where the number of dictionaries to be supported is larger (and consequently the number of words is also larger) a special "shift" token is assigned to indicate what dictionary should be used to encode a particular body of text within the document being compressed.
- the shift token allows the compression routine to effectively support a much larger token space but requires that shift tokens be inserted in the compressed stream whenever the dictionary used to compress text must be changed.
- Both dictionary encoding methods permit the text compressed in a document to be updated, and any additional words that were not present in the original document to be accommodated in additional supplemental dictionaries that can be added later or in an extension of the existing supplemental dictionaries.
- the invention may also employ special encoding for numeric strings that occur in the text.
- special encoding for numeric strings that occur in the text.
- documents contain only occasional references to numbers no special numeric encoding is required.
- each unique numeric string is simply assigned a token in the aforementioned supplemental dictionaries and encoded in the normal way that words and strings not found in any of the predetermined dictionaries are handled.
- this mechanism quickly exhausts the supply of tokens available in the supplemental dictionaries.
- one of the two special encoding methods described below can be used.
- Numbers either integers which are just strings of digits, or decimal notation which may include signs (positive or negative), decimal points, currency symbols etc. . . . can be encoded using a special predetermined "numeric" dictionary.
- This dictionary includes a token range (usually one-byte) for each numeric digit (0-9) and also tokens for signs, currency symbols, exponential notation etc.
- special encoding for numbers is employed some special parsing rules are also required as numeric strings do not normally include imbedded white space such as is common between other tokenized words or strings. For numeric strings this form of encoding does not achieve any real compression but it allows many numeric strings to be included in documents that also have a lot of regular language text without overloading the token addressing ranges.
- the numbers are converted to a machine independent binary format.
- This format is designed to successfully encode either integers or real numbers with nominally unlimited precision.
- the format specifically includes information as to how many bits of data are used to encode either very small or very large and precise numbers (mantissa and exponent lengths) and to what precision such numbers are carried in their representation. Normally such encoding schemes will achieve better compression of numbers than the previously described digit tokenization. This form of encoding also more readily allows computation and/or comparison of the numbers which in turn may be used to enable relational searches.
- each of the dictionaries stored within the compiled file in step 208 include words, and corresponding numbers or tokens, to uniquely identify many of the words within the text to be compressed.
- each word within the text from the original material is replaced with the number or token corresponding to that word in the stored dictionaries.
- the input text stream is parsed into words and strings and compared with the words in the all the predetermined dictionaries selected by the language identification step 208. Words that appear in any of the selected predetermined dictionaries are replaced with appropriate token values.
- step 210 unusual words and strings that are not present in the any of the predetermined dictionaries during compression are identified.
- step 212 the unusual words or strings are gathered into at least one supplemental dictionary and assigned token values. Special processing for numeric strings is also handled and they are converted to tokenized data as described above.
- the compressed token stream is written into a memory buffer and finally stored in the file in large blocks.
- the predetermined dictionaries and the supplemental dictionaries are each uniquely identified by a reference record that is stored in the compiled file 50.
- these reference records contain the offset values and/or special "shift" token values previously mentioned that are used to partition the overall token space assigned to each dictionary.
- the dictionaries may be further compressed using relatively standard and well known methods including front and back-end string folding and run-length encoding.
- the compressed predetermined dictionaries are also stored in the file.
- the file compression techniques described above in steps 206-213 work particularly well for files of moderate and large sizes. Small files may achieve little or no compression effect and very small files may even grow in size. This is because of the overhead that storing copies of the predetermined dictionaries requires. If the files actually contain very few occurrences of a very small number of unique words, then even with no predetermined dictionary being used and all words that do occur in the material being placed in a supplemental dictionary the resulting file would likely be slightly larger than the input file. In most cases for moderately sized files (several dozen pages of text at least) files compressed using the techniques described above are typically 2 to 10 times smaller than the input source file that they were generated from.
- the tokenized or compressed text is then stored in the compiled file 50 in step 214.
- the correspondence between the text and the tags is also updated to reflect the stored location of the compressed text within the compiled file.
- step 216 the set of unique words from within the text is tokenized and stored as a search index in the compiled file 52.
- the objects embedded in the hypertext files are compressed beyond their native format using compression techniques.
- step 220 the compressed objects are stored in the compiled file 52 and the correspondence between the tags and the objects is updated to reflect the stored location of the compressed objects.
- step 222 the compiler stores the tags that were parsed from the hypertext files. The tags are stored hierarchically in a binary tree format with a pointer relating each tag to the location within the compressed file that has the corresponding compressed text or object.
- the tag When a tag is a hypertext link, the tag is treated differently depending upon whether the material linked to is presently within the compiled file 52 or not.
- the hypertext link tag When a hypertext link tag in one of the input objects is not a link to another object included within the compiled file 52, the hypertext link tag includes a pointer to the compressed text area of the compiled file.
- the compressed text pointed to includes the hypertext address (URL in HTML) of the file pointed to in the original material.
- the hypertext link tag specifies an object that is included in the compiled file 52, the pointer corresponding to the referring hypertext link tag points to a tag within the compiled file 52 representing the top of the hierarchy of the included material.
- FIG. 11 depicts an exploded view of a client computer 10.
- the client computer 10 includes a processor 70 coupled over a bus 72 to a modem, 74 a display 76, fixed memory 78, and random access memory (RAM) 80.
- the bus 72 enables communication between the various components of the client computer 10.
- the fixed memory 78 contains programs stored on a computer usable medium and capacity to store additional data on the medium.
- the processor 70 loads programs into the RAM 80 and executes the programs, which include operating systems and applications. Typical operating systems are Microsoft DOS and Windows, Unix, Aix, and OS2.
- the applications include a browser 82 for accessing the internet using HTTP protocols and rendering web pages on the user's display. There are many widely available browser programs including Netscape Navigator, Mosaic, and Microsoft's Internet Explorer.
- the applications may also include a proxy 84, described in more detail below, which interfaces with the browser 82, the processor 70, and the modem 74 over the bus 72.
- a cache 86 may be implemented by the RAM 80 (or the fixed memory 78). The cache 86 is operative to temporarily store data as required by the browser 82 and/or the proxy 84 at the direction of the processor 70.
- the modem 74 is coupled between the processor 70 and a communication medium used to access the internet, such as a telephone network, which may include, for example, wired, cellular, microwave, and satellite portions thereof.
- the modem 74 receives data, including commands, from the browser 82 and the proxy 84 and transmits the data to servers over the internet. Additionally, the modem 74 receives data from servers on the internet and routes the data to the proxy 84 and the browser 82 applications.
- FIG. 12 depicts an exploded view of an internet access server 14 used to couple a client computer 10 to the internet 16.
- the internet access server 14 may be owned and operated by an internet service provider, or the internet access server may be part of for example, a private local or wide area network that includes the client computer 10.
- the server 14 includes a processor 100 coupled over a bus 102 to one or more input/output devices 104 and a memory 106.
- the memory 106 includes, for example a RAM a read only memory (ROM), a hard disk drive or an array of hard disk drives, a tape drive, a CD ROM drive, and controller.
- the input/output devices 104 transmit and receive data using communication protocols including TCP/IP, and in so doing route data from the server 14 to another server or from the server 14 to a client.
- the input/output devices 104 are controlled by the processor 100, which directs the flow of data received and transmitted.
- the processor 100 runs programs stored in the memory 106, including operating systems and applications. Also included among the programs stored in the memory 106 in a preferred embodiment of the invention is a server proxy 110.
- the server proxy 110 includes program instructions for translating a compiled hypertext file into it uncompiled format, and for determining when the browser 82 includes a personal proxy 84 capable of reading a compiled file 52.
- a cache 112 is preferably implemented by the components of the memory 106 and coupled to the server proxy 110. The cache 112 is used to temporarily store data at the direction of the proxy 110.
- a modem 108 may also be included in the internet access server 14, particularly when the internet access server 14 is an internet service provider.
- the modem 108 is coupled to the processor 100 over the bus 102 and receives requests for access to the internet from and exchanges data with client computers 10.
- a browser program 82 is running on a client computer 10 that is coupled to an internet access provider 14 (either via a modem or a local area network).
- the browser 82 When the browser 82 is initiated, it typically is set to an HTML file or web page located at a remote server 12 having a predetermined URL stored in the browser 82. From this location, the user may select a hypertext link to jump to another hypertext page. There are many ways to accomplish this including by typing in a new address and selecting a hypertext link. Assume for purposes of illustration that the user selects the URL of a web page of the remote server 12 depicted in FIG. 13.
- proxy is an intermediate program running on a computer in the internet that accepts requests from client computers (or other proxy servers) in the network, that performs some processing and then passes some or all of the requests either as transformed by the intermediate processing or intact onto another server (or another proxy server).
- a proxy may be located in any computer that lies anywhere logically in the path between the client computer 10 and the server computer 12 including but not limited to computers provided by the intemet access provider 14 (which may be an intemet service provider or a server on a local area network) and also either in the client computer 10 or the server computer 14. These scenarios are depicted by the proxy 110 in the intemet access provider 14 and by the proxy 84 in the client computer 10.
- proxies can be used for many purposes in the intemet including as intermediate caches, security gateways or address transformers.
- a proxy is located either in the network (between the client and remote server computers) or on the client computer 10 to cache, decompile and decompress the compiled HTML information when it is delivered from a remote server 12.
- the proxy receives the request from the web browser and in turn contacts the remote server specified by the request.
- the proxy always adds some information to the request to enable the remote server 12 to determine that there is a proxy in-line somewhere that is capable of dealing with the compiled HTML format.
- This additional information typically consists of some modification to the URL being requested that can be easily detected by the remote server 12.
- the remote server 12 receives a request without this modification, then it determines that neither the client 10 nor any servers between the client 10 and the remote server 12 is equipped with a proxy capable of translating compiled hypertext material. Therefore, the remote server 12 must decompress and decompile the requested data within the stored, compiled file 52 prior to transmission to the requester.
- a remote server 12 receives a request from a proxy with the detectable modified address (URL), it transmits all or part of the requested information in the compiled and compressed form.
- a proxy When a proxy receives the compiled material 52 from the remote server 12, it can perform a translation of the compiled format. In its initial transmission, the remote server 12 sends certain of the basic components of the compiled information 52 to the proxy. These include at least the identification of which canonical vocabularies and supplemental vocabularies 58 are being used in the compiled file 52 as well as the part of the tag tree 54 that included the requested address (URL). Usually, the initial transmission will also include at least the text of the requested information. At the discretion of the remote server 12, it may also include other data including additional segments from the tag tree 54, compressed text 62, components of the search index 56 and/or non-text compressed objects 62 (like images, sounds or video files). The proxy will receive and temporarily store in a cache all of these compiled components in their compressed form.
- the proxy has accumulated enough information to begin transmitting to the browser 82 for rendering. Since it has received a complete summary of the structure of the hypertext information in the tag tree, the proxy Xl can determine without any reference to the tags what components it needs to transmit to the browser 82 (and in what order to transmit them) to allow the browser 82 to begin rendering as quickly as possible. Usually, most of the required components for rendering the requested material are transmitted by the remote server 10 in this initial transmission. If, however, the proxy determines that additional components are required (such as particularly large image or video files) by processing the tag tree 54 of the compiled file 52 that the proxy has received and cached, the proxy requests the additional components from the remote server 12 even while transmitting already received components to the browser 82 for rendering.
- additional components such as particularly large image or video files
- the proxy When the proxy sends material to the browser 82, it decompiles and decompresses the compiled object effectively reconstructing the original format from the cached compiled components. Since the browser 82 does not have to decompile or decompress the compiled hypertext format itself, existing commercially available browser programs such as Netscape Navigator, or Microsoft Internet Explorer can be used.
- the transmission of information from the remote server 12 to the browser 82 on the client computer 10 was slow because the text and images were not compressed beyond their native format.
- the text and embedded object data are both stored and transmitted in compressed format.
- the same amount of text and object data is transmitted with fewer bytes according to the present invention.
- Another advantage is that the tag tree 54 in the compiled file 52 is readily available without parsing. Therefore, both the remote server 12 and the proxy can efficiently determine, based on the tag tree 54 in the compiled file 52 and the information transmitted what components are needed to render the page.
- the required information can be transmitted in fewer transmissions, without the browser 82 having to explicitly request each additional file or object that it needs from the remote server 12.
- the compiled components stored in the proxy cache remain compressed until they are transmitted to the browser, the amount of data that can be retained in the proxy cache to satisfy further requests is increased. Ultimately, this will further reduce the number and size of required transmissions between the remote server 12 and the browser 82.
- the proxy may continue to receive and/or request additional compressed text and objects on other web pages included within the scope of the compiled HTML document. For example the proxy may process the tag tree and prefetch material corresponding to hypertext links within the information being rendered by the browser as described below.
- proxy allowing it to receive, cache, and interpret the compiled file 52 could be incorporated in some browser programs allowing them to operate on the compiled data directly without requiring the intermediation of a proxy.
- Decompression of the tokenized material for rendering at a display screen or printing is similarly very efficient. Since all the tokens that represent words or strings have fixed lengths (usually, but not always, 1-4 bytes) and are organized in blocks on the file, a decompression routine can pass rapidly through the token stream and find each token without any real parsing. This also means that, unlike in many schemes that employ end-to-end binary compression, a portion of the file composed only of some data from one or more blocks can be decompressed without reading or decompressing any other block from secondary storage (disk) or memory.
- disk secondary storage
- the compressed tokenized form of the text can be searched directly without requiring decompression. This is accomplished by using the referenced predetermined and supplementary dictionaries to "lookup" the tokens for any search words, phrases or strings that are to be found. Once these search targets are appropriately tokenized with the same vocabulary that was used to encode the source material the required token sequences can be searched for instead of the actual character strings. Since, in general the strings of bits that must be compared in such a tokenized matching are much shorter than the words they represent the search can proceed much more rapidly.
- Transmission of information between a remote server 12 and client computers 10 can be optimized by prefetching the hypertext links on a requested web page and transmitting their contents to the client computers 10 that are viewing the web page.
- the web page already resides in a cache 84 on the client computer 10 and therefore, the browser 82 only needs to render it rather than to fetch it and render it. This reduces the time required to satisfy and render the browser's request for the linked web page.
- Prior art programs can be added to existing web browsers to examine the received hypertext material for links and to make asynchronous requests for the referenced pages. These programs, however, cannot determine which of the links on the originally requested web page the user is most likely to choose.
- the prefetching behavior of the proxy at the client computer 10 (or close to the client computer 10 in a client-side network configuration) and the remote server 12 are governed by statistics stored within an uncompiled or a compiled hypertext file 52. This is illustrated in FIG. 14.
- step 700 the remote server 12 actively responds to queries from client computers during the course of operation, the remote server writes in step 702 an activity log to a storage medium, for example a log tape.
- the activity log records each instance of a client's accessing a hypertext object on the server over a period of time.
- This activity log can be analyzed in step 704 with respect to the links on each previously requested page, in order to determine a probability of selection for each hypertext ed on the page.
- this probability is called the link probability.
- the link probability information may be added in step 706 to an uncompiled hypertext file manually or automatically.
- the link probability can be added to a compiled hypertext file 52 manually or automatically during the compilation of the file 52. This may be accomplished, for example, by storing the link probability as a comment tag in the hypertext file or in the compiled file 52.
- the comment is related to the corresponding hypertext link by storing the comment tag and associated comment immediately before or after the hypertext link tag within the file or compiled file 52.
- both the remote server 12 and the proxy 84 may read the link probabilities in step 708. Based on the link probabilities, the proxy 84 or the remote server 12 can make independent or concerted decisions to prefetch or pretransmit data that is referenced by links included within the explicitly requested information. For example, if the remote server computer 12 has available bandwidth, the server 12 may add the tags, text or other objects referenced by the links in an explicitly requested page to material it is transmitting to the proxy. Then, when (and if) the user takes the hyperlink, the requested material will already be stored in the cache 86 on the client computer 10.
- the proxy 84 may use the link probability data to explicitly request data for pages that are most likely choices even while it is still transmitting received data that is required to the web browser 82.
- the remote server 12 or the proxy 84 determines if the link probability exceeds a predetermined threshold. If so, in step 712 the server 12 or the proxy 84 pretransmit or prefetch those links having a high link probability. If not, in step 714 the server 12 or the proxy 84 do not prefetch or pretransmit those links having a low link probability.
- the remote server 12 may track data requests from a client 10. Based on the client's requests, the server 12 may be able to determine that the client 10 has only limited cache space because the client 10 frequently requests the same data that has already been sent. In this scenario, the server 12 can adjust its pretransmission behavior and not prefetch anything for the client 10, because the client 10 will not have the cache 86 capacity to store the data once fetched.
Abstract
Description
Claims (9)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US08/979,181 US5991713A (en) | 1997-11-26 | 1997-11-26 | Efficient method for compressing, storing, searching and transmitting natural language text |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US08/979,181 US5991713A (en) | 1997-11-26 | 1997-11-26 | Efficient method for compressing, storing, searching and transmitting natural language text |
Publications (1)
Publication Number | Publication Date |
---|---|
US5991713A true US5991713A (en) | 1999-11-23 |
Family
ID=25526765
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US08/979,181 Expired - Lifetime US5991713A (en) | 1997-11-26 | 1997-11-26 | Efficient method for compressing, storing, searching and transmitting natural language text |
Country Status (1)
Country | Link |
---|---|
US (1) | US5991713A (en) |
Cited By (162)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
WO2000023905A1 (en) * | 1998-10-21 | 2000-04-27 | Wildseed, Ltd. | Token based source file compression/decompression and its application |
US6108619A (en) * | 1998-07-02 | 2000-08-22 | Novell, Inc. | Method and apparatus for semantic characterization of general content streams and repositories |
US6161084A (en) * | 1997-03-07 | 2000-12-12 | Microsoft Corporation | Information retrieval utilizing semantic representation of text by identifying hypernyms and indexing multiple tokenized semantic structures to a same passage of text |
US6178461B1 (en) * | 1998-12-08 | 2001-01-23 | Lucent Technologies Inc. | Cache-based compaction technique for internet browsing using similar objects in client cache as reference objects |
US6202201B1 (en) * | 1998-09-23 | 2001-03-13 | Netcreate Systems, Inc. | Text object compilation method and system |
US6230168B1 (en) * | 1997-11-26 | 2001-05-08 | International Business Machines Corp. | Method for automatically constructing contexts in a hypertext collection |
WO2001050298A2 (en) * | 2000-01-05 | 2001-07-12 | Weblink, Ltd. | Coding and transmission of multiple web pages |
US6272492B1 (en) * | 1997-11-21 | 2001-08-07 | Ibm Corporation | Front-end proxy for transparently increasing web server functionality |
US6292801B1 (en) * | 1998-10-02 | 2001-09-18 | Rene L. Campbell | System and method for managing computer and phone network resources |
US6295092B1 (en) * | 1998-07-30 | 2001-09-25 | Cbs Corporation | System for analyzing television programs |
US6330566B1 (en) * | 1998-06-22 | 2001-12-11 | Microsoft Corporation | Apparatus and method for optimizing client-state data storage |
US6330574B1 (en) * | 1997-08-05 | 2001-12-11 | Fujitsu Limited | Compression/decompression of tags in markup documents by creating a tag code/decode table based on the encoding of tags in a DTD included in the documents |
US20010054048A1 (en) * | 1999-12-22 | 2001-12-20 | Kelsey Julian Benjamin | Structures to represent poorly formed HTML documents |
US20010056445A1 (en) * | 2000-06-15 | 2001-12-27 | Cognisphere, Inc. | System and method for text structuring and text generation |
US20020009079A1 (en) * | 2000-06-23 | 2002-01-24 | Jungck Peder J. | Edge adapter apparatus and method |
WO2002029590A1 (en) * | 2000-10-02 | 2002-04-11 | Hewlett-Packard Company | Method and apparatus for transforming contents on the web |
US6405199B1 (en) * | 1998-10-30 | 2002-06-11 | Novell, Inc. | Method and apparatus for semantic token generation based on marked phrases in a content stream |
US20020143521A1 (en) * | 2000-12-15 | 2002-10-03 | Call Charles G. | Methods and apparatus for storing and manipulating variable length and fixed length data elements as a sequence of fixed length integers |
US20020161569A1 (en) * | 2001-03-02 | 2002-10-31 | International Business Machines | Machine translation system, method and program |
US20020188604A1 (en) * | 1998-04-30 | 2002-12-12 | Katsumi Tada | Registration method and search method for structured documents |
US20020194176A1 (en) * | 1999-07-20 | 2002-12-19 | Gruenwald Bjorn J. | System and method for organizing data |
US20020194291A1 (en) * | 2001-05-15 | 2002-12-19 | Zahid Najam | Apparatus and method for interfacing with a high speed bi-directional network |
US20030004994A1 (en) * | 2001-06-28 | 2003-01-02 | Kamrowski Brian J. | Method and apparatus for content based HTML coding |
US20030009464A1 (en) * | 1998-10-02 | 2003-01-09 | Campbell Rene L. | System and method for managing computer and phone network resources |
US20030009595A1 (en) * | 2001-07-09 | 2003-01-09 | Roger Collins | System and method for compressing data using field-based code word generation |
US20030093276A1 (en) * | 2001-11-13 | 2003-05-15 | Miller Michael J. | System and method for automated answering of natural language questions and queries |
US20030110192A1 (en) * | 2000-01-07 | 2003-06-12 | Luis Valente | PDstudio design system and method |
US20030131316A1 (en) * | 2002-01-07 | 2003-07-10 | Kyle Brown | Internationalizing SGML documents |
US20030135501A1 (en) * | 2000-05-26 | 2003-07-17 | Laurent Frerebeau | System and method for internationalizing the content of markup documents in a computer system |
US20030149687A1 (en) * | 2002-02-01 | 2003-08-07 | International Business Machines Corporation | Retrieving matching documents by queries in any national language |
US20030159030A1 (en) * | 2002-02-15 | 2003-08-21 | Imetrikus, Inc. | Method and system for the secure transmission of a portion of a web page over a computer network |
US6658461B1 (en) | 2000-05-25 | 2003-12-02 | International Business Machines Corporation | Method of, system for, and computer program product for providing a user interface for configuring connections between a local workstation file system and a remote host file system |
US6665837B1 (en) * | 1998-08-10 | 2003-12-16 | Overture Services, Inc. | Method for identifying related pages in a hyperlinked database |
US6665836B1 (en) * | 1998-06-17 | 2003-12-16 | Siemens Corporate Research, Inc. | Method for managing information on an information net |
US20040003343A1 (en) * | 2002-06-21 | 2004-01-01 | Microsoft Corporation | Method and system for encoding a mark-up language document |
US20040034525A1 (en) * | 2002-08-15 | 2004-02-19 | Pentheroudakis Joseph E. | Method and apparatus for expanding dictionaries during parsing |
US6704736B1 (en) | 2000-06-28 | 2004-03-09 | Microsoft Corporation | Method and apparatus for information transformation and exchange in a relational database environment |
US20040054973A1 (en) * | 2000-10-02 | 2004-03-18 | Akio Yamamoto | Method and apparatus for transforming contents on the web |
AU771220B2 (en) * | 1999-12-22 | 2004-03-18 | Canon Kabushiki Kaisha | Structures to represent poorly formed HTML documents |
US6711561B1 (en) | 2000-05-02 | 2004-03-23 | Iphrase.Com, Inc. | Prose feedback in information access system |
US20040078422A1 (en) * | 2002-10-17 | 2004-04-22 | Toomey Christopher Newell | Detecting and blocking spoofed Web login pages |
US6728785B1 (en) | 2000-06-23 | 2004-04-27 | Cloudshield Technologies, Inc. | System and method for dynamic compression of data |
US6745181B1 (en) | 2000-05-02 | 2004-06-01 | Iphrase.Com, Inc. | Information access method |
US20040158561A1 (en) * | 2003-02-04 | 2004-08-12 | Gruenwald Bjorn J. | System and method for translating languages using an intermediate content space |
US20040215978A1 (en) * | 2003-04-24 | 2004-10-28 | Nec Corporation | System for supporting security administration and method of doing the same |
US20040225497A1 (en) * | 2003-05-05 | 2004-11-11 | Callahan James Patrick | Compressed yet quickly searchable digital textual data format |
US20040225646A1 (en) * | 2002-11-28 | 2004-11-11 | Miki Sasaki | Numerical expression retrieving device |
US6829654B1 (en) | 2000-06-23 | 2004-12-07 | Cloudshield Technologies, Inc. | Apparatus and method for virtual edge placement of web sites |
US20040250112A1 (en) * | 2000-01-07 | 2004-12-09 | Valente Luis Filipe Pereira | Declarative language for specifying a security policy |
US20050005110A1 (en) * | 2003-06-12 | 2005-01-06 | International Business Machines Corporation | Method of securing access to IP LANs |
US6850948B1 (en) * | 2000-10-30 | 2005-02-01 | Koninklijke Philips Electronics N.V. | Method and apparatus for compressing textual documents |
US20050027731A1 (en) * | 2003-07-30 | 2005-02-03 | Daniel Revel | Compression dictionaries |
US20050065774A1 (en) * | 2003-09-20 | 2005-03-24 | International Business Machines Corporation | Method of self enhancement of search results through analysis of system logs |
US20050065773A1 (en) * | 2003-09-20 | 2005-03-24 | International Business Machines Corporation | Method of search content enhancement |
US20050187774A1 (en) * | 2004-02-25 | 2005-08-25 | Research In Motion Limited | System and method for multi-lingual translation |
US20050234733A1 (en) * | 2004-04-14 | 2005-10-20 | Leitner Peter J | System and method for company valuation |
US20050268072A1 (en) * | 2001-05-15 | 2005-12-01 | Zahid Najam | Apparatus and method for interconnecting a processor to co-processors using shared memory |
US20060026291A1 (en) * | 2002-08-06 | 2006-02-02 | Blackwell Robin J | Network establishment and management protocol |
US20060031192A1 (en) * | 2002-08-06 | 2006-02-09 | Blackwell Robin J | Network establishment and management protocol |
US20060036593A1 (en) * | 2004-08-13 | 2006-02-16 | Dean Jeffrey A | Multi-stage query processing system and method for use with tokenspace repository |
US20060041649A1 (en) * | 2002-08-06 | 2006-02-23 | Blackwell Robin J | Network establishment and management protocol |
US7007105B1 (en) * | 2001-01-11 | 2006-02-28 | Remote Knowledge, Inc. | Method and system for improving data transmission and storage of markup language documents |
US20060070012A1 (en) * | 2004-09-27 | 2006-03-30 | Scott Milener | Method and apparatus for enhanced browsing |
US20060069618A1 (en) * | 2004-09-27 | 2006-03-30 | Scott Milener | Method and apparatus for enhanced browsing |
US20060075139A1 (en) * | 2000-06-23 | 2006-04-06 | Cloudshield Technologies, Inc. | Apparatus and method for domain name resolution |
US20060074984A1 (en) * | 2004-09-27 | 2006-04-06 | Scott Milener | Graphical tree depicting search or browsing history |
US20060080300A1 (en) * | 2001-04-12 | 2006-04-13 | Primentia, Inc. | System and method for organizing data |
US20060101514A1 (en) * | 2004-11-08 | 2006-05-11 | Scott Milener | Method and apparatus for look-ahead security scanning |
US20060101341A1 (en) * | 2004-11-10 | 2006-05-11 | James Kelly | Method and apparatus for enhanced browsing, using icons to indicate status of content and/or content retrieval |
US7054953B1 (en) | 2000-11-07 | 2006-05-30 | Ui Evolution, Inc. | Method and apparatus for sending and receiving a data structure in a constituting element occurrence frequency based compressed form |
US20060142997A1 (en) * | 2002-12-27 | 2006-06-29 | Per Jakobsen | Predictive text entry and data compression method for a mobile communication terminal |
US7080369B1 (en) * | 1999-11-05 | 2006-07-18 | Sun Microsystems, Inc. | Method and apparatus for producing compressed compiler products |
US20060212467A1 (en) * | 2005-03-21 | 2006-09-21 | Ravi Murthy | Encoding of hierarchically organized data for efficient storage and processing |
US7114008B2 (en) | 2000-06-23 | 2006-09-26 | Cloudshield Technologies, Inc. | Edge adapter architecture apparatus and method |
US7127450B1 (en) | 2000-05-02 | 2006-10-24 | International Business Machines Corporation | Intelligent discard in information access system |
US7136846B2 (en) | 2001-04-06 | 2006-11-14 | 2005 Keel Company, Inc. | Wireless information retrieval |
US7152031B1 (en) | 2000-02-25 | 2006-12-19 | Novell, Inc. | Construction, manipulation, and comparison of a multi-dimensional semantic space |
GB2427803A (en) * | 2005-06-29 | 2007-01-03 | Symbian Software Ltd | E-mail/text message compression using differences from earlier messages or standard codebooks with specific message supplements |
US7177922B1 (en) | 2000-09-05 | 2007-02-13 | Novell, Inc. | Policy enforcement using the semantic characterization of traffic |
US7197451B1 (en) | 1998-07-02 | 2007-03-27 | Novell, Inc. | Method and mechanism for the creation, maintenance, and comparison of semantic abstracts |
US20070073531A1 (en) * | 2000-09-05 | 2007-03-29 | Novell, Inc. | Intentional-stance characterization of a general content stream or repository |
US20070106491A1 (en) * | 2000-07-13 | 2007-05-10 | Novell, Inc. | Method and mechanism for the creation, maintenance, and comparison of semantic abstracts |
US20070106651A1 (en) * | 2000-07-13 | 2007-05-10 | Novell, Inc. | System and method of semantic correlation of rich content |
US20070162479A1 (en) * | 2006-01-09 | 2007-07-12 | Microsoft Corporation | Compression of structured documents |
US20070206771A1 (en) * | 2006-03-03 | 2007-09-06 | Childers Stephen Steve R | Key talk |
US20070208752A1 (en) * | 2006-11-16 | 2007-09-06 | Bhushan Khaladkar | Client processing for binary XML in a database system |
US20070220023A1 (en) * | 2004-08-13 | 2007-09-20 | Jeffrey Dean | Document compression system and method for use with tokenspace repository |
US7290278B2 (en) | 2003-10-02 | 2007-10-30 | Aol Llc, A Delaware Limited Liability Company | Identity based service system |
US7308508B1 (en) * | 1999-07-13 | 2007-12-11 | Sony Corporation | Distribution contents forming method, contents distributing method and apparatus, and code converting method |
US7343372B2 (en) | 2002-02-22 | 2008-03-11 | International Business Machines Corporation | Direct navigation for information retrieval |
USRE40169E1 (en) * | 2001-05-16 | 2008-03-25 | Cyberlink Corp. | System and method for processing a compressed data stream |
US20080086457A1 (en) * | 2006-08-29 | 2008-04-10 | Ben Fei | Method and apparatus for preprocessing a plurality of documents for search and for presenting search result |
US20080098019A1 (en) * | 2006-10-20 | 2008-04-24 | Oracle International Corporation | Encoding insignificant whitespace of XML data |
US20080115125A1 (en) * | 2006-11-13 | 2008-05-15 | Cingular Wireless Ii, Llc | Optimizing static dictionary usage for signal compression and for hypertext transfer protocol compression in a wireless network |
US7376641B2 (en) | 2000-05-02 | 2008-05-20 | International Business Machines Corporation | Information retrieval from a collection of data |
US7389225B1 (en) | 2000-10-18 | 2008-06-17 | Novell, Inc. | Method and mechanism for superpositioning state vectors in a semantic abstract |
US20080288457A1 (en) * | 2007-05-18 | 2008-11-20 | Cvon Innovations Ltd. | Allocation system and method |
US20080298458A1 (en) * | 2007-06-01 | 2008-12-04 | Research In Motion Limited | Method and apparatus for communicating compression state information for interactive compression |
US20080306729A1 (en) * | 2002-02-01 | 2008-12-11 | Youssef Drissi | Method and system for searching a multi-lingual database |
US20090079729A1 (en) * | 2007-09-24 | 2009-03-26 | Microsoft Corporation | Rendering three-dimensional objects on a server computer |
US20090112902A1 (en) * | 2007-10-29 | 2009-04-30 | Oracle International Corporation | Document fidelity with binary xml storage |
US7574719B1 (en) | 2002-06-27 | 2009-08-11 | Microsoft Corporation | Program guide data compression |
US20090234718A1 (en) * | 2000-09-05 | 2009-09-17 | Novell, Inc. | Predictive service systems using emotion detection |
US20090262741A1 (en) * | 2000-06-23 | 2009-10-22 | Jungck Peder J | Transparent Provisioning of Services Over a Network |
US20090271181A1 (en) * | 2008-04-24 | 2009-10-29 | International Business Machines Corporation | Dictionary for textual data compression and decompression |
US20090271180A1 (en) * | 2008-04-24 | 2009-10-29 | International Business Machines Corporation | Dictionary for textual data compression and decompression |
US20100103837A1 (en) * | 2000-06-23 | 2010-04-29 | Jungck Peder J | Transparent provisioning of network access to an application |
US20100122312A1 (en) * | 2008-11-07 | 2010-05-13 | Novell, Inc. | Predictive service systems |
US20100169337A1 (en) * | 2008-12-30 | 2010-07-01 | Novell, Inc. | Identity analysis and correlation |
US20100169314A1 (en) * | 2008-12-30 | 2010-07-01 | Novell, Inc. | Content analysis and correlation |
US20100169315A1 (en) * | 2008-12-30 | 2010-07-01 | Novell, Inc. | Attribution analysis and correlation |
US7752159B2 (en) | 2001-01-03 | 2010-07-06 | International Business Machines Corporation | System and method for classifying text |
US7756810B2 (en) | 2003-05-06 | 2010-07-13 | International Business Machines Corporation | Software tool for training and testing a knowledge base |
US20100250479A1 (en) * | 2009-03-31 | 2010-09-30 | Novell, Inc. | Intellectual property discovery and mapping systems and methods |
US7809714B1 (en) | 2007-04-30 | 2010-10-05 | Lawrence Richard Smith | Process for enhancing queries for information retrieval |
US20100257576A1 (en) * | 2000-01-07 | 2010-10-07 | Luis Valente | Pdstudio design system and method |
US20100280818A1 (en) * | 2006-03-03 | 2010-11-04 | Childers Stephen R | Key Talk |
US20110106813A1 (en) * | 1999-02-25 | 2011-05-05 | Indacon, Inc. | Database System and Method for Data Acquisition and Perusal |
US8145724B1 (en) | 2000-05-25 | 2012-03-27 | International Business Machines Corporation | Method of, system for, and computer program product for providing a data structure for configuring connections between a local workstation file system and a remote host file system |
US20120197630A1 (en) * | 2011-01-28 | 2012-08-02 | Lyons Kenton M | Methods and systems to summarize a source text as a function of contextual information |
US8250062B2 (en) | 2007-11-09 | 2012-08-21 | Oracle International Corporation | Optimized streaming evaluation of XML queries |
US8290768B1 (en) | 2000-06-21 | 2012-10-16 | International Business Machines Corporation | System and method for determining a set of attributes based on content of communications |
US8327440B2 (en) | 2004-11-08 | 2012-12-04 | Bt Web Solutions, Llc | Method and apparatus for enhanced browsing with security scanning |
US8391148B1 (en) * | 2007-07-30 | 2013-03-05 | Rockstar Consortion USLP | Method and apparatus for Ethernet data compression |
US8478732B1 (en) * | 2000-05-02 | 2013-07-02 | International Business Machines Corporation | Database aliasing in information access system |
US8527513B2 (en) | 2010-08-26 | 2013-09-03 | Lexisnexis, A Division Of Reed Elsevier Inc. | Systems and methods for lexicon generation |
US20130305141A1 (en) * | 2003-06-26 | 2013-11-14 | International Business Machines Corporation | Rich text handling for a web application |
US20140040726A1 (en) * | 2003-09-12 | 2014-02-06 | Aristocrat Technologies Australia Pty Limited | Adaptive display system and method for a gaming machine |
US8751513B2 (en) | 2010-08-31 | 2014-06-10 | Apple Inc. | Indexing and tag generation of content for optimal delivery of invitational content |
US20150113366A1 (en) * | 2000-02-04 | 2015-04-23 | Facebook, Inc. | Methods for dynamic document generation |
US20160026896A1 (en) * | 2013-03-15 | 2016-01-28 | Dropbox, Inc. | Presentation and organization of content |
US20160197621A1 (en) * | 2015-01-04 | 2016-07-07 | Emc Corporation | Text compression and decompression |
US20160275072A1 (en) * | 2015-03-16 | 2016-09-22 | Fujitsu Limited | Information processing apparatus, and data management method |
US20170039219A1 (en) * | 2015-08-04 | 2017-02-09 | International Business Machines Corporation | Deduplication by phrase substitution within chunks of substantially similar content |
US9584665B2 (en) | 2000-06-21 | 2017-02-28 | International Business Machines Corporation | System and method for optimizing timing of responses to customer communications |
US9699129B1 (en) | 2000-06-21 | 2017-07-04 | International Business Machines Corporation | System and method for increasing email productivity |
US9805312B1 (en) * | 2013-12-13 | 2017-10-31 | Google Inc. | Using an integerized representation for large-scale machine learning data |
EP3276507A1 (en) * | 2016-07-25 | 2018-01-31 | Fujitsu Limited | Encoding device, encoding method and search method |
US20180101580A1 (en) * | 2016-10-07 | 2018-04-12 | Fujitsu Limited | Non-transitory computer-readable recording medium, encoded data searching method, and encoded data searching apparatus |
US20180121922A1 (en) * | 2016-10-28 | 2018-05-03 | Fair Isaac Corporation | High resolution transaction-level fraud detection for payment cards in a potential state of fraud |
US10055501B2 (en) | 2003-05-06 | 2018-08-21 | International Business Machines Corporation | Web-based customer service interface |
US10158735B2 (en) * | 2015-08-07 | 2018-12-18 | Sonicwall Inc. | Read-ahead on signed connections with unsigning, inline, transparent proxies |
US10257196B2 (en) | 2013-11-11 | 2019-04-09 | Amazon Technologies, Inc. | Access control for a document management and collaboration system |
US10313486B2 (en) | 2015-01-07 | 2019-06-04 | Sonicwall Inc. | Optimizing transfer of fragmented packetized data |
US10432603B2 (en) | 2014-09-29 | 2019-10-01 | Amazon Technologies, Inc. | Access to documents in a document management and collaboration system |
US10540404B1 (en) * | 2014-02-07 | 2020-01-21 | Amazon Technologies, Inc. | Forming a document collection in a document management and collaboration system |
US10541973B2 (en) * | 1998-02-23 | 2020-01-21 | Transperfect Global, Inc. | Service of cached translated content in a requested language |
US10599753B1 (en) | 2013-11-11 | 2020-03-24 | Amazon Technologies, Inc. | Document version control in collaborative environment |
US10681188B2 (en) | 2015-05-26 | 2020-06-09 | Sonicwall Inc. | Reducing transmission pathway lengths within a distributed network |
US10691877B1 (en) | 2014-02-07 | 2020-06-23 | Amazon Technologies, Inc. | Homogenous insertion of interactions into documents |
US10732993B2 (en) | 2018-03-08 | 2020-08-04 | Micah Mossman | Interactive library system and method of interactive, real-time creation and customization |
US10877953B2 (en) | 2013-11-11 | 2020-12-29 | Amazon Technologies, Inc. | Processing service requests for non-transactional databases |
US10963924B1 (en) | 2014-03-10 | 2021-03-30 | A9.Com, Inc. | Media processing techniques for enhancing content |
US11068486B2 (en) * | 2014-04-04 | 2021-07-20 | Siemens Aktiengesellschaft | Method for automatically processing a number of log files of an automation system |
US11263533B2 (en) * | 2018-07-12 | 2022-03-01 | Sap Portals Israel Ltd. | Dynamic configurable rule representation |
US11301530B2 (en) | 2018-03-08 | 2022-04-12 | Micah Mossman | Interactive library system and method of interactive, real-time creation and customization |
US11301531B2 (en) | 2018-03-08 | 2022-04-12 | Micah Mossman | Interactive library system and method of interactive, real-time creation and customization |
US11301424B2 (en) | 2018-03-08 | 2022-04-12 | Micah Mossman | Interactive library system and method of interactive, real-time creation and customization |
US11308112B2 (en) | 2018-03-08 | 2022-04-19 | Micah Mossman | Interactive library system and method of interactive, real-time creation and customization |
US20230333821A1 (en) * | 2022-04-15 | 2023-10-19 | Microsoft Technology Licensing, Llc | Editing Files using a Pattern-Completion Engine |
CN116911321A (en) * | 2023-06-21 | 2023-10-20 | 三峡高科信息技术有限责任公司 | Method and assembly for front-end automatic translation of dictionary values |
CN116911321B (en) * | 2023-06-21 | 2024-05-14 | 三峡高科信息技术有限责任公司 | Method and assembly for front-end automatic translation of dictionary values |
Citations (16)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5099426A (en) * | 1989-01-19 | 1992-03-24 | International Business Machines Corporation | Method for use of morphological information to cross reference keywords used for information retrieval |
US5146552A (en) * | 1990-02-28 | 1992-09-08 | International Business Machines Corporation | Method for associating annotation with electronically published material |
US5214696A (en) * | 1992-02-04 | 1993-05-25 | International Business Machines Corporation | Data processing system and method to produce softcopy book readers which are limited to reading only books published by a specific publisher |
US5367621A (en) * | 1991-09-06 | 1994-11-22 | International Business Machines Corporation | Data processing method to provide a generalized link from a reference point in an on-line book to an arbitrary multimedia object which can be dynamically updated |
US5551026A (en) * | 1987-05-26 | 1996-08-27 | Xerox Corporation | Stored mapping data with information for skipping branches while keeping count of suffix endings |
WO1996029663A1 (en) * | 1995-03-17 | 1996-09-26 | Microsoft Corporation | Computer system and computer-implemented process for remote editing of computer files |
US5572643A (en) * | 1995-10-19 | 1996-11-05 | Judson; David H. | Web browser with dynamic display of information objects during linking |
US5608396A (en) * | 1995-02-28 | 1997-03-04 | International Business Machines Corporation | Efficient Ziv-Lempel LZI data compression system using variable code fields |
US5614899A (en) * | 1993-12-03 | 1997-03-25 | Matsushita Electric Co., Ltd. | Apparatus and method for compressing texts |
US5623601A (en) * | 1994-11-18 | 1997-04-22 | Milkway Networks Corporation | Apparatus and method for providing a secure gateway for communication and data exchanges between networks |
US5680628A (en) * | 1995-07-19 | 1997-10-21 | Inso Corporation | Method and apparatus for automated search and retrieval process |
US5708825A (en) * | 1995-05-26 | 1998-01-13 | Iconovex Corporation | Automatic summary page creation and hyperlink generation |
US5721939A (en) * | 1995-08-03 | 1998-02-24 | Xerox Corporation | Method and apparatus for tokenizing text |
US5724593A (en) * | 1995-06-07 | 1998-03-03 | International Language Engineering Corp. | Machine assisted translation tools |
US5740060A (en) * | 1995-08-07 | 1998-04-14 | Daifuku Co., Ltd. | Storage and materials handling facility |
US5890103A (en) * | 1995-07-19 | 1999-03-30 | Lernout & Hauspie Speech Products N.V. | Method and apparatus for improved tokenization of natural language text |
-
1997
- 1997-11-26 US US08/979,181 patent/US5991713A/en not_active Expired - Lifetime
Patent Citations (16)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5551026A (en) * | 1987-05-26 | 1996-08-27 | Xerox Corporation | Stored mapping data with information for skipping branches while keeping count of suffix endings |
US5099426A (en) * | 1989-01-19 | 1992-03-24 | International Business Machines Corporation | Method for use of morphological information to cross reference keywords used for information retrieval |
US5146552A (en) * | 1990-02-28 | 1992-09-08 | International Business Machines Corporation | Method for associating annotation with electronically published material |
US5367621A (en) * | 1991-09-06 | 1994-11-22 | International Business Machines Corporation | Data processing method to provide a generalized link from a reference point in an on-line book to an arbitrary multimedia object which can be dynamically updated |
US5214696A (en) * | 1992-02-04 | 1993-05-25 | International Business Machines Corporation | Data processing system and method to produce softcopy book readers which are limited to reading only books published by a specific publisher |
US5614899A (en) * | 1993-12-03 | 1997-03-25 | Matsushita Electric Co., Ltd. | Apparatus and method for compressing texts |
US5623601A (en) * | 1994-11-18 | 1997-04-22 | Milkway Networks Corporation | Apparatus and method for providing a secure gateway for communication and data exchanges between networks |
US5608396A (en) * | 1995-02-28 | 1997-03-04 | International Business Machines Corporation | Efficient Ziv-Lempel LZI data compression system using variable code fields |
WO1996029663A1 (en) * | 1995-03-17 | 1996-09-26 | Microsoft Corporation | Computer system and computer-implemented process for remote editing of computer files |
US5708825A (en) * | 1995-05-26 | 1998-01-13 | Iconovex Corporation | Automatic summary page creation and hyperlink generation |
US5724593A (en) * | 1995-06-07 | 1998-03-03 | International Language Engineering Corp. | Machine assisted translation tools |
US5680628A (en) * | 1995-07-19 | 1997-10-21 | Inso Corporation | Method and apparatus for automated search and retrieval process |
US5890103A (en) * | 1995-07-19 | 1999-03-30 | Lernout & Hauspie Speech Products N.V. | Method and apparatus for improved tokenization of natural language text |
US5721939A (en) * | 1995-08-03 | 1998-02-24 | Xerox Corporation | Method and apparatus for tokenizing text |
US5740060A (en) * | 1995-08-07 | 1998-04-14 | Daifuku Co., Ltd. | Storage and materials handling facility |
US5572643A (en) * | 1995-10-19 | 1996-11-05 | Judson; David H. | Web browser with dynamic display of information objects during linking |
Cited By (306)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6161084A (en) * | 1997-03-07 | 2000-12-12 | Microsoft Corporation | Information retrieval utilizing semantic representation of text by identifying hypernyms and indexing multiple tokenized semantic structures to a same passage of text |
US6330574B1 (en) * | 1997-08-05 | 2001-12-11 | Fujitsu Limited | Compression/decompression of tags in markup documents by creating a tag code/decode table based on the encoding of tags in a DTD included in the documents |
US6272492B1 (en) * | 1997-11-21 | 2001-08-07 | Ibm Corporation | Front-end proxy for transparently increasing web server functionality |
US6230168B1 (en) * | 1997-11-26 | 2001-05-08 | International Business Machines Corp. | Method for automatically constructing contexts in a hypertext collection |
US10541974B2 (en) * | 1998-02-23 | 2020-01-21 | Transperfect Global, Inc. | Intercepting web server requests and localizing content |
US10541973B2 (en) * | 1998-02-23 | 2020-01-21 | Transperfect Global, Inc. | Service of cached translated content in a requested language |
US20020188604A1 (en) * | 1998-04-30 | 2002-12-12 | Katsumi Tada | Registration method and search method for structured documents |
US6826567B2 (en) * | 1998-04-30 | 2004-11-30 | Hitachi, Ltd. | Registration method and search method for structured documents |
US6665836B1 (en) * | 1998-06-17 | 2003-12-16 | Siemens Corporate Research, Inc. | Method for managing information on an information net |
US6330566B1 (en) * | 1998-06-22 | 2001-12-11 | Microsoft Corporation | Apparatus and method for optimizing client-state data storage |
US6108619A (en) * | 1998-07-02 | 2000-08-22 | Novell, Inc. | Method and apparatus for semantic characterization of general content streams and repositories |
US7197451B1 (en) | 1998-07-02 | 2007-03-27 | Novell, Inc. | Method and mechanism for the creation, maintenance, and comparison of semantic abstracts |
US6295092B1 (en) * | 1998-07-30 | 2001-09-25 | Cbs Corporation | System for analyzing television programs |
US20040193636A1 (en) * | 1998-08-10 | 2004-09-30 | Black Jeffrey Dean | Method for identifying related pages in a hyperlinked database |
US6665837B1 (en) * | 1998-08-10 | 2003-12-16 | Overture Services, Inc. | Method for identifying related pages in a hyperlinked database |
US7630973B2 (en) * | 1998-08-10 | 2009-12-08 | Yahoo! Inc. | Method for identifying related pages in a hyperlinked database |
US6202201B1 (en) * | 1998-09-23 | 2001-03-13 | Netcreate Systems, Inc. | Text object compilation method and system |
US6292801B1 (en) * | 1998-10-02 | 2001-09-18 | Rene L. Campbell | System and method for managing computer and phone network resources |
US20050185673A1 (en) * | 1998-10-02 | 2005-08-25 | Campbell Rene L. | System and Method for Managing Computer and Phone Network Resources |
US20030009464A1 (en) * | 1998-10-02 | 2003-01-09 | Campbell Rene L. | System and method for managing computer and phone network resources |
US6163811A (en) * | 1998-10-21 | 2000-12-19 | Wildseed, Limited | Token based source file compression/decompression and its application |
WO2000023905A1 (en) * | 1998-10-21 | 2000-04-27 | Wildseed, Ltd. | Token based source file compression/decompression and its application |
US6405199B1 (en) * | 1998-10-30 | 2002-06-11 | Novell, Inc. | Method and apparatus for semantic token generation based on marked phrases in a content stream |
US6178461B1 (en) * | 1998-12-08 | 2001-01-23 | Lucent Technologies Inc. | Cache-based compaction technique for internet browsing using similar objects in client cache as reference objects |
US20110106813A1 (en) * | 1999-02-25 | 2011-05-05 | Indacon, Inc. | Database System and Method for Data Acquisition and Perusal |
US8396856B2 (en) | 1999-02-25 | 2013-03-12 | Robert Leland Jensen | Database system and method for data acquisition and perusal |
US7308508B1 (en) * | 1999-07-13 | 2007-12-11 | Sony Corporation | Distribution contents forming method, contents distributing method and apparatus, and code converting method |
US7653752B2 (en) | 1999-07-13 | 2010-01-26 | Sony Corporation | Distribution contents forming method, contents distributing method and apparatus, and code converting method |
US20080028101A1 (en) * | 1999-07-13 | 2008-01-31 | Sony Corporation | Distribution contents forming method, contents distributing method and apparatus, and code converting method |
US20030037051A1 (en) * | 1999-07-20 | 2003-02-20 | Gruenwald Bjorn J. | System and method for organizing data |
US7698283B2 (en) | 1999-07-20 | 2010-04-13 | Primentia, Inc. | System and method for organizing data |
US20020194176A1 (en) * | 1999-07-20 | 2002-12-19 | Gruenwald Bjorn J. | System and method for organizing data |
US20110010398A1 (en) * | 1999-07-20 | 2011-01-13 | Gruenwald Bjorn J | System and Method for Organizing Data |
US7080369B1 (en) * | 1999-11-05 | 2006-07-18 | Sun Microsystems, Inc. | Method and apparatus for producing compressed compiler products |
US20010054048A1 (en) * | 1999-12-22 | 2001-12-20 | Kelsey Julian Benjamin | Structures to represent poorly formed HTML documents |
AU771220B2 (en) * | 1999-12-22 | 2004-03-18 | Canon Kabushiki Kaisha | Structures to represent poorly formed HTML documents |
US7058884B2 (en) | 1999-12-22 | 2006-06-06 | Canon Kabushiki Kaisha | Structures to represent poorly formed HTML documents |
WO2001050298A3 (en) * | 2000-01-05 | 2003-05-30 | Weblink Ltd | Coding and transmission of multiple web pages |
WO2001050298A2 (en) * | 2000-01-05 | 2001-07-12 | Weblink, Ltd. | Coding and transmission of multiple web pages |
US20100257576A1 (en) * | 2000-01-07 | 2010-10-07 | Luis Valente | Pdstudio design system and method |
US7478422B2 (en) | 2000-01-07 | 2009-01-13 | Securify, Inc. | Declarative language for specifying a security policy |
US20040250112A1 (en) * | 2000-01-07 | 2004-12-09 | Valente Luis Filipe Pereira | Declarative language for specifying a security policy |
US7246370B2 (en) * | 2000-01-07 | 2007-07-17 | Security, Inc. | PDstudio design system and method |
US8074256B2 (en) * | 2000-01-07 | 2011-12-06 | Mcafee, Inc. | Pdstudio design system and method |
US20030110192A1 (en) * | 2000-01-07 | 2003-06-12 | Luis Valente | PDstudio design system and method |
US9785723B2 (en) | 2000-02-04 | 2017-10-10 | Facebook, Inc. | Methods for dynamic document generation |
US9830399B2 (en) * | 2000-02-04 | 2017-11-28 | Facebook, Inc. | Methods for dynamic document generation |
US20150113366A1 (en) * | 2000-02-04 | 2015-04-23 | Facebook, Inc. | Methods for dynamic document generation |
US20070078870A1 (en) * | 2000-02-25 | 2007-04-05 | Novell, Inc. | Construction, manipulation, and comparison of a multi-dimensional semantic space |
US7475008B2 (en) | 2000-02-25 | 2009-01-06 | Novell, Inc. | Construction, manipulation, and comparison of a multi-dimensional semantic space |
US20080052283A1 (en) * | 2000-02-25 | 2008-02-28 | Novell, Inc. | Construction, manipulation, and comparison of a multi-dimensional semantic space |
US8131741B2 (en) | 2000-02-25 | 2012-03-06 | Novell Intellectual Property Holdings, Inc. | Construction, manipulation, and comparison of a multi-dimensional semantic space |
US7152031B1 (en) | 2000-02-25 | 2006-12-19 | Novell, Inc. | Construction, manipulation, and comparison of a multi-dimensional semantic space |
US7702677B2 (en) | 2000-05-02 | 2010-04-20 | International Business Machines Corporation | Information retrieval from a collection of data |
US7376641B2 (en) | 2000-05-02 | 2008-05-20 | International Business Machines Corporation | Information retrieval from a collection of data |
US7243095B2 (en) | 2000-05-02 | 2007-07-10 | International Business Machines Corporation | Prose feedback in information access system |
US6745181B1 (en) | 2000-05-02 | 2004-06-01 | Iphrase.Com, Inc. | Information access method |
US20080208821A1 (en) * | 2000-05-02 | 2008-08-28 | International Business Machines Corporation | Information retrieval from a collection of data |
US8478732B1 (en) * | 2000-05-02 | 2013-07-02 | International Business Machines Corporation | Database aliasing in information access system |
US7127450B1 (en) | 2000-05-02 | 2006-10-24 | International Business Machines Corporation | Intelligent discard in information access system |
US6711561B1 (en) | 2000-05-02 | 2004-03-23 | Iphrase.Com, Inc. | Prose feedback in information access system |
US6658461B1 (en) | 2000-05-25 | 2003-12-02 | International Business Machines Corporation | Method of, system for, and computer program product for providing a user interface for configuring connections between a local workstation file system and a remote host file system |
US8145724B1 (en) | 2000-05-25 | 2012-03-27 | International Business Machines Corporation | Method of, system for, and computer program product for providing a data structure for configuring connections between a local workstation file system and a remote host file system |
US7441184B2 (en) * | 2000-05-26 | 2008-10-21 | Bull S.A. | System and method for internationalizing the content of markup documents in a computer system |
US20030135501A1 (en) * | 2000-05-26 | 2003-07-17 | Laurent Frerebeau | System and method for internationalizing the content of markup documents in a computer system |
US20010056445A1 (en) * | 2000-06-15 | 2001-12-27 | Cognisphere, Inc. | System and method for text structuring and text generation |
US6941513B2 (en) * | 2000-06-15 | 2005-09-06 | Cognisphere, Inc. | System and method for text structuring and text generation |
US9699129B1 (en) | 2000-06-21 | 2017-07-04 | International Business Machines Corporation | System and method for increasing email productivity |
US9584665B2 (en) | 2000-06-21 | 2017-02-28 | International Business Machines Corporation | System and method for optimizing timing of responses to customer communications |
US8290768B1 (en) | 2000-06-21 | 2012-10-16 | International Business Machines Corporation | System and method for determining a set of attributes based on content of communications |
US6728785B1 (en) | 2000-06-23 | 2004-04-27 | Cloudshield Technologies, Inc. | System and method for dynamic compression of data |
US7570663B2 (en) | 2000-06-23 | 2009-08-04 | Cloudshire Technologies, Inc. | System and method for processing packets according to concurrently reconfigurable rules |
US20060029038A1 (en) * | 2000-06-23 | 2006-02-09 | Cloudshield Technologies, Inc. | System and method for processing packets using location and content addressable memories |
US7844740B2 (en) | 2000-06-23 | 2010-11-30 | Cloudshield Technologies, Inc. | System and method for dynamic compression of data |
US20020009079A1 (en) * | 2000-06-23 | 2002-01-24 | Jungck Peder J. | Edge adapter apparatus and method |
US6829654B1 (en) | 2000-06-23 | 2004-12-07 | Cloudshield Technologies, Inc. | Apparatus and method for virtual edge placement of web sites |
US20050021863A1 (en) * | 2000-06-23 | 2005-01-27 | Cloudshield Technologies, Inc. | Apparatus and method for virtual edge placement of web sites |
US20100103837A1 (en) * | 2000-06-23 | 2010-04-29 | Jungck Peder J | Transparent provisioning of network access to an application |
US20060029104A1 (en) * | 2000-06-23 | 2006-02-09 | Cloudshield Technologies, Inc. | System and method for processing packets according to concurrently reconfigurable rules |
US20060075139A1 (en) * | 2000-06-23 | 2006-04-06 | Cloudshield Technologies, Inc. | Apparatus and method for domain name resolution |
US9634943B2 (en) | 2000-06-23 | 2017-04-25 | Cloudshield Technologies, Inc. | Transparent provisioning of services over a network |
US9537824B2 (en) | 2000-06-23 | 2017-01-03 | Cloudshield Technologies, Inc. | Transparent provisioning of network access to an application |
US7032031B2 (en) | 2000-06-23 | 2006-04-18 | Cloudshield Technologies, Inc. | Edge adapter apparatus and method |
US9444785B2 (en) | 2000-06-23 | 2016-09-13 | Cloudshield Technologies, Inc. | Transparent provisioning of network access to an application |
US8204082B2 (en) | 2000-06-23 | 2012-06-19 | Cloudshield Technologies, Inc. | Transparent provisioning of services over a network |
US7624142B2 (en) | 2000-06-23 | 2009-11-24 | Cloudshield Technologies, Inc. | System and method for processing packets according to user specified rules governed by a syntax |
US20090262741A1 (en) * | 2000-06-23 | 2009-10-22 | Jungck Peder J | Transparent Provisioning of Services Over a Network |
US7330908B2 (en) | 2000-06-23 | 2008-02-12 | Clouldshield Technologies, Inc. | System and method for processing packets using location and content addressable memories |
US9258241B2 (en) | 2000-06-23 | 2016-02-09 | Cloudshield Technologies, Inc. | Transparent provisioning of services over a network |
US8576881B2 (en) | 2000-06-23 | 2013-11-05 | Cloudshield Technologies, Inc. | Transparent provisioning of services over a network |
US8694610B2 (en) | 2000-06-23 | 2014-04-08 | Cloudshield Technologies, Inc. | Apparatus and method for domain name resolution |
US7437482B2 (en) | 2000-06-23 | 2008-10-14 | Cloudshield Technologies, Inc. | Method and apparatus for facilitating client server communications over a network |
US7114008B2 (en) | 2000-06-23 | 2006-09-26 | Cloudshield Technologies, Inc. | Edge adapter architecture apparatus and method |
US6704736B1 (en) | 2000-06-28 | 2004-03-09 | Microsoft Corporation | Method and apparatus for information transformation and exchange in a relational database environment |
US7337177B2 (en) | 2000-06-28 | 2008-02-26 | Microsoft Corporation | Method and apparatus for information transformation and exchange in a relational database environment |
US20060085409A1 (en) * | 2000-06-28 | 2006-04-20 | Microsoft Corporation | Method and apparatus for information transformation and exchange in a relational database environment |
US8140496B2 (en) | 2000-06-28 | 2012-03-20 | Microsoft Corporation | Method and apparatus for information transformation and exchange in a relational database environment |
US20040230569A1 (en) * | 2000-06-28 | 2004-11-18 | Microsoft Corporation | Method and apparatus for information transformation and exchange in a relational database environment |
US7743040B2 (en) | 2000-06-28 | 2010-06-22 | Microsoft Corporation | Method and apparatus for information transformation and exchange in a relational database environment |
US20100198868A1 (en) * | 2000-06-28 | 2010-08-05 | Microsoft Corporation | Method and apparatus for information transformation and exchange in a relational database environment |
US20070106491A1 (en) * | 2000-07-13 | 2007-05-10 | Novell, Inc. | Method and mechanism for the creation, maintenance, and comparison of semantic abstracts |
US7653530B2 (en) | 2000-07-13 | 2010-01-26 | Novell, Inc. | Method and mechanism for the creation, maintenance, and comparison of semantic abstracts |
US7672952B2 (en) | 2000-07-13 | 2010-03-02 | Novell, Inc. | System and method of semantic correlation of rich content |
US20070106651A1 (en) * | 2000-07-13 | 2007-05-10 | Novell, Inc. | System and method of semantic correlation of rich content |
US7177922B1 (en) | 2000-09-05 | 2007-02-13 | Novell, Inc. | Policy enforcement using the semantic characterization of traffic |
US7286977B1 (en) * | 2000-09-05 | 2007-10-23 | Novell, Inc. | Intentional-stance characterization of a general content stream or repository |
US20090234718A1 (en) * | 2000-09-05 | 2009-09-17 | Novell, Inc. | Predictive service systems using emotion detection |
US7562011B2 (en) | 2000-09-05 | 2009-07-14 | Novell, Inc. | Intentional-stance characterization of a general content stream or repository |
US20070073531A1 (en) * | 2000-09-05 | 2007-03-29 | Novell, Inc. | Intentional-stance characterization of a general content stream or repository |
US20040054973A1 (en) * | 2000-10-02 | 2004-03-18 | Akio Yamamoto | Method and apparatus for transforming contents on the web |
WO2002029590A1 (en) * | 2000-10-02 | 2002-04-11 | Hewlett-Packard Company | Method and apparatus for transforming contents on the web |
US7389225B1 (en) | 2000-10-18 | 2008-06-17 | Novell, Inc. | Method and mechanism for superpositioning state vectors in a semantic abstract |
US6850948B1 (en) * | 2000-10-30 | 2005-02-01 | Koninklijke Philips Electronics N.V. | Method and apparatus for compressing textual documents |
US7054953B1 (en) | 2000-11-07 | 2006-05-30 | Ui Evolution, Inc. | Method and apparatus for sending and receiving a data structure in a constituting element occurrence frequency based compressed form |
US7178100B2 (en) * | 2000-12-15 | 2007-02-13 | Call Charles G | Methods and apparatus for storing and manipulating variable length and fixed length data elements as a sequence of fixed length integers |
US20020143521A1 (en) * | 2000-12-15 | 2002-10-03 | Call Charles G. | Methods and apparatus for storing and manipulating variable length and fixed length data elements as a sequence of fixed length integers |
US7752159B2 (en) | 2001-01-03 | 2010-07-06 | International Business Machines Corporation | System and method for classifying text |
US7007105B1 (en) * | 2001-01-11 | 2006-02-28 | Remote Knowledge, Inc. | Method and system for improving data transmission and storage of markup language documents |
US20020161569A1 (en) * | 2001-03-02 | 2002-10-31 | International Business Machines | Machine translation system, method and program |
US7318021B2 (en) * | 2001-03-02 | 2008-01-08 | International Business Machines Corporation | Machine translation system, method and program |
US7136846B2 (en) | 2001-04-06 | 2006-11-14 | 2005 Keel Company, Inc. | Wireless information retrieval |
US20060080300A1 (en) * | 2001-04-12 | 2006-04-13 | Primentia, Inc. | System and method for organizing data |
US7870113B2 (en) | 2001-04-12 | 2011-01-11 | Primentia, Inc. | System and method for organizing data |
US7318144B2 (en) | 2001-05-15 | 2008-01-08 | Cloudshield Teechnologies, Inc. | Apparatus and method for interconnecting a processor to co-processors using shared memory |
US20050268072A1 (en) * | 2001-05-15 | 2005-12-01 | Zahid Najam | Apparatus and method for interconnecting a processor to co-processors using shared memory |
US20020194291A1 (en) * | 2001-05-15 | 2002-12-19 | Zahid Najam | Apparatus and method for interfacing with a high speed bi-directional network |
US7082502B2 (en) | 2001-05-15 | 2006-07-25 | Cloudshield Technologies, Inc. | Apparatus and method for interfacing with a high speed bi-directional network using a shared memory to store packet data |
US20060004912A1 (en) * | 2001-05-15 | 2006-01-05 | Zahid Najam | Apparatus and method for interfacing with a high speed bi-directional network |
US7210022B2 (en) | 2001-05-15 | 2007-04-24 | Cloudshield Technologies, Inc. | Apparatus and method for interconnecting a processor to co-processors using a shared memory as the communication interface |
US7428618B2 (en) | 2001-05-15 | 2008-09-23 | Cloudshield Technologies, Inc. | Apparatus and method for interfacing with a high speed bi-directional network |
USRE40169E1 (en) * | 2001-05-16 | 2008-03-25 | Cyberlink Corp. | System and method for processing a compressed data stream |
US20030004994A1 (en) * | 2001-06-28 | 2003-01-02 | Kamrowski Brian J. | Method and apparatus for content based HTML coding |
US20100254410A1 (en) * | 2001-07-09 | 2010-10-07 | Good Technology, Inc. | System and method for compressing data using field-based code word generation |
US20030009595A1 (en) * | 2001-07-09 | 2003-01-09 | Roger Collins | System and method for compressing data using field-based code word generation |
US7209876B2 (en) | 2001-11-13 | 2007-04-24 | Groove Unlimited, Llc | System and method for automated answering of natural language questions and queries |
US20030093276A1 (en) * | 2001-11-13 | 2003-05-15 | Miller Michael J. | System and method for automated answering of natural language questions and queries |
US20030131316A1 (en) * | 2002-01-07 | 2003-07-10 | Kyle Brown | Internationalizing SGML documents |
US8027966B2 (en) | 2002-02-01 | 2011-09-27 | International Business Machines Corporation | Method and system for searching a multi-lingual database |
US8027994B2 (en) | 2002-02-01 | 2011-09-27 | International Business Machines Corporation | Searching a multi-lingual database |
US20080306729A1 (en) * | 2002-02-01 | 2008-12-11 | Youssef Drissi | Method and system for searching a multi-lingual database |
US20080306923A1 (en) * | 2002-02-01 | 2008-12-11 | Youssef Drissi | Searching a multi-lingual database |
US20030149687A1 (en) * | 2002-02-01 | 2003-08-07 | International Business Machines Corporation | Retrieving matching documents by queries in any national language |
US7260570B2 (en) | 2002-02-01 | 2007-08-21 | International Business Machines Corporation | Retrieving matching documents by queries in any national language |
US20030159030A1 (en) * | 2002-02-15 | 2003-08-21 | Imetrikus, Inc. | Method and system for the secure transmission of a portion of a web page over a computer network |
WO2003071732A1 (en) * | 2002-02-15 | 2003-08-28 | Imetrikus, Inc. | Secure network transmission of web page elements |
US7783643B2 (en) | 2002-02-22 | 2010-08-24 | International Business Machines Corporation | Direct navigation for information retrieval |
US7343372B2 (en) | 2002-02-22 | 2008-03-11 | International Business Machines Corporation | Direct navigation for information retrieval |
US20040003343A1 (en) * | 2002-06-21 | 2004-01-01 | Microsoft Corporation | Method and system for encoding a mark-up language document |
US7669120B2 (en) * | 2002-06-21 | 2010-02-23 | Microsoft Corporation | Method and system for encoding a mark-up language document |
US7574719B1 (en) | 2002-06-27 | 2009-08-11 | Microsoft Corporation | Program guide data compression |
US8078742B2 (en) * | 2002-08-06 | 2011-12-13 | Koninklijke Philips Electronics N.V. | Network establishment and management protocol |
US20060031192A1 (en) * | 2002-08-06 | 2006-02-09 | Blackwell Robin J | Network establishment and management protocol |
US20060026291A1 (en) * | 2002-08-06 | 2006-02-02 | Blackwell Robin J | Network establishment and management protocol |
US8392601B2 (en) | 2002-08-06 | 2013-03-05 | Koninklijke Philips Electronics N.V. | Network establishment and management protocol |
US8874689B2 (en) | 2002-08-06 | 2014-10-28 | Koninklijke Philips N.V. | Network establishment and management protocol |
US20060041649A1 (en) * | 2002-08-06 | 2006-02-23 | Blackwell Robin J | Network establishment and management protocol |
EP1396794A3 (en) * | 2002-08-15 | 2007-12-12 | Microsoft Corporation | Method and apparatus for expanding dictionaries during parsing |
EP1396794A2 (en) * | 2002-08-15 | 2004-03-10 | Microsoft Corporation | Method and apparatus for expanding dictionaries during parsing |
US7158930B2 (en) * | 2002-08-15 | 2007-01-02 | Microsoft Corporation | Method and apparatus for expanding dictionaries during parsing |
US20040034525A1 (en) * | 2002-08-15 | 2004-02-19 | Pentheroudakis Joseph E. | Method and apparatus for expanding dictionaries during parsing |
US20040078422A1 (en) * | 2002-10-17 | 2004-04-22 | Toomey Christopher Newell | Detecting and blocking spoofed Web login pages |
US20040225646A1 (en) * | 2002-11-28 | 2004-11-11 | Miki Sasaki | Numerical expression retrieving device |
US20060142997A1 (en) * | 2002-12-27 | 2006-06-29 | Per Jakobsen | Predictive text entry and data compression method for a mobile communication terminal |
US20040158561A1 (en) * | 2003-02-04 | 2004-08-12 | Gruenwald Bjorn J. | System and method for translating languages using an intermediate content space |
US20040215978A1 (en) * | 2003-04-24 | 2004-10-28 | Nec Corporation | System for supporting security administration and method of doing the same |
US7739722B2 (en) * | 2003-04-24 | 2010-06-15 | Nec Corporation | System for supporting security administration and method of doing the same |
US20040225497A1 (en) * | 2003-05-05 | 2004-11-11 | Callahan James Patrick | Compressed yet quickly searchable digital textual data format |
US8495002B2 (en) | 2003-05-06 | 2013-07-23 | International Business Machines Corporation | Software tool for training and testing a knowledge base |
US10055501B2 (en) | 2003-05-06 | 2018-08-21 | International Business Machines Corporation | Web-based customer service interface |
US7756810B2 (en) | 2003-05-06 | 2010-07-13 | International Business Machines Corporation | Software tool for training and testing a knowledge base |
US7854009B2 (en) | 2003-06-12 | 2010-12-14 | International Business Machines Corporation | Method of securing access to IP LANs |
US20050005110A1 (en) * | 2003-06-12 | 2005-01-06 | International Business Machines Corporation | Method of securing access to IP LANs |
US10169310B2 (en) | 2003-06-26 | 2019-01-01 | International Business Machines Corporation | Rich text handling for a web application |
US10042828B2 (en) | 2003-06-26 | 2018-08-07 | International Business Machines Corporation | Rich text handling for a web application |
US9330078B2 (en) * | 2003-06-26 | 2016-05-03 | International Business Machines Corporation | Rich text handling for a web application |
US9256584B2 (en) | 2003-06-26 | 2016-02-09 | International Business Machines Corporation | Rich text handling for a web application |
US20130305141A1 (en) * | 2003-06-26 | 2013-11-14 | International Business Machines Corporation | Rich text handling for a web application |
US20050027731A1 (en) * | 2003-07-30 | 2005-02-03 | Daniel Revel | Compression dictionaries |
US20140040726A1 (en) * | 2003-09-12 | 2014-02-06 | Aristocrat Technologies Australia Pty Limited | Adaptive display system and method for a gaming machine |
US20050065773A1 (en) * | 2003-09-20 | 2005-03-24 | International Business Machines Corporation | Method of search content enhancement |
US20050065774A1 (en) * | 2003-09-20 | 2005-03-24 | International Business Machines Corporation | Method of self enhancement of search results through analysis of system logs |
US8014997B2 (en) | 2003-09-20 | 2011-09-06 | International Business Machines Corporation | Method of search content enhancement |
US7290278B2 (en) | 2003-10-02 | 2007-10-30 | Aol Llc, A Delaware Limited Liability Company | Identity based service system |
US20050187774A1 (en) * | 2004-02-25 | 2005-08-25 | Research In Motion Limited | System and method for multi-lingual translation |
US8498858B2 (en) * | 2004-02-25 | 2013-07-30 | Research In Motion Limited | System and method for multi-lingual translation |
US20130018647A1 (en) * | 2004-02-25 | 2013-01-17 | Research In Motion Limited | System and method for multi-lingual translation |
US8296126B2 (en) * | 2004-02-25 | 2012-10-23 | Research In Motion Limited | System and method for multi-lingual translation |
US20050234733A1 (en) * | 2004-04-14 | 2005-10-20 | Leitner Peter J | System and method for company valuation |
WO2006020595A1 (en) * | 2004-08-13 | 2006-02-23 | Google, Inc. | Multi-stage query processing system and method for use with tokenspace repository |
US9098501B2 (en) | 2004-08-13 | 2015-08-04 | Google Inc. | Generating content snippets using a tokenspace repository |
US7917480B2 (en) | 2004-08-13 | 2011-03-29 | Google Inc. | Document compression system and method for use with tokenspace repository |
US8407239B2 (en) | 2004-08-13 | 2013-03-26 | Google Inc. | Multi-stage query processing system and method for use with tokenspace repository |
US20110153577A1 (en) * | 2004-08-13 | 2011-06-23 | Jeffrey Dean | Query Processing System and Method for Use with Tokenspace Repository |
US9619565B1 (en) | 2004-08-13 | 2017-04-11 | Google Inc. | Generating content snippets using a tokenspace repository |
US20070220023A1 (en) * | 2004-08-13 | 2007-09-20 | Jeffrey Dean | Document compression system and method for use with tokenspace repository |
US8321445B2 (en) | 2004-08-13 | 2012-11-27 | Google Inc. | Generating content snippets using a tokenspace repository |
US9146967B2 (en) | 2004-08-13 | 2015-09-29 | Google Inc. | Multi-stage query processing system and method for use with tokenspace repository |
CN102142038B (en) * | 2004-08-13 | 2014-05-28 | 谷歌股份有限公司 | Multi-stage query processing system and method for use with tokenspace repository |
US20060036593A1 (en) * | 2004-08-13 | 2006-02-16 | Dean Jeffrey A | Multi-stage query processing system and method for use with tokenspace repository |
US20060074984A1 (en) * | 2004-09-27 | 2006-04-06 | Scott Milener | Graphical tree depicting search or browsing history |
US9942260B2 (en) | 2004-09-27 | 2018-04-10 | Cufer Asset Ltd. L.L.C. | Enhanced browsing with security scanning |
US11122072B2 (en) | 2004-09-27 | 2021-09-14 | Cufer Asset Ltd. L.L.C. | Enhanced browsing with security scanning |
US20060069618A1 (en) * | 2004-09-27 | 2006-03-30 | Scott Milener | Method and apparatus for enhanced browsing |
US10382471B2 (en) | 2004-09-27 | 2019-08-13 | Cufer Asset Ltd. L.L.C. | Enhanced browsing with security scanning |
US10592591B2 (en) | 2004-09-27 | 2020-03-17 | Cufer Asset Ltd. L.L.C. | Enhanced browsing with indication of prefetching status |
US20060070012A1 (en) * | 2004-09-27 | 2006-03-30 | Scott Milener | Method and apparatus for enhanced browsing |
US7840911B2 (en) | 2004-09-27 | 2010-11-23 | Scott Milener | Method and apparatus for enhanced browsing |
US9584539B2 (en) | 2004-09-27 | 2017-02-28 | Cufer Asset Ltd. L.L.C. | Enhanced browsing with security scanning |
US8037527B2 (en) | 2004-11-08 | 2011-10-11 | Bt Web Solutions, Llc | Method and apparatus for look-ahead security scanning |
US20060101514A1 (en) * | 2004-11-08 | 2006-05-11 | Scott Milener | Method and apparatus for look-ahead security scanning |
US8959630B2 (en) | 2004-11-08 | 2015-02-17 | Bt Web Solutions, Llc | Enhanced browsing with security scanning |
US9270699B2 (en) | 2004-11-08 | 2016-02-23 | Cufer Asset Ltd. L.L.C. | Enhanced browsing with security scanning |
US8327440B2 (en) | 2004-11-08 | 2012-12-04 | Bt Web Solutions, Llc | Method and apparatus for enhanced browsing with security scanning |
US20060101341A1 (en) * | 2004-11-10 | 2006-05-11 | James Kelly | Method and apparatus for enhanced browsing, using icons to indicate status of content and/or content retrieval |
US8732610B2 (en) | 2004-11-10 | 2014-05-20 | Bt Web Solutions, Llc | Method and apparatus for enhanced browsing, using icons to indicate status of content and/or content retrieval |
US20060212467A1 (en) * | 2005-03-21 | 2006-09-21 | Ravi Murthy | Encoding of hierarchically organized data for efficient storage and processing |
US8346737B2 (en) | 2005-03-21 | 2013-01-01 | Oracle International Corporation | Encoding of hierarchically organized data for efficient storage and processing |
GB2427803A (en) * | 2005-06-29 | 2007-01-03 | Symbian Software Ltd | E-mail/text message compression using differences from earlier messages or standard codebooks with specific message supplements |
US20070005807A1 (en) * | 2005-06-29 | 2007-01-04 | Symbian Software Limited | Delta code messaging |
US7587458B2 (en) | 2005-06-29 | 2009-09-08 | Nokia Corporation | Delta code messaging |
US7593949B2 (en) | 2006-01-09 | 2009-09-22 | Microsoft Corporation | Compression of structured documents |
US20070162479A1 (en) * | 2006-01-09 | 2007-07-12 | Microsoft Corporation | Compression of structured documents |
US20070206771A1 (en) * | 2006-03-03 | 2007-09-06 | Childers Stephen Steve R | Key talk |
US20100280818A1 (en) * | 2006-03-03 | 2010-11-04 | Childers Stephen R | Key Talk |
US8838650B2 (en) * | 2006-08-29 | 2014-09-16 | International Business Machines Corporation | Method and apparatus for preprocessing a plurality of documents for search and for presenting search result |
US20080086457A1 (en) * | 2006-08-29 | 2008-04-10 | Ben Fei | Method and apparatus for preprocessing a plurality of documents for search and for presenting search result |
US7627566B2 (en) * | 2006-10-20 | 2009-12-01 | Oracle International Corporation | Encoding insignificant whitespace of XML data |
US20080098019A1 (en) * | 2006-10-20 | 2008-04-24 | Oracle International Corporation | Encoding insignificant whitespace of XML data |
US20110176491A1 (en) * | 2006-11-13 | 2011-07-21 | Matthew Stafford | Optimizing static dictionary usage for signal compression and for hypertext transfer protocol compression in a wireless network |
US20080115125A1 (en) * | 2006-11-13 | 2008-05-15 | Cingular Wireless Ii, Llc | Optimizing static dictionary usage for signal compression and for hypertext transfer protocol compression in a wireless network |
US8868788B2 (en) | 2006-11-13 | 2014-10-21 | At&T Mobility Ii Llc | Optimizing static dictionary usage for signal compression and for hypertext transfer protocol compression in a wireless network |
US9953103B2 (en) | 2006-11-16 | 2018-04-24 | Oracle International Corporation | Client processing for binary XML in a database system |
US20070208752A1 (en) * | 2006-11-16 | 2007-09-06 | Bhushan Khaladkar | Client processing for binary XML in a database system |
US7809714B1 (en) | 2007-04-30 | 2010-10-05 | Lawrence Richard Smith | Process for enhancing queries for information retrieval |
US20080288642A1 (en) * | 2007-05-18 | 2008-11-20 | Cvon Innovations Limited | Allocation system and method |
US7653376B2 (en) | 2007-05-18 | 2010-01-26 | Cvon Innovations Limited | Method and system for network resources allocation |
US20080288457A1 (en) * | 2007-05-18 | 2008-11-20 | Cvon Innovations Ltd. | Allocation system and method |
US7590406B2 (en) | 2007-05-18 | 2009-09-15 | Cvon Innovations Ltd. | Method and system for network resources allocation |
US7664802B2 (en) * | 2007-05-18 | 2010-02-16 | Cvon Innovations Limited | System and method for identifying a characteristic of a set of data accessible via a link specifying a network location |
US7607094B2 (en) | 2007-05-18 | 2009-10-20 | CVON Innvovations Limited | Allocation system and method |
US20080287113A1 (en) * | 2007-05-18 | 2008-11-20 | Cvon Innovations Ltd. | Allocation system and method |
US20080288881A1 (en) * | 2007-05-18 | 2008-11-20 | Cvon Innovations Ltd. | Allocation system and method |
US20080298458A1 (en) * | 2007-06-01 | 2008-12-04 | Research In Motion Limited | Method and apparatus for communicating compression state information for interactive compression |
US8391148B1 (en) * | 2007-07-30 | 2013-03-05 | Rockstar Consortion USLP | Method and apparatus for Ethernet data compression |
US20090079729A1 (en) * | 2007-09-24 | 2009-03-26 | Microsoft Corporation | Rendering three-dimensional objects on a server computer |
US8134553B2 (en) * | 2007-09-24 | 2012-03-13 | Microsoft Corporation | Rendering three-dimensional objects on a server computer |
US20090112902A1 (en) * | 2007-10-29 | 2009-04-30 | Oracle International Corporation | Document fidelity with binary xml storage |
US8090731B2 (en) | 2007-10-29 | 2012-01-03 | Oracle International Corporation | Document fidelity with binary XML storage |
US8250062B2 (en) | 2007-11-09 | 2012-08-21 | Oracle International Corporation | Optimized streaming evaluation of XML queries |
US8326604B2 (en) * | 2008-04-24 | 2012-12-04 | International Business Machines Corporation | Dictionary for textual data compression and decompression |
US20090271181A1 (en) * | 2008-04-24 | 2009-10-29 | International Business Machines Corporation | Dictionary for textual data compression and decompression |
US8326605B2 (en) * | 2008-04-24 | 2012-12-04 | International Business Machines Incorporation | Dictionary for textual data compression and decompression |
US20090271180A1 (en) * | 2008-04-24 | 2009-10-29 | International Business Machines Corporation | Dictionary for textual data compression and decompression |
US20100122312A1 (en) * | 2008-11-07 | 2010-05-13 | Novell, Inc. | Predictive service systems |
US8296297B2 (en) | 2008-12-30 | 2012-10-23 | Novell, Inc. | Content analysis and correlation |
US20100169315A1 (en) * | 2008-12-30 | 2010-07-01 | Novell, Inc. | Attribution analysis and correlation |
US8301622B2 (en) | 2008-12-30 | 2012-10-30 | Novell, Inc. | Identity analysis and correlation |
US20100169314A1 (en) * | 2008-12-30 | 2010-07-01 | Novell, Inc. | Content analysis and correlation |
US8386475B2 (en) | 2008-12-30 | 2013-02-26 | Novell, Inc. | Attribution analysis and correlation |
US20100169337A1 (en) * | 2008-12-30 | 2010-07-01 | Novell, Inc. | Identity analysis and correlation |
US20100250479A1 (en) * | 2009-03-31 | 2010-09-30 | Novell, Inc. | Intellectual property discovery and mapping systems and methods |
US8527513B2 (en) | 2010-08-26 | 2013-09-03 | Lexisnexis, A Division Of Reed Elsevier Inc. | Systems and methods for lexicon generation |
US8751513B2 (en) | 2010-08-31 | 2014-06-10 | Apple Inc. | Indexing and tag generation of content for optimal delivery of invitational content |
US20120197630A1 (en) * | 2011-01-28 | 2012-08-02 | Lyons Kenton M | Methods and systems to summarize a source text as a function of contextual information |
US9530075B2 (en) | 2013-03-15 | 2016-12-27 | Dropbox, Inc. | Presentation and organization of content |
US9563820B2 (en) * | 2013-03-15 | 2017-02-07 | Dropbox, Inc. | Presentation and organization of content |
US20160026896A1 (en) * | 2013-03-15 | 2016-01-28 | Dropbox, Inc. | Presentation and organization of content |
US11336648B2 (en) | 2013-11-11 | 2022-05-17 | Amazon Technologies, Inc. | Document management and collaboration system |
US10686788B2 (en) | 2013-11-11 | 2020-06-16 | Amazon Technologies, Inc. | Developer based document collaboration |
US10257196B2 (en) | 2013-11-11 | 2019-04-09 | Amazon Technologies, Inc. | Access control for a document management and collaboration system |
US10599753B1 (en) | 2013-11-11 | 2020-03-24 | Amazon Technologies, Inc. | Document version control in collaborative environment |
US10877953B2 (en) | 2013-11-11 | 2020-12-29 | Amazon Technologies, Inc. | Processing service requests for non-transactional databases |
US10567382B2 (en) | 2013-11-11 | 2020-02-18 | Amazon Technologies, Inc. | Access control for a document management and collaboration system |
US9805312B1 (en) * | 2013-12-13 | 2017-10-31 | Google Inc. | Using an integerized representation for large-scale machine learning data |
US10691877B1 (en) | 2014-02-07 | 2020-06-23 | Amazon Technologies, Inc. | Homogenous insertion of interactions into documents |
US10540404B1 (en) * | 2014-02-07 | 2020-01-21 | Amazon Technologies, Inc. | Forming a document collection in a document management and collaboration system |
US11699174B2 (en) | 2014-03-10 | 2023-07-11 | A9.Com, Inc. | Media processing techniques for enhancing content |
US10963924B1 (en) | 2014-03-10 | 2021-03-30 | A9.Com, Inc. | Media processing techniques for enhancing content |
US11068486B2 (en) * | 2014-04-04 | 2021-07-20 | Siemens Aktiengesellschaft | Method for automatically processing a number of log files of an automation system |
US10432603B2 (en) | 2014-09-29 | 2019-10-01 | Amazon Technologies, Inc. | Access to documents in a document management and collaboration system |
US20160197621A1 (en) * | 2015-01-04 | 2016-07-07 | Emc Corporation | Text compression and decompression |
US10498355B2 (en) * | 2015-01-04 | 2019-12-03 | EMC IP Holding Company LLC | Searchable, streaming text compression and decompression using a dictionary |
CN105893337A (en) * | 2015-01-04 | 2016-08-24 | 伊姆西公司 | Method and equipment for text compression and decompression |
US10313486B2 (en) | 2015-01-07 | 2019-06-04 | Sonicwall Inc. | Optimizing transfer of fragmented packetized data |
US20160275072A1 (en) * | 2015-03-16 | 2016-09-22 | Fujitsu Limited | Information processing apparatus, and data management method |
US10380240B2 (en) * | 2015-03-16 | 2019-08-13 | Fujitsu Limited | Apparatus and method for data compression extension |
US10681188B2 (en) | 2015-05-26 | 2020-06-09 | Sonicwall Inc. | Reducing transmission pathway lengths within a distributed network |
US20170039219A1 (en) * | 2015-08-04 | 2017-02-09 | International Business Machines Corporation | Deduplication by phrase substitution within chunks of substantially similar content |
US10545920B2 (en) * | 2015-08-04 | 2020-01-28 | International Business Machines Corporation | Deduplication by phrase substitution within chunks of substantially similar content |
US10158735B2 (en) * | 2015-08-07 | 2018-12-18 | Sonicwall Inc. | Read-ahead on signed connections with unsigning, inline, transparent proxies |
US9906238B2 (en) | 2016-07-25 | 2018-02-27 | Fujitsu Limited | Encoding device, encoding method and search method |
EP3276507A1 (en) * | 2016-07-25 | 2018-01-31 | Fujitsu Limited | Encoding device, encoding method and search method |
US20180101580A1 (en) * | 2016-10-07 | 2018-04-12 | Fujitsu Limited | Non-transitory computer-readable recording medium, encoded data searching method, and encoded data searching apparatus |
US10942934B2 (en) * | 2016-10-07 | 2021-03-09 | Fujitsu Limited | Non-transitory computer-readable recording medium, encoded data searching method, and encoded data searching apparatus |
US11367074B2 (en) * | 2016-10-28 | 2022-06-21 | Fair Isaac Corporation | High resolution transaction-level fraud detection for payment cards in a potential state of fraud |
US20180121922A1 (en) * | 2016-10-28 | 2018-05-03 | Fair Isaac Corporation | High resolution transaction-level fraud detection for payment cards in a potential state of fraud |
US11301530B2 (en) | 2018-03-08 | 2022-04-12 | Micah Mossman | Interactive library system and method of interactive, real-time creation and customization |
US11301531B2 (en) | 2018-03-08 | 2022-04-12 | Micah Mossman | Interactive library system and method of interactive, real-time creation and customization |
US11301424B2 (en) | 2018-03-08 | 2022-04-12 | Micah Mossman | Interactive library system and method of interactive, real-time creation and customization |
US11308112B2 (en) | 2018-03-08 | 2022-04-19 | Micah Mossman | Interactive library system and method of interactive, real-time creation and customization |
US10732993B2 (en) | 2018-03-08 | 2020-08-04 | Micah Mossman | Interactive library system and method of interactive, real-time creation and customization |
US11263533B2 (en) * | 2018-07-12 | 2022-03-01 | Sap Portals Israel Ltd. | Dynamic configurable rule representation |
US20230333821A1 (en) * | 2022-04-15 | 2023-10-19 | Microsoft Technology Licensing, Llc | Editing Files using a Pattern-Completion Engine |
US11928444B2 (en) * | 2022-04-15 | 2024-03-12 | Microsoft Technology Licensing, Llc | Editing files using a pattern-completion engine implemented using a machine-trained model |
CN116911321A (en) * | 2023-06-21 | 2023-10-20 | 三峡高科信息技术有限责任公司 | Method and assembly for front-end automatic translation of dictionary values |
CN116911321B (en) * | 2023-06-21 | 2024-05-14 | 三峡高科信息技术有限责任公司 | Method and assembly for front-end automatic translation of dictionary values |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US5991713A (en) | Efficient method for compressing, storing, searching and transmitting natural language text | |
US6230168B1 (en) | Method for automatically constructing contexts in a hypertext collection | |
US6886130B1 (en) | Compiled structure for efficient operation of distributed hypertext | |
US6021409A (en) | Method for parsing, indexing and searching world-wide-web pages | |
US5963954A (en) | Method for mapping an index of a database into an array of files | |
US5745899A (en) | Method for indexing information of a database | |
USRE39184E1 (en) | Identifying, processing and caching object fragments in a web environment | |
US5797008A (en) | Memory storing an integrated index of database records | |
US5765150A (en) | Method for statistically projecting the ranking of information | |
US5809502A (en) | Object-oriented interface for an index | |
US5745894A (en) | Method for generating and searching a range-based index of word-locations | |
US5966710A (en) | Method for searching an index | |
US5745889A (en) | Method for parsing information of databases records using word-location pairs and metaword-location pairs | |
US5745900A (en) | Method for indexing duplicate database records using a full-record fingerprint | |
US7406460B2 (en) | Technique for ranking records of a database | |
US6047286A (en) | Method for optimizing entries for searching an index | |
US6016493A (en) | Method for generating a compressed index of information of records of a database | |
US5897637A (en) | System and method for rapidly identifying the existence and location of an item in a file | |
JP4805267B2 (en) | Multi-stage query processing system and method for use with a token space repository | |
US6598051B1 (en) | Web page connectivity server | |
US6012057A (en) | High speed data searching for information in a computer system | |
US7124358B2 (en) | Method for dynamically generating reference identifiers in structured information | |
US5765149A (en) | Modified collection frequency ranking method | |
US20020152219A1 (en) | Data interexchange protocol | |
US5724033A (en) | Method for encoding delta values |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
FPAY | Fee payment |
Year of fee payment: 8 |
|
AS | Assignment |
Owner name: INTERNATIONAL BUSINESS MACHINES CORPORATION, NEW YFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:UNGER, JAY;FULLER, GLENN;REEL/FRAME:026117/0139Effective date: 19980407 |
|
FPAY | Fee payment |
Year of fee payment: 12 |
|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:INTERNATIONAL BUSINESS MACHINES CORPORATION;REEL/FRAME:026664/0866Effective date: 20110503 |
|
FEPP | Fee payment procedure |
Free format text: PAYOR NUMBER ASSIGNED (ORIGINAL EVENT CODE: ASPN); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044127/0735Effective date: 20170929 |
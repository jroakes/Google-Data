EP2813035A1 - Deterministic network failure detection - Google Patents
Deterministic network failure detectionInfo
- Publication number
- EP2813035A1 EP2813035A1 EP13809992.4A EP13809992A EP2813035A1 EP 2813035 A1 EP2813035 A1 EP 2813035A1 EP 13809992 A EP13809992 A EP 13809992A EP 2813035 A1 EP2813035 A1 EP 2813035A1
- Authority
- EP
- European Patent Office
- Prior art keywords
- packets
- paths
- path
- network
- packet
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Withdrawn
Links
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L45/00—Routing or path finding of packets in data switching networks
- H04L45/28—Routing or path finding of packets in data switching networks using route fault recovery
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L41/00—Arrangements for maintenance, administration or management of data switching networks, e.g. of packet switching networks
- H04L41/06—Management of faults, events, alarms or notifications
- H04L41/0631—Management of faults, events, alarms or notifications using root cause analysis; using analysis of correlation between notifications, alarms or events based on decision criteria, e.g. hierarchy, tree or time analysis
- H04L41/065—Management of faults, events, alarms or notifications using root cause analysis; using analysis of correlation between notifications, alarms or events based on decision criteria, e.g. hierarchy, tree or time analysis involving logical or physical relationship, e.g. grouping and hierarchies
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L41/00—Arrangements for maintenance, administration or management of data switching networks, e.g. of packet switching networks
- H04L41/06—Management of faults, events, alarms or notifications
- H04L41/0677—Localisation of faults
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L43/00—Arrangements for monitoring or testing data switching networks
- H04L43/10—Active monitoring, e.g. heartbeat, ping or trace-route
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L43/00—Arrangements for monitoring or testing data switching networks
- H04L43/50—Testing arrangements
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L43/00—Arrangements for monitoring or testing data switching networks
- H04L43/08—Monitoring or testing based on specific metrics, e.g. QoS, energy consumption or environmental parameters
- H04L43/0823—Errors, e.g. transmission errors
- H04L43/0829—Packet loss
- H04L43/0835—One way packet loss
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L43/00—Arrangements for monitoring or testing data switching networks
- H04L43/08—Monitoring or testing based on specific metrics, e.g. QoS, energy consumption or environmental parameters
- H04L43/0852—Delays
- H04L43/0858—One way delays
-
- Y—GENERAL TAGGING OF NEW TECHNOLOGICAL DEVELOPMENTS; GENERAL TAGGING OF CROSS-SECTIONAL TECHNOLOGIES SPANNING OVER SEVERAL SECTIONS OF THE IPC; TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y04—INFORMATION OR COMMUNICATION TECHNOLOGIES HAVING AN IMPACT ON OTHER TECHNOLOGY AREAS
- Y04S—SYSTEMS INTEGRATING TECHNOLOGIES RELATED TO POWER NETWORK OPERATION, COMMUNICATION OR INFORMATION TECHNOLOGIES FOR IMPROVING THE ELECTRICAL POWER GENERATION, TRANSMISSION, DISTRIBUTION, MANAGEMENT OR USAGE, i.e. SMART GRIDS
- Y04S40/00—Systems for electrical power generation, transmission, distribution or end-user application management characterised by the use of communication or information technologies, or communication or information technology specific aspects supporting them
Definitions
- Interconnected network devices e.g. routers and switches, receive and forward network packets according to routing protocols.
- a router can use a selected routing protocol to direct a packet to a specific device.
- Different routing protocols can be used to direct communications within and outside a particular network.
- a plurality of predetermined paths through a network can be used to diagnose and deterministically identify problems in the network.
- a packet transmitted through a predetermined path (a "probe") is used to detect problem links and devices within the network.
- Problem links and devices can be analyzed for common attributes in order to isolate and determine the source of the network problem.
- one innovative aspect of the subject matter described in this specification can be embodied in methods that include the actions of storing data representing a collection of predetermined paths through a network of devices, wherein each path comprises a sequence of network devices to forward a packet of data; transmitting one or more packets along each of the predetermined paths, wherein each packet includes instructions for forwarding the packet along a distinct path of the predetermined paths; receiving one or more of the transmitted packets; identifying two or more problem paths using the transmitted packets and the received packets; comparing the problem paths; and determining a problem link between two network devices based on a comparison of the problem paths.
- Other embodiments of this aspect include corresponding computer systems, apparatus, and computer programs recorded on one or more computer storage devices, each configured to perform the actions of the methods.
- a system of one or more computers can be configured to perform particular operations or actions by virtue of having software, firmware, hardware, or a combination of them installed on the system that in operation causes or cause the system to perform the actions.
- One or more computer programs can be configured to perform particular operations or actions by virtue of including instructions that, when executed by data processing apparatus, cause the apparatus to perform the actions.
- the actions include calculating a number of packets sent and a number of packets received.
- the network devices are routers configured to forward the packets along the predetermined paths.
- the actions include retransmitting a received packet along a same path in an opposite direction from a direction in which the packet was previously transmitted. Comparing the problem paths comprises determining a correlation or intersection between one or more attributes of the problem paths.
- a problem path is a path in which one or more packets transmitted along the path are received with latency that satisfies a threshold.
- a problem path is a path in which one or more packets transmitted along the path are not received within a threshold time period.
- Transmitting the one or more packets comprises transmitting the one or more packets from a device on an outer edge of the network.
- the actions include deriving the collection of predetermined paths from a database of network topology.
- the actions include varying a destination Internet Protocol address in each packet.
- the actions include determining a set of principal routers in the network; and determining each predetermined path from as a forwarding triplet of routers, wherein each forwarding triplet includes a principal router and two neighboring routers to the principal router.
- Network monitoring using probes sent through predetermined paths provides the functionality to discover and to localize network problems deterministically rather than through trial and error.
- Deterministic probing can be used to identify network component failures before any observable service or application impact. Deterministic probing also provides the ability to test paths in the network before these paths are exposed to production traffic.
- FIG. 1 is a diagram of an example network.
- FIG. 2 is a flowchart of an example process for determining paths in a network.
- FIG. 3 is a flowchart of an example process for operating a network.
- FIG. 4 is a flowchart of an example process for detecting network problems.
- FIG. 1 is a diagram of an example network 100.
- the network 100 is an example of a network of interconnected devices that receive and forward packets of data.
- the network 100 can, for example, be a portion of a local area network (LAN) or wide area network (WAN), e.g., the Internet.
- LAN local area network
- WAN wide area network
- the network 100 includes network devices 110, 120, 130, 140, 150, 160, and 170 that can receive and forward network traffic.
- a monitoring device 180 can also be connected to the network 100 for diagnosing network problems.
- the network devices can be, for example, routers and switches.
- the monitoring device 180 can be any appropriate type of computing device, e.g., servers, mobile phones, tablet computers, notebook computers, music players, e book readers, laptop or desktop computers, PDAs, smart phones, or other stationary or portable device, that includes one or more processors and computer readable media.
- the network devices 110-170 can forward network traffic according to conventional routing protocols, including interior gateway protocols and exterior gateway protocols.
- the network devices 110-170 can also receive and forward network packets according to a source routing protocol.
- a source routing protocol enables a sender of a network packet to specify a predetermined sequence of network devices, or a "path," that the packet will take through the network.
- routers in the network typically determine a path through the network based on the packet's destination. The path of a non-source routing protocol can change and may be unpredictable.
- the sequence of devices specified by a source routing protocol can be encoded with or in the network packet itself.
- a source routing protocol can be implemented, for example, by Multiprotocol Label Switching (MPLS).
- MPLS is a mechanism in which network data packets are assigned labels. Network devices can forward the labeled data packet along a path according to contents of the label.
- a path through an MPLS network is referred to as a Label Switched Path (LSP).
- LSPs can be implemented through a variety of protocols, for example, Resource Reservation Protocol (RSVP).
- RSVP Resource Reservation Protocol
- the network 100 can include many thousands of interconnected network devices. Thus, determining failures of individual devices can be difficult. The difficulty can be exacerbated if network administrators have access only to network devices on the outer edge of the network, as is commonly the case with a wide-area network. Because conventional routing protocols can reroute network traffic around a failed device, network administrators may only be aware of unexpected latency, without any insight into the cause of the problem. Similarly, an existing problem with a network device may go undetected for a particular period of time.
- a source routing protocol can be used to diagnose network problems
- Network problems and failed devices can be systematically isolated to one or more of a variety of attributes, for example, a connection between two network devices, a time of day, or a geographic location.
- a plurality of paths can be defined through the network of devices.
- a source device can transmit a packet of data along each of the defined paths, and a destination device can receive the transmitted packets.
- the destination device may or may not be the same device as the source device.
- the transmission of a packet from source device to a destination device through a predetermined path can be referred to as a "probe."
- the path for a given probe can be implemented, for example, as an LSP.
- the LSP is strictly defined and static.
- the paths used to diagnose network problems can differ from paths taken by network traffic routed by conventional routing protocols.
- the defined paths need not be carrying any other network traffic.
- the paths through the network can be derived in a variety of ways.
- administrators can compute one path from a monitoring device to each link to be tested in the network.
- administrators can compute all possible paths between routers in the network.
- each path is designed to go through at least one of a set of routers in the network.
- network administrators can design each path to go through a principal ("backbone") router in the network.
- backbone principal
- network administrators can define and maintain a set of "forwarding triplets" of three particular routers and two corresponding links, e.g. A ⁇ linkl>B ⁇ link2>C, where " ⁇ link>" indicates a link between the routers.
- Fully-defined probe paths e.g. LSPs, can then be defined based on the set of forwarding triplets. For example, a triplet itself can be a fully-defined path, or multiple triplets can be chained together to form a fully-defined path.
- FIG. 2 is a flowchart of an example process 200 for determining a set of forwarding triplets in a network.
- the process 200 is an example process that can be used to define paths in a network for diagnosing network problems.
- the process 200 can be used to define paths based on forwarding triplets for a set of principal "backbone" routers in a network.
- the process 200 will be described as being performed by a computer system of one or more computers, for example, monitoring device 180 as shown in FIG. 1.
- the system lists all active routers in the backbone network (210). For example, a network administrator can consider backbone routers to be principal routers in the network that carry a significant portion of network traffic.
- the system lists all neighboring routers linked to the backbone routers (220). For example, the system can access a database of network topology to identify neighboring routers that are linked to the backbone routers. The system then computes all combinations of any two neighboring routers (230).
- the system forms forwarding triplets by inserting each backbone router into the middle of each combination of two neighboring routers (240). Given a forwarding triplet, e.g. A ⁇ ->B ⁇ ->C, the system can then generate fully-defined probes, e.g. as LSPs, based on each forwarding triplet (250).
- the system can define the probes by computing the shortest path in the network between routers A or C in the forwarding triplet and the source or destination router. For example, a fully-defined probe can follow a shortest path from a source router to router A, then to router B, then to router C, and then a shortest path to the destination router from router C. Any appropriate path back from the source router to router A and from router C to the destination router can be used.
- a forwarding triplet may not be possible to cover with a probe if, for example, a particular shortest path to router A or from router C cannot be found.
- FIG. 1 An example probe sent along a defined path is illustrated in FIG. 1 by a source device, router 102a, transmitting a packet of data along a predetermined path through the network of devices.
- the example probe can correspond to forwarding triplet R1 ⁇ ->R2 ⁇ - >R3.
- the packet follows an example path illustrated by arrow 103 from router 102a to router 110; arrow 104 from router 110 to router 120; arrow 105 from router 120 to router 130; arrow 106 from router 130 back to router 120; arrow 107 from router 120 back to router 110; and arrow 107 from router 110 to destination device 102b.
- the source device 102a and the destination device 102b can be on a same device 101.
- a monitoring device can analyze packets received at the destination device 102b for attributes indicative of network problems, e.g., unexpected latency between when the packet was sent and when the packet was received. Additionally, the packet not being received by the destination device 102b within a threshold time period can indicate a network problem. The system can classify other probes with no unexpected problems as "clean.” By comparing probes for which a problem was detected, the system can deterministically identify problems in the network.
- the following table illustrates an example of deterministically identifying a network problem using a plurality of probes that follow predetermined paths through a network based on forwarding triplets.
- the monitoring device can analyze the data to deterministically identify that the link between router 120 (R2) and router 130 (R3) is down. Probes 4, 5, and 6 were identified as problem probes. Elements from the problem probes were as follows:
- the common element from these candidates is R2 ⁇ ->R3. Therefore, the system can determine that a problem exists between router 120 (R2) and router 130 (R3).
- FIG. 3 is a flow chart of an example process 300 for operating a network.
- the process 300 can be performed using a network of interconnected devices, for example, the network 100 illustrated in FIG. 1.
- the process 300 can be performed by a network administrator or a computer system installed on one or more computers configured to manage a network of devices.
- the system initializes a network of interconnected devices (310).
- the system can, for example, store information about connectivity of the network in a topology database.
- the topology database can be used to define forwarding triplets as described above.
- the network routes traffic by conventional routing protocols (320).
- a subset of available routers e.g. backbone routers, will handle a significant portion of total network traffic.
- Other routers may carry little or no network traffic, which can be the case, for example, when new routers are installed and being tested.
- the system detects network problems using probes sent along deterministic paths (330).
- the system can periodically use probes to detect problems with currently-deployed network devices. Additionally, in the case of newly-installed routers, the system can use probes to test and diagnose problems with the newly-installed routers before burdening the new routers with production-level network traffic.
- the detected network problem is corrected (340).
- Network administrators can, for example, quickly locate and repair or replace failed network devices by deterministically isolating the cause of network problems.
- Network administrators can also monitor the network over time to detect and correct problems that arise in network performance.
- FIG. 4 is a flow chart of an example process 400 for detecting network problems.
- the process 400 can be implemented as a computer program installed on one or more computing devices connected to a network.
- the process 400 can be performed by a monitoring device and a router that both sends and receives network packets.
- the process 400 will be described as being performed by a monitoring device and a router, e.g. monitoring device 180 and router 101 as shown in FIG. 1.
- the monitoring device stores data representing a collection of predetermined paths
- the stored data for each path can specify a sequence of routers in a network.
- the monitoring device can derive the predetermined paths from a database of network topology, for example, as described above with respect to FIG. 2.
- the router transmits packets of data along each of the predetermined paths (420).
- the packets can be transmitted according to a source routing protocol that defines the sequence of network devices that will forward each packet.
- the router receives one or more of the transmitted packets (430). In some implementations, a different device receives the transmitted packets.
- the router can also retransmit received packets along the reverse of the predetermined path to test both directions of the path.
- the router can also vary destination Internet Protocol addresses in the transmitted packets in order to exercise all switches between two particular routers.
- the monitoring device identifies problem paths (440). After receiving the transmitted packets, the monitoring device can analyze the received packets to identify problem paths. Problem paths can be paths for which unexpected latency is observed. For example, if a transmitted packet is received after a time period that satisfies a threshold, the monitoring device can designate the path as a problem path. In some cases, the router may not receive a transmitted packet. The monitoring device can consider packets not received within a threshold time period to be dropped packets and can designate the path as a problem path accordingly.
- the monitoring device compares the problem paths (450). Many attributes of the problem paths can be recorded when the problem path is identified. In addition to the path taken by the transmitted packet, the monitoring device can record a time of day, a day of the week, and a geographic location for each problem path, in addition to others.
- the monitoring device determines a problem link between two network devices based on the comparison (460).
- the monitoring device can, for example, identify one or more common attributes of the problem paths in order to determine a problem link. For example, the monitoring device can determine that a specific link between two network devices is down. Additionally, the monitoring device can determine that a link between two network devices is a problem on Saturdays at 10 a.m.
- the monitoring device can use several techniques for analyzing the problem paths and determining a problem link.
- the monitoring device can compute an intersection or a correlation to determine common attributes of problem paths.
- the monitoring device can also monitor the paths periodically to determine changes in path quality over time. For example, if the latency of a path over time gradually and steadily increases, the monitoring device can determine that a particular link on the path may be likely to fail in the future. Similarly, the monitoring device can monitor the paths to determine a recurring problematic time period for the network's performance. For example, the monitoring device can monitor the paths and determine that problem paths arise during a particular day of the week or in a particular building or other geographic location.
- the monitoring device can also use a rating algorithm to identify how the quality of a link degrades with time. For example, the monitoring device can analyze all paths that traversed a particular link in the network and count how many paths through that link were problem paths. If the count of problem paths through that particular link increases with time, the monitoring device can determine that the quality of the link is degrading over time and that the link may be likely to fail in the future.
- a rating algorithm to identify how the quality of a link degrades with time. For example, the monitoring device can analyze all paths that traversed a particular link in the network and count how many paths through that link were problem paths. If the count of problem paths through that particular link increases with time, the monitoring device can determine that the quality of the link is degrading over time and that the link may be likely to fail in the future.
- monitoring with deterministic probes can also be used to identify and diagnose problems in many other kinds of node and edge based systems, including power grids, circuit boards, and pipelines, for example.
- Embodiments of the subject matter and the functional operations described in this specification can be implemented in digital electronic circuitry, in tangibly-embodied computer software or firmware, in computer hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them.
- Embodiments of the subject matter described in this specification can be implemented as one or more computer programs, i.e., one or more modules of computer program instructions encoded on a tangible non-transitory program carrier for execution by, or to control the operation of, data processing apparatus.
- the program i.e., one or more modules of computer program instructions encoded on a tangible non-transitory program carrier for execution by, or to control the operation of, data processing apparatus.
- the program i.e., one or more modules of computer program instructions encoded on a tangible non-transitory program carrier for execution by, or to control the operation of, data processing apparatus.
- the program i.e., one or more modules of computer program instructions encoded on a tangible non-transitory program carrier for
- instructions can be encoded on an artificially-generated propagated signal, e.g., a machine- generated electrical, optical, or electromagnetic signal, that is generated to encode information for transmission to suitable receiver apparatus for execution by a data processing apparatus.
- the computer storage medium can be a machine-readable storage device, a machine-readable storage substrate, a random or serial access memory device, or a combination of one or more of them.
- data processing apparatus encompasses all kinds of apparatus, devices, and machines for processing data, including by way of example a programmable processor, a computer, or multiple processors or computers.
- the apparatus can include special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC
- the apparatus can also include, in addition to hardware, code that creates an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, or a combination of one or more of them.
- code that creates an execution environment for the computer program in question e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, or a combination of one or more of them.
- a computer program (which may also be referred to or described as a program, software, a software application, a module, a software module, a script, or code) can be written in any form of programming language, including compiled or interpreted languages, or declarative or procedural languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, or other unit suitable for use in a computing environment.
- a computer program may, but need not, correspond to a file in a file system.
- a program can be stored in a portion of a file that holds other programs or data, e.g., one or more scripts stored in a markup language document, in a single file dedicated to the program in question, or in multiple coordinated files, e.g., files that store one or more modules, sub-programs, or portions of code.
- a computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
- the processes and logic flows described in this specification can be performed by one or more programmable computers, e.g. monitoring device 180, executing one or more computer programs to perform functions by operating on input data and generating output.
- the processes and logic flows can also be performed by, and apparatus can also be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).
- Computers suitable for the execution of a computer program include, by way of example, can be based on general or special purpose microprocessors or both, or any other kind of central processing unit.
- a central processing unit will receive instructions and data from a read-only memory or a random access memory or both.
- the essential elements of a computer are a central processing unit for performing or executing instructions and one or more memory devices for storing instructions and data.
- a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks.
- mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks.
- a computer need not have such devices.
- a computer can be embedded in another device, e.g., a mobile telephone, a personal digital assistant (PDA), a mobile audio or video player, a game console, a Global Positioning System (GPS) receiver, or a portable storage device, e.g., a universal serial bus (USB) flash drive, to name just a few.
- PDA personal digital assistant
- GPS Global Positioning System
- USB universal serial bus
- Computer-readable media suitable for storing computer program instructions and data include all forms of non-volatile memory, media and memory devices, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks; magneto-optical disks; and CD-ROM and DVD-ROM disks.
- semiconductor memory devices e.g., EPROM, EEPROM, and flash memory devices
- magnetic disks e.g., internal hard disks or removable disks
- magneto-optical disks e.g., CD-ROM and DVD-ROM disks.
- the processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
- a computer having a display device, e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor, for displaying information to the user and a keyboard and a pointing device, e.g., a mouse or a trackball, by which the user can provide input to the computer.
- a display device e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor
- keyboard and a pointing device e.g., a mouse or a trackball
- Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form, including acoustic, speech, or tactile input.
- a computer can interact with a user by sending documents to and receiving documents from a device that is used by the user; for example, by sending web pages to a
- Embodiments of the subject matter described in this specification can be implemented in a computing system that includes a back-end component, e.g., as a data server, or that includes a middleware component, e.g., an application server, or that includes a front-end component, e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described in this specification, or any combination of one or more such back-end, middleware, or front-end components.
- the components of the system can be interconnected into a network, e.g. network 100, by any form or medium of digital data communication, e.g., a
- Examples of communication networks include a local area network (“LAN”) and a wide area network (“WAN”), e.g., the Internet.
- LAN local area network
- WAN wide area network
- the computing system can include clients and servers.
- a client and server are generally remote from each other and typically interact through a communication network.
- the relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.
Abstract
Description
Claims
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/535,330 US20140003224A1 (en) | 2012-06-27 | 2012-06-27 | Deterministic network failure detection |
PCT/US2013/039774 WO2014003889A1 (en) | 2012-06-27 | 2013-05-06 | Deterministic network failure detection |
Publications (2)
Publication Number | Publication Date |
---|---|
EP2813035A1 true EP2813035A1 (en) | 2014-12-17 |
EP2813035A4 EP2813035A4 (en) | 2016-01-13 |
Family
ID=49778034
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
EP13809992.4A Withdrawn EP2813035A4 (en) | 2012-06-27 | 2013-05-06 | Deterministic network failure detection |
Country Status (5)
Country | Link |
---|---|
US (1) | US20140003224A1 (en) |
EP (1) | EP2813035A4 (en) |
JP (1) | JP2015526022A (en) |
CN (1) | CN104471902A (en) |
WO (1) | WO2014003889A1 (en) |
Cited By (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
GB2542832A (en) * | 2015-09-30 | 2017-04-05 | British Telecomm | Analysis of network performance |
Families Citing this family (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
JP6310405B2 (en) * | 2015-02-06 | 2018-04-11 | 日本電信電話株式会社 | Service impact cause estimation apparatus, service impact cause estimation program, and service impact cause estimation method |
US10419324B2 (en) | 2015-09-30 | 2019-09-17 | British Telecommunications Public Limited Company | Analysis of network performance |
US10320648B2 (en) | 2015-09-30 | 2019-06-11 | British Telecommunications Public Limited Company | Analysis of network performance |
EP3360288B1 (en) | 2015-10-08 | 2019-11-06 | British Telecommunications public limited company | Analysis of network performance |
CN106899447B (en) * | 2016-06-28 | 2020-07-21 | 阿里巴巴集团控股有限公司 | Link determination method and device |
US10979350B1 (en) * | 2019-11-15 | 2021-04-13 | Cisco Technology, Inc. | Distributed DetNet validation using device/segment specific bitstrings in DetNet OAM ACH |
Family Cites Families (17)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
JP2806374B2 (en) * | 1996-08-19 | 1998-09-30 | 日本電気株式会社 | ATM virtual path switching node |
US6683865B1 (en) * | 1999-10-15 | 2004-01-27 | Nokia Wireless Routers, Inc. | System for routing and switching in computer networks |
US7263100B2 (en) * | 2002-06-10 | 2007-08-28 | Lucent Technologies Inc. | Capacity allocation for fast path restoration |
US7428213B2 (en) * | 2003-11-21 | 2008-09-23 | Cisco Technology, Inc. | Method and apparatus for determining network routing information based on shared risk link group information |
US7583593B2 (en) * | 2004-12-01 | 2009-09-01 | Cisco Technology, Inc. | System and methods for detecting network failure |
US7505402B2 (en) * | 2005-06-23 | 2009-03-17 | Cisco Technology, Inc. | Method and apparatus for providing faster convergence for redundant sites |
US8238253B2 (en) * | 2006-08-22 | 2012-08-07 | Embarq Holdings Company, Llc | System and method for monitoring interlayer devices and optimizing network performance |
US7843840B2 (en) * | 2007-08-24 | 2010-11-30 | Opnet Technologies, Inc. | Traffic independent survivability analysis |
US7808919B2 (en) * | 2008-03-18 | 2010-10-05 | Cisco Technology, Inc. | Network monitoring using a proxy |
EP2107733A1 (en) * | 2008-03-31 | 2009-10-07 | British Telecommunications Public Limited Company | Admission control and routing in a packet network |
US20100034098A1 (en) * | 2008-08-05 | 2010-02-11 | At&T Intellectual Property I, Lp | Towards Efficient Large-Scale Network Monitoring and Diagnosis Under Operational Constraints |
US20100165849A1 (en) * | 2008-12-29 | 2010-07-01 | Martin Eisenberg | Failure Detection in IP Networks Using Long Packets |
JP2010219951A (en) * | 2009-03-17 | 2010-09-30 | Fujitsu Ltd | Repeating method, transmitting apparatus, receiving device, and relay apparatus |
JP5283192B2 (en) * | 2009-09-08 | 2013-09-04 | Ｋｄｄｉ株式会社 | Method, node device, and program for detecting faulty link in real time based on routing protocol |
CN102480753B (en) * | 2010-11-24 | 2016-03-30 | 中兴通讯股份有限公司 | Link state detection method and device |
US8661295B1 (en) * | 2011-03-31 | 2014-02-25 | Amazon Technologies, Inc. | Monitoring and detecting causes of failures of network paths |
WO2012106925A1 (en) * | 2011-07-25 | 2012-08-16 | 华为技术有限公司 | Method, apparatus and system for locating faults in ip network |
-
2012
- 2012-06-27 US US13/535,330 patent/US20140003224A1/en not_active Abandoned
-
2013
- 2013-05-06 EP EP13809992.4A patent/EP2813035A4/en not_active Withdrawn
- 2013-05-06 JP JP2015520180A patent/JP2015526022A/en active Pending
- 2013-05-06 CN CN201380034407.XA patent/CN104471902A/en active Pending
- 2013-05-06 WO PCT/US2013/039774 patent/WO2014003889A1/en active Application Filing
Cited By (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
GB2542832A (en) * | 2015-09-30 | 2017-04-05 | British Telecomm | Analysis of network performance |
GB2542832B (en) * | 2015-09-30 | 2017-11-01 | British Telecomm | Analysis of network performance |
Also Published As
Publication number | Publication date |
---|---|
EP2813035A4 (en) | 2016-01-13 |
WO2014003889A1 (en) | 2014-01-03 |
CN104471902A (en) | 2015-03-25 |
US20140003224A1 (en) | 2014-01-02 |
JP2015526022A (en) | 2015-09-07 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US20140003224A1 (en) | Deterministic network failure detection | |
US7280486B2 (en) | Detection of forwarding problems for external prefixes | |
Quan et al. | Trinocular: Understanding internet reliability through adaptive probing | |
Ma et al. | On optimal monitor placement for localizing node failures via network tomography | |
WO2008023570A1 (en) | Method for estimating quality-degraded portion on a network in a communication network system | |
EP3707862B1 (en) | Method and sytem for detecting sources of computer network failures | |
US20100074118A1 (en) | System and method for detecting a network failure | |
EP3232620B1 (en) | Data center based fault analysis method and device | |
He et al. | Network tomography: identifiability, measurement design, and network state inference | |
CN109150761B (en) | Tunnel switching method and device | |
CN102577263A (en) | Switch that monitors for fingerprinted packets | |
US8363556B2 (en) | Dynamic probe architecture | |
Chang et al. | Lancet: Better network resilience by designing for pruned failure sets | |
Khan et al. | Data plane failure and its recovery techniques in SDN: A systematic literature review | |
US20120253772A1 (en) | Path failure importance sampling | |
Tati et al. | netCSI: A generic fault diagnosis algorithm for large-scale failures in computer networks | |
EP2061185B1 (en) | Estimating network-layer topology using end-to-end measurements | |
US10931796B2 (en) | Diffusing packets to identify faulty network apparatuses in multipath inter-data center networks | |
CN109218059A (en) | A kind of method, apparatus and system for realizing fault detection | |
JP6467365B2 (en) | Failure analysis apparatus, failure analysis program, and failure analysis method | |
CN102217235A (en) | Label switched path checking method and detection system | |
CN110738234B (en) | Role prediction method and device | |
Wu et al. | A probe prediction approach to overlay network monitoring | |
US20090190467A1 (en) | System and method for managing fault in a multi protocol label switching system | |
Khosla et al. | Prediction models for long-term Internet prefix availability |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PUAI | Public reference made under article 153(3) epc to a published international application that has entered the european phase |
Free format text: ORIGINAL CODE: 0009012 |
|
17P | Request for examination filed |
Effective date: 20140910 |
|
AK | Designated contracting states |
Kind code of ref document: A1Designated state(s): AL AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HR HU IE IS IT LI LT LU LV MC MK MT NL NO PL PT RO RS SE SI SK SM TR |
|
AX | Request for extension of the european patent |
Extension state: BA ME |
|
DAX | Request for extension of the european patent (deleted) | ||
RA4 | Supplementary search report drawn up and despatched (corrected) |
Effective date: 20151215 |
|
RIC1 | Information provided on ipc code assigned before grant |
Ipc: H04L 12/26 20060101ALI20151208BHEPIpc: H04L 12/24 20060101ALI20151208BHEPIpc: H04L 12/703 20130101ALI20151208BHEPIpc: H04L 12/721 20130101AFI20151208BHEP |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: THE APPLICATION IS DEEMED TO BE WITHDRAWN |
|
18D | Application deemed to be withdrawn |
Effective date: 20160722 |
|
P01 | Opt-out of the competence of the unified patent court (upc) registered |
Effective date: 20230519 |
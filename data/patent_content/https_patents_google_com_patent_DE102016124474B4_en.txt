DE102016124474B4 - NAVIGATION APPLICATION PROGRAMMING INTERFACE TO ACCOMMODATE MULTIPLE WAYPOINT GUIDANCE - Google Patents
NAVIGATION APPLICATION PROGRAMMING INTERFACE TO ACCOMMODATE MULTIPLE WAYPOINT GUIDANCE Download PDFInfo
- Publication number
- DE102016124474B4 DE102016124474B4 DE102016124474.0A DE102016124474A DE102016124474B4 DE 102016124474 B4 DE102016124474 B4 DE 102016124474B4 DE 102016124474 A DE102016124474 A DE 102016124474A DE 102016124474 B4 DE102016124474 B4 DE 102016124474B4
- Authority
- DE
- Germany
- Prior art keywords
- navigation
- waypoint
- route
- instructions
- operable
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active
Links
- 238000004891 communication Methods 0.000 claims abstract description 10
- 230000003993 interaction Effects 0.000 claims abstract description 10
- 238000000034 method Methods 0.000 claims description 27
- 239000008186 active pharmaceutical agent Substances 0.000 description 77
- 239000011800 void material Substances 0.000 description 74
- 230000006870 function Effects 0.000 description 50
- 239000012634 fragment Substances 0.000 description 28
- 230000008859 change Effects 0.000 description 23
- 230000003068 static effect Effects 0.000 description 19
- 238000010586 diagram Methods 0.000 description 9
- 230000000694 effects Effects 0.000 description 8
- 238000013507 mapping Methods 0.000 description 7
- 230000000007 visual effect Effects 0.000 description 5
- 230000004807 localization Effects 0.000 description 4
- 239000003550 marker Substances 0.000 description 4
- 230000004048 modification Effects 0.000 description 4
- 238000012986 modification Methods 0.000 description 4
- 241001136792 Alle Species 0.000 description 3
- 238000012360 testing method Methods 0.000 description 3
- 230000008901 benefit Effects 0.000 description 2
- 230000001413 cellular effect Effects 0.000 description 2
- 230000036541 health Effects 0.000 description 2
- 230000010354 integration Effects 0.000 description 2
- 230000002452 interceptive effect Effects 0.000 description 2
- 230000007246 mechanism Effects 0.000 description 2
- 230000004044 response Effects 0.000 description 2
- 238000010079 rubber tapping Methods 0.000 description 2
- 230000001960 triggered effect Effects 0.000 description 2
- 230000009471 action Effects 0.000 description 1
- 238000007792 addition Methods 0.000 description 1
- 238000004364 calculation method Methods 0.000 description 1
- 238000005516 engineering process Methods 0.000 description 1
- QHGUCRYDKWKLMG-UHFFFAOYSA-N octopamine Chemical compound NCC(O)C1=CC=C(O)C=C1 QHGUCRYDKWKLMG-UHFFFAOYSA-N 0.000 description 1
- 229960001576 octopamine Drugs 0.000 description 1
- 230000002085 persistent effect Effects 0.000 description 1
- 230000008569 process Effects 0.000 description 1
- 238000004088 simulation Methods 0.000 description 1
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F9/00—Arrangements for program control, e.g. control units
- G06F9/06—Arrangements for program control, e.g. control units using stored programs, i.e. using an internal store of processing equipment to receive or retain programs
- G06F9/46—Multiprogramming arrangements
- G06F9/54—Interprogram communication
- G06F9/541—Interprogram communication via adapters, e.g. between incompatible applications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F9/00—Arrangements for program control, e.g. control units
- G06F9/06—Arrangements for program control, e.g. control units using stored programs, i.e. using an internal store of processing equipment to receive or retain programs
- G06F9/46—Multiprogramming arrangements
- G06F9/54—Interprogram communication
- G06F9/547—Remote procedure calls [RPC]; Web services
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F9/00—Arrangements for program control, e.g. control units
- G06F9/06—Arrangements for program control, e.g. control units using stored programs, i.e. using an internal store of processing equipment to receive or retain programs
- G06F9/46—Multiprogramming arrangements
- G06F9/54—Interprogram communication
- G06F9/542—Event management; Broadcasting; Multicasting; Notifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/01—Input arrangements or combined input and output arrangements for interaction between user and computer
- G06F3/048—Interaction techniques based on graphical user interfaces [GUI]
- G06F3/0481—Interaction techniques based on graphical user interfaces [GUI] based on specific properties of the displayed interaction object or a metaphor-based environment, e.g. interaction with desktop elements like windows or icons, or assisted by a cursor's changing behaviour or appearance
-
- G—PHYSICS
- G01—MEASURING; TESTING
- G01C—MEASURING DISTANCES, LEVELS OR BEARINGS; SURVEYING; NAVIGATION; GYROSCOPIC INSTRUMENTS; PHOTOGRAMMETRY OR VIDEOGRAMMETRY
- G01C21/00—Navigation; Navigational instruments not provided for in groups G01C1/00 - G01C19/00
- G01C21/20—Instruments for performing navigational calculations
-
- G—PHYSICS
- G01—MEASURING; TESTING
- G01C—MEASURING DISTANCES, LEVELS OR BEARINGS; SURVEYING; NAVIGATION; GYROSCOPIC INSTRUMENTS; PHOTOGRAMMETRY OR VIDEOGRAMMETRY
- G01C21/00—Navigation; Navigational instruments not provided for in groups G01C1/00 - G01C19/00
- G01C21/26—Navigation; Navigational instruments not provided for in groups G01C1/00 - G01C19/00 specially adapted for navigation in a road network
- G01C21/34—Route searching; Route guidance
-
- G—PHYSICS
- G01—MEASURING; TESTING
- G01C—MEASURING DISTANCES, LEVELS OR BEARINGS; SURVEYING; NAVIGATION; GYROSCOPIC INSTRUMENTS; PHOTOGRAMMETRY OR VIDEOGRAMMETRY
- G01C21/00—Navigation; Navigational instruments not provided for in groups G01C1/00 - G01C19/00
- G01C21/26—Navigation; Navigational instruments not provided for in groups G01C1/00 - G01C19/00 specially adapted for navigation in a road network
- G01C21/34—Route searching; Route guidance
- G01C21/3453—Special cost functions, i.e. other than distance or default speed limit of road segments
- G01C21/3476—Special cost functions, i.e. other than distance or default speed limit of road segments using point of interest [POI] information, e.g. a route passing visible POIs
-
- G—PHYSICS
- G01—MEASURING; TESTING
- G01C—MEASURING DISTANCES, LEVELS OR BEARINGS; SURVEYING; NAVIGATION; GYROSCOPIC INSTRUMENTS; PHOTOGRAMMETRY OR VIDEOGRAMMETRY
- G01C21/00—Navigation; Navigational instruments not provided for in groups G01C1/00 - G01C19/00
- G01C21/26—Navigation; Navigational instruments not provided for in groups G01C1/00 - G01C19/00 specially adapted for navigation in a road network
- G01C21/34—Route searching; Route guidance
- G01C21/36—Input/output arrangements for on-board computers
-
- G—PHYSICS
- G01—MEASURING; TESTING
- G01C—MEASURING DISTANCES, LEVELS OR BEARINGS; SURVEYING; NAVIGATION; GYROSCOPIC INSTRUMENTS; PHOTOGRAMMETRY OR VIDEOGRAMMETRY
- G01C21/00—Navigation; Navigational instruments not provided for in groups G01C1/00 - G01C19/00
- G01C21/26—Navigation; Navigational instruments not provided for in groups G01C1/00 - G01C19/00 specially adapted for navigation in a road network
- G01C21/34—Route searching; Route guidance
- G01C21/36—Input/output arrangements for on-board computers
- G01C21/3626—Details of the output of route guidance instructions
- G01C21/3644—Landmark guidance, e.g. using POIs or conspicuous other objects
-
- G—PHYSICS
- G01—MEASURING; TESTING
- G01C—MEASURING DISTANCES, LEVELS OR BEARINGS; SURVEYING; NAVIGATION; GYROSCOPIC INSTRUMENTS; PHOTOGRAMMETRY OR VIDEOGRAMMETRY
- G01C21/00—Navigation; Navigational instruments not provided for in groups G01C1/00 - G01C19/00
- G01C21/26—Navigation; Navigational instruments not provided for in groups G01C1/00 - G01C19/00 specially adapted for navigation in a road network
- G01C21/34—Route searching; Route guidance
- G01C21/36—Input/output arrangements for on-board computers
- G01C21/3667—Display of a road map
- G01C21/367—Details, e.g. road map scale, orientation, zooming, illumination, level of detail, scrolling of road map or positioning of current position marker
-
- G—PHYSICS
- G01—MEASURING; TESTING
- G01C—MEASURING DISTANCES, LEVELS OR BEARINGS; SURVEYING; NAVIGATION; GYROSCOPIC INSTRUMENTS; PHOTOGRAMMETRY OR VIDEOGRAMMETRY
- G01C21/00—Navigation; Navigational instruments not provided for in groups G01C1/00 - G01C19/00
- G01C21/26—Navigation; Navigational instruments not provided for in groups G01C1/00 - G01C19/00 specially adapted for navigation in a road network
- G01C21/34—Route searching; Route guidance
- G01C21/36—Input/output arrangements for on-board computers
- G01C21/3667—Display of a road map
- G01C21/3676—Overview of the route on the road map
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/29—Geographical information databases
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F8/00—Arrangements for software engineering
- G06F8/30—Creation or generation of source code
- G06F8/38—Creation or generation of source code for implementing user interfaces
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F9/00—Arrangements for program control, e.g. control units
- G06F9/06—Arrangements for program control, e.g. control units using stored programs, i.e. using an internal store of processing equipment to receive or retain programs
- G06F9/44—Arrangements for executing specific programs
- G06F9/445—Program loading or initiating
- G06F9/44505—Configuring for program initiating, e.g. using registry, configuration files
Abstract
Nichtflüchtiges computerlesbares Medium, das Anweisungen speichert, die eine Anwendungsprogrammierungsschnittstelle zum Bereitstellen eines Navigationsdienstes als Teil einer auf einer Computervorrichtung ausgeführten Softwareanwendung implementieren, wobei die Computervorrichtung einen oder mehrere Prozessoren und eine Anzeigevorrichtung hat, wobei die Computervorrichtung konfiguriert ist, um mit einem Navigationsdatenprovider über ein Kommunikationsnetzwerk zu kommunizieren, wobei die Anwendungsprogrammierungsschnittstelle folgendes aufweist:eine erste Gruppe von Anweisungen, die einen oder mehrere erste Parameter spezifizieren, um die Implementierung eines Navigationsdienstes durch die Softwareanwendung zu steuern, wobei der Navigationsdienst betreibbar ist, um einem Anwender der Softwareanwendung Navigationsinformation zur Verfügung zu stellen;eine zweite Gruppe von Anweisungen, die einen oder mehrere zweite Parameter spezifizieren, um eine Interaktion mit einer durch den Navigationsdatenprovider zur Verfügung gestellten Navigations-Engine über die Anwendungsprogrammierungsschnittstelle zu steuern, um die als Teil des Navigationsdienstes zur Verfügung gestellte Navigationsinformation zu erhalten; undeine Wegpunkte-Funktion, die als Teil der ersten Anweisungen spezifiziert ist, die betreibbar sind, um eine Vielzahl von Wegpunkten für eine Navigationsroute einzustellen;wobei die Anwendungsprogrammierungsschnittstelle betreibbar ist, um eine Mehrfachwegpunkte-Navigationsroute zu empfangen, die basierend auf der Vielzahl von Wegpunkten bestimmt ist, wobei die Mehrfachwegpunkte-Navigationsroute eine Vielzahl von Routensegmenten aufweist,wobei die erste Gruppe von Anweisungen eine Fortsetzung-zum-nächsten-Zielort-Funktion aufweist, wobei die Fortsetzung-zum-nächsten-Zielort-Funktion betreibbar ist, um aufgerufen zu werden, um zu einem Navigieren zu einem zweiten Wegpunkt in der Mehrfachwegpunkte-Route gehörende Navigationsinformation zu erhalten, wenn ein Anwender bei einem ersten Wegpunkt in der Mehrfachwegpunkte-Route angekommen ist,wobei die erste Gruppe von Anweisungen eine oder mehrere konfigurierbare Ereignislistenerschnittstellen spezifizieren,wobei die eine oder mehreren konfigurierbaren Ereignislistenerschnittstellen eine übrige-Zeit-oder-übrige-Entfernung-geändert-Listenerschnittstelle aufweisen, die betreibbar ist, um aufgerufen zu werden, wenn eine übrige Zeit oder eine übrige Entfernung zu einem nächsten Wegpunkt in der Mehrfachwegpunkt-Navigationsroute sich um mehr als eine Schwelle geändert hat, wobei die Schwelle als ein Parameter in der ersten Gruppe von Anweisungen spezifiziert ist,wobei die konfigurierbaren Ereignislistenerschnittstellen betreibbar sind, um zu einem oder mehreren Navigationsereignissen gehörende Daten zu erhalten, um die als Teil des Navigationsdienstes zur Verfügung gestellte Navigationsinformation einem Updaten zu unterziehen.A non-transitory computer-readable medium that stores instructions implementing an application programming interface for providing a navigation service as part of a software application running on a computing device, the computing device having one or more processors and a display device, the computing device configured to communicate with a navigation data provider over a communications network to communicate, the application programming interface comprising:a first set of instructions specifying one or more first parameters to control the software application's implementation of a navigation service, the navigation service being operable to provide navigation information to a user of the software application ;a second set of instructions specifying one or more second parameters to control interaction with a navigation engine provided by the navigation data provider via the application programming interface to obtain the navigation information provided as part of the navigation service; anda waypoints function specified as part of the first instructions operable to set a plurality of waypoints for a navigation route;wherein the application programming interface is operable to receive a multiple waypoint navigation route determined based on the plurality of waypoints is, wherein the multi-waypoint navigation route has a plurality of route segments, the first group of instructions having a continue-to-next-destination function, the continue-to-next-destination function being operable to be invoked, to obtain navigation information associated with navigating to a second waypoint in the multiple waypoint route when a user has arrived at a first waypoint in the multiple waypoint route, the first set of instructions specifying one or more configurable event listener interfaces, the one or multiple configurable event listener interfaces include a remaining time or remaining distance changed listener interface operable to be invoked when a remaining time or a remaining distance to a next waypoint in the multiple waypoint navigation route increases by more than one threshold has changed, the threshold being specified as a parameter in the first group of instructions, the configurable event listener interfaces being operable to obtain data associated with one or more navigation events in order to update the navigation information provided as part of the navigation service undergo.
Description
GEBIETAREA
Die vorliegende Offenbarung betrifft allgemein Anwendungsprogrammierungsschnittstellen zum Bereitstellen von Navigationsinformation.The present disclosure relates generally to application programming interfaces for providing navigation information.
HINTERGRUNDBACKGROUND
Auf Computervorrichtungen, wie beispielsweise mobilen Computervorrichtungen (z. B. Smartphones, Tablets, Smartwatches, etc.), implementierte Anwendungen sind für eine Vielfalt von Zwecken, einschließlich Geschäfts-, Sozial-, Gesundheits- und anderen Zwecken, entwickelt worden. Diese Anwendungen können eine Anwenderschnittstelle (z. B. eine grafische Anwenderschnittstelle) zum Präsentieren von Information zu einem Anwender sowie zum Zulassen, dass der Anwender mit der Anwendung interagiert, zur Verfügung stellen. Populäre Anwendungen für mobile Computervorrichtungen enthalten Kartenanwendungen, die Anwendem mannigfaltige geografische Information (z. B. auf einer Karte präsentierte Information über eine aktuelle Lokalisierung) verfügbar machen.Applications implemented on computing devices, such as mobile computing devices (e.g., smartphones, tablets, smartwatches, etc.), have been developed for a variety of purposes, including business, social, healthcare, and other purposes. These applications may provide a user interface (e.g., a graphical user interface) for presenting information to a user and allowing the user to interact with the application. Popular applications for mobile computing devices include mapping applications that make a variety of geographic information (e.g., current location information presented on a map) available to users.
In einigen Fällen kann es für eine Anwendung, die nicht primär zur Kartografie oder Navigation gedacht ist, erwünscht sein, dass sie Navigations- oder Karteninformation enthält - beispielsweise könnte es für eine Gesundheits- oder Fitnessanwendung erwünscht sein, Navigations- oder Karteninformation zur Verfügung zu stellen, um zuzulassen, dass Anwender ihren Weg um eine Laufstrecke herum finden, einen Lauf über eine bestimmte Entfernung beenden, etc. Im Prinzip könnte die Gesundheits- oder Fitnessanwendung derart geschrieben werden, dass sie eine maßgeschneiderte Navigantions- oder Kartenschnittstelle enthält, aber dies würde Programmierressourcen erfordern, um die Anwendung zu erzeugen.In some cases, an application that is not primarily intended for cartography or navigation may wish to include navigation or mapping information - for example, a health or fitness application might desire to provide navigation or mapping information , to allow users to find their way around a running route, complete a run over a certain distance, etc. In principle, the health or fitness application could be written to include a tailored navigation or mapping interface, but this would require programming resources required to create the application.
Aus den Dokumenten „How to' for the Android SDK“; skobbler; 2016, S. 1 - 36. URL: http:// developer.skobbier.com/getting-started/android, Archiviert in http://www.archive.org am 16.03.16; „Index“; skobbler; 2015, S. 1 - 53. URL: http://developer.skobbler.com/docs/android/2.5.1/index-all.html, Archiviert in http://www.archive.org am 06.12.15; und „Release Notes“; skobbler; 2015, S. 1 ? 8. URL: http:// developer.skobbler.com/release-notes, Archiviert in http://www.archive.org am 27.10.15, ist eine Anwendungsprogrammierungsschnittstelle bekannt, mittels welcher ein Navigationsdienst in eine Softwareanwendung intgegriert werden kann.From the documents “How to' for the Android SDK”; skobbler; 2016, pp. 1 - 36. URL: http://developer.skobbier.com/getting-started/android, Archived in http://www.archive.org on March 16, 2016; "Index"; skobbler; 2015, pp. 1 - 53. URL: http://developer.skobbler.com/docs/android/2.5.1/index-all.html, Archived in http://www.archive.org on December 6, 2015; and “Release Notes”; skobbler; 2015, p. 1? 8. URL: http://developer.skobbler.com/release-notes, Archived in http://www.archive.org on October 27, 2015, an application programming interface is known by means of which a navigation service can be integrated into a software application.
ZUSAMMENFASSUNGSUMMARY
Es werden ein nichtflüchtiges Computerlesbares Medium, ein Verfahren, sowie eine Computervorrichtung gemäß der anhängenden Ansprüche offenbart. Aspekte und Vorteile von Ausführungsformen der vorliegenden Offenbarung werden teilweise in der folgenden Beschreibung dargelegt werden oder können aus der Beschreibung gelernt werden oder können durch Ausführung der Ausführungsformen gelernt werden.A non-transitory computer-readable medium, a method and a computing device according to the appended claims are disclosed. Aspects and advantages of embodiments of the present disclosure will be set forth in part in the following description, or may be learned from the description, or may be learned by carrying out the embodiments.
Ein beispielhafter Aspekt der vorliegenden Offenbarung betrifft ein computerlesbares Medium, das ein nichtflüchtiges computerlesbares Medium sein kann, obwohl die Erfindung nicht auf dieses beschränkt ist, das Anweisungen speichert, die eine Anwendungsprogrammierungsschnittstelle zum Bereitstellen eines Na-vigationsdienstes als Teil einer auf einer Computervorrichtung ausgeführten Softwareanwendung implemen-tiert. Die Computervorrichtung kann einen oder mehrere Prozessoren und eine Anzeigevorrichtung haben. Die Computervorrichtung kann konfiguriert sein, um mit einem Navigationsdatenprovider über ein Kommunikati-onsnetzwerk zu kommunizieren. Die Anwendungsprogrammierungsschnittstelle kann eine erste Gruppe von Anweisungen enthalten, die einen oder mehrere erste Parameter spezifiziert, um die Implementierung eines Navigationsdienstes durch die Softwareanwendung zu steuern. Der Navigationsdienst kann betreibbar sein, um Navigationsinformation zu einem Anwender der Softwareanwendung zu liefern. Die Anwendungsprogram-mierungsschnittstelle kann weiterhin eine zweite Gruppe von Anweisungen enthalten, die einen oder mehrere zweite Parameter spezifizieren, um eine Interaktion mit einer Navigations-Engine zu steuern, die durch den Navigationsdatenprovider über die Anwendungsprogrammierungsschnittstelle zur Verfügung gestellt wird. Eine Navigations-Engine kann auch als Routing Engine bezeichnet werden. Die Anwendungsprogrammierungsschnittstelle kann weiterhin eine Wegpunkte-Funktion enthalten, die als Teil der ersten Anweisungen spezifiziert ist, die betreibbar sind, um eine Vielzahl von Wegpunkten für eine Naviga-tionsroute einzustellen. Die Anwendungsprogrammierungsschnittstelle kann betreibbar sein, um eine Mehr-fachpunkte-Navigationsroute zu empfangen, die basierend auf der Vielzahl von Wegpunkten bestimmt ist. Die Mehrfachpunkte-Navigationsroute kann eine Vielzahl von Routensegmenten enthalten. An exemplary aspect of the present disclosure relates to a computer-readable medium, which may be a non-transitory computer-readable medium, although the invention is not limited thereto, that stores instructions that implement an application programming interface for providing a navigation service as part of a software application executing on a computing device -ted. The computing device may have one or more processors and a display device. The computing device may be configured to communicate with a navigation data provider over a communications network. The application programming interface may include a first set of instructions that specify one or more first parameters to control the software application's implementation of a navigation service. The navigation service may be operable to provide navigation information to a user of the software application. The application programming interface may further include a second set of instructions that specify one or more second parameters to control interaction with a navigation engine provided by the navigation data provider via the application programming interface. A navigation engine can also be called a routing engine. The application programming interface may further include a waypoints function specified as part of the first instructions operable to set a plurality of waypoints for a navigation route. The application programming interface may be operable to provide multiple to receive specialist points navigation route determined based on the plurality of waypoints. The multi-point navigation route can contain a variety of route segments.
Andere beispielhafte Aspekte der vorliegenden Offenbarung betreffen Systeme, Vorrichtungen bzw. Geräte, computerlesbare Medien, die materielle bzw. konkrete, nichtflüchtige computerlesbare Medien sein können, obwohl die Erfindung nicht darauf beschränkt ist, Anwenderschnittstellen, Speichervorrichtungen und elektronische Vorrichtungen zum Bereitstellen von Navigations-Anwendungsprogrammierungsschnittstellen.Other exemplary aspects of the present disclosure relate to systems, devices, computer-readable media, which may be tangible, non-transitory computer-readable media, although the invention is not limited to, user interfaces, storage devices, and electronic devices for providing navigation application programming interfaces.
Beispielsweise betrifft ein weiterer beispielhafter Aspekt ein Verfahren zum Integrieren eines Navigationsdienstes als Teil einer Softwareanwendung auf einer Computervorrichtung mit einem oder mehreren Prozessoren, wobei das Verfahren folgendes aufweist: Zugreifen auf zu einer Navigations-Anwendungsprogrammierungsschnittstelle gehörende Daten; Eingliedern der zu einer Navigations-Programmierungsschnittstelle gehörenden Daten in die Softwareanwendung; Erstellen einer zum Navigationsdienst gehörenden grafischen Anwenderschnittstellenkomponente unter Verwendung einer ersten Gruppe von zur Navigations-Anwendungsprogrammierungsschnittstelle gehörenden Anweisungen, wobei die erste Gruppe von Anweisungen einen oder mehrere Parameter spezifiziert, um die Anzeige der zum Navigationsdienst gehörenden grafischen Anwenderschnittstellenkomponente auf der Anzeigevorrichtung in Verbindung mit einer Softwareanwendung zu steuern; und Konfigurieren des Navigationsdienstes unter Verwendung einer zweiten Gruppe von zur Navigations-Anwendungsprogrammierungsschnittstelle gehörenden Anweisungen, wobei die zweite Gruppe von Anweisungen einen oder mehrere Parameter spezifiziert, um die Implementierung des Navigationsdienstes durch die Softwareanwendung zu steuern; wobei die zweite Gruppe von Anweisungen eine Wegpunkte-Funktion aufweist, die spezifiziert betreibbar ist, um eine Vielzahl von Wegpunkten für eine Navigationsroute einzustellen, wobei die Anwendungsprogrammierungsschnittstelle betreibbar ist, um eine Mehrpunkte-Navigationsroute zu empfangen, die basierend auf auf der Vielzahl von Wegpunkten bestimmt ist, wobei die Mehrpunkte-Navigationsroute eine Vielzahl von Routensegmenten aufweist. Das Verfahren kann folgendes aufweisen: Erhalten eines Zugriffsschlüssels zum Freigeben eines Betriebs der Navigations-Anwendungsprogrammierungsschnittstelle; und Hinzufügen des Zugriffsschlüssels zur Softwareanwendung. Zusätzlich oder alternativ kann das Verfahren ein Initialisieren der Navigations-Anwendungsprogrammierungsschnittstelle unter Verwendung einer Gruppe von zur Navigations-Anwendungsprogrammierungsschnittstelle gehörenden Initialisierungs- und Fehlerhandhabungsanweisungen aufweisen. Zusätzlich oder alternativ können die eine oder die mehreren konfigurierbaren Ereignislistenerschnittstellen eine Lokalisierungslistenerschnittstelle aufweisen, die betreibbar ist, um aufgerufen zu werden, um eine aktuelle Lokalisierung eines Anwenders im Navigationsdienst einem Updaten zu unterziehen.For example, another exemplary aspect relates to a method for integrating a navigation service as part of a software application on a computing device having one or more processors, the method comprising: accessing data associated with a navigation application programming interface; Incorporating the data associated with a navigation programming interface into the software application; Creating a navigation service graphical user interface component using a first set of navigation application programming interface instructions, the first set of instructions specifying one or more parameters to enable the display of the navigation service graphical user interface component on the display device in conjunction with a software application steer; and configuring the navigation service using a second set of instructions associated with the navigation application programming interface, the second set of instructions specifying one or more parameters to control the software application's implementation of the navigation service; wherein the second set of instructions includes a waypoint function specifically operable to set a plurality of waypoints for a navigation route, the application programming interface operable to receive a multipoint navigation route determined based on the plurality of waypoints is, wherein the multi-point navigation route has a plurality of route segments. The method may include: obtaining an access key for enabling operation of the navigation application programming interface; and adding the access key to the software application. Additionally or alternatively, the method may include initializing the navigation application programming interface using a set of initialization and error handling instructions associated with the navigation application programming interface. Additionally or alternatively, the one or more configurable event listener interfaces may include a location listener interface operable to be invoked to update a current location of a user in the navigation service.
Ein weiterer beispielhafter Aspekt betrifft eine Computervorrichtung, die folgendes aufweist: eines Anzeigevorrichtung; eine Netzwerkschnittstelle; einen oder mehrere Prozessoren; und eine oder mehrere Speichervorrichtungen, wobei die eine oder die mehreren Speichervorrichtungen computerlesbare Anweisungen speichern, die dann, wenn sie ausgeführt werden, veranlassen, dass der eine oder die mehreren Prozessoren ein Verfahren des obigen beispielhaften Aspekts durchführen.Another exemplary aspect relates to a computing device comprising: a display device; a network interface; one or more processors; and one or more memory devices, the one or more memory devices storing computer-readable instructions that, when executed, cause the one or more processors to perform a method of the above exemplary aspect.
In allen vorgenannten Aspekten weist die erste Gruppe von Anweisungen eine Fortsetzung-zum-nächsten-Zielort-Funktion auf, wobei die Fortsetzung-zum-nächsten-Zielort-Funktion betreibbar ist, um aufgerufen zu werden, um zu einem Navigieren zu einem zweiten Wegpunkt in der Mehrfachwegpunkte-Route gehörende Navigationsinformation zu erhalten, wenn ein Anwender bei einem ersten Wegpunkt in der Mehrfachwegpunkte-Route angekommen ist, wobei die erste Gruppe von Anweisungen eine oder mehrere konfigurierbare Ereignislistenerschnittstellen spezifizieren, und wobei die eine oder mehreren konfigurierbaren Ereignislistenerschnittstellen eine übrige-Zeit-oder-übrige-Entfernung-geändert-Listenerschnittstelle aufweisen, die betreibbar ist, um aufgerufen zu werden, wenn eine übrige Zeit oder eine übrige Entfernung zu einem nächsten Wegpunkt in der Mehrfachwegpunkte-Route sich um mehr als eine Schwelle geändert hat, wobei die Schwelle als ein Parameter in der ersten Gruppe von Anweisungen spezifiziert ist, wobei die konfigurierbaren Ereignislistenerschnittstellen betreibbar sind, um zu einem oder mehreren Navigationsereignissen gehörende Daten zu erhalten, um die als Teil des Navigationsdienstes zur Verfügung gestellte Navigationsinformation einem Updaten zu unterziehen.In all of the foregoing aspects, the first group of instructions includes a continue-to-next-destination function, the continue-to-next-destination function being operable to be invoked to navigate to a second waypoint in to obtain navigation information associated with the multiple waypoint route when a user has arrived at a first waypoint in the multiple waypoint route, the first set of instructions specifying one or more configurable event listener interfaces, and wherein the one or more configurable event listener interfaces provide a remaining-time or-remaining-distance-changed listener interface operable to be invoked when a remaining time or a remaining distance to a next waypoint in the multiple waypoint route has changed by more than a threshold, the threshold as a parameter is specified in the first group of instructions, wherein the configurable event listener interfaces are operable to obtain data associated with one or more navigation events in order to update the navigation information provided as part of the navigation service.
Anwendungsprogrammierungsschnittstellen können zulassen, dass auf Computervorrichtungen implementierte Anwendungen mit verschiedenen Diensten interagieren, um Information und Funktionalität zu einem Anwender zu liefern. Anwendungsprogrammierungsschnittstellen können ein Werkzeug für Entwickler zur Ver-fügung stellen, um Information, Programmierung, Frameworks und Strukturen in Anwendungen für einen Zu-griff durch den Anwender einzubetten. Beispielsweise kann ein Kartendienstherausgeber bzw. - provider eine Karten-Anwendungsprogrammierungsschnittstelle zur Verfügung stellen, die durch dritte Parteien verwendet werden kann, um eine digitale Karte in eine Anwenderschnittstelle einer durch die dritte Partei entwickelten Anwendung einzubetten. Dies vermeidet die Notwendigkeit für den Entwickler der dritten Partei, seine eigene Kartenanwendung zu erzeugen.Application programming interfaces may allow applications implemented on computing devices to interact with various services to provide information and functionality to a user. Application programming interfaces can provide a tool for developers to embed information, programming, frameworks and structures into applications for user access. For example, a card service issuer or - provider provide a map application programming interface that can be used by third parties to embed a digital map into a user interface of an application developed by the third party. This avoids the need for the third party developer to create their own mapping application.
Diese und andere Merkmale, Aspekte und Vorteile von verschiedenen Ausführungsformen werden unter Bezugnahme auf die folgende Beschreibung und die beigefügten Ansprüche besser verstanden werden. Die beigefügten Zeichnungen, die in dieser Beschreibung enthalten sind und einen Teil von ihr bilden, stellen Ausführungsformen der vorliegenden Offenbarung dar und dienen zusammen mit der Beschreibung dazu, die zugehörigen Prinzipien zu erklären.These and other features, aspects and advantages of various embodiments will be better understood with reference to the following description and the appended claims. The accompanying drawings, which are incorporated in and form a part of this specification, illustrate embodiments of the present disclosure and, together with the description, serve to explain the principles thereof.
KURZE BESCHREIBUNG DER ZEICHNUNGENBRIEF DESCRIPTION OF THE DRAWINGS
Eine detaillierte Diskussion von Ausführungsformen, die an Fachleute auf dem Gebiet gerichtet ist, wird in der Beschreibung dargestellt, welche auf die angehängten Figuren Bezug nimmt, in welchen:
-
1 einen Überblick auf ein beispielhaftes System zum Implementieren eines Navigationsdienstes als Teil einer Softwareanwendung unter Verwendung einer Anwendungsprogrammierungsschnittstelle gemäß beispielhaften Ausführungsformen der vorliegenden Offenbarung zeigt; -
2 -3 eine beispielhafte grafische Anwenderschnittstellenkomponente zeigt, die zu einem Navigationsdienst als Teil einer Softwareanwendung gemäß beispielhaften Ausführungsformen der vorliegenden Offenbarung gehört; -
4 ein Blockdiagramm einer beispielhaften Anwendervorrichtung zeigt, die eine Softwareanwendung gemäß beispielhaften Ausführungsformen der vorliegenden Offenbarung implementiert; -
5 ein Blockdiagramm einer beispielhaften Navigations-Anwendungsprogrammierungsschnittstelle gemäß beispielhaften Ausführungsformen der vorliegenden Offenbarung zeigt; -
6 ein Blockdiagramm von beispielhaften Navigatoranweisungen zeigt, die zu einer Navigations-Anwendungsprogrammierungsschnittstelle gemäß beispielhaften Aspekten der vorliegenden Offenbarung gehören; -
7 ein Ablaufdiagramm eines beispielhaften Verfahrens gemäß beispielhaften Ausführungsformen der vorliegenden Offenabrung zeigt; -
8 ein Blockdiagramm einer beispielhaften Navigations-Anwendungsprogrammierungsschnittstelle gemäß beispielhaften Ausführungsformen der vorliegenden Offenbarung zeigt; und -
9 ein Blockdiagramm von beispielhaften Navigatoranweisungen zeigt, die zu einer Navigations-API gemäß beispielhaften Aspekten der vorliegenden Offenbarung gehören.
-
1 shows an overview of an example system for implementing a navigation service as part of a software application using an application programming interface in accordance with example embodiments of the present disclosure; -
2 -3 illustrates an example graphical user interface component associated with a navigation service as part of a software application in accordance with example embodiments of the present disclosure; -
4 shows a block diagram of an example user device that implements a software application in accordance with example embodiments of the present disclosure; -
5 shows a block diagram of an example navigation application programming interface in accordance with example embodiments of the present disclosure; -
6 shows a block diagram of example navigator instructions associated with a navigation application programming interface in accordance with example aspects of the present disclosure; -
7 shows a flowchart of an example method in accordance with example embodiments of the present disclosure; -
8th shows a block diagram of an example navigation application programming interface in accordance with example embodiments of the present disclosure; and -
9 shows a block diagram of example navigator instructions associated with a navigation API according to example aspects of the present disclosure.
DETAILLIERTE BESCHREIBUNGDETAILED DESCRIPTION
Nun wird detailliert auf Ausführungsformen Bezug genommen werden, von welchen eines oder mehrere Beispiele in den Zeichnungen dargestellt ist oder sind. Jedes Beispiel ist mittels Erklärung der Ausführungsformen und nicht mittels Beschränkung der vorliegenden Offenbarung zur Verfügung gestellt. Tatsächlich wird es Fachleuten auf dem Gebiet klar sein, dass verschiedene Modifikationen und Variationen an den Ausführungsformen durchgeführt werden können, ohne vom Schutzumfang oder Sinngehalt der vorliegenden Offenbarung abzuweichen. Beispielsweise können als Teil einer Ausführungsform dargestellte oder beschriebene Merkmale mit einer anderen Ausführungsform verwendet werden, um eine noch weitere Ausführungsform zu ergeben. Somit ist beabsichtigt, dass Aspekte der vorliegenden Offenbarung solche Modifikationen und Variationen abdecken.Reference will now be made in detail to embodiments, one or more examples of which are illustrated in the drawings. Each example is provided by way of explanation of the embodiments and not by way of limitation of the present disclosure. Indeed, it will be apparent to those skilled in the art that various modifications and variations may be made to the embodiments without departing from the scope or spirit of the present disclosure. For example, features illustrated or described as part of one embodiment may be used with another embodiment to yield yet another embodiment. Thus, aspects of the present disclosure are intended to cover such modifications and variations.
Beispielhafte Aspekte der vorliegenden Offenbarung sind auf Anwendungsprogrammierungsschnittstellen („APIs“) zum Liefern von Navigationsinformation in Softwareanwendungen einer dritten Partei, die auf einer oder mehreren Computervorrichtungen implementiert sind, wie beispielsweise webbasierte Softwareanwendungen, die in einem Browser implementiert sind, lokal gespeicherte Softwareanwendungen und andere Anwendungen. Bei einigen Ausführungsformen kann die API zulassen, dass Anwendungsentwickler ein durch einen Navigationsdatenprovider oder eine andere Quelle gelieferte Navigationsanwendung in ihre Softwareanwendung einbetten. Die API kann zulassen, dass der Entwickler die Navigationsanwendung auf einfache Weise an einen Kunden anpasst und an spezielle Bedürfnisse anpasst, um variierende Plattformen und Endanwendungsfälle aufzunehmen bzw. unterzubringen.Exemplary aspects of the present disclosure relate to application programming interfaces (“APIs”) for providing navigation information in third-party software applications implemented on one or more computing devices, such as web-based software applications implemented in a browser, locally stored software applications, and other applications . In some embodiments, the API may allow application developers to embed a navigation application provided by a navigation data provider or other source into their software application. The API may allow the developer to easily customize the navigation application to a customer and adapt it to specific needs to accommodate varying platforms and end use cases.
Spezifischer kann die API, wenn sie durch eine auf einer Computervorrichtung implementierte Softwareanwendung aufgerufen wird, konfiguriert sein, um Routing- bzw. Führungsinformation von einem Datenprovider über eine Kommunikationsschnittstelle (z. B. über ein Netzwerk, wie beispielsweise das Internet) anzufragen und zu empfangen. Die API kann konfiguriert sein, um Navigationsinformation (z. B. durch eine grafische Anwenderschnittstellenkomponente oder durch Audio- und/oder Vibrationshinweise) basierend auf der Routinginformation zu präsentieren, um einen Navigationsdienst zur Verfügung zu stellen, der in der Softwareanwendung eingebettet ist. Ein Navigationsdienst kann eine Anwendung (z. B. eine Softwareanwendung) sein, die Navigationsinformation liefert bzw. zur Verfügung stellt, die dazu verwendet werden kann, einen Anwender von einem Ursprung zu einem Zielort zu führen. Bei einigen Ausführungsformen kann der in der Softwareanwendung eingebettete Navigationsdienst Navigationsinformation (z. B. Navigationsinformation mit Routenführung) zu einem Anwender liefern, wenn sich ein Anwender entlang einer Navigationsroute oder einem anderen Weg bewegt. Genauer gesagt kann der Navigationsdienst bei einigen Ausführungsformen eine Route empfangen, die einen Anwender von einer aktuellen Stelle zu einem Zielort führt. Als Beispiel kann die Route eine Folge von Schritten enthalten, die jeweils einen Routenteilbereich (z. B. Name oder Nummer der Straße, Entfernung, Wegzeit, Geschwindigkeitsbegrenzung) und ein Manöver (z. B. Abbiegen nach links, nach rechts einfädeln, geradeaus weiter) beschreiben, um auf den nächsten Routenteilbereich zuzugreifen. Der Navigationsdienst kann die Route einem Anwender durch eine grafische Anwenderschnittstelle und über einen oder mehrere Hinweise (z. B. Audio- oder Videohinweise) liefern, um den Anwender von einem Ursprung zu einem Zielort zu führen.More specifically, the API, when invoked by a software application implemented on a computing device, may be configured to request and receive routing information from a data provider over a communications interface (e.g., over a network such as the Internet). . The API may be configured to present navigation information (e.g., through a graphical user interface component or through audio and/or vibration cues) based on the routing information to provide a navigation service embedded in the software application. A navigation service may be an application (e.g., a software application) that provides navigation information that can be used to guide a user from an origin to a destination. In some embodiments, the navigation service embedded in the software application may provide navigation information (e.g., navigation information with route guidance) to a user when a user moves along a navigation route or other path. More specifically, in some embodiments, the navigation service may receive a route that guides a user from a current location to a destination. As an example, the route may contain a sequence of steps, each of which includes a route subarea (e.g., street name or number, distance, travel time, speed limit) and a maneuver (e.g., turn left, merge right, continue straight). ) to access the next route section. The navigation service may provide the route to a user through a graphical user interface and via one or more cues (e.g., audio or video cues) to guide the user from an origin to a destination.
Bei einigen Ausführungsformen kann die Softwareanwendung mit einer Routing Engine, die durch einen Navigationsdatenprovider oder eine andere Quelle (z. B. eine lokale Quelle von Navigationsinformation) implementiert ist, über die API interagieren, um Routinginformation und andere Navigationsinformation zu erhalten. Der Navigationsdatenprovider kann zu einer separaten Einheit in bezug zum Entwickler der Softwareanwendung gehören. Beispielsweise kann der Navigationsdatenprovider zu einem Web-Server gehören, der ein Host eines geografischen Informationssystems ist. Die Navigationsinformation kann eine Route zu einem oder mehreren Wegpunkten enthalten. Die Navigationsinformation kann weiterhin Kartendaten zur Präsentation in Verbindung mit der Route und anderer Information enthalten. Die Navigationsinformation kann kontinuierlich einem Updaten unterzogen werden (z. b. durch eine oder mehrere Ereignislistenerschnittstellen, die als Teil der API implementiert sind), wenn der Anwender die Navigationsroute durchläuft, um Navigationsinformation in Echtzeit oder nahe an einer Echtzeit für einen Anwender zu liefern.In some embodiments, the software application may interact with a routing engine implemented by a navigation data provider or other source (e.g., a local source of navigation information) via the API to obtain routing information and other navigation information. The navigation data provider may belong to a separate entity from the developer of the software application. For example, the navigation data provider may belong to a web server that hosts a geographic information system. The navigation information may include a route to one or more waypoints. The navigation information may further include map data for presentation in conjunction with the route and other information. The navigation information may be continually updated (e.g., through one or more event listener interfaces implemented as part of the API) as the user traverses the navigation route to provide real-time or near real-time navigation information to a user.
Die API kann, wenn sie durch eine Softwareanwendung implementiert ist, die zum Navigationsdienst gehörende Navigationsinformation in einer in Verbindung mit der Softwareanwendung angezeigten grafischen Anwenderschnittstellenkomponente visuell präsentieren. Beispielsweise kann die grafische Anwenderschnittstellenkomponente eine Karte anzeigen. Die Vorgabeanzeige der Karte kann beispielsweise eine Ansicht der Karte von oben nach unten sein. Während eines Navigationsmodes kann die grafische Anwenderschnittstellenkomponente eine Route in einem Linienzug auf der Karte anzeigen. Die Position des Anwenders kann entlang der Route einem Updaten unterzogen werden, wenn der Anwender die Route navigiert. Beispielsweise kann der Navigationsdienst eine grafische Anwenderschnittstelle zur Verfügung stellen, wo eine Position des Anwenders entlang der Navigationsroute kontinuierlich einem Updaten unterzogen wird, wenn sich die Anwenderposition entlang der Navigationsroute ändert. Verschiedene Wegpunkte können durch in der Karte lokalisierte Markierungen identifiziert werden. Andere Information kann in der grafischen Anwenderschnittstellenkomponente präsentiert werden, wie beispielsweise eine geschätzte Zeit oder eine Entfernung, die bis zu einer Ankunft bei einem Wegpunkt bleibt („ETD-Information“), ein Kompassschnittstellenelement, ein Navigationsanfangs- bzw. -headingelement, etc. Bei einigen Ausführungsformen kann die Navigationsinformation unter Verwendung einer Audioführung mit oder ohne einer visuellen Anzeige von Navigationsinformation in der grafischen Anwenderschnittstellenkomponente geliefert werden.The API, when implemented by a software application, may visually present the navigation information associated with the navigation service in a graphical user interface component displayed in connection with the software application. For example, the graphical user interface component may display a map. For example, the default display of the map may be a top-down view of the map. During a navigation mode, the graphical user interface component may display a route in a line on the map. The user's position may be updated along the route as the user navigates the route. For example, the navigation service may provide a graphical user interface where a user's position along the navigation route is continuously updated as the user position along the navigation route changes. Different waypoints can be identified by markers located on the map. Other information may be presented in the graphical user interface component, such as an estimated time or distance remaining to arrive at a waypoint ("ETD information"), a compass interface element, a navigation heading element, etc In some embodiments, the navigation information may be provided using audio guidance with or without a visual display of navigation information in the graphical user interface component.
Gemäß bestimmten Aspekten der vorliegenden Offenbarung kann die API Gruppen von computerlesbaren Anweisungen enthalten, die dann, wenn sie durch einen oder mehrere Prozessoren ausgeführt werden, eine Integration der Navigationsanwendung in eine Softwareanwendung eines Entwicklers erleichtern. Die Gruppen von Anweisungen können, wenn sie durch einen oder mehrere Prozessoren implementiert sind, eine Interaktion durch die Softwareanwendung mit dem Navigationsdatenprovider über die API sowie die Anzeige und/oder Ausgabe von Navigationsinformation zum Anwender als Teil der Softwareanwendung verwalten bzw. regulieren.According to certain aspects of the present disclosure, the API may include sets of computer-readable instructions that, when executed by one or more processors, facilitate integration of the navigation application into a developer's software application. The sets of instructions, when implemented by one or more processors, may manage interaction by the software application with the navigation data provider via the API and the display and/or output of navigation information to the user as part of the software application.
Genauer gesagt können beispielhafte zu einer API gehörende Anweisungen, denen sich ein Entwickler einer Softwareanwendung gegenübergestellt sieht, eine Gruppe von Anweisungen enthalten, die einen oder mehrere Parameter spezifizieren, die die Anzeige der visuellen Ausgabe des Navigationsdienstes verwalten. Die API kann weiterhin eine Gruppe von Anweisungen enthalten, die einen oder mehrere Parameter spezifizieren, die die Implementierung des Navigationsdienstes steuern, und eine Gruppe von Anweisungen, die die Interaktion der API mit der Routing Engine verwalten, die durch den Navigationsdatenprovider geliefert ist.More specifically, example API-related instructions encountered by a software application developer may include a group of instructions that specify one or more parameters that control the display of the visual output of the navigation service prevail. The API may further include a set of instructions that specify one or more parameters that control the implementation of the navigation service and a set of instructions that manage the interaction of the API with the routing engine provided by the navigation data provider.
Gemäß bestimmten Aspekten der vorliegenden Offenbarung kann die API eine oder mehrere Ereignislistenerschnittstellen enthalten, die dann, wenn sie aufgerufen werden, zulassen, dass die die API aufrufende Softwareanwendung Daten erhält, die verschiedene Navigationsereignisse (z. B. von dem Navigationsdatenprovider oder dem Netzwerk) anzeigen. Die Navigationsereignisse können beispielsweise eine einem Updaten unterzogene Anwenderposition, eine geänderte Route, ein Update an der ETD-Information, eine Ankunft an einem Wegpunkt, etc. sein. Die konfigurierbaren Ereignislistenerschnittstellen können verwendet werden, um die Navigationsinformation kontinuierlich einem Updaten zu unterziehen, wenn sich ein Anwender entlang einer Route bewegt, und zwar auf eine Weise, die durch den Entwickler der Softwareanwendung erwünscht ist. Beispielsweise kann eine Ereignislistenerschnittstelle verwendet werden, um die aktuelle Lokalisierung eines Anwenders entlang einer Navigationsroute einem Updaten zu unterziehen. Eine weitere beispielhafte Ereignislistenerschnittstelle kann verwendet werden, um EDT-Information zu einer oder mehreren Wegpunkten einem Updaten zu unterziehen. Eine weitere beispielhafte Ereignislistenerschnittstelle kann verwendet werden, um zu signalisieren, wenn ein Anwender bei einem bestimmten Wegpunkt angekommen ist. Eine weitere beispielhafte Ereignislistenerschnittstelle kann verwendet werden, wenn ein Anwender von einer Route abweicht, die durch die Routing Engine bestimmt ist, und sich die Route zu einem durch Routing Engine bestimmten Wegpunkt ändert.According to certain aspects of the present disclosure, the API may include one or more event listener interfaces that, when invoked, allow the software application calling the API to receive data indicative of various navigation events (e.g., from the navigation data provider or the network). . The navigation events can be, for example, an updated user position, a changed route, an update to the ETD information, an arrival at a waypoint, etc. The configurable event listener interfaces can be used to continuously update the navigation information as a user moves along a route, in a manner desired by the developer of the software application. For example, an event listener interface can be used to update a user's current location along a navigation route. Another example event listener interface may be used to update EDT information about one or more waypoints. Another example event listener interface may be used to signal when a user has arrived at a particular waypoint. Another example event listener interface may be used when a user deviates from a route determined by the routing engine and the route changes to a waypoint determined by the routing engine.
Bei einigen Implementierungen kann die API konfiguriert sein, um eine Navigation für eine Vielzahl von Wegpunkten unterzubringen. Daten, die die Vielzahl von Wegpunkten anzeigen, können über die API beispielsweise in einer Listenform, die die Wegpunkte aufreiht, empfangen werden. Die Routing Engine kann eine Mehrfachwegpunkte-Route zu der Vielzahl von Wegpunkten bestimmen. Die Mehrfachwegpunkte-Route kann eine Vielzahl von Routensegmenten enthalten. Jedes Routensegment kann eine Route zwischen Wegpunkten in der Mehrfachwegpunkte-Route oder zwischen einer Startlokalisierung und einem Wegpunkt in der Mehrfachwegpunkte-Route sein.In some implementations, the API may be configured to accommodate navigation for a variety of waypoints. Data indicating the plurality of waypoints may be received via the API, for example in a list form that ranks the waypoints. The routing engine can determine a multiple waypoint route to the plurality of waypoints. The multiple waypoint route can contain a variety of route segments. Each route segment can be a route between waypoints in the multiple waypoint route or between a starting location and a waypoint in the multiple waypoint route.
Die API kann eine oder mehrere Ereignislistenerschnittstellen enthalten, um ein Liefern von Navigationsinformation basierend auf einer Mehrfachwegpunkte-Route unterzubringen. Beispielsweise können die eine oder mehreren Ereignislistenerschnittstellen konfiguriert sein, um Benachrichtigungen zu liefern, wenn ein jeweiliger Wegpunkt erreicht ist, wenn sich ETD-Information zum nächsten Wegpunkt ändert oder wenn sich irgendein Teil der Mehrfachwegpunkte-Route ändert. Zusätzlich können die eine oder mehreren Ereignislistenerschnittstellen konfiguriert sein, um einen Zugriff auf EDT-Information für jeden Wegpunkt entlang der Mehrfachwegpunkte-Route, einen Zugriff auf geografische Koordinaten (z. B. Breitengrad und Längengrad) für jeden Wegpunkt, einen Zugriff auf die zu einem Routensegment gehörende Information (z. B. Navigationslinienzug) zwischen einem jeweiligen Wegpunkt entlang der Mehrfachwegpunkte-Route und/oder einen Zugriff darauf, wo der Anwender entlang der Mehrfachwegpunkte-Route unabhängig von der Route zum nächsten Wegpunkt in der Mehrfachwegpunkte-Route gewesen ist, zu liefern.The API may include one or more event listener interfaces to accommodate providing navigation information based on a multiple waypoint route. For example, the one or more event listener interfaces may be configured to provide notifications when a respective waypoint is reached, when ETD information changes to the next waypoint, or when any part of the multiple waypoint route changes. Additionally, the one or more event listener interfaces may be configured to provide access to EDT information for each waypoint along the multiple waypoint route, access to geographic coordinates (e.g., latitude and longitude) for each waypoint, access to the Information belonging to the route segment (e.g. navigation line) between a respective waypoint along the multiple waypoint route and / or access to where the user has been along the multiple waypoint route regardless of the route to the next waypoint in the multiple waypoint route delivery.
Auf diese Weise können die APIs gemäß beispielhaften Ausführungsformen der vorliegenden Offenbarung einen technischen Effekt eines Erleichterns der Integration eines Navigationsdienstes, der durch einen Navigationsdatenprovider zur Verfügung gestellt wird, bei verschiedenen Softwareanwendungen haben. Eine oder mehrere Ereignislistenerschnittstellen, die als Teil der APls implementiert sind, können verwendet werden, um die Navigationsinformation kontinuierlich einem Updaten zu unterziehen, wenn sich ein Anwender entlang einer Navigationsroute auf eine Weise bewegt, die durch den Entwickler erwünscht ist. Die APls können die Kundenanpassung des Navigationsdienstes für verschiedene Endanwendungsnotwendigkeiten zulassen, wie beispielsweise für Fahrgemeinschaftsanwendungen, Versand-/Auslieferungsanwendungen, soziale Anwendungen und andere Endanwendungsanwendungen.In this way, the APIs according to exemplary embodiments of the present disclosure may have a technical effect of facilitating integration of a navigation service provided by a navigation data provider with various software applications. One or more event listener interfaces implemented as part of the APls may be used to continuously update the navigation information as a user moves along a navigation route in a manner desired by the developer. The APls may allow customization of the navigation service for various end-use needs, such as ride-sharing applications, shipping/delivery applications, social applications, and other end-use applications.
Eine Softwareanwendung 120 kann auf der Anwendervorrichtung 112 implementiert sein. Die Softwarenwendung kann beispielsweise eine Kartierungsanwendung, ein Browser, eine Fahrgemeinschaftsanwendung, eine Anwendung, die zum Unterstützen bei einer Auslieferung verwendet wird, eine soziale Medienanwendung oder eine andere Softwareanwendung sein, die es nötig haben kann, Navigationsinformation zu einem Anwender zu liefern. Die Softwareanwendung 120 kann lokal auf der Anwendervorrichtung 112 gespeichert sein oder kann beispielsweise eine Web-Anwendung sein, auf die über einen Browser zugegriffen wird, der auf der Anwendervorrichtung 112 implementiert ist. Bei einigen Ausführungsformen kann die Softwareanwendung 120 durch eine Einheit einer dritten Partei entwickelt sein, die unabhängig von und/oder nicht angegliedert ist an eine Einheit, die zu dem Navigationsdatenprovider 114 gehört.A software application 120 may be implemented on the user device 112. The software application may be, for example, a mapping application, a browser, a ride-sharing application, an application used to assist with a delivery, a social media application, or another software application that may be required to provide navigation information to a user. The software application 120 may be stored locally on the user device 112 or may, for example, be a web application accessed via a browser implemented on the user device 112. In some embodiments, the software application 120 may be developed by a third party entity that is independent of and/or unaffiliated with an entity associated with the navigation data provider 114.
Die Softwareanwendung 120 kann eine Navigations-API 130 aufrufen, um auf Navigationsdaten vom Navigationsdatenprovider 114 über das Kommunikationsnetzwerk 116 zuzugreifen und diese zu liefern, so dass ein Navigationsdienst in der Softwareanwendung 120 eingebettet sein kann. Beispielhafte Aspekte der vorliegenden Offenbarung werden mit einem Zugreifen auf Daten von.einem entfernten Navigationsdatenprovider 114 zu Zwecken einer Darstellung und Diskussion diskutiert. Fachleute auf dem Gebiet werden unter Verwendung der hierin zur Verfügung gestellten Offenbarung verstehen, dass die API 130 auf Daten von anderen Quellen zugreifen kann, wie beispielsweise von lokalen Quellen oder von Anwendungen, die auf der Anwendervorrichtung 112 lokalisiert sind.The software application 120 may call a navigation API 130 to access and provide navigation data from the navigation data provider 114 over the communications network 116 so that a navigation service may be embedded in the software application 120. Exemplary aspects of the present disclosure are discussed with accessing data from a remote navigation data provider 114 for purposes of illustration and discussion. Those skilled in the art will understand, using the disclosure provided herein, that the API 130 may access data from other sources, such as local sources or from applications located on the user device 112.
Der Navigationsdienst kann Navigationsinformation (z. B. Navigationsinformation mit Routenführung) in Echtzeit oder nahezu in Echtzeit zu einem Anwender präsentieren, wenn sich ein Anwender oder ein Fahrzeug, der oder das die Anwendervorrichtung 112 trägt, entlang einer Route von einem Ursprung zu einem oder mehreren Zielorten bewegt. Der Navigationsdienst kann eine grafische Anwenderschnittstellenkomponente zum Präsentieren der Navigationsinformation zum Anwender auf einer oder mehreren Anzeigevorrichtungen enthalten. Zusätzlich oder alternativ kann der Navigationsdienst eine Audioführung oder andere Benachrichtigungen (z. B. Vibrationsbenachrichtigungen) zum Anwender liefern, die Navigationsinformations-(z. B. mit Routenführung)Wegbeschreibungen anzeigen.The navigation service may present navigation information (e.g., navigation information with route guidance) to a user in real time or near real time as a user or a vehicle carrying the user device 112 moves along a route from one origin to one or more destinations moved. The navigation service may include a graphical user interface component for presenting the navigation information to the user on one or more display devices. Additionally or alternatively, the navigation service may provide audio guidance or other notifications (e.g., vibration notifications) to the user that display navigation information (e.g., route guidance) directions.
Die grafische Anwenderschnittstellenkomponente 200 kann dem Anwender andere Information präsentieren, die bei einer Navigation nützlich sein kann. Beispielsweise kann die grafische Anwenderschnittstellenkomponente 200 weiterhin ein Navigationsanfangselement 220 enthalten, das die aktuelle Navigationsrichtung und andere Information, die zu einer aktuellen Position der Route gehört, anzeigen. Zusätzlich kann die grafische Anwenderschnittstellenkomponente 200 EDT-Information 232 anzeigen, wie beispielsweise geschätzte Minuten oder eine geschätzte Entfernung bis zur Ankunft beim nächsten Wegpunkt. Gemäß beispielhaften Ausführungsformen der vorliegenden Offenbarung können zur Karte 202 gehörende Daten, die Route 210, etc. von einem Navigationsdatenprovider 114 oder einer anderen Quelle über eine API 130 erhalten werden, die durch die Softwareanwendung 120 aufgerufen wird. Eine oder mehrer Ereignislistenerschnittstellen, die als Teil der Navigations-Programmierungsschnittstelle 130 implementiert sind, können verwendet werden, um die Navigationsinformation einem Updaten zu unterziehen, wenn sich der Anwender oder das Fahrzeug entlang der Route bewegt.The graphical user interface component 200 may present the user with other information that may be useful in navigation. For example, the graphical user interface component 200 may further include a navigation header 220 that displays the current navigation Show direction and other information associated with a current position on the route. Additionally, the graphical user interface component 200 may display EDT information 232, such as estimated minutes or an estimated distance to arrive at the next waypoint. According to exemplary embodiments of the present disclosure, data associated with map 202, route 210, etc. may be obtained from a navigation data provider 114 or other source via an API 130 invoked by software application 120. One or more event listener interfaces implemented as part of the navigation programming interface 130 may be used to update the navigation information as the user or vehicle moves along the route.
Die beispielhaften grafischen Anwenderschnittstellenkomponenten 200 können angezeigt werden, wenn die API 130 in einem Navigationsmode arbeitet. In den Navigationsmode kann basierend auf verschiedenen Ereignissen eingetreten werden, wie beispielsweise das Spezifizieren von einer oder mehreren Wegpunkten und/oder der Empfang einer Anwendereingabe, die den Wunsch signalisiert, einen Navigationsmode zu beginnen. Bei einigen Ausführungsformen kann die grafische Anwenderschnittstellenkomponente 200, wenn sie im Navigationsmode arbeitet, die Route 210 anzeigen. Wenn sie nicht im Navigationsmode arbeitet, kann die grafische Anwenderschnittstellenkomponente 200 einfach eine Ansicht einer Karte von oben nach unten oder eine andere geeignete Ansicht der Karte anzeigen.The example graphical user interface components 200 may be displayed when the API 130 operates in a navigation mode. Navigation mode may be entered based on various events, such as specifying one or more waypoints and/or receiving user input indicating a desire to enter a navigation mode. In some embodiments, the graphical user interface component 200, when operating in navigation mode, may display the route 210. When not operating in navigation mode, the graphical user interface component 200 may simply display a top-down view of a map or another suitable view of the map.
Die
Nimmt man wieder Bezug auf
Die Anwendung 120 kann einen Navigationsdienst durch Interagieren mit dem Navigationsdatenprovider 114 über die API 130 über das Netzwerk 116 implementieren. Das Netzwerk 116 kann irgendein Typ von Kommunikationsnetzwerk sein, wie beispielsweise ein lokales Netz (z. B. Intranet), ein Fernnetz (z. B. Internet), ein zellulares Netzwerk oder eine Kombination davon. Das Netzwerk 116 kann auch eine direkte Verbindung enthalten. Im Allgemeinen kann eine Kommunikation über das Netzwerk 116 unter Verwendung von irgendeinem Typ einer verdrahteten und/oder drahtlosen Verbindung unter Verwendung einer Vielfalt von Kommunikationsprotokollen (z. B. TCP/IP, HTTP, SMTP, FTP), Codierungen und Formaten (z. B. HTML, XML) und/oder Schutzschemen (z. B. VPN, sicheres HTTP, SSL) getragen werden.The application 120 may implement a navigation service by interacting with the navigation data provider 114 via the API 130 over the network 116. The network 116 may be any type of communications network, such as a local network (e.g., intranet), a long-distance network (e.g., Internet), a cellular network, or a combination thereof. The network 116 may also include a direct connection. In general, communication over the network 116 may occur using any type of wired and/or wireless connection using a variety of communication protocols (e.g., TCP/IP, HTTP, SMTP, FTP), encodings, and formats (e.g., . HTML, XML) and/or protection schemes (e.g. VPN, secure HTTP, SSL).
Der Anweisungsspeicher 152 kann Gruppen von Anweisungen eines Betriebssystems (OS) 170, eine Navigations-API 130 und eine Softwareanwendung 120 speichern. Das OS 170 kann ein mobiles OS sein, das spezifisch für mobile Vorrichtungen entwickelt ist. Als solches kann das OS 170 Funktionen enthalten, die zulassen, dass die Softwareanwendung auf Daten, wie beispielsweise Parameter eines drahtlosen Netzwerks (z. B. eine Identität des drahtlosen Netzwerks, eine Dienstqualität) zugreift, sowie solche Funktionen wie Telefonie, Lokalisierungsbestimmung (z. B. über das globale Positioniersystem (GPS) oder WLAN), Datenaufrufentstehung des drahtlosen Netzwerks, etc. aufruft. Bei anderen Implementierungen ist das OS 170 ein allgemeines Betriebssystem, das auf sowohl mobilen als auch stationären Vorrichtungen arbeitet, wie beispielsweise Smartphones und Desktopcomputern. Bei einigen beispielhaften Implementierungen enthält das OS ein durch Google Inc. entwickeltes mobiles Betriebssystem Android® oder ein ähnliches Betriebssystem oder basiert darauf, um eine Android-Betriebsplattform zu implementieren. Jedoch können andere ähnliche Systeme verwendet werden, ohne vom Schutzumfang der vorliegenden Offenbarung abzuweichen.The instruction store 152 may store groups of instructions of an operating system (OS) 170, a navigation API 130, and a software application 120. The OS 170 may be a mobile OS specifically designed for mobile devices. As such, the OS 170 may include functions that allow the software application to access data such as parameters of a wireless network (e.g., a wireless network identity, a quality of service), as well as such functions as telephony, location determination (e.g. B. via the global positioning system (GPS) or WLAN), data call origination of the wireless network, etc. calls. In other implementations, OS 170 is a general operating system that operates on both mobile and stationary devices, such as smartphones and desktop computers. In some example implementations, the OS includes or is based on an Android® mobile operating system developed by Google Inc. or a similar operating system to implement an Android operating platform. However, other similar systems may be used without departing from the scope of the present disclosure.
Die Softwareanwendung 120 kann beispielsweise eine Kartografieanwendung, eine Navigationsanwendung, eine Fahrgemeinschaftsanwendung, eine Anwendung zum Unterstützen einer Auslieferung, eine soziale Medienanwendung, etc. sein. Weiterhin kann die Softwareanwendung 120 eine Web-Browseranwendung sein, die die Navigations-API 130 aufruft, um Navigationsinformation innerhalb eines zugeteilten Teilbereichs eines Browser-Fensters anzuzeigen. Im Allgemeinen kann die Navigations-API 130 irgendeiner geeigneten Softwareanwendung verfügbar gemacht werden, die auf der Anwendervorrichtung 120 ausführt. Ebenso können multiple unterschiedliche Softwareanwendungen die Navigations-API 130 aufrufen.The software application 120 may be, for example, a mapping application, a navigation application, a ride-sharing application, a delivery support application, a social media application, etc. Furthermore, the software application 120 may be a web browser application that calls the navigation API 130 to display navigation information within an allocated portion of a browser window. In general, the navigation API 130 may be made available to any suitable software application executing on the user device 120. Likewise, multiple different software applications can call the navigation API 130.
Wie es oben diskutiert ist, kann die Softwareanwendung 120 die Navigations-API 130 aufrufen, um einen Navigationsdienst in die Softwareanwendung 120 einzubetten. Beispielsweise kann bei einem Beispiel eine Softwareanwendung 120 einen oder mehrere Wegpunkte zur Navigations-API 130 liefern. Die Navigations-API 130 kann Navigationsdaten von einem entfernten Navigationsdatenprovider anfordern, um eine Navigationsroute basierend auf dem einen oder den mehreren Wegpunkten zu bestimmen. Die Navigations-API 130 kann Gruppen von Anweisungen enthalten, um die Anzeige von Navigationsinformation auf der mobilen Vorrichtung als Teil des Navigationsdienstes zu steuern. Die API 130 kann einen oder mehrere Ereignislistener enthalten, die verwendet werden, um die angezeigte Navigationsinformation beispielsweise basierend auf Anwenderlokalisierung einem Updaten zu unterziehen, wie sie durch ein als Teil der Anwendervorrichtung implementiertes Positioniersystem bestimmt ist.As discussed above, the software application 120 may call the navigation API 130 to embed a navigation service into the software application 120. For example, in one example, a software application 120 may provide one or more waypoints to the navigation API 130. The navigation API 130 may request navigation data from a remote navigation data provider to determine a navigation route based on the one or more waypoints. The navigation API 130 may include sets of instructions to control the display of navigation information on the mobile device as part of the navigation service. The API 130 may include one or more event listeners that are used to update the displayed navigation information based, for example, on user location as determined by a positioning system implemented as part of the user device.
Bei einigen Ausführungsformen kann das Positioniersystem eine oder mehrere Vorrichtungen oder eine Schaltung zum Bestimmen der Position einer Vorrichtung enthalten. Beispielsweise kann die Positioniervorrichtung eine aktuelle oder relative Position durch Verwenden eines Satelliten-Navigations-Positioniersystems (z. B. eines GPS-Systems, eines Galileo-Positioniersystems, des GLObalen Navigations-Satellitensystems (GLONASS), des BeiDou-Satelliten-Navigations- und Positioniersystems), eines Trägheitsnavigationssystems, eines Koppelnavigationssystems basierend auf einer IP-Adresse durch Verwenden einer Triangulation und/oder einer Nähe zu zellularen Sendetürmen oder WiFi-Hotspots, Signalfeuern und ähnlichem und/ oder von anderen geeigneten Techniken zum Bestimmen einer Position bestimmen.In some embodiments, the positioning system may include one or more devices or circuitry for determining the position of a device. For example, the positioning device may obtain a current or relative position by using a satellite navigation positioning system (e.g., a GPS system, a Galileo positioning system, the GLObal Navigation Satellite System (GLONASS), the BeiDou satellite navigation and positioning system ), an inertial navigation system, a dead reckoning system based on an IP address by using triangulation and/or proximity to cellular towers or WiFi hotspots, beacons and the like, and/or other suitable techniques to determine a position.
Die Navigations-API 130 kann als eine oder einige Funktionen, eine Datenstruktur, etc. implementiert sein. Weiterhin kann die API 130 einen compilierten Code enthalten, der direkt auf dem (den) Prozessoren) 154 ausführt, oder, alternativ dazu, Anweisungen in irgendeiner anderen Form, wie beispielsweise einer Skriptsprache, die durch die Anwendung 120 während der Laufzeit interpretiert wird. Die API 130 enthält bei einer beispielhaften Implementierung gut dokumentierte Prototypen von einigen Funktionen, die ein Entwickler in den Code der Softwareanwendung 120 einschließen kann, sowie Anweisungen, die diese Funktionen implementieren. Bei einigen Ausführungsformen kann die API 130 dem Entwickler als statische Bibliothek zur Verfügung gestellt werden.The navigation API 130 may be implemented as one or some functions, a data structure, etc. Furthermore, the API 130 may include compiled code that executes directly on the processor(s) 154 or, alternatively, instructions in some other form, such as a scripting language, that are interpreted by the application 120 at run time. The API 130, in an example implementation, includes well-documented prototypes of some functions that a developer may include in the code of the software application 120, as well as instructions that implement these functions. In some embodiments, the API 130 may be provided to the developer as a static library.
Bei einigen Ausführungsformen kann die Navigations-API 130 wie folgt implementiert sein. Als erstes kann ein Entwickler einer Softwareanwendung die Navigationsfragmentklasse 320 zu ihrer Anwendung hinzufügen, um die visuelle Ausgabe (z. B. grafische Anwenderschnittstellenkomponente) des Navigationsdienstes anzuzeigen. Der Entwickler kann den Navigationsdienst durch Spezifizieren von einem oder mehreren Parametern in den Navigationsanweisungen 350 steuern. Wenn sie nicht im Navigationsmode ist, kann die Navigationsfragmentklasse 320 konfiguriert sein, um beispielsweise eine Übersichtskarte von oben nach unten anzuzeigen. Ein Aufrufen einer Gruppen-Wegpunktefunktion in den Navigatoranweisungen 350 (z. B. Navigator.set(Wapoint(...)) kann eine navigationsroute in einem Linienzug auf einer Karte mit einer Markierung für jeden Wegpunkt. Der Entwickler kann eine Navigation zum Wegpunkt durch Aufrufen einer Navigationsmodeeintrittsfunktion in den Navigatoranweisungen 350 (z. B. Navigator.enterNavigationMode()) auslösen.In some embodiments, navigation API 130 may be implemented as follows. First, a software application developer can add the navigation fragment class 320 to their application to display the visual output (e.g., graphical user interface component) of the navigation service. The developer can control the navigation service by specifying one or more parameters in the navigation instructions 350. When not in navigation mode, the navigation fragment class 320 may be configured to, for example, display a top-down overview map. A call to a group waypoint function in the navigator instructions 350 (e.g. Navigator.set(Wapoint(...)) can create a navigation route in a line on a map with a marker for each waypoint. The developer can perform a navigation to the waypoint Trigger a call to a navigation mode entry function in the navigator instructions 350 (e.g. Navigator.enterNavigationMode()).
Der Navigationsmode kann andauern, bis der Wegpunkt erreicht ist (z. B. wie es durch einen Ereignislistener bestimmt wird) oder bis eine Navigationsmodeaustrittsfunktion in den Navigatoranweisungen 350 aufgerufen wird (z. B. Navigator.exitNavigationMode()). Bei einigen Implementierungen kann der Navigationsmode ohne einen Wegpunkt in einem freien Navigationsformat verwendet werden. In einem freien Navigationsformat kann die Lokalisierung eines Anwenders (z. B. basierend auf einem Positioniersystem der Anwendervorrichtung) verwendet werden, um die aktuelle Lokalisierung des Anwenders auf einer Karte einem Updaten zu unterziehen. Bei einigen Ausführungsformen kann der Entwickler Markierungen zu der Karte hinzufügen, und zwar unter Verwendung einer Kartenerlangungsfunktion, die in den Navigationsfragmentanweisungen 320 spezifiziert ist (z. B. NavigationFragment.getMap()).The navigation mode may last until the waypoint is reached (e.g., as determined by an event listener) or until a navigation mode exit function in the navigator instructions 350 is called (e.g., Navigator.exitNavigationMode()). In some implementations, the navigation mode can be used without a waypoint in a free navigation format. In a free navigation format, a user's location (e.g. based on a positioning system of the user device) can be used to update the user's current location on a map. In some embodiments, the developer may add markers to the map using a map get function specified in the navigation fragment instructions 320 (e.g., NavigationFragment.getMap()).
Nimmt man Bezug auf
Bei einigen Ausführungsformen können die Initialisierungs- und Fehlerhandhabungsanweisungen 310 wie folgt implementiert sein:
Class NavigationApi { /** * Fragt einen Fall von {@link Navigator} an, der über * {@link NavigatorListener} zurückgebracht ist. Es ist zu beachten, * dass Navigator ein Singleton bzw. eine einelementige Menge ist; wenn * Du dieses Verfahren mehrmals aufrufst, wird jeder Aufruf * denselben Navigator zurückbringen. */ Static void getNavigator (Application application, NavigatorListener listener); // Statuscodes für #initialize(Application) /** * Der API-Schlüssel, den Du bereitgestellt hast, ist nicht autorisiert, die * Navigations-API zu verwenden. Dies kann deshalb so sein, weil die * frühe Zugriffsperiode abgelaufen ist. Deine App sollte zu einem * anderen Navigationsmechanismus zurückfallen, wenn dieser Code * empfangen wird, um sicherzustellen, dass der Mechanismus für * Anwender nicht abbricht, die deine App nicht einem * Updaten unterzogen haben, nachdem die frühe Zugriffsperiode der * Navigations-API abläuft. */ @ErrorCode public static final int ERROR_NOT_AUTHORIZED = 1; /** * Der Anwender hat die Konditionen des Navigationsdatenproviders * nicht akzeptiert. Dem kann durch Bitten des Anwenders, * Navigationskonditionen des Navigationsdatenproviders zu * akzeptieren, abgeholfen werden. * Siehe {@link #createTermsActivitylntent(Context)}. */ @ErrorCode public static final int ERROR_TERMS_NOT_ACCEPTED = 2; /** * Die Navigations-API ist unfähig, auf das Internet zuzugreifen. */ @ErrorCode public static final int NETWORK_ERROR = 3; /** * Zeigt einen Dialog, der den Anwender dirigiert, Bestimmungen und * Konditionen des Navigationsdatenproviders zu akzeptieren. Wenn ein * Listener vorgesehen ist, wird er mit der Antwort des Anwenders * benachrichtigt werden. */ public static void showTermsAndConditionsDialog ( Activity Activity, @Nullable On TermsResponseListener listener); /** * Bringt {@code true} zurück, wenn der Anwender zuvor Bestimmungen * und Konditionen des Navigationsdatenproviders akzeptiert hat. */ public static boolean areTermsAccepted (Application application); /** * Den Bestimmungs- und Konditionenakzeptanzzustand zurücksetzen * - zum Testen. Einen Aufruf dazu hinzufügen, bevor es irgendwelche * Aufrufe zu {@link NavigationApi} gibt, wenn Du den Bestimmungs- * und Konditionendialog testen möchtest. */ public static void resetTermsAccepted (Application application); /** * Einen Navigatorlistener mit {@link #getNavigator(Application, * NavigatorListener)} registrieren, um über den Zustand von {@link * Navigator) benachrichtigt zu werden. Es ist zu beachten, dass nur * eines der Navigatorlistener-Verfahren aufgerufen werden wird und * alle Aufrufe auf dem Ul-Thread auftreten. */ public interface NavigatorListener { /** * Zeigt an, das ein {@link Navigator} erfolgreich erzeugt wurde, und * bringt ihn zum Aufrufenden zurück. */ void onNavigatorReady( Navigator navigator); /** * Zeigt an, dass ein Fehler beim Initialisieren von {@link Navigator) * auftrat. {@code errorcode) ist eine der @ErrorCode-Konstanten. */ void onError(@ErrorCode int errorCode); } /** * Einen eingeschalteten Bestimmungsantwortlistener {@link #showTermsAndConditionsDialog} registrieren, * um benachrichtigt zu werden, wenn der Anwender die Bestimmungen * und Konditionen akzeptiert. Die Benachrichtigung wird auf dem Ul- * Thread auftreten. */ public interface OnTermsResponseListener { /** * Zeigt an, ob die Bestimmungen und Konditionen durch den Anwender * akzeptiert wurden. */ void on TermsResponse( boolean accepted) } }In some embodiments, the initialization and error handling instructions 310 may be implemented as follows:
Class NavigationApi { /** * Requests a case from {@link Navigator} that has over * {@link NavigatorListener} is returned. It should be noted * that Navigator is a singleton or a one-element set; if * If you call this procedure multiple times, each call * bring back the same navigator. */ Static void getNavigator(Application application, NavigatorListener listener); // Status codes for #initialize(Application) /** * The API key you provided is not authorized * Navigation API to use. This may be because the * early access period has expired. Your app should become one * Fallback other navigation mechanism when using this code * is received to ensure that the mechanism for * Users who don't have your app don't cancel * Updated after the early access period * Navigation API expires. */ @ErrorCode public static final int ERROR_NOT_AUTHORIZED = 1; /** * The user has the conditions of the navigation data provider * not accepted. This can be done by asking the user to * Navigation conditions of the navigation data provider * accept, be remedied. * See {@link #createTermsActivitylntent(Context)}. */ @ErrorCode public static final int ERROR_TERMS_NOT_ACCEPTED = 2; /** * The navigation API is unable to access the Internet. */ @ErrorCode public static final int NETWORK_ERROR = 3; /** * Shows a dialog that directs the user, provisions and * Accept the terms and conditions of the navigation data provider. When a * Listener is provided, it will respond with the user's response * be notified. */ public static void showTermsAndConditionsDialog ( Activity Activity, @Nullable On TermsResponseListener listener); /** * Returns {@code true} if the user previously specified * and accepted the terms and conditions of the navigation data provider. */ public static boolean areTermsAccepted(Application application); /** * Reset the terms and conditions acceptance state * - to test. Add a call to it before there are any * There are calls to {@link NavigationApi} when you use the destination * and want to test the conditions dialog. */ public static void resetTermsAccepted(Application application); /** * A navigator listener with {@link #getNavigator(Application, * NavigatorListener)} register to report the state of {@link * Navigator) to be notified. It should be noted that only * one of the navigator listener methods will be called and * all calls occur on the UL thread. */ public interface NavigatorListener { /** * Indicates that a {@link Navigator} was successfully created, and * returns it to the caller. */ void onNavigatorReady(Navigator navigator); /** * Indicates that there was an error initializing {@link Navigator) * occurred. {@code errorcode) is one of the @ErrorCode constants. */ void onError(@ErrorCode int errorCode); } /** * An enabled destination response listener {@link #showTermsAndConditionsDialog} register, * to be notified when the user meets the provisions * and conditions accepted. The notification will be displayed on the ul- * Thread occur. */ public interface OnTermsResponseListener { /** * Indicates whether the terms and conditions are accepted by the user * were accepted. */ void on TermsResponse( boolean accepted) } }
Ein beispielhafter Anwendungsfall ist wie folgt:
@Override protected void onCreate(Bundle savedInstanceState) { super .onCreate(savedlnstanceState); this .findViewByld(R.id.start_button ).setOnClickListener( new View.OnClickListener() { @Override public void onClick(View v) { startNavigation(); } }); } private void startNavigation() { // nach einem Navigator fragen NavigationApi. getNavigator (getApplication(), new NavigationApi.NavigatorListener() { @Override public void onNavigatorReady(Navigator Navigator) { // Wir erhielten einen Navigator, stellen einen Zielort ein, starten Na vigation // UI zum Bildschirm hinzufügen navigator.setDestination(Waypoint. fromPlaceId ( getPlaceId(), „Pickup location" )); navigator.startNavigation(); getFragmentManager() .beginTransaction() .add(R.id.body_container, new NavigationFragment()) .commit(); } @Override public void onError( @NavigationApi.ErrorCode int errorcode) { switch (errorCOde) { // Der Anwender hat die Bestimmungen noch nicht akzeptiert; veranlassen von Ihnen, dies zu tun. case NavigationApi. INIT_STATUS_TERMS_NOT_ACCEPTED : Dialog dlg = NavigationApi.createTermsAcceptanceDialog(SimpleActivity.this ); dlg.show(); // TRD zurückrufen } } }); }An example use case is as follows:
@Override protected void onCreate(Bundle savedInstanceState) { super .onCreate(savedlnstanceState); this .findViewByld(R.id.start_button).setOnClickListener( new View.OnClickListener() { @Override public void onClick(View v) { startNavigation(); } }); } private void startNavigation() { // ask for a navigator NavigationApi. getNavigator(getApplication(), new NavigationApi.NavigatorListener() { @Override public void onNavigatorReady(Navigator Navigator) { // We got a navigator, set a destination, start navigation // Add UI to screen navigator.setDestination(Waypoint.fromPlaceId ( getPlaceId(), "Pickup location"));navigator.startNavigation(); getFragmentManager() .beginTransaction() .add(R.id.body_container, new NavigationFragment()) .commit(); } @Override public void onError( @NavigationApi.ErrorCode int errorcode) { switch (errorCOde) { // The user has not yet accepted the terms; prompt you to do so. case NavigationApi. INIT_STATUS_TERMS_NOT_ACCEPTED : Dialog dlg = NavigationApi.createTermsAcceptanceDialog(SimpleActivity.this ); dlg.show(); //Recall TRD } } }); }
Die Navigationsfragmentanweisungen 320 können einen oder mehrere Parameter spezifizieren, um eine Implementierung der grafischen Anwenderschnittstellenkomponente zu steuern. Entwickler können die Navigationsfragmentanweisungen 320 hinzufügen, um die visuelle Ausgabe einer Navigation (z. B. eine interaktive Karte und Weisungen mit Routenführung) in Verbindung mit der Softwareanwendung anzuzeigen. Bei einigen Ausführungsformen können die Navigationsfragmentanweisungen 320 eher als ein Fragment in einer auf Android basierenden Betriebsplattform implementiert sein als als eine Ansicht, um die Komplexität zu reduzieren. Beispielsweise kann ein Verwenden einer Ansichtsimplementierung erfordern, dass der Entwickler Lebenszyklusverfahren (z. B. onCreate(), onResume(), etc.) manuell zu der Ansicht befördert. Bei einigen Ausführungsformen können die Navigationsfragmentanweisungen 320 als eine Ansicht implementiert sein, ohne vom Schutzumfang der vorliegenden Offenbarung abzuweichen.The navigation fragment instructions 320 may specify one or more parameters to control an implementation of the graphical user interface component. Developers can add the navigation fragment instructions 320 to display the visual output of navigation (e.g., an interactive map and directions with route guidance) in conjunction with the software application. In some embodiments, the navigation fragment instructions 320 may be implemented as a fragment in an Android-based operating platform rather than a view to reduce complexity. For example, using a view implementation may require the developer to manually promote lifecycle procedures (e.g., onCreate(), onResume(), etc.) to the view. In some embodiments, the navigation fragment instructions 320 may be implemented as a view without departing from the scope of the present disclosure.
In einer Android-Betriebsplattform kann ein Fragment ein Teilbereich einer Anwenderschnittstelle einer Anwendung sein, die in eine Aktivität versetzt sein kann. Bei einigen Ausführungsformen können mehrere Fragmente als Teil einer Anwendung implementiert sein, um eine Anwenderschnittstelle mit mehreren Ausschnitten zu bilden. Ein Fragment kann seinen eigenen Lebenszyklus haben und kann seine eigenen Eingangsereignisse empfangen, die hinzugefügt oder entfernt werden können, während die Aktivität gerade in Betrieb ist bzw. läuft. Beispielhafte Aspekte der vorliegenden Offenbarung werden mit einem Implementieren der Navigationsfragmentanweisungen 320 in einer Android-Betriebsplattform zu Zwecken einer Illustration und Diskussion diskutiert. Die Navigationsfragmentanweisungen 320 können auf andere Weisen implementiert werden, um eine ähnliche Funktionalität zur Verfügung zu stellen, ohne vom Schutzumfang der vorliegenden Offenbarung abzuweichen.In an Android operating platform, a fragment may be a portion of an application's user interface that may be placed in an activity. In some embodiments, multiple fragments may be implemented as part of an application to form a multi-pane user interface. A fragment can have its own lifecycle and can receive its own input events, which can be added or removed while the activity is up or running. Exemplary aspects of the present disclosure are discussed with implementing the navigation fragment instructions 320 in an Android operating platform for purposes of illustration and discussion. The navigation fragment instructions 320 may be implemented in other ways to provide similar functionality without departing from the scope of the present disclosure.
Die Navigationsfragmentanweisungen 320 können Parameter enthalten, die zulassen, dass ein Entwickler steuert, welche Aspekte der zum Navigationsdienst gehörenden grafischen Anwenderschnittstellenkomponente gezeigt werden. Beispielsweise kann der Entwickler die grafische Anwenderschnittstelle mit Bauherrenfunktion in den Navigationsfragmentanweisungen 320 bilden (z. B. NavigationFragment.Builder). Bei einigen Ausführungsformen kann der Entwickler wählen, ob ein Navigationanfang, ein Kompasselement, ETD-Information oder andere Information in Verbindung mit dem Navigationsdienst anzuzeigen ist.The navigation fragment instructions 320 may contain parameters that allow a developer to control which aspects of the graphical user interface component associated with the navigation service are shown. For example, the developer can build the graphical user interface with builder functionality in the navigation fragment instructions 320 (e.g., NavigationFragment.Builder). In some embodiments, the developer may choose whether to display a navigation start, a compass item, ETD information, or other information in connection with the navigation service.
Bei einer Ausführungsform kann die grafische Anwenderschnittstellenkomponente wie folgt gebildet sein:
NavigationFragment f = new NavigationFragment. Builder () .setNavigationHeaderEnabled (true) .setEtaCardEnabled (false) .setCompassButtonEnabled (true) . build();In one embodiment, the graphical user interface component may be formed as follows:
NavigationFragment f = new NavigationFragment. builder() .setNavigationHeaderEnabled (true) .setEtaCardEnabled (false) .setCompassButtonEnabled (true) . build();
Als ein weiteres Beispiel kann die grafische Anwenderschnittstellekomponente unter Verwendung von XML wie folgt gebildet sein:
<fragment android:name = „com.navprovider.android.libraries.navigation.NavigationFragment" navigation:navigation_header_enabled = "true" navigation:eta_card_enabled = "false" navigation:compass_button_enabled = "true" />As another example, the graphical user interface component may be formed using XML as follows:
<fragment android:name = "com.navprovider.android.libraries.navigation.NavigationFragment" navigation:navigation_header_enabled = "true" navigation:eta_card_enabled = "false" navigation:compass_button_enabled = "true"/>
Bei einigen Ausführungsformen kann eine Fragmentklassenschnittstelle wie folgt implementiert sein:
class NavigationFragment { static dass Builder { // gibt den Navigationsanfang des Fragments frei oder nicht. Builder setNavigationHeaderEnabled( boolean enabled); //Gibt die ETA-Karte (z.B. ETD-Information) des Fragments frei oder nicht. Builder setEtaCardEnabled( Boolean enabled); //Gibt die Kompasstaste frei oder nicht. Builder setCompassButtonEnabled (boolean enabled); // Bildet das Navigationsfragment. NavigationFragment build(); } // Erlangt einen Bezug zu der Karte des Fragments, die verwendet // werden kann, um Markierungen anzuzeigen und die Kamera zu // modifizieren. Map getMap(); }In some embodiments, a fragment class interface may be implemented as follows:
class NavigationFragment { static that Builder { // releases the navigation start of the fragment or not. Builder setNavigationHeaderEnabled( boolean enabled); //Releases the ETA map (e.g. ETD information) of the fragment or not. Builder setEtaCardEnabled(Boolean enabled); //Enables the compass key or not. Builder setCompassButtonEnabled(boolean enabled); // Forms the navigation fragment. NavigationFragment build(); } // Gets a reference to the map of the fragment that uses // can be used to display markers and the camera // modify. Map getMap(); }
Bei alternativen Ausführungsformen kann die grafische Anwenderschnittstellenkomponente auch eher als eine Ansicht in einer Android-Betriebsplattform als als ein Fragment implementiert sein. Wenn die Navigationsansicht verwendet wird, können verschiedene Lebenszyklusereignisse von der Anwendungsaktivität weitergeleitet werden.In alternative embodiments, the graphical user interface component may also be implemented as a view in an Android operating platform rather than as a fragment. When the navigation view is used, various lifecycle events can be forwarded from the application activity.
Beispielsweise kann bei einer Ausführungsform die Navigationsansicht wie folgt implementiert sein.
NavigationView mNavigationView @Override protected void onStart() { super .onStart(); mNavigationView.onStart(); }For example, in one embodiment, the navigation view may be implemented as follows.
NavigationView mNavigationView @Override protected void onStart() { super .onStart(); mNavigationView.onStart(); }
Es kann nötig sein, dass die folgenden Lebenszyklusverfahren für eine Navigationsansichtsgruppe von Anweisungen weitergeleitet wird: onCreate, onStart, onResume, onPause, onStop, onDestroy, onConfigurationChanged, onSaveInstanceState.It may be necessary to route the following lifecycle procedures for a navigation view group of statements: onCreate, onStart, onResume, onPause, onStop, onDestroy, onConfigurationChanged, onSaveInstanceState.
Bei einigen Ausführungsformen kann die API 130 verschiedene Klassenanweisungen 330 enthalten, wie beispielsweise einen Kartenklasse, eine Wegpunkteklasse, eine Breitengrad/Längengrad-Klasse und eine Kameraklasse. Die Kartenklasse kann dafür sorgen, dass ein Entwickler Wegpunkte zu einer Karte hinzufügt. Die Kartenklasse kann auch verschiedene Funktionen enthalten, um die Darstellungen der Karte in der grafischen Anwenderschnittstellenkomponente zu steuern. Beispielsweise kann die Kartenklasse bei einigen Implementierungen wie folgt implementiert sein:
Class Map { // Bildet einen Markierer mit den spezifizierten Optionen und fügt ihn zur Karte hinzu. Marker addMarker (MarkerOptions options) // Löscht alle Markierer aus der Karte. void clear(); // Schwenkt und zoomt die Karte, um eine Übersicht über die gesamte // Route zu zeigen. Dies wir temporär verhindern, dass die Kamera der // Position eines Anwenders folgt. Die Kamera kann zurückgesetzt // werden, um zu folgen, und zwar unter Verwendung // von {@link #resetCamera()}. void showRouteOverview( boolean animate); // Schwenkt und zoomt die Karte zu der spezifizierten Stelle. Dies wird // temporär verhindern, dass die Kamera der Position eines Anwenders // folgt. Die Kamera kann zurückgesetzt werden, um zu folgen, und zwar // unter Verwendung von {@link #resetCamera()}; void setCamera (LatLng center, float zoom, boolean animate); // Setzt die Kamera zuück zu ihrem Vorgabemode (d.h. beim Navigieren II wird die Kamera der Position eines Anwenders folgen). Void resetCamera (boolean animate); }In some embodiments, the API 130 may include various class instructions 330, such as a map class, a waypoint class, a latitude/longitude class, and a camera class. The map class can allow a developer to add waypoints to a map. The map class may also contain various functions to control the representations of the map in the graphical user interface component. For example, in some implementations the Map class may be implemented as follows:
Class Map { // Creates a marker with the specified options and adds it to the Add card. Marker addMarker (MarkerOptions options) // Deletes all markers from the map. void clear(); // Pans and zooms the map to get an overview of the entire // show route. This will temporarily prevent the camera from being used // Position of a user follows. The camera can be reset // will be used to follow, using // from {@link #resetCamera()}. void showRouteOverview( boolean animate); // Pans and zooms the map to the specified location. this will // Temporarily prevent the camera from a user's position // follows. The camera can be reset to follow, namely // using {@link #resetCamera()}; void setCamera(LatLng center, float zoom, boolean animate); // Resets the camera to its default mode (ie when navigating II, the camera will follow a user's position). void resetCamera(boolean animate); }
Die Wegpunkteklasse kann Wegpunkte aus verschiedenen Daten erzeugen oder spezifizieren, die die Lokalisierung des Wegpunktes anzeigen, wie beispielsweise eine Platzidentifikation, eine Adresse, Breitengrad/LängengradKoordinaten, semantischer Name oder eine andere Platzidentifikation. Bei einigen Implementierungen kann die Wegpunkteklasse wie folgt spezifiziert werden:
class Waypoint { // Erzeugt einen Wegpunkt aus einer Platz-ID. Wirft eine illegale // Argumentenausnahme aus, wenn die Platz-ID ungültig war. Staic Waypoint fromPlaceID (string placelD); // Erzeugt einen Wegpunkt aus Breitengrad/Längengrad und einen // optionalen Titel. Static waypoint from LatLng (double latitude, double longitude, @Nullable String title); }The waypoint class may create or specify waypoints from various data indicating the location of the waypoint, such as a place identification, an address, latitude/longitude coordinates, semantic name, or other place identification. In some implementations, the waypoint class can be specified as follows:
class Waypoint { // Creates a waypoint from a place ID. Throws an illegal one // Argument exception if the place ID was invalid. Staic Waypoint fromPlaceID(string placelD); // Creates a waypoint from latitude/longitude and a // optional title. Static waypoint from LatLng (double latitude, double longitude, @Nullable String title); }
Die Breitengrad/Längengrad-Klasse kann dazu verwendet werden, eine Breitengrad/Längengrad-Variable zu erzeugen, die eine Platzlokalisierung basierend zumindest teilweise auf Daten anzeigt, die Breitengrad und Längengrad anzeigen. Bei einem Beispiel kann die Breitengrad/Längengrad-Klasse wie folgt implementiert sein:
class LatLng { /** Breitengrad in Grad. Dieser Wert ist im Bereich [-90, 90].*/ public final double latitude /** Längengrad in Grad. Dieser Wert ist im Bereich [-180, 180].*/ public final double longitude /** * Bildet einen Breitengrad/Längengrad mit dem gegebenen * Breitengrad und Längengrad, gemessen in Grad. * @param latitude, der Breitengrad der Stelle. Dies wird eingeklemmt * zwischen -90 Grad und +90 Grad, einschließlich. * @param longitude, der Längengrad der Stelle. Dies wird derart * normalisiert, das es zwischen -180 Grad und +180 Grad, * ausschließlich, ist. */ public LatLng (double latitude, double longitude); }The latitude/longitude class can be used to create a latitude/longitude variable that indicates a place location based at least in part on data indicating latitude and longitude. In an example, the latitude/longitude class may be implemented as follows:
class LatLng { /** Latitude in degrees. This value is in the range [-90, 90].*/ public final double latitude /** Longitude in degrees. This value is in the range [-180, 180].*/ public final double longitude /** * Forms a latitude/longitude with the given * Latitude and longitude measured in degrees. * @param latitude, the latitude of the location. This will be trapped * between -90 degrees and +90 degrees, inclusive. * @param longitude, the longitude of the location. This will be like this * normalized to be between -180 degrees and +180 degrees, * exclusively, is. */ public LatLng(double latitude, double longitude); }
Eine weitere beispielhafte Klasse, die implementiert werden kann, kann eine Kameraklasse sein, die dazu verwendet werden kann, die Position und die Perspektive der Karte einzustellen, die als Teil der Navigation gezeigt wird. Eine Bezugnahme auf die aktuelle Kamera kann unter Verwendung einer Schnittstelle für Erlangen einer Kamera erhalten werden, die als Teil des Navigationsfragments spezifiziert ist. Bei einem Beispiel kann die Kameraklasse wie folgt implementiert sein:
class Camera { /** * Einstellen der Kamera, um der Lokalisierung des Anwenders zu * folgen. Dies wird typischerweise aufgrufen, wenn eine Führung mit * Routenführung begonnen wird, um in eine "geneigte" Fahrtansicht * einzutreten. * * @param perspective, eine Auswahl von {@link Perspective}, was * spezifiziert, welche Perspektive die Kamera verwenden sollte, wenn * sie folgt. */ void followMyLocation (@ Perspective int perspective); /** * Schwenkt und zoomt die Karte, um eine Übersicht der restlichen * Route zu zeigen. Dies wird temporär verhindern, dass die Kamera * der Position eines Anwenders folgt. * <p> * Die Kamera kann zurückgesetzt werden, um dem Anwender zu * folgen, und zwar unter Verwendung von {@link #folowMyLocation}. */ void showRouteOverview(); @ lntDef({Perspective.TILTED, Perspective.TOP_DOWN_HEADING-UP, Perspective.TOP_DOWN_NORTH-UP}) @ interface Perspective { /** * Eine geneigte Perspektive, die in dieselbe Richtung wie der * Anwender gerichtet ist. Allgemein verwendet während einer * Fahrtnavigation. */ int TILTED = 0; /** * Eine Perspektive von oben nach unten von dem Ziel der Kamera, * die in dieselbe Richtung wie der Anwender gerichtet ist. Dies ist * äquivalent zu einem Abgreifen der Kompasstaste während einer * Navigation. */ int TOP_DOWN-HEADING_UP = 1; /** * Eine auf Norden ausgerichtete Perspektive von oben nach * unten von dem Ziel der Kamera. Dies wird allgemein verwendet, * wenn eine Übersicht über eine Auswahl von Markierungen * gezeigt wird. */ int TOP_DOWN_NORTH _UP = 2; }Another example class that may be implemented may be a camera class, which may be used to set the position and perspective of the map shown as part of the navigation. A reference to the current camera can be obtained using a camera acquisition interface specified as part of the navigation fragment. In an example, the camera class can be implemented as follows:
class Camera { /** * Adjust the camera to locate the user * consequences. This is typically invoked when having a tour * Route guidance is started in an "inclined" driving view * to enter. * * @param perspective, a selection of {@link Perspective}, what * specifies which perspective the camera should use when * she follows. */ void followMyLocation (@Perspective int perspective); /** * Pans and zooms the map to get an overview of the rest * Route to show. This will temporarily prevent the camera * follows the position of a user. * <p> * The camera can be reset to the user * follow using {@link #folowMyLocation}. */ void showRouteOverview(); @lntDef({Perspective.TILTED, Perspective.TOP_DOWN_HEADING-UP, Perspective.TOP_DOWN_NORTH-UP}) @interface Perspective { /** * A tilted perspective pointing in the same direction as the * User directed. Commonly used during a * Trip navigation. */ int TILTED = 0; /** * A top-down perspective of the camera's target, * facing the same direction as the user. This is * equivalent to tapping the compass key during a * Navigation. */ int TOP_DOWN-HEADING_UP = 1; /** * A north-facing, top-down perspective * below from the camera's target. This is commonly used * if an overview of a selection of markers * will be shown. */ int TOP_DOWN_NORTH _UP = 2; }
Die Navigatoranweisungen 350 können einen oder mehrere Parameter spezifizieren, um die Implementierung des Navigationsdienstes durch die Softwareanwendung zu steuern. Bei einigen Ausführungsformen können die Navigatoranweisungen 350 als ein Singleton bzw. eine einelementige Menge in einer Android-Betriebsplattform implementiert sein. Dies kann zulassen, dass der Entwickler die Navigatoranweisungen 350 implementiert, ohne dass eine Verwendung der Navigationsfragmentanweisungen 320 erforderlich ist. Als Ergebnis kann der Navigationsdienst Navigationsinformation (z. B. unter Verwendung von Audiobenachrichtigungen) ohne grafische Anwenderschnittstellenkomponente zur Verfügung stellen. Dies kann nützlich sein, wenn ein Anwender während eines Navigierens eine vollständige Bildschirmaufgabe über die Anwendung beendet, die die API 130 aufruft. Darüberhinaus kann es sein, dass es nicht nötig ist, mehr als eine Gruppe von Navigatoranweisungen zu einer gegebenen Zeit zu implementieren.The navigator instructions 350 may specify one or more parameters to control the software application's implementation of the navigation service. In some embodiments, the navigator instructions 350 may be implemented as a singleton in an Android operating platform. This may allow the developer to implement the navigator instructions 350 without requiring use of the navigation fragment instructions 320. As a result, the navigation service can provide navigation information (e.g., using audio notifications) without a graphical user interface component. This can be useful when a user completes a full screen task via the application that calls the API 130 while navigating. Furthermore, it may not be necessary to implement more than one set of navigator instructions at a time.
Die Navigatoranweisungen 350 können beispielsweise bestimmen, ob eine Route zu einer oder mehreren Zielort-Wegpunkten erfolgreich berechnet und empfangen worden ist, und kann konfiguriert sein, um Information zu liefern, die anzeigt, ob eine Route empfangen wurde oder ob es verschiedene Fehler (z. B. Netzwerkfehler) gab. Die Navigatoranweisungen 350 können weiterhin dazu verwendet werden, eine Fahrsimulation zu ermöglichen, die ein Fahren entlang einer berechneten Route simulieren kann. Die Navigatoranweisungen 350 können auch Parameter spezifizieren, die zu einer Audioführung gehören, um Audiohinweise oder Vibrationshinweise während einer Navigation zu liefern.For example, the navigator instructions 350 may determine whether a route to one or more destination waypoints has been successfully calculated and received, and may be configured to provide information indicating whether a route has been received or whether there are various errors (e.g. B. network error). The navigator instructions 350 can still be used to create a driving skill mulation, which can simulate driving along a calculated route. The navigator instructions 350 may also specify parameters associated with audio guidance to provide audio or vibration cues during navigation.
Bei einer beispielhaften Ausführungsform können die Navigatoranweisungen 350 wie folgt implementiert sein:
class Navigator { /** * Ein Routenstatus ist ein Statuscode, der das Ergebnis einer * Routenberechnung darstellt, auf das über die durch * {@link #setDestination(Waypoint)} zurückgebrachte Zukunft * zurückgebracht wird. */ public enum RouteStatus { // Eine Route zum Zielort wurde erfolgreich berechnet. OK, // Eine Route zum Zielort konnte nicht berechnet werden. NO_ROUTE_FOUND, // Eine Route zum Zielort konnte aufgrund eines Netzwerkfehlers // nicht berechnet werden. NETWORK_ERROR // Eine Route zum Zielort konnte aufgrund unzureichender // Sollvorgaben nicht berechnet werden. QUOTA_CHECK_FAILED } // Stellt den Zielort ein, was irgendeinen (irgendwelche) zuvor // eingestellten Zielort (eingestellte Zielorte) ersetzt. // Die Zukunft wird ein {@link RouteStatus} zurückbringen, was das // Ergebnis darstellt. ListenableFuture < RouteStatus > setDestination (Waypoint waypoint); // Stellt die Liste von kommenden Navigationswegpunkten ein, was // irgendeine zuvor eingestellte Liste von Wegpunkten ersetzt. // Die zurückgebrachte Zukunft wird auf richtig eingestellt, wenn eine // Route gefunden wurde, die alle erwünschten Wegpunkte verbindet, // und sonst auf falsch. ListenableFuture<boolean> setWaypoints(List<Waypoint> waypoint); // Tritt in Navigationsmode ein. Wenn ein Wegpunkt eingestellt ist, // beginnt eine Navigation. void startNavigation(); // Tritt aus dem Navigationmode aus und geht zurück zur // Übersichtskarte. void StopNavigation(); // Gibt eine Fahrsimulation frei oder sperrt sie. Nützlich zum Debuggen. // Wenn sie freigegeben ist, werden Indizien automatisch starten, sich // entlang der spezifizierten Route in Richtung zum nächsten // Wegpunkt zu bewegen. // if (BuildConfig.DEBUG) { Navigator.setSimulationEnabled(true); } void setSimulationEnabled (Boolean enabled); // Audioführung ist eine Gruppe von Flags, die verwendet werden, um // zu spezifizieren, welche Arten von Audioführung während einer // Navigation verwendet werden. public @interface AudioGuidance { /** * Spezifiziert, dass Sprachführung und Vibrationen gesperrt werden * sollten. Dieses Flag sollte immer durch sich selbst spezifiziert * werden; es ist ein Fehler, dieses mit irgenwelchen anderen * {@link AudioGuidance}-Flags zu kombinieren. */ int Silent = 0 /** * Spezifiziert, dass Vibrationen freigegeben werden sollten. */ int VIBRATION = 1; /** * Spezifiziert, dass eine Stimme freigegeben werden sollte. Es ist * zu beachten, dass dieser Wert allein nicht zulassen wird, dass * eine Sprachführung über Bluetooth abgespielt wird; um dies * freizugeben, sollte stattdessen * {@link AudioGuidance, VOICE_WITH_BLUETOOTH} verwendet * werden. */ int VOICE = 2; /** * Spezifiziert, dass eine Sprachführung freigegeben werden sollte * und, wenn verfügbar, über Bluetooth übertragen werden sollte. * Dieses Flag gibt eine Supergruppe der Funktionalität von * {@link AudioGuidance.VOICE} frei. */ int VOICE_WITH_BLUETOOTH = 4 /** * Stellt ein, welche Typen von Audioführung (einschließlich * Vibrationen) freigegeben werden. Durch Vorgabe werden * Vibration, Stimme und Stimme über Bluetooth (wenn * verfügbar) freigegeben. * @param guidance, eine Kombination von {@link * AudioGuidance}-Flags, die spezifizieren, welche Typen von * Audioführung freigegeben werden sollten. */ void setAudioGuidance (@Audioguidance int guidance); ... }In an exemplary embodiment, the navigator instructions 350 may be implemented as follows:
class Navigator { /** * A route status is a status code that is the result of a * Route calculation represents what is going on through * {@link #setDestination(Waypoint)} returned future * is returned. */ public enum RouteStatus { // A route to the destination has been successfully calculated. OK, // A route to the destination could not be calculated. NO_ROUTE_FOUND, // A route to the destination could not be completed due to a network error // cannot be calculated. NETWORK_ERROR // A route to the destination could not be made due to insufficient // Target specifications are not calculated. QUOTA_CHECK_FAILED } //Sets the destination location, which is any(any) before // set destination (set destinations) replaced. // The future will bring back a {@link RouteStatus}, which is the // represents result. ListenableFuture < RouteStatus > setDestination(Waypoint waypoint); //Sets the list of upcoming navigation waypoints, what // replaces any previously set list of waypoints. // The returned future is set to correct when a // route has been found that connects all desired waypoints, // and otherwise to false. ListenableFuture<boolean>setWaypoints(List<Waypoint>waypoint); // Enters navigation mode. When a waypoint is set, // starts a navigation. void startNavigation(); // Exit navigation mode and go back to // Overview map. void StopNavigation(); // Enables or disables a driving simulation. Useful for debugging. // When released, clues will automatically start looking // along the specified route towards the next // move waypoint. // if (BuildConfig.DEBUG) { Navigator.setSimulationEnabled(true); } void setSimulationEnabled(Boolean enabled); //Audio guidance is a group of flags used to // to specify which types of audio guidance are available during a // Navigation can be used. public @interface AudioGuidance { /** * Specifies that voice guidance and vibrations will be blocked * should. This flag should always be specified by itself * become; it is a mistake, this with any other * Combine {@link AudioGuidance} flags. */ int Silent = 0 /** * Specifies that vibration should be enabled. */ int VIBRATION = 1; /** * Specifies that a vote should be released. It is *note that this value alone will not allow that * a voice guide is played via Bluetooth; about this * should release instead * {@link AudioGuidance, VOICE_WITH_BLUETOOTH} used * become. */ int VOICE = 2; /** * Specifies that voice guidance should be enabled * and, if available, should be transmitted via Bluetooth. * This flag specifies a supergroup of functionality * {@link AudioGuidance.VOICE} free. */ int VOICE_WITH_BLUETOOTH = 4 /** * Sets which types of audio guidance (including * Vibrations) are released. Become by default * Vibration, voice and voice via Bluetooth (if * available) released. * @param guidance, a combination of {@link * AudioGuidance} flags that specify which types of * Audio guide should be released. */ void setAudioGuidance (@Audioguidance int guidance); ... }
Gemäß beispielhaften Aspekten der vorliegenden Offenbarung können die Navigatoranweisungen 350 eine oder mehrere Ereignislistenerschnittstellen 360 implementieren. Die Ereignislistenerschnittstellen 360 können mit den Navigatoranweisungen 350 registriert sein. Die Ereignislistenerschnittstellen 360 können für alle Rückrufe verwendet werden, um Daten zu erhalten, die zu einem oder mehreren Navigationsereignissen gehören, um die Navigationsinformation einem Updaten zu unterziehen, die als Teil des Navigationsdienstes geliefert wird. Ein Navigationsereignis kann irgendein Ereignis sein, das die Navigationsinformation beeinflussen kann, die dem Anwender präsentiert wird. Beispielsweise kann das Navigationsereignis eine Änderung bezüglich einer Anwenderposition sein, eine Änderung bezüglich Verkehrsbedingungen, eine Änderung bezüglich einem oder mehreren Wegpunkten, eine Änderung bezüglich Routeninformation, eine Änderung bezüglich ETD-Information, etc. Auf diese Weise können die Ereignislistener verwendet werden, um die Navigationsinformation einem Updaten zu unterziehen, die als Teil des Navigationsdienstes präsentiert wird, wenn ein Anwender entlang einer Route reist oder navigiert. Bei einem Beispiel können die Ereignislistenerschnittstellen 360 mit den Navigatoranweisungen 350 wie folgt registriert sein:
class Navigator { ... // Rückrufe. Auf Null setzen, um sie zu entfernen. void setLocation.Listener(@Nullable LocationListener listener); void setArrivalListener (@Nullable ArrivalListener listener); void setRouteChangedListener (@Nullable RouteChangedListener listener); /** * Registriert einen Listener dafür, wenn die übrige Zeit oder * Entfernung zum Zielort sich um mehr als eine spezifizierte Schwelle * ändert. Ist irgendwelchen zuvor registrierten Listenern * übergeordnet. * <p> * Der Listener könnte als ein Ergebnis von (beispielsweise) einer * Anwenderbewegung, einer Änderung bezüglich * Verkehrsbedingungen, einer Änderung bezüglich einer Route, einer * Änderung bezüglich eines Zielorts oder dann, wenn die übrige Zeit * und Entfernung zum erstem Mal bekannt werden, aufgerufen * werden. * * @param timeChangeThresholdSeconds, Wenn die absolute * Änderung bezüglich der übrigen Zeit in Sekunden größer als dieser * Wert oder gleich diesem ist, dann wird der Listener aufgerufen. Diese * Schwelle muss nicht negativ sein. * @param distanceChangeThresholdMeters, Wenn die absolute * Änderung bezüglich der übrigen Entfernung in Metern größer als * dieser Wert oder gleich diesem ist, dann wird der Listener * aufgerufen. Diese Schwelle muss nicht negativ sein. * @param listener, der Listener zum Register. Muss nicht * {@code null) sein */ void setRemainingTimeOrDistanceChangedListener( int timeChangeThresholdSeconds int distanceChangeThresholdMeters RemainingTimeOrDistanceChangedListener listener); /** * Löscht den Listener für Änderungen bezüglich übriger Zeit oder * Entfernung. */ void clearRemainingTimeOrDistanceChangedListener(); }According to exemplary aspects of the present disclosure, the navigator instructions 350 may implement one or more event listener interfaces 360. The event listener interfaces 360 may be registered with the navigator instructions 350. The event listener interfaces 360 may be used for all callbacks to obtain data associated with one or more navigation events to update the navigation information provided as part of the navigation service. A navigation event can be any event that can affect the navigation information presented to the user. For example, the navigation event may be a change in user position, a change in traffic conditions, a change in one or more waypoints, a change in route information, a change in ETD information, etc. In this way, the event listeners can be used to read the navigation information to be updated, which is presented as part of the navigation service when a user travels or navigates along a route. In an example, the event listener interfaces 360 may be registered with the navigator instructions 350 as follows:
class Navigator { ... // callbacks. Set to zero to remove them. void setLocation.Listener(@Nullable LocationListener listener); void setArrivalListener (@Nullable ArrivalListener listener); void setRouteChangedListener (@Nullable RouteChangedListener listener); /** * Registers a listener for when the remaining time or * Distance to destination is greater than a specified threshold * changes. Is any previously registered listeners * parent. * <p> * The listener could appear as a result of (for example) a * User movement, a change regarding * Traffic conditions, a change to a route, a * Change regarding a destination or if the remaining time * and distance become known for the first time * become. * * @param timeChangeThresholdSeconds If the absolute * Change in remaining time in seconds greater than this * value or equal to this, then the listener is called. This * Threshold does not have to be negative. * @param distanceChangeThresholdMeters If the absolute * Change in remaining distance in meters greater than * is this value or equal to this then the listener * called. This threshold does not have to be negative. * @param listener, the listener to the register. Does not have to * {@code null). */ void setRemainingTimeOrDistanceChangedListener( int timeChangeThresholdSeconds int distanceChangeThresholdMeters RemainingTimeOrDistanceChangedListener listener); /** * Clears the listener for changes related to remaining time or * Distance. */ void clearRemainingTimeOrDistanceChangedListener(); }
Die Lokalisierungslistenerschnittstelle 362 kann konfiguriert sein, um (z. B. durch die Navigatorschnittstelle) aufgerufen zu werden, um eine aktuelle Lokalisierung eines Anwenders im Navigationsdienst einem Updaten zu unterziehen. Auf diese Weise kann der Navigationsdienst die aktuelle Lokalisierung des Anwenders entlang einer Navigationsroute anzeigen, wenn die aktuelle Lokalisierung des Anwenders einem Updaten unterzogen ist. Eine beispielhafte Lokalisierungslistenerschnittstelle 362 kann wie folgt implementiert sein:
interface Navigator.LocationListener { // Aufgerufen, wenn die Lokalisierung/der Kurs eines Fahrers, // aufgenommen auf der Straße, einem Updaten unterzogen wird. Dies // wird zu der am schnellsten verfügbaren Rate von der // Navigations-Engine zur Verfügung gestellt. void onLocationUpdated(android.location. Location location); }The location listener interface 362 may be configured to be invoked (e.g., through the navigator interface) to update a current location of a user in the navigation service. In this way, the navigation service can display the user's current location along a navigation route if the user's current location is one is subject to updates. An example localization listener interface 362 may be implemented as follows:
interface Navigator.LocationListener { // Called when the location/course of a driver, // taken on the street, is subject to an update. This // becomes the fastest available rate from the // Navigation engine provided. void onLocationUpdated(android.location. Location location); }
Die Route-geändert-Listenerschnittstelle 364 kann konfiguriert sein, um aufgerufen zu werden, um Routeninformation einem Updaten zu unterziehen, wenn sich die berechnete Route ändert. Beispielsweise kann die Routeninformation einem Updaten unterzogen werden, wenn eine bessere Route berechnet wird oder wenn ein Anwender von einer empfohlenen Route abweicht. Die durch die Route-geändert-Listenerschnittstelle 364 zur Verfügung gestellte Route kann in einem Linienzug zur Anzeige in Verbindung mit einer Karte als Teil des Navigationsdienstes zur Verfügung gestellt werden. Eine beispielhafte Routegeändert-Listenerschnittstelle 364 kann wie folgt implementiert sein:
interface Navigator.RouteChangedListener { // Aufgerufen, wenn sich die Route ändert, z.B. wenn eine bessere // Route berechnet wird oder wenn der Fahrer von der empfohlenen // Route abweicht. // Die gelieferte Route ist der Linienzug für die neue Route. void onRouteChanged (List < LatLng > route); }The route changed listener interface 364 may be configured to be called to update route information when the calculated route changes. For example, the route information may be updated when a better route is calculated or when a user deviates from a recommended route. The route provided by the route-changed listener interface 364 may be provided in a line for display in conjunction with a map as part of the navigation service. An example route changed listener interface 364 may be implemented as follows:
interface Navigator.RouteChangedListener { // Called when the route changes, e.g. when a better one // route is calculated or if the driver from the recommended // Route differs. // The delivered route is the route for the new route. void onRouteChanged(List < LatLng >route); }
Die Ankunftslistenerschnittstelle 366 kann aufgerufen werden, um zu signalisieren, wenn ein Anwender an einem spezifizierten Wegpunkt angekommen ist. Beispielsweise kann die Ankunftslistenerschnittstelle 366 aufgerufen werden, um einen Navigationsmode zu verlassen, wenn ein Anwender bei einem Wegpunkt angekommen ist. Eine beispielhafte Ankunftslistenerschnittstelle 366 kann wie folgt implementiert sein:
interface Navigator.ArrivalListener { // Aufgerufen, wenn der Fahrer bei einem spezifizierten Wegpunkt // angekommen ist. void onArrivedAtWaypoint (Waypoint waypoint); }The arrival listener interface 366 may be invoked to signal when a user has arrived at a specified waypoint. For example, the arrival listener interface 366 may be invoked to exit a navigation mode when a user has arrived at a waypoint. An example arrival listener interface 366 may be implemented as follows:
interface Navigator.ArrivalListener { // Called when the driver is at a specified waypoint // has arrived. void onArrivedAtWaypoint(Waypoint waypoint); }
Die ETD-Listenerschnittstelle 368 (z. B. eine Listenerschnittstelle für übrige Zeit oder übrige Entfernung) kann aufgerufen werden, wenn eine Zeit, die übrig ist, oder eine Entfernung, die übrig ist, zu einem Wegpunkt sich um mehr als eines Schwelle geändert hat. Die Schwelle kann als ein Parameter in den Navigatoranweisungen 350 spezifiziert sein. Die ETD-Information (z. B. Zeit, die übrig ist, oder Entfernung, die übrig ist) kann sich als Ergebnis von Navigationsereignissen, wie beispielsweise eine Anwenderbewegung (z. B. eine Änderung bezüglich einer Anwenderposition), eine Änderung bezüglich Verkehrsbedingungen, eine Änderung bezüglich einer Route, eine Änderung bezüglich einem oder mehreren Wegpunkten, oder wenn die übrige Zeit oder die übrige Entfernung zum ersten Mal bekannt werden, ändern. Die einem Updaten unterzogene ETD-Information kann dem Anwender als Teil des Navigationsdienstes, zum Beispiel als Teil einer grafischen Anwenderschnittstellenkomponente oder durch eine Audioführung oder eine andere Benachrichtigung, präsentiert werden. Eine beispielhafte ETD-Listenerschnittstelle 368 kann wie folgt implementiert sein:
interface Navigator.RemainingTimeAndDistanceChangedListener { /** * Aufgerufen auf einem Ul-Thread, wenn die Zeit oder Entfernung * zum Zielort sich um mehr als die Schwellen geändert hat, die in * {@link Navigator #setRemainingTimeAndDistanceChanged(int,int, * RemainingTimeAndDistanceChangedListener)} spezifiziert sind. * Dies könnte das Ergebnis von (beispielsweise) einer * Anwenderbewegung, einer Änderung bezüglich * Verkehrsbedingungen, einer Änderung bezüglich einer Route, einer * Änderung bezüglich eines Zielorts, oder wenn die übrige Zeit oder * die übrige Entfernung zum ersten Mal bekannt werden, sein. */ void onRemainingTimeAndDistanceUpdated( Waypoint waypoint, int remainingTimeSeconds, int distanceMeters); }The ETD listener interface 368 (e.g., a remaining time or remaining distance listener interface) may be invoked when a remaining time or a remaining distance to a waypoint has changed by more than a threshold . The threshold may be specified as a parameter in the navigator instructions 350. The ETD information (e.g., time remaining or distance remaining) may change as a result of navigation events such as user movement (e.g., a change in user position), a change in traffic conditions, a change to a route, a change to one or more waypoints, or when the remaining time or distance becomes known for the first time. The updated ETD information may be presented to the user as part of the navigation service, for example as part of a graphical user interface component or through audio guidance or other notification. An example ETD listener interface 368 may be implemented as follows:
interface Navigator.RemainingTimeAndDistanceChangedListener { /** * Called on an UL thread when time or distance * to the destination has changed by more than the thresholds specified in * {@link Navigator #setRemainingTimeAndDistanceChanged(int,int, * RemainingTimeAndDistanceChangedListener)} are specified. * This could be the result of (for example) a * User movement, a change regarding * Traffic conditions, a change to a route, a * Change in a destination, or if the remaining time or * the remaining distance will be known for the first time. */ void onRemainingTimeAndDistanceUpdated( Waypoint waypoint, int remainingTimeSeconds, int distanceMeters); }
In
< service android:name = "com. navprovider. android .libraries. navigation. NavigationService"/>In
< service android:name = "com. navprovider. android .libraries. navigation. NavigationService"/>
Bei (402) kann das Verfahren ein Zugreifen auf und Eingliedern von Daten (z. B. Dateien), die zu der Navigations-API 130 gehören, in die Softwareanwendung enthalten. Beispielsweise kann ein Anwender zur Navigations-API 130 gehörende Dateien beispielsweise über ein Netzwerk (z. B. das Internet) herunterladen und er kann die Navigations-API-Dateien in einem Unterverzeichnis unter einem zu der Softwareanwendung gehörenden Gradle-Root-Verzeichnis zur Verfügung stellen. Zu der Navigations-API 130 gehörende Bibliotheken und Abhängigkeiten einer dritten Partei können zur Softwareanwendung hinzugefügt werden.At (402), the method may include accessing and incorporating data (e.g., files) associated with the navigation API 130 into the software application. For example, a user may download files associated with the navigation API 130 over a network (e.g., the Internet), for example, and may make the navigation API files available in a subdirectory under a Gradle root directory associated with the software application . Third party libraries and dependencies associated with the navigation API 130 may be added to the software application.
Bei (404) kann ein Zugriffsschlüssel zum Freigeben der Navigations-API 130 erhalten werden. Bei einigen Ausführungsformen kann der Zugriffsschlüssel vom Navigationsdatenprovider erhalten werden. Der Zugriffsschlüssel kann zur Softwareanwendung hinzugefügt werden, beispielsweise zu zu der Softwareanwendung gehörendem androidmanifest.xml.At (404), an access key to enable navigation API 130 may be obtained. In some embodiments, the access key may be obtained from the navigation data provider. The access key can be added to the software application, for example androidmanifest.xml associated with the software application.
Bei (406) kann der Entwickler die zum Navigationsdienst gehörende grafische Anwenderschnittstellenkomponente durch Spezifizieren von Parametern in der Navigationsfragmentgruppe von Anweisungen 320 bilden (oder, bei einigen Ausführungsformen, einer Navigationsansichtsgruppe von Anweisungen). Dies kann eine interaktive Karte und eine grafische Anwenderschnittstellenkomponente einer Navigation mit Routenführung zur Softwarenwendung hinzufügen.At (406), the developer may form the graphical user interface component associated with the navigation service by specifying parameters in the navigation fragment group of instructions 320 (or, in some embodiments, a navigation view group of instructions). This may add an interactive map and a graphical user interface component of navigation with route guidance to the software application.
Bei (408) kann der Entwickler Initialisierungs- und Fehlerhandhabungs-Anweisungen verwenden, um die Navigations-API 130 zu initialisieren. Wenn die Navigations-API einmal initialisiert ist, können die Navigatoranweisungen 350 verwendet werden, um den Navigationsdienst zu steuern und zu konfigurieren, wie es bei (410) gezeigt ist. Beispielsweise können verschieden Funktionen spezifiziert werden, um zu bestimmen, wann ein Navigationsmode zu starten ist und wann er zu verlassen ist. Gemäß bestimmten Ausführungsformen der vorliegenden Offenbarung kann oder können ein oder mehrere Ereignislistenerschnittstellen 360 in den Navigatoranweisungen 350 enthalten sein, um Navigationsereignisse, wie beispielsweise Ankunft, Routenänderungen, Anwenderpositionsänderungen, ETD-Informationsänderungen, etc., einzufangen. Bei (412) kann das Verfahren eine Bilden und Testen der Softwareanwendung mit dem integrierten Navigationsdienst enthalten.At (408), the developer can use initialization and error handling statements to initialize the navigation API 130. Once the navigation API is initialized, the navigator instructions 350 can be used to control and configure the navigation service, as shown at (410). For example, various functions can be specified to determine when to start and when to exit a navigation mode. According to certain embodiments of the present disclosure, one or more event listener interfaces 360 in the navigator instructions 350 to capture navigation events such as arrivals, route changes, user position changes, ETD information changes, etc. At (412), the method may include building and testing the software application with the integrated navigation service.
Bei einigen Ausführungsformen kann die Navigations-API 130 konfiguriert sein, um eine Mehrfachwegpunkte-Führung unter einer Vielzahl von unterschiedlichen Wegpunkten unterzubringen. Beispielsweise zeigt
Die Navigatoranweisungen 350 können eine oder mehrere Mehrfachwegpunkte-Funktionen 510 und eine oder mehrere Mehrfachwegpunkte-Ereignislistenerschnittstellen 520 enthalten, um eine Mehrfachwegpunkte-Führung durch den Navigationsdienst unterzubringen. Die Mehrfachwegpunkte-Ereignislistenerschnittstellen 520 können für Rückrufe verwendet werden, um Daten zu erhalten, die zu einem oder mehreren Navigationsereignissen gehören, um die als Teil des Navigationsdienstes zur Verfügung gestellte Navigationsinformation einem Updaten zu unterziehen. Beispielsweise kann das Navigationsereignis eine Änderung bezüglich einer Anwenderposition, eine Änderung bezüglich Verkehrsbedingungen, eine Änderung bezüglich einer oder mehrerer der Vielzahl von Wegpunkten, eine Änderung bezüglich einer Routeninformation von einem oder mehreren Routensegmenten in einer Mehrfachwegpunkte-Route, eine Änderung bezüglich einer ETD-Information zu einem nächsten Zielort in einer Mehrfachwegpunkte-Route, etc. sein.The navigator instructions 350 may include one or more multiple waypoint functions 510 and one or more multiple waypoint event listener interfaces 520 to accommodate multiple waypoint guidance by the navigation service. The multiple waypoint event listener interfaces 520 may be used for callbacks to obtain data associated with one or more navigation events to update the navigation information provided as part of the navigation service. For example, the navigation event may include a change in a user position, a change in traffic conditions, a change in one or more of the plurality of waypoints, a change in route information of one or more route segments in a multiple waypoint route, a change in ETD information a next destination in a multiple waypoint route, etc.
Die Mehrfachwegpunkte-Funktionen 510 können verwendet werden, um verschiedene Funktionen zu implementieren, die zu einer Mehrfachwegpunkte-Führung gehören. Beispielsweise können die Mehrfachwegpunkte-Funktionen verwendet werden, um einen oder mehrere Wegpunkte einzustellen, um zu veranlassen, dass eine Mehrfachwegpunkte-Route auf Lokalisierungsinformation zugreift, die zu jeder der Vielzahl von Wegpunkten entlang der Mehrfachwegpunkte-Route gehört, auf Routensegmente zwischen Wegpunkten entlang der Mehrfachwegpunkte-Route zugreift, und darauf zugreift, wo ein Anwender entlang einer Mehrfachwegpunkte-Route während einer bestimmten Navigationssession gewesen ist.The multiple waypoint functions 510 can be used to implement various functions associated with multiple waypoint guidance. For example, the multiple waypoint functions may be used to set one or more waypoints to cause a multiple waypoint route to access location information associated with each of the plurality of waypoints along the multiple waypoint route, route segments between waypoints along the multiple waypoints route, and accesses where a user has been along a multiple waypoint route during a particular navigation session.
ListenbleResultFuture<RouteStatus> setDestinations(List<Waypoint>destination)
ListenbleResultFuture<RouteStatus>setDestinations(List<Waypoint>destination)
Eine eingestellte Einzelwegpunkt-Funktion kann als ein Nützlichkeitsverfahren verwendet werden, um einen einzelnen Wegpunkt für eine Navigationsroute einzustellen. Bei einer Ausführungsform kann die eingestellte Einzelwegpunkt-Funktion in den Navigatoranweisungen 350 wie folgt implementiert sein: ListenbleResultFuture<RouteStatus> setDestination(Waypoint destination)A set single waypoint function can be used as a utility method to set a single waypoint for a navigation route. In one embodiment, the set single waypoint function may be implemented in the navigator instructions 350 as follows: ListenbleResultFuture<RouteStatus> setDestination(Waypoint destination)
Eine Fortsetzung-zum-Nächsten-Wegpunkte-Funktion wird verwendet um einen nächsten Wegpunkt in einem Mehrfachwegpunkte-Navigationsabschnitt zu initiieren. Bei einigen Ausführungsformen kann es erforderlich sein, dass diese Funktion explizit aufgerufen wird. Bei diesen Ausführungsformen kann sich die API nicht automatisch weiter zum nächsten Wegpunkt bewegen. Die Fortsetzung-zum-Nächsten-Zielort-Funktion kann eine Ausnahme zurückbringen, wenn es keine Wegpunkte gibt, die in der Mehrfachwegpunkte-Route übrigbleiben. Bei einigen Ausführungsformen kann die Fortsetzung-zum-Nächsten-Zielort-Funktion in den Navigatoranweisungen 350 wie folgt implementiert sein:
void continueToNextDestination() throws NoNextDestinationException to Waypoint continueToNextDestination()A continue to next waypoint function is used to initiate a next waypoint in a multiple waypoint navigation leg. Some embodiments may require this function to be called explicitly. In these embodiments, the API cannot automatically move on to the next waypoint. The Continue to Next Destination function may return an exception if there are no waypoints remaining in the multiple waypoint route. In some embodiments, the continue to next destination function may be implemented in the navigator instructions 350 as follows:
void continueToNextDestination() throws NoNextDestinationException to Waypoint continueToNextDestination()
Eine Löschungs-Wegpunkt-Funktion kann verwendet werden, um einen oder mehrere (z. B. alle) zuvor eingestellten Wegpunkte zu löschen. Diese Funktion kann auch eine Navigation stoppen, wenn gerade eine Navigation in Betrieb war. Bei einigen Ausführungsformen kann die Löschungs-Wegpunkt-Funktion in den Navigatoranweisungen 350 wie folgt implementiert sein:
void clearDestination()A delete waypoint function can be used to delete one or more (e.g. all) previously set waypoints. This function can also stop a navigation if a navigation was currently in operation. In some embodiments, the delete waypoint function may be implemented in the navigator instructions 350 as follows:
void clearDestination()
Wie es in
void ArrivalListener.onArrtvalAtWaypoint(Waypoint waypoint)Like it in
void ArrivalListener.onArrtvalAtWaypoint(Waypoint waypoint)
Der eine oder die mehreren Ereignislistener 520 können weiterhin eine ETD-Listenerschnittstelle 524 enthalten. Die ETD-Listenerschnittstelle kann aufgerufen werden, um ETD-Information einem Updaten zu unterziehen, wenn eine Entfernung, die übrigbleibt, oder eine Zeit, die übrigbleibt, zu einem nächsten Wegpunkt in der Vielzahl von Wegpunkten einer Mehrfachwegpunkte-Route sich um mehr als eine Schwelle ändert. Die Schwelle kann durch den Entwickler in den Navigatoranweisungen spezifiziert werden. Beispielsweise kann die ETD-Ereignisschnittstelle 524 bei einigen Ausführungsformen mit den Navigatoranweisungen 350 wie folgt registriert sein:
void setRemainingTimeOrDistanceChangedListener(int seconds, in metres, listener) /* Registriert einen Listener, um ETD-Updates zu empfangen, zu * irgendeiner Zeit, zu der sich ETD zum nächsten Zielort um mehr als * Sekunden oder Meter ändert. */ void RemainingTimeOrDistanceChangedListener.onChanged() /* Dieser Rückruf wird jedesmal ausgelöst, wenn sich ETD zum * nächsten Zielort um mehr als die Schwellen geändert hat, die in * setRemainingTimeOrDistanceChangedListener() eingestellt sind. */The one or more event listeners 520 may further include an ETD listener interface 524. The ETD listener interface may be called to update ETD information when a distance remaining or a time remaining to a next waypoint in the plurality of waypoints of a multiple waypoint route increases by more than a threshold changes. The threshold can be specified by the developer in the navigator instructions. For example, in some embodiments, the ETD event interface 524 may be registered with the navigator instructions 350 as follows:
void setRemainingTimeOrDistanceChangedListener(int seconds, in meters, listener) /* Registers a listener to receive ETD updates * any time when ETD moves to the next destination by more than * Seconds or meters changes. */ void RemainingTimeOrDistanceChangedListener.onChanged() /* This callback is triggered every time ETD moves to * Next destination has changed by more than the thresholds specified in * setRemainingTimeOrDistanceChangedListener() are set. */
Die Mehrfachwegpunkte-Funktion 510 kann eine Erlangen-ETD-Funktion 514 enthalten. Die Erlangen-ETD-Funktion kann ETD-Information (z. B. übrige Zeit und/oder übrige Entfernung) für einen spezifizierten Wegpunkt entlang einer Mehrfachwegpunkte-Route erhalten. Bei einigen Ausführungsformen kann die Erlangen-ETD-Funktion 514 in den Navigatoranweisungen 350 wie folgt implementiert sein: @Nullable TimeAndDistance getTimeAndDistance(Waypoint waypoint)The multiple waypoint function 510 may include an Erlangen ETD function 514. The Erlangen ETD function may obtain ETD information (e.g., time remaining and/or distance remaining) for a specified waypoint along a multiple waypoint route. In some embodiments, the Erlangen ETD function 514 may be implemented in the navigator instructions 350 as follows: @Nullable TimeAndDistance getTimeAndDistance(Waypoint waypoint)
Die Mehrfachwegpunkte-Funktionen 510 können weiterhin eine Erlangen-nächste-ETD-Funktion enthalten. Die Erlangen-nächste-ETD-Funktion kann ETD-Information (z. B. übrige Zeit und/oder übrige Entfernung) zu einem nächsten Wegpunkt in der Mehrfachwegpunkte-Route zurückbringen. Wenn es keine nächsten Wegpunkte gibt, kann die Funktion Null zurückbringen. Bei einigen Ausführungsformen kann die Erlangen-nächste-ETD-Funktion in den Navigatoranweisungen 350 wie folgt implementiert sein:
@Nullable TimeAndDistance getNextTimeAndDistance()The multiple waypoint functions 510 may further include an Erlangen next ETD function. The Erlangen Next ETD function can return ETD information (e.g., time remaining and/or distance remaining) to a next waypoint in the multiple waypoint route. If there are no next waypoints, the function can return zero. In some embodiments, the Erlangen next ETD function may be implemented in the navigator instructions 350 as follows:
@Nullable TimeAndDistance getNextTimeAndDistance()
Die Ereignislistenerschnittstelle 520 kann weiterhin eine Routegeändert-Ereignislistenerschnittstelle 526 enthalten. Die Route-geändert-Ereignislistenerschnittstelle 526 kann mit den Navigatoranweisungen registriert sein, um Updates zur Verfügung zu stellen, wenn sich eine Mehrfachwegpunkte-Route ändert. Die Route-geändert-Ereignislistenerschnittstelle 526 kann aufgerufen werden, wenn sich irgendein Routensegment einer Mehrfachwegpunkte-Navigationsroute ändert. Beispielsweise kann die Route-geändert-Ereignislistenerschnittstelle 526 aufgerufen werden, wenn sich die anfängliche Mehrfachwegpunkte-Route ändert, wenn der Anwender manuell eine andere Navigationsroute auswählt, etc. Bei einigen Ausführungsformen kann die Routegeändert-Ereignislistenerschnittstelle 526 in den Navigatoranweisungen 350 wie folgt implementiert sein:
void setRouteChangedListener(RouteChangedListener listener) /* Registriert einen Listener, um jedesmal benachrichtigt zu werden, * wenn sich die Route ändert, wie beispielweise bei der anfänglichen * Routenkonfiguration vom Server, jedesmal, wenn der Fahrer vom * Kurs abweicht, wenn der Fahrer manuell eine alternative Route durch * Antippen von ihr auf dem Bildschirm auswählt. Dies wird ausgelöst * werden, wenn sich irgendein Segment der Route ändert. */ RouteChangedListener.onRouteChanged() /* Dieser Rückruf wird ausgelöst, wenn sich die Route ändert (wie es * oben definiert ist). */The event listener interface 520 may further include a route changed event listener interface 526. The route changed event listener interface 526 may be registered with the navigator instructions to provide updates when a multiple waypoint route changes. The route changed event listener interface 526 may be invoked when any route segment of a multi-waypoint navigation route changes. For example, the route changed event listener interface 526 may be invoked when the initial multiple waypoint route changes, when the user manually selects a different navigation route, etc. In some embodiments, the route changed event listener interface 526 may be implemented in the navigator instructions 350 as follows:
void setRouteChangedListener(RouteChangedListener listener) /* Registers a listener to be notified every time * when the route changes, such as the initial one * Route configuration from server every time the driver from * Course deviates when the driver manually takes an alternative route *Tapping it on the screen selects it. This will trigger * become when any segment of the route changes. */ RouteChangedListener.onRouteChanged() /* This callback is triggered when the route changes (like it * is defined above). */
Bei einigen Ausführungsformen ist die ETD-Information (z. B. TimeAndDistance) ein unveränderbarer Typ. Beispielsweise kann TimeAndDistance wie folgt implementiert sein:
public interface TimeAndDistance { /* Die Zahl von Metern von der aktuellen Position zu diesem Wegpunkt. */ public in getMeters(); /* Die geschätzte Zahl von Sekunden vor einem Ankommen bei diesem * Wegpunkt. */ public int getSeconds(); }In some embodiments, the ETD information (e.g., TimeAndDistance) is an immutable type. For example, TimeAndDistance can be implemented as follows:
public interface TimeAndDistance { /* The number of meters from the current position to this waypoint. */ public in getMeters(); /* The estimated number of seconds before arriving at this * Waypoint. */ public int getSeconds(); }
Die Mehrfachwegpunkte-Funktionen 510 können Erlangen-Routensegment-Funktionen 516 enthalten. Die Erlangen-Routensegment-Funktionen können eine Erlangen-aktuelles-Routensegment-Funktion enthalten, um ein aktuelles Routensegment zum nächsten Wegpunkt zurückzubringen, eine Listen-Routensegment-Funktion, um alle Routensegmente in einer Mehrfachwegpunkte-Navigationsroute aufzulisten, und eine Erlangen-gereistes-Routensegment-Funktion, um Routensegmente zu erlangen, über die bereits in der Mehrfachwegpunkte-Navigationsroute gereist ist. Bei einigen Ausführungsformen können die Erlangen-Routensegment-Funktionen wie folgt implementiert sein:
@Nullable RouteSegment getCurrentRouteSegment() /* Bringt die aktuelle Teilstrecke der Reise zurück. Dieses * RouteSegment wird seine Startposition als die zuallerletzt bekannte * Position der Vorrichtung haben. Wenn es kleinen Zielort gibt, wird es * zu Null zurückkehren. */ List<RouteSegment> getRouteSegment() /* Bringt eine Liste von RouteSegments in der Reise zurück. Das erste * RouteSegment wird das sein, was durch getCurrentRouteSegment() * zurückgebracht worden wäre, gefolgt durch RouteSegments * entsprechend jedem nicht erreichten Zielort. Es wird garantiert, dass * die Breitengrad/Längengrad-Listen für aufeinanderfolgende * RouteSegments mit demselben Wert starten und enden. */ List<LatLng> getTravelledRoute() /* Bringt die Route zurück, über die während dieser Navigationssession * gereist ist (da der letzte Aufruf zu startGuidance() ), erzeugt von von * der Straße abgegriffenen bzw. aufgenommenen * Lokalisierungsupdates, und vereinfacht, um redundante Stellen zu * entfernen (z.B. Ersetzen von aufeinanderfolgenden kolinearen Stellen * mit einem einzelnen Liniensegment). */The multiple waypoint functions 510 may include Erlangen route segment functions 516. The Erlangen route segment functions may include an Erlangen current route segment function to return a current route segment to the next waypoint, a list route segment function to list all route segments in a multi-waypoint navigation route, and an Erlangen traveled route segment -Function to obtain route segments that have already been traveled in the multi-waypoint navigation route. In some embodiments, the Erlangen route segment functions may be implemented as follows:
@Nullable RouteSegment getCurrentRouteSegment() /* Returns the current leg of the trip. This * RouteSegment will have its starting position as the last known one * Have position of the device. If there is small destination, it will * return to zero. */ List<RouteSegment> getRouteSegment() /* Returns a list of RouteSegments in the trip. The first * RouteSegment will be what is returned by getCurrentRouteSegment() * would have been returned, followed by RouteSegments * corresponding to each destination not reached. It is guaranteed that * the latitude/longitude lists for consecutive * RouteSegments start and end with the same value. */ List<LatLng> getTravelledRoute() /* Returns the route taken during this navigation session * has traveled (since the last call to startGuidance() ), generated by by * taken or recorded from the street * Localization updates, and simplified to eliminate redundant locations * remove (e.g. replacing consecutive collinear locations * with a single line segment). */
Bei einigen Ausführungsformen kann RouteSegment ein unabänderbarer Typ sein. Beispielsweise kann RouteSegment wie folgt implementier sein:
public interface RouteSegment { /* Der Zielort, an welchem dieses Routensegment endet. */ Public Waypoint getDestinationWaypoint(); /* Der Breitengrad/Längengrad, an welchem dieses Routensegment * endet. Dies wird im Allgemeinen nicht mit dem Wegpunkt * übereinstimmen, solange der Wegpunkt nicht direkt auf der Straße * positioniert ist. */ public LatLng getDestinationLatLng(); /* Die Route selbst. */ public List<LatLng> getLatLngs(); }In some embodiments, RouteSegment may be an immutable type. For example, RouteSegment can be implemented as follows:
public interface RouteSegment { /* The destination at which this route segment ends. */ Public Waypoint getDestinationWaypoint(); /* The latitude/longitude at which this route segment * ends. This will generally not work with the waypoint * match as long as the waypoint is not directly on the road * is positioned. */ public LatLng getDestinationLatLng(); /* The route itself. */ public List<LatLng>getLatLngs(); }
Die Ereignislistenerschnittstelle 520 kann weiterhin eine Lokalisierungslistenerschnittstelle 528 enthalten. Die Lokalisierungslistenerschnittstelle 528 kann ähnlich der Lokalisierungslistenerschnittstelle 362 sein, die unter Bezugnahme auf
Die hierin diskutierte Technologie nimmt Bezug auf Server, Datenbanken, Softwareanwendungen und andere computerbasierte Systeme, sowie Aktionen, die vorgenommen werden, und Information, die zu und von solchen Systemen gesendet wird. Fachleute auf dem Gebiet werden erkennen, dass die innewohnende Flexibilität von computerbasierten Systemen eine große Vielfalt von möglichen Konfigurationen, Kombinationen und Aufteilungen von Aufgaben und Funktionalität zwischen und unter den Komponenten zulässt. Beispielsweise können hierin diskutierte Serverprozesse unter Verwendung eines einzelnen Servers oder mehrerer Server, die in Kombination arbeiten, implementiert sein. Datenbanken und Anwendungen können auf einem einzelnen System oder über mehrere Systeme verteilt implementiert sein. Verteilte Komponenten können sequentiell oder parallel arbeiten.The technology discussed herein refers to servers, databases, software applications and other computer-based systems, as well as actions taken and information sent to and from such systems. Those skilled in the art will recognize that the inherent flexibility of computer-based systems allows for a wide variety of possible configurations, combinations, and divisions of tasks and functionality between and among components. For example, server processes discussed herein may be implemented using a single server or multiple servers operating in combination. Databases and applications can be deployed on a single system or distributed across multiple systems. Distributed components can work sequentially or in parallel.
Gemäß Ausführungsformen sind Navigations-Anwendungsprogrammierungsschnittstellen zur Verfügung gestellt, die dazu verwendet werden können, Navigationsdienste in Softwareanwendungen einzubetten. Bei einer Ausführungsform enthält die Anwendungsprogrammierungsschnittstelle eine erste Gruppe von Anweisungen, die einen oder mehrere erste Parameter spezifizieren, um die Implementierung eines Navigationsdienstes durch die Softwareanwendung zu steuern. Der Navigationsdienst kann einem Anwender der Softwareanwendung Navigationsinformation zur Verfügung stellen. Die Anwendungsprogrammierungsschnittstelle kann eine zweite Gruppe von Anweisungen enthalten, die einen oder mehrere zweite Parameter spezifiziert, um eine Interaktion mit einer Schnittstelle zu steuern. Die Anwendungsprogrammierungsschnittstelle kann weiterhin eine Wegpunkte-Funktion enthalten, die als Teil der ersten Anweisungen spezifiziert ist, die betreibbar sind, um eine Vielzahl von Wegpunkten für eine Navigationsroute einzustellen. Die Anwendungsprogrammierungsschnittstelle kann betreibbar sein, um eine Mehrfachwegpunkte-Navigationsroute zu empfangen, die basierend auf der Vielzahl von Wegpunkten bestimmt ist.According to embodiments, navigation application programming interfaces are provided that can be used to embed navigation services into software applications. In one embodiment, the application programming interface includes a first set of instructions that specify one or more first parameters to control the software application's implementation of a navigation service. The navigation service can provide navigation information to a user of the software application. The application programming interface may include a second set of instructions that specify one or more second parameters to control interaction with an interface. The application programming interface may further include a waypoints function specified as part of the first instructions operable to set a plurality of waypoints for a navigation route. The application programming interface may be operable to receive a multiple waypoint navigation route determined based on the plurality of waypoints.
Während der vorliegende Gegenstand in Bezug auf spezifische beispielhafte Ausführungsformen davon detailliert beschrieben worden ist, wird es so eingeschätzt, dass Fachleute auf dem Gebiet auf ein Erreichen eines Verstehens des Vorangehenden hin ohne weiteres Abänderungen an, Variationen von und Äquivalente zu solchen Ausführungsformen produzieren können. Demgemäß ist der Schutzumfang der vorliegenden Offenbarung eher beispielhaft als beschränkend und die Fachgebietsoffenbarung verhindert kein Enthaltensein von solchen Modifikationen, Variationen und/oder Hinzufügungen zu dem vorliegenden Gegenstand, wie es Fachleuten auf dem Gebiet ohne weiteres klar sein würde.While the present subject matter has been described in detail with respect to specific exemplary embodiments thereof, it is appreciated that those skilled in the art can readily produce modifications to, variations of, and equivalents to such embodiments upon achieving an understanding of the foregoing. Accordingly, the scope of the present disclosure is illustrative rather than limiting, and the art disclosure does not preclude the inclusion of such modifications, variations, and/or additions to the subject matter as would be readily apparent to those skilled in the art.
Claims (16)
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US15/080,683 | 2016-03-25 | ||
US15/080,683 US10061625B2 (en) | 2016-03-25 | 2016-03-25 | Navigation application programming interface to accommodate multiple waypoint routing |
Publications (2)
Publication Number | Publication Date |
---|---|
DE102016124474A1 DE102016124474A1 (en) | 2017-09-28 |
DE102016124474B4 true DE102016124474B4 (en) | 2024-02-08 |
Family
ID=57570650
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
DE102016124474.0A Active DE102016124474B4 (en) | 2016-03-25 | 2016-12-15 | NAVIGATION APPLICATION PROGRAMMING INTERFACE TO ACCOMMODATE MULTIPLE WAYPOINT GUIDANCE |
DE202016008227.3U Active DE202016008227U1 (en) | 2016-03-25 | 2016-12-15 | Navigation application programming interface for accommodating multi-waypoint guidance |
Family Applications After (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
DE202016008227.3U Active DE202016008227U1 (en) | 2016-03-25 | 2016-12-15 | Navigation application programming interface for accommodating multi-waypoint guidance |
Country Status (6)
Country | Link |
---|---|
US (1) | US10061625B2 (en) |
EP (1) | EP3374868A1 (en) |
CN (1) | CN107229386A (en) |
DE (2) | DE102016124474B4 (en) |
GB (1) | GB2548948B (en) |
WO (1) | WO2017164943A1 (en) |
Families Citing this family (7)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10352717B2 (en) * | 2017-02-28 | 2019-07-16 | Google Llc | Navigation application programming interface |
US20190042986A1 (en) * | 2017-08-03 | 2019-02-07 | Google Inc. | Application Programming Interface for Vehicle Routing Applications |
US10553119B1 (en) | 2018-10-04 | 2020-02-04 | Allstate Insurance Company | Roadside assistance system |
US20200182635A1 (en) * | 2018-12-06 | 2020-06-11 | Nuance Communications, Inc. | Automatically determining waypoints along a route of travel |
US11598639B2 (en) * | 2019-05-20 | 2023-03-07 | Schlumberger Technology Corporation | System for offsite navigation |
CN111078220B (en) * | 2019-12-19 | 2023-04-21 | 浪潮云信息技术股份公司 | Method and system for realizing front-end state change management |
USD953371S1 (en) | 2021-10-22 | 2022-05-31 | BioReference Health, LLC | Display screen or portion thereof with animated graphical user interface |
Family Cites Families (18)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6901594B1 (en) * | 1999-04-23 | 2005-05-31 | Nortel Networks Ltd. | Apparatus and method for establishing communication between applications |
US20010034754A1 (en) * | 2000-03-17 | 2001-10-25 | Elwahab Amgad Mazen | Device, system and method for providing web browser access and control of devices on customer premise gateways |
US7228225B1 (en) * | 2002-09-18 | 2007-06-05 | Garmin Ltd. | Methods and systems to interface navigation operations |
US7856315B2 (en) * | 2004-10-01 | 2010-12-21 | Telecommunication Systems, Inc. | Method and system for enabling an off board navigation solution |
US9409052B2 (en) * | 2008-10-03 | 2016-08-09 | Adidas Ag | Program products, methods, and systems for providing location-aware fitness monitoring services |
EP2360958B1 (en) | 2010-02-12 | 2015-03-25 | Accenture Global Services Limited | Mobile network monitoring by measuring quality of service QoS |
KR20120067830A (en) | 2010-12-16 | 2012-06-26 | 한국전자통신연구원 | System for map service in mobile web, and terminal for the same |
US9542241B2 (en) | 2011-07-12 | 2017-01-10 | Harman International Industries, Incorporated | Navigation application interface |
US20130231889A1 (en) * | 2012-03-01 | 2013-09-05 | Lockheed Martin Corporation | Method and apparatus for an inertial navigation system |
US20140101249A1 (en) * | 2012-07-10 | 2014-04-10 | Mark Lampe | Systems and Methods for Managing and Presenting Information |
US8849942B1 (en) | 2012-07-31 | 2014-09-30 | Google Inc. | Application programming interface for prefetching map data |
US20140114565A1 (en) | 2012-10-22 | 2014-04-24 | Adnan Aziz | Navigation of a vehicle along a path |
US8886460B1 (en) | 2012-11-29 | 2014-11-11 | Google Inc. | Mobile device navigation state application programming interface |
US20150088642A1 (en) | 2013-09-26 | 2015-03-26 | Mastercard International Incorporated | Intelligent shopping cart service |
US10785172B2 (en) * | 2014-05-23 | 2020-09-22 | Verizon Patent And Licensing Inc. | Method and apparatus for delivering messages based on user activity status |
US20160054137A1 (en) * | 2014-08-20 | 2016-02-25 | Tomtom International B.V. | Navigation device with enhanced widgets and applications |
US9756139B2 (en) * | 2014-12-30 | 2017-09-05 | Facebook, Inc. | Executing requests for services using shared location data |
FR3046273B1 (en) * | 2015-12-23 | 2018-10-12 | Thales | OPEN ARCHITECTURE FOR FLIGHT MANAGEMENT SYSTEM |
-
2016
- 2016-03-25 US US15/080,683 patent/US10061625B2/en active Active
- 2016-12-06 EP EP16813324.7A patent/EP3374868A1/en not_active Withdrawn
- 2016-12-06 WO PCT/US2016/065065 patent/WO2017164943A1/en active Application Filing
- 2016-12-14 GB GB1621255.7A patent/GB2548948B/en active Active
- 2016-12-15 CN CN201611160445.1A patent/CN107229386A/en active Pending
- 2016-12-15 DE DE102016124474.0A patent/DE102016124474B4/en active Active
- 2016-12-15 DE DE202016008227.3U patent/DE202016008227U1/en active Active
Non-Patent Citations (3)
Title |
---|
"How to" for the Android SDK; skobbler; 2016, S. 1 – 36. URL: http://developer.skobbler.com/getting-started/android Archiviert in http://www.archive.org am 16.03.16 [abgerufen am 01.11.2022] |
Index; skobbler; 2015, S. 1 – 53. URL: http://developer.skobbler.com/docs/android/2.5.1/index-all.html Archiviert in http://www.archive.org am 06.12.15 [abgerufen am 01.11.2022] |
Release Notes; skobbler; 2015, S. 1 – 8. URL: http://developer.skobbler.com/release-notes Archiviert in http://www.archive.org am 27.10.15 [abgerufen am 01.11.2022] |
Also Published As
Publication number | Publication date |
---|---|
CN107229386A (en) | 2017-10-03 |
EP3374868A1 (en) | 2018-09-19 |
US10061625B2 (en) | 2018-08-28 |
US20170277578A1 (en) | 2017-09-28 |
GB201621255D0 (en) | 2017-01-25 |
WO2017164943A1 (en) | 2017-09-28 |
DE102016124474A1 (en) | 2017-09-28 |
GB2548948B (en) | 2021-12-29 |
DE202016008227U1 (en) | 2017-06-06 |
GB2548948A (en) | 2017-10-04 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
DE102016124474B4 (en) | NAVIGATION APPLICATION PROGRAMMING INTERFACE TO ACCOMMODATE MULTIPLE WAYPOINT GUIDANCE | |
DE60038068T2 (en) | Method and device for navigation | |
DE60318845T2 (en) | PROCESS THAT ENABLES A WIRELESS INFORMATION DEVICE TO ACCESS STORAGE DATA | |
DE102017125058A1 (en) | Navigation Application Programming Interface | |
DE102008052460A1 (en) | Vehicle navigation system with real-time traffic image display | |
DE202015009184U1 (en) | Directions between automatically determined starting points and selected destinations | |
EP1789755B1 (en) | Information point | |
DE202014103884U1 (en) | Navigation device with improved widgets and applications | |
DE202016008228U1 (en) | Navigation application programming interface | |
DE112020001255T5 (en) | DEEP NEURAL NETWORK WITH LOW POWER CONSUMPTION FOR SIMULTANEOUS OBJECT DETECTION AND SEMANTIC SEGMENTATION IN IMAGES ON A MOBILE COMPUTER DEVICE | |
DE102011075305A1 (en) | Method for the computer-aided processing of electronically stored calendar data | |
DE112015006692T5 (en) | Platform for the evaluation and sharing of route-specific data | |
DE112016006588T5 (en) | SYSTEM AND METHOD FOR VEHICLE LOCALIZATION | |
Al-Majhad et al. | A traffic congestion framework for smart riyadh city based on iot services | |
DE202023100616U1 (en) | System for optimizing tourism planning | |
WO2017093574A1 (en) | Indoor navigation system and method | |
DE102011015216A1 (en) | End device for visualizing address points on digital geographical cards, has display unit for representing digital geographical card and for visualizing address points and data memory | |
DE102021100250A1 (en) | NAVIGATION SYSTEMS AND PROCEDURES OBTAINED BY CROWDSOURCING | |
DE112007003328T5 (en) | Navigation system and display method of a road network on the same system | |
EP3076129B1 (en) | Providing additional map data for an offroad path with a navigation device | |
DE102008014610A1 (en) | Multi-media system operating method for vehicle, involves transmitting position based dataset, displaying additional data as position symbols in map, and displaying associated multi-media data by selection of respective position symbols | |
DE102021128251A1 (en) | Viewing a route using a mobile device | |
DE102019006103A1 (en) | Transfer the history of a route | |
EP2607851A1 (en) | Method for operating a navigation device with speed data that can be updated separately | |
DE102006040493A1 (en) | Method and devices as well as computer program for the acquisition and use of directional information of an object |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
R012 | Request for examination validly filed | ||
R138 | Derivation of utility model |
Ref document number: 202016008227Country of ref document: DE |
|
R081 | Change of applicant/patentee |
Owner name: GOOGLE LLC (N.D.GES.D. STAATES DELAWARE), MOUN, USFree format text: FORMER OWNER: GOOGLE INC., MOUNTAIN VIEW, CALIF., US |
|
R082 | Change of representative |
Representative=s name: KILBURN & STRODE LLP, GBRepresentative=s name: KILBURN & STRODE LLP, NLRepresentative=s name: BETTEN & RESCH PATENT- UND RECHTSANWAELTE PART, DE |
|
R082 | Change of representative |
Representative=s name: KILBURN & STRODE LLP, GBRepresentative=s name: KILBURN & STRODE LLP, NL |
|
R082 | Change of representative |
Representative=s name: KILBURN & STRODE LLP, NL |
|
R016 | Response to examination communication | ||
R018 | Grant decision by examination section/examining division |
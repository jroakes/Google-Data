GB2550633A - Incorporating selectable application links into message exchange threads - Google Patents
Incorporating selectable application links into message exchange threads Download PDFInfo
- Publication number
- GB2550633A GB2550633A GB1621385.2A GB201621385A GB2550633A GB 2550633 A GB2550633 A GB 2550633A GB 201621385 A GB201621385 A GB 201621385A GB 2550633 A GB2550633 A GB 2550633A
- Authority
- GB
- United Kingdom
- Prior art keywords
- message exchange
- application
- exchange thread
- computing device
- processors
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Withdrawn
Links
- 238000000034 method Methods 0.000 claims description 46
- 230000004044 response Effects 0.000 claims description 16
- 238000010348 incorporation Methods 0.000 claims description 13
- 230000015654 memory Effects 0.000 claims description 13
- 230000002452 interceptive effect Effects 0.000 claims description 7
- 238000004590 computer program Methods 0.000 claims description 2
- 238000004891 communication Methods 0.000 description 9
- 239000000463 material Substances 0.000 description 5
- 230000009471 action Effects 0.000 description 3
- 230000008901 benefit Effects 0.000 description 3
- 238000013507 mapping Methods 0.000 description 3
- 230000008569 process Effects 0.000 description 3
- 230000000694 effects Effects 0.000 description 2
- 238000005516 engineering process Methods 0.000 description 2
- 238000003780 insertion Methods 0.000 description 2
- 230000037431 insertion Effects 0.000 description 2
- 238000009434 installation Methods 0.000 description 2
- 230000007246 mechanism Effects 0.000 description 2
- 230000002093 peripheral effect Effects 0.000 description 2
- 238000012545 processing Methods 0.000 description 2
- 230000007704 transition Effects 0.000 description 2
- 230000001960 triggered effect Effects 0.000 description 2
- 230000000007 visual effect Effects 0.000 description 2
- 230000004913 activation Effects 0.000 description 1
- 230000009193 crawling Effects 0.000 description 1
- 238000013479 data entry Methods 0.000 description 1
- 238000001514 detection method Methods 0.000 description 1
- 238000010586 diagram Methods 0.000 description 1
- 230000006870 function Effects 0.000 description 1
- 239000011521 glass Substances 0.000 description 1
- 230000036541 health Effects 0.000 description 1
- 238000013549 information retrieval technique Methods 0.000 description 1
- 230000003993 interaction Effects 0.000 description 1
- 238000002955 isolation Methods 0.000 description 1
- 239000004973 liquid crystal related substance Substances 0.000 description 1
- 238000004519 manufacturing process Methods 0.000 description 1
- 235000012054 meals Nutrition 0.000 description 1
- 238000012986 modification Methods 0.000 description 1
- 230000004048 modification Effects 0.000 description 1
- 230000006855 networking Effects 0.000 description 1
- 230000003287 optical effect Effects 0.000 description 1
- 230000002085 persistent effect Effects 0.000 description 1
- 230000002207 retinal effect Effects 0.000 description 1
- 238000012552 review Methods 0.000 description 1
- 230000001360 synchronised effect Effects 0.000 description 1
- 230000001052 transient effect Effects 0.000 description 1
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/30—Information retrieval; Database structures therefor; File system structures therefor of unstructured textual data
- G06F16/33—Querying
- G06F16/338—Presentation of query results
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/30—Semantic analysis
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/30—Information retrieval; Database structures therefor; File system structures therefor of unstructured textual data
- G06F16/31—Indexing; Data structures therefor; Storage structures
- G06F16/316—Indexing structures
- G06F16/328—Management therefor
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/30—Information retrieval; Database structures therefor; File system structures therefor of unstructured textual data
- G06F16/33—Querying
- G06F16/3331—Query processing
- G06F16/3332—Query translation
- G06F16/3334—Selection or weighting of terms from queries, including natural language queries
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/30—Information retrieval; Database structures therefor; File system structures therefor of unstructured textual data
- G06F16/33—Querying
- G06F16/3331—Query processing
- G06F16/334—Query execution
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/93—Document management systems
- G06F16/94—Hypermedia
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/953—Querying, e.g. by the use of web search engines
- G06F16/9535—Search customisation based on user profiles and personalisation
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/955—Retrieval from the web using information identifiers, e.g. uniform resource locators [URL]
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/955—Retrieval from the web using information identifiers, e.g. uniform resource locators [URL]
- G06F16/9558—Details of hyperlinks; Management of linked annotations
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/01—Input arrangements or combined input and output arrangements for interaction between user and computer
- G06F3/048—Interaction techniques based on graphical user interfaces [GUI]
- G06F3/0481—Interaction techniques based on graphical user interfaces [GUI] based on specific properties of the displayed interaction object or a metaphor-based environment, e.g. interaction with desktop elements like windows or icons, or assisted by a cursor's changing behaviour or appearance
- G06F3/0482—Interaction with lists of selectable items, e.g. menus
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/10—Text processing
- G06F40/12—Use of codes for handling textual entities
- G06F40/134—Hyperlinking
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/10—Text processing
- G06F40/166—Editing, e.g. inserting or deleting
- G06F40/186—Templates
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/40—Processing or translation of natural language
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q10/00—Administration; Management
- G06Q10/10—Office automation; Time management
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L51/00—User-to-user messaging in packet-switching networks, transmitted according to store-and-forward or real-time protocols, e.g. e-mail
- H04L51/04—Real-time or near real-time messaging, e.g. instant messaging [IM]
- H04L51/046—Interoperability with other network applications or services
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L51/00—User-to-user messaging in packet-switching networks, transmitted according to store-and-forward or real-time protocols, e.g. e-mail
- H04L51/06—Message adaptation to terminal or network requirements
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L51/00—User-to-user messaging in packet-switching networks, transmitted according to store-and-forward or real-time protocols, e.g. e-mail
- H04L51/07—User-to-user messaging in packet-switching networks, transmitted according to store-and-forward or real-time protocols, e.g. e-mail characterised by the inclusion of specific contents
- H04L51/18—Commands or executable codes
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L51/00—User-to-user messaging in packet-switching networks, transmitted according to store-and-forward or real-time protocols, e.g. e-mail
- H04L51/21—Monitoring or handling of messages
- H04L51/216—Handling conversation history, e.g. grouping of messages in sessions or threads
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/01—Protocols
- H04L67/02—Protocols based on web technology, e.g. hypertext transfer protocol [HTTP]
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/34—Network arrangements or protocols for supporting network services or applications involving the movement of software or configuration parameters
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04W—WIRELESS COMMUNICATION NETWORKS
- H04W4/00—Services specially adapted for wireless communication networks; Facilities therefor
- H04W4/02—Services making use of location information
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04W—WIRELESS COMMUNICATION NETWORKS
- H04W4/00—Services specially adapted for wireless communication networks; Facilities therefor
- H04W4/12—Messaging; Mailboxes; Announcements
Abstract
Detecting cues in a message exchange thread involving two or more clients 602, identifying one or more candidate applications associated with thread content 604, and incorporating into a transcript one or more selectable links operable to cause a client device to expose an interface associated with a respective candidate 608. The identifying may be performed by processors remote from client, in which case data indicative of links is downloaded to the client which may locally select a subset for display based on signals such as frequency of use of applications; or the identifying may be performed by the device. Cues may be from thread content, such as keywords or key phrases. Cues may include a statement directed between thread participants that matches a pattern, which may be a template generated from a corpus of clustered training messages. If a suitable application is not installed, selectable link may direct to a webpage that fulfils the necessary functionality 606 or downloads an installer of the application. It may also involve determining a context of participants such as their location.
Description
Incorporating Selectable Application Links into Message Exchange Threads
Background [0001] Multiple users may communicate with each other textually via message exchange threads that may be implemented using various technologies, such as text messaging, online chat (e.g., instant messenger, Internet relay chat, etc.), social network messaging, and so forth. Message exchange client applications (or “apps”) such as text messaging apps, online chat apps, social networking apps, etc., may display at least part of a transcript (e.g., a live or near live record of text and/or images that is updated in real time as the users converse) of an ongoing message exchange thread as part of a graphical user interface, so that users can follow the conversation. The ongoing message exchange thread, and hence, the displayed transcript, is typically limited to text or other data such as pictures that users deliberately and explicitly incorporate into the message exchange thread. Consequently, users seeking to perform various actions in response to various events of the conversation, such as making a reservation or consulting a map, must switch to a different application in order to do so. Manually switching applications, e.g., by minimizing the message exchange client to locate and open a desired application and then populate one or more data fields, may be burdensome and may disrupt the flow of the conversation.
Summary [0002] The present disclosure is generally directed to methods, apparatus, and computer-readable media (transitory and non-transitory) for incorporating “selectable application links’’— graphical elements operable by a participant in a message exchange thread to expose the participant to an interface associated with another application—directly into a transcript of the message exchange thread that is rendered on one or more message exchange clients. The incorporation of selectable application links into die message exchange thread may reduce the number of user inputs that a user must make to a device in order to access the information which is available via the links. This may be of particular benefit to users that have low dexterity, or users who otherwise have difficulties making user inputs to a device. For at least these users, the incorporation of the selectable application links into the message exchange thread may increase the reliability and speed of use of the device, e.g. by saving the user from making errors due to his or her relatively low dexterity. In various implementations, the selectable application links that are incorporated into a transcript may be dictated by resources of the client device that renders the transcript as part of a message exchange client. For instance, one or more “candidate applications” that are somehow relevant to the content of the message exchange thread—and that are also installed on a given client computing device operated by a participant in the message exchange thread—may be identified. In some implementations, only selectable application links to installed applications may be presented (unless no applicable applications are installed, in which case a link to an application installer or web page having corresponding functionality to a non-installed app may be included instead).
[0003] Incorporation of selectable application links into a transcript may be triggered by various cues. In some implementations, the cues may emanate from content of the message exchange thread. For example, one participant may ask, “where should we eat tonight?”
Another participant may respond with a specific restaurant suggestion. Such an exchange may trigger insertion of one or more selectable application links associated with the restaurant (e.g., a link to a maps app showing the location, a link to a reservations app to make a reservation, etc.). Additionally or alternatively, the mere mention of an entity may trigger a search of a knowledge base of known entities (e.g., people, places, things) and relationships therebetween to identify a known entity, and if a known entity is identified, inserting a selectable application link to an application relevant to that entity (e.g., restaurant would trigger reservation app, musician would trigger music app, etc.). It will be appreciated that triggering searches of this kind may have particular benefit to users with low dexterity, or users who would otherwise find it difficult to make inputs to a device to identify the entity. As another example, one or more keywords or key phrases may be associated with one or more applications, such that if the keyword or phrase is detected in the message exchange thread, a selectable application link to that application is inserted. As yet another example, a participant may explicitly request insertion of selectable application links into the transcript, e.g., by summoning a so-called personal assistant module or “bot” to insert links (e.g., “[BOT], let’s make a reservation at XYZ”).
[0004] Applications installed on a client device may be identified in various ways. In some implementations, applications installed on the client device may be known remotely from the client device, e.g., by an application store server that has a record of applications installed on one or more client devices forming an “ecosystem” of devices operated by a participant. In such case, data indicative of one or more selectable application links associated with applications known to be installed on a client device may be downloaded to the client device so that the client device can incorporate a selectable application link to those applications into a message thread.
In at least these scenarios, the selectable links incorporated in the message exchange thread may have an effect outside of the device in which the links are displayed - at least by causing data to be downloaded to the device from one or more external computers. This process may be made more reliable by the selectable links, which ensure that the risk of erroneous data being downloaded to the device due to one or more erroneous user inputs, such as a user selection of an erroneous manual search result, is significantly reduced. This may reduce network traffic and make the overall system operate more efficiently. In some implementations, multiple installed applications may be identified remotely (and data indicative thereof downloaded to the client), and then the client device may select a subset of the multiple applications based on various signals, such as frequency of use of the application (e.g., among one or more client computing devices of the participant’s ecosystem, or on a single client computing device). In some implementations, the client device itself may identify installed applications. For example, an application “category” (e.g., “maps,” “reservations,” “music,” “film,” “messaging,” “videoconferencing,” “telephone,” etc.) may be identified based on content of a message exchange thread, and then a client device may identify within the category what, if any, matching applications it has installed.
[0005] In some implementations, a computer implemented method may be provided that includes the following operations: detecting one or more cues emanating from a message exchange thread involving two or more message exchange clients, wherein the one or more cues trigger incorporation, into the message exchange thread, of one or more selectable links to one or more applications distinct from the message exchange thread; identifying one or more candidate applications that are installed on a given client computing device operated by a participant in the message exchange thread, wherein the one or more candidate applications are associated with content of the message exchange thread; and incorporating, into a transcript of the message exchange thread that is displayed in a graphical user interface of a message exchange client operating on the given client computing device, one or more selectable links, wherein each selectable link is operable by the participant to cause the given client computing device to expose to the participant an interface associated with a respective candidate application.
[0006] This method and other implementations of technology disclosed herein may each optionally include one or more of the following features.
[0007] In various implementations, the identifying may be performed remotely from the given client computing device, and data indicative of the one or more selectable links may be downloaded to the given client device. In various implementations, the method may further include selecting, by the given client device, a subset of the downloaded one or more selectable links for display based on one or more information signals. In various implementations, the one or more information signals may include a frequency of use of the one or more candidate applications. In other implementations, the identifying may be performed by one or more processors that is integral with the given client computing device itself.
[0008] In various implementations, the one or more cues may emanate from the content of the message exchange thread. In various implementations, the one or more cues may include a keyword or phrase associated with a particular application. In various implementations, the one or more cues may include a statement directed from one participant of the message exchange thread to another participant that matches a pattern associated with a particular application. In various implementations, the one or more cues may include a match between the statement and a template associated with the particular application. In some implementations, the template may be generated from a corpus of messages that includes messages from prior message exchange threads. In some implementations, the template may be associated with a cluster of messages from the corpus that share one or more attributes.
[0009] In various implementations, the identifying may include identifying, as a candidate application, a web browser installed on the given client computing device in response to a determination that a given application associated with content of the message exchange thread is not installed on the given client computing device. In various implementations, the incorporating may include incorporating, into the transcript, a selectable link to an interactive webpage, wherein the interactive webpage includes functionality that corresponds to functionality of the given application that is not installed on the given client computing device.
In other implementations, the incorporating may include incorporating, into the transcript, a selectable link to a webpage associated with downloading an installer of the given application.
[0010] In various implementations, the method may further include determining a context of one or more participants in the message exchange thread, and prepopulating one or more data points associated with at least one of the one or more candidate applications based on the determined context. In various implementations, determining the context may include obtaining, from one or more of the client devices, one or more contextual signals. In various implementations, the one or more contextual signals may include a location of at least one participant in the message exchange thread. In various implementations, determining the context may include analyzing content of the message exchange thread to determine one or more attributes of at least one of the participants.
[0011] In various implementations, the method may further include identifying an application category associated with the one or more cues. In various implementations, the one or more candidate applications may include a candidate application that is associated with the application category and also is installed on the given client computing device. In various implementations, the one or more cues may include mention of an entity. In various implementations, the method may further include matching the mentioned entity with one or more known entities in a knowledge base of entities and relationships therebetween.
[0012] Other implementations may include a non-transitory computer readable storage medium storing instructions executable by a processor to perform a method such as one or more of the methods described above. Yet another implementation may include a system including memory and one or more processors operable to execute instructions, stored in the memory, to implement one or more modules or engines that, alone or collectively, perform a method such as one or more of the methods described above.
[0013] It should be appreciated that all combinations of the foregoing concepts and additional concepts described in greater detail herein are contemplated as being part of the subject matter disclosed herein. For example, all combinations of claimed subject matter appearing at the end of this disclosure are contemplated as being part of the subject matter disclosed herein.
Brief Description of the Drawings [0014] Fig. 1 illustrates an environment in which one or more selectable application links may be incorporated into a message exchange thread, in accordance with various implementations.
[0015] Fig. 2 and Fig. 3 depict examples of how client devices may render a graphical user interface for a message exchange client, in accordance with various implementations.
[0016] Fig. 4 depicts one example of how individual client devices may identify candidate applications that are installed locally, in accordance with various implementations.
[0017] Fig. 5 depicts one example of how candidate applications that are installed on individual client devices may be identified remotely, in accordance with various implementations.
[0018] Fig. 6 depicts a flow chart illustrating an example method of incorporating, into a transcript of a message exchange thread, selectable application links to one or more applications associated with content of the message exchange thread, in accordance with various implementations.
[0019] Fig. 7 schematically depicts an example architecture of a computer system.
Detailed Description [0020] Fig. 1 illustrates an environment in which one or more selectable application links may be incorporated into a message exchange thread. The example environment includes a plurality of client devices 106i_n and a knowledge system 102. Knowledge system 102 may be implemented in one or more computers that communicate, for example, through a network. Knowledge system 102 is an example of an information retrieval system in which the systems, components, and techniques described herein may be implemented and/or with which systems, components, and techniques described herein may interface.
[0021] A user may interact with knowledge system 102 via one or more client devices 106. Each client device 106 may be a computer coupled to the knowledge system 102 through one or more networks 110 such as a local area network (LAN) or wide area network (WAN) such as the Internet. Each client device 106 may be, for example, a desktop computing device, a laptop computing device, a tablet computing device, a mobile phone computing device, a computing device of a vehicle of the user (e.g., an in-vehicle communications system, an in-vehicle entertainment system, an in-vehicle navigation system), or a wearable apparatus of the user that includes a computing device (e.g., a watch of the user having a computing device, glasses of the user having a computing device). Additional and/or alternative client devices may be provided. In many instances, a participant (i.e. an individual user) in a message exchange thread likely operates/owns a plurality of client devices 106 that collectively form a coordinated “ecosystem” of client devices.
[0022] Each client device 106 may operate a variety of different applications, such as a message exchange client 107, and/or the applications APP A, APP B, APP C, APP D, and APP E depicted in Fig. 1. It can be seen that different hypothetical applications are installed on different client devices 106. For example, first client device 106i has APP A, APP B, and APP C installed. Another client device 106n also has APP A installed, but does not have APP B or APP C installed. However, the other client device 106n has APP D and APP E installed. APPs A-E are meant to generically refer to any application that can have an interface exposed to a user of the client device 106 in response to various events. An application interface may be “exposed” to a user (i.e. allow the user to interact with it) by loading/opening/launching the application (e.g., from non-volatile memory), or, if the application is already initiated/opened/launched in the background, bringing the application to the foreground (e.g., making the application window the active window). These apps (and any “candidate application” mentioned herein) can include but are not limited to applications for making reservations (e.g., restaurant reservations, hotel reservations, airline reservations, train reservations, event reservations, etc.), map applications, calendar applications, reminder applications, media consumption applications (e.g., music or video players), games, messaging apps, weather apps, real estate apps, health tracking apps, shopping apps, news apps, ride sharing apps, productivity applications such as word processors or spreadsheet applications, telephone applications, web browsers, and so forth.
[0023] Message exchange client 107 may come in various forms. In some implementations, message exchange client 107 may come in the form of a short messaging service (“SMS”) and/or multimedia messaging service (“MMS”) client, an online chat client (e.g., instant messenger, Internet relay chat, or “IRC,” etc.), a messaging application associated with a social network, an interface for conversing with a personal assistant module operating on a client device, and so forth. In some implementations, message exchange client 107 may be implemented within a webpage rendered by a web browser (not depicted). In various instances, two client devices operated by participants of a message exchange thread may run different message exchange clients 107 that nonetheless facilitate communication using a common communication protocol. For example, client device 106i may have one SMS application distributed by one vendor installed, and client device 106n may have another SMS application distributed by another vendor installed.
[0024] Each client device 106 and knowledge system 102 may include one or more memories for storage of data and software applications, one or more processors for accessing data and executing applications, and other components that facilitate communication over a network. The operations performed by one or more client devices 106 and/or knowledge system 102 may be distributed across multiple computer systems. Knowledge system 102 may be implemented as, for example, computer programs running on one or more computers in one or more locations that are coupled to each other through a network.
[0025] In various implementations, knowledge system 102 may include a message exchange engine 120, an application engine 122, an indexing engine 126, an information engine 130, a ranking engine 134, and an alternative query suggestion engine 136. In some implementations one or more of engines 120, 122, 126, 130, 134, and/or 136 may be omitted. In some implementations all or aspects of one or more of engines 120, 122, 126, 130, 134, and/or 136 may be combined. In some implementations, one or more of engines 120, 122, 126, 130, 134, and/or 136 may be implemented in a component that is separate from knowledge system 102. In some implementations, one or more of engines 120, 122, 126, 130, 134, and/or 136, or any operative portion thereof, may be implemented in a component that is executed by client device 106.
[0026] Application engine 122 may maintain an index 124 of applications installed or otherwise available to client devices 106. For example, application engine 122 may be integral with, or at least in communication with, a so-called “app store” from which users of client devices 106 download applications (or “apps”). In some implementations, when a user downloads and/or installs an app from application engine 122 (or from an app store in communication with application engine 122), a record may be added, e.g., in index 124, that the user has that application installed. In some implementations, these records may be periodically synchronized with client devices 106 to reflect, for instance, when users uninstall apps, when users download and install apps from sources other than an app store available to application engine 122, and so forth. As will be described below, application engine 122 is one of multiple components depicted in Fig. 1 that can participate in the process of identifying applications that are installed on client devices 106, so that suitable selectable application links may be inserted into transcripts of message exchange threads rendered in message exchange clients 107 operating on those client devices 106.
[0027] In some implementations, application engine 122 may be accessible by individual users through accounts the users set up. For example, a user may have an account with application engine 122 (or with an app store in communication with application engine 122) that the user can access using various credentials (e.g., username/password, retinal scan, fingerprint scan, etc.). Once the user is signed in to her account, she may download one or more apps to one or more client devices forming an ecosystem of client devices operated/owned by the user. In some instances, particular apps may only be available for download on the condition that the user purchase the app (or rights to use the app). In some implementations, when a user purchases an app, the user thereafter may have the right to download and install the app on multiple client devices 106 of an ecosystem of client devices 106 operated/owned by the user.
[0028] In various implementations, message exchange engine 120 may be configured to facilitate a message exchange thread between multiple message exchange clients 107 operating on multiple client devices 106 controlled by multiple participants. For example, message exchange engine 120 may maintain a global “transcript” of messages and other content participants exchange with each other in a message exchange thread. As used herein, a “transcript” may refer to a live record of text, images, sounds, and/or applets exchanged and/or viewed by one or more participants in a message exchange thread. In some implementations, a transcript of a message exchange thread may be updated in real time or near real time as the participants converse.
[0029] Indexing engine 126 may maintain an index 128 for use by knowledge system 102.
The indexing engine 126 processes documents and updates index entries in the index 128, for example, using conventional and/or other indexing techniques. For example, the indexing engine 126 may crawl one or more resources such as the World Wide Web and index documents accessed via such crawling. As another example, the indexing engine 126 may receive information related to one or documents from one or more resources such as web masters controlling such documents and index the documents based on such information. A document is any data that is associated with a document address. Documents include web pages, word processing documents, portable document format (PDF) documents, images, emails, calendar entries, videos, and web feeds, to name just a few. Each document may include content such as, for example: text, images, videos, sounds, embedded information (e.g., meta information and/or hyperlinks); and/or embedded instructions (e.g., ECMAScript implementations such as JavaScript).
[0030] Information engine 130 may maintain another index 132 that includes or facilitates access to non-document-specific information for use by the knowledge system 102. For example, knowledge system 102 may be configured to return information in response to search queries that appear to seek specific information. If a user searches for “Ronald Reagan’s birthday,” knowledge system 102 may receive, e.g., from information engine 130, the date, “February 6, 1911.” This information may be returned to the user as a part of search results that is separate from documents received from indexing engine 126. In various implementations, index 132 itself may contain information, or it may link to one or more other sources of information, such as online encyclopedias, almanacs, and so forth. In various implementations, index 128 or index 132 may include mappings between queries (or query terms) and documents and/or information.
[0031] In this specification, the term “database” and “index” will be used broadly to refer to any collection of data. The data of the database and/or the index does not need to be structured in any particular way and it can be stored on storage devices in one or more geographic locations. Thus, for example, the indices 124, 128, and 132 may include multiple collections of data, each of which may be organized and accessed differently.
[0032] Ranking engine 134 may use the indices 128 and/or 132 to identify documents and other information responsive to a search query, for example, using conventional and/or other information retrieval techniques. Ranking engine 134 may calculate scores for the documents and other information identified as responsive to a search query, for example, using one or more ranking signals. Each ranking signal may provide information about the document or information itself, the relationship between the document or information and the search query, and/or the relationship between the document or information and the user performing the search.
[0033] Alternative query suggestion engine 136 may use one or more signals and/or other information, such as a database of alternative query suggestions (not depicted) and/or information about a user of client device 106 (e.g., search history, GPS location, user attributes), to generate alternative query suggestions to provide to client device 106 along with any search results. As a user types consecutive characters of the search query, alternative query suggestion engine 136 may identify alternative queries that may be likely to yield results that are useful to the user. For instance, assume the client device 106 is located in Chicago, and has typed the characters, “restaur.” Alternative query suggestion engine 136 may, based on a location signal indicating that the client device 106 is in Chicago and a search history signal indicating a user’s preference for restaurants with live music, suggest a query, “restaurants in Chicago with live music.” As another example, for a user who has typed “Ronald Reagan’s birt,” alternative query suggestion engine 136 may, e.g., using techniques such as prefix matching, determine and suggest alternative queries such as “Ronald Reagan’s birthday,” “Ronald Reagan’s birthplace,” “Ronald Reagan’s birth control position,” and so forth. Alternative query suggestion engine 136 may provide other suggestions as well, such as spelling-corrected versions of a partially-formed search query.
[0034] In various implementations, one or more message exchange clients 107 and/or message exchange engine 120 may be configured to detect one or more cues emanating from a message exchange thread involving two or more message exchange clients 107. In various implementations, the one or more cues may trigger incorporation of one or more selectable links into the message exchange thread. Each of the one or more selectable applications links may link to an application that is distinct from the message exchange thread.
[0035] In some implementations, the cues may emanate from content of the message exchange thread. For example, one or more participants mentioning an entity or keyword/key phrase associated with one or more applications may constitute a cue to incorporate one or more selectable application links to the one or more applications into the message exchange thread. Another example of a cue is a statement directed by one or more participants to another that matches a pattern or template associated with an application. In various implementations, the template may be associated with a particular application. For instance, the template may have been generated from a corpus of messages that includes messages from prior message exchange threads that lead to user invocation or activation of a particular application. In some implementations, the template may be associated with a cluster of messages from a corpus that share one or more attributes, such as the messages including the same or similar fixed and “transient” text. In yet other implementations, cues may be more explicit. For example, a user could input a message into the thread that is directed at her personal assistant module, e.g., “Hey BOT, what’s the weather in San Francisco?” This may prompt the personal assistant module to incorporate one or more application links into the transcript of the message exchange thread, such as a link to a weather app that is already preloaded with San Francisco weather.
[0036] To determine which selectable application links are to be incorporated into transcripts of the message exchange thread that are displayed on client devices 106, one or more message exchange clients 107, and/or message exchange engine 120 or application engine 122, may identify one or more candidate applications that are installed on each client device 106 operated by a participant in the message exchange thread. In various implementations, the one or more identified candidate applications may be associated with content of the message exchange thread. In some implementations, the one or more cues discussed above may be associated with one or more applications.
[0037] As one example, if the participants are discussing music and/or musicians, the one or more candidate applications may be applications associated with playing, recording, and or producing music. If the participants are discussing movies, television, and/or actors/directors, then the one or more candidate applications may be associated with playing movies/television, or with searchable databases of cast/crew associated with movie and television productions. If the participants are discussing travelling, then the one or more candidate applications may be associated with making travel reservations for hotels, airlines, trains, boats, rental cars, etc. If the participants are discussing restaurants, the one or more candidate applications may be associated with making restaurant reservations, restaurant reviews, calling restaurants, and so forth.
[0038] Once the one or more candidate applications are identified, one or more selectable application links (also referred to as “selectable links”) may be incorporated into a transcript of the message exchange thread that is displayed in a graphical user interface of a message exchange client 107 operating on a given client computing device 106. In various implementations, each selectable link may be operable by a message exchange thread participant to cause the corresponding client device 106 to expose to the participant an interface associated with a respective candidate application. For example, if a respective candidate application is running in the background (e.g., already loaded in some form into volatile memory), then operation of the corresponding selectable link may cause the candidate application to be made active so that the participant is exposed to, and hence can interact with, an interface (graphical, audible, haptic, etc.) of the respective candidate application. If a respective is installed but not running in the background, then operation of the corresponding selectable link may cause the candidate application to be opened or “launched,” e.g., from nonvolatile memory.
[0039] Selectable application links may be incorporated into a message exchange thread between multiple message exchange clients 107 in a variety of ways. In some implementations, message exchange engine 120 may request that at least one message exchange client 107 participating in the message exchange thread insert one or more selectable application links into a transcript of the ongoing message exchange thread that is displayed in a graphical user interface. In some scenarios, the selectable graphical links may be incorporated into transcripts rendered by more than one message exchange client 107, such as in transcripts rendered by all message exchange clients 107 participating in the message exchange thread.
[0040] Selectable application links that are incorporated into a message exchange thread (and hence, into a transcript of the thread displayed by at least one message exchange client 107) may come in various forms. In some implementations, a selectable application link may come in the form of a graphical icon or animation associated with the linked-to application. In some implementations, the selectable application link may include text that conveys information about the application, or an action that can be taken using the application (e.g., “get directions to location”). In various implementations, the selectable link may be rendered as part of the transcript just like any other message of the message exchange thread. As such, the selectable application link may “move up” as additional messages are appended to the message exchange thread.
[0041] In some implementations, knowledge system 102 may have, e.g., as part of information engine 130 and/or another component, a so-called knowledge base that contains records of known entities (e.g., people, places, things) and relationships between the known entities. In some implementations, such a knowledge base may be implemented, e.g., in index 132, as a graph in which nodes represent entities and edges represent relationships between entities, although this is not required. In some such implementations, information about entities from such a knowledge base may be made available to components such as message exchange engine 120 and/or one or more message exchange clients 107. Those components may then use the entity information to identify relevant applications, prepopulate one or more input fields or other data points usable to transition between different states of a state machine associated with the identified candidate applications, and so forth.
[0042] In some implementations, the knowledge base may be used, e.g., by one or more of engines 120, 122, 126, and/or 130, to identify a first entity mentioned in one or more messages exchanged between the two or more users as part of the message exchange thread. Information related to the entity that is obtained, for instance, in response to a search query about the entity, may then be used to identify one or more candidate applications. For example, suppose a user submits into the message exchange thread a message such as “Babe Ruth was the greatest!” “Babe Ruth” may be identified, e.g., by information engine 130 based on a knowledge base stored in index 132, along with one or more attributes of Babe Ruth, and/or one or more related entities, such as one or more teams he played for (e.g., the New York Yankees), his family members, his teammates, years active, years alive, and so forth. One or more pieces of this information may then be used to identify one or more candidate applications or applications “categories” that may be responsive or otherwise relevant to the mention of the entity. In some implementations, pieces of this information may be used to “prepopulate” one or more data points (e.g., input parameters, data entry fields, data points that cause transition between states of a state machine, etc.) associated with a linked-to application. That way, when the user actuates a selectable application link, the linked-to application may open in a state in which the one or more data points are already populated.
[0043] Fig. 2 depicts an example client device 206 operated by a user named Sven. Client device 206 includes a graphical user interface 250 associated with a message exchange client (not depicted specifically in Fig. 2) that operates on client device 206. Graphical user interface 250 displays a transcript 252 of a message exchange thread between Sven and two other users, John and Dennis. Graphical user interface 250 also includes a text input field 254 that Sven can use to input text or other content into the message exchange thread, e.g., in response to previous statements by the other two. In this example, John has stated that he is hungry. Dennis agreed and posed the question to Sven, “where should we go?” Sven (“You” in Fig. 2 because this is Sven’s client device 206) responded by proposing a restaurant called “Hypothetical Cafe.” [0044] At this point in the conversation, the questions/statements posed by John and Dennis, as well as the suggestion from Sven, may lead to a plurality of selectable application links 256i_3 to be rendered in the transcript 252. First selectable application link 256i links to a telephone application. If Sven selects this link, an interface of a telephone app installed on client device 206 may be exposed to Sven. For example, the telephone app may be launched, and/or the telephone app may be provided the active window (which in many mobile devices is a single window). In some implementations, the telephone app may be pre-dialed to call a telephone number associated with Hypothetical Cafe. A third selectable application link 2563 links to a mapping application, e.g., with directions to Hypothetical Cafe preloaded.
[0045] Second selectable link 2562 links to a ‘GRAB A TABLE” application that is operable by a participant to make a reservation at Hypothetical Cafe. If Sven or another participant selects that link, an interface (e.g., a graphical, interactive voice response, haptic, etc.) associated with the “GRAB A TABLE” application may be exposed to Sven and/or to the other participant that selected the link. In some implementations, the “GRAB A TABLE” app may have various data points such as inputs prepopulated with data obtained from various sources.
[0046] In some implementations, the data points may be prepopulated with contextual data associated with one or more participants of the message exchange thread. Contextual data associated with the one or more message exchange thread participants may come from a variety of sources, such as from information signals emanating from the content of the message exchange thread (e.g., a user mentions being not hungry, and hence may not be counted as a potential attendee) or from client devices operated by the various participants. For example, global positioning system (“GPS”) coordinates provided by a client device operated by a particular participant may reveal that the particular participant is located too far away from
Hypothetical Cafe to feasibly attend lunch at that location in a half hour. That participant may not be included in the number of diners. The same might be true if a particular participant indicates in the message exchange thread that he or she cannot attend, does not like the menu, etc.
[0047] In Fig. 2, the selectable links 256i_3 are rendered within a “bubble” that represents a message incorporated into the thread by Sven. However, this is not meant to be limiting. In various implementations, selectable application links may be rendered elsewhere in a transcript, e.g., as standalone links that are not part of any participant’s bubble. In some implementations, when selectable links are rendered with bubbles, they may simply be presented as text, e.g., purporting to be from a personal assistant module involved in the message exchange thread.
[0048] An example of an interface 260 associated with a “GRAB A TABLE” application (which is merely a hypothetical application described herein for demonstrative purposes) that may be exposed to Sven in response to Sven operating selectable application link 2562 is depicted in Fig. 3. In this example, the “GRAB A TABLE” interface 260 has been rendered on Sven’s client device 206 with various data points (e.g., input fields) prepopulated. For example, because there were three participants (John, Dennis, Sven) in the message exchange thread, and because no information signals associated with the content of the thread or the individual participants suggest that any of them will not attend lunch, the reservation has been queued up for three diners.
[0049] The time of reservation has been prepopulated with 12:00PM. This may be because, for instance, the participants would need sufficient time to reach the restaurant after exchanging the messages discussing lunch (which were exchanged at 11:03AM, 11:04AM, and 11:05AM). The time of the reservation additionally or alternatively may have been prepopulated with 12:00PM because that is next time of day people commonly have a meal. Had the participants been discussing eating at, say, 3:30PM, then the time for the reservation may have been prepopulated with a time more commonly associated with dinner, such as 6:30PM. The name of the reservation is “SVEN” because Sven was the participant that selected one of the selectable application links in Fig. 2. However, had similar links been presented to John and/or Dennis on their own client devices, and had either of them operated the selectable application link, then the reservation may have been prepopulated with their names instead.
[0050] As noted above, one or more selectable application links may be selectively rendered in a transcript displayed by a client device based at least in part on resources available on the client device. For example, in some implementations, only selectable application links to installed applications may be displayed on a client device. Fig. 4 depicts various components of the environment depicted in Fig. 1 and demonstrates how one or more components that is integral with (e.g., software installed on, a hardware component of) a client device 406 may perform the identification of applications installed on the client device 406. In this example, first client device 406i has installed, among other things, the (hypothetical) reservation client application 462 called “GRAB A TABLE” that was discussed previously. Second client device 4002 has installed, among other things, a different (hypothetical) reservation client application 464 called “READY TO EAT.” [0051] Suppose a first message exchange client 4071 operating on a first client device 406i is being operated to participate in a message exchange thread that also involves a second message exchange client 4072 operating on a second client device 4062. Suppose further that the message exchange thread currently includes a discussion about where to eat, similar to Fig. 3. Based on this discussion (i.e., on one or more cues from the discussion that relate to making a restaurant reservation), an application category of “RESERVATION” has been identified, e.g., by message exchange engine 120, and an indication of this category has been provided to client devices 406i and 4062.
[0052] Once message exchange clients 407i_2 receive the indication of the “RESERVATION” application category, each can identify one or more locally-installed applications that match the “RESERVATION” category. For example, first client device 406i has the “GRAB A TABLE” client 462 installed, which first message exchange client 407i may identify as a “RESERVATION” application. Consequently, first message exchange client 407i may incorporate, into a transcript of the message exchange thread it displays, a selectable application link to the “GRAB A TABLE” client 462. Likewise, second client device 4062 has the “READY TO EAT” client 464 installed, which second message exchange client 4072 may identify as a “RESERVATION” application. Consequently, second message exchange client 4072 may incorporate, into a transcript of the message exchange thread it displays, a selectable application link to the “READY TO EAT” client 464.
[0053] In some implementations, a client device may have multiple applications installed that match a particular application category. For example, a single client device may have both the “GRAB A TABLE” client 462 and the “READY TO EAT” client 464 depicted in Fig. 4. In some implementations, selectable application links to both applications may be incorporated into the message exchange thread transcript on that client device. In some versions, the multiple selectable application links may be presented in an order that is selected based on a variety of information signals, such as frequency of use of each client. If “GRAB A TABLE” client 462 is used more frequently than “READY TO EAT” client 464, a selectable application link to client 462 may be presented first, more prominently, more conspicuously, etc., than a selectable application link to client 464.
[0054] In some implementations in which multiple applications installed on a single client device match an application category, a message exchange client 407 or other component may analyze how frequently those multiple applications are used to determine whether each warrants incorporation of a selectable application link into a transcript of a message exchange thread. For example, a frequency of use associated with a given application may need to satisfy a predetermined threshold, in isolation or relative to other matching installed applications, in order to have a corresponding selectable application link incorporated into message exchange thread transcripts. If the application is not used frequently, or even at all (e.g., if the application was installed by the equipment manufacturer and never opened by the user), then no selectable application link to the application may be incorporated into transcripts of message exchange threads.
[0055] Fig. 5 depicts an alternative scenario to Fig. 4. Here, identification of installed applications on client devices 506i_n of a coordinated ecosystem 570 operated by a participant may be performed at least in part remotely from the client devices 506i_n· In particular, application engine 122 (which was described above and may be integral with, or at least in communication with, an app store) may be configured to determine, based on records in index 124, what applications are installed on which client devices 506 of ecosystem 570.
[0056] Suppose for this example that the user/participant that operates client devices 506]_N of ecosystem 570 owns the rights to download and use applications APP A, APP B, APP C, APP D, and APP E. On a first client device 506i, which may be, for instance, the user’s mobile phone, the user has installed APP A, APP B, and APP C. APP D and APP E are not installed on first client device 5061, as indicated by their placement below the line, but they may be available for download and/or installation because the user has previously purchased the right to do so. On a second client device 506n, which may be, for instance, the user’s smart watch, the user has installed APP A, APP D, and APP E. APP B and APP C are not installed on second client device 506n, as indicated by their placement below the line, but they may be available for download and/or installation because the user has previously purchased the right to do so.
[0057] In the example of Fig. 5, message exchange engine 120 may consult with application engine 122 in order to determine which applications are installed on which client devices 506. When one or more cues to incorporate one or more selectable application links into a message exchange thread are detected, message exchange engine 120 may request that application engine 122 identify one or more applications installed on the given client device 506. Message exchange engine 120 may then be configured to download, to the given client device 506, data indicative of one or more selectable application links to applications installed on the given client device that are also associated with content of the message exchange thread. In various implementations, the given client device 506 may automatically incorporate the one or more selectable application links into a message exchange thread transcript, or it may selectively incorporate into the transcript a subset of the one or more selectable application links in response to one or more signals (e.g., frequency of use of the linked-to application, whether the linked-to application is still installed, etc.). In some implementations, if a given application is not installed but available to a client device (as is the case with APP D and APP E on first client device 5060, then an application link that is selectable to fully install the application onto the client device 506 may be incorporated into a transcript of the message exchange thread displayed on that client device.
[0058] The above-described examples demonstrated how selectable application links may link to specific applications. However, this is not meant to be limiting. In some implementations, selectable application links may link to documents or other online content that is relevant to the discussion and that is accessible using any number of applications. For example, in some implementations, a selectable application link may link to a web address or other online identifier. In some such implementations, operation of the selectable application link at a client device may expose a favorite installed web browser to the user. In various implementations, the web browser may have already loaded a web page or other content that is relevant to the content of the message exchange thread, such as an interactive web page with functionality that corresponds to that of an application that is not installed on the client device.
[0059] Referring now to Fig. 6, one example method 600 of selectively incorporating selectable application links into a message exchange thread with multiple participants is described. For convenience, the operations of the flow chart are described with reference to a system that performs the operations. This system may include various components of various computer systems, including various engines and/or client applications described herein. Moreover, while operations of method 600 are shown in a particular order, this is not meant to be limiting. One or more operations may be reordered, omitted or added.
[0060] At block 602, the system may detect one or more cues emanating from an ongoing message exchange thread, e.g., between multiple participants operating multiple client devices. Detection of the one or more cues may trigger incorporation into the message exchange thread of one or more selectable links to applications that are distinct from the message exchange thread. Examples of non-message-exchange-related applications were described previously.
[0061] At block 604, the system may identify one or more candidate applications installed on a given client device operated by a participant in the message exchange thread. As described above, in some implementations, the candidate applications may be those that are deemed somehow relevant to content of the message exchange thread. Figs. 2-3 depict one example in which message exchange thread participants are discussing dining out, and as a consequence, applications that are associated with dining out (e.g., a phone dialer to call a restaurant, a reservation application, a map application, etc.) are identified. Other examples are also described above. In some implementations, the identifying of block 604 may be performed one or more of the processors that is remote from a given client computing device, and data indicative of the one or more selectable links may be downloaded to the given client device. In other implementations, the identifying of block 604 may be performed by one or more of the processors that is integral with the given client computing device.
[0062] In some scenarios, one or more candidate applications most suitable for incorporation may not be installed on the given client computing device. However, some candidate applications (e.g., restaurant/airline reservation applications, mapping applications, etc.) may have corresponding webpages that include corresponding functionality. For instance, a user could navigate a web browser to the “GRAB A TABLE” website and make a reservation much in the same way as a user could make a reservation using the “GRAB A TABLE” app. Accordingly, in some implementations, at optional block 606, the system may identify, as a candidate application, a web browser or other general-purpose application installed on the given client computing device in response to a determination that a given application associated with content of the message exchange thread is not installed on the given client computing device.
[0063] At block 608, the system may incorporate one or more selectable application links into a transcript of the message exchange thread that is rendered by one or more message exchange clients operating on one or more client devices. As noted above, in some implementations, selectable links may be visible only to the user that made a statement in the message exchange thread that triggered incorporation of the links. In other implementations, if one user makes a statement that triggers incorporation of selectable application links into the message exchange thread, multiple participants of the message exchange, including but not limited to all participants, may have a selectable link incorporated into their respective transcripts. In instances in which a general purpose application such as a web browser is identified at block 606, in various implementations, the system may incorporate a selectable link to an interactive webpage that includes functionality that corresponds to functionality of the given application that was determined not to be installed on the given client computing device. Additionally or alternatively, in various implementations, the system may incorporate a selectable link to download and/or install the application that was determined not to be installed on the given client computing device.
[0064] Fig. 7 is a block diagram of an example computer system 710. Computer system 710 typically includes at least one processor 714 which communicates with a number of peripheral devices via bus subsystem 712. These peripheral devices may include a storage subsystem 726, including, for example, a memory subsystem 725 and a file storage subsystem 726, user interface output devices 720, user interface input devices 722, and a network interface subsystem 716.
The input and output devices allow user interaction with computer system 710. Network interface subsystem 716 provides an interface to outside networks and is coupled to corresponding interface devices in other computer systems.
[0065] User interface input devices 722 may include a keyboard, pointing devices such as a mouse, trackball, touchpad, or graphics tablet, a scanner, a touchscreen incorporated into the display, audio input devices such as voice recognition systems, microphones, and/or other types of input devices. In general, use of the term "input device" is intended to include all possible types of devices and ways to input information into computer system 710 or onto a communication network.
[0066] User interface output devices 720 may include a display subsystem, a printer, a fax machine, or non-visual displays such as audio output devices. The display subsystem may include a cathode ray tube (CRT), a flat-panel device such as a liquid crystal display (LCD), a projection device, or some other mechanism for creating a visible image. The display subsystem may also provide non-visual display such as via audio output devices. In general, use of the term "output device" is intended to include all possible types of devices and ways to output information from computer system 710 to the user or to another machine or computer system.
[0067] Storage subsystem 726 stores programming and data constructs that provide the functionality of some or all of the modules described herein. For example, the storage subsystem 726 may include the logic to perform selected aspects of method 600, and/or to implement one or more of message exchange client 107, message exchange engine 120, application engine 122, indexing engine 126, information engine 130, ranking engine 134, and/or alternative query suggestion engine 136.
[0068] These software modules are generally executed by processor 714 alone or in combination with other processors. Memory 725 used in the storage subsystem 726 can include a number of memories including a main random access memory (RAM) 730 for storage of instructions and data during program execution and a read only memory (ROM) 732 in which fixed instructions are stored. A file storage subsystem 726 can provide persistent storage for program and data files, and may include a hard disk drive, a floppy disk drive along with associated removable media, a CD-ROM drive, an optical drive, or removable media cartridges. The modules implementing the functionality of certain implementations may be stored by file storage subsystem 726 in the storage subsystem 726, or in other machines accessible by the processor(s) 714.
[0069] Bus subsystem 712 provides a mechanism for letting the various components and subsystems of computer system 710 communicate with each other as intended. Although bus subsystem 712 is shown schematically as a single bus, alternative implementations of the bus subsystem may use multiple busses.
[0070] Computer system 710 can be of varying types including a workstation, server, computing cluster, blade server, server farm, or any other data processing system or computing device. Due to the ever-changing nature of computers and networks, the description of computer system 710 depicted in Fig. 7 is intended only as a specific example for purposes of illustrating some implementations. Many other configurations of computer system 710 are possible having more or fewer components than the computer system depicted in Fig. 7.
[0071] In situations in which the systems described herein collect personal information about users, or may make use of personal information, the users may be provided with an opportunity to control whether programs or features collect user information (e.g., information about a user’s social network, social actions or activities, profession, a user’s preferences, or a user’s current geographic location), or to control whether and/or how to receive content from the content server that may be more relevant to the user. Also, certain data may be treated in one or more ways before it is stored or used, so that personal identifiable information is removed. For example, a user’s identity may be treated so that no personal identifiable information can be determined for the user, or a user’s geographic location may be generalized where geographic location information is obtained (such as to a city, ZIP code, or state level), so that a particular geographic location of a user cannot be determined. Thus, the user may have control over how information is collected about the user and/or used.
[0072] While several implementations have been described and illustrated herein, a variety of other means and/or structures for performing the function and/or obtaining the results and/or one or more of the advantages described herein may be utilized, and each of such variations and/or modifications is deemed to be within the scope of the implementations described herein. More generally, all parameters, dimensions, materials, and configurations described herein are meant to be exemplary and that the actual parameters, dimensions, materials, and/or configurations will depend upon the specific application or applications for which the teachings is/are used. Those skilled in the art will recognize, or be able to ascertain using no more than routine experimentation, many equivalents to the specific implementations described herein. It is, therefore, to be understood that the foregoing implementations are presented by way of example only and that, within the scope of the appended claims and equivalents thereto, implementations may be practiced otherwise than as specifically described and claimed. Implementations of the present disclosure are directed to each individual feature, system, article, material, kit, and/or method described herein. In addition, any combination of two or more such features, systems, articles, materials, kits, and/or methods, if such features, systems, articles, materials, kits, and/or methods are not mutually inconsistent, is included within the scope of the present disclosure.
Claims (24)
1. A computer-implemented method, comprising: detecting, by one or more processors, one or more cues emanating from a message exchange thread involving two or more message exchange clients, wherein the one or more cues trigger incorporation, into the message exchange thread, of one or more selectable links to one or more applications distinct from the message exchange thread; identifying, by one or more of the processors, one or more candidate applications that are installed on a given client computing device operated by a participant in the message exchange thread, wherein the one or more candidate applications are associated with content of the message exchange thread; and incorporating, by one or more of the processors, into a transcript of the message exchange thread that is displayed in a graphical user interface of a message exchange client operating on the given client computing device, one or more selectable links, wherein each selectable link is operable by the participant to cause the given client computing device to expose to the participant an interface associated with a respective candidate application.
2. The computer-implemented method of claim 1, wherein the identifying is performed by one or more of the processors that is remote from the given client computing device, and data indicative of the one or more selectable links is downloaded to the given client device.
3. The computer-implemented method of claim 2, further comprising selecting, by one or more processors of the given client device, a subset of the downloaded one or more selectable links for display based on one or more information signals.
4. The computer-implemented method of claim 3, wherein the one or more information signals comprise a frequency of use of the one or more candidate applications.
5. The computer-implemented method of claim 1, wherein the identifying is performed by one or more of the processors that is integral with the given client computing device.
6. The computer-implemented method of any preceding claim, wherein the one or more cues emanate from the content of the message exchange thread.
7. The computer-implemented method of any preceding claim, wherein the one or more cues include a keyword or key phrase associated with a particular application.
8. The computer-implemented method of any preceding claim, wherein the one or more cues include a statement directed from one participant of the message exchange thread to another participant that matches a pattern associated with a particular application.
9. The computer-implemented method of claim 8, wherein the one or more cues include a match between the statement and a template associated with the particular application, wherein the template is generated from a corpus of messages that includes messages from prior message exchange threads, and wherein the template is associated with a cluster of messages from the corpus that share one or more attributes.
10. The computer-implemented method of any preceding claim, wherein the identifying comprises identifying, as a candidate application, a web browser installed on the given client computing device in response to a determination that a given application associated with content of the message exchange thread is not installed on the given client computing device; and wherein the incorporating comprises incorporating, into the transcript, a selectable link to an interactive webpage, wherein the interactive webpage includes functionality that corresponds to functionality of the given application that is not installed on the given client computing device.
11. The computer-implemented method of any of claims 1 to 9, wherein the identifying comprises identifying, as a candidate application, a web browser installed on the given client computing device in response to a determination that a given application associated with content of the message exchange thread is not installed on the given client computing device; and wherein the incorporating comprises incorporating, into the transcript, a selectable link to a webpage associated with downloading an installer of the given application.
12. The computer-implemented method of any preceding claim, further comprising: determining, by one or more of the processors, a context of one or more participants in the message exchange thread; and prepopulating one or more data points associated with at least one of the one or more candidate applications based on the determined context.
13. The computer-implemented method of claim 12, wherein determining the context comprises obtaining, from one or more of the client devices, one or more contextual signals.
14. The computer-implemented method of claim 13, wherein the one or more contextual signals comprises a location of at least one participant in the message exchange thread.
15. The computer-implemented method of any preceding claim, further comprising identifying, by one or more of the processors, an application category associated with the one or more cues, wherein the one or more candidate applications comprise a candidate application that is associated with the application category and also is installed on the given client computing device.
16. The computer-implemented method of any preceding claim, wherein the one or more cues comprise mention of an entity.
17. The computer-implemented method of claim 16, further comprising matching the mentioned entity with one or more known entities in a knowledge base of entities and relationships therebetween.
18. A system comprising one or more processors and one or more memories operably coupled with the one or more processors, wherein the one or more memories store instructions that, in response to execution of the instructions by one or more processors, cause the one or more processors to: detect one or more cues emanating from a message exchange thread involving two or more message exchange clients, wherein the one or more cues trigger incorporation, into the message exchange thread, of one or more selectable links to one or more applications distinct from the message exchange thread; identify one or more candidate applications that are installed on a given client computing device operated by a participant in the message exchange thread, wherein the one or more candidate applications are associated with content of the message exchange thread; and incorporate into a transcript of the message exchange thread that is displayed in a graphical user interface of a message exchange client operating on the given client computing device, one or more selectable links, wherein each selectable link is operable by the participant to cause the given client computing device to expose to the participant an interface associated with a respective candidate application.
19. The system of claim 18, wherein the identifying is performed by one or more of the processors that is remote from the given client computing device, and data indicative of the one or more selectable links is downloaded to the given client device, and the system further comprises instructions to selecting a subset of the downloaded one or more selectable links for display based on one or more information signals.
20. The system of claim 18, wherein the one or more memories store instructions that, in response to execution of the instructions by one or more processors, cause the one or more processors to perform the method of any of claims 2 to 17.
21. At least one non-transitory computer-readable medium comprising instructions that, in response to execution of the instructions by one or more processors, cause the one or more processors to perform the following operations: detecting one or more cues emanating from a message exchange thread involving two or more message exchange clients, wherein the one or more cues trigger incorporation, into the message exchange thread, of one or more selectable links to one or more applications distinct from the message exchange thread; identifying one or more candidate applications that are installed on a given client computing device operated by a participant in the message exchange thread, wherein the one or more candidate applications are associated with content of the message exchange thread; and incorporating into a transcript of the message exchange thread that is displayed in a graphical user interface of a message exchange client operating on the given client computing device, one or more selectable links, wherein each selectable link is operable by the participant to cause the given client computing device to expose to the participant an interface associated with a respective candidate application.
22. The at least one non-transitory computer-readable medium of claim 21, comprising instructions that, in response to execution of the instructions by one or more processors, cause the one or more processors to perform the method of any of claims 2 to 17.
23. Apparatus configured to perform the method of any of claims 1 to 17.
24. A computer program comprising machine readable instructions that when executed by computing apparatus cause the method of any of claims 1 to 17 to be performed.
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US15/157,279 US10263933B2 (en) | 2016-05-17 | 2016-05-17 | Incorporating selectable application links into message exchange threads |
Publications (2)
Publication Number | Publication Date |
---|---|
GB201621385D0 GB201621385D0 (en) | 2017-02-01 |
GB2550633A true GB2550633A (en) | 2017-11-29 |
Family
ID=57838492
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
GB1621385.2A Withdrawn GB2550633A (en) | 2016-05-17 | 2016-12-15 | Incorporating selectable application links into message exchange threads |
Country Status (8)
Country | Link |
---|---|
US (2) | US10263933B2 (en) |
EP (1) | EP3458976B1 (en) |
JP (1) | JP6640384B2 (en) |
KR (1) | KR102215471B1 (en) |
CN (1) | CN107391522B (en) |
DE (2) | DE102016125509A1 (en) |
GB (1) | GB2550633A (en) |
WO (1) | WO2017200581A1 (en) |
Families Citing this family (17)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
KR102338357B1 (en) | 2016-05-18 | 2021-12-13 | 애플 인크. | Applying acknowledgement of options in a graphical messaging user interface |
US11320982B2 (en) | 2016-05-18 | 2022-05-03 | Apple Inc. | Devices, methods, and graphical user interfaces for messaging |
US10785175B2 (en) | 2016-06-12 | 2020-09-22 | Apple Inc. | Polling extension application for interacting with a messaging application |
US10852912B2 (en) * | 2016-06-12 | 2020-12-01 | Apple Inc. | Image creation app in messaging app |
US10595169B2 (en) * | 2016-06-12 | 2020-03-17 | Apple Inc. | Message extension app store |
US10368208B2 (en) | 2016-06-12 | 2019-07-30 | Apple Inc. | Layers in messaging applications |
US11630688B2 (en) * | 2017-02-02 | 2023-04-18 | Samsung Electronics Co., Ltd. | Method and apparatus for managing content across applications |
US10791077B2 (en) | 2017-08-08 | 2020-09-29 | Snap Inc. | Application-independent messaging system |
US20200005166A1 (en) * | 2018-07-02 | 2020-01-02 | The Climate Corporation | Automatically assigning hybrids or seeds to fields for planting |
JP6928033B2 (en) * | 2018-08-31 | 2021-09-01 | ファナック株式会社 | Knowledge information service system |
CN110297976A (en) * | 2019-06-26 | 2019-10-01 | 百度在线网络技术（北京）有限公司 | Recommended method, device, equipment and readable storage medium storing program for executing based on cloud retrieval |
US11134036B2 (en) | 2019-07-05 | 2021-09-28 | Snap Inc. | Event planning in a content sharing platform |
AU2020376970A1 (en) * | 2019-10-28 | 2022-04-14 | Nui Markets Australia Pty Limited | Primary production trading platform system and interface |
CN114936000B (en) * | 2019-12-26 | 2024-02-13 | 上海擎感智能科技有限公司 | Vehicle-machine interaction method, system, medium and equipment based on picture framework |
US11223594B2 (en) * | 2020-01-15 | 2022-01-11 | Thierry Excoffier | Secret identity pairing and gradual disclosure |
US11411900B2 (en) | 2020-03-30 | 2022-08-09 | Snap Inc. | Off-platform messaging system |
US11973730B2 (en) | 2022-06-02 | 2024-04-30 | Snap Inc. | External messaging function for an interaction system |
Citations (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6976082B1 (en) * | 2000-11-03 | 2005-12-13 | At&T Corp. | System and method for receiving multi-media messages |
GB2470751A (en) * | 2009-06-04 | 2010-12-08 | Iq2 Ltd | Delivering messages/content by determining if a target device is equipped with the appropriate application to enable the message/content to be conveyed. |
US20140244243A1 (en) * | 2013-02-25 | 2014-08-28 | Pantech Co., Ltd. | Apparatus and method for providing input prediction service |
WO2016187149A1 (en) * | 2015-05-15 | 2016-11-24 | Apple Inc. | Virtual assistant in a communication session |
Family Cites Families (46)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20050223073A1 (en) | 2000-05-04 | 2005-10-06 | Malik Dale W | Attaching applets to messaging communications |
US20040215467A1 (en) | 2001-01-03 | 2004-10-28 | Coffman Kathryn D. | Method and system for electronic document handling, such as for requests for quotations under an electronic auction |
US20020138588A1 (en) | 2001-03-20 | 2002-09-26 | Richard Leeds | System and method for adaptive forums communication |
US7406659B2 (en) | 2001-11-26 | 2008-07-29 | Microsoft Corporation | Smart links |
US20060010125A1 (en) | 2004-05-21 | 2006-01-12 | Bea Systems, Inc. | Systems and methods for collaborative shared workspaces |
US7451188B2 (en) | 2005-01-07 | 2008-11-11 | At&T Corp | System and method for text translations and annotation in an instant messaging session |
US7483899B2 (en) | 2005-01-11 | 2009-01-27 | International Business Machines Corporation | Conversation persistence in real-time collaboration system |
DE102005044857A1 (en) * | 2005-09-13 | 2007-03-22 | Siemens Ag | Method and arrangement for operating a group service in a communication network |
US9318108B2 (en) | 2010-01-18 | 2016-04-19 | Apple Inc. | Intelligent automated assistant |
US20080201434A1 (en) | 2007-02-16 | 2008-08-21 | Microsoft Corporation | Context-Sensitive Searches and Functionality for Instant Messaging Applications |
US8270995B1 (en) * | 2007-04-26 | 2012-09-18 | Nextel Communications, Inc. | Composite application for group-based activity reservations |
US8504621B2 (en) | 2007-10-26 | 2013-08-06 | Microsoft Corporation | Facilitating a decision-making process |
US7890525B2 (en) | 2007-11-14 | 2011-02-15 | International Business Machines Corporation | Foreign language abbreviation translation in an instant messaging system |
CN101217508B (en) | 2007-12-29 | 2010-06-23 | 腾讯科技（深圳）有限公司 | A network agent system and the corresponding realizing methods based on instant communication platform |
US20120010995A1 (en) | 2008-10-23 | 2012-01-12 | Savnor Technologies | Web content capturing, packaging, distribution |
US9031216B1 (en) | 2009-03-05 | 2015-05-12 | Google Inc. | In-conversation search |
US10706373B2 (en) * | 2011-06-03 | 2020-07-07 | Apple Inc. | Performing actions associated with task items that represent tasks to perform |
US20110035453A1 (en) | 2009-08-06 | 2011-02-10 | Oracle International Corporation | Automatic rules-based messaging system based on analysis of text and/or associated metadata |
US8667193B2 (en) * | 2011-04-29 | 2014-03-04 | Qualcomm Incorporated | Non-ported generic device (software managed generic device) |
WO2012154440A2 (en) | 2011-05-06 | 2012-11-15 | Evans Michael Shepherd | System and method for including advertisements in electronic communications |
US9253137B1 (en) | 2011-06-24 | 2016-02-02 | Google Inc. | Concurrent display of conversation messages and social network posts by conversation message authors |
GB2495222B (en) * | 2011-09-30 | 2016-10-26 | Apple Inc | Using context information to facilitate processing of commands in a virtual assistant |
US9082402B2 (en) | 2011-12-08 | 2015-07-14 | Sri International | Generic virtual personal assistant platform |
WO2013089684A2 (en) | 2011-12-13 | 2013-06-20 | Empire Technology Development, Llc | Graphics render matching for displays |
US20130179265A1 (en) * | 2012-01-05 | 2013-07-11 | Christopher C. Winslade | Location-based promotion delivery system and method |
US20130218885A1 (en) | 2012-02-22 | 2013-08-22 | Salesforce.Com, Inc. | Systems and methods for context-aware message tagging |
AU2012201460A1 (en) | 2012-03-12 | 2013-09-26 | Tdm Projectservice Service Pty Ltd | Mr Pay it |
US9685160B2 (en) | 2012-04-16 | 2017-06-20 | Htc Corporation | Method for offering suggestion during conversation, electronic device using the same, and non-transitory storage medium |
US20130326354A1 (en) | 2012-06-01 | 2013-12-05 | James Anderson | Systems and Methods for Selection and Personalization of Content Items |
JP6231315B2 (en) * | 2012-07-20 | 2017-11-15 | 公立大学法人広島市立大学 | Information processing device |
US9196008B2 (en) * | 2012-08-13 | 2015-11-24 | Facebook, Inc. | Generating guest suggestions for events in a social networking system |
US9135555B2 (en) * | 2012-09-28 | 2015-09-15 | Facebook, Inc. | Enhanced predictive input utilizing a typeahead process |
US9338403B2 (en) | 2013-01-23 | 2016-05-10 | Google Inc. | Persistent conversations |
US9607617B2 (en) | 2013-04-02 | 2017-03-28 | Nuance Communications, Inc. | Concept cloud in smart phone applications |
KR101959188B1 (en) | 2013-06-09 | 2019-07-02 | 애플 인크. | Device, method, and graphical user interface for enabling conversation persistence across two or more instances of a digital assistant |
US9514748B2 (en) * | 2014-01-15 | 2016-12-06 | Microsoft Technology Licensing, Llc | Digital personal assistant interaction with impersonations and rich multimedia in responses |
KR102249197B1 (en) | 2014-05-31 | 2021-05-10 | 삼성전자주식회사 | User terminal apparatus, communication system and control method thereof |
US9965559B2 (en) | 2014-08-21 | 2018-05-08 | Google Llc | Providing automatic actions for mobile onscreen content |
US20160092410A1 (en) * | 2014-09-25 | 2016-03-31 | Monotype Imaging Inc. | Selectable Styles for Text Messaging System User Devices |
US20160092937A1 (en) | 2014-09-25 | 2016-03-31 | Monotype Imagining Inc. | Selectable Text Messaging Styles for Brand Owners |
US9508339B2 (en) | 2015-01-30 | 2016-11-29 | Microsoft Technology Licensing, Llc | Updating language understanding classifier models for a digital personal assistant based on crowd-sourcing |
US20160342665A1 (en) | 2015-05-22 | 2016-11-24 | Microsoft Technology Licensing, Llc | Interactive command line for content creation |
US10686738B2 (en) * | 2015-07-24 | 2020-06-16 | Facebook, Inc. | Providing personal assistant service via messaging |
EP3395019B1 (en) | 2015-12-21 | 2022-03-30 | Google LLC | Automatic suggestions and other content for messaging applications |
CN108781175B (en) | 2015-12-21 | 2021-09-21 | 谷歌有限责任公司 | Method, medium, and system for automatic suggestion of message exchange contexts |
US10158593B2 (en) * | 2016-04-08 | 2018-12-18 | Microsoft Technology Licensing, Llc | Proactive intelligent personal assistant |
-
2016
- 2016-05-17 US US15/157,279 patent/US10263933B2/en active Active
- 2016-12-15 GB GB1621385.2A patent/GB2550633A/en not_active Withdrawn
- 2016-12-22 EP EP16828840.5A patent/EP3458976B1/en active Active
- 2016-12-22 WO PCT/US2016/068332 patent/WO2017200581A1/en unknown
- 2016-12-22 KR KR1020187036261A patent/KR102215471B1/en active IP Right Grant
- 2016-12-22 JP JP2018560489A patent/JP6640384B2/en active Active
- 2016-12-22 DE DE102016125509.2A patent/DE102016125509A1/en active Pending
- 2016-12-22 DE DE202016008173.0U patent/DE202016008173U1/en active Active
- 2016-12-26 CN CN201611217275.6A patent/CN107391522B/en active Active
-
2019
- 2019-03-29 US US16/369,680 patent/US11057333B2/en active Active
Patent Citations (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6976082B1 (en) * | 2000-11-03 | 2005-12-13 | At&T Corp. | System and method for receiving multi-media messages |
GB2470751A (en) * | 2009-06-04 | 2010-12-08 | Iq2 Ltd | Delivering messages/content by determining if a target device is equipped with the appropriate application to enable the message/content to be conveyed. |
US20140244243A1 (en) * | 2013-02-25 | 2014-08-28 | Pantech Co., Ltd. | Apparatus and method for providing input prediction service |
WO2016187149A1 (en) * | 2015-05-15 | 2016-11-24 | Apple Inc. | Virtual assistant in a communication session |
Also Published As
Publication number | Publication date |
---|---|
KR102215471B1 (en) | 2021-02-16 |
US10263933B2 (en) | 2019-04-16 |
JP6640384B2 (en) | 2020-02-05 |
KR20190008894A (en) | 2019-01-25 |
GB201621385D0 (en) | 2017-02-01 |
EP3458976A1 (en) | 2019-03-27 |
CN107391522A (en) | 2017-11-24 |
US20170339085A1 (en) | 2017-11-23 |
JP2019523922A (en) | 2019-08-29 |
WO2017200581A1 (en) | 2017-11-23 |
EP3458976B1 (en) | 2021-05-12 |
DE102016125509A1 (en) | 2017-11-23 |
US11057333B2 (en) | 2021-07-06 |
CN107391522B (en) | 2021-03-09 |
DE202016008173U1 (en) | 2017-04-21 |
US20190230056A1 (en) | 2019-07-25 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US11057333B2 (en) | Incorporating selectable application links into message exchange threads | |
US11960543B2 (en) | Providing suggestions for interaction with an automated assistant in a multi-user message exchange thread | |
US10601755B2 (en) | Incorporating selectable application links into conversations with personal assistant modules | |
CN110582765A (en) | Proactive incorporation of unsolicited content into human-to-computer conversations | |
JP6530573B1 (en) | Message exchange thread extension | |
US20170337284A1 (en) | Determining and using attributes of message exchange thread participants | |
US20180136803A1 (en) | Methods and Systems for Executing Functions in a Text Field |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
WAP | Application withdrawn, taken to be withdrawn or refused ** after publication under section 16(1) |
US7788258B1 - Automatic determination of whether a document includes an image gallery - Google Patents
Automatic determination of whether a document includes an image gallery Download PDFInfo
- Publication number
- US7788258B1 US7788258B1 US10/871,030 US87103004A US7788258B1 US 7788258 B1 US7788258 B1 US 7788258B1 US 87103004 A US87103004 A US 87103004A US 7788258 B1 US7788258 B1 US 7788258B1
- Authority
- US
- United States
- Prior art keywords
- document
- images
- image
- tokens
- processors
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Fee Related, expires
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/50—Information retrieval; Database structures therefor; File system structures therefor of still image data
- G06F16/58—Retrieval characterised by using metadata, e.g. metadata not derived from the content or metadata generated manually
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/50—Information retrieval; Database structures therefor; File system structures therefor of still image data
- G06F16/53—Querying
- G06F16/532—Query formulation, e.g. graphical querying
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/951—Indexing; Web crawling techniques
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/953—Querying, e.g. by the use of web search engines
- G06F16/9538—Presentation of query results
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F18/00—Pattern recognition
- G06F18/20—Analysing
- G06F18/24—Classification techniques
Definitions
- Systems and methods described herein relate generally to information retrieval and, more particularly, to automated techniques for classifying documents.
- the World Wide Web (“web”) contains a vast amount of information. Search engines assist users in locating desired portions of this information by cataloging web pages. Typically, in response to a user's request, the search engine returns references to documents relevant to the request.
- An image search engine such as a web-based image search engine, catalogs images from the web.
- the image search engine may associate text, such as text that occurs near a particular image, with the image.
- the text associated with an image may then be searched using conventional key-word based search queries to locate images relevant to the search query.
- Some documents contain images arranged in a format known as an “image gallery.”
- Image galleries include multiple images arranged in some uniform manner.
- a web-based hyper text markup language (HTML) document describing a neighborhood picnic may contain nine images of the picnic arranged in a three by three table.
- Each image may include a description of the image (e.g., a description of the people in the image) located visually near the image.
- HTML hyper text markup language
- Image search engines may consider images belonging to image galleries to be of different quality than other images, and may thus treat them differently when returning results to users. Accordingly, it can be important for an image search engine to be able to recognize when an image is part of an image gallery.
- a method determines whether a document contains an image gallery by calculating position information indicating relative positions of images in the document. The method determines that the document contains an image gallery when the position information indicates that the images in the document are generally evenly distributed.
- an image search engine in another aspect, includes a search component configured to return images relevant to search queries based on a comparison of the search query to a document index.
- the image search engine further includes an image indexing component configured to generate the document index based on text in documents that contain images.
- the image indexing component annotates the document index to indicate when documents in the document index include an image gallery.
- a method indexes a document for use by a search engine.
- the method includes determining whether a document contains an image gallery based on a spatial layout of images in the document.
- the method further includes indexing the document in a manner based on whether the document contains an image gallery.
- FIG. 1 diagram illustrating an exemplary web document containing an image gallery
- FIG. 2 is an exemplary diagram of a network in which concepts consistent with the principles of the invention may be implemented
- FIG. 3 is an exemplary diagram of a client or server shown in the network of FIG. 2 ;
- FIG. 4 is a block diagram illustrating an exemplary implementation of the image search engine shown in FIG. 2 ;
- FIG. 5 is a flow chart illustrating exemplary operations of the image indexing component in response to receiving a document
- FIG. 6 is a diagram illustrating an exemplary token table of three rows and four columns
- FIG. 7 is a diagram illustrating a second exemplary token table
- FIG. 8 is a diagram illustrating a third exemplary token table
- FIG. 9 is a diagram illustrating an exemplary nested token table and its corresponding coordinates
- FIG. 10 is a flow chart illustrating exemplary operations for creating a token table
- FIGS. 11A and 11B are diagrams illustrating column trees formed for exemplary table structures
- FIG. 12 is a diagram of an exemplary token table in which image tokens are generally evenly spaced
- FIG. 13 is a diagram of an exemplary token table in which image tokens are not evenly spaced
- FIG. 14 is a flow chart illustrating exemplary operations for detecting whether an image gallery is present in a document based on whether image tokens in the document are evenly distributed;
- FIG. 15 is a diagram illustrating an exemplary histogram generated by the image indexing component.
- FIG. 16 is a diagram illustrating exemplary results of an image search.
- an image search engine automatically determines the likelihood of whether a document, such as an HTML web page, contains an image gallery.
- An image gallery is generally defined as multiple images arranged in some uniform manner in a document. The determination is based on the relative visual positions of images in the document and, in particular, whether multiple images in a document are evenly distributed. Other factors, such as image resolution, the amount of non-image content between images, whether an image points to another image or page, or the size of the image, may also be taken into consideration when determining the likelihood that a document contains an image gallery.
- FIG. 1 is a diagram illustrating an exemplary web document containing an image gallery 100 .
- image gallery 100 includes images 110 , 112 , 114 , 116 , 118 , and 120 . Some of these images include captions, such as captions 111 , 113 , 115 , and 117 .
- Image 130 is not part of image gallery 100 .
- the image search engine indexes this document, it would be desirable to recognize that this document includes an image gallery and the images that are part of image gallery 100 .
- One way of doing this, as described herein, is based on the fact that images 110 , 112 , 114 , 116 , 118 , and 120 are generally distributed in a uniform manner relative to one another.
- FIG. 2 is an exemplary diagram of a network 200 in which concepts consistent with the principles of the invention may be implemented.
- Network 200 may include multiple clients 210 connected to a server 220 via a network 240 .
- Network 240 may include a local area network (LAN), a wide area network (WAN), a telephone network, such as the Public Switched Telephone Network (PSTN), an intranet, the Internet, or a combination of networks.
- PSTN Public Switched Telephone Network
- An intranet the Internet
- FIG. 2 is an exemplary diagram of a network 200 in which concepts consistent with the principles of the invention may be implemented.
- Network 200 may include multiple clients 210 connected to a server 220 via a network 240 .
- Network 240 may include a local area network (LAN), a wide area network (WAN), a telephone network, such as the Public Switched Telephone Network (PSTN), an intranet, the Internet, or a combination of networks.
- PSTN Public Switched Telephone Network
- An intranet the Internet
- Internet or
- a client 210 may include a device such as a wireless telephone, a personal computer, a personal digital assistant (PDA), a lap top, or another type of computation or communication device, a thread or process running on one of these devices, and/or an object executable by one of these devices.
- Server 220 may include a server device that processes, searches, and/or maintains documents and images in a manner consistent with the principles of the invention.
- Clients 210 and server 220 may connect to network 240 via wired, wireless, or optical connections.
- Server 220 may include an image search engine 225 usable by clients 210 .
- image search engine 225 may return images to the client that are relevant to the client requests.
- a document is to be broadly interpreted to include any machine-readable and machine-storable work product.
- a document may be an e-mail, a blog, a file, a combination of files, one or more files with embedded links to other files, a news group posting, etc.
- a common document is a web page, such as an HTML web page. Web pages often include content and may include embedded information (such as meta information, hyperlinks, etc.) and/or embedded instructions (such as Javascript, etc.).
- Documents discussed herein generally include embedded images.
- a “link” as the term is used herein is to be broadly interpreted to include any reference to/from a document from/to another document or another part of the same document.
- FIG. 3 is an exemplary diagram of a client 210 or server 220 .
- Client/server 210 / 220 may include a bus 310 , a processor 320 , a main memory 330 , a read only memory (ROM) 340 , a storage device 350 , an input device 360 , an output device 370 , and a communication interface 380 .
- Bus 310 may include conductors that permit communication among the components of client/server 210 / 220 .
- Processor 320 may include conventional processors, microprocessors, or processing logic that interpret and execute instructions.
- Main memory 330 may include a random access memory (RAM) or another type of dynamic storage device that stores information and instructions for execution by processor 320 .
- ROM 340 may include a conventional ROM device or another type of static storage device that stores static information and instructions for use by processor 320 .
- Storage device 350 may include a magnetic and/or optical recording medium and its corresponding drive.
- Input device 360 may include one or more conventional mechanisms that permit a user to input information to client/server 210 / 220 , such as a keyboard, a mouse, a pen, voice recognition and/or biometric mechanisms, etc.
- Output device 370 may include one or more conventional mechanisms that output information to the user, including a display, a printer, a speaker, etc.
- Communication interface 380 may include any transceiver-like mechanism that enables client/server 210 / 220 to communicate with other devices and/or systems.
- communication interface 380 may include mechanisms for communicating with another device or system via a network, such as network 240 .
- server 220 may implement image search engine 225 .
- Image search engine 225 may be stored in a computer-readable medium, such as memory 330 .
- a computer-readable medium may be defined as one or more physical or logical memory devices and/or carrier waves.
- the software instructions defining image search engine 225 may be read into memory 330 from another computer-readable medium, such as data storage device 350 , or from another device via communication interface 380 .
- the software instructions contained in memory 330 may cause processor 320 to perform processes that will be described later.
- hardwired circuitry or other logic may be used in place of, or in combination with, software instructions to implement processes consistent with the invention.
- implementations consistent with the principles of the invention are not limited to any specific combination of hardware circuitry and software.
- FIG. 4 is a block diagram illustrating an implementation of image search engine 225 .
- Image search engine 225 may include a search component 410 , an image indexing component 420 , and a database 430 .
- image indexing component 420 may receive input documents, such as HTML web pages retrieved from the web, and parse the input documents for text and images that are to be included in potential results of search engine 225 .
- image indexing component 420 may store images and image descriptive text in database 430 . Other information, such as ranking values that attempt to describe the quality or importance of particular images or descriptive text may also be stored in database 430 . Images that are determined to be a part of an image gallery may be given a different ranking value than non-image gallery images. Additionally, the uniform resource locator (URL) for a source web document that contains an image may also be stored in database 430 .
- URL uniform resource locator
- Database 430 generally stores a collection of data.
- Database 430 may be implemented as, for example, a relational or non-relational database capable of storing and accessing data.
- Database 430 may be implemented on a single computing device or distributed across many computing devices and/or storage devices.
- Search component 410 may receive user search queries, such as from clients 210 , search database 430 for results based on the search queries, and return relevant results (i.e., images) to the user.
- Search component 410 may generally match terms in a search query to terms in database 430 that describe images. Images associated with descriptive text that includes the search terms are considered “hits” and may be returned to the user.
- Search component 410 may additionally attempt to rank the returned hits so that the most relevant and/or highest quality images are returned to the user.
- Techniques for implementing search query based search engines are known in the art and will not be described further herein.
- image search engine 225 is illustrated as containing search component 410 , image indexing component 420 , and database 430 , these elements may be physically implemented on different computing devices and may only be loosely coupled to one another.
- image indexing component 430 may be thought of as being essentially separate from the search component portion of search engine 225 , in which image indexing component receives and processes input documents independently of search component 410 .
- FIG. 5 is a flow chart illustrating exemplary operations of image indexing component 420 in response to receiving a document, such as an input web page crawled from the web.
- Image indexing component 420 may initially analyze the document to determine if it contains images (act 501 ). If it does not, the document is not a candidate for image indexing. Assuming images are present, image indexing component 420 may parse the input document to obtain one or more document token tables (act 502 ).
- Document token tables described in more detail below, represent the logical spatial layout of the component parts of the document. The document token table may be analyzed to determine the likelihood that an image gallery is present in the document (acts 503 and 504 ).
- the images from the document may be stored in database 430 in a manner that takes into account the presence of the image gallery (act 505 ). For example, as previously mentioned, images contained within the image gallery may be annotated in database 430 as being part of an image gallery and given a different ranking scores. If an image gallery is determined to not be present, the images from the document may be stored in database 430 in the normal manner (act 506 ).
- the token table generated in act 502 may generally be used to describe the spatial layout of the document.
- entries in the table are tokens defined by HTML tags.
- tokens may include image tokens and textual tokens.
- Image tokens may refer to images embedded in the document, such as images embedded with the HTML “ ⁇ img>” tag.
- Textual tokens may include text delineated by HTML tags such as ⁇ hr> (horizontal rule), ⁇ p> (paragraph break), and ⁇ br> (line break).
- the tokens from a document may be used to create token tables in which the coordinates of the cells in the table define a spatial layout of the document.
- Each token in the document can be assigned two values, such as first and second integer values that define the row and column coordinates of the token in the token table.
- coordinates are assigned at the granularity of table cells.
- FIG. 6 is a diagram illustrating a token table 600 of three rows and four columns. Token table 600 may represent a document containing twelve tokens labeled as tokens “a” through “l”, such as twelve images and/or text sections, defined in an HTML table having three rows and four columns. The coordinates assigned to each cell are shown in table 610 .
- FIG. 7 is a diagram illustrating a second exemplary token table 700 and its assigned coordinates 710 .
- Token table 700 includes tokens “a” through “k.” As token table 700 illustrates, different rows are not required to have an equal number of columns. Additionally, cells in a token table may span multiple rows and/or columns. This situation is illustrated in FIG. 8 , in which a token table 800 includes three cells (“a,” “b,” and “f”) each spanning multiple rows or columns. In particular, token “a” spans three rows, token “b” spans two columns, and token “f” spans two rows. Even through a token spans multiple rows/columns, it may be assigned a single coordinate value, such as a coordinate value corresponding to the unit cell in the upper-left corner. This is illustrated in the coordinate table 810 corresponding to token table 800 . As shown, token “a” is assigned the coordinate values (1,1), token “b” is assigned the coordinate values (1,2), and token “f” is assigned the coordinate values (2,4).
- FIG. 9 is a diagram illustrating an exemplary nested token table 900 and its corresponding coordinates 910 .
- the underlying HTML document includes four tables that define token table 900 .
- the highest level table is the three by two table 901 that defines six cells.
- the upper-left cell includes a two by two nested table 902 that includes the four tokens “a” through “d.”
- the bottom-left cell of table 901 includes a two by three nested table 903 that includes the tokens “h” through “k” and “p.”
- Nested table 903 additionally includes a second level two by two nested table 904 that includes the tokens “l” through “o.” Coordinates are assigned to tokens “a” through “q” as shown in coordinate table 910 .
- the coordinates for the nested tables may be assigned on the basis of a “flattened” table model, in which certain cells span multiple rows or columns in the flattened table model.
- the minimum coordinate granularity is defined by the lowest level nested table 904 .
- the final coordinate space includes the row range one through six and the column range one through five.
- HTML tokens that are not contained within a table structure, such as a block of text outside of tables, may be considered to be within a table of one column and n rows, where each row includes up to a predetermined number of tokens (e.g., 128 tokens).
- HTML text delineator tags such as ⁇ br>, ⁇ p>, and ⁇ hr> may additionally be used to delineate rows.
- the exemplary token tables shown in FIGS. 6-9 provide a representation of the visual layout of tokens in a document.
- the table coordinates do not necessarily represent the exact locations of tokens in Euclidean space, but instead represent “logical” spatial distances in the document.
- the “width” attribute of table cells may be ignored when assigning coordinates.
- FIG. 10 is a flow chart illustrating creating a token table, as performed in act 502 , in additional detail.
- the token table may be created using a two pass process over tables in the document. For an HTML document, the HTML source code may be examined.
- the first pass over the document may be used to build a column tree of the table structures in the document (act 1001 ).
- FIGS. 11A and 11B illustrate two column trees formed for two exemplary table structures.
- Column tree 1110 includes four branches, one for each of the columns in its corresponding table 1105 .
- Column tree 1120 includes nested sets of branches corresponding to the nested tables in its corresponding table structure 1115 .
- column tree 1120 includes: a first level 1122 of two branches corresponding to the two primary columns in table 1115 ; a second level 124 of three branches corresponding to the two nested tables 1116 and 1117 , which together define a maximum of three columns; and a third level 1126 of two branches corresponding to table 1118 , which is nested within the second column of table 1117 .
- the numbers on the nodes of column trees 1110 and 1120 indicate the total number of leaf nodes in each subtree, which is equal to the total number of logical columns in the nested table.
- the column tree for a document may be used during a second pass of the document to assist in assigning the coordinate values to the tokens in the document (act 1002 ).
- image indexing component 420 may locate the node position on the column tree that corresponds to the token.
- the column coordinate value can then be determined based on the number of leaf nodes in the column tree to the left of the node. For example, the node corresponding to token “m” can be traced to node 1129 as being the second column in the second level nested table 1126 , which itself is a table nested in the second column of nested table 1124 , which is the first column in table 1122 . There are two leaf nodes to the left of this node, so the column coordinate value for token “m” is three.
- the token tables created in act 502 may be used when analyzing a document to determine whether an image gallery is present in the document (acts 503 and 504 ).
- Image indexing component 420 may analyze image tokens in a token table and determine whether the image tokens are “evenly distributed.” If so, the document corresponding to the token table may be classified as an image gallery.
- FIG. 12 is a diagram of an exemplary token table 1210 in which the image tokens are generally evenly distributed.
- token table 1210 includes possible row coordinates one through twelve and possible column coordinates one through eight.
- Image tokens are denoted with the “ ⁇ img>” tag.
- the image tokens at coordinates (6,2), (6,4), (6,6), (9,2), (9,4), (9,6), (12,2), (12,4), and (12,6) are evenly distributed as they are two cells apart horizontally and three cells apart vertically. This document may be considered to be an image gallery.
- FIG. 13 is a diagram of an exemplary token table 1310 in which the image tokens are not evenly spaced. There is no group of images in this token table that are evenly distributed, accordingly this document would be classified as not an image gallery.
- FIG. 14 is a flow chart illustrating exemplary operations for detecting whether an image gallery is present in a document based on whether image tokens in the document are evenly distributed. Processing may begin by scanning the token table for image tokens (act 1401 ). For each image token, an integer pair (h i , v i ) may be generated that represents the distances to the next image horizontally (h) and the next image vertically (v) to the image token (act 1402 ). For token table 1210 , for instance, six image tokens have such pairs. The image token at coordinate (1,2) has a next image horizontally at coordinate (1, 8) and a next image vertically at coordinate (4, 2).
- a number of the image tokens in token table 1210 do not have corresponding (h, v) integer pairs, as there are no two next image tokens that are in the same horizontal row and the same vertical column, respectively, as these image tokens.
- Image indexing component 420 may next construct a two-dimensional histogram from the (h, v) integer pairs (act 1403 ).
- An exemplary histogram for token table 1210 is illustrated in FIG. 15 as histogram 1510 .
- Image indexing component 420 may estimate the probability that the document contains an image gallery based on the peak value of the histogram (act 1404 ). Higher peak values tend to increase the likelihood that a document is an image gallery.
- image gallery detection techniques may not be counted as contributing to histogram 1510 .
- an image token may contribute to histogram 1510 only if it has an outgoing link (e.g., to other images of web documents) and/or only if the image size is within certain thresholds.
- some web sites may be types of sites that should generally not be considered to be image galleries. For example, it may be desirable to not include shopping sites into the image galleries. Accordingly, if a site is a shopping site, the corresponding document may be considered to not be an image gallery.
- One technique for detecting likely shopping sites is by looking for shopping related keywords, such as “$,” “price,” “order,” “checkout,” etc.
- the document's gallery likelihood can be decreased. Also, the number of pages that belong to a particular web site, or the number (or portion) of pages at the site that have been determined to be image galleries, may also be taken into consideration.
- top-level tables could be assigned integer coordinates
- first-level nested tables could be assigned fractional coordinates
- second-level nested tables could be assigned finer fractional coordinates, etc.
- the token tables created in act 502 may be used for purposes other than image gallery detection.
- the coordinates in the token tables could be used to determine a distance measurement from keywords to images. These distance measurements can be used as a basis for determining how related a keyword is to an image.
- the coordinates can be used to give an approximation of a web page's geometric layout, which may be used to assist in the analysis of page content.
- FIG. 16 is a diagram illustrating exemplary results of an image search, such as an image search performed using search engine 225 .
- Image search engine 225 may return a document 1600 in response to a search query, such as the exemplary search query “John Smith Picnic.”
- Document 1600 may include a number of images 1601 , 1602 , and 1603 .
- Images 1601 , 1602 , and 1603 may be thumbnail images that link to the source web document in which the images are located.
- Some of the images, such as images 1601 and 1602 may be images that image indexing component 420 determined to come from an image gallery.
- the image galleries may be located by looking for sets of images that are evenly distributed. In one implementation, whether images are evenly distributed is determined from a token table formed from the document.
Abstract
Description
1−e−p/3,
where p is the histogram peak value (e.g., p=4 for histogram 1510). Factors other than the histogram peak value may be taken into account in
Claims (29)
1−e−p/3,
1−e−p/3,
1−e−p/3,
1−e−p/3,
Priority Applications (4)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US10/871,030 US7788258B1 (en) | 2004-06-21 | 2004-06-21 | Automatic determination of whether a document includes an image gallery |
US12/842,545 US8312012B1 (en) | 2004-06-21 | 2010-07-23 | Automatic determination of whether a document includes an image gallery |
US13/674,434 US8732165B1 (en) | 2004-06-21 | 2012-11-12 | Automatic determination of whether a document includes an image gallery |
US14/278,964 US20150161179A1 (en) | 2004-06-21 | 2014-05-15 | Automatic determination of whether a document includes an image gallery |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US10/871,030 US7788258B1 (en) | 2004-06-21 | 2004-06-21 | Automatic determination of whether a document includes an image gallery |
Related Child Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US12/842,545 Continuation US8312012B1 (en) | 2004-06-21 | 2010-07-23 | Automatic determination of whether a document includes an image gallery |
Publications (1)
Publication Number | Publication Date |
---|---|
US7788258B1 true US7788258B1 (en) | 2010-08-31 |
Family
ID=42646744
Family Applications (4)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US10/871,030 Expired - Fee Related US7788258B1 (en) | 2004-06-21 | 2004-06-21 | Automatic determination of whether a document includes an image gallery |
US12/842,545 Expired - Fee Related US8312012B1 (en) | 2004-06-21 | 2010-07-23 | Automatic determination of whether a document includes an image gallery |
US13/674,434 Active US8732165B1 (en) | 2004-06-21 | 2012-11-12 | Automatic determination of whether a document includes an image gallery |
US14/278,964 Abandoned US20150161179A1 (en) | 2004-06-21 | 2014-05-15 | Automatic determination of whether a document includes an image gallery |
Family Applications After (3)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US12/842,545 Expired - Fee Related US8312012B1 (en) | 2004-06-21 | 2010-07-23 | Automatic determination of whether a document includes an image gallery |
US13/674,434 Active US8732165B1 (en) | 2004-06-21 | 2012-11-12 | Automatic determination of whether a document includes an image gallery |
US14/278,964 Abandoned US20150161179A1 (en) | 2004-06-21 | 2014-05-15 | Automatic determination of whether a document includes an image gallery |
Country Status (1)
Country | Link |
---|---|
US (4) | US7788258B1 (en) |
Cited By (10)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20090254515A1 (en) * | 2008-04-04 | 2009-10-08 | Merijn Camiel Terheggen | System and method for presenting gallery renditions that are identified from a network |
US20100289818A1 (en) * | 2009-05-12 | 2010-11-18 | Canon Kabushiki Kaisha | Image layout device, image layout method, and storage medium |
US20120143857A1 (en) * | 2009-08-11 | 2012-06-07 | Someones Group Intellectual Property Holdings Pty Ltd | Method, system and controller for searching a database |
US8732165B1 (en) | 2004-06-21 | 2014-05-20 | Google Inc. | Automatic determination of whether a document includes an image gallery |
US20150186627A1 (en) * | 2013-12-26 | 2015-07-02 | Nxp B.V. | Secure software compnents anti-reverse-engineering by table interleaving |
US20150220500A1 (en) * | 2014-02-06 | 2015-08-06 | Vojin Katic | Generating preview data for online content |
US9442903B2 (en) | 2014-02-06 | 2016-09-13 | Facebook, Inc. | Generating preview data for online content |
US9471601B2 (en) | 2014-03-25 | 2016-10-18 | International Business Machines Corporation | Images for a question answering system |
US9832284B2 (en) | 2013-12-27 | 2017-11-28 | Facebook, Inc. | Maintaining cached data extracted from a linked resource |
US10567327B2 (en) | 2014-05-30 | 2020-02-18 | Facebook, Inc. | Automatic creator identification of content to be shared in a social networking system |
Citations (14)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5513277A (en) * | 1991-07-30 | 1996-04-30 | Xerox Corporation | Measuring character and stroke sizes and spacings for an image |
US5751286A (en) * | 1992-11-09 | 1998-05-12 | International Business Machines Corporation | Image query system and method |
US5983237A (en) * | 1996-03-29 | 1999-11-09 | Virage, Inc. | Visual dictionary |
US6035323A (en) * | 1997-10-24 | 2000-03-07 | Pictra, Inc. | Methods and apparatuses for distributing a collection of digital media over a network with automatic generation of presentable media |
US6121963A (en) * | 2000-01-26 | 2000-09-19 | Vrmetropolis.Com, Inc. | Virtual theater |
US6240423B1 (en) * | 1998-04-22 | 2001-05-29 | Nec Usa Inc. | Method and system for image querying using region based and boundary based image matching |
US6415282B1 (en) * | 1998-04-22 | 2002-07-02 | Nec Usa, Inc. | Method and apparatus for query refinement |
US20020095439A1 (en) * | 1997-02-20 | 2002-07-18 | Timothy Merrick Long | Method of positioning display images |
US6463426B1 (en) * | 1997-10-27 | 2002-10-08 | Massachusetts Institute Of Technology | Information search and retrieval system |
US20030039410A1 (en) * | 2001-08-23 | 2003-02-27 | Beeman Edward S. | System and method for facilitating image retrieval |
US20040250205A1 (en) * | 2003-05-23 | 2004-12-09 | Conning James K. | On-line photo album with customizable pages |
US20050149473A1 (en) * | 2003-12-24 | 2005-07-07 | Microsoft Corporation | Dynamic grouping of content including captive data |
US20060190445A1 (en) * | 2001-03-13 | 2006-08-24 | Picsearch Ab | Indexing of digitized entities |
US20070269139A1 (en) * | 2003-04-11 | 2007-11-22 | Ricoh Company, Ltd. | Automated techniques for comparing contents of images |
Family Cites Families (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6002798A (en) * | 1993-01-19 | 1999-12-14 | Canon Kabushiki Kaisha | Method and apparatus for creating, indexing and viewing abstracted documents |
US6763496B1 (en) * | 1999-03-31 | 2004-07-13 | Microsoft Corporation | Method for promoting contextual information to display pages containing hyperlinks |
US6904560B1 (en) * | 2000-03-23 | 2005-06-07 | Adobe Systems Incorporated | Identifying key images in a document in correspondence to document text |
US6964025B2 (en) * | 2001-03-20 | 2005-11-08 | Microsoft Corporation | Auto thumbnail gallery |
US7788258B1 (en) | 2004-06-21 | 2010-08-31 | Google Inc. | Automatic determination of whether a document includes an image gallery |
US8631012B2 (en) * | 2006-09-29 | 2014-01-14 | A9.Com, Inc. | Method and system for identifying and displaying images in response to search queries |
-
2004
- 2004-06-21 US US10/871,030 patent/US7788258B1/en not_active Expired - Fee Related
-
2010
- 2010-07-23 US US12/842,545 patent/US8312012B1/en not_active Expired - Fee Related
-
2012
- 2012-11-12 US US13/674,434 patent/US8732165B1/en active Active
-
2014
- 2014-05-15 US US14/278,964 patent/US20150161179A1/en not_active Abandoned
Patent Citations (16)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5513277A (en) * | 1991-07-30 | 1996-04-30 | Xerox Corporation | Measuring character and stroke sizes and spacings for an image |
US5751286A (en) * | 1992-11-09 | 1998-05-12 | International Business Machines Corporation | Image query system and method |
US5983237A (en) * | 1996-03-29 | 1999-11-09 | Virage, Inc. | Visual dictionary |
US20020095439A1 (en) * | 1997-02-20 | 2002-07-18 | Timothy Merrick Long | Method of positioning display images |
US6035323A (en) * | 1997-10-24 | 2000-03-07 | Pictra, Inc. | Methods and apparatuses for distributing a collection of digital media over a network with automatic generation of presentable media |
US20050004897A1 (en) * | 1997-10-27 | 2005-01-06 | Lipson Pamela R. | Information search and retrieval system |
US6463426B1 (en) * | 1997-10-27 | 2002-10-08 | Massachusetts Institute Of Technology | Information search and retrieval system |
US20030018631A1 (en) * | 1997-10-27 | 2003-01-23 | Lipson Pamela R. | Information search and retrieval system |
US6415282B1 (en) * | 1998-04-22 | 2002-07-02 | Nec Usa, Inc. | Method and apparatus for query refinement |
US6240423B1 (en) * | 1998-04-22 | 2001-05-29 | Nec Usa Inc. | Method and system for image querying using region based and boundary based image matching |
US6121963A (en) * | 2000-01-26 | 2000-09-19 | Vrmetropolis.Com, Inc. | Virtual theater |
US20060190445A1 (en) * | 2001-03-13 | 2006-08-24 | Picsearch Ab | Indexing of digitized entities |
US20030039410A1 (en) * | 2001-08-23 | 2003-02-27 | Beeman Edward S. | System and method for facilitating image retrieval |
US20070269139A1 (en) * | 2003-04-11 | 2007-11-22 | Ricoh Company, Ltd. | Automated techniques for comparing contents of images |
US20040250205A1 (en) * | 2003-05-23 | 2004-12-09 | Conning James K. | On-line photo album with customizable pages |
US20050149473A1 (en) * | 2003-12-24 | 2005-07-07 | Microsoft Corporation | Dynamic grouping of content including captive data |
Non-Patent Citations (1)
Title |
---|
Petrakis et al, "ImageMap: An Image Indexing Method Based on Spatial Similarity", Sep./Oct. 2002, IEEE Transactions and Knowledge and Data Engineering, vol. 14, pp. 979-987. * |
Cited By (15)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8732165B1 (en) | 2004-06-21 | 2014-05-20 | Google Inc. | Automatic determination of whether a document includes an image gallery |
US20090254515A1 (en) * | 2008-04-04 | 2009-10-08 | Merijn Camiel Terheggen | System and method for presenting gallery renditions that are identified from a network |
US20100289818A1 (en) * | 2009-05-12 | 2010-11-18 | Canon Kabushiki Kaisha | Image layout device, image layout method, and storage medium |
US8665294B2 (en) * | 2009-05-12 | 2014-03-04 | Canon Kabushiki Kaisha | Image layout device, image layout method, and storage medium |
US20120143857A1 (en) * | 2009-08-11 | 2012-06-07 | Someones Group Intellectual Property Holdings Pty Ltd | Method, system and controller for searching a database |
US8775417B2 (en) * | 2009-08-11 | 2014-07-08 | Someones Group Intellectual Property Holdings Pty Ltd Acn 131 335 325 | Method, system and controller for searching a database |
US20150186627A1 (en) * | 2013-12-26 | 2015-07-02 | Nxp B.V. | Secure software compnents anti-reverse-engineering by table interleaving |
US9576116B2 (en) * | 2013-12-26 | 2017-02-21 | Nxp B.V. | Secure software components anti-reverse-engineering by table interleaving |
US9832284B2 (en) | 2013-12-27 | 2017-11-28 | Facebook, Inc. | Maintaining cached data extracted from a linked resource |
US20150220500A1 (en) * | 2014-02-06 | 2015-08-06 | Vojin Katic | Generating preview data for online content |
US9442903B2 (en) | 2014-02-06 | 2016-09-13 | Facebook, Inc. | Generating preview data for online content |
US10133710B2 (en) * | 2014-02-06 | 2018-11-20 | Facebook, Inc. | Generating preview data for online content |
US9471601B2 (en) | 2014-03-25 | 2016-10-18 | International Business Machines Corporation | Images for a question answering system |
US9495387B2 (en) | 2014-03-25 | 2016-11-15 | International Business Machines Corporation | Images for a question answering system |
US10567327B2 (en) | 2014-05-30 | 2020-02-18 | Facebook, Inc. | Automatic creator identification of content to be shared in a social networking system |
Also Published As
Publication number | Publication date |
---|---|
US8732165B1 (en) | 2014-05-20 |
US20150161179A1 (en) | 2015-06-11 |
US8312012B1 (en) | 2012-11-13 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US8312012B1 (en) | Automatic determination of whether a document includes an image gallery | |
US7716216B1 (en) | Document ranking based on semantic distance between terms in a document | |
JP5501373B2 (en) | System and method for collecting and ranking data from multiple websites | |
US7676745B2 (en) | Document segmentation based on visual gaps | |
JP4637181B2 (en) | Displaying search results based on document structure | |
AU2006266103B2 (en) | Determination of a desired repository | |
US9613061B1 (en) | Image selection for news search | |
US7765209B1 (en) | Indexing and retrieval of blogs | |
US20130151497A1 (en) | Providing information relating to a document | |
US8140449B1 (en) | Detecting novel document content | |
US9977816B1 (en) | Link-based ranking of objects that do not include explicitly defined links | |
US7421416B2 (en) | Method of managing web sites registered in search engine and a system thereof | |
US20160203131A1 (en) | Supplementing Search Results with Information of Interest | |
US20150302090A1 (en) | Method and System for the Structural Analysis of Websites | |
US8121970B1 (en) | Method for identifying primary product objects | |
US7831438B2 (en) | Local item extraction | |
KR20120090131A (en) | Method, system and computer readable recording medium for providing search results | |
Ohta et al. | Web Recommender System for Identifying Semantic related Scientific Papers. | |
Li et al. | Study on Web data extraction |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:MALPANI, RADHIKA;YANG, CALVIN CHENG;ZUNGER, YONATAN;REEL/FRAME:019724/0437Effective date: 20040618 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
FEPP | Fee payment procedure |
Free format text: PAYOR NUMBER ASSIGNED (ORIGINAL EVENT CODE: ASPN); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044101/0405Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 8TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1552)Year of fee payment: 8 |
|
FEPP | Fee payment procedure |
Free format text: MAINTENANCE FEE REMINDER MAILED (ORIGINAL EVENT CODE: REM.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
LAPS | Lapse for failure to pay maintenance fees |
Free format text: PATENT EXPIRED FOR FAILURE TO PAY MAINTENANCE FEES (ORIGINAL EVENT CODE: EXP.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
STCH | Information on status: patent discontinuation |
Free format text: PATENT EXPIRED DUE TO NONPAYMENT OF MAINTENANCE FEES UNDER 37 CFR 1.362 |
|
FP | Lapsed due to failure to pay maintenance fee |
Effective date: 20220831 |
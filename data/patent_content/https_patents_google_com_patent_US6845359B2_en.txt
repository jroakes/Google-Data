US6845359B2 - FFT based sine wave synthesis method for parametric vocoders - Google Patents
FFT based sine wave synthesis method for parametric vocoders Download PDFInfo
- Publication number
- US6845359B2 US6845359B2 US09/814,991 US81499101A US6845359B2 US 6845359 B2 US6845359 B2 US 6845359B2 US 81499101 A US81499101 A US 81499101A US 6845359 B2 US6845359 B2 US 6845359B2
- Authority
- US
- United States
- Prior art keywords
- coefficients
- fft
- component
- coefficient table
- synthesized
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Lifetime, expires
Links
Images
Classifications
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L13/00—Speech synthesis; Text to speech systems
- G10L13/02—Methods for producing synthetic speech; Speech synthesisers
- G10L13/04—Details of speech synthesis systems, e.g. synthesiser structure or memory management
- G10L13/047—Architecture of speech synthesisers
Definitions
- the present invention generally relates to sound synthesis and more particularly to speech synthesis, synthesized by combining multiple sine wave harmonics.
- the output speech is synthesized as the sum of a number of sine waves.
- the sine wave components correspond to different harmonics of the pitch frequency inside the speech bandwidth with actual or modeled phases.
- the sine waves correspond to harmonics of a very low frequency (e.g., the lowest pitch frequency) with random phases.
- Mixed-voiced speech can be synthesized by combining pitch harmonics in the low-frequency band with random-phase harmonics in the high frequency band.
- the number of sine wave components needed to synthesize speech can range from 8 to 64.
- a straightforward synthesizer implementation involves generating each component with appropriate phase and amplitude and then, summing all the sine wave components.
- the computational complexity of this brute-force, straightforward approach is directly proportional to the number of sine wave components combined to make up the synthesized speech waveform. When the number of sine waves is high, the complexity is also high. Further, depending on the number of sine waves to be generated and combined, the computational load placed on the processor can vary significantly.
- FIG. 1 shows C language code for a synthesis subroutine or macro, illustrating how speech can be synthesized using a sine wave lookup table
- FIGS. 2 A-D show an example of C code for a subroutine or macro, implementing the preferred embodiment Fast Fourier Transform (FFT) based approach;
- FFT Fast Fourier Transform
- FIG. 3 shows a 127-point real, even, time domain window
- FIG. 4 shows coefficient values derived by transforming the time-domain window of FIG. 3 by an FFT with ⁇ /4096 (2 ⁇ /8192) resolution and stored in a Coefficient Table;
- FIG. 5A shows an example of a time-domain signal synthesized by an inverse FFT (IFFT) of 8 coefficient values chosen to approximate a sine wave signal with frequency 0.2442* ⁇ ;
- IFFT inverse FFT
- FIG. 5B shows an error signal derived by subtracting the synthesized signal of FIG. 5A from a computed sine wave signal at frequency 0.2442* ⁇ and windowed using the signal in FIG. 3 ;
- a Fast Fourier Transform (FFT) based voice synthesis method, program product and vocoder is disclosed in which, each sine wave component is represented by a small number of FFT coefficients. Amplitude and phase information of the component are also incorporated into these coefficients. The FFT coefficients corresponding to each of the components are summed and, then, an inverse FFT transform is applied to the sum to generate a time domain signal. An appropriate section is extracted from the inverse-transformed time domain signal as an approximation to the desired output. Irrespective of the included number of sine wave components, the present invention has a fixed minimum computational complexity because of the inverse FFT.
- the rate of increase of computational complexity is smaller than in prior art approaches, wherein the complexity is linearly proportional to the number of sine wave components.
- the total computational complexity of the preferred embodiment approach is more efficient than traditional approaches.
- the computational load on the processor is better balanced when the number of sine wave components varies because a major part of the vocoder complexity is essentially constant; while for prior art approaches, the fixed part is insignificant and almost the entire complexity is directly proportional to the number of sine wave components.
- FIG. 1 shows an example of C language code for a straightforward approach voice coder (vocoder) synthesis subroutine or macro 100 , illustrating how speech can be synthesized using a sine wave lookup table.
- Table 1 provides a list of parameters and variables of the vocoder synthesis subroutine or macro 100 of FIG. 1 with corresponding definitions.
- the straightforward approach synthesis macro 100 simply adds each included sine wave component in step 104 to arrive at the final synthesized signal.
- each line of code is assigned a weight, assignments, additions, multiplications, multiply-adds, and shifts each being assigned a weight of one (1).
- Branches are assigned a unit weight equal to the number of branches. Since many modem Digital Signal Processor (DSP) chips are capable of performing complex index manipulations concurrent with other operations, index manipulations do not add to the complexity and so, are not assigned any weight.
- DSP Digital Signal Processor
- FIGS. 2 A-D show an example of C code for a vocoder subroutine or macro 110 , implementing the preferred embodiment Fast Fourier Transform (FFT) based approach.
- FFT Fast Fourier Transform
- each sine wave is represented by a few appropriately selected FFT coefficients.
- Table 2 provides a list of parameters and variables included in the example 110 of FIGS. 2A-D each with a corresponding definition.
- the FFT array is initialized with zeros. Then, beginning in step 114 , the FFT coefficients for each sine wave are determined and added to the FFT array. In step 116 both a frequency index into the FFT array and an offset index into the coefficient table are computed for each sine wave component. The frequency index is determined for each component by multiplying that frequency by FFT_SIZE_BY — 2. The offset index is the distance between the component frequency and the nearest lower FFT bin frequency measured in terms of the frequency resolution of the coefficient table. In step 118 the real FFT coefficients for the component are selected from the coefficient table. Then, in step 120 amplitude modulation information may be incorporated into the coefficients.
- amplitude modulation coefficients are retrieved and, in step 122 the component FFT coefficients are convolved with the amplitude modulation coefficients. If amplitude modulation is not included the modulation coefficient fB is zero and the convolution operation is replaced by simple multiplication of the component FFT coefficients by the modulation coefficient fA.
- phase information may be incorporated into the coefficients.
- Phase shift coefficients are extracted and in step 126 multiplied by the component FFT coefficients. The result of the multiplication is added to the FFT array.
- an inverse FFT IFFT is performed to obtain a time domain signal from the FFT array and an appropriate section of this time domain signal is copied to the output array in step 130 .
- IFFT inverse FFT
- the FFT based approach C language code example 110 of FIGS. 2A-D is simplified by including only those sections that correspond to the most commonly encountered control flow branch.
- the possible branches the control flow can take are: 1) Depending on whether the frequency of the sine wave to be synthesized is an exact FFT bin frequency or not, the number of FFT coefficients required to represent the sine wave is 1 or MAX_NUM_COEF, respectively (For this example, it is assumed that MAX_NUM_COEF are required to represent each sine wave component); 2) Since the signal to be synthesized is real, the corresponding Fourier Transform has conjugate symmetry and, therefore, only one half of the FFT array (for example, the positive frequency half) needs to be computed and stored.
- a complexity weight is assigned to each line of code. Denoting the size of the FFT by FFT_SIZE (which is 2*FFT_SIZE_BY — 2), it is clear that the number of samples to be synthesized, viz., iNumSamp, should not exceed FFT_SIZE.
- FFT_SIZE which is 2*FFT_SIZE_BY — 2
- the complexity shown (4200) is for an FFT_SIZE of 128.
- This complexity measure for the ifft( ) function was determined using a C program code not included here. Such program code is available from several standard references, e.g., see W. H. Press, S. A. Teukolsky, W. T.
- FIG. 3 shows a 127-point real, even, time domain window.
- the middle 63 values of the window have unity amplitude.
- the 32 values on either side are taken from a 64-point Kaiser window with a window shape parameter ( ⁇ ) value of 4.7. Because the time domain signal is real and even, its Fourier transform is also real and even.
- FIG. 4 wherein 8192-point FFT of the signal in FIG. 3 is (magnitude) normalized and truncated to 641 points. It should be noted that the coefficient values on either side decay to zero fairly quickly because of the Kaiser window sections used in the time domain signal. In fact, the section shown in FIG. 4 contains more than 99.99% of the total energy in the signal.
- Coefficient Table 4 has a frequency resolution of ⁇ /4096 (2 ⁇ /8192) and are stored in a “Coefficient Table,” viz., pfCoefTable[ ] in the example C code subroutine or macro 110 of FIGS. 2A-D . Only one half of the values need to be stored because of even symmetry in the coefficient values.
- the Coefficient Table can be used to approximate sine waves, as described hereinbelow.
- the desired sine wave frequency ⁇ d falls between the bin frequencies
- ⁇ d 0.2442* ⁇
- FIG. 5A shows a time domain signal 140 obtained by a 128-point inverse FFT (IFFT) of the 8 FFT coefficients (12 through 19) chosen as described above. The remaining coefficients in the positive frequency half are set to zero and the coefficients in the negative frequency half are obtained by complex conjugation.
- IFFT inverse FFT
- the signal to noise ratio (SNR) or more accurately signal to approximation error ratio is 39.6 dB.
- the worst-case SNR with 8 coefficients is 37 dB for the middle 45 samples.
- the worst-case SNR can be raised to about 41 dB. Further improvement is possible by increasing the size and thereby the frequency resolution of the Coefficient Table.
- step 122 an approximately linear amplitude modulation is achieved in step 122 using a 3-point coefficient sequence of the form, ⁇ jB, A, ⁇ jB ⁇ corresponding to the frequency bins ⁇ /64, 0 and ⁇ /64 respectively.
- step 122 the FFT coefficients corresponding to the sine wave must be convolved in the frequency domain with the appropriate 3-point amplitude modulation coefficient sequence computed in step 120 .
- any required phase at sample index 0 may be provided by simply multiplying in step 126 the FFT coefficients corresponding to the sine wave by the phase shift coefficient derived in step 124 as Cos(phase)+j*Sin(phase).
- CC 2 i NumSine*(18+MAX_NUM_COEF*9)+ i NumSamp+4328.
- CC 2 i NumSine*90+4373.
- the preferred embodiment FFT based synthesis approach can be used to improve speech synthesis in parametric vocoders under some circumstances.
- the FFT based approach 110 has an advantage over the straightforward approach 100 . That is, for iNumSine values greater than or equal to the 24 sine wave component threshold, the FFT based approach is less complex. For iNumSine values below that threshold, i.e., less than 24, the straightforward approach is less complex.
- the number of pitch harmonics (or sine waves) to be synthesized is typically less than 24 for female speakers and greater than 24 for male speakers.
- the FFT based approach is advantageous for synthesizing speech for male speakers and the straightforward approach is advantageous for synthesizing speech for female speakers.
- Unvoiced speech is typically synthesized using a large number of random-phase sine wave components, where the FFT-based approach 110 has a clear advantage.
- the FFT-based approach 110 has an advantage over the straightforward approach 100 in terms of computational complexity because of the significant presence of unvoiced speech in any speech material.
- the computational load on the processor is better balanced, i.e., 1:2 for the FFT-based approach 110 versus 1:8 for the straightforward approach 100 .
- both the straightforward approach 100 and the FFT-based approach 110 are used selectively, to exploit the strengths of both.
Abstract
Description
TABLE 1 | |
SINE_TABLE_NORM_SIZE | Normalized size of the sine wave table |
(size that corresponds to a phase range | |
of π) | |
ONE_OVER_NUM_SAMP | (1.0/iNumSamp) |
i, j | Indices |
iNumSamp | Number of speech samples to be |
synthesized | |
iNumSine | Number of sine waves to be synthesized |
iPhaseindex | Index into the sine wave table |
pfInitAmp[] | Initial amplitudes |
pfFinalAmp[] | Final amplitudes |
pfOmega[] | Frequencies |
pfOut[] | Output array |
pfSine[] | Sine wave table |
fAmp | Amplitude |
fDeltaAmp | Amplitude change |
fPhase | Phase |
fDeltaPhase | Phase change |
fVal | Value of a sine wave sample |
So, for a typical iNumSamp value of 45,
Thus, it is apparent from this straightforward approach example that the complexity is approximately directly proportional to the number of sine wave components that need to be included. For the normal component range of 8 to 64 for iNumSine, the computational complexity ranges from 2245 to 17645 and at 24, CC1=6645.
TABLE 2 | |
A_CONST_1, A_CONST_2, | Constants used for the computation of |
B_CONST | the amplitude modulation coefficients |
COEF_TABLE_NORM_SIZE | Normalized size of the coefficient table, |
i.e., the number of coefficient values | |
corresponding to a frequency range of π | |
FFT_SIZE_BY_2 | One half the size of the FFT, i.e., the |
number of FFT coefficients correspond- | |
ing to a frequency range of π | |
FFT_OMEGA_STEP_SIZE | Width of a FFT bin, |
i.e., π/FFT_SIZE_BY_2 | |
MAX_NUM_COEF | Maximum number of coefficients used |
to represent each synthesized sine wave | |
MAX_NUM_COEF_BY_2 | MAX_NUM_COEF/2 |
SINE_TABLE_NORM_SIZE | Normalized size of the sine value |
lookup table, i.e., the size that | |
corresponds to a phase range of π | |
SINE_TABLE_NORM— | SINE_TABLE_NORM_SIZE/2 |
SIZE_BY_2 | |
SIZE_RATIO | Ratio of the normalized sizes of the |
coefficient table and FFT, i.e., | |
COEF_TABLE_NORM_SIZE/ | |
FFT_SIZE_BY_2 | |
SHIFT | Shift value used to extract the output |
from the “sum of sines” signal obtained | |
using the FFT based approach | |
i, j ,k | Indices |
iFreqIndex | Index into the FFT array |
iNumSamp | Number of speech samples to be |
synthesized | |
iNumSine | Number of sine waves to be synthesized |
iOffsetIndex | Index into the coefficient table |
iPhaseIndex | Index into the sine value table |
pfCoefTable[] | Coefficient table |
pfRealTemp[] | Temporary array to hold the real |
component of the FFT coefficients | |
pfImagTemp[] | Temporary array to hold the imaginary |
component of the FFT coefficients | |
pfInitAmp[] | Initial amplitudes |
pfFinalAmp[] | Final amplitudes |
pfFFTReal[] | Real component of the FFT array |
pfFFTImag[] | Imaginary component of the FFT array |
pfOmega[] | Frequencies |
pfOut[] | Output array |
pfPhase[] | Phases |
pfSig[] | “Sum of sines” signal obtained by lFFT |
of the FFT array | |
pfSine[] | Sine value table |
fA, fB | Amplitude modulation coefficients |
fReal | Real component of the phase shift |
coefficient | |
fImag | Imaginary component of the phase shift |
coefficient | |
fOmegaOffset | Frequency offset |
a(i)=A+2*B*sin(i*(π/64))
for i=−64, . . . , 0, . . . , 63. The middle section of this time domain signal, a(i), is an approximation to linear amplitude modulation. If no amplitude modulation is required, we set B=0, so that a(i)=A, a constant value. Given the initial and final amplitudes of a sine wave component, it is a relatively simple matter to calculate the necessary values of A and B.
For a typical iNumSamp value of 45 and MAX_NUM_COEF of 8,
For the range of 8 to 64 for iNumSine, the computational complexity of the FFT based approach ranges from 5093 to 10133 and at 24, CC2=6533.
Clearly, when the number of sine waves to be generated exceeds a certain threshold, 24 in this example, the FFT based
Claims (39)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US09/814,991 US6845359B2 (en) | 2001-03-22 | 2001-03-22 | FFT based sine wave synthesis method for parametric vocoders |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US09/814,991 US6845359B2 (en) | 2001-03-22 | 2001-03-22 | FFT based sine wave synthesis method for parametric vocoders |
Publications (2)
Publication Number | Publication Date |
---|---|
US20020184026A1 US20020184026A1 (en) | 2002-12-05 |
US6845359B2 true US6845359B2 (en) | 2005-01-18 |
Family
ID=25216552
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US09/814,991 Expired - Lifetime US6845359B2 (en) | 2001-03-22 | 2001-03-22 | FFT based sine wave synthesis method for parametric vocoders |
Country Status (1)
Country | Link |
---|---|
US (1) | US6845359B2 (en) |
Cited By (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20020154774A1 (en) * | 2001-04-18 | 2002-10-24 | Oomen Arnoldus Werner Johannes | Audio coding |
US20100030557A1 (en) * | 2006-07-31 | 2010-02-04 | Stephen Molloy | Voice and text communication system, method and apparatus |
US20140052448A1 (en) * | 2010-05-31 | 2014-02-20 | Simple Emotion, Inc. | System and method for recognizing emotional state from a speech signal |
US9549068B2 (en) | 2014-01-28 | 2017-01-17 | Simple Emotion, Inc. | Methods for adaptive voice interaction |
Families Citing this family (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN113223511B (en) * | 2020-01-21 | 2024-04-16 | 珠海市煊扬科技有限公司 | Audio processing device for speech recognition |
Citations (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4937873A (en) * | 1985-03-18 | 1990-06-26 | Massachusetts Institute Of Technology | Computationally efficient sine wave synthesis for acoustic waveform processing |
US5832437A (en) * | 1994-08-23 | 1998-11-03 | Sony Corporation | Continuous and discontinuous sine wave synthesis of speech signals from harmonic data of different pitch periods |
-
2001
- 2001-03-22 US US09/814,991 patent/US6845359B2/en not_active Expired - Lifetime
Patent Citations (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4937873A (en) * | 1985-03-18 | 1990-06-26 | Massachusetts Institute Of Technology | Computationally efficient sine wave synthesis for acoustic waveform processing |
US5832437A (en) * | 1994-08-23 | 1998-11-03 | Sony Corporation | Continuous and discontinuous sine wave synthesis of speech signals from harmonic data of different pitch periods |
Non-Patent Citations (3)
Title |
---|
R.J. McAulay et al., "Computational efficient sine-wave synthesis and its application to sinusoidal transform coding," ICASSP '88, vol. 1, pp.370-373, Apr. 1988.* * |
R.J. McAulay et al., "Speech analysis/synthesis based on a sinusoidal representation," IEEE Trans. on Acoustics, Speech, and Signal Processing, vol.34, No. 4, pp.744-754, Aug. 1986. * |
T.V. Ramabadran et al., "An efficient synthesis method for sinusoidal vocoders," Proc. IEEE Workshop on Speeching Coding 2000, pp.44-46, Sep. 2000.* * |
Cited By (7)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20020154774A1 (en) * | 2001-04-18 | 2002-10-24 | Oomen Arnoldus Werner Johannes | Audio coding |
US7319756B2 (en) * | 2001-04-18 | 2008-01-15 | Koninklijke Philips Electronics N.V. | Audio coding |
US20100030557A1 (en) * | 2006-07-31 | 2010-02-04 | Stephen Molloy | Voice and text communication system, method and apparatus |
US9940923B2 (en) | 2006-07-31 | 2018-04-10 | Qualcomm Incorporated | Voice and text communication system, method and apparatus |
US20140052448A1 (en) * | 2010-05-31 | 2014-02-20 | Simple Emotion, Inc. | System and method for recognizing emotional state from a speech signal |
US8825479B2 (en) * | 2010-05-31 | 2014-09-02 | Simple Emotion, Inc. | System and method for recognizing emotional state from a speech signal |
US9549068B2 (en) | 2014-01-28 | 2017-01-17 | Simple Emotion, Inc. | Methods for adaptive voice interaction |
Also Published As
Publication number | Publication date |
---|---|
US20020184026A1 (en) | 2002-12-05 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US5787387A (en) | Harmonic adaptive speech coding method and system | |
Röbel et al. | Efficient spectral envelope estimation and its application to pitch shifting and envelope preservation | |
US7792672B2 (en) | Method and system for the quick conversion of a voice signal | |
US9264003B2 (en) | Apparatus and method for modifying an audio signal using envelope shaping | |
US9368103B2 (en) | Estimation system of spectral envelopes and group delays for sound analysis and synthesis, and audio signal synthesis system | |
EP0822538B1 (en) | Method of transforming periodic signal using smoothed spectrogram, method of transforming sound using phasing component and method of analyzing signal using optimum interpolation function | |
US8280724B2 (en) | Speech synthesis using complex spectral modeling | |
US7765101B2 (en) | Voice signal conversation method and system | |
US8401861B2 (en) | Generating a frequency warping function based on phoneme and context | |
EP0759201A1 (en) | Audio analysis/synthesis system | |
EP1914729A1 (en) | Spectral band replication and high frequency reconstruction audio coding methods and apparatuses using adaptive noise-floor addition and noise substitution limiting | |
BRPI0612564A2 (en) | method for bandwidth extension for communications and system for artificially extending voice bandwidth | |
US20100057476A1 (en) | Signal bandwidth extension apparatus | |
US8017855B2 (en) | Apparatus and method for converting an information signal to a spectral representation with variable resolution | |
US20130311189A1 (en) | Voice processing apparatus | |
Serra | Introducing the phase vocoder | |
US20030204543A1 (en) | Device and method for estimating harmonics in voice encoder | |
US6845359B2 (en) | FFT based sine wave synthesis method for parametric vocoders | |
Nakano et al. | A spectral envelope estimation method based on F0-adaptive multi-frame integration analysis. | |
CN108806721A (en) | signal processor | |
US6253172B1 (en) | Spectral transformation of acoustic signals | |
Sundermann et al. | Time domain vocal tract length normalization | |
Popa et al. | A novel technique for voice conversion based on style and content decomposition with bilinear models. | |
Gu et al. | Mandarin singing voice synthesis using an hnm based scheme | |
Gu et al. | A discrete-cepstrum based spectrum-envelope estimation scheme and its example application of voice transformation |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: MOTOROLA, INC., ILLINOISFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:RAMABADRAN, TENKASI;REEL/FRAME:011640/0186Effective date: 20010322 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
AS | Assignment |
Owner name: MOTOROLA MOBILITY, INC, ILLINOISFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MOTOROLA, INC;REEL/FRAME:025673/0558Effective date: 20100731 |
|
FPAY | Fee payment |
Year of fee payment: 8 |
|
AS | Assignment |
Owner name: MOTOROLA MOBILITY LLC, ILLINOISFree format text: CHANGE OF NAME;ASSIGNOR:MOTOROLA MOBILITY, INC.;REEL/FRAME:029216/0282Effective date: 20120622 |
|
AS | Assignment |
Owner name: GOOGLE TECHNOLOGY HOLDINGS LLC, CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MOTOROLA MOBILITY LLC;REEL/FRAME:034420/0001Effective date: 20141028 |
|
FPAY | Fee payment |
Year of fee payment: 12 |
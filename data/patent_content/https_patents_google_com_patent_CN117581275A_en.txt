CN117581275A - Eye gaze classification - Google Patents
Eye gaze classification Download PDFInfo
- Publication number
- CN117581275A CN117581275A CN202280046760.9A CN202280046760A CN117581275A CN 117581275 A CN117581275 A CN 117581275A CN 202280046760 A CN202280046760 A CN 202280046760A CN 117581275 A CN117581275 A CN 117581275A
- Authority
- CN
- China
- Prior art keywords
- user
- regions
- region
- display
- gaze
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Pending
Links
- 238000000034 method Methods 0.000 claims abstract description 74
- 238000013527 convolutional neural network Methods 0.000 claims abstract description 42
- 230000015654 memory Effects 0.000 claims description 50
- 239000004984 smart glass Substances 0.000 claims description 29
- 238000004590 computer program Methods 0.000 claims description 23
- 230000006870 function Effects 0.000 claims description 20
- 238000013528 artificial neural network Methods 0.000 claims description 18
- 238000012545 processing Methods 0.000 claims description 16
- 230000003190 augmentative effect Effects 0.000 claims description 13
- 239000013598 vector Substances 0.000 claims description 13
- 238000013507 mapping Methods 0.000 claims description 6
- 230000002123 temporal effect Effects 0.000 claims description 5
- 238000012549 training Methods 0.000 description 25
- 238000010586 diagram Methods 0.000 description 15
- 230000004913 activation Effects 0.000 description 10
- 238000004891 communication Methods 0.000 description 7
- 239000011521 glass Substances 0.000 description 5
- 238000011176 pooling Methods 0.000 description 5
- 230000008569 process Effects 0.000 description 5
- 238000013145 classification model Methods 0.000 description 4
- 238000013461 design Methods 0.000 description 4
- 210000003128 head Anatomy 0.000 description 4
- 230000003287 optical effect Effects 0.000 description 4
- 230000000007 visual effect Effects 0.000 description 4
- 238000013459 approach Methods 0.000 description 3
- 230000008859 change Effects 0.000 description 3
- 238000012986 modification Methods 0.000 description 3
- 230000004048 modification Effects 0.000 description 3
- 230000003213 activating effect Effects 0.000 description 2
- 230000008901 benefit Effects 0.000 description 2
- 238000006243 chemical reaction Methods 0.000 description 2
- 238000007796 conventional method Methods 0.000 description 2
- 230000003993 interaction Effects 0.000 description 2
- 239000007787 solid Substances 0.000 description 2
- 238000003491 array Methods 0.000 description 1
- 230000000712 assembly Effects 0.000 description 1
- 238000000429 assembly Methods 0.000 description 1
- 230000001413 cellular effect Effects 0.000 description 1
- 230000004424 eye movement Effects 0.000 description 1
- 238000001914 filtration Methods 0.000 description 1
- 238000003384 imaging method Methods 0.000 description 1
- 239000004973 liquid crystal related substance Substances 0.000 description 1
- 230000007787 long-term memory Effects 0.000 description 1
- 230000006855 networking Effects 0.000 description 1
- 238000003062 neural network model Methods 0.000 description 1
- 230000000306 recurrent effect Effects 0.000 description 1
- 230000004044 response Effects 0.000 description 1
- 230000001953 sensory effect Effects 0.000 description 1
- 230000006403 short-term memory Effects 0.000 description 1
- 238000006467 substitution reaction Methods 0.000 description 1
- 230000009466 transformation Effects 0.000 description 1
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/01—Input arrangements or combined input and output arrangements for interaction between user and computer
- G06F3/011—Arrangements for interaction with the human body, e.g. for user immersion in virtual reality
- G06F3/013—Eye tracking input arrangements
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V40/00—Recognition of biometric, human-related or animal-related patterns in image or video data
- G06V40/10—Human or animal bodies, e.g. vehicle occupants or pedestrians; Body parts, e.g. hands
- G06V40/18—Eye characteristics, e.g. of the iris
- G06V40/193—Preprocessing; Feature extraction
-
- G—PHYSICS
- G02—OPTICS
- G02B—OPTICAL ELEMENTS, SYSTEMS OR APPARATUS
- G02B27/00—Optical systems or apparatus not provided for by any of the groups G02B1/00 - G02B26/00, G02B30/00
- G02B27/0093—Optical systems or apparatus not provided for by any of the groups G02B1/00 - G02B26/00, G02B30/00 with means for monitoring data relating to the user, e.g. head-tracking, eye-tracking
-
- G—PHYSICS
- G02—OPTICS
- G02B—OPTICAL ELEMENTS, SYSTEMS OR APPARATUS
- G02B27/00—Optical systems or apparatus not provided for by any of the groups G02B1/00 - G02B26/00, G02B30/00
- G02B27/01—Head-up displays
- G02B27/0101—Head-up displays characterised by optical features
-
- G—PHYSICS
- G02—OPTICS
- G02B—OPTICAL ELEMENTS, SYSTEMS OR APPARATUS
- G02B27/00—Optical systems or apparatus not provided for by any of the groups G02B1/00 - G02B26/00, G02B30/00
- G02B27/01—Head-up displays
- G02B27/017—Head mounted
- G02B27/0172—Head mounted characterised by optical features
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F18/00—Pattern recognition
- G06F18/20—Analysing
- G06F18/23—Clustering techniques
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N3/00—Computing arrangements based on biological models
- G06N3/02—Neural networks
- G06N3/08—Learning methods
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V10/00—Arrangements for image or video recognition or understanding
- G06V10/70—Arrangements for image or video recognition or understanding using pattern recognition or machine learning
- G06V10/764—Arrangements for image or video recognition or understanding using pattern recognition or machine learning using classification, e.g. of video objects
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V10/00—Arrangements for image or video recognition or understanding
- G06V10/70—Arrangements for image or video recognition or understanding using pattern recognition or machine learning
- G06V10/82—Arrangements for image or video recognition or understanding using pattern recognition or machine learning using neural networks
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V20/00—Scenes; Scene-specific elements
- G06V20/20—Scenes; Scene-specific elements in augmented reality scenes
-
- G—PHYSICS
- G02—OPTICS
- G02B—OPTICAL ELEMENTS, SYSTEMS OR APPARATUS
- G02B27/00—Optical systems or apparatus not provided for by any of the groups G02B1/00 - G02B26/00, G02B30/00
- G02B27/01—Head-up displays
- G02B27/0101—Head-up displays characterised by optical features
- G02B2027/0138—Head-up displays characterised by optical features comprising image capture systems, e.g. camera
-
- G—PHYSICS
- G02—OPTICS
- G02B—OPTICAL ELEMENTS, SYSTEMS OR APPARATUS
- G02B27/00—Optical systems or apparatus not provided for by any of the groups G02B1/00 - G02B26/00, G02B30/00
- G02B27/01—Head-up displays
- G02B27/017—Head mounted
- G02B2027/0178—Eyeglass type
Abstract
Techniques for tracking a user's gaze include identifying an area of a display at which the user's gaze is directed, the area including a plurality of pixels. By determining regions, rather than points, when a region corresponds to an element of a user interface, the improved techniques enable the system to activate the element to which the determined region was selected. In some embodiments, the system makes the determination using a classification engine that includes a convolutional neural network; such an engine takes as input and outputs a list of probabilities of gazing at each of the regions an image of the user's eyes.
Description
Cross Reference to Related Applications
This application is a continuation of, and claims benefit from, U.S. application Ser. No.17/305,219 filed on 7/1 at 2021, the disclosure of which is incorporated herein by reference in its entirety.
Technical Field
The present description relates to determining an area of a display to which a user's eye gaze is directed.
Background
Some Augmented Reality (AR) systems track the eye gaze direction, i.e., the direction in which the user's eyes are oriented. For example, the AR system may include smart glasses for displaying content to the user on a transparent display. Some smart glasses include a camera on the glasses frame configured to generate images of the user's eyes for tracking eye gaze direction.
Such AR systems may track eye gaze directions to enable a user interface on a transparent display. For example, the first content and the second content may be rendered on a transparent display. The AR system may infer whether the user is watching the first content or the second content by determining a direction of eye gaze of the user.
Disclosure of Invention
Embodiments disclosed herein provide an improved technique for tracking a user's gaze with respect to a display. In some implementations, the display is a transparent display, such as a transparent display embedded in smart glasses used in an AR system. In some implementations, the display is a display used in a mobile computing system, such as a smart phone, tablet computer, or the like. However, the improved technique involves determining which area of the display the user's gaze is directed to, rather than tracking the user's gaze at a particular point on the display. By determining regions, rather than points, when a region corresponds to an element of a user interface, the improved techniques enable the system to activate the element to which the determined region was selected. In some embodiments, the system makes the determination using a classification engine that includes a convolutional neural network; such an engine takes as input and outputs a list of probabilities of gazing at each of the regions an image of the user's eyes.
In one general aspect, a method may include receiving image data representing at least one image of an eye of a user viewing a display at a time, the display including a plurality of regions and configured to operate in an Augmented Reality (AR) application, each of the plurality of regions including a plurality of pixels and corresponding to a respective element of a user interface. The method may further include identifying, based on the image data, a region of the plurality of regions of the display at which the gaze of the user is directed, the identifying including inputting at least one image of the user's eyes into a classification engine configured to classify the gaze as being directed to one of the plurality of regions. The method may further include activating an element of the user interface corresponding to the identified region.
In another general aspect, a computer program product includes a non-transitory storage medium including code that, when executed by processing circuitry of a computing device, causes the processing circuitry to perform a method. The method may include receiving image data representing at least one image of an eye of a user viewing a display at a time, the display including a plurality of regions and being configured to operate in an Augmented Reality (AR) application, each of the plurality of regions including a plurality of pixels and corresponding to a respective element of a user interface. The method may further include identifying, based on the image data, a region of the plurality of regions of the display at which the gaze of the user is directed, the identifying including inputting at least one image of the user's eyes into a classification engine configured to classify the gaze as being directed to one of the plurality of regions. The method may further include activating an element of the user interface corresponding to the identified region.
In another general aspect, an electronic device includes a memory and a control circuit coupled to the memory. The control circuitry may be configured to receive image data representing at least one image of an eye of a user viewing a display at a time, the display comprising a plurality of regions and being configured to operate in an Augmented Reality (AR) application, each of the plurality of regions comprising a plurality of pixels and corresponding to a respective element of a user interface. The control circuit may be further configured to identify, based on the image data, a region of the plurality of regions of the display at which the gaze of the user is directed, the identifying comprising inputting at least one image of the eyes of the user into a classification engine configured to classify the gaze as being directed to one of the plurality of regions. The control circuitry may be further configured to activate an element of the user interface corresponding to the identified region.
The details of one or more implementations are set forth in the accompanying drawings and the description below. Other features will be apparent from the description and drawings, and from the claims.
Drawings
Fig. 1A is a diagram illustrating example smart glasses for use in an Augmented Reality (AR) system.
FIG. 1B is a diagram illustrating an example electronic environment in which the improved techniques described herein may be implemented.
Fig. 2A is a diagram illustrating an example area on a display including an activation area.
FIG. 2B is a diagram illustrating an example area on a display containing an activation area; in this case, the region may not be continuous.
Fig. 3A is a diagram illustrating an example Convolutional Neural Network (CNN) configured to classify an image of a user's eye as having a gaze directed to a particular region.
Fig. 3B is a diagram illustrating an example Convolutional Neural Network (CNN) configured to classify images of a user's eyes and determine a particular point at which gaze is directed.
Fig. 4 is a diagram illustrating an example convolutional layer forming another branch of a CNN, which in this case is configured to accommodate different region or tile geometries.
FIG. 5 is a flow chart illustrating an example method of performing improved techniques within an electronic environment.
Fig. 6 is a diagram illustrating an example of a computer device and a mobile computer device that may be used to implement the described techniques.
Detailed Description
Conventional eye gaze direction trackers are configured to estimate pixels of a transparent display that the user's eyes are most likely viewing. For example, a conventional eye gaze direction tracker may derive a pixel-based heat map of a transparent display, where each pixel has a color based on a probability that the user is viewing the pixel.
Because the output of the conventional eye gaze direction tracker is directed to the identification of pixels of the transparent display, a technical problem with the above-described conventional method of tracking the user's gaze is that the conventional eye gaze direction tracker may be resource intensive and error prone. For example, while conventional eye gaze direction trackers may identify pixels that are most likely to be being viewed by a user, such pixels may not be identified with any content rendered on a transparent display. Thus, a system employing such an eye gaze direction tracker may also need to map the pixel to the displayed content; such mapping may consume computing resources required for other tasks and may interfere with the user's experience.
According to embodiments described herein, a solution to the above technical problem includes identifying an area of a display at which a gaze of a user is directed, the area including a plurality of pixels. By determining regions, rather than points, when a region corresponds to an element of a user interface, the improved techniques enable the system to activate the element to which the determined region was selected. In some embodiments, the system makes the determination using a classification engine that includes a convolutional neural network; such an engine takes as input and outputs a list of probabilities of gazing at each of the regions an image of the user's eyes.
A technical advantage of the disclosed embodiments is that such embodiments use fewer computing resources and are less prone to error. For example, in some implementations, the region may be associated with a user interface element, such as a window containing content rendered on the display; such an association uses less computing resources to activate a window on the display than mapping the identified pixels to such a window as done in a conventional eye gaze direction tracker.
It should be noted that the output of the improved technique is a vector of possibilities corresponding to regions rather than individual pixels, as compared to the conventional approach described above. Thus, the output has a size much smaller than that of the conventional method.
Fig. 1A is a diagram illustrating an example smart glasses 110 for use as a head in an Augmented Reality (AR) system. Fig. 1A shows the world side 112 (a) of the transparent display 112 of the smart glasses 110. The smart glasses 110 may be used as a Head Mounted Display (HMD) within an AR system. The smart glasses 110 include a frame 111, wherein a transparent display 112 is coupled in the frame 111. In some implementations, the audio output device 113 is coupled to the frame 111. In some implementations, the touch surface 114 allows user control, input, etc. of the smart glasses 110. The smart glasses 110 may include a sensing system 116 including various sensing system devices and a control system 117 including various control system devices to facilitate operation of the smart glasses 110. The control system 117 may include a processor 119 operably coupled to components of the control system 117 and a communication module 115 that provides for communication with external devices and/or networks. The smart glasses 110 may also include an image sensor 118 (i.e., a camera 118), a depth sensor, a light sensor, and other such sensing devices. In some implementations, the image sensor 118 or camera 118 is capable of capturing still and/or moving images, patterns, features, light, etc.
It should be noted that in some embodiments, the smart glasses 110 may be replaced with any kind of HMD including a transparent display, wherein the form of the HMD is not necessarily wearable glasses or goggles. For example, one such HMD may take the form of a camera with a viewfinder configured to display AR content and allow viewing of the world-side environment.
Fig. 1B is a diagram illustrating an example electronic environment 100 in which the above-described aspects may be implemented. The computer 120 is configured to determine an area of the display at which the user's gaze is directed.
Computer 120 includes a network interface 122, one or more processing units 124, and memory 126. Network interface 122 includes, for example, an ethernet adapter or the like, for converting electronic and/or optical signals received from network 150 into electronic form for use by computer 120. The set of processing units 124 includes one or more processing chips and/or assemblies. Memory 126 includes volatile memory (e.g., RAM) and nonvolatile memory such as one or more ROMs, disk drives, solid state drives, and the like. Together, the set of processing units 124 and the memory 126 form a control circuit configured and arranged to perform the various methods and functions as described herein.
In some implementations, one or more components of computer 120 may be or include a processor (e.g., processing unit 124) configured to process instructions stored in memory 126. Examples of such instructions as depicted in fig. 1 include an input manager 130, a classification manager 140, and an activation manager. Further, as shown in fig. 1, the memory 126 is configured to store various data, which is described with respect to a corresponding manager using such data.
The input manager 130 is configured to receive input data such as image data 132, region data 134, slip data 136, and user data 138. In some implementations, the various input data is captured via hardware connected to a display, such as transparent display 112 (fig. 1A). For example, the hardware may include a camera, such as camera 118, configured to capture images of the user's eyes. In some implementations, the hardware includes any of a gyroscope, magnetometer, GPS receiver, etc. to obtain input data, such as slip data 136 and user data 138. In some implementations, the input manager 130 is configured to receive input data through the network interface 122.
The image data 132 represents at least one image of the user's eyes. The image data 132 is arranged for input into the classification manager 140. In some implementations, the image data 132 represents a sequence of images of the user's eyes for tracking gaze direction. In some implementations, the sequence of images is a frame of video that tracks the motion of the user's eyes.
The region data 134 represents a region of the display. Each of the regions includes a plurality of pixels of the display. In some implementations, each region corresponds to a respective element of the user interface, e.g., a window containing content to be viewed by the user. In some embodiments, each region has a rectangular shape including an array of pixels. In some embodiments, at least one region is discontinuous and comprises a plurality of rectangles. In some implementations, the region data 134 includes an identifier that identifies each region.
For embodiments in which the display is a transparent display used in smart glasses, the slip data 136 represents parameter values corresponding to the degree to which the smart glasses slip from a nominal position on the user's face. In the nominal configuration of the gaze tracking system, the eye is at a nominal position with a known (design) pose relative to the display. During wear, the position of the glasses may change from this nominal position (slipping over the nose, being adjusted by the user, etc.). When slippage occurs, the pose between the eye and the eye tracking camera changes and the image of the user's eye appears to be different from that of the nominal configuration. Furthermore, the gaze angle will be different, as the position of the display changes with the slipping of the smart glasses. Thus, in some implementations, the glide data 136 includes an estimate of the eye position relative to the camera as a parameter value. In some embodiments, such relative eye positions are expressed as three-dimensional vectors. In some embodiments, such relative eye positions are expressed as angular coordinates on a sphere.
The user data 138 represents parameter values describing physical differences between users that may affect the determination of the area at which the user's gaze is directed. For example, user differences in eye appearance, visual axis, head shape, etc. can affect the accuracy of the determination. Thus, in some embodiments, the user data 138 represents values of parameters defining the appearance of the eye, the visual axis, and the shape of the head. In some embodiments, such parameter values are inferred directly from image data 134.
The classification manager 140 is configured to determine an area of the display to which the user's gaze is directed, thereby generating classification data 144 based at least on the image data 132. In some implementations, the classification data 144 is based on any one of the region data 134, the glide data 136, and the user data 138. In some implementations, the classification manager 140 includes at least one branch of a Convolutional Neural Network (CNN) that acts as a classification engine. Classification manager 140 includes a training manager 141 and an identification manager 144. Classification data 144 includes training data 145 and identification data 146.
In some implementations, the CNN takes the image data 132 as input. In some embodiments, the CNN also takes as input any of the zone data 134, the slip data 136, and the user data 138. In some embodiments, the CNN has a specified number of layers, one of which is the output layer that produces the output. Such a neural network is configured to produce a classification result: which area of the display is the area to which the user's gaze is directed. In some implementations, the output includes a vector of values indicating a likelihood that the user's gaze is directed to each region.
The training manager 141 is configured to generate a classification engine, i.e. a neural network, based on the training data 145. For example, in some implementations, the training data 145 represents an image of the user's eyes and a corresponding identifier of the region at which the user's gaze was directed when the image was taken. The training manager 141 then adjusts the weights of the nodes within the hidden layer of the neural network to optimize the specified loss function. In some implementations, the loss function includes a class cross entropy suitable for a multi-class classification engine such as the CNN described above. In some embodiments, the loss function comprises a Kullback-Leibler divergence loss. In some implementations, the classification engine learns a calibration of different region layouts based on the region data 134; further details are shown with respect to fig. 4. The weights adjusted by the training manager 141 and other data representing the architecture of the neural network are included in the classification data 144.
The recognition manager 142 is configured to classify the image data 132 to recognize an area of the display at which the user's gaze is directed. As shown in fig. 1B, the classification data 144 includes identification data 146 output from the identification manager 142. In some implementations, the identification data 146 represents a vector of likelihood values, e.g., a probability that the user's gaze is directed to each of the regions of the display.
In some implementations, the recognition manager 142 is configured to generate classification data based on a loss function for training the classification engine as described above. In some implementations, the identity manager 142 is configured to accept any of the input area data 134, the shuffle data 136, and the user data 138. In some implementations, the training data 145 includes region, swipe, and user data coupled with an identifier of a region to which the user's gaze is directed. In some implementations, each of the above types of data is used to generate additional branches of the classification engine; further details are shown with respect to fig. 4.
In some implementations, each of the regions described in the region data 134 corresponds to an element of the user interface, such as a window. The activation manager 150 is configured to activate a user interface element on the display in response to the user interface element corresponding to an area determined to be the area to which the user's gaze is directed. For example, when it is determined that the user's gaze is directed to an area of the display corresponding to the window, e.g., the window is contained in the area, the window is the area, etc., the activation manager 150 is configured to activate the window, i.e., to activate the window by highlighting the title bar of the window while darkening the title bars of other windows. In embodiments involving a display embedded in the smart glasses, a user may perform an operation on content displayed in a window using, for example, voice commands. When the user directs his gaze to another area and the classification manager 140 identifies the other area as the area to which the user's gaze is directed, the activation manager 150 activates the window corresponding to the other area.
The components (e.g., modules, processing units 124) of the user device 120 may be configured to operate based on one or more platforms (e.g., one or more similar or different platforms) that may include one or more types of hardware, software, firmware, operating systems, runtime libraries, etc. In some implementations, components of computer 120 may be configured to operate within a cluster of devices (e.g., a server farm). In such an embodiment, the functions and processing of the components of computer 120 may be distributed to several devices of a cluster of devices.
The components of computer 120 may be or include any type of hardware and/or software configured to process attributes. In some implementations, one or more portions of the components shown in the components of the computer 120 in fig. 1B may be or include hardware-based modules (e.g., digital Signal Processors (DSPs), field Programmable Gate Arrays (FPGAs), memory), firmware modules, and/or software-based modules (e.g., modules of computer code, a set of computer-readable instructions that may be executed at a computer). For example, in some implementations, one or more portions of the components of computer 120 may be or include software modules configured to be executed by at least one processor (not shown). In some implementations, the functionality of the components may be included in different modules and/or different components than those illustrated in fig. 1B, including combining the functionality illustrated as two components into a single component.
Although not shown, in some embodiments, components of computer 120 (or portions thereof) may be configured to operate within, for example, a data center (e.g., a cloud computing environment), a computer system, one or more server/host devices, and the like. In some embodiments, components of computer 120 (or portions thereof) may be configured to operate within a network. Accordingly, components of computer 120 (or portions thereof) may be configured to function within various types of network environments that may include one or more devices and/or one or more server devices. For example, the network may be or include a Local Area Network (LAN), a Wide Area Network (WAN), or the like. The network may be or include a wireless network and/or a wireless network implemented using, for example, gateway devices, bridges, switches, etc. The network may include one or more segments and/or may have portions based on various protocols, such as Internet Protocol (IP) and/or proprietary protocols. The network may comprise at least a portion of the internet.
In some implementations, one or more components of computer 120 may be or include a processor configured to process instructions stored in memory. For example, input manager 130 (and/or a portion thereof), classification manager 140 (and/or a portion thereof), and activation manager 150 (and/or a portion thereof) may be a combination of processors and memory configured to execute instructions related to a process that implements one or more functions.
In some implementations, the memory 126 may be any type of memory, such as random access memory, disk drive memory, flash memory, and the like. In some implementations, the memory 126 can be implemented as more than one memory component (e.g., more than one RAM component or disk drive memory) associated with components of the VR server computer 120. In some implementations, the memory 126 may be a database memory. In some implementations, the memory 126 may be or include non-local memory. For example, the memory 126 may be or include memory shared by multiple devices (not shown). In some implementations, the memory 126 may be associated with a server device (not shown) within the network and configured to serve components of the computer 120. As shown in fig. 1, the memory 126 is configured to store various data, including image training data 131, reference object data 136, and prediction engine data 150.
Fig. 2A is a diagram illustrating example regions 220 (1-4) on a display 200 that includes an activation region 220 (1). In some implementations, the display 200 is a transparent display embedded in smart glasses for AR applications. In some implementations, the display 200 is a display on a portable computing device, such as a smart phone or tablet computer.
Display 200 includes pixel array 210; each pixel represents a color or gray level of a building block that is the content of the display. Each of the regions 220 (1-4) includes a corresponding array of pixels. As shown in FIG. 2A, regions 210 (1-4) have rounded corners, but this is by no means a requirement.
The region 220 (1) is shown as being identified as the region to which the user's gaze is directed, while the other regions 220 (2-4) are not identified as such. This means that the recognition manager 142 determines the gaze-directed area 220 (1) of the user. The classification engine 140 is configured to perform the identification of regions in real time such that regions are identified with very little delay when the user changes the direction of his gaze. Thus, the arrangement of the regions shown in FIG. 2A means that the user is currently viewing region 220 (1).
FIG. 2B is a diagram illustrating example regions 260 (1-4) on a display that includes an activation region 260 (1); in this case, the region may not be continuous. For example, as shown in fig. 2B, region 260 (1) includes two separate sub-regions that are separate from each other. Such non-contiguous areas may occur, for example, when the sub-areas correspond to different windows in a single application. In some embodiments, the region 260 (1) may not have a rectangular shape, but is continuous; in such an embodiment, the region may be decomposed into several rectangles or polygons defined on the grid 210 of pixels.
Note that the recognition manager 142 does not require the eye tracker to provide the exact pixels of the gaze, but only needs to find the area at which the gaze is directed. In the example shown in fig. 2A and 2B, if gazing on the area 220 (1-4), the camera would need to provide input data. By formulating a question in this way, the accuracy requirements for tracking the user's gaze may be relaxed to only the accuracy required for a given user interface design. Furthermore, by doing so, computation time, power consumption, memory may be reduced and gaze tracking may be made more robust.
Fig. 3A is a diagram illustrating an example Convolutional Neural Network (CNN) 300 configured to classify an image of a user's eye as having a gaze directed to a particular region. This is a Convolutional Neural Network (CNN) consisting of a CNN layer, a pooling layer, and a dense layer. The input is an image obtained from a camera mounted on the smart glasses frame and imaging the eyes of the user. The output of the network is a vector of length N, where N is the number of regions. The index of the maximum value in the output vector 350 gives the identified region of gaze. Alternatively, a softmax layer 340 may be added after the last dense layer, normalizing each value inside the output vector to be between 0 and 1, and all values add up to 1. Each value then represents the probability that the gaze is directed to a particular region. In some embodiments, each CNN layer includes an activation function, such as a rectifying linear unit, sigmoid, or hyperbolic tangent.
In some embodiments where there are two classes, i.e., regions, that have similar probabilities (i.e., probabilities that differ by less than a specified threshold difference), computer 120 may render and display only the two regions. In some embodiments, the computer 120 asks the user to manually select an area from the two areas displayed.
In some implementations, the region data 134 includes an identifier for a space outside of the display, i.e., defining a new region that is not included in any region or includes any pixels. In such an embodiment, it may be determined that the user is not viewing the display.
As shown in fig. 3A, input data 305 is introduced into a 2D convolutional layer 310 (1), which is followed by a pooling layer 320 (1). In the example shown in FIG. 3, there are four 2D convolutional layers 310 (1-4), each followed by a corresponding pooling layer 320 (1-4). Each of the four convolutional layers 310 (1-4) shown has a kernel size of 3X3 with two strides. The output sizes from the 2D convolutional layers 310 (1-4) are 16, 32, 64, and 128, respectively.
Following these convolutional layers 310 (1-4) and their corresponding pooling layers 320 (1-4) are dense layers 330 (1) and 330 (2). In some implementations, dense layers 330 (1) and 330 (2) are used to merge other branches of the CNN into branches defined as having convolutional layers 310 (1-4) and their corresponding pooling layers 320 (1-4). For example, the second branch of the CNN may be trained to generate output values based on the region data 134, the glide data 136, and/or the user data 138. Dense layers 330 (1) and 330 (2) may then provide adjustment to the classification model defined by the first branch of the CNN based on the placement of the regions, any slippage of the smart glasses down the user's face, or other user characteristics.
The classification model is generated by training manager 141 using training data 145. The training data 145 represents a training data set and identifiers for regions of gaze pointing indicated in the training data set. The training dataset comprises images of the eyes of the user over time. In some embodiments, the image is generated periodically, e.g., every second, every 0.5 seconds, every 0.1 seconds, etc. These images and corresponding region identifiers are input to the loss function and the values of the layer nodes are generated by optimizing the loss function.
In some implementations, the region data 134 is represented in terms of pixel coordinates or angles. In such embodiments, the training manager 141 converts the coordinates or angles into a region identifier. In some implementations, the conversion may be accomplished using a lookup table. In some implementations, the conversion is accomplished by calculating the closest tile center from, for example, the euclidean or cosine distance between the gaze vector and the vector representing the center of the region.
In some implementations, the loss function includes a classification cross entropy that is appropriate for the multi-class classification problem. Such cross entropy loss can be expressed mathematically as follows:
Where C is the number of classes (e.g., the number of regions on the display), p i Is a class i tag and q i Is the output of the network; in some arrangements, it is the output of the softmax layer. In some embodiments, the labels of the classes are represented as one-hot, where p is the only class to which the example belongs i =1, otherwise p i =0. The above equation represents each example (i.e., from trainingAn image of data 145); the total loss is obtained by summing the cross entropy losses over all examples in the batch and dividing by the batch size.
In some embodiments, the loss function comprises a Kullback-Leibler divergence loss. Such a Kullback-Leibler divergence loss can be expressed mathematically as follows:
where C is the number of classes (e.g., the number of regions on the display), p i Is a class i tag and q i Is the output of the network; in some arrangements, it is the output of the softmax layer. The above equation represents the loss of each instance (i.e., image from training data); the total loss is obtained by summing the Kullback-Leibler divergence losses over all examples in the batch and dividing by the batch size.
In some implementations, the loss function includes a triplet loss that is used to optimize the metric space defined by the region containing the gaze space, i.e., all positions that the user can view; in such a metric space, image clusters may be defined. These image clusters, in turn, define anchor points, and the penalty function may be based in part on distance from the anchor points. Such triplet losses can be expressed mathematically as follows:
Wherein f (x) represents a neural network transformation, A k Representing anchor input (i.e., image), P k Is a positive example, and N k Is a negative example. The summation is over all possible triples (anchor, positive example, negative example). Alpha represents a small number that introduces a margin between the positive and negative examples, which is used in a trivial solution avoiding all zeros.
Fig. 3B is a diagram illustrating an example Convolutional Neural Network (CNN) 360 configured to classify an image of a user's eye as having a gaze directed to a particular point. CNN 360 is similar to CNN 300 (fig. 3A) except that new dense layers 370 (1-4) are present. Dense layer 370 (1, 2) is similar to dense layer 330 (1, 2) of fig. 3A. However, the dense layer 370 (3, 4) is configured to generate coordinates of the most likely point on the display at which the user's gaze is directed.
As described above, dense layers 330 (1) and 330 (2) of FIG. 3A or dense layers 370 (1-4) of FIG. 3B allow for adjustments to the classification model based on other input data such as region data 134, glide data 136, and user data 138. An example branch that provides output to a dense layer (e.g., dense layer 330 (1)) is shown in fig. 4.
Fig. 4 is a diagram illustrating an example convolutional layer forming another branch of CNN 400, in which case CNN 400 is configured to accommodate different region or tile geometries. Note that similar branches may be defined for slippage and user adjustment. The output of the other branch is fed into a dense layer that adjusts the output from using only image data 132.
CNN 400 brings input 405 into convolutional layer 410 of the first branch and provides the first output to cascade layer 440 via the first dense layer. In the second branch, the CNN inputs the tile design 420, i.e., the arrangement of regions, into the learned embedding layer 430. The output of the learned embedding layer 430 is also input into the cascade layer 440. The cascade layer 440 cascades the output of the first dense layer with the output of the embedded layer 430. The cascaded output is used to determine the region at which the gaze is directed.
There are several alternative methods to determine the area of gaze pointing instead of the method shown in fig. 4. In some implementations, a plurality of models are trained, each model corresponding to a respective arrangement. In some implementations, training is performed on a small area, and the output is binned for each arrangement. In some embodiments, the network is trained such that the network has a fixed convolutional layer for all arrangements, but a different dense layer for each arrangement.
A similar approach may be taken with respect to other input data. For example, with respect to user calibration based on glide data 136, the eye is at a nominal position with a known (design) pose relative to the display. During wear, the position of the glasses may change from this nominal position (slipping over the nose, being adjusted by the user, etc.). When slippage occurs, the pose between the eye and the eye tracking camera changes and the image of the eye appears to be different from that of the nominal configuration. Furthermore, the gaze angle will be different, as the position of the display changes with the slipping of the glasses. Thus, the neural network may produce erroneous classification.
In some embodiments, the pose (position and orientation) of the eye relative to the camera is inferred. For this purpose, the following method may be adopted: training learning decouples gaze classification and estimation of eye position relative to a camera (or display). The estimation of eye position relative to the display may use portions of the eye image that do not change with gaze (such as corners of the eye). For example, the selection of these image portions may be accomplished using an attention neural network model. These image portions may be compared in two sets of images: the first set may be from a calibration phase and the second set from images captured during a gaze classification runtime.
Other alternatives to adjusting the classification model using the glide data 136 include assumptions of a limited set of possible glide locations and performing classification of eye locations based on the limited set. The user prompt may also be used to detect whether slippage has occurred. Finally, a brute force approach may be employed, where the CNN is trained to be invariant to positional changes due to slippage.
Regarding the user data 138, the CNN may be calibrated to account for differences in eye appearance, visual axis, head shape, etc. For example, the calibration scheme involves directing a user to view a particular target on the display that has a known region association. During calibration, eye camera images are recorded and the area identifier of the target is saved as a tag as part of the user data 138. The user data 138 may then be used in the following manner:
Fine-tuning an existing pre-trained neural network,
training specifically adds additional network branches or structures for calibration,
learning during training only the encoder that takes calibration data as input and predicts the user-specific embedded layer,
align the image such that the eye marks in the user data 138 are aligned with the eye marks in the training data 141.
In some implementations, a smooth, steady temporal gaze is desired. In such an embodiment, temporal filtering may be used to achieve a smooth, stable temporal gaze, as follows:
calculate an average or median score from softmax layer outputs from successive video frames in the image data 132,
incorporating a Recurrent Neural Network (RNN) layer configured to take the output of the convolutional layer and train the RNN units (e.g., long and short term memory units, GRU units, etc.) on top,
in some embodiments, eye movement is classified as fixed, glance or tracking.
In some implementations, the output of the CNN includes the region identifier and the estimated location within the display of the gaze direction.
Fig. 5 is a flow chart depicting an example method 500 of determining an area at which a user's gaze is directed. The method 500 may be performed by a software construct residing in the memory 126 of the computing circuitry 120 and executed by the set of processing units 124, or may be performed by a software construct residing in the memory of the computing circuitry 120, as described in connection with fig. 1B.
At 502, computer 120 receives image data (e.g., image data 132) representing at least one image of an eye of a user viewing a display at a time, the display including a plurality of regions (e.g., regions 220 (1-4)) and configured to operate in an Augmented Reality (AR) application (e.g., in smart glasses 110), each of the plurality of regions including a plurality of pixels (e.g., pixels 210) and corresponding to respective elements of a user interface.
At 504, the computer 120 identifies an area of the plurality of areas of the display at which the user's gaze is directed based on the image data, the identifying including inputting at least one image of the user's eyes into a classification engine configured to classify the gaze as being directed to one of the plurality of areas.
At 506, the computer 120 activates an element of the user interface corresponding to the identified region.
Fig. 6 illustrates an example of a general purpose computer device 600 and a general purpose mobile computer device 650 that may be used with the techniques described here. Computer device 600 is one example configuration of computer 120 of fig. 1 and 2.
As shown in FIG. 6, computing device 600 is intended to represent various forms of digital computers, such as laptops, desktops, workstations, personal digital assistants, servers, blade servers, mainframes, and other appropriate computers. Computing device 650 is intended to represent various forms of mobile devices, such as personal digital assistants, cellular telephones, smartphones, and other similar computing devices. The components shown herein, their connections and relationships, and their functions, are meant to be exemplary only, and are not meant to limit implementations of the invention described and/or claimed in this document.
Computing device 600 includes a processor 602, memory 604, storage 606, a high-speed interface 608 coupled to memory 604 and high-speed expansion ports 610, and a low-speed interface 612 coupled to low-speed bus 614 and storage 606. Each of the components 602, 604, 606, 608, 610, and 612 are interconnected using various buses, and may be mounted on a common motherboard or in other manners as appropriate. The processor 602 may process instructions for execution within the computing device 600, including instructions stored in the memory 604 or on the storage device 606, to display graphical information for a GUI on an external input/output device, such as a display 616 coupled to the high-speed interface 608. In other embodiments, multiple processors and/or multiple buses, as well as multiple memories and memory types may be used, as appropriate. Moreover, multiple computing devices 600 may be connected, with each device providing portions of the necessary operations (e.g., as a server bank, a set of blade servers, or a multiprocessor system).
Memory 604 stores information within computing device 600. In one implementation, the memory 604 is one or more volatile memory units. In another implementation, the memory 604 is one or more non-volatile memory units. Memory 604 may also be another form of computer-readable medium, such as a magnetic or optical disk.
The storage device 606 is capable of providing mass storage for the computing device 600. In one implementation, the storage device 606 may be or contain a computer-readable medium, such as a floppy disk device, a hard disk device, an optical disk device, or a tape device, a flash memory or other similar solid state memory device, or an array of devices, including devices in a storage area network or other configurations. The computer program product may be tangibly embodied in an information carrier. The computer program product may also contain instructions that, when executed, perform one or more methods, such as those described above. The information carrier is a computer-or machine-readable medium, such as the memory 604, the storage device 606, or memory on processor 602.
The high speed controller 608 manages bandwidth-intensive operations of the computing device 500, while the low speed controller 612 manages lower bandwidth-intensive operations. This allocation of functions is merely exemplary. In one embodiment, the high-speed controller 608 is coupled to the memory 604, the display 616 (e.g., via a graphics processor or accelerator), and to a high-speed expansion port 610 that can accept various expansion cards (not shown). In this embodiment, a low speed controller 612 is coupled to the storage device 506 and to a low speed expansion port 614. The low-speed expansion port, which may include various communication ports (e.g., USB, bluetooth, ethernet, wireless ethernet) may be coupled to one or more input/output devices, such as a keyboard, pointing device, scanner, or to a networking device, such as a switch or router, for example, through a network adapter.
As shown, computing device 600 may be implemented in a number of different forms. For example, it may be implemented as a standard server 620, or multiple times in a group of such servers. It may also be implemented as part of a rack server system 624. Furthermore, it may be implemented in a personal computer such as a laptop computer 622. Alternatively, components from computing device 600 may be combined with other components in a mobile device (not shown), such as device 650. Each of such devices may contain one or more of computing devices 600, 650, and the entire system may be made up of multiple computing devices 600, 650 communicating with each other.
Various implementations of the systems and techniques described here can be realized in digital electronic circuitry, integrated circuitry, specially designed ASICs (application specific integrated circuits), computer hardware, firmware, software, and/or combinations thereof. These various embodiments may include embodiments in one or more computer programs executable and/or interpretable on a programmable system including at least one programmable processor, which may be special or general purpose, coupled to receive data and instructions from, and to transmit data and instructions to, a storage system, at least one input device, and at least one output device.
These computer programs (also known as programs, software applications or code) include machine instructions for a programmable processor, and may be implemented in a high-level procedural and/or object-oriented programming language, and/or in assembly/machine language. As used herein, the terms "machine-readable medium," "computer-readable medium" and "computer program product, apparatus and/or device (e.g., magnetic discs, optical disks, memory, programmable Logic Devices (PLDs)) used to provide machine instructions and/or data to a programmable processor, including a machine-readable medium that receives machine instructions as a machine-readable signal. The term "machine-readable signal" refers to any signal used to provide machine instructions and/or data to a programmable processor.
To provide for interaction with a user, the systems and techniques described here can be implemented on a computer having a display device (e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor) for displaying information to the user and a keyboard and a pointing device (e.g., a mouse or a trackball) by which the user can provide input to the computer. Other kinds of devices may also be used to provide for interaction with a user; for example, feedback provided to the user may be any form of sensory feedback (e.g., visual feedback, auditory feedback, or tactile feedback); and input from the user may be received in any form, including acoustic, speech, or tactile input.
The systems and techniques described here can be implemented in a computing system that includes a back-end component (e.g., as a data server), or that includes a middleware component (e.g., an application server), or that includes a front-end component (e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the systems and techniques described here), or any combination of such back-end, middleware, or front-end components. The components of the system can be interconnected by any form or medium of digital data communication (e.g., a communication network). Examples of communication networks include a local area network ("LAN"), a wide area network ("WAN"), and the Internet.
The computing system may include clients and servers. The client and server are typically remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.
A number of embodiments have been described. Nevertheless, it will be understood that various modifications may be made without departing from the spirit and scope of the specification.
It will also be understood that when an element is referred to as being "on", "connected" to, electrically connected "to, coupled" to, or electrically coupled to another element, it can be directly on, connected or coupled to the other element or one or more intervening elements may be present. In contrast, when an element is referred to as being directly on, directly connected to, or directly coupled to another element, there are no intervening elements present. Although terms directly on … …, directly connected to, or directly coupled to may not be used throughout the detailed description, elements shown as directly on … …, directly connected, or directly coupled may be referred to as such. The claims of the present application may be modified to recite exemplary relationships described in the specification or illustrated in the drawings.
While certain features of the described embodiments have been illustrated as described herein, many modifications, substitutions, changes, and equivalents will now occur to those skilled in the art. It is, therefore, to be understood that the appended claims are intended to cover all such modifications and changes as fall within the scope of the embodiments. It is to be understood that they have been presented by way of example only, and not limitation, and various changes in form and details may be made. Any portion of the devices and/or methods described herein may be combined in any combination, except mutually exclusive combinations. The embodiments described herein may include various combinations and/or sub-combinations of the functions, components, and/or features of the different embodiments described.
In addition, the logic flows depicted in the figures do not require the particular order shown, or sequential order, to achieve desirable results. In addition, other steps may be provided, or steps may be eliminated, from the described flows, and other components may be added to, or removed from, the described systems. Accordingly, other embodiments are within the scope of the following claims.
Hereinafter, some examples are described.
Example 1: a method, comprising:
receiving image data representing at least one image of an eye of a user viewing a display at a time, the display comprising a plurality of regions and being configured to operate in an Augmented Reality (AR) application, each of the plurality of regions comprising a plurality of pixels and corresponding to respective elements of a user interface;
identifying a region of the plurality of regions of the display at which the user's gaze is directed at the moment in time based on the image data, the identifying comprising inputting the at least one image of the user's eyes into a classification engine configured to classify the gaze as directed to one of the plurality of regions; and
The element of the user interface corresponding to the identified region is activated.
Example 2: the method of example 1, wherein the classification engine includes a first branch representing a Convolutional Neural Network (CNN).
Example 3: the method of claim 2, wherein the classification engine is configured to generate as output a vector having a number of elements equal to a number of regions in the plurality of regions, each element of the vector including a number corresponding to a respective region in the plurality of regions, the number representing a likelihood that the gaze of the user is directed to the region corresponding to the number.
Example 4: the method of example 3, wherein the classification engine includes a softmax layer configured to generate a probability between zero and one as an output of the classification engine as the probability corresponding to each of the plurality of regions, and wherein identifying the region further includes selecting a region of the plurality of regions having a probability greater than a probability of each of the other regions of the plurality of regions as the identified region.
Example 5: the method of example 3, wherein identifying the region further comprises generating image cluster data representing a set of image clusters corresponding to the plurality of regions on the display, and wherein the classification engine comprises a penalty function based on distance from the set of image clusters.
Example 6: the method of example 1, further comprising training the classification engine based on a mapping between an image of the eyes of the user and a region identifier identifying a region of the plurality of regions to which the gaze of the user is directed.
Example 7: the method of example 1, wherein the display is a transparent display embedded in smart glasses.
Example 8: the method of example 7, wherein the classification engine further comprises a second branch representing a neural network, and wherein the method further comprises outputting, from the second branch and based on the image data, a pose of the eyes of the user relative to a camera mounted on the smart glasses.
Example 9: the method of example 8, wherein the classification engine includes an attention layer, and wherein identifying the region further includes causing the attention layer to adjust a probability that the gaze is directed to the region of the display based on the output pose of the eye.
Example 10: the method of example 1, wherein the user is a first user, wherein the classification engine further comprises a second branch representing a neural network, and wherein the method further comprises: inputting a parameter value into the second branch indicating a difference between the first user and a second user; and causing the second branch to adjust a probability that the gaze is directed to the region of the display based on the parameter value.
Example 11: the method of example 1, wherein the user is a first user, wherein the classification engine further comprises a second branch representing a neural network, and wherein the method further comprises: inputting parameter values into the second branch indicative of a geometric configuration of the plurality of regions; and causing the second branch to adjust a probability that the gaze is directed to the region of the display based on the parameter value.
Example 12: the method of example 1, wherein the user is a first user, wherein the classification engine further comprises a second branch representing a neural network, and wherein the method further comprises: inputting a parameter value indicating temporal smoothness of the image data into the second branch; and causing the second branch to adjust a probability that the gaze is directed to the region of the display based on the parameter value.
Example 13: a computer program product comprising a non-transitory storage medium, the computer program product comprising code which, when executed by processing circuitry of a computer, causes the processing circuitry to perform a method comprising:
receiving image data representing at least one image of an eye of a user viewing a display at a time, the display comprising a plurality of regions and being configured to operate in an Augmented Reality (AR) application, each of the plurality of regions comprising a plurality of pixels and corresponding to respective elements of a user interface;
Identifying a region of the plurality of regions of the display at which the user's gaze is directed at the moment in time based on the image data, the identifying comprising inputting the at least one image of the user's eyes into a classification engine configured to classify the gaze as directed to one of the plurality of regions; and
the element of the user interface corresponding to the identified region is activated.
Example 14: the computer program product of example 13, wherein the classification engine includes a first branch representing a Convolutional Neural Network (CNN).
Example 15: the computer program product of example 13, wherein the classification engine is configured to generate as output a number corresponding to each of the plurality of regions, the number representing a likelihood that the gaze of the user is directed to the region corresponding to the number.
Example 16: the computer program product of example 13, wherein the method further comprises training the classification engine based on a mapping between an image of the eyes of the user and a region identifier identifying a region of the plurality of regions to which the gaze of the user is directed.
Example 17: the computer program product of example 13, wherein the display is a transparent display embedded in smart glasses.
Example 18: the computer program product of example 17, wherein the classification engine further comprises a second branch representing a neural network, and wherein the method further comprises outputting a position and orientation of the eyes of the user relative to a camera mounted on the smart glasses from the second branch and based on the image data.
Example 19: the computer program product of example 18, wherein the classification engine comprises an attention layer, and wherein identifying the region further comprises causing the attention layer to adjust a probability that the gaze is directed to the region of the display based on the output position and orientation of the eye.
Example 20: an electronic device, the electronic device comprising:
a memory; and
processing circuitry coupled to the memory, the processing circuitry configured to:
receiving image data representing at least one image of an eye of a user viewing a display at a time, the display comprising a plurality of regions and being configured to operate in an Augmented Reality (AR) application, each of the plurality of regions comprising a plurality of pixels and corresponding to respective elements of a user interface;
Identifying a region of the plurality of regions of the display at which the user's gaze is directed at the moment in time based on the image data, the identifying comprising inputting the at least one image of the user's eyes into a classification engine configured to classify the gaze as directed to one of the plurality of regions; and
the element of the user interface corresponding to the identified region is activated.
Claims (20)
1. A method, comprising:
receiving image data representing at least one image of an eye of a user viewing a display at a time, the display comprising a plurality of regions and being configured to operate in an Augmented Reality (AR) application, each of the plurality of regions comprising a plurality of pixels and corresponding to respective elements of a user interface;
identifying a region of the plurality of regions of the display at which the user's gaze is directed at the moment in time based on the image data, the identifying comprising inputting the at least one image of the user's eyes into a classification engine configured to classify the gaze as directed to one of the plurality of regions; and
The element of the user interface corresponding to the identified region is activated.
2. The method of claim 1, wherein the classification engine comprises a first branch representing a Convolutional Neural Network (CNN).
3. The method of claim 1, wherein the classification engine is configured to generate as output a vector having a number of elements equal to a number of regions in the plurality of regions, each element of the vector including a number corresponding to a respective region in the plurality of regions, the number representing a likelihood that the gaze of the user is directed to the region corresponding to the number.
4. The method of claim 3, wherein the classification engine includes a softmax layer configured to generate a probability between zero and one as an output of the classification engine as the likelihood corresponding to each of the plurality of regions, and
wherein identifying the region further comprises:
a region of the plurality of regions having a probability greater than a probability of each of the other regions of the plurality of regions is selected as the identified region.
5. A method according to claim 3,
Wherein identifying the region further comprises:
generating image cluster data representing a set of image clusters corresponding to the plurality of regions on the display, and
wherein the classification engine comprises a penalty function based on distance from the set of image clusters.
6. The method of claim 1, further comprising:
the classification engine is trained based on a mapping between an image of the eyes of the user and a region identifier identifying a region of the plurality of regions to which the gaze of the user is directed.
7. The method of claim 1, wherein the display is a transparent display embedded in smart glasses.
8. The method of claim 7, wherein the classification engine further comprises a second branch representing a neural network, and
wherein the method further comprises:
from the second branch and based on the image data, a pose of the eye of the user relative to a camera mounted on the smart glasses is output.
9. The method of claim 8, wherein the classification engine includes an attention layer, and
wherein identifying the region further comprises:
causing the attention layer to adjust a probability that the gaze is directed to the region of the display based on the output pose of the eye.
10. The method of claim 1, wherein the user is a first user,
wherein the classification engine further comprises a second branch representing a neural network, and
wherein the method further comprises:
inputting a parameter value into the second branch indicating a difference between the first user and a second user; and
causing the second branch to adjust a probability that the gaze is directed to the region of the display based on the parameter value.
11. The method of claim 1, wherein the user is a first user,
wherein the classification engine further comprises a second branch representing a neural network, and
wherein the method further comprises:
inputting parameter values into the second branch indicative of a geometric configuration of the plurality of regions; and
causing the second branch to adjust a probability that the gaze is directed to the region of the display based on the parameter value.
12. The method of claim 1, wherein the user is a first user,
wherein the classification engine further comprises a second branch representing a neural network, and
wherein the method further comprises:
inputting a parameter value indicating temporal smoothness of the image data into the second branch; and
Causing the second branch to adjust a probability that the gaze is directed to the region of the display based on the parameter value.
13. A computer program product comprising a non-transitory storage medium, the computer program product comprising code that, when executed by processing circuitry, causes the processing circuitry to perform a method comprising:
receiving image data representing at least one image of an eye of a user viewing a display at a time, the display comprising a plurality of regions and being configured to operate in an Augmented Reality (AR) application, each of the plurality of regions comprising a plurality of pixels and corresponding to respective elements of a user interface;
identifying a region of the plurality of regions of the display at which the user's gaze is directed at the moment in time based on the image data, the identifying comprising inputting the at least one image of the user's eyes into a classification engine configured to classify the gaze as directed to one of the plurality of regions; and
the element of the user interface corresponding to the identified region is activated.
14. The computer program product of claim 13, wherein the classification engine comprises a first branch representing a Convolutional Neural Network (CNN).
15. The computer program product of claim 13, wherein the classification engine is configured to generate as output a number corresponding to each of the plurality of regions, the number representing a likelihood that the gaze of the user is directed to the region corresponding to the number.
16. The computer program product of claim 13, wherein the method further comprises:
the classification engine is trained based on a mapping between an image of the eyes of the user and a region identifier identifying a region of the plurality of regions to which the gaze of the user is directed.
17. The computer program product of claim 13, wherein the display is a transparent display embedded in smart glasses.
18. The computer program product of claim 17, wherein the classification engine further comprises a second branch representing a neural network, and
wherein the method further comprises:
a pose of the eyes of the user relative to a camera mounted on the smart glasses is output from the second branch and based on the image data.
19. The computer program product of claim 18, wherein the classification engine comprises an attention layer, and
Wherein identifying the region further comprises:
causing the attention layer to adjust a probability that the gaze is directed to the region of the display based on the output pose of the eye.
20. An electronic device, the electronic device comprising:
a memory; and
a control circuit coupled to the memory, the control circuit configured to:
receiving image data representing at least one image of an eye of a user viewing a display at a time, the display comprising a plurality of regions and being configured to operate in an Augmented Reality (AR) application, each of the plurality of regions comprising a plurality of pixels and corresponding to respective elements of a user interface;
identifying a region of the plurality of regions of the display at which the user's gaze is directed at the moment in time based on the image data, the identifying comprising inputting the at least one image of the user's eyes into a classification engine configured to classify the gaze as directed to one of the plurality of regions; and
the element of the user interface corresponding to the identified region is activated.
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US17/305,219 | 2021-07-01 | ||
US17/305,219 US11868523B2 (en) | 2021-07-01 | 2021-07-01 | Eye gaze classification |
PCT/US2022/073337 WO2023279076A1 (en) | 2021-07-01 | 2022-07-01 | Eye gaze classification |
Publications (1)
Publication Number | Publication Date |
---|---|
CN117581275A true CN117581275A (en) | 2024-02-20 |
Family
ID=82748171
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN202280046760.9A Pending CN117581275A (en) | 2021-07-01 | 2022-07-01 | Eye gaze classification |
Country Status (5)
Country | Link |
---|---|
US (1) | US11868523B2 (en) |
EP (1) | EP4364112A1 (en) |
KR (1) | KR20240024277A (en) |
CN (1) | CN117581275A (en) |
WO (1) | WO2023279076A1 (en) |
Families Citing this family (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US11886634B2 (en) * | 2021-03-19 | 2024-01-30 | Nvidia Corporation | Personalized calibration functions for user gaze detection in autonomous driving applications |
GB2606182B (en) * | 2021-04-28 | 2023-08-23 | Sony Interactive Entertainment Inc | System and method of error logging |
CN117270717A (en) * | 2023-09-06 | 2023-12-22 | 北京酷讯科技有限公司 | Man-machine interaction method, device, equipment and storage medium based on user interface |
Family Cites Families (21)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6980691B2 (en) * | 2001-07-05 | 2005-12-27 | Corel Corporation | Correction of “red-eye” effects in images |
US20120106793A1 (en) * | 2010-10-29 | 2012-05-03 | Gershenson Joseph A | Method and system for improving the quality and utility of eye tracking data |
US9176581B2 (en) * | 2012-09-28 | 2015-11-03 | Intel Corporation | System and method for inferring user intent based on eye movement during observation of a display screen |
US20160025971A1 (en) * | 2014-07-25 | 2016-01-28 | William M. Crow | Eyelid movement as user input |
US10248192B2 (en) | 2014-12-03 | 2019-04-02 | Microsoft Technology Licensing, Llc | Gaze target application launcher |
US10186086B2 (en) * | 2015-09-02 | 2019-01-22 | Microsoft Technology Licensing, Llc | Augmented reality control of computing device |
US10573042B2 (en) | 2016-10-05 | 2020-02-25 | Magic Leap, Inc. | Periocular test for mixed reality calibration |
US9898082B1 (en) * | 2016-11-01 | 2018-02-20 | Massachusetts Institute Of Technology | Methods and apparatus for eye tracking |
US11132543B2 (en) * | 2016-12-28 | 2021-09-28 | Nvidia Corporation | Unconstrained appearance-based gaze estimation |
US10310598B2 (en) * | 2017-01-17 | 2019-06-04 | Facebook Technologies, Llc | Varifocal head-mounted display including modular air spaced optical assembly |
GB201709199D0 (en) * | 2017-06-09 | 2017-07-26 | Delamont Dean Lindsay | IR mixed reality and augmented reality gaming system |
US10282589B2 (en) * | 2017-08-29 | 2019-05-07 | Konica Minolta Laboratory U.S.A., Inc. | Method and system for detection and classification of cells using convolutional neural networks |
US11263470B2 (en) * | 2017-11-15 | 2022-03-01 | Adobe Inc. | Saliency prediction for informational documents |
WO2019143117A1 (en) * | 2018-01-18 | 2019-07-25 | Samsung Electronics Co., Ltd. | Method and apparatus for adjusting augmented reality content |
WO2019154511A1 (en) | 2018-02-09 | 2019-08-15 | Pupil Labs Gmbh | Devices, systems and methods for predicting gaze-related parameters using a neural network |
US10627901B2 (en) | 2018-09-14 | 2020-04-21 | Facebook Technologies, Llc | Vergence determination |
US20210011550A1 (en) | 2019-06-14 | 2021-01-14 | Tobii Ab | Machine learning based gaze estimation with confidence |
US11301677B2 (en) * | 2019-06-14 | 2022-04-12 | Tobil AB | Deep learning for three dimensional (3D) gaze prediction |
US11347308B2 (en) | 2019-07-26 | 2022-05-31 | Samsung Electronics Co., Ltd. | Method and apparatus with gaze tracking |
US11042259B2 (en) | 2019-08-18 | 2021-06-22 | International Business Machines Corporation | Visual hierarchy design governed user interface modification via augmented reality |
CN112562433B (en) * | 2020-12-30 | 2021-09-07 | 华中师范大学 | Working method of 5G strong interaction remote delivery teaching system based on holographic terminal |
-
2021
- 2021-07-01 US US17/305,219 patent/US11868523B2/en active Active
-
2022
- 2022-07-01 KR KR1020247003425A patent/KR20240024277A/en unknown
- 2022-07-01 CN CN202280046760.9A patent/CN117581275A/en active Pending
- 2022-07-01 EP EP22748691.7A patent/EP4364112A1/en active Pending
- 2022-07-01 WO PCT/US2022/073337 patent/WO2023279076A1/en active Application Filing
Also Published As
Publication number | Publication date |
---|---|
WO2023279076A1 (en) | 2023-01-05 |
EP4364112A1 (en) | 2024-05-08 |
US20230004216A1 (en) | 2023-01-05 |
US11868523B2 (en) | 2024-01-09 |
KR20240024277A (en) | 2024-02-23 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US10055013B2 (en) | Dynamic object tracking for user interfaces | |
Memo et al. | Head-mounted gesture controlled interface for human-computer interaction | |
US10915167B2 (en) | Rendering rich media content based on head position information | |
Betancourt et al. | The evolution of first person vision methods: A survey | |
US9235278B1 (en) | Machine-learning based tap detection | |
US11868523B2 (en) | Eye gaze classification | |
US11698529B2 (en) | Systems and methods for distributing a neural network across multiple computing devices | |
US20150269425A1 (en) | Dynamic hand gesture recognition with selective enabling based on detected hand velocity | |
Mahmood et al. | Mobile cloud based-framework for sports applications | |
US11375244B2 (en) | Dynamic video encoding and view adaptation in wireless computing environments | |
US20210256733A1 (en) | Resolving region-of-interest (roi) overlaps for distributed simultaneous localization and mapping (slam) in edge cloud architectures | |
US20230195224A1 (en) | Systems and methods for gaze-tracking | |
CN110569775A (en) | Method, system, storage medium and electronic device for recognizing human body posture | |
US11381743B1 (en) | Region of interest capture for electronic devices | |
KR101909326B1 (en) | User interface control method and system using triangular mesh model according to the change in facial motion | |
CN112541418A (en) | Method, apparatus, device, medium, and program product for image processing | |
US20230368520A1 (en) | Fast object detection in video via scale separation | |
US11847823B2 (en) | Object and keypoint detection system with low spatial jitter, low latency and low power usage | |
US20230419733A1 (en) | Devices and methods for single or multi-user gesture detection using computer vision | |
US20230115371A1 (en) | Efficient vision perception | |
Naik et al. | The evolution of military operations: artificial intelligence to detect hand gestures in defence | |
KR20240068636A (en) | Region of interest capture for electronic devices | |
WO2024072410A1 (en) | Real-time hand gesture tracking and recognition | |
CN117813626A (en) | Reconstructing depth information from multi-view stereo (MVS) images | |
CN118043859A (en) | Efficient visual perception |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
SE01 | Entry into force of request for substantive examination |
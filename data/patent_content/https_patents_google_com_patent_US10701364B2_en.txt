US10701364B2 - Golden-frame group structure design using stillness detection - Google Patents
Golden-frame group structure design using stillness detection Download PDFInfo
- Publication number
- US10701364B2 US10701364B2 US15/794,134 US201715794134A US10701364B2 US 10701364 B2 US10701364 B2 US 10701364B2 US 201715794134 A US201715794134 A US 201715794134A US 10701364 B2 US10701364 B2 US 10701364B2
- Authority
- US
- United States
- Prior art keywords
- frames
- group
- frame
- stillness
- coding structure
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active, expires
Links
- 238000001514 detection method Methods 0.000 title description 5
- 238000013461 design Methods 0.000 title description 4
- 230000004044 response Effects 0.000 claims abstract description 16
- 238000000034 method Methods 0.000 claims description 61
- 230000033001 locomotion Effects 0.000 claims description 57
- 230000015654 memory Effects 0.000 claims description 32
- 238000005192 partition Methods 0.000 claims description 3
- 238000000638 solvent extraction Methods 0.000 claims description 2
- 230000008569 process Effects 0.000 description 39
- 239000013598 vector Substances 0.000 description 28
- 238000010586 diagram Methods 0.000 description 18
- 150000001875 compounds Chemical class 0.000 description 12
- 238000004891 communication Methods 0.000 description 10
- 238000001914 filtration Methods 0.000 description 10
- 238000012545 processing Methods 0.000 description 9
- 230000006835 compression Effects 0.000 description 7
- 238000007906 compression Methods 0.000 description 7
- 230000006870 function Effects 0.000 description 5
- 238000013139 quantization Methods 0.000 description 4
- 230000002123 temporal effect Effects 0.000 description 4
- 208000037170 Delayed Emergence from Anesthesia Diseases 0.000 description 3
- 230000005540 biological transmission Effects 0.000 description 3
- 230000000903 blocking effect Effects 0.000 description 3
- 238000004364 calculation method Methods 0.000 description 3
- 230000003287 optical effect Effects 0.000 description 3
- 238000004590 computer program Methods 0.000 description 2
- 238000012986 modification Methods 0.000 description 2
- 230000004048 modification Effects 0.000 description 2
- 238000013519 translation Methods 0.000 description 2
- 230000014616 translation Effects 0.000 description 2
- 238000012935 Averaging Methods 0.000 description 1
- 230000003044 adaptive effect Effects 0.000 description 1
- 238000013459 approach Methods 0.000 description 1
- 238000003491 array Methods 0.000 description 1
- 230000001413 cellular effect Effects 0.000 description 1
- 230000008859 change Effects 0.000 description 1
- 239000003086 colorant Substances 0.000 description 1
- 230000008867 communication pathway Effects 0.000 description 1
- 230000006837 decompression Effects 0.000 description 1
- 239000004973 liquid crystal related substance Substances 0.000 description 1
- 238000013507 mapping Methods 0.000 description 1
- 230000002093 peripheral effect Effects 0.000 description 1
- 239000004065 semiconductor Substances 0.000 description 1
- 239000007787 solid Substances 0.000 description 1
- 238000012360 testing method Methods 0.000 description 1
- 238000012546 transfer Methods 0.000 description 1
- 230000009466 transformation Effects 0.000 description 1
- 230000001131 transforming effect Effects 0.000 description 1
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/134—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the element, parameter or criterion affecting or controlling the adaptive coding
- H04N19/136—Incoming video signal characteristics or properties
- H04N19/137—Motion inside a coding unit, e.g. average field, frame or block difference
- H04N19/139—Analysis of motion vectors, e.g. their magnitude, direction, variance or reliability
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/102—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the element, parameter or selection affected or controlled by the adaptive coding
- H04N19/103—Selection of coding mode or of prediction mode
- H04N19/107—Selection of coding mode or of prediction mode between spatial and temporal predictive coding, e.g. picture refresh
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/102—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the element, parameter or selection affected or controlled by the adaptive coding
- H04N19/103—Selection of coding mode or of prediction mode
- H04N19/109—Selection of coding mode or of prediction mode among a plurality of temporal predictive coding modes
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/169—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding
- H04N19/17—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding the unit being an image region, e.g. an object
- H04N19/172—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding the unit being an image region, e.g. an object the region being a picture, frame or field
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/169—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding
- H04N19/177—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding the unit being a group of pictures [GOP]
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/30—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using hierarchical techniques, e.g. scalability
- H04N19/31—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using hierarchical techniques, e.g. scalability in the temporal domain
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/30—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using hierarchical techniques, e.g. scalability
Definitions
- Digital video streams may represent video using a sequence of frames or still images.
- Digital video can be used for various applications including, for example, video conferencing, high definition video entertainment, video advertisements, or sharing of user-generated videos.
- a digital video stream can contain a large amount of data and consume a significant amount of computing or communication resources of a computing device for processing, transmission, or storage of the video data.
- Various approaches have been proposed to reduce the amount of data in video streams, including compression and other encoding techniques.
- This disclosure relates generally to encoding and decoding video data and more particularly relates to multi-layer-multi-reference prediction using adaptive temporal filtering for encoding and decoding blocks of video frames.
- a method for encoding a group of frames of a video sequence comprises determining a stillness of the group of frames, in response to determining that the stillness of the group of frames meets stillness conditions, encoding the group of frames using a coding structure that is a one-layer coding structure, and, in response to determining that the stillness of the group of frames does not meet the stillness conditions, encoding the group of frames using the coding structure that is a multi-layer coding structure.
- An apparatus for encoding a group of frames of a video sequence comprises a memory and a processor.
- the memory includes instructions executable by the processor to determine a stillness of the group of frames, in response to the stillness of the group of frames meets stillness conditions, encode the group of frames using a one-layer coding structure, and, in response to the stillness of the group of frames does not meet the stillness conditions, encode the group of frames using a multi-layer coding structure.
- FIG. 1 is a schematic of a video encoding and decoding system.
- FIG. 2 is a block diagram of an example of a computing device that can implement a transmitting station or a receiving station.
- FIG. 3 is a diagram of a typical video stream to be encoded and subsequently decoded.
- FIG. 4 is a block diagram of an encoder according to implementations of this disclosure.
- FIG. 5 is a block diagram of a decoder according to implementations of this disclosure.
- FIG. 6 is a block diagram of an example of a reference frame buffer according to implementations of this disclosure.
- FIG. 7 is a flowchart diagram of a process for encoding a group of frames of a video sequence according to an implementation of this disclosure.
- FIG. 8A is a diagram of an example of a multi-layer coding structure according to implementations of this disclosure.
- FIG. 8B is a diagram of an example of a one-layer coding structure according to implementations of this disclosure.
- FIG. 9 is a flowchart diagram of a process for decoding a group of frames of a video sequence according to an implementation of this disclosure.
- compression schemes related to coding video streams may include breaking images into blocks and generating a digital video output bitstream (i.e., an encoded bitstream) using one or more techniques to limit the information included in the output bitstream.
- a received bitstream can be decoded to re-create the blocks and the source images from the limited information.
- Encoding a video stream, or a portion thereof, such as a frame or a block can include using temporal or spatial similarities in the video stream to improve coding efficiency. For example, a current block of a video stream may be encoded based on identifying a difference (residual) between the previously coded pixel values, or between a combination of previously coded pixel values, and those in the current block.
- Intra prediction attempts to predict the pixel values of a block of a frame of video using pixels peripheral to the block; that is, using pixels that are in the same frame as the block but that are outside the block.
- a prediction block resulting from intra prediction is referred to herein as an intra predictor.
- Intra prediction can be performed along a direction of prediction where each direction can correspond to an intra prediction mode.
- the intra prediction mode can be signalled by an encoder to a decoder.
- Inter prediction attempts to predict the pixel values of a block using a possibly displaced block or blocks from a temporally nearby frame (i.e., reference frame) or frames.
- a temporally nearby frame is a frame that appears earlier or later in time in the video stream than the frame of the block being encoded.
- a prediction block resulting from inter prediction is referred to herein as inter predictor.
- a motion vector used to generate a prediction block refers to a frame other than a current frame, i.e., a reference frame.
- Reference frames can be located before or after the current frame in the sequence of the video stream.
- Some codecs use up to eight reference frames, which can be stored in a frame buffer.
- the motion vector can refer to (i.e., use) one of the reference frames of the frame buffer. As such, one or more reference frames can be available for coding a current frame.
- the first reference frame may be an intra-predicted frame referred to as a key frame.
- the key frame may be referred to as the GOLDEN frame.
- the second reference frame may be a most recently encoded or decoded frame.
- the most recently encoded or decoded frame may be referred to as the LAST frame.
- the third reference frame may be an alternative reference frame that is encoded or decoded before most other frames, but which is displayed after most frames in an output bitstream.
- the alternative reference frame may be referred to as the ALTREF frame.
- the efficacy of a reference frame when used to encode or decode a block can be measured based on the resulting signal-to-noise ratio.
- Two predictor blocks can be combined to form a compound predictor for a block or region of a video image.
- a compound predictor can be created by combining two or more predictors determined using, for example, the aforementioned prediction methods (i.e., inter and/or intra prediction).
- a compound predictor can be a combination of a first predictor and a second predictor which can be two intra predictors (i.e., intra+intra), an intra predictor and an inter predictor (i.e., intra+inter) or two inter predictors (i.e., inter+inter).
- compound inter prediction can employ a first motion vector to obtain a predictor from a first reference frame, and a second motion vector to obtain a predictor from a second reference frame.
- the reference frames can both be in the past, both in the future, or some combination thereof.
- the second motion vector can be independent of, or derived from, the first motion vector.
- compound prediction can employ a first predictor generated by an intra prediction operation and a second predictor generated by an inter prediction operation.
- an encoder can perform averaging, a weighted combination, a filtering operation, or a more complex form of estimating the significance of the value of each predictor, e.g., on a per-pixel basis to generate pixel values for the combined predictor using pixels of the two individual predictors. Accordingly, combining predictors can result in a compound predictor that can be an average of the two values or a weighted average that estimates the significance of the value of each predictor, for example.
- a motion vector can be selected from a reference motion vector list of candidate reference motion vectors.
- the candidate reference motion vectors can include motion vectors from any previously coded (or decoded) blocks in the video stream, such as a block from a previously coded (or decoded) frame, or a block from the same frame that has been previously encoded (or decoded).
- the candidate reference motion vectors can be obtained from a co-located block (of the current block) and its surrounding blocks in a reference frame.
- the surrounding blocks can include a block to the right, bottom-left, bottom-right of, or below the co-located block.
- the candidate reference motion vectors for a block can include, for at least some reference frames, a single predictor motion vector per reference frame that can be the best motion vector for that reference frame.
- pairs of reference frames can be evaluated to determine a best motion vector(s) per pair of reference frames. The best motion vector(s) per pair can be included in a reference motion vector list.
- a prediction block is generated and can be subtracted from the block to be encoded to form the residual block representing the difference between the blocks.
- a codec may partition (e.g., group) a video sequence into groups of pictures.
- group of pictures, group of frames, and golden-frame group (GF group) are used interchangeably herein.
- a golden-frame group is a successive group of frames of the video sequence.
- the golden-frame groups are non-overlapping groups of frames. For example, a video sequence having 150 frames may be partitioned into 10 GF groups each containing 15 frames, 15 GF groups each containing 10 frames, or some other division.
- the golden-frame groups of the video sequence need not have the same number of frames.
- the number of frames of a GF group is referred to as the length of the GF group.
- a video sequence can be partitioned into GF groups where a GF group can have a length between 4 and 16 frames.
- the number of frames forming each group of frames can vary according to the video spatial/temporal characteristics and other encoded configurations, such as the key frame interval selected for random access or error resilience, for example.
- the number of frames forming each group may be determined by a first pass of a two-pass encoder, such as the encoder 400 of FIG. 4 .
- the statistics can include the level of motion across frames of the video sequence, the frame rate, the frame resolution, etc. For example, the less motion across a sequence, the larger the number of frames within a group of frames may exist.
- each frame of a GF group can be predicted using a prediction type.
- one frame can be intra-predicted and another frame can be inter-predicted.
- all blocks of a frame can use the same coding type.
- different blocks within the same frame can use different prediction types.
- one block of a frame can use inter-prediction and another block of the same frame can use intra-prediction.
- a GF group is a group of successive frames of a video sequence. That is, regardless of the coding order of the frames of the GF group, the first frame of the GF group is displayed first, the second frame of the GF group is displayed next, and so on.
- the frames of a GF group can be encoded using a coding structure.
- a coding structure refers to the order of coding of the frames of the GF group and/or which reference frames are available for coding the frames.
- a multi-layer coding structure and a one-layer coding structure are described below with respect to FIGS. 8A-8B , respectively.
- the frames of a GF group may be coded independently of the frames of other GF groups.
- the first frame of the GF group is coded using intra prediction and all other frames of the GF group are coded using frames of the GF group as reference frames.
- the first frame of the GF group can be coded using frames of a previous GF group.
- the last frame of the GF group can be coded using frames of a previous GF group.
- the first and the last frame of a GF group may be coded using frames of prior GF groups.
- Stillness refers to the amount of motion or variation across the frames of the GF group.
- most of the frames may be comprised of a fixed background and a relatively stationary speaker.
- most of the frames may be comprised of a fixed background and, every few seconds, a person enters the scene.
- a video is typically displayed at a rate of 30 frames per second
- many groups of frames in such applications, can exhibit a high level of stillness (i.e., very little movement or motion).
- the level of stillness may be high and some GF groups can include at least some frames that may be completely still (i.e., no motion).
- the level of stillness may be very low.
- the performance of a coding structure can depend on the level of stillness in the GF group being encoded using the coding structure.
- the performance of a coding structure refers to the efficacy of the compression (i.e., level of compression) using the coding structure. For example, whereas a multi-layer coding structure may generally result in good compression performance, when stillness is present in a GF group, a multi-layer coding structure may result in worse coding performance than a one-layer coding structure. Stillness may be determined to be present when the stillness of a GF group meets certain stillness conditions.
- Implementations of this disclosure include determining a coding structure of a GF group based on a stillness measure of the GF group.
- a metrics-based stillness detection scheme is described. Three metrics for determining stillness are described. However, other metrics can be used. The metrics described are 1) the number of zero-motion blocks in the GF group, 2) the average per-pixel error in the GF group, and 3) the average raw standard deviation of the zero-motion blocks. Coding gains (i.e., improved compression performance) can result when a one-layer coding structure is used to encode the frames of a GF group that is still. For example, a coding gain of 1% was observed in two test cases that included GF groups that were determined to be still. A GF group is determined to be still if stillness metrics of the GF group meet stillness conditions.
- golden-frame group structure design using stillness detection Further details of golden-frame group structure design using stillness detection are described herein with initial reference to a system in which it can be implemented.
- FIG. 1 is a schematic of a video encoding and decoding system 100 .
- a transmitting station 102 can be, for example, a computer having an internal configuration of hardware such as that described in FIG. 2 .
- the processing of the transmitting station 102 can be distributed among multiple devices.
- a network 104 can connect the transmitting station 102 and a receiving station 106 for encoding and decoding of the video stream.
- the video stream can be encoded in the transmitting station 102 and the encoded video stream can be decoded in the receiving station 106 .
- the network 104 can be, for example, the Internet.
- the network 104 can also be a local area network (LAN), wide area network (WAN), virtual private network (VPN), cellular telephone network or any other means of transferring the video stream from the transmitting station 102 to, in this example, the receiving station 106 .
- LAN local area network
- WAN wide area network
- VPN virtual private network
- the receiving station 106 in one example, can be a computer having an internal configuration of hardware such as that described in FIG. 2 . However, other suitable implementations of the receiving station 106 are possible. For example, the processing of the receiving station 106 can be distributed among multiple devices.
- an implementation can omit the network 104 .
- a video stream can be encoded and then stored for transmission at a later time to the receiving station 106 or any other device having memory.
- the receiving station 106 receives (e.g., via the network 104 , a computer bus, and/or some communication pathway) the encoded video stream and stores the video stream for later decoding.
- a real-time transport protocol RTP
- a transport protocol other than RTP may be used, e.g., a Hypertext Transfer Protocol-based (HTTP-based) video streaming protocol.
- the transmitting station 102 and/or the receiving station 106 may include the ability to both encode and decode a video stream as described below.
- the receiving station 106 could be a video conference participant who receives an encoded video bitstream from a video conference server (e.g., the transmitting station 102 ) to decode and view and further encodes and transmits its own video bitstream to the video conference server for decoding and viewing by other participants.
- FIG. 2 is a block diagram of an example of a computing device 200 that can implement a transmitting station or a receiving station.
- the computing device 200 can implement one or both of the transmitting station 102 and the receiving station 106 of FIG. 1 .
- the computing device 200 can be in the form of a computing system including multiple computing devices, or in the form of one computing device, for example, a mobile phone, a tablet computer, a laptop computer, a notebook computer, a desktop computer, and the like.
- a CPU 202 in the computing device 200 can be a conventional central processing unit.
- the CPU 202 can be any other type of device, or multiple devices, capable of manipulating or processing information now-existing or hereafter developed.
- the disclosed implementations can be practiced with one processor as shown, e.g., the CPU 202 , advantages in speed and efficiency can be achieved using more than one processor.
- a memory 204 in computing device 200 can be a read only memory (ROM) device or a random access memory (RAM) device in an implementation. Any other suitable type of storage device can be used as the memory 204 .
- the memory 204 can include code and data 206 that is accessed by the CPU 202 using a bus 212 .
- the memory 204 can further include an operating system 208 and application programs 210 , the application programs 210 including at least one program that permits the CPU 202 to perform the methods described here.
- the application programs 210 can include applications 1 through N, which further include a video coding application that performs the methods described here.
- Computing device 200 can also include a secondary storage 214 , which can, for example, be a memory card used with a mobile computing device. Because the video communication sessions may contain a significant amount of information, they can be stored in whole or in part in the secondary storage 214 and loaded into the memory 204 as needed for processing.
- the computing device 200 can also include one or more output devices, such as a display 218 .
- the display 218 may be, in one example, a touch sensitive display that combines a display with a touch sensitive element that is operable to sense touch inputs.
- the display 218 can be coupled to the CPU 202 via the bus 212 .
- Other output devices that permit a user to program or otherwise use the computing device 200 can be provided in addition to or as an alternative to the display 218 .
- the output device is or includes a display
- the display can be implemented in various ways, including by a liquid crystal display (LCD), a cathode-ray tube (CRT) display or light emitting diode (LED) display, such as an organic LED (OLED) display.
- LCD liquid crystal display
- CRT cathode-ray tube
- LED light emitting diode
- OLED organic LED
- the computing device 200 can also include or be in communication with an image-sensing device 220 , for example a camera, or any other image-sensing device 220 now existing or hereafter developed that can sense an image such as the image of a user operating the computing device 200 .
- the image-sensing device 220 can be positioned such that it is directed toward the user operating the computing device 200 .
- the position and optical axis of the image-sensing device 220 can be configured such that the field of vision includes an area that is directly adjacent to the display 218 and from which the display 218 is visible.
- the computing device 200 can also include or be in communication with a sound-sensing device 222 , for example a microphone, or any other sound-sensing device now existing or hereafter developed that can sense sounds near the computing device 200 .
- the sound-sensing device 222 can be positioned such that it is directed toward the user operating the computing device 200 and can be configured to receive sounds, for example, speech or other utterances, made by the user while the user operates the computing device 200 .
- FIG. 2 depicts the CPU 202 and the memory 204 of the computing device 200 as being integrated into one unit, other configurations can be utilized.
- the operations of the CPU 202 can be distributed across multiple machines (wherein individual machines can have one or more of processors) that can be coupled directly or across a local area or other network.
- the memory 204 can be distributed across multiple machines such as a network-based memory or memory in multiple machines performing the operations of the computing device 200 .
- the bus 212 of the computing device 200 can be composed of multiple buses.
- the secondary storage 214 can be directly coupled to the other components of the computing device 200 or can be accessed via a network and can comprise an integrated unit such as a memory card or multiple units such as multiple memory cards.
- the computing device 200 can thus be implemented in a wide variety of configurations.
- FIG. 3 is a diagram of an example of a video stream 300 to be encoded and subsequently decoded.
- the video stream 300 includes a video sequence 302 .
- the video sequence 302 includes a number of adjacent frames 304 . While three frames are depicted as the adjacent frames 304 , the video sequence 302 can include any number of adjacent frames 304 .
- the adjacent frames 304 can then be further subdivided into individual frames, e.g., a frame 306 .
- the frame 306 can be divided into a series of planes or segments 308 .
- the segments 308 can be subsets of frames that permit parallel processing, for example.
- the segments 308 can also be subsets of frames that can separate the video data into separate colors.
- a frame 306 of color video data can include a luminance plane and two chrominance planes.
- the segments 308 may be sampled at different resolutions.
- the frame 306 may be further subdivided into blocks 310 , which can contain data corresponding to, for example, 16 ⁇ 16 pixels in the frame 306 .
- the blocks 310 can also be arranged to include data from one or more segments 308 of pixel data.
- the blocks 310 can also be of any other suitable size such as 4 ⁇ 4 pixels, 8 ⁇ 8 pixels, 16 ⁇ 8 pixels, 8 ⁇ 16 pixels, 16 ⁇ 16 pixels, or larger. Unless otherwise noted, the terms block and macroblock are used interchangeably herein.
- FIG. 4 is a block diagram of an encoder 400 according to implementations of this disclosure.
- the encoder 400 can be implemented, as described above, in the transmitting station 102 such as by providing a computer software program stored in memory, for example, the memory 204 .
- the computer software program can include machine instructions that, when executed by a processor such as the CPU 202 , cause the transmitting station 102 to encode video data in the manner described in FIG. 4 .
- the encoder 400 can also be implemented as specialized hardware included in, for example, the transmitting station 102 .
- the encoder 400 is a hardware encoder.
- the encoder 400 has the following stages to perform the various functions in a forward path (shown by the solid connection lines) to produce an encoded or compressed bitstream 420 using the video stream 300 as input: an intra/inter prediction stage 402 , a transform stage 404 , a quantization stage 406 , and an entropy encoding stage 408 .
- the encoder 400 may also include a reconstruction path (shown by the dotted connection lines) to reconstruct a frame for encoding of future blocks.
- the encoder 400 has the following stages to perform the various functions in the reconstruction path: a dequantization stage 410 , an inverse transform stage 412 , a reconstruction stage 414 , and a loop filtering stage 416 .
- Other structural variations of the encoder 400 can be used to encode the video stream 300 .
- respective frames 304 can be processed in units of blocks.
- respective blocks can be encoded using intra-frame prediction (also called intra-prediction) or inter-frame prediction (also called inter-prediction).
- intra-frame prediction also called intra-prediction
- inter-frame prediction also called inter-prediction
- a prediction block can be formed.
- intra-prediction a prediction block may be formed from samples in the current frame that have been previously encoded and reconstructed.
- inter-prediction a prediction block may be formed from samples in one or more previously constructed reference frames. Implementations for forming a prediction block are discussed below with respect to FIGS. 6, 7, and 8 , for example, using warped motion compensation to project pixels of a current block to a warped patch of a reference frame.
- the prediction block can be subtracted from the current block at the intra/inter prediction stage 402 to produce a residual block (also called a residual).
- the transform stage 404 transforms the residual into transform coefficients in, for example, the frequency domain using block-based transforms.
- the quantization stage 406 converts the transform coefficients into discrete quantum values, which are referred to as quantized transform coefficients, using a quantizer value or a quantization level. For example, the transform coefficients may be divided by the quantizer value and truncated.
- the quantized transform coefficients are then entropy encoded by the entropy encoding stage 408 .
- the entropy-encoded coefficients, together with other information used to decode the block, which may include for example the type of prediction used, transform type, motion vectors and quantizer value, are then output to the compressed bitstream 420 .
- the compressed bitstream 420 can be formatted using various techniques, such as variable length coding (VLC) or arithmetic coding.
- VLC variable length coding
- the compressed bitstream 420 can also be referred to as an encoded video stream or encoded video bitstream, and the terms will be used interchangeably herein.
- the reconstruction path in FIG. 4 can be used to ensure that the encoder 400 and a decoder 500 (described below) use the same reference frames to decode the compressed bitstream 420 .
- the reconstruction path performs functions that are similar to functions that take place during the decoding process that are discussed in more detail below, including dequantizing the quantized transform coefficients at the dequantization stage 410 and inverse transforming the dequantized transform coefficients at the inverse transform stage 412 to produce a derivative residual block (also called a derivative residual).
- the prediction block that was predicted at the intra/inter prediction stage 402 can be added to the derivative residual to create a reconstructed block.
- the loop filtering stage 416 can be applied to the reconstructed block to reduce distortion such as blocking artifacts.
- encoder 400 can be used to encode the compressed bitstream 420 .
- a non-transform based encoder can quantize the residual signal directly without the transform stage 404 for certain blocks or frames.
- an encoder can have the quantization stage 406 and the dequantization stage 410 combined in a common stage.
- FIG. 5 is a block diagram of a decoder 500 according to implementations of this disclosure.
- the decoder 500 can be implemented in the receiving station 106 , for example, by providing a computer software program stored in the memory 204 .
- the computer software program can include machine instructions that, when executed by a processor such as the CPU 202 , cause the receiving station 106 to decode video data in the manner described in FIG. 5 .
- the decoder 500 can also be implemented in hardware included in, for example, the transmitting station 102 or the receiving station 106 .
- the decoder 500 similar to the reconstruction path of the encoder 400 discussed above, includes in one example the following stages to perform various functions to produce an output video stream 516 from the compressed bitstream 420 : an entropy decoding stage 502 , a dequantization stage 504 , an inverse transform stage 506 , an intra/inter prediction stage 508 , a reconstruction stage 510 , a loop filtering stage 512 and a deblocking filtering stage 514 .
- Other structural variations of the decoder 500 can be used to decode the compressed bitstream 420 .
- the data elements within the compressed bitstream 420 can be decoded by the entropy decoding stage 502 to produce a set of quantized transform coefficients.
- the dequantization stage 504 dequantizes the quantized transform coefficients (e.g., by multiplying the quantized transform coefficients by the quantizer value), and the inverse transform stage 506 inverse transforms the dequantized transform coefficients to produce a derivative residual that can be identical to that created by the inverse transform stage 412 in the encoder 400 .
- the decoder 500 can use the intra/inter prediction stage 508 to create the same prediction block as was created in the encoder 400 , e.g., at the intra/inter prediction stage 402 . Implementations for forming a same prediction block as was created in the encoded 400 are discussed below with respect to FIGS. 6, 7, and 8 , for example, using warped motion compensation to project pixels of a current block to a warped patch of a reference frame.
- the prediction block can be added to the derivative residual to create a reconstructed block.
- the loop filtering stage 512 can be applied to the reconstructed block to reduce blocking artifacts.
- the deblocking filtering stage 514 is applied to the reconstructed block to reduce blocking distortion, and the result is output as the output video stream 516 .
- the output video stream 516 can also be referred to as a decoded video stream, and the terms will be used interchangeably herein.
- Other variations of the decoder 500 can be used to decode the compressed bitstream 420 .
- the decoder 500 can produce the output video stream 516 without the deblocking filtering stage 514 .
- FIG. 6 is a block diagram of an example of a reference frame buffer 600 according to implementations of this disclosure.
- the reference frame buffer 600 stores reference frames used to encode or decode blocks of frames of a video sequence.
- the reference frame buffer 600 includes a last frame LAST 602 , a golden frame GOLDEN 604 , and an alternative reference frame ALTREF 606 .
- the frame header of a reference frame can include a virtual index 608 to a location within the reference frame buffer 600 at which the reference frame is stored.
- a reference frame mapping 612 can map the virtual index 608 of a reference frame to a physical index 614 of memory at which the reference frame is stored. Where two reference frames are the same frame, those reference frames can have the same physical index even if they have different virtual indexes.
- One or more refresh flags 610 can be used to remove one or more of the stored reference frames from the reference frame buffer 600 , for example, to clear space in the reference frame buffer 600 for new reference frames, where there are no further blocks to encode or decode using the stored reference frames, or where a new golden frame is encoded or decoded.
- the reference frames stored in the reference frame buffer 600 can be used to identify motion vectors for predicting blocks of frames to be encoded or decoded. Different reference frames may be used depending on the type of prediction used to predict a current block of a current frame. For example, in an inter ⁇ inter compound prediction, blocks of the current frame can be forward predicted using any combination of the last frame LAST 602 , the golden frame GOLDEN 604 , and the alternative reference frame ALTREF 606 .
- the reference frame buffer 600 can store up to eight reference frames. Each of the stored reference frames can be associated with a respective virtual index 608 of the reference frame buffer. Although three of the eight spaces in the reference frame buffer 600 are used by the last frame LAST 602 , the golden frame GOLDEN 604 , and the alternative reference frame ALTREF 606 , five spaces remain available to store other reference frames.
- one or more available spaces in the reference frame buffer 600 may be used to store additional alternative reference frames (e.g., ALTREF1, ALTREF2, EXTRA ALTREF, etc., wherein the original alternative reference frame ALTREF 606 could be referred to as ALTREF0).
- the alternative reference frame ALTREF 606 is a frame of a video sequence that is distant from a current frame in a display order, but is encoded or decoded earlier than it is displayed.
- the alternative reference frame ALTREF 606 may be ten, twelve, or more (or fewer) frames after the current frame in a display order.
- the additional alternative reference frames can be frames located nearer to the current frame in the display order.
- a first additional alternative reference frame, ALTREF2 can be five or six frames after the current frame in the display order
- a second additional alternative reference frame, ALTREF3 can be three or four frames after the current frame in the display order. Being closer to the current frame in display order increases the likelihood of the features of a reference frame being more similar to those of the current frame.
- one of the additional alternative reference frames can be stored in the reference frame buffer 600 as additional options usable for backward prediction.
- the reference frame buffer 600 is shown as being able to store up to eight reference frames, other implementations of the reference frame buffer 600 may be able to store additional or fewer reference frames.
- the available spaces in the reference frame buffer 600 may be used to store frames other than additional alternative reference frames.
- the available spaces may store a second last frame LAST2 and/or a third last frame LAST3 as additional forward prediction reference frames.
- a backward frame BWDREF may be stored as an additional backward prediction reference frame.
- the frames of a GF group may be coded in a coding order that is different from the display order of the frames.
- an encoder may receive the frames in the display order, determine a coding order (or a coding structure), and encode the group of frames accordingly.
- a decoder may receive the frames (e.g., in an encoded bitstream) in the coding order, decode the frames in the coding order, and display the frames in the display order.
- frames As frames are coded (i.e., encoded by an encoder or decoded by a decoder), they may be added to the reference frame buffer 600 and assigned different roles (e.g., LAST, GOLDEN, ALTREF, LAST2, LAST3, BWDREF, etc.) for the coding of a subsequent frame. That is, frames that are coded first may be stored in the reference frame buffer 600 and used as reference frames for the coding (using inter-prediction) of other frames. For example, the first frame of a GF group may be coded first and assigned as a GOLDEN frame, and the last frame within a GF group may be coded second, assigned as an alternative reference (i.e., ALTREF) for the coding of all the other frames.
- LAST LAST
- GOLDEN ALTREF
- LAST2 LAST2
- BWDREF BWDREF
- FIG. 7 is a flowchart diagram of a process 700 for encoding a group of frames of a video sequence according to an implementation of this disclosure.
- the process 700 determines a stillness of the group of frames.
- a group of frames is considered a still group when the determined stillness meets stillness conditions. If the group of frames is determined to be still, the process 700 encodes the group of frames using a one-layer coding structure. If the group is determined not to be still, the process 700 encodes the group of frames using a multi-layer coding structure.
- the process 700 can be implemented, for example, as a software program that may be executed by computing devices such as transmitting station 102 .
- the software program can include machine-readable instructions that may be stored in a memory such as the memory 204 or the secondary storage 214 , and that, when executed by a processor, such as CPU 202 , may cause the computing device to perform the process 700 .
- the process 700 can be implemented using specialized hardware or firmware. As explained above, some computing devices may have multiple memories or processors, and the operations described in the process 700 can be distributed using multiple processors, memories, or both.
- the process 700 can be implemented by an encoder, such as the encoder 400 of FIG. 4 .
- the process 700 can be, at least partially, implemented by the intra/inter prediction stage 402 of FIG. 4 .
- the process 700 determines the stillness of the group of frames.
- the stillness of the group of frames can be determined based one or more metrics.
- the metrics can be extracted from the group of frames as a whole.
- the metrics can include a number of zero-motion blocks metric, an average per-pixel error metric, and an average raw standard deviation of the zero-motion blocks metric. Any combination of these metrics can be used to determine the stillness.
- the collective values of the metrics is referred to herein as the stillness of the group of frames.
- determining the stillness of the group of frames can include coding the frames of the group of frames in a display order of the frames, collecting metrics for each of the frames of the group of frames, and using the metrics to determine the stillness.
- the encoder can perform a simple first-pass encoding.
- the first-pass can be the first pass of the two-pass encoder described above and which is used to collect statistics.
- the statistics can be used determine the stillness metrics.
- the encoder can encode the frames of the group of frames in the display order of the frames (as opposed to some other more optimal coding structure).
- the first-pass encoding can include other encoding simplifications.
- the first-pass encoding can include partitioning each frame of the group of frames into fixed-size blocks.
- the fixed-size blocks can be 16 ⁇ 16, 32 ⁇ 32, or another fixed size.
- the block size can be selected based on the resolution of the source video. For example, a block size of 64 ⁇ 64, 128 ⁇ 128, or larger or smaller size, can be selected for 4K video sequences.
- the first-pass encoding can perform only integer motion search for the fixed-size blocks. That is, the encoder does not perform sub-pixel (i.e., fractional) motion search.
- Sub-pixel motion refers to a motion vector that points to a location that is between pixels of blocks in the reference frame.
- the number of zero-motion blocks is a measure of the number of blocks within the frames of the group of frames that use a zero motion vector.
- a motion vector can refer to (i.e., use) one of the reference frames of the frame buffer and describes a vertical offset and a horizontal offset in the reference frame of a collocated reference block.
- a zero motion vector is a motion vector that uses (0, 0) as the vertical and horizontal offsets.
- every frame of the group of frames is partitioned into non-overlapping blocks.
- Motion search can be performed for the non-overlapping blocks.
- a portion of a reference frame can be translated to a succession of locations (i.e., vertical and horizontal offsets) to form a prediction block that can be subtracted from a portion of a current frame to form a series of residuals.
- the X and Y translations corresponding to the location having the smallest residual can be selected as the motion vector.
- a block is considered to be a zero-motion block if the smallest residual corresponds to the (0, 0) translation.
- the number of zero-motion blocks metric can be given by the percent of total zero-motion blocks of the group of frames.
- the number of zero-motion blocks metric can be measured in other ways.
- the number of zero-motion blocks metric can be given by the minimum percent of zero-motion blocks per frame. That is, a percent of zero-motion blocks can be calculated for each frame of the group of frames. The minimum of all the calculated percentages can be taken as the number of zero-motion blocks metric.
- Gf_group_interval is the length of the group of frames S.
- Pcnt_zero_motion of a frame F i is the percent of inter-coded blocks of the frame F i having zero motion vectors.
- the average per-pixel error metric calculates, for all the frames of the group of frames, the average per-pixel error within the group of frames.
- the error can be a sum of absolute differences error, a sum of square errors, or any other suitable error.
- the error is calculated using pixel values of a current block of a frame of the group of frames and the pixel values of the reference block (i.e., a block in a reference frame) used, during the first-pass encoding for inter-predicting the current block.
- motion estimation is performed for blocks of at least some frames of the group of frames.
- the motion estimation results in respective predictor blocks being associated with blocks of the frames of the group of frames.
- the errors can be calculated between the respective predictor blocks and blocks of the frames.
- the calculation results in a frame error (i.e., an error for the whole frame).
- the frame error can be divided by the number of pixels in the frame to determine a per-pixel error for the frame.
- the average per-pixel error metric can be calculated as the mean of all the per-pixel errors for all frames as given by equation (2):
- Average ⁇ ⁇ per ⁇ ⁇ pixel ⁇ ⁇ error MEAN ⁇ ( Frame ⁇ ⁇ Error F i number ⁇ ⁇ of ⁇ ⁇ pixels ⁇ ⁇ per ⁇ ⁇ frame
- Frame Error F i is the frame error for all pixels of all blocks of the frame F i .
- Dividing the Frame Error F i by the number of pixels in a frame provides the per-pixel error for the frame F i .
- the average per pixel error metric can then be calculated as the mean of the per-pixel errors of all the frames of the group of frames S.
- the error calculated can be the sum of square error (SSE).
- the average raw standard deviation of the zero-motion blocks metric (i.e., avg_raw_err_stdev) provides an indication of how the errors (e.g., sum of square errors) of the zero-motion blocks vary across the frames of the group of frames.
- the standard deviation of the zero-motion blocks can indicate that, no matter whether the block-wise errors are big or small, as long as block-wise errors are identical or similar to each other in magnitude, then the standard deviation of the zero-motion blocks would be small.
- some blocks of a frame of the group of frames can be zero-motion blocks.
- the process 700 considers, for a frame, only zero-motion blocks and calculates block-wise errors for the zero-motion blocks. To determine an indication of how the block-wise errors vary in a frame, the process 700 can then calculate the standard deviation of the block-wise errors of the frame. The mean value of the block-wise errors standard deviations is then calculated.
- the process 700 determines whether the group of frames is still or not. If the group is not still, then the process 700 proceeds to 706 to encode the group of frames using a multi-layer coding structure.
- FIG. 8A describes an example of a multi-level coding structure. If the group is still, then the process 700 proceeds to 708 to encode the group of frames using a one-layer coding structure.
- FIG. 7A describes an example of a one-layer coding structure.
- the process 700 encodes the group of frames using a one-layer coding structure, and in response to determining that the stillness of the group of frames does not meet the stillness conditions, the process 700 encodes the group of frames using a multi-layer coding structure.
- the stillness conditions are not met when at least one of the conditions is not met.
- the process 700 can determine, whether the group of frames is still or not by comparing one or more of the calculated metrics to respective thresholds.
- the number of zero-motion blocks is compared to a zero-motion blocks threshold, the average per-pixel error being is compared to an average per-pixel error threshold, and/or the average raw standard deviation of the zero-motion blocks is compared to a standard deviation threshold.
- the zero-motion blocks threshold can be 90%.
- the average per-pixel error threshold can be 40.
- the standard deviation threshold can be 2000.
- the group of frames is determined to be still if one, two, all, or any combination of the following conditions are met: the number of zero-motion blocks is greater than the zero-motion blocks threshold; the average per-pixel error is less than the average per-pixel error threshold; and the average raw standard deviation of the zero-motion blocks is less than the standard deviation threshold.
- the group of frames is determined to be still if at least two of the conditions are satisfied. In another example, the group of frames is determined to be still if all the conditions are met. In yet another example, each of the metrics can have an associated weight and determining whether the group of frames is still can be based on a calculated weighted sum of the values of the metrics.
- Table 1 illustrates an example of determining whether a group of frames is still.
- all the conditions must be satisfied in order to determine that the group of frames is a still group.
- the conditions compare the metric values to the respective threshold values.
- the metrics are described as being calculated for all frames and all blocks. However, blocks and/or frames for which intra prediction provides better prediction than inter prediction are excluded from the calculations. For example, in cases where the first and/or last frames of group of frames use intra-prediction, the first and/or last frames are excluded from the calculation of the metrics.
- process 700 is depicted and described as a series of steps or operations. However, the steps or operations in accordance with this disclosure can occur in various orders and/or concurrently. Additionally, other steps or operations not presented and described herein may be used. Furthermore, not all illustrated steps or operations may be required to implement a method in accordance with the disclosed subject matter.
- the process 700 can include transmitting, in an encoded bitstream, such as the compressed bitstream 420 of FIG. 4 , an indication of whether the group of frames is encoded using the multi-layer coding structure or the one-layer coding structure.
- the indication can be a syntax element.
- the syntax element can be one or more bits.
- the syntax element can be incorporated into another syntax element.
- the process 700 can also include transmitting, in the encoded bitstream, the frames of the group of frames, in the coding order of the coding structure. Transmitting the group of frames in the encoded bitstream means, for example, transmitting (e.g., writing to, outputting to, etc.), in the compressed bitstream 420 , the output of the stages 402 - 408 of encoder 400 of FIG. 4 .
- FIG. 8A is a diagram of an example of a multi-layer coding structure 820 according to implementations of this disclosure.
- the multi-layer coding structure 820 shows a coding structure of a GF group of length 10 (i.e., the group of frames includes 10 frames): frames 800 - 818 .
- An encoder such as the encoder 400 of FIG. 4 , can encode a group of frames according to the multi-layer coding structure 820 .
- a decoder such as the decoder 500 of FIG. 5 , can decode the group of frames using the multi-layer coding structure 820 .
- the decoder can receive an encoded bitstream, such as the compressed bitstream 420 of FIG. 5 .
- the frames of the group of frames can be ordered (e.g., sequenced, stored, etc.) in the coding order of the multi-layer coding structure 820 .
- the decoder can decode the frames in the multi-layer coding structure 820 and display them in their display order.
- the encoded bitstream can include syntax elements that can be used by the decoder to determine the display order.
- the numbered boxes of FIG. 8A indicate the coding order of the group of frames.
- the coding order is given by the frame order: 800 , 802 , 804 , 806 , 808 , 810 , 812 , 814 , 816 , and 818 .
- the display order of the frames of the group of frames in indicated by the left-to-right order of the frames.
- the display order is given by the frame order: 800 , 808 , 806 , 810 , 804 , 816 , 814 , 818 , 812 , and 802 .
- the first layer includes the frames 800 and 802
- the second layer includes the frames 804 and 812
- the third layer includes the frames 806 and 814
- the fourth layer includes the frames 808 , 810 , 816 , and 818 .
- the frames of a layer do not necessarily correspond to the coding order. For example, while the frame 812 (corresponding to coding order 7) is in the second layer, frame 806 (corresponding to coding order 4) of the third layer and frame 808 (corresponding to coding order 5) of the fourth layer are coded before the frame 812 .
- the frames within a GF group may be coded out of their display order and the coded frames can be used as backward references for frames in different (i.e., higher) layers.
- the coding structure of FIG. 8A is said to be a multi-layer coding structure because frames of a layer are coded using, as reference frames, only coded frames of lower layers and coded frames of the same layer. That is, at least some frames of lower layers and frames of the same layer of a current frame (i.e., a frame being encoded) can be used as reference frames for the current frame.
- a coded frame of the same layer as the current frame is a frame of the same layer as the current frame and is coded before the current frame.
- the frame 812 (coding order 7) can be coded using frames of the first layer (i.e., the frames 800 and 802 ) and coded frames of the same layer (i.e., the frame 804 ).
- the arrows in FIG. 8 illustrate partial examples of which frames can be used, as reference frames, for coding a frame.
- the frame 800 can be used to code the frame 802
- the frames 800 and 802 can be used to code the frame 804 , and so on.
- the frames 800 and 802 can be used for coding any other frame of the group of frames; however, no arrows are illustrated, for example, between the frames 800 and/or 802 and the frames 810 , 816 , 818 , etc.
- the number of layers and the coding order of the frames of the group of frames can be selected by an encoder based on the length of the group of frames. For example, if the group of frames includes 10 frames, then the multi-layer coding structure of FIG. 8A can be used. In another example, if the group of frames includes nine (9) frames, then the coding order can be frames 1, 9, 8, 7, 6, 5, 4, 3, and 2. That is, for example, the 3 rd frame in the display order is the coded 8 th in the coding order.
- a first layer can include the 1 st and 9 th frames in the display order
- a second layer can include the 5 th frame in the display order
- a third layer can include the 3 rd and 7 th frames in the display order
- a fourth layer can include the 2 nd , 4 th , 6 th , and 8 th frames in the display order.
- the coding order for each group of frames can differ from the display order. This allows a frame located after a current frame in the video sequence to be used as a reference frame for encoding the current frame.
- a decoder such as the decoder 500
- the group coding structure assigns different roles that respective frames within the group may play in the reference frame buffer (e.g., a last frame, an alternative reference frame, etc.) and defines or indicates the coding order for the frames within a group.
- the first frame and last frame are coded first.
- the frame 800 (the first in display order) is coded first and the frame 802 (the last in display order) is coded next.
- the first frame of the group of frames can be referred as (i.e., has the role of) the GOLDEN frame such as described with respect to the golden frame GOLDEN 604 of FIG. 6 .
- the last frame in the display order (e.g., the frame 802 ) can be referred to as (i.e., has the role of) the ALTREF frame, as described with respect to the alternative reference frame ALTREF 606 of FIG. 6 .
- the frame 800 (as the golden frame) is available as a forward prediction frame and the frame 802 (as the alternative reference frame) is available as a backward reference frame.
- the reference frame buffer such as the reference frame buffer 600
- the reference frame buffer 600 is updated after coding each frame so as to update the identification of the reference frame, also called a last frame (e.g., LAST), which is available as a forward prediction frame in a similar manner as the frame 800 .
- LAST last frame
- the frame 808 can be designated the last frame (LAST), such as the last frame LAST 602 in the reference frame buffer 600 .
- the frame 806 is designated the last frame, replacing the frame 804 as the last frame in the reference frame buffer. This process continues for the prediction of the remaining frames of the group in the encoding order.
- the first frame can be encoded using inter- or intra-prediction.
- inter-prediction the first frame can be encoded using frames of a previous GF group.
- the last frame can be encoded using intra- or inter-prediction.
- the last frame can be encoded using the first frame (e.g., the frame 800 ) as indicated by the arrow 819 .
- the last frame can be encoded using frames of a previous GF group. All other frames (i.e., the frames 804 - 818 ) of the group of frames are encoded using encoded frames of the group of frames as described above.
- the GOLDEN frame (i.e., the frame 800 ) can be used as a forward reference and the ALTREF (i.e., the frame 802 ) can be used as a backward reference for coding the frames 804 - 818 .
- the ALTREF i.e., the frame 802
- every other frame of the group of frames i.e., the frames 804 - 818
- at least one past frame e.g., the frame 800
- at least one future frame e.g., the frame 802
- it is possible to code a frame i.e., to code at least some blocks of the frame
- one reference or two references e.g., inter ⁇ inter compound prediction
- the second layer i.e., the layer that includes the frames 804 and 812
- the third layer i.e., the layer that includes the frames 806 and and 814
- the frames of the EXTRA ALTREF layer can be used as additional alternative prediction reference frames.
- the frames of the BWDREF layer can be used as additional backward prediction reference frames. If a GF group is categorized as a non-still GF group (i.e., when a multi-layer coding structure is used), BWDREF frames and EXTRA ALTREF frames can be used to improve the coding performance.
- coding the group of frames using the multi-layer coding structure at 706 of FIG. 7 can include coding the first display frame (e.g., the frame 800 ), coding the last display frame (e.g., the frame 802 ), and coding a current frame of the group of frames (e.g., one of the frames 804 - 818 ) using one or two frames coded before the current frame.
- first display frame e.g., the frame 800
- coding the last display frame e.g., the frame 802
- a current frame of the group of frames e.g., one of the frames 804 - 818
- FIG. 8B is a diagram of an example of a one-layer coding structure 850 according to implementations of this disclosure.
- the one-layer coding structure 850 can be used to code a group of frames that is determined (such as at 704 of FIG. 7 ) to be still.
- An encoder such as the encoder 400 of FIG. 4 , can encode a group of frames according to the one-layer coding structure 850 .
- a decoder such as the decoder 500 of FIG. 5 , can decode the group of frames using the one-layer coding structure 850 .
- the decoder can receive an encoded bitstream, such as the compressed bitstream 420 of FIG. 5 .
- the frames of the group of frames can be ordered (e.g., sequenced, stored, etc.) in the coding order of the one-layer coding structure 850 .
- the decoder can decode the frames in the one-layer coding structure 850 and display them in their display order.
- the encoded bitstream can include syntax elements that can be used by the decoder to determine the display order.
- the display order of the group of frames of FIG. 8B is given by the left-to-right ordering of the frames.
- the display order is 852 , 854 , 856 , 858 , 860 , 862 , 864 , 866 , 868 , and 870 .
- the numbers in the boxes indicate the coding order of the frames.
- the coding is 852 , 870 , 854 , 856 , 858 , 860 , 862 , 864 , 866 , and 868 .
- any of the frames 854 , 856 , 858 , 860 , 862 , 864 , 866 , and 868 in the one-layer coding structure 850 except for the distant ALTREF frame (e.g., the frame 870 ), no other backward reference frames are used. Additionally, in the one-layer coding structure 850 , the use of the BWDREF layer (as described with respect to FIG. 8A ), the EXTRA ALTREF layer (as described with respect to FIG. 8A ), or both is disabled. That is, no BWDREF and/or EXTRA ALTREF reference frames are available for coding any of the frames 854 - 868 .
- the reference frames LAST, LAST2, LAST3, and GOLDEN coupled with the use of the distant ALTREF, can be used to encode a frame.
- the frames 852 (GOLDEN), the frame 860 (LAST3), the frame 862 (LAST2), the frame 864 (LAST), and the frame 870 (ALTREF) can be available in the reference frame buffer, such as the reference frame buffer 600 , for coding the frame 866 .
- coding the group of frames using the one-layer coding structure at 708 of FIG. 7 can include coding the first display frame (e.g., the frame 852 ), coding the last display frame (e.g., the frame 870 ), and coding a current frame of the group of frames (e.g., one of the frames 854 - 868 ) using at least one of the last display frame and a reference frame such that the reference frame is prior to the current frame in the display order.
- FIG. 9 is a flowchart diagram of a process 900 for decoding a group of frames of a video sequence according to an implementation of this disclosure.
- the process 900 can be implemented, for example, as a software program that may be executed by computing devices such as transmitting station 102 or receiving station 106 .
- the software program can include machine-readable instructions that may be stored in a memory such as the memory 204 or the secondary storage 214 , and that, when executed by a processor, such as CPU 202 , may cause the computing device to perform the process 900 .
- the process 900 can be implemented using specialized hardware or firmware. As described above, multiple processors, memories, or both, may be used.
- the process 900 can receive an encoded bitstream that includes the group of frames.
- the encoded bitstream can be received in any number of ways, such as by receiving the video data over a network, over a cable, or by reading the video data from a primary memory or other storage device, including a disk drive or removable media such as a CompactFlash (CF) card, Secure Digital (SD) card, or the like.
- CF CompactFlash
- SD Secure Digital
- the process 900 determines, from the encoded bitstream, an indication of a coding structure used by an encoder to encode the group of frames.
- “determine” means to decode, select, construct, identify, specify or other determine in any manner whatsoever.
- the indication can be one of a one-layer coding structure indication or a multi-layer coding structure indication.
- the indication can be a syntax element that indicates that the coding structure is one of a one-layer coding structure or a multi-layer coding structure.
- the indication can be transmitted in the encoded bitstream by an encoder that encoded the group of frames using the process 700 . For example, in response to determining that the group of frames is still, the encoder would have encoded the one-layer coding structure indication, and in response to determining that the group of frames is not still, the encoder would have encoded the multi-layer coding structure indication.
- the process 900 receives, in the encoded bitstream, the group of frames in a coding order of the coding structure. For example, if the encoder encoded the group of frames using the multi-layer coding structure 820 of FIG. 8 , then the encoder will have encoded the frames, in the encoded bitstream, in the order of the frames 800 , 802 , 804 , 806 , 808 , 810 , 812 , 814 , 816 , and 818 . For example, if the encoder encoded the group of frames using the one-layer coding structure 850 as described with respect to FIG.
- the encoder will have encoded the frames, in the encoded bitstream, in the order of frames 852 , 870 , 854 , 856 , 858 , 860 , 862 , 864 , 866 , and 868 .
- the process 900 decodes the group of frames using the coding structure.
- Decoding the group of frames can be, depending on the coding structure (i.e., the indication), as described with respect to FIG. 8A or FIG. 8B .
- encoding and decoding illustrate some examples of encoding and decoding techniques. However, it is to be understood that encoding and decoding, as those terms are used in the claims, could mean compression, decompression, transformation, or any other processing or change of data.
- example is used herein to mean serving as an example, instance, or illustration. Any aspect or design described herein as “example” is not necessarily to be construed as preferred or advantageous over other aspects or designs. Rather, use of the word “example” is intended to present concepts in a concrete fashion.
- the term “or” is intended to mean an inclusive “or” rather than an exclusive “or”. That is, unless specified otherwise, or clear from context, “X includes A or B” is intended to mean any of the natural inclusive permutations. That is, if X includes A; X includes B; or X includes both A and B, then “X includes A or B” is satisfied under any of the foregoing instances.
- Implementations of the transmitting station 102 and/or the receiving station 106 can be realized in hardware, software, or any combination thereof.
- the hardware can include, for example, computers, intellectual property (IP) cores, application-specific integrated circuits (ASICs), programmable logic arrays, optical processors, programmable logic controllers, microcode, microcontrollers, servers, microprocessors, digital signal processors or any other suitable circuit.
- IP intellectual property
- ASICs application-specific integrated circuits
- programmable logic arrays optical processors
- programmable logic controllers programmable logic controllers
- microcode microcontrollers
- servers microprocessors, digital signal processors or any other suitable circuit.
- signal processors should be understood as encompassing any of the foregoing hardware, either singly or in combination.
- signals and “data” are used interchangeably. Further, portions of the transmitting station 102 and the receiving station 106 do not necessarily have to be implemented in the same manner.
- the transmitting station 102 or the receiving station 106 can be implemented using a general-purpose computer or general-purpose processor with a computer program that, when executed, carries out any of the respective methods, algorithms and/or instructions described herein.
- a special purpose computer/processor can be utilized which can contain other hardware for carrying out any of the methods, algorithms, or instructions described herein.
- the transmitting station 102 and the receiving station 106 can, for example, be implemented on computers in a video conferencing system.
- the transmitting station 102 can be implemented on a server and the receiving station 106 can be implemented on a device separate from the server, such as a hand-held communications device.
- the transmitting station 102 can encode content using an encoder 400 into an encoded video signal and transmit the encoded video signal to the communications device.
- the communications device can then decode the encoded video signal using a decoder 500 .
- the communications device can decode content stored locally on the communications device, for example, content that was not transmitted by the transmitting station 102 .
- Other suitable transmitting and receiving implementation schemes are available.
- the receiving station 106 can be a generally stationary personal computer rather than a portable communications device and/or a device including an encoder 400 may also include a decoder 500 .
- implementations of the present disclosure can take the form of a computer program product accessible from, for example, a computer-usable or computer-readable medium.
- a computer-usable or computer-readable medium can be any device that can, for example, tangibly contain, store, communicate, or transport the program for use by or in connection with any processor.
- the medium can be, for example, an electronic, magnetic, optical, electromagnetic, or a semiconductor device. Other suitable mediums are also available.
Abstract
Description
Number of zero motion blocks=MIN(pcnt_zero_motionF
avg_raw_err_stdev=MEAN(STDEVF
TABLE 1 | |||
Stillness Detection | |||
Stillness Detection Metrics | Thresholds/Conditions | ||
Number of zero motion blocks | >90% | ||
Average per pixel error | <40 | ||
Average raw standard deviation | <2000 | ||
Claims (19)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US15/794,134 US10701364B2 (en) | 2017-10-26 | 2017-10-26 | Golden-frame group structure design using stillness detection |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US15/794,134 US10701364B2 (en) | 2017-10-26 | 2017-10-26 | Golden-frame group structure design using stillness detection |
Publications (2)
Publication Number | Publication Date |
---|---|
US20190132592A1 US20190132592A1 (en) | 2019-05-02 |
US10701364B2 true US10701364B2 (en) | 2020-06-30 |
Family
ID=66245733
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US15/794,134 Active 2038-03-17 US10701364B2 (en) | 2017-10-26 | 2017-10-26 | Golden-frame group structure design using stillness detection |
Country Status (1)
Country | Link |
---|---|
US (1) | US10701364B2 (en) |
Families Citing this family (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN106254869A (en) * | 2016-08-25 | 2016-12-21 | 腾讯科技（深圳）有限公司 | The decoding method of a kind of video data, device and system |
Citations (11)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6950465B1 (en) | 1999-05-18 | 2005-09-27 | Nec Corporation | Video coding by adaptively controlling the interval between successive predictive-coded frames according to magnitude of motion |
US20080037869A1 (en) | 2006-07-13 | 2008-02-14 | Hui Zhou | Method and Apparatus for Determining Motion in Images |
US20090154559A1 (en) * | 2007-12-18 | 2009-06-18 | At&T Knowledge Ventures, Lp | Redundant Data Dispersal In Transmission Of Video Data Based On Frame Type |
US20090226105A1 (en) * | 2008-03-10 | 2009-09-10 | Yu-Wen Huang | Adaptive motion estimation coding |
US20120287987A1 (en) * | 2011-05-13 | 2012-11-15 | Madhukar Budagavi | Coding of Scene Changes Using Picture Dropping |
JP2013034152A (en) * | 2011-08-03 | 2013-02-14 | Nippon Telegr & Teleph Corp <Ntt> | Video stationary determination method, video stationary determination device and program |
US20130308856A1 (en) * | 2012-01-12 | 2013-11-21 | Google Inc. | Background Detection As An Optimization For Gesture Recognition |
US20140161198A1 (en) * | 2012-12-12 | 2014-06-12 | Lsi Corporation | Multi-layer approach for frame-missing concealment in a video decoder |
US8879635B2 (en) * | 2005-09-27 | 2014-11-04 | Qualcomm Incorporated | Methods and device for data alignment with time domain boundary |
US20160241866A1 (en) * | 2013-10-11 | 2016-08-18 | Electronics And Telecommunications Research Institute | Method for encoding/decoding image and device using same |
US9578342B2 (en) * | 2013-06-24 | 2017-02-21 | Dialogic Corporation | Rate control algorithm for scalable video encoding with disposable P-frames |
-
2017
- 2017-10-26 US US15/794,134 patent/US10701364B2/en active Active
Patent Citations (11)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6950465B1 (en) | 1999-05-18 | 2005-09-27 | Nec Corporation | Video coding by adaptively controlling the interval between successive predictive-coded frames according to magnitude of motion |
US8879635B2 (en) * | 2005-09-27 | 2014-11-04 | Qualcomm Incorporated | Methods and device for data alignment with time domain boundary |
US20080037869A1 (en) | 2006-07-13 | 2008-02-14 | Hui Zhou | Method and Apparatus for Determining Motion in Images |
US20090154559A1 (en) * | 2007-12-18 | 2009-06-18 | At&T Knowledge Ventures, Lp | Redundant Data Dispersal In Transmission Of Video Data Based On Frame Type |
US20090226105A1 (en) * | 2008-03-10 | 2009-09-10 | Yu-Wen Huang | Adaptive motion estimation coding |
US20120287987A1 (en) * | 2011-05-13 | 2012-11-15 | Madhukar Budagavi | Coding of Scene Changes Using Picture Dropping |
JP2013034152A (en) * | 2011-08-03 | 2013-02-14 | Nippon Telegr & Teleph Corp <Ntt> | Video stationary determination method, video stationary determination device and program |
US20130308856A1 (en) * | 2012-01-12 | 2013-11-21 | Google Inc. | Background Detection As An Optimization For Gesture Recognition |
US20140161198A1 (en) * | 2012-12-12 | 2014-06-12 | Lsi Corporation | Multi-layer approach for frame-missing concealment in a video decoder |
US9578342B2 (en) * | 2013-06-24 | 2017-02-21 | Dialogic Corporation | Rate control algorithm for scalable video encoding with disposable P-frames |
US20160241866A1 (en) * | 2013-10-11 | 2016-08-18 | Electronics And Telecommunications Research Institute | Method for encoding/decoding image and device using same |
Non-Patent Citations (23)
Title |
---|
"Introduction to Video Coding Part 1: Transform Coding", Mozilla, Mar. 2012, 171 pp. |
"Overview VP7 Data Format and Decoder", Version 1.5, On2 Technologies, Inc., Mar. 28, 2005, 65 pp. |
"VP6 Bitstream and Decoder Specification", Version 1.02, On2 Technologies, Inc., Aug. 17, 2006, 88 pp. |
"VP6 Bitstream and Decoder Specification", Version 1.03, On2 Technologies, Inc., Oct. 29, 2007, 95 pp. |
"VP8 Data Format and Decoding Guide, WebM Project", Google On2, Dec. 1, 2010, 103 pp. |
Bankoski et al., "VP8 Data Format and Decoding Guide draft-bankoski-vp8-bitstream-02", Network Working Group, Internet-Draft, May 18, 2011, 288 pp. |
Bankoski et al., "VP8 Data Format and Decoding Guide", Independent Submission RFC 6389, Nov. 2011, 305 pp. |
Bankoski, et al., "Technical Overview of VP8, An Open Source Video Codec for the Web", Jul. 11, 2011, 6 pp. |
Series H: Audiovisual and Multimedia Systems, Coding of moving video: Implementors Guide for H.264: Advanced video coding for generic audiovisual services, International Telecommunication Union, Jul. 30, 2010, 15 pp. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services-Coding of moving video, Advanced video coding for generic audiovisual services, Amendment 1: Support of additional colour spaces and removal of the High 4:4:4 Profile, International Telecommunication Union, Jun. 2006, 16 pp. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services—Coding of moving video, Advanced video coding for generic audiovisual services, Amendment 1: Support of additional colour spaces and removal of the High 4:4:4 Profile, International Telecommunication Union, Jun. 2006, 16 pp. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services-Coding of moving video, Advanced video coding for generic audiovisual services, International Telecommunication Union, Version 11, Mar. 2009. 670 pp. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services—Coding of moving video, Advanced video coding for generic audiovisual services, International Telecommunication Union, Version 11, Mar. 2009. 670 pp. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services-Coding of moving video, Advanced video coding for generic audiovisual services, International Telecommunication Union, Version 12, Mar. 2010, 676 pp. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services—Coding of moving video, Advanced video coding for generic audiovisual services, International Telecommunication Union, Version 12, Mar. 2010, 676 pp. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services-Coding of moving video, Advanced video coding for generic audiovisual services, Version 1, International Telecommunication Union, May 2003, 282 pp. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services—Coding of moving video, Advanced video coding for generic audiovisual services, Version 1, International Telecommunication Union, May 2003, 282 pp. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services-Coding of moving video, Advanced video coding for generic audiovisual services, Version 3, International Telecommunication Union, Mar. 2005, 343 pp. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services—Coding of moving video, Advanced video coding for generic audiovisual services, Version 3, International Telecommunication Union, Mar. 2005, 343 pp. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services-Coding of moving video, Advanced video coding for generic audiovisual services, Version 8, International Telecommunication Union, Nov. 1, 2007, 564 pp. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services—Coding of moving video, Advanced video coding for generic audiovisual services, Version 8, International Telecommunication Union, Nov. 1, 2007, 564 pp. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services-Coding of moving video, Amendment 2: New profiles for professional applications, International Telecommunication Union, Apr. 2007, 75 pp. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services—Coding of moving video, Amendment 2: New profiles for professional applications, International Telecommunication Union, Apr. 2007, 75 pp. |
Also Published As
Publication number | Publication date |
---|---|
US20190132592A1 (en) | 2019-05-02 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US11800136B2 (en) | Constrained motion field estimation for hardware efficiency | |
US10555000B2 (en) | Multi-level compound prediction | |
US10362329B2 (en) | Video coding using reference motion vectors | |
US10462457B2 (en) | Dynamic reference motion vector coding mode | |
US11343528B2 (en) | Compound prediction for video coding | |
CN107205156B (en) | Motion vector prediction by scaling | |
US11025950B2 (en) | Motion field-based reference frame rendering for motion compensated prediction in video coding | |
US10582212B2 (en) | Warped reference motion vectors for video compression | |
US10419777B2 (en) | Non-causal overlapped block prediction in variable block size video coding | |
WO2019036080A1 (en) | Constrained motion field estimation for inter prediction | |
US11363262B1 (en) | Adaptive GOP structure using temporal dependencies likelihood | |
US10701364B2 (en) | Golden-frame group structure design using stillness detection | |
US10448013B2 (en) | Multi-layer-multi-reference prediction using adaptive temporal filtering | |
US10412383B2 (en) | Compressing groups of video frames using reversed ordering | |
WO2023287418A1 (en) | Reference motion vector candidate bank | |
WO2023172243A1 (en) | Multi-frame motion compensation synthesis for video coding |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
FEPP | Fee payment procedure |
Free format text: ENTITY STATUS SET TO UNDISCOUNTED (ORIGINAL EVENT CODE: BIG.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:LIU, YUXIN;CHEN, DI;XU, YAOWU;SIGNING DATES FROM 20171019 TO 20171024;REEL/FRAME:044169/0347 |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: NON FINAL ACTION MAILED |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: RESPONSE TO NON-FINAL OFFICE ACTION ENTERED AND FORWARDED TO EXAMINER |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: FINAL REJECTION MAILED |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: ADVISORY ACTION MAILED |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: DOCKETED NEW CASE - READY FOR EXAMINATION |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: NOTICE OF ALLOWANCE MAILED -- APPLICATION RECEIVED IN OFFICE OF PUBLICATIONS |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: PUBLICATIONS -- ISSUE FEE PAYMENT VERIFIED |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 4 |
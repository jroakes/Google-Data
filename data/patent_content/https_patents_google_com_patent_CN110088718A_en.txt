CN110088718A - The interface transformation of dynamic generation - Google Patents
The interface transformation of dynamic generation Download PDFInfo
- Publication number
- CN110088718A CN110088718A CN201880003769.5A CN201880003769A CN110088718A CN 110088718 A CN110088718 A CN 110088718A CN 201880003769 A CN201880003769 A CN 201880003769A CN 110088718 A CN110088718 A CN 110088718A
- Authority
- CN
- China
- Prior art keywords
- appearance
- state
- timing function
- change
- conversion
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Pending
Links
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06T—IMAGE DATA PROCESSING OR GENERATION, IN GENERAL
- G06T13/00—Animation
- G06T13/80—2D [Two Dimensional] animation, e.g. using sprites
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/01—Input arrangements or combined input and output arrangements for interaction between user and computer
- G06F3/048—Interaction techniques based on graphical user interfaces [GUI]
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/01—Input arrangements or combined input and output arrangements for interaction between user and computer
- G06F3/048—Interaction techniques based on graphical user interfaces [GUI]
- G06F3/0481—Interaction techniques based on graphical user interfaces [GUI] based on specific properties of the displayed interaction object or a metaphor-based environment, e.g. interaction with desktop elements like windows or icons, or assisted by a cursor's changing behaviour or appearance
- G06F3/04817—Interaction techniques based on graphical user interfaces [GUI] based on specific properties of the displayed interaction object or a metaphor-based environment, e.g. interaction with desktop elements like windows or icons, or assisted by a cursor's changing behaviour or appearance using icons
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F9/00—Arrangements for program control, e.g. control units
- G06F9/06—Arrangements for program control, e.g. control units using stored programs, i.e. using an internal store of processing equipment to receive or retain programs
- G06F9/44—Arrangements for executing specific programs
- G06F9/451—Execution arrangements for user interfaces
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06T—IMAGE DATA PROCESSING OR GENERATION, IN GENERAL
- G06T11/00—2D [Two Dimensional] image generation
- G06T11/001—Texturing; Colouring; Generation of texture or colour
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06T—IMAGE DATA PROCESSING OR GENERATION, IN GENERAL
- G06T11/00—2D [Two Dimensional] image generation
- G06T11/60—Editing figures and text; Combining figures or text
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06T—IMAGE DATA PROCESSING OR GENERATION, IN GENERAL
- G06T13/00—Animation
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06T—IMAGE DATA PROCESSING OR GENERATION, IN GENERAL
- G06T3/00—Geometric image transformation in the plane of the image
- G06T3/40—Scaling the whole image or part thereof
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N5/00—Details of television systems
- H04N5/222—Studio circuitry; Studio devices; Studio equipment
- H04N5/262—Studio circuits, e.g. for mixing, switching-over, change of character of image, other special effects ; Cameras specially adapted for the electronic generation of special effects
- H04N5/2628—Alteration of picture size, shape, position or orientation, e.g. zooming, rotation, rolling, perspective, translation
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06T—IMAGE DATA PROCESSING OR GENERATION, IN GENERAL
- G06T2200/00—Indexing scheme for image data processing or generation, in general
- G06T2200/24—Indexing scheme for image data processing or generation, in general involving graphical user interfaces [GUIs]
Abstract
It describes for the technology based on the conversion between user interface state of the timing function for multiple and different conversions in one or more application to be dynamically determined application between at runtime.Timing function is applied to the various transform graphical elements in user interface, so that each the appearance of shared element is gradually changed with the rate determined according to timing function.Used during translation duration (for example, as a whole) the shared element of timing function conversion.Convert outflow element and incoming element respectively using the first subdivision of timing function and the second subdivision, wherein subdivision is demarcated by the inflection point time, and in some instances, the inflection point time corresponds to the time of the peak velocity of timing function.
Description
Background technique
In view of the generality of various types of calculating equipment for work, leisure, business and social interaction, many people
It takes a significant amount of time to check the user interface for calculating at one and presenting in equipment or other calculating equipment.Therefore, application interface
Designer and developer make great efforts to provide easy to use, intuitive and/or positive user experience be provided in other ways
Interface.In some cases, in order to keep user's attention and prevent from confusing, operating system and/or static state at interface is applied
Animated transition is provided between state.Understand to be perceived as being continuous and easy to user, which can coordinate to present in interface
Element movement, appearance and/or disappearance sequence.The sequence is referred to as layout (choreography).In general, each
Conversion by application developer and/or operating system individually designed (that is, layout) and can specify.
Summary of the invention
The present disclosure relates generally to execute conversion in user interface (User Interface, UI).More specifically, some realities
The mode of applying is related to the conversion between the state being dynamically generated and executed based on timing function in UI, and wherein the timing function indicates
How gradually changed in appearance in transition period various elements at it.
In general, even if, the outward appearance change of UI, UI is also most effective when UI is when providing a user continuity.Because of UI
Change be predictable to user, so improving continuity can be improved the availability of UI.In many UI, element arrangements
Specific change is uncertain.For example, application developer or the unpredictable user of operating system design personnel may be concurrent
All combinations of the application of operation, or many different arrangements of the UI element that may finally be arranged on UI.Although how with
Time configuration and change UI there are many possibility, but manage conversion by a uniform matter as described below
Periodically, the continuity and UI that UI can be enhanced convey the ability changed to user.
In some embodiments, the feature of UI conversion is by operating system or other software dynamic generations.Computing system can
To obtain the information of the element about UI currently arranged, and to be arranged by the expectation for the element that conversion is realized.By commenting
Estimate the similitude and difference between two UI states, the attribute of conversion can be dynamically arranged in computing system.In this way,
System can be enhanced the continuity of conversion process and be maintained at the flexibility for executing conversion between various UI configurations.In addition, using
The characteristic of specified conversion is not needed.When computing system the various combination from different third-party UI elements view (such as
View including the element from several different applications) between when converting, which is particularly useful.Therefore, embodiment allows
UI is generated from previous UI to be unable to the improved procedure of manual programming.
In order to realize consistency in many different types of conversions, main timing function can be used for exporting determining for UI appearance
When and change pattern.Using the main timing function, can turn for the conversion adjustment of various durations (for example, 1 second or 5 seconds)
It changes, and still shares consistent change pattern.For example, main timing function can specify UI element should be in the different portions of conversion
The relative speed for the movement advanced on UI in point.The timing mode specified by main timing function can be scaled (for example, compression
Or stretch to adapt to short or long conversion), to provide consistent change pattern in different types of conversion.In addition, identical
Main timing function is determined for the conversion for different types of change, for example, change, UI in the interface individually applied
On the change etc. of the arrangement of the window of different application or other elements that display together.
One novel aspects of theme described in this specification are embodied in the method including following movement: being received and executed
Instruction of the user interface (UI) from the conversion of the first UI state to the 2nd UI state；Identify (i) graphic element in the first UI
In state present and do not presented in the 2nd UI state at least one outflow element (outgoing element) and
(ii) the incoming element of at least one for presenting and not presented in the first UI state in the 2nd UI state in graphic element
(ingoing element)；Determine the translation duration that the 2nd UI state is transformed into from the first UI state；Turning according to specifying
The timing function of different outward appearance change rates during changing change the appearance of UI in translation duration from first
UI state is transformed into the 2nd UI state, and wherein the appearance of UI changes in the following manner: in the first part of translation duration
Period gradually removes at least one outflow element from UI, and wherein at least one spreads out of the appearance of element to be specified by timing function
, the change rate of variation changes；And during the second part of translation duration by least one be passed to element by
Gradually it is added to UI, wherein at least one is passed to the appearance of element and is changed with change rate specified by timing function, variation.
It in this respect include corresponding system, device and in computer memory device with the other embodiments of other aspects
The computer program for being configured as executing the movement of this method of upper coding.One or more computers or other processing equipments
System can by be mounted in system in operation so that system is executed the movement software, firmware, hardware or their group
It closes and comes configured in this way.One or more computer programs can be such that the device holds by having when being run by data processing equipment
The instruction of the row movement is configured in this way.
These embodiments and other embodiments can respectively optionally include one or more of following features.
Some embodiments include the feature of following operation: determine the main timing function for controlling multiple conversions in UI,
And by adjusting main timing function to export the timing function for conversion across translation duration.
Some embodiments include the feature of following operation: the inflection point time are determined, in the maximum change that timing function is specified
In the threshold range of the time of rate, and translation duration is divided into first part and second part, so that (i) first
Part extends to the inflection point time since translation duration, when (ii) second period from the inflection point time extends to conversion persistently
Between end.
In some embodiments, in the transition period, in the position of respective graphical element, size, shape, Z- rank
(Z-level), change at least one described outflow element and institute in the one or more of direction, opacity, color or shade
State the appearance of at least one incoming element.It will be understood that the appearance for changing element includes modifying the appearance of element.
In some embodiments, the appearance for gradually changing at least one outflow element includes at least one outflow element by this
Opacity from initial UI state it is complete it is opaque be gradually changed into the inflection point time from it is fully transparent.
In some embodiments, the appearance for gradually changing at least one incoming element includes at least one incoming element by this
Opacity be gradually changed into from fully transparent from the inflection point time it is complete opaque in final UI state.
In some embodiments, the appearance for gradually changing at least one outflow element includes at least one outflow element by this
Size zero size from the inflection point time is gradually changed into from the initial size in initial UI state.
In some embodiments, the appearance for gradually changing at least one incoming element includes at least one incoming element by this
Size the final size in final UI state is gradually changed into from zero size from the inflection point time.
Some embodiments include the feature of following operation: at least one of identification graphic element is quickly converted element outside
It is not gradually variable in sight, and changes this at least one is quickly converted the appearance of element, is defined according to timing function
Specific time the corresponding FINAL APPEARANCE in final UI state is changed into from the corresponding initial appearance in initial UI state.
Some embodiments include the feature of following operation: identification graphic element in initial UI state and final UI state
The shared element of at least one all presented in the two, and at least one shares the appearance of element from initial UI state by this
Corresponding initial appearance is gradually changed into the corresponding FINAL APPEARANCE in final UI state, wherein gradually changing at least one shared member
The appearance of element is in response to be dynamically determined in the received instruction of institute according to timing function.
In some embodiments, gradually change at least one shared element appearance include: in the transition period according to institute
Each shared element is moved to final position from initial position by the speed for stating timing function variation.
In some embodiments, gradually change at least one shared element appearance include: in the transition period according to institute
The size for stating timing function variation changes rate and the size of each shared element is changed into final size from initial size.
In some embodiments, gradually change at least one shared element appearance include: in the transition period according to institute
Each shared element is rotated to final direction from inceptive direction by the speed of rotation for stating timing function variation.
In some embodiments, gradually change at least one shared element appearance include: in the transition period according to institute
The color of each shared element is changed into final color from priming color by the color change rate for stating timing function variation.
Some embodiments include the feature of following operation: accessing the main timing function for defining the curve of monotone increasing
Data, by scaling the curve to export the timing function for conversion throughout entire translation duration.
In some embodiments, at least one outflow element is gradually removed including the use of by first of the curve after scaling
Divide the timing mode of definition to change the appearance of at least one outflow element.
In some embodiments, at least one outflow element is gradually removed including the use of by second of the curve after scaling
Divide the timing mode of definition to change the appearance of at least one outflow element.
Transition period between two states in UI, animation framework, operating system and/or other software modules are coordinated
The sequence and appearance of the graphic element presented in UI during at least part for the period that UI is converted between states
(for example, layout).Graphic element can be with text, shape, symbol, color, icon, image, video data, figure, window, face
Information is presented in the form of plate, frame etc..Graphic element can also include the control that user can interact, such as button, column
Table, menu, data-entry form field, slider control, can click figure, optional icon etc. at label.
Graphic element may include static elements, shared element, incoming element and/or outflow element.Static elements include
All there is identical appearance (for example, position, shape, size, color etc.) in both the original state of conversion UI and end-state,
So that may not be needed to change those of their appearance element in the transition period.Element is shared in original state and end-state
All exist in the two, and shows outward appearance change between the initial state and the final state.This outward appearance change may include position
Set, size, shape, direction, Z- rank, opacity, pattern, color or element appearance some other aspects in one or
Multiple changes.Outflow element is presented in the initial state but is not presented in end-state.Incoming element is presented on final shape
In state but do not present in the initial state.Outgoing and incoming element can by size, opacity, position and/or it is some its
UI is respectively converted out from UI or is transferred into the change of its visible properties.
In general, computing system does not use the standard method for interface transformation layout, and application developer is typically
Individually designed each conversion.For example, application tradition exploitation during, developer can attempt determine application UI state it
Between each of possible conversion, and then for it is each it is possible conversion manually composition look-up table.Look-up table can indicate turning
The particular state of each element of each middle point in time during changing, or can be in other ways each individually member
Sketch is stated the element and will be animated to realize the ad hoc fashion converted.This is manually, height customizes and labour-intensive conversion
Design process is that each conversion creates a complex set of dependence, usually not about these values it is how related or these
Value will need how to be adapted to various accidents (overall conversion speed changes, output display size changes etc.)
Basic logic.
Implementations described herein enhances UI conversion process, answers in the UI conversion process by using across specific
Different UI are controlled with, multiple applications or widely calculating the single timing function applied of multiple conversions in environment
Multiple conversions of element, so that UI is transformed into the 2nd UI from the first UI.Common timing function is by the progress of conversion and time phase
Association has reached in the conversion at that time so that timing function provides each element for each time of transition period
Progress.
In some embodiments, the animation framework or other software modules for managing conversion receive main timing function and conversion
Duration as input.Main timing function and duration can be used for by stretching or compressing main timing function to cross over
The specific duration of conversion exports the timing function of particular conversion.Timing function is applied to shared by (for example, directly)
Element, so that each the appearance of shared element is gradually changed across translation duration according to timing function.As retouched further below
It states, according to timing function, interpolation (interpolate) each shares the various of element between the initial state and the final state
The value of appearance characteristics (for example, size, position, direction etc.).
The inflection point time determined based on timing function, or associated with timing function in other ways.In some implementations
In mode, the inflection point time is the time of the peak velocity of timing function (for example, the point or timing function of maximum change rate
The point of the maximum value of first derivative), and/or in the threshold time period of the time of peak velocity.Timing function can be in inflection point
It is divided into the first subdivision (before the inflection point time) and the second subdivision at time (after the inflection point time).Since conversion
It is used to drive the animation of outflow element to the first subdivision of inflection point time, so that outflow element is held according to according to the first subdivision
Capable interpolation gradually changes.It spreads out of element and initial UI state is started from initial appearance, and its appearance gradually changes, Zhi Daochuan
Element disappears at the inflection point time from UI out.The second subdivision from inflection point time to conversion end is for driving incoming element
Animation, so that gradually changing incoming element according to the interpolation executed according to the second subdivision.Incoming element is opened at the inflection point time
Beginning appears in UI, and gradually changes appearance, until reaching its FINAL APPEARANCE in final UI state.That is, outflow member
Element gradually disappears from UI during the first subdivision, and incoming element occurs gradually in UI during the second subdivision.
Different from according to traditional technology for each conversion using unique, individually designed (for example, customization) layout,
Embodiment can manage application, one group of application using single timing function or single main timing function or widely calculate
Multiple interface transformations in environment.It is total by using common timing function or main timing function, embodiment for multiple conversions
Provide on body is being consistent in terms of appearance, style, perception continuity, the easiness of understanding and positive user experience
, one to combine closely group conversion.By providing the one group of conversion combined closely, the availability of user interface is improved.Pass through
It adjusts the duration of conversion and exports the timing function as the main timing function for being suitable for the duration adjusted, it is real
The mode of applying can also provide the simplification of the optimization to each conversion in terms of the speed perception of user.This facilitates one or more
The fine tuning of a conversion.
In some embodiments, timing function, which is also used to manage, those of is not suitable for gradually changing element in the transition period
(such as shown in initial and end-state the element of different texts, change between the initial state and the final state it is capable and/or
The table view of the quantity of column or grid elements etc.) conversion.Such element is described herein as being quickly converted
(snap-transition) element.In some embodiments, element is quickly converted in inflection point associated with timing function
Between from its original state change into its end-state.It is this change can be presented be quickly converted element from its initial shape
State to its end-state cutting, fade out (dissolve) or other substantially instantaneous changes.Therefore, it is possible to use identical
Timing function manages the conversion of the element gradually changed (for example, share, transmit to and or from element) and does not gradually change
Be quickly converted element.
In some embodiments, multiple conversions are managed using single timing function.It in some embodiments, can be with
Using multiple timing functions, wherein each timing function is applied to manage different classes of or type conversion.For example, one fixed
When function can produce for users inconspicuous speed relatively and change, and can be used for handling more functional conversion.
Another timing function can produce slightly more unexpected speed and change, and can be used for emphasizing in significant instant.Implement
The layout of all switch elements is adjusted to the timing function suitable for particular conversion by mode automatically.
Embodiment provides one or more of following technological merit.Be dynamically determined by using timing function from
The original state mode to be altered to the UI transition period element of end-state, embodiment allow to modify in a uniform matter
Element, and this is impossible by manual designs and coding during the exploitation of application.Therefore, embodiment, which provides, more has
The development process of effect, the development process is simpler, time-consuming is less and is less prone to introduce wrong (bug).In addition, by will be single
A timing function is applied to multiple conversions, embodiment avoid it is specified manually in a lookup table or in other ways hard coded and
Make a reservation for the needs of each conversion.Therefore, if with can operating file be needed as it is each it is possible conversion include hard coded and/or
Individually the case where specified layout, is compared, embodiment with lesser binary system, machine code can operating file, can Run Script
Or the form of intermediate language file for application smaller size is provided can operating file.Therefore, embodiment reduces deposits respectively
Storage and/or transmission can amount of memory and/or network bandwidths needed for operating file.
The one or more embodiments of the detail of theme described in this specification are elaborated in the accompanying drawings and the description below.
According to specification, drawings and the claims, the other feature, aspect and advantage of this theme be will be apparent.
Detailed description of the invention
Fig. 1 is depicted according to implementations described herein for the dynamic generation of interface transformation and the example system of operation
System.
Fig. 2 is depicted according to the example of the transition interface of implementations described herein is initial and end-state.
Fig. 3 depicts the example timing function for dynamic generation interface transformation according to implementations described herein.
Fig. 4 depicts the example interface conversion executed based on example timing function according to implementations described herein.
Fig. 5 is depicted according to implementations described herein for the dynamic generation of interface transformation and the example mistake of operation
The flow chart of journey.
In the drawings, identical appended drawing reference and name indicate identical element.
Specific embodiment
Fig. 1 is depicted according to implementations described herein for the dynamic generation of interface transformation and the example system of operation
System 100.As shown in the example of Fig. 1, user 102 can operate user equipment 104.User equipment 104 can be any suitable
The calculating equipment of type, including portable (for example, mobile) calculate equipment (such as smart phone, tablet computer, wearable computing
Machine etc.).User equipment 104 can also be the calculating equipment of less portable kind, such as laptop computer, desktop computer,
Intelligent appliance, game or entertainment console etc..Using can run on user equipment 104 and by user equipment 104
UI is presented in display.In some instances, using can be run in some other calculating equipment and can send and to pass through
The output that the display of user equipment 104 is presented.In any case, software module 106 can be run to manage using UI's
Conversion 114 between two UI states.In some instances, software module 106 can be as operating system (Operating
System, OS) component and/or OS particular implementation component animation framework.In some instances, software module
106 can be library, OS component and/or the OS embodiment component that the various information using UI of management are shown.Alternatively, software
The information that module 106 can handle specific application is shown, and/or can be the component of application.Module 106 may include processing UI
From initial UI state 110 to one or more management conversion modules 108 of the conversion 118 of final UI state 112.Alternatively,
Module 106 can handle conversion 118 in itself.
Initial UI state 110 and final UI state 112 can be determined by (multiple) module 108 and/or 106.Initial UI shape
State 110 is the state of UI when (for example, immediately before conversion) conversion starts, and final UI state 112 is to convert
The state of the UI at the end of (for example, immediately upon the transition).UI state (such as original state, end-state or it is any in
Between state) may include any suitably-arranged any appropriate number of graphic element, wherein each graphic element is in its appearance
It is upper that there is specific one group of feature.External appearance characteristic can include but is not limited to one of the following or multiple: with X and Y coordinates or
The position of element that some other coordinate systems indicate, in UI, whether indicated depth or stacking level, and/or element are other
The Z- rank of element behind element and/or above, such as size of the element of length, width and/or other sizes, element
Relative to the direction of some suitable reference axis, the opacity of the element of the transparency or opacity of indicator element, according to
The filling pattern of the color and/or element of any suitable palette or the element of color model description is (for example, cross-hatched
Line etc.).
In some embodiments, it is determined using timing function 114 and translation duration 116 from initial UI state
110 ad hoc fashions that will be animated to the transition period various elements of final UI state 112.Translation duration 116 be from
Time started (for example, when UI is in its initial UI state) is to end time (for example, when UI is in its final UI state)
Complete the time quantum of conversion.As described above, timing function is the function of time, p=F (t), wherein p indicator element is from initial
State is to the progress in the conversion of end-state.Timing function 114 can be depicted as two-dimensional curve, and wherein X-axis is the time,
Y-axis is progress.For example, timing function 114 can be depicted as from (0,0) arrive (1,1) curve, it illustrates conversion with when
Between passage progress.In this example, point (0,0) indicates the beginning or the first UI state of conversion, and point (1,1) was indicated in the time
T=1 reaches the end converted when the 2nd UI state.Timing function 114 is also described as slow-action function (easing
function).In particular example, timing function 114 is a cube Bezier.It can be used in various curves or function
Any one converts the mode and rate of generation to specify.
In some embodiments, the offer of timing function 114 seems more natural, soft or beautiful for watching user
The conversion of sight.For example, timing function 114 can gradually be started when converting and starting with the progress of indicator element, slightly accelerate straight
Then some time intermediate to conversion reduces speed now and mitigates when element is in conversion end to its end-state, rather than
With abruptly start to and suddenly terminate, will so that element with fixed speed mechanically from a kind of status progression to another state
Strictly linear function.Therefore, when element stops accelerating and reducing speed now, timing function can be in some of transition period
Between at least one inflection point is presented.The example of timing function 114 is further described below with reference to Fig. 3.
In some embodiments, one for managing one or more different switchings is exported using main timing function
Or multiple specific timing functions 114.Main timing function is can be not specified in its duration or to can have specific
The timing function of (for example, default) duration.Specific timing function 114 can be by suitably extending or compressing main timing letter
Number across by the specific duration for being used for particular conversion to export from main timing function.In this way, embodiment can
The progress of similar appearance is provided for multiple conversions to use main timing function, but the duration of these conversions may not
Together.
(multiple) module 108 and/or 106 can be gradually changed to determine how in the transition period using timing function 114
The appearance of each graphic element.For sharing element, each shared element can be determined from initial using entire timing function
UI state to final UI state outward appearance change progression rates.For example, if shared element is in the transfer from a position
(x1, y1) is moved to another location (x2, y2), then is moved to its second position from its first position due to shared element,
Timing function can be used for the position of the interpolation element at the various times of transition period.As a specific example, if timing letter
Number indicator element has carried out progress p (for example, in ratio from 0 to 1) at the time t of transition period, then interpolation can refer to
Show that x position of the element at time t is x1+ (x2-x1) × p, and the y location of the element at time t is y1+ (y2-y1)
×p.As another example, if timing function p=F (t) instruction has reached progress p in time t, if shared element
Size is changed into from initial UI state with size d1 has size d2 in final UI state, then interpolation can indicate
The size (for example, length, width, radius etc.) of element at time t is | d1-d2 | × p.
The interpolation of the visual characteristic of element can be determined for other types of visual characteristic in a similar way.Example
Such as, if element will change its direction in the transition period, element can be initial from it with the rate determined based on timing function
Direction is gradually rotated to its final direction.As another example, if element will change its opacity in the transition period, member
Element can gradually be rendered as more or less opaque over time according to timing function.As another example, if
Element will change its color in the transition period, then at the beginning of can determining element from its according to the change rate indicated by timing function
Progress of beginning color (for example, RGB) value to its final color value.In some instances, member can be changed simultaneously in the transition period
Multiple appearance characteristics of element, and can be by gradually changing each appearance characteristics based on the interpolation of identical timing function.
In some embodiments, the specific time in translation duration can be appointed as the inflection point time.Some
In embodiment, the inflection point time is the time of the peak velocity (for example, maximum first derivative) of timing function, or in peak value speed
In the threshold time period of the time of degree.Timing function can be divided into the first subdivision and the second sub-portion based on the inflection point time
Point.First subdivision can be timing function from the beginning of conversion to the part of inflection point time, and the second subdivision
It can be the part of the end time slave the inflection point time to conversion of timing function.First subdivision be used for it is above-mentioned
Similar interpolation spreads out of the conversion of element to control.Inflection point entire translation duration can be divided into two parts or when
Section, the two parts or period are also referred to as subdivision.
For example, outflow element is present in UI when converting beginning with its initial appearance in initial UI state, and
It is gradually changed in appearance according to the interpolation based on the first subdivision, until outflow element disappears from UI at the inflection point time.
Similarly, the second subdivision can be used for controlling the conversion of incoming element.At the inflection point time, incoming element begins to appear in UI
It is interior, and appearance is gradually changed according to the interpolation based on the second subdivision, until incoming element reaches it in final UI state
FINAL APPEARANCE.Therefore, in some embodiments, it is passed to element and outflow element all cannot be in UI at the inflection point time
It is existing.In this way, the overall conversion between two UI states can be divided into two different parts or period, wherein right
The change for spreading out of element is carried out during first part, and the change to incoming element is carried out during second part.
Motor pattern or other changes follow the progress defined by the corresponding segment of timing function.For example, inflection point will can substantially determine
When function be divided into be respectively used to conversion different aspect two curves.No matter the value of the timing function curve at inflection point such as
What, by the value of the timing function curve at the end of the first subdivision be defined to indicate that 100% outflow element remove progress and
0% incoming element adds progress.
In some instances, UI can be presented the element for being not suitable for gradually changing and (such as be presented on transition period change
The element of text changes table or grid elements of the quantity of row and/or column etc. in the transition period).Such element is described
To be quickly converted element.In some embodiments, element is quickly converted at the inflection point time in appearance from its original state
Change into its end-state.Static elements can keep identical appearance in the entire transition period, and therefore can be not based on and determine
When function be changed.
The conversion of the various graphic elements in conversion UI is driven by using timing function, embodiment avoids correspondence
With the needs of the individually designed intended conversion animation of interior various possible conversions.Embodiment is applying interior offer dynamic generation
UI conversion, wherein the instruction of this conversion is needed in response to receiving, (for example, between at runtime during the operation of application
Place) determine conversion.For example, user is likely to be looking at the application on user equipment 104, and user can execute prompt application
The movement of another state is transformed into from a state.As a specific example, user can choose (for example, clicking, gesture operation)
Control is different from the view currently presented to request to apply element and/or different members by being presented differently from usually to present
View.It selects in response to user, using the conversion that can star from active view to new view, and can be selected in response to user
It selects and the ad hoc fashion that conversion will be animated is dynamically determined based on timing function as described herein.
In some embodiments, the first period of conversion when removing outflow element can with when adding incoming element
The overlapping of second period.For example, different start and stop times can be defined, rather than when defining two using single inflection point
Section.For example, the first period can occur within the period of [0,0.75] if the time 1 indicates complete translation duration,
And the second period can occur within the period of [0.25,1].Therefore, in order to realize desired visual effect, the first He of conversion
Second period can partially or completely be overlapped.
For the shared element of appearance is moved or changed between two UI states, can be occurred according to one of several options
Change.For example, the outward appearance change of shared element can gradually occur during the entire duration of conversion.Show as another
Example, changing for shared element can only occur together with the change of outflow element during the first period.As another example, altogether
The change for enjoying element can only occur together with the change of incoming element during the second period.As another example, conversion can
To be divided into three periods, such as occur the first period of the change of outflow element, the second period for changing shared element, with
And add the third period of incoming element.Period can be nonoverlapping, or can be overlapping.For changing shared element
Any one of these different modes, motor pattern follows the timing of the corresponding portion of timing function, for example, if changing
Occur entire translation duration first half, then the progress from 0% to 100% changed according to timing function first half
Partial specified generation.
Fig. 2 depicts the example 200 that the UI of end-state 112 is transformed into from original state 110.In this example, UI is in
Existing two shared elements 202 (1) and 202 (2), outflow element 204 and incoming element 206.Shared element 202 (1) and 202 (2)
Exist in the entire transition period, and change appearance between initial UI state 110 and final UI state 112.In this example,
Shared element 202 (1) changes its position, and shared element 202 (2) changes its size (for example, length and width size).Outflow member
Element 204 is presented in initial UI state 110, and is not presented in final UI state 112.Incoming element 206 is not presented in just
In beginning UI state 110, and it is presented in final UI state 112.
Fig. 3 depicts the example 300 of the timing function 114 for dynamic generation interface transformation.As described above, to convert
Used in timing function 114 can be across the translation duration 116 between from the outset to the end time.Timing function 114
The progress that can be had reached for the instruction conversion of each time during the duration in that time.In timing function 114
The interior identification inflection point time 302, and the inflection point time 302 is used as and terminates the conversion of outflow element and starts the conversion for being passed to element
Specific time.First subdivision 304 be timing function 114 from the outset between arrive the inflection point time 302 part, and second son
Part 306 is the part slave the inflection point time 302 to end time of timing function 114.As described above, 304 He of the first subdivision
Second subdivision 306 respectively drives outflow element and incoming element gradually changes.In some embodiments, (for example, conduct
Slow-action function) timing function 114 is not linear, and may include being provided more with converting for UI the period for accelerating and slowing down
Naturally feel.Therefore, timing function 114 can provide the mapping that non linear rate conversion progress is proceeded to from linear session.
Fig. 3 also shows the example 308 of the graphical first derivative (for example, time-derivative) of timing function 114, middling speed
Degree is the rate that progress changes over time.In this example, the inflection point time 302 is the time of the peak velocity of timing function 114,
The local maximum or global maximum of such as first derivative of timing function 114.Alternatively, the inflection point time 302 can be close
Like the time for peak velocity and/or in the threshold time period of the time of peak velocity.Also timing function 114 can be used
Other suitable inflection point times 302 in time span.In some embodiments, timing function 114 is in the whole of timing function
It is dull or non-decreasing in a span, this viewer that can be converted to UI provides the feeling of bigger consistency.
Fig. 4 depicts the example 400 of UI conversion.In this example, UI shown in the example of Fig. 2 turns from initial UI state
Final UI state is changed to, and example timing function 114 according to Fig.3, executes conversion.T1, UI at the beginning of conversion
Initial UI state in it with UI appearance 402 (1).Its conversion is had begun in subsequent time T2, UI and is showed outer
402 (2) are seen, one of them shared element (for example, circle) has begun, second shared element mobile towards its final position
(for example, bounding box), which has begun towards its final size, increases size, and spreads out of element (for example, single rectangle) and opened
Beginning becomes more transparent to fade out from UI.In subsequent time T3 (for example, inflection point time), UI shows appearance 402 (3),
Middle outflow element has disappeared, and shared element is in progress in their own conversion.In subsequent time T4, UI exhibition
Existing appearance 402 (4), wherein shared element is farther in their own conversion, and incoming element (for example, more rectangular elements)
It has begun and enters the visual field.T5 between at the end, UI show appearance 402 (5) in its final UI state, wherein shared element and
Incoming element is in its end-state.
Embodiment supports that using various outward appearance changes, these outward appearance changes occur gradually over incoming element in UI,
And outflow element is gradually disappeared from UI.In some instances, element can be entered by the change of opacity
UI leaves UI, wherein the change of opacity so that incoming element it is fully transparent when starting and gradually become it is less opaque and
So that outflow element is completely opaque when starting and gradually becomes relatively transparent.In some instances, element can pass through size
Change to enter UI or leave UI, wherein the change of size is so that incoming element is started with zero size and gradually rises to it finally
Size and make spread out of element started with full size and taper into zero size.In some instances, element can pass through
The change of position enters UI or leaves UI, and wherein the change of position is so that incoming element (example at the position of outside display
Such as, outside screen) start and be gradually moved into their final position and to spread out of initial position of the element in display
Start and gradually removes view.Other technologies can be used for introducing incoming element or remove outflow element.
Fig. 5 is depicted according to implementations described herein for the dynamic generation of interface transformation and the example mistake of operation
The flow chart 500 of journey.The operation of the process can be by software module 106, (multiple) management conversion module 108 or in user equipment
One or more of other (multiple) software modules of 104 or other place operations execute.
Receive to be executed in UI from initial UI state to the instruction (502) of the conversion of final UI state.It is true to convert
Determine timing function and translation duration (504).In some embodiments, as described above, by adjusting main timing function with
Come to export timing function from main timing function across identified translation duration.When can also determine the inflection point of timing function
Between (506).In some embodiments, the inflection point time is calculated (for example, the first derivative as timing function based on timing function
It is the time of maximum value).In some embodiments, (for example, utilizing timing function and duration) receives inflection point time work
For the input to process.
As set forth above, it is possible to drive the conversion of shared element using timing function (508), with determine the transition period it
The appearance that gradually changes.As set forth above, it is possible to drive the conversion of outflow element using the first subdivision of timing function
(510), and the second subdivision of timing function can be applied to drive the conversion (512) of incoming element.As described above, conversion
It can also include changing any appearance (514) for being quickly converted element at the inflection point time.In some embodiments, member is shared
Gradually changing for element can be with the outflow change for gradually changing, being quickly converted element of element and gradually changing for incoming element
It is performed in parallel.
In some embodiments, the dynamic generation of conversion described herein and operation can be used in applying below:
The application is not directed to when designing and applying to predefine possible conversion, make the conventional method for individually designed each conversion
It may not available application.For example, dynamic self-adapting application can be designed as the composition collection of component (for example, can be inserted into component)
Close, can at runtime between (for example, in application starting and/or during operation) be dynamically added to apply or from application
It removes.Therefore, the possible conversion between the operating component of application may be unknown before application operation, and can pass through
Implementations described herein is determined and is managed dynamically at run time.Using implementations described herein, using can be with
The different configurations that processing can change in operation are adapted to, and rarefaction representation can be used to indicate in the developer applied
UI, without individually designed each possible conversion.Embodiment is also convenient for have for available display space not
UI conversion in the application run in various types of calculating equipment of the similar shape factor.Using implementations described herein,
UI conversion easily and dynamically adapts to different size of display and ratio.
Although the example of this paper, which describes using timing function to handle, is related to shared element, incoming element, outflow element
It is converted with the UI for being quickly converted element, but embodiment needs not exist for each of element of these types.For example,
In some examples, conversion can be related to incoming element and/or spread out of element, but can not be related to shared element.In such reality
In example, even if entire timing function is not used for determining the conversion of any shared element, the sub-portion of timing function can also be used
Divide and is transferred into and out conversion to drive.
It in some embodiments, is the main timing function derived from main timing function for the timing function of conversion
It can be applied similarly to the multiple conversions applied, in one group of application or in general calculating environment.The conversion of each element can be with
(bound) is limited in translation duration, wherein shared element is converted within the entire duration, and spread out of element and
Incoming element is converted during the first subdivision and the second subdivision respectively.It in some embodiments, can be by using (example
Such as, by developer) it is the timing for converting one group of specified parameter to change the conversion of various elements.Such (multiple) parameters
Also it can be described as parameter wrapper.(multiple) parameter can indicate that beginning, end or the progression rates of certain element conversions will
Variation in timing (for example, staggeredly).In addition, in some embodiments, parameter can change fixed for the master of different application
When function, to add further details and/or nuance to some conversions.For example, (multiple) parameter may include main fixed
When function coefficient, with for conversion the additional degree of customization is provided.
The embodiment of the present invention described in this specification and all feature operations can be in Fundamental Digital Circuit or meters
Implement in calculation machine software, firmware or hardware, including structure disclosed in this specification and its equivalent structures or they in one
A or multiple combination.The embodiment of the present invention may be implemented for being run by data processing equipment or for controlling data
One or more computer program products of the operation of processing unit, that is, one or more encoded on a computer-readable medium
A computer program instructions module.Computer-readable medium can be non-transitory computer-readable storage media, machine readable
Store equipment, machine readable storage substrate, memory devices, influence machine readable transmitting signal substance combination or it
One or more of combination.Term " data processing equipment " includes all devices, equipment and the machine for handling data
Device, including such as programmable processor, computer or multiple processors or computer.In addition to hardware, which can be with
Including the code for the computer program creation running environment discussed, for example, composition processor firmware, protocol stack, database
The combined code of management system, operating system or one or more of which.The letter that transmitting signal is an artificially generated
Number, for example, generating encoded to information so as to being transferred to suitable acceptor device, machine generates electricity, light or electricity
Magnetic signal.
Computer program (also referred to as program, software, software application, script or code) can be to include compiling or explain
Any type of programming language of language is write, and can be to include with stand-alone program or to be suitble to make in a computing environment
Any form deployment of module, component, subroutine or other units.Computer program not necessarily corresponds in file system
File.Program, which can store, is saving other programs or data (for example, being stored in one or more of marking language document
Script) file a part in, be stored in the single file for being exclusively used in discussed program, or be stored in multiple coordinations
In file (such as the file for storing the part of one or more modules, subprogram or code).Can with deploying computer programs with
On a computer or on being located at website or it is distributed on multiple websites and passes through multiple meters of interconnection of telecommunication network
It is run on calculation machine.
Process and logic flow described in this specification can by run one of one or more computer programs or
Multiple programmable processors execute, to execute function by being operated to input data and generating output.Process and logic
Process can also be executed by dedicated logic circuit, and device also may be embodied as dedicated logic circuit, such as FPGA (Field
Programmable Gate Array, field programmable gate array) or ASIC (Application Specific
Integrated Circuit, specific integrated circuit).
For example, be suitable for the operation of computer program processor include both general and special microprocessors, with
And any one or more processors of any kind of digital computer.In general, processor will be from read-only memory or random
It accesses memory or both and receives instruction and data.The basic element of computer is processor for executing instruction and for depositing
Store up one or more memory devices of instruction and data.In general, computer will also include or be operatively coupled with from being used for
One or more mass-memory units (for example, disk, magneto-optic disk or CD) of storing data receive data or pass data
It is defeated to arrive one or more mass-memory units.However, computer does not need such equipment.In addition, computer can be embedded in
Another equipment (for example, tablet computer, mobile phone, personal digital assistant (Personal Digital Assistant,
PDA), Mobile audio player, global positioning system (Global Positioning System, GPS) receiver, are only lifted several
Example) in.Computer-readable medium suitable for storing computer program instructions and data includes that the non-volatile of form of ownership is deposited
Reservoir, medium and memory devices, including such as semiconductor memory devices (for example, EPROM, EEPROM and flash memory device),
Disk (for example, internal hard drive or moveable magnetic disc), magneto-optic disk and CD ROM and DVD-ROM disk.Processor and memory
It by supplemented or can be incorporated in dedicated logic circuit.
In order to provide the interaction with user, the embodiment of the present invention can have the display for showing information to user
Equipment is (for example, CRT (Cathode Ray Tube, cathode-ray tube) or LCD (Liquid Crystal Display, liquid crystal
Show device) monitor), user can by its to computer provide input keyboard and indicating equipment (for example, mouse or track
Ball) computer on implement.Other types of equipment can be used for providing the interaction with user；For example, being supplied to user's
Feedback may be any type of sensory feedback, for example, visual feedback, audio feedback or touch feedback；And it can be to include
Any form of acoustics, voice or tactile input receives input from the user.
The embodiment of the present invention can be implemented in computing systems, which includes (for example, as data server
) aft-end assembly, perhaps (used for example, having including middleware component (for example, application server) or including front end assemblies
Family can pass through the client computer for the graphic user interface or web browser that it is interacted with embodiments of the present invention),
Or any combination including aft-end assembly as one or more, intermediate module or front end assemblies.The component of system can be with
It is interconnected by any form or the digital data communications (for example, communication network) of medium.The example of communication network includes local area network
(Local Area Network, " LAN ") and wide area network (Wide Area Network, " WAN ") (for example, internet).
Computing system may include client and server.Client and server is generally remote from each other, and typically
Pass through communication network interaction.The relationship of client and server on respective computer by means of running and each other with visitor
Family end-relationship server computer program generates.
Although this specification includes many details, these details are not necessarily to be construed as to the present invention or can be claimed
Range limitation, but the description as the special characteristic to specific embodiment of the present invention.In the context of separate embodiments
In certain features for describing in the present specification can also combine implementation in a single embodiment.On the contrary, in single embodiment
Various features described in context can also be implemented in various embodiments individually or with any suitable sub-portfolio.This
Outside, although can be described as working with certain combinations and even initially so stating in upper region feature, certain
In the case of can be cut off from combination from combined one or more features claimed, and claimed group
Closing can be for the variation of sub-portfolio or sub-portfolio.
Similarly, although depicting operation in the accompanying drawings with particular order, this is not construed as realizing
Desired result requires the particular order shown in or executes such operation in order or execute all behaviour shown
Make.In some cases, multitasking and parallel processing may be advantageous.In addition, the various systems in above-described embodiment
The separation of component is understood not to require this separation in all embodiments, and it should be understood that the program groups described
Part and system usually can be integrated in together in single software product or be packaged into multiple software product.
Therefore, it has been described that the particular embodiment of the present invention.Other embodiments are in the range of following claims.Example
Such as, the movement recorded in claim can be executed in different order and still realize desired result.
Claims (20)
1. a kind of method executed by calculating equipment, which comprises
Instruction for executing the conversion of user interface (UI) from the first UI state to the 2nd UI state is received by calculating equipment；
It does not present by being presented in the first UI state in calculating equipment identification (i) graphic element and in the 2nd UI state
Being presented in the 2nd UI state and not being in the first UI state at least one outflow element and (ii) graphic element
At least one existing is passed to element；
The translation duration of the conversion from the first UI state to the 2nd UI state is determined by calculating equipment；
Change the appearance of UI according to timing function by calculating equipment to be transformed into translation duration from the first UI state
2nd UI state, wherein the timing function specifies different outward appearance change rates in conversion process, wherein the appearance of UI is logical
Cross following manner change:
Change the appearance of at least one outflow element during the first part of translation duration with described in removing from UI
At least one outflow element, wherein the appearance of at least one outflow element is with the change of variation that is being specified by timing function
Rate changes；And
Change the appearance of at least one incoming element during the second part of translation duration at least one by described in
A incoming element is added to UI, wherein the appearance of at least one incoming element is changed with being specified by timing function, variation
Variable Rate changes.
2. the method as described in claim 1, further includes:
Main timing function for controlling multiple conversions in UI is determined by calculating equipment；And
By calculating equipment by adjusting main timing function to export the timing function for conversion across translation duration.
3. method according to claim 1 or 2, further includes:
Inflection point time, the time for the maximum change rate that the inflection point time specifies in the timing function are determined by computing device
Threshold range in；And
Translation duration is divided into the first part and the second part by computing device, so that (i) described first
The inflection point time is extended to since translation duration for part and (ii) second period extends to conversion from the inflection point time and holds
The end of continuous time.
4. method as described in any one of the preceding claims, wherein in the transition period, in the position of respective graphical element
It sets, size, shape, Z- rank, direction, opacity, change at least one described biography in the one or more of color or shade
The appearance of element and at least one incoming element out.
5. the method as described in any one of aforementioned claim, in which:
Gradually change at least one outflow element appearance include by the opacity of at least one outflow element from
In initial UI state it is complete it is opaque be gradually changed into it is fully transparent at the inflection point time；And
Gradually change at least one incoming element appearance include by the opacity of at least one incoming element from
Fully transparent at the inflection point time is gradually changed into complete opaque in final UI state.
6. the method as described in any one of aforementioned claim, in which:
The appearance for gradually changing at least one outflow element includes by the size of at least one outflow element from initial
Initial size in UI state is gradually changed into zero size at the inflection point time；And
The appearance for gradually changing at least one incoming element includes by the size of at least one incoming element from inflection point
Zero size at time is gradually changed into the final size in final UI state.
7. the method as described in any one of aforementioned claim, further includes:
It is not gradually variable for being quickly converted element in appearance by least one of calculating equipment identification graphic element；And
By calculating equipment change it is described at least one be quickly converted the appearance of element, with according to timing function define it is specific when
Between the corresponding FINAL APPEARANCE in final UI state is changed into from the corresponding initial appearance in initial UI state.
8. the method as described in any one of aforementioned claim, further includes:
By at least one all presented in both initial UI state and final UI state in calculating equipment identification graphic element
Shared element；And
The appearance of at least one shared element is gradually changed from the corresponding initial appearance in initial UI state by calculating equipment
Become the corresponding FINAL APPEARANCE in final UI state, wherein the gradually changing for appearance of at least one shared element is in response to
In received indicate to be dynamically determined according to timing function.
9. method according to claim 8, wherein gradually change at least one shared element appearance include: with
Each shared element is moved to final position from initial position by the speed that the transition period changes according to the timing function.
10. method as claimed in claim 8 or 9, wherein gradually changing at least one described appearance for sharing element includes:
Change rate for the size of each shared element from initial size with the size changed in the transition period according to the timing function
Change into final size.
11. the method as described in any one of claim 8 to 10, wherein gradually change at least one shared element
Appearance includes: that will each share element with the speed of rotation changed in the transition period according to the timing function to revolve from inceptive direction
Go to final direction.
12. the method as described in any one of claim 8 to 11, wherein gradually changing the outer of at least one shared element
Sight includes: color change rate to be changed in the transition period according to the timing function by the color of each shared element from first
Beginning color change is final color.
13. the method as described in any one of aforementioned claim, further includes:
The data of the main timing function of the curve of monotone increasing are defined by the access of calculating equipment；And
By calculating equipment by scaling curve to export the timing function for conversion throughout entire translation duration；
Changing the appearance of at least one outflow element wherein to remove at least one described outflow element includes: using by contracting
The timing mode that the first part of curve after putting defines changes the appearance of at least one outflow element；And
Changing the appearance of at least one outflow element wherein to remove at least one described outflow element includes: using by contracting
The timing mode that the second part of curve after putting defines changes the appearance of at least one outflow element.
14. a kind of system, comprising:
At least one processor；With
Memory is communicably coupled at least one described processor, and the memory store instruction, described instruction is by institute
Stating executes at least one described processor when the operation of at least one processor include the operation of the following terms:
Receive the instruction for executing the conversion of user interface (UI) from the first UI state to the 2nd UI state；
At least one biography for presenting and not presented in the 2nd UI state in the first UI state in identification (i) graphic element
At least one for presenting and not presented in the first UI state in the 2nd UI state in element and (ii) graphic element out
A incoming element；
Determine the translation duration from the conversion of the first UI state to the 2nd UI state；
Change the appearance of UI according to timing function to be transformed into the 2nd UI state from the first UI state in translation duration,
Wherein the timing function specifies the different outward appearance change rates in conversion process, and wherein the appearance of UI is in the following manner
Change:
Change the appearance of at least one outflow element during the first part of translation duration with described in removing from UI
At least one outflow element, wherein the appearance of at least one outflow element is with the change of variation that is being specified by timing function
Rate changes；And
Change the appearance of at least one outflow element during the second part of translation duration at least one by described in
A incoming element is added to UI, wherein the appearance of at least one incoming element is changed with being specified by timing function, variation
Variable Rate changes.
15. system as claimed in claim 14, the operation further include:
Determine the main timing function for controlling multiple conversions in UI；And
By adjusting main timing function to export the timing function for conversion across translation duration.
16. the system as described in claims 14 or 15, the operation further include:
Determine inflection point time, the threshold range of time of the inflection point time in the maximum change rate specified by timing function
It is interior；And
Translation duration is divided into the first part and the second part, so that (i) first part continues from conversion
Time start to extend to the inflection point time and (ii) second period extends to the end of translation duration from the inflection point time.
17. the system as described in claim 14,15 or 16, wherein in the transition period, in the position of respective graphical element
It sets, size, shape, Z- rank, direction, opacity, change at least one described biography in the one or more of color or shade
The appearance of element and at least one incoming element out.
18. the system as described in any one of claim 14 to 17, the operation further include:
Identify that at least one all presented in both initial UI state and final UI state in graphic element shares element；With
And
The appearance of at least one shared element is gradually changed into final UI from the corresponding initial appearance in initial UI state
Corresponding FINAL APPEARANCE in state, wherein the appearance of at least one shared element gradually change be in response to it is received in institute
What instruction was dynamically determined according to timing function.
19. the system as described in any one of claim 14 to 18, the operation further include:
Access the data for defining the main timing function of the curve of monotone increasing；And
By scaling curve to export the timing function for conversion throughout entire translation duration；
Changing the appearance of at least one outflow element wherein to remove at least one described outflow element includes: using by contracting
The timing mode that the first part of curve after putting defines changes the appearance of at least one outflow element；And
Changing the appearance of at least one outflow element wherein to remove at least one described outflow element includes: using by contracting
The timing mode that the second part of curve after putting defines changes the appearance of at least one outflow element.
20. a kind of computer readable storage devices are stored with instruction, described instruction by one or more processors when being run
Executing one or more of processors includes the operation of the following terms:
Receive the instruction for executing the conversion of user interface (UI) from the first UI state to the 2nd UI state；
At least one biography for presenting and not presented in the 2nd UI state in the first UI state in identification (i) graphic element
At least one for presenting and not presented in the first UI state in the 2nd UI state in element and (ii) graphic element out
A incoming element；
Determine the translation duration from the conversion of the first UI state to the 2nd UI state；
Change the appearance of UI according to timing function to be transformed into the 2nd UI state from the first UI state in translation duration,
Wherein the timing function specifies the different outward appearance change rates in conversion process, and wherein the appearance of UI is in the following manner
Change:
Change the appearance of at least one outflow element during the first part of translation duration with described in removing from UI
At least one outflow element, wherein the appearance of at least one outflow element is with the change of variation that is being specified by timing function
Rate changes；And
Change the appearance of at least one outflow element during the second part of translation duration at least one by described in
A incoming element is added to UI, wherein the appearance of at least one incoming element is changed with being specified by timing function, variation
Variable Rate changes.
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US15/678,762 | 2017-08-16 | ||
US15/678,762 US10573051B2 (en) | 2017-08-16 | 2017-08-16 | Dynamically generated interface transitions |
PCT/US2018/046502 WO2019036366A1 (en) | 2017-08-16 | 2018-08-13 | Dynamically generated interface transitions |
Publications (1)
Publication Number | Publication Date |
---|---|
CN110088718A true CN110088718A (en) | 2019-08-02 |
Family
ID=63518004
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201880003769.5A Pending CN110088718A (en) | 2017-08-16 | 2018-08-13 | The interface transformation of dynamic generation |
Country Status (4)
Country | Link |
---|---|
US (1) | US10573051B2 (en) |
EP (1) | EP3500917A1 (en) |
CN (1) | CN110088718A (en) |
WO (1) | WO2019036366A1 (en) |
Families Citing this family (11)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
WO2020040749A1 (en) * | 2018-08-21 | 2020-02-27 | Google Llc | Dynamically generated interface transitions |
US11341274B2 (en) | 2018-12-19 | 2022-05-24 | Elasticsearch B.V. | Methods and systems for access controlled spaces for data analytics and visualization |
US10782860B2 (en) * | 2019-02-26 | 2020-09-22 | Elasticsearch B.V. | Systems and methods for dynamic scaling in graphical user interfaces |
US11477207B2 (en) | 2019-03-12 | 2022-10-18 | Elasticsearch B.V. | Configurable feature level controls for data |
EP3719753A1 (en) * | 2019-04-02 | 2020-10-07 | Rightware Oy | Dynamic transitioning between visual user interface elements on a display |
US11240126B2 (en) | 2019-04-11 | 2022-02-01 | Elasticsearch B.V. | Distributed tracing for application performance monitoring |
US10756959B1 (en) | 2019-04-11 | 2020-08-25 | Elasticsearch B.V. | Integration of application performance monitoring with logs and infrastructure |
US11397516B2 (en) | 2019-10-24 | 2022-07-26 | Elasticsearch B.V. | Systems and method for a customizable layered map for visualizing and analyzing geospatial data |
US11537363B2 (en) * | 2020-01-31 | 2022-12-27 | Salesforce.Com, Inc. | User interface migration using intermediate user interfaces |
US11703990B2 (en) | 2020-08-17 | 2023-07-18 | Microsoft Technology Licensing, Llc | Animated visual cues indicating the availability of associated content |
CN113380352B (en) * | 2021-06-24 | 2023-06-23 | 湖南创星科技股份有限公司 | Medical micro-service-based programming intermediate language description method and system |
Citations (5)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20070153006A1 (en) * | 2006-01-04 | 2007-07-05 | Microsoft Corporation | Representing animation as a static image on a graphical user interface |
CN103034399A (en) * | 2011-12-09 | 2013-04-10 | 微软公司 | Adjusting user interface element |
US20130093764A1 (en) * | 2011-10-18 | 2013-04-18 | Research In Motion Limited | Method of animating a rearrangement of ui elements on a display screen of an electronic device |
WO2016036776A1 (en) * | 2014-09-04 | 2016-03-10 | Microsoft Technology Licensing, Llc | User interface with dynamic transition times |
US20160170945A1 (en) * | 2014-12-16 | 2016-06-16 | Kabushiki Kaisha Toshiba | Information processing device, information processing method, and computer program product |
Family Cites Families (24)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6396500B1 (en) * | 1999-03-18 | 2002-05-28 | Microsoft Corporation | Method and system for generating and displaying a slide show with animations and transitions in a browser |
US20060129933A1 (en) * | 2000-12-19 | 2006-06-15 | Sparkpoint Software, Inc. | System and method for multimedia authoring and playback |
GB2378342A (en) * | 2001-07-31 | 2003-02-05 | Hewlett Packard Co | Selecting images based upon the similarity between images |
EP1607845A1 (en) * | 2004-06-18 | 2005-12-21 | Sony Ericsson Mobile Communications AB | Method and apparatus for transitions in a user interface |
US7477254B2 (en) * | 2005-07-13 | 2009-01-13 | Microsoft Corporation | Smooth transitions between animations |
US7692658B2 (en) * | 2006-11-17 | 2010-04-06 | Microsoft Corporation | Model for layout animations |
US20090096812A1 (en) * | 2007-10-12 | 2009-04-16 | Business Objects, S.A. | Apparatus and method for morphing data visualizations |
US20090172549A1 (en) * | 2007-12-28 | 2009-07-02 | Motorola, Inc. | Method and apparatus for transitioning between screen presentations on a display of an electronic device |
US8314801B2 (en) * | 2008-02-29 | 2012-11-20 | Microsoft Corporation | Visual state manager for control skinning |
US8234564B2 (en) * | 2008-03-04 | 2012-07-31 | Apple Inc. | Transforms and animations of web-based content |
US7721209B2 (en) * | 2008-09-08 | 2010-05-18 | Apple Inc. | Object-aware transitions |
US9298336B2 (en) | 2009-05-28 | 2016-03-29 | Apple Inc. | Rotation smoothing of a user interface |
US8650501B2 (en) | 2010-03-10 | 2014-02-11 | Microsoft Corporation | User interface with preview transitions |
US20130127877A1 (en) | 2011-02-28 | 2013-05-23 | Joaquin Cruz Blas, JR. | Parameterizing Animation Timelines |
US8982132B2 (en) | 2011-02-28 | 2015-03-17 | Adobe Systems Incorporated | Value templates in animation timelines |
US9235317B2 (en) | 2012-02-01 | 2016-01-12 | Facebook, Inc. | Summary and navigation of hierarchical levels |
US9619912B2 (en) * | 2012-03-02 | 2017-04-11 | Verizon Patent And Licensing Inc. | Animated transition from an application window to another application window |
US8471857B1 (en) * | 2012-04-12 | 2013-06-25 | Google Inc. | Changing animation displayed to user |
JP6002836B2 (en) * | 2012-05-09 | 2016-10-05 | アップル インコーポレイテッド | Device, method, and graphical user interface for transitioning between display states in response to a gesture |
US20140028701A1 (en) | 2012-07-24 | 2014-01-30 | Research In Motion Limited | Modifying transition sequences in a user interface depending on frequency of use |
US20140111523A1 (en) * | 2012-10-22 | 2014-04-24 | Google Inc. | Variable length animations based on user inputs |
US8797330B1 (en) * | 2013-10-18 | 2014-08-05 | Google Inc. | Systems and methods for detecting and animating changes in application state |
US20150143260A1 (en) | 2013-11-18 | 2015-05-21 | Facebook, Inc. | State-Machine-Driven User-Interface Interactions |
US20180188898A1 (en) * | 2016-12-29 | 2018-07-05 | Intel Corporation | User interfaces with semantic time anchors |
-
2017
- 2017-08-16 US US15/678,762 patent/US10573051B2/en active Active
-
2018
- 2018-08-13 EP EP18765769.7A patent/EP3500917A1/en not_active Ceased
- 2018-08-13 CN CN201880003769.5A patent/CN110088718A/en active Pending
- 2018-08-13 WO PCT/US2018/046502 patent/WO2019036366A1/en unknown
Patent Citations (5)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20070153006A1 (en) * | 2006-01-04 | 2007-07-05 | Microsoft Corporation | Representing animation as a static image on a graphical user interface |
US20130093764A1 (en) * | 2011-10-18 | 2013-04-18 | Research In Motion Limited | Method of animating a rearrangement of ui elements on a display screen of an electronic device |
CN103034399A (en) * | 2011-12-09 | 2013-04-10 | 微软公司 | Adjusting user interface element |
WO2016036776A1 (en) * | 2014-09-04 | 2016-03-10 | Microsoft Technology Licensing, Llc | User interface with dynamic transition times |
US20160170945A1 (en) * | 2014-12-16 | 2016-06-16 | Kabushiki Kaisha Toshiba | Information processing device, information processing method, and computer program product |
Also Published As
Publication number | Publication date |
---|---|
US20190057534A1 (en) | 2019-02-21 |
US10573051B2 (en) | 2020-02-25 |
WO2019036366A1 (en) | 2019-02-21 |
EP3500917A1 (en) | 2019-06-26 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
CN110088718A (en) | The interface transformation of dynamic generation | |
US10656820B2 (en) | Snap points including ranges | |
US10971112B2 (en) | Dynamically-themed display utilizing physical ambient conditions | |
TWI374385B (en) | Method and system applying dynamic window anatomy and computer readable storage medium storing dynamic window anatomy | |
CN103530018B (en) | The method for building up and mobile terminal at widget interface in Android operation system | |
US20100235769A1 (en) | Smooth layout animation of continuous and non-continuous properties | |
US11488340B2 (en) | Configurable stylized transitions between user interface element states | |
US10083525B2 (en) | Multi-dimensional color and opacity gradation tools, systems, methods and components | |
US20200264749A1 (en) | Styling system | |
US20230116393A1 (en) | Dynamically generated interface transitions | |
US20160030839A1 (en) | Modifying a simulated character by direct manipulation | |
CN104503663A (en) | 3D man-machine interaction desktop system | |
EP3189424B1 (en) | Pre-children in a user interface tree | |
KR102092156B1 (en) | Encoding method for image using display device | |
CN116310039A (en) | Model rendering method and device and electronic device | |
CN116661785A (en) | iOS-based progress bar implementation method and device, electronic equipment and storage medium | |
CN116974678A (en) | Page-based view controller jump method, device and storage medium | |
CN117649460A (en) | Mask operation method and equipment, storage medium and terminal thereof | |
CN116912388A (en) | Mapping processing method, mapping processing device, computer readable storage medium and electronic device | |
Svärdström | Different screen sizes on iPhoneand iPad effect the user experience |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
SE01 | Entry into force of request for substantive examination | ||
RJ01 | Rejection of invention patent application after publication |
Application publication date: 20190802 |
|
RJ01 | Rejection of invention patent application after publication |
US9412365B2 - Enhanced maximum entropy models - Google Patents
Enhanced maximum entropy models Download PDFInfo
- Publication number
- US9412365B2 US9412365B2 US14/667,518 US201514667518A US9412365B2 US 9412365 B2 US9412365 B2 US 9412365B2 US 201514667518 A US201514667518 A US 201514667518A US 9412365 B2 US9412365 B2 US 9412365B2
- Authority
- US
- United States
- Prior art keywords
- features
- gram
- backoff
- context
- maximum entropy
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active
Links
- 238000013518 transcription Methods 0.000 claims abstract description 88
- 230000035897 transcription Effects 0.000 claims abstract description 88
- 238000000034 method Methods 0.000 claims abstract description 76
- 238000004590 computer program Methods 0.000 claims abstract description 25
- 238000003860 storage Methods 0.000 claims abstract description 22
- 230000004044 response Effects 0.000 claims description 8
- 238000013500 data storage Methods 0.000 claims 3
- 238000012549 training Methods 0.000 description 71
- 230000015654 memory Effects 0.000 description 37
- 238000004891 communication Methods 0.000 description 18
- 230000006870 function Effects 0.000 description 17
- 230000008569 process Effects 0.000 description 16
- 238000004422 calculation algorithm Methods 0.000 description 13
- 235000015243 ice cream Nutrition 0.000 description 13
- 238000012545 processing Methods 0.000 description 13
- 230000009471 action Effects 0.000 description 12
- 238000010586 diagram Methods 0.000 description 9
- 238000009499 grossing Methods 0.000 description 9
- 241000237858 Gastropoda Species 0.000 description 7
- 235000013351 cheese Nutrition 0.000 description 6
- 239000000203 mixture Substances 0.000 description 6
- 238000005457 optimization Methods 0.000 description 6
- 230000003287 optical effect Effects 0.000 description 5
- 238000013528 artificial neural network Methods 0.000 description 4
- 230000001413 cellular effect Effects 0.000 description 4
- 239000006071 cream Substances 0.000 description 4
- 238000005192 partition Methods 0.000 description 4
- 238000000605 extraction Methods 0.000 description 3
- 238000010606 normalization Methods 0.000 description 3
- 230000000644 propagated effect Effects 0.000 description 3
- 238000005070 sampling Methods 0.000 description 3
- 239000003638 chemical reducing agent Substances 0.000 description 2
- 238000011156 evaluation Methods 0.000 description 2
- 238000009472 formulation Methods 0.000 description 2
- 230000003993 interaction Effects 0.000 description 2
- 239000004973 liquid crystal related substance Substances 0.000 description 2
- 230000007246 mechanism Effects 0.000 description 2
- 238000012986 modification Methods 0.000 description 2
- 230000004048 modification Effects 0.000 description 2
- 238000003032 molecular docking Methods 0.000 description 2
- 239000000047 product Substances 0.000 description 2
- 238000013341 scale-up Methods 0.000 description 2
- 238000013515 script Methods 0.000 description 2
- 238000000926 separation method Methods 0.000 description 2
- 238000012706 support-vector machine Methods 0.000 description 2
- 230000006978 adaptation Effects 0.000 description 1
- 238000013459 approach Methods 0.000 description 1
- 230000008901 benefit Effects 0.000 description 1
- 230000005540 biological transmission Effects 0.000 description 1
- 238000004364 calculation method Methods 0.000 description 1
- 230000008859 change Effects 0.000 description 1
- 238000010276 construction Methods 0.000 description 1
- 238000009826 distribution Methods 0.000 description 1
- 230000000694 effects Effects 0.000 description 1
- 238000005516 engineering process Methods 0.000 description 1
- 230000006872 improvement Effects 0.000 description 1
- 238000013507 mapping Methods 0.000 description 1
- 238000010295 mobile communication Methods 0.000 description 1
- 230000000877 morphologic effect Effects 0.000 description 1
- 238000003058 natural language processing Methods 0.000 description 1
- 230000006855 networking Effects 0.000 description 1
- 238000013138 pruning Methods 0.000 description 1
- 230000000717 retained effect Effects 0.000 description 1
- 239000004065 semiconductor Substances 0.000 description 1
- 230000001953 sensory effect Effects 0.000 description 1
- 239000007787 solid Substances 0.000 description 1
- 238000000638 solvent extraction Methods 0.000 description 1
- 238000013179 statistical model Methods 0.000 description 1
- 239000000758 substrate Substances 0.000 description 1
- 239000013589 supplement Substances 0.000 description 1
- 238000012360 testing method Methods 0.000 description 1
- 238000012546 transfer Methods 0.000 description 1
- 230000000007 visual effect Effects 0.000 description 1
Images
Classifications
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L15/00—Speech recognition
- G10L15/08—Speech classification or search
- G10L15/18—Speech classification or search using natural language modelling
- G10L15/183—Speech classification or search using natural language modelling using context dependencies, e.g. language models
- G10L15/19—Grammatical context, e.g. disambiguation of the recognition hypotheses based on word sequence rules
- G10L15/197—Probabilistic grammars, e.g. word n-grams
Definitions
- This specification relates to enhanced maximum entropy models.
- Maximum entropy models including log-linear models, may be enhanced by the inclusion of additional features, for example, backoff features, penalty features, or features corresponding to contexts not observed during training.
- a method performed by one or more computers includes: receiving data indicating a candidate transcription for an utterance and a particular context for the utterance; obtaining a maximum entropy language model that includes (i) scores for one or more n-gram features that each correspond to a respective n-gram and (ii) scores for one or more backoff features that each correspond to a set of n-grams for which there are no corresponding n-gram features in the maximum entropy language model; determining, based on the candidate transcription and the particular context, a feature value for (i) each of the one or more n-gram features of the maximum entropy language model and (ii) each of the one or more backoff features of the maximum entropy language model; inputting the feature values for the n-gram features and the feature values for the backoff features to the maximum entropy language model; and receiving, from the maximum entropy language model, an output indicative of a likelihood of occurrence of the candidate transcription; selecting, based on
- implementations of this and other aspects include corresponding systems, apparatus, and computer programs, configured to perform the actions of the methods, encoded on computer storage devices.
- a system of one or more computers can be so configured by virtue of software, firmware, hardware, or a combination of them installed on the system that in operation cause the system to perform the actions.
- One or more computer programs can be so configured by virtue of having instructions that, when executed by data processing apparatus, cause the apparatus to perform the actions.
- Implementations may include one or more of the following features.
- the maximum entropy language model is a log-linear model.
- the scores of the maximum entropy language model include, for each context in a set of different contexts that each include a different sequence of one or more words, scores for: multiple different n-gram features that each correspond to the occurrence of a respective word with the context, and a backoff feature that corresponds to the occurrence of any of multiple words with the context.
- the scores of the maximum entropy language model include, for each context in a set of different contexts that each include a different sequence of one or more words, scores for: multiple different n-gram features that each correspond to the occurrence of a respective word with the context, the respective words forming a set of words, and a backoff feature that corresponds to the occurrence, with the context, of any word that is not in the set of words.
- the multiple different n-gram features for a context each correspond to the occurrence of a respective word after the one or more words of the context, and the backoff feature for the context corresponds to the occurrence of any of multiple words after the one or more words of the context.
- Implementations may include one or more of the following features.
- the scores of the maximum entropy language model include, for each context in a set of different contexts that each include a different sequence of one or more words, respective scores for: multiple different n-gram features that each correspond to a respective language sequence that includes the one or more words of the context, each of the respective language sequences being formed of a same, particular number of words, and one or more backoff features that each correspond to a set of multiple language sequences, where, for each backoff feature, each language sequence in the set of language sequences (i) is formed of the particular number of words, (ii) includes a particular subset of the one or more words of the context, and (iii) omits a particular sub-sequence of words within the context.
- the one or more backoff features for a context include multiple backoff features that correspond to different sets of language sequences that include different portions of the context.
- Generating the second set of feature values for the one or more backoff features based on the particular context includes generating at least one feature value that indicates that at least a portion of the particular context does not correspond to any of the n-gram features.
- Determining the feature values includes: identifying a particular n-gram that includes words of the candidate transcription immediately following a sequence of words indicated by the particular context, the n-gram of words being formed of a particular number of words; determining that that the maximum entropy language model does not have an n-gram feature corresponding to the particular n-gram; in response to determining that the maximum entropy language model does not have an n-gram feature corresponding to the particular n-gram: determining first feature values that indicate the non-occurrence of n-grams having the particular number of words that have corresponding n-gram features in the maximum entropy language model; determining, for at least one backoff feature, a second feature value that indicates the occurrence of a language sequence that (i) has the particular number of words and (ii) includes a specific portion of the particular context.
- Determining the feature values includes determining multiple second feature values that each indicate the occurrence of an n-gram having the particular number of words, the multiple second feature values corresponding to different backoff features and indicating that different portions of the particular context occurred within an n-gram having the particular number of words.
- the feature values for the n-gram features indicate whether a particular n-gram including the candidate transcription and the particular context matches n-grams associated with the respective n-gram features, and where the feature values for the backoff features indicate whether the portions of the particular n-gram are different from the n-grams associated with the respective n-gram features.
- At least one of the feature values for the backoff features indicates that a portion of the particular context having particular size is different from the each of the contexts of the particular size that are associated with the n-gram features.
- Each of the feature values is a binary value.
- Scores for at least some of the backoff features of the maximum entropy language model indicate a non-zero probability of occurrence of sets of n-grams represented by the backoff features, and where the maximum entropy language model is normalized.
- a method includes: identifying n-grams based on a set of training data; determining n-gram features corresponding to the identified n-grams; determining one or more backoff features corresponding to n-grams that are not included in the identified n-grams; and training a maximum entropy model using feature values for the n-gram features and feature values for the one or more backoff features.
- implementations of this and other aspects include corresponding systems, apparatus, and computer programs, configured to perform the actions of the methods, encoded on computer storage devices.
- a system of one or more computers can be so configured by virtue of software, firmware, hardware, or a combination of them installed on the system that in operation cause the system to perform the actions.
- One or more computer programs can be so configured by virtue of having instructions that, when executed by data processing apparatus, cause the apparatus to perform the actions.
- Implementations may include one or more of the following features. Implementations may include one or more of the following features. For example, training the maximum entropy model using feature values for the n-gram features and feature values for the one or more backoff features comprises training a log-linear model using the feature values for the n-gram features and feature values for the one or more backoff features.
- the feature values for the n-gram features indicate whether an n-gram occurs that is one of the n-grams corresponding to the n-gram features.
- the feature values for the one or more backoff features indicate whether an n-gram occurs that is not one of the n-grams corresponding to the n-gram features.
- the feature values for the context features and the feature values for the one or more backoff features are binary values.
- Training the maximum entropy model using feature values for the n-gram features and feature values for the one or more backoff features comprises training the maximum entropy model using a stochastic gradient descent algorithm. Training the maximum entropy model using feature values for the n-gram features and feature values for the one or more backoff features comprises distributing training tasks across a plurality of computing devices. Training the maximum entropy model using feature values for the n-gram features and feature values for the one or more backoff features comprises training the maximum entropy model using MapReduce processing framework. Identifying the n-grams based on the set of training data comprises identifying n-grams in the training data.
- Training the maximum entropy model using feature values for the n-gram features and feature values for the one or more backoff features comprises training a language model.
- the actions include using the trained maximum entropy model to obtain an output indicative of a likelihood of occurrence of a term after one or more previous terms.
- Training the maximum entropy model using feature values for the n-gram features and feature values for the one or more backoff features comprises assigning a weight to at least one backoff feature, wherein the weight reduces a likelihood of occurrence indicated by the maximum entropy model when the at least one backoff feature is activated.
- a method in another general aspect, includes: receiving data indicating an n-gram; determining a first set of feature values for n-gram features based on the indicated n-gram; determining a second set of feature values for one or more backoff features based on the indicated n-gram; inputting the first set of feature values and the second set of feature values to a trained maximum entropy model; and receiving, from the trained maximum entropy model, an output indicative of a likelihood of occurrence of the n-gram or a portion of the n-gram given the remainder of the n-gram.
- implementations of this and other aspects include corresponding systems, apparatus, and computer programs, configured to perform the actions of the methods, encoded on computer storage devices.
- a system of one or more computers can be so configured by virtue of software, firmware, hardware, or a combination of them installed on the system that in operation cause the system to perform the actions.
- One or more computer programs can be so configured by virtue of having instructions that, when executed by data processing apparatus, cause the apparatus to perform the actions.
- Implementations may include one or more of the following features. For example, generating the second set of feature values for the one or more backoff features based on the indicated n-gram comprises generating at least one feature value that indicates that at least a portion of the indicated n-gram does not correspond to any of the n-gram features. Inputting the first set of feature values and the second set of feature values to the trained maximum entropy model comprises inputting the first set of feature values and the second set of feature values to a model trained to decrease, in response to receiving at least one feature value that indicates that at least a portion of the indicated n-gram does not correspond to any of the n-gram features, a likelihood that the model estimates for the indicated n-gram.
- Receiving data indicating the n-gram comprises receiving data indicating a sequence of terms; generating the first set of feature values for the n-gram features based on the indicated n-gram comprises generating feature values for n-gram features based on the sequence of terms; generating the second set of feature values for the one or more backoff features based on the indicated n-gram comprises generating the second set of feature values for the one or more backoff features based on whether at least a portion of the sequence of terms is different from n-grams corresponding to the n-gram features; inputting the first set of feature values and the second set of feature values to the trained maximum entropy model comprises inputting the first set of feature values and the second set of feature values to a trained language model; and receiving, from the trained maximum entropy model, an output indicative of a likelihood of occurrence of an outcome given a context comprises receiving, from the trained language model, an output indicative of a likelihood that a particular term occurs after other terms in the sequence of terms.
- the maximum entropy model is a log-linear model.
- the maximum entropy model is a language model.
- the feature values for the first set of feature values indicate whether the indicated n-gram matches n-grams associated with the respective n-gram features.
- the feature values in the second set of feature values indicate whether the at least a portion of the indicated n-gram differs from the n-grams associated with the respective n-gram features. At least one of the feature values in the second set of feature values represents that a portion of the indicated n-gram having particular size is different from the n-grams of the particular size that are associated with the n-gram features.
- the feature values in the first set of feature values and the feature values in the second set of feature values are binary values.
- Inputting the first set of feature values and the second set of feature values to the trained maximum entropy model comprises inputting the first set of feature values and the second set of feature values to a trained maximum entropy model comprising a weight assigned to at least one backoff feature, wherein the weight reduces a likelihood of occurrence indicated by the trained maximum entropy model when the at least one backoff feature is activated.
- FIG. 1 is a flow diagram that illustrates an example of a method for training an enhanced maximum entropy model.
- FIG. 2 is a flow diagram that illustrates an example of a method for using an enhanced maximum entropy model.
- FIG. 3 is a diagram that illustrates an example of a system for speech recognition using a maximum entropy model.
- FIG. 4 is a flow diagram that illustrates an example of a method for using an enhanced maximum entropy model.
- FIG. 5 is a schematic diagram that shows an example of a computing device and a mobile computing device.
- One challenge in language modeling and other uses of maximum entropy models is how to combine information from various model components, e.g., mixing models trained with differing Markov orders for smoothing or on distinct corpora for adaptation.
- Smoothing (regularization) for n-gram language models is typically presented as a mechanism whereby higher-order models are combined with lower-order models so as to achieve both the specificity of the higher-order model and the more robust generality of the lower-order model.
- this combination is effected via an interpolation or backoff mechanism, in which each prefix (history) of an n-gram has a parameter which dictates how much cost is associated with making use of lower-order n-gram estimates, often called the “backoff cost.”
- Log-linear models provide an alternative to n-gram backoff or interpolated models for combining evidence from multiple, overlapping sources of evidence, with very different regularization methods. Instead of defining a specific model structure with backoff costs and/or mixing parameters, these models may combine features from many sources into a single linear feature vector, and score a word by taking the dot product of the feature vector with a learned parameter vector. Learning can be performed via locally normalized likelihood objective functions, as in Maximum Entropy (MaxEnt) models or global “whole sentence” objectives.
- MaxEnt Maximum Entropy
- backoff n-gram models typically do not include only parameters associated with n-grams; they also include parameters associated with the backoff weights for each prefix history. For every proper prefix of an n-gram in the model, there may be an associated backoff weight, which penalizes to a greater or lesser extent words that have been previously unseen following that prefix history. For some histories, the model should have a relatively high expectation of seeing something new, either because the history itself is rare (hence we do not have enough observations yet to be strongly predictive) or it simply predicts relatively open classes of possible words, e.g., “the”, which can precede many possible words, including many that were presumably unobserved following “the” in the training corpus. Other prefixes may be highly predictive so that the expectation of seeing something previously unobserved is relatively low.
- MaxEnt language models typically do not need this information about prefix histories to estimate regularized probabilities.
- Various smoothing and regularization methods for MaxEnt language models may be used, including: (i) reducing the number of features (as L1 regularization does), (ii) optimizing to match expected frequencies to discounted counts, and/or (iii) optimizing to modified objectives, such as L2 regularization. These methods generally do not involve model parameters with the sort of “otherwise” semantics of n-gram backoffs. Because such features are generally not required for smoothing, they are not part of the typical feature set used in log-linear language modeling. Nevertheless, such features can be advantageously used to improve the effectiveness of a log-linear language model, as discussed further below.
- the usefulness of such features may depend on the amount of training data available.
- the specific details of the smoothing algorithm is typically less important than the scale.
- So-called “stupid backoff” is an efficient, scalable estimation method that, despite lack of normalization guarantees, is shown to be extremely effective in very large data set scenarios. While this has been taken to demonstrate that the specifics of smoothing is unimportant as the data gets large, those parameters are still important components of the modeling approach, even if their usefulness is robust to variation in parameter value.
- features patterned after backoff weights can in fact make a large difference to a MaxEnt or log-linear language model, even if the amount of training data is very large.
- P ⁇ ( w i ⁇ w i - k i - 1 ) ⁇ P _ ⁇ ( w i ⁇ w i - k i - 1 ) if ⁇ ⁇ c ⁇ ( w i - k i ) > 0 ⁇ ⁇ ( w i - k i - 1 ) ⁇ P ⁇ ( w i ⁇ w i - k + 1 i - 1 ) otherwise ( 1 )
- This recursive smoothing formulation has two kinds of parameters: n-gram probabilities P(w i
- MaxEnt models are typically log-linear models that score alternatives by taking the exponential of the dot product between a feature vector and a parameter vector, and then normalize the score.
- ⁇ (w i ⁇ k . . . w i ) be a d-dimensional feature vector, ⁇ a d-dimensional parameter vector, and V a vocabulary. Then the model may be formulated according to Equation (2), below:
- Training with a likelihood objective function is a convex optimization problem, and so any of various efficient estimation techniques may be used for training, such as stochastic gradient descent. Any of a variety of regularization techniques may be used, and include L1 and L2 regularization, or their combination, which are modifications of the likelihood objective to either keep parameter values as close to zero as possible (L2) or reduce the number of features with non-zero parameter weights by pushing many parameters to zero (L1). A combination of L1 and L2 may be employed.
- MaxEnt language models including features for n-grams and trigger words, topic-based features and morphological and sub-word based features.
- Feature engineering can be a major consideration in MaxEnt modeling, and the set of features selected can have a significant impact on the performance of a model.
- MaxEnt language model training it may be desirable to scale up MaxEnt language model training to learn from the same or similar amounts of data used for standard backoff n-gram language models. This may be achieved, for example, using gradient-based distributed optimization, such as distributed stochastic gradient descent (SGD).
- SGD distributed stochastic gradient descent
- Some implementations may use the MapReduce framework. Some innovative techniques that may be used include: (1) applying a final L1 regularization set at the end of each reducer using statistics collected from the mappers, and/or (2) estimating the gradient using a mini-batch of 16 using a pool of 16 threads. A larger or smaller batch size or thread pool size may be used.
- n is the number of samples per worker per epoch
- n do n examples from D 14 Sample d i from D 15: ⁇ ′ i ⁇ ApplyLazyL1(ActiveFeatures(d i , ⁇ i-1 )) 16: ⁇ i ⁇ ⁇ ′ i ⁇ ⁇ F ddi i ( ⁇ ′ i ) 17: ⁇ ⁇ UpdateAlpha( ⁇ , i) 18: end for 19: return ⁇ n 20: end function 21: function IPM REDUCE ( ⁇ l 1 , . . . , ⁇ l j , . . . , ⁇ l K ) 22: IPM REDUCE processes model parameters in parallel 23: ⁇ l ⁇ 1 K ⁇ ⁇ j ⁇ ⁇ l j 24: return ⁇ l 25: end function
- Algorithm 1 represent a merger of concepts from the original IPM algorithm and a distributed sample-based algorithm, as well as lazy L1 SGD computation.
- Algorithm 1 provides an example of a MapReduce implementation
- other distributed optimization techniques may be used.
- IPM MAP samples a subset of D i which we call d i .
- This can be a single example or a mini-batch of examples.
- Each node samples n examples from its data partition.
- IPM REDUCE collects the local model parameters from each IPM MAP and averages them in parallel. Parallelization here can be done over subsets of the parameter indices (each IPM REDUCE node averages a subset of the parameter space). We refer to each full MapReduce pass as an “epoch” of training. Starting with the second epoch, the IPMMAP nodes are initialized with the previous epoch's merged, regularized model.
- PrefixBackoff( w 1 . . . w n ,i,k ) ⁇ BO,w i ⁇ k+1 , . . . w i > (6)
- n-gram feature templates all such features may be included up to some specified length, e.g., for a trigram model, that includes n-grams up to length 3, including unigrams, bigrams and trigrams.
- a trigram model that includes n-grams up to length 3, including unigrams, bigrams and trigrams.
- prefix and suffix backoff features we can have a maximum length and include in the possible feature set all such features of that length or shorter.
- These new features may be used in maximum entropy language models, including models trained on very large corpora. Using such features may provide perplexity improvements when such features are included in the model alongside n-gram features. These features may also provide Word Error Rate (WER) performance when re-ranking the output of a baseline recognizer.
- WER Word Error Rate
- the vocabulary of the model may include approximately 200 thousand words. Words may be selected from a baseline speech recognizer log, for example, selecting words emitted by the recognizer in the last 6 months of log files. All other words are mapped to a token “ ⁇ UNK>” that represents an unknown word.
- a trained maximum entropy model may be used for speech recognition, for example, to perform a voice search task.
- the model may use one or more of the different backoff features discussed above, including any sub-combination of the backoff features.
- Data sets may be assembled and pooled from anonymized supervised and unsupervised spoken queries (such as, search queries, questions, and voice actions) and typed queries to various websites or applications, from desktop and mobile devices.
- the overall training set which may include billions of words, may be divided into K subsets. We assign subset D k to trainer k (where, 1 ⁇ k ⁇ K). Then, distributed training (Algorithm 1) may be run using K machines. Since the amount of training data is very large, trainer k randomly samples data points from its subset D k .
- Each epoch utilizes a different seed for sampling, which equals to the epoch number.
- the trainer may terminate due to completing its subsample or due to a timeout.
- the timeout threshold may be fixed for each epoch.
- a feature dictionary maps each feature key (e.g., trigram: “save the snails”) to an index in the parameter vector ⁇ .
- the dictionary may be built according to Algorithm 2, below:
- a maximum entropy model with backoff features may be used for speech recognition, for example, to re-score an n-best list of hypotheses.
- the language model score assigned to each hypothesis is linearly interpolated with the baseline recognizer's language model score, for example, with a mixture factor of 0.25, 0.33, 0.50, 0.66, or 0.75, or another value.
- the mixing factor may be swept or varied from one application to another, and may be varied until a desired level of performance is achieved.
- the maximum entropy model may be used directly while decoding. For example, the maximum entropy model may be used to identify and score hypotheses, without another language model.
- any appropriate baseline speech recognizer may be used.
- a 5-gram model trained with Katz smoothing and entropy pruning may be used.
- the baseline recognizer may be trained on the same data as the MaxEnt model using Bayesian interpolation (if multiple sources are used).
- the baseline recognizer may have a vocabulary of tens of thousands, hundreds of thousands, or millions of words.
- the recognizer may have an out of vocabulary rate within a desired range, for example, an out of vocabulary rate on a training set or test set of approximately 5%, 3%, 1%, 0.5%, or 0.25%, or another value.
- the acoustic model may be a deep-neural network-based model.
- the network may process a context window of 26 (20 past and 5 future) frames of speech, each represented with 40-dimensional log mel filterbank energies taken from 25 ms windows every 10 ms.
- the system may be trained to a Cross-Entropy criterion on a data set collected from live voice search dictation traffic.
- the utterances may be hand-transcribed and force-aligned with a previously trained DNN.
- large numbers of utterances such as tens of thousands, hundreds of thousands of utterances, millions of utterances or more, may be used for training.
- FIG. 1 is a flow diagram that illustrates an example of a method 100 for training an enhanced maximum entropy model.
- the method 100 may be performed by one or more computers.
- N-grams are identified based on a set of training data ( 102 ).
- the n-grams are sequences of words.
- the training data may be text
- the identified n-grams may be n-grams of words in the text.
- the n-grams may be of various different lengths, e.g., 5-grams, 4-grams, 3-grams, 2-grams, and 1-grams.
- a particular integer value of k may be set, and n-grams can be identified in the training data for n-grams where n is equal to k or less than k. In some implementations, all n-grams that occur in the training data and meet the specified n-gram length criteria are identified. In some implementations, the identified n-grams include only n-grams in the training data that occur with at least a minimum frequency, e.g., n-grams that occur at least twice, or n-grams that occur at least 5 times, etc.
- N-gram features corresponding to the identified n-grams are determined ( 104 ). Determining the n-gram features can involve selecting or defining which n-gram features to include in a maximum entropy model. Each n-gram feature may correspond to a particular one of the identified n-grams. In some implementations, a different n-gram feature is determined for each identified n-gram from the training data, or for each identified n-gram that has at least a minimum frequency of occurrence (e.g., at least two occurrences, etc.). An input corresponding to an n-gram feature may represent a decision whether a training example or an example to be evaluated has an n-gram matching the n-gram corresponding to the n-gram feature. The n-grams associated with n-grams can be listed in an n-gram feature dictionary for the model. Each n-gram feature can represent the last word in the n-gram occurring immediately after the sequence of words in the context.
- the training data may include text “I like to eat ice cream,” and so an n-gram feature corresponding to the n-gram “I like to eat ice cream” can be determined.
- the input value for this n-gram feature represents a decision whether the language sequence being evaluated includes the word “cream” in the context of the 5-gram “I like to eat ice.”
- the corresponding input to the model n can be assigned a value of “1” to indicate that the current n-gram matches the corresponding n-gram for the n-gram feature, or assigned a value of “0” to indicate that the current n-gram does not match the corresponding n-gram for the n-gram feature.
- this n-gram feature would have a value of “1” for the n-gram “I like to eat ice cream,” but would have a value of “0” for any other n-gram, such as the phrase “I don't like to eat ice cream” or “I like to eat ice castles.”
- N-gram features may be determined for n-grams of different lengths, e.g., for 5-grams, 4-grams, 3-grams, 2-grams, and 1-grams. For example, for the n-gram “I like to eat ice cream,” a different n-gram feature may be defined for each of the identified n-grams “like to eat ice cream,” “to eat ice cream,” “eat ice cream,” “ice cream,” and “cream.”
- n-gram features may be defined in additional or alternative ways.
- a dictionary of words or an identified set of words from the training data may be used to compose n-grams for n-gram features. For example, for each identified n-gram having less than or equal to a maximum length, a different n-gram may be composed by adding a different word in the dictionary to the end of the n-gram.
- each n-gram extracted from training data may be considered a context based on which multiple different n-grams and n-gram features may be generated.
- portions or subsequences of n-grams may be identified as contexts after which other words occur, and n-grams for n-gram features may be composed based on those contexts. For example, from the n-gram “I like to eat ice cream,” the final word “cream” may be removed to leave a 5-gram context “I like to eat ice.” A different n-gram can be composed for each word in the dictionary occurring after this 5-gram context, and an n-gram feature of the model can be defined for each of the different n-gram composed.
- One or more backoff features are determined, where the one or more backoff features correspond to n-grams that are not included in the identified n-grams ( 106 ). Determining the one or more backoff features can involve selecting or defining which backoff features to include in a maximum entropy model. Each backoff feature can represent a decision whether a current n-gram is different from the identified n-grams. A backoff feature can be have a value of “0” when the current n-gram matches one of the identified n-grams, and the backoff feature may have a value of “1” when the current n-gram does not match any of the identified n-grams.
- a backoff feature designated “backoff-3” may be given a value of “1” when the current n-gram includes a trig ram that is different from all of the other trigrams corresponding to the various n-gram features. In this manner, the “backoff-3” could be activated when an n-gram includes any of multiple trigrams that were unseen or infrequently seen in the training data.
- Backoff-3 backoff feature may be assigned a value of “0.”
- Backoff features may be defined for different lengths, for example, different backoff features may respectively represent whether 5-grams, 4-grams, 3-grams, 2-grams, and 1-grams different from the identified n-grams have occurred.
- backoff features may be determined for classes or groups of n-grams including particular words or phrases. For example, a backoff feature “ ⁇ backoff-3, house>” may represent whether the word “house” occurs as the third word of a trigram that does not have a corresponding n-gram feature. Similar backoff features may be determined for n-grams of different lengths, or for n-grams ending in each of the different words in a vocabulary. Other backoff features may include a specific word or phrase at the beginning or middle of the n-gram, rather than the end.
- the backoff features may be defined so that there is a back-off feature for each n-gram feature.
- a one-word suffix backoff feature may be defined for each n-gram feature.
- This backoff feature when assigned a feature value of “1,” represents the occurrence of a sequence of six words that is different from all the six-word sequences in the n-gram feature dictionary.
- sequence begins with the context “I like to eat ice” and ends with a final word (represented by the “backoff-1” term) that none of the n-grams in n-gram feature dictionary include in that context.
- a similar one-word suffix backoff feature may be defined for each n-gram of the n-gram features.
- backoff features can be defined for some or all of the n-grams in the n-gram feature dictionary.
- suffix backoff features of different lengths can be defined, e.g., “ ⁇ I like to eat, backoff-2>,” “ ⁇ I like to, backoff-3>,” and so on.
- prefix backoff features can be defined, e.g., “ ⁇ backoff-1, like to eat ice cream>,” “ ⁇ backoff-2, to eat ice cream>,” and so on.
- Backoffs of any portion of an n-gram may be defined, e.g., ⁇ backoff-1, like to eat ice, backoff-1>,” “ ⁇ I, backoff-4, cream>,” “ ⁇ backoff-1, like, backoff-2, ice, backoff-1>,” and so on.
- a maximum entropy model is generated and trained to have the n-gram features and backoff features determined above ( 108 ).
- the training process can involve determining feature values for n-gram features and backoff features, and providing those features to the model.
- the maximum entropy model may include the n-gram features and backoff features, and may be trained to indicate likelihoods of occurrence based on feature values for the n-gram features and backoff features.
- a feature value for an n-gram feature may indicate whether a current n-gram matches the n-gram corresponding to the n-gram feature.
- a feature value for a backoff feature may indicate whether at least a portion of the current n-gram is not included in a predetermined set of n-grams, such as the set of identified n-grams extracted from the training data.
- the maximum entropy model may be a log-linear model.
- the feature values for the n-gram features and the feature values for the one or more backoff features may be binary values.
- the maximum entropy model may be a language model or another type of model. After training, a language model may be used to generate an output indicative of a likelihood of occurrence of a term after one or more previous terms, or to estimate the likelihood of occurrence of a phrase.
- the maximum entropy model includes, for each word in the model's dictionary, a weight or score for each feature. For example, if the n-gram features and backoff features total 100M features, there may be 100M weights in the model. Training the model may include setting and adjusting values of the weights.
- the weights for some or all of the backoff features may cause the model to decrease the likelihood that the model provides.
- the model can be trained so that when a backoff feature is activated, indicating that at least a portion of the current n-gram does not have a corresponding n-gram feature, the weight for the backoff feature acts as a penalty to decrease the likelihood indicated by the model.
- the maximum entropy model is trained using a stochastic gradient descent algorithm. Training tasks may be distributed across multiple different computing devices.
- a MapReduce processing framework is used to perform the training. During the training process, the weights or scores within the model are adjusted. The weights for the backoff features are trained as well as the weights for the n-gram features. As a result, the training process may attribute a non-zero probability to the occurrence of the various backoff features. Similarly, the backoff features will be assigned different values for their respective weights as a result of the training.
- the weight for “ ⁇ backoff-3, house>” will likely have a different weight than “ ⁇ backoff-3, school>,” since 4-grams ending in “house” and 4-grams ending in “school” will occur in different frequencies in the training data.
- training will generally adjust the weights so that the weights for “ ⁇ backoff-3, house>,” “ ⁇ backoff-2, house>,” and “ ⁇ backoff-2, my house>” are different, as each represents a different set of n-grams that may occur and the usage of those n-grams will be different for one set to the other.
- features may be removed from the model at various steps of training. For example, backoff features that are uncommonly used, or that have corresponding weights that are within a threshold range may be pruned to limit the size of the model.
- Features to prune from the model may be identified based on cross-entropy measures, for example, to identify the features that provide the smallest effect on the predictions of the model.
- Feature features can be defined to indicate any particular element of the context in which a language occurs.
- Features representing different combinations of contextual attributes are referred to as context features.
- the n-gram features discussed above are examples of context features representing linguistic contests.
- part of the method 100 can include determining features for a model that include elements of non-linguistic context.
- a feature can correspond to aspects of time, location, user attributes, tasks or domains, and other factors.
- Backoff features can also be defined for elements of non-linguistic.
- a backoff feature “ ⁇ city_backoff>” can represent whether a language sequence occurs in an unknown city (e.g., a city for which there is no corresponding context feature in the model).
- Context features and backoff features may also represent the co-occurrence of non-linguistic contextual factors and linguistic contextual factors.
- the backoff feature “ ⁇ city_backoff; hello>” can represent the occurrence of the word “hello” in an unknown city.
- the steps regarding the determination of n-gram features can be performed for context features corresponding to attributes other than pure n-grams, and backoff features can represent a backoff from any contextual element and not only from n-gram context.
- FIG. 2 is a flow diagram that illustrates an example of a method 200 for using an enhanced maximum entropy model.
- the method 200 may be performed by one or more computers.
- Data indicating an n-gram is received ( 202 ).
- data indicating a sequence of words may be received.
- the sequence of words may include a context, such as one or more previously transcribed words spoken by a user, followed by a candidate transcription for a further utterance of the user.
- a first set of feature values are determined, based on the indicated n-gram, for n-gram features of the model ( 204 ).
- the feature values for the n-gram features may each indicate whether the indicated n-gram matches an n-gram corresponding to the n-gram feature. For example, if the indicated n-gram is the phrase “I like the,” the n-gram feature corresponding to the trigram “I like the,” the n-gram feature corresponding to the bigram “like the,” and the n-gram feature corresponding to the unigram “the” may each be assigned a value of “1” to indicate a match to the n-grams corresponding to these features. All other n-gram features may be assigned a value of “0” to indicate that the n-gram does not match the n-grams corresponding to these other n-gram features.
- a second set of feature values are determined, based on the indicated n-gram, for one or more backoff features ( 206 ).
- the feature values for the n-gram features may each indicate whether a portion of the indicated n-gram is not included in a predetermined set of n-grams, such as the set of n-grams corresponding to the respective n-gram features.
- a dictionary of n-grams corresponding to the n-gram features may be accessed.
- a feature dictionary may be obtained that indicates (i) each feature in the model, (ii) corresponding n-gram(s), and (iii) the position or index of the feature within the set of features of the model.
- a trigram from the indicated n-gram may be compared with the n-grams in the dictionary.
- the trigram backoff feature may be assigned a value of “1.” If the trigram matches one of the trigrams in the dictionary, e.g., there is an n-gram feature corresponding to the trigram, then the trigram backoff feature may be assigned a value of “0.” As discussed above, there may be multiple backoff features for a given n-gram length.
- backoffs representing other subsets of trigrams, including trigrams in which portions of the trigram are specified to include specific words, e.g., “ ⁇ backoff-2, today>,” “ ⁇ backoff-2, the>,” “ ⁇ backoff-2, and>,” “ ⁇ backoff-1, you and>,” and so on.
- Feature values may be determined for multiple different backoff features, for example, for backoff features of different n-gram lengths.
- one or more backoff features may be determined for 1-grams, 2-grams, 3-grams, 4-grams, and/or other lengths of n-grams.
- Feature values may be determined for each of the backoff features for each of the different n-gram lengths.
- a backoff feature may correspond to a certain type of context or to contexts that meet criteria other than length.
- multiple trigram backoff features may be used, where each trigram backoff feature represents the set of trigrams ending with a specific word in a vocabulary.
- One backoff feature may represent all trigram contexts that are not in the dictionary and that end in the last word “the.”
- Another backoff feature may represent all contexts that are not in the dictionary and that end with the word “house.”
- Similar trigram backoff features may respectively represent the trigrams ending with each other word in the vocabulary.
- Similar sets of backoff features can be used for different context lengths, e.g., 2-grams, 4-grams, and other context lengths, and/or specific words or types of words at specific positions in the context.
- the first set of feature values and the second set of feature values are input to a trained maximum entropy model ( 208 ).
- the maximum entropy model may be a model trained as discussed above with respect to FIG. 1 .
- the maximum entropy model may be a log-linear model.
- the maximum entropy model may be a language model or another type of model.
- the maximum entropy model has been trained to decrease a likelihood that the model estimates for the n-gram in response to receiving at least one feature value that indicates that at least a portion of the indicated context does not correspond to any of the n-gram features.
- the model may apply a penalty when one or more backoff features are activated.
- the feature values for the n-gram features and the feature values for the one or more backoff features are binary values, e.g., each feature value is “1” or “0.”
- the feature values for the n-gram features can indicate whether the indicated n-gram matches n-grams associated with the respective n-gram features.
- the feature values for the one or more backoff features indicate whether the at least a portion of the indicated n-gram differs from the n-grams associated with the respective n-gram features.
- An output is received from the trained maximum entropy model ( 210 ).
- the output may be indicative of a likelihood of occurrence of the indicated n-gram, or of a portion of the n-gram given other portions of the n-gram.
- outputs of the model are obtained for each of multiple words in a sequence, and the various outputs are used to determine a score, such as a probability or confidence score, for the sequence.
- receiving data indicating the n-gram comprises receiving data indicating a sequence of terms.
- Generating the first set of feature values for the n-gram features based on the indicated n-gram comprises generating feature values for n-gram features based on the sequence of terms.
- Generating the second set of feature values for the one or more backoff features based on the indicated n-gram comprises generating the second set of feature values for the one or more backoff features based on whether at least a portion of the sequence of terms is different from n-grams corresponding to the n-gram features.
- Inputting the first set of feature values and the second set of feature values to the trained maximum entropy model comprises inputting the first set of feature values and the second set of feature values to a trained language model.
- Receiving an output can include receiving, from the trained language model, an output indicative of a likelihood that a particular term occurs after the sequence of terms.
- the method 200 may include determining and inputting feature values for context features or backoff features that correspond to elements of non-linguistic context in addition to or instead of elements of linguistic context.
- feature values for any or all of the context features and backoff features in the model may be determined and used.
- the feature values may indicate, for example, aspects of time, location, user attributes, tasks or domains, state of a computing device, and so on, in addition to or instead of indicating aspects of linguistic context.
- FIG. 3 is a diagram that illustrates an example of a system 300 for speech recognition using a maximum entropy model.
- the system 300 includes a client device 310 , a computing system 320 , and a network 318 .
- the computing system 320 receives audio data 312 and, in some implementations, linguistic context data 314 and/or non-linguistic context data 316 from the client device 310 .
- the computing system 320 provides scores determined from the non-linguistic context data 316 to a language model 350 , which provides output that the computing system 320 uses to determine a transcription for the audio data 312 .
- the figure shows stages (A) to (H) which illustrate a flow of data.
- the client device 310 can be, for example, a desktop computer, a laptop computer, a cellular phone, a smart phone, a tablet computer, a music player, an e-book reader, a wearable computer, a navigation system, or other device.
- the functions performed by the computing system 320 can be performed by individual computer systems or can be distributed across multiple computer systems, e.g., one or more server systems.
- the network 318 can be wired or wireless or a combination of both, and may include private networks and/or public networks, such as the Internet.
- a system receives audio data indicating characteristics of an utterance and context data indicating non-linguistic context of the utterance. Scores for one or more non-linguistic features can be generated based on the context data. The scores can be provided to a language model trained to estimate likelihoods based at least in part on scores for non-linguistic features. Output of the language model can be received and used to determine a transcription for the utterance.
- the language model is a log-linear model or maximum entropy model.
- the language model comprises a support vector machine model, a neural network, a set of classifiers, or another type of model.
- a user 302 speaks and the client device 310 detects the utterance 304 of the user 302 .
- the client device 310 may record the utterance 304 using a microphone.
- the user 302 may provide the utterance 304 as voice input to any of a variety of applications, including, for example, an e-mail application, a calendar application, a mapping or navigation application, and so on.
- the utterance 304 may represent any of a variety of types of input, for example, a query, a message recipient, the body of a message, a voice command, an address, a phone number, and so on.
- the user 302 is dictating the contents of an e-mail message while a “Mail” application is running on the client device 310 .
- the user 302 previously entered the text “Let's meet at the” as part of the message, and the utterance 304 includes the word “beach” as further input to add to the message.
- the client device 310 collects information and sends information to the computing system 320 over the network 318 .
- the information may be sent with, for example, a request for a transcription of the utterance.
- the client device 302 sends audio data 312 for the utterance 304 to the computing system 320 .
- the audio data 312 may be, for example, a recording of the utterance 304 , or information derived from the detected utterance 304 , such as filterbank energy values, mel-frequency cepstral coefficients (MFCCs), or scores for other acoustic features.
- MFCCs mel-frequency cepstral coefficients
- the client device 310 may also send linguistic context data 314 that indicates a linguistic context for the utterance 304 .
- the client device 310 may provide data that indicates the words that the utterance 304 follows.
- the linguistic context data 314 indicates the words “Let's meet at the” that immediately precede the utterance 304 .
- the linguistic context data 314 provides a specific amount of text, for example, the previous one, two, three, five, or ten words, or the text recognized within a predetermined amount of time.
- the linguistic context may include words that were previously spoken by the user and are recognized, and/or text that was entered or accessed in another manner. For example, a user could open a text file, place a cursor at a particular position in the text, and begin speaking to insert additional text. Some amount of text before the cursor may be provided as linguistic context, regardless of how the text in the file was entered.
- the client device 310 may also determine and send non-linguistic context data 316 to indicate a non-linguistic context for the utterance 304 .
- the non-linguistic context data may indicate, for example, characteristics of the environment in which the utterance 304 is spoken.
- the non-linguistic context data 314 can indicate factors related to the physical environment of the user 302 or client device 310 , such as geographical location, time, temperature, weather, or ambient noise.
- the non-linguistic context data 314 can provide information about the physical state of the client device 310 , for example, whether the device 310 is moving or stationary, the speed of movement of the device 310 , whether the device 310 is being held or not, a pose or orientation of the device 310 , whether or not the device 310 is connected to a docking station, and/or the type of docking station to which the client device 310 is connected.
- the non-linguistic context data 314 can provide information about the operating state of the client device 310 , for example, an identifier for an application running on the client device 310 , or a category or classification for the application to which that the utterance 304 was provided as input.
- the non-linguistic context data can indicate a particular input field, input field label, an input text format for a field, an identifier for a web page or Internet domain, or other information.
- the non-linguistic context data 314 can also indicate information about the user 302 that spoke the utterance, for example, a user identifier, whether the user is male or female, or other information from a user profile for the user.
- the client device 310 determines its location, for example, using a global positioning system (GPS) module or other techniques, and determines that the client device 310 is located in the city of Los Angeles. The client device 310 also determines that the utterance 304 was recorded as input to a mail application running on the client device 310 . The client device 310 provides data indicating the location, e.g., “Los Angeles,” and the active application, e.g., the “Mail” application, to the computing system 320 as non-linguistic context data 316 . The client device also provides the audio data 312 and the linguistic context data 314 to the computing system.
- GPS global positioning system
- the computing system 320 uses a speech recognizer module 330 to determine candidate transcriptions 335 for the utterance 304 .
- the candidate transcriptions 335 may be provided as, for example, a list, a word lattice, or in other forms.
- the candidate transcriptions 335 may be scored or ranked to indicate which candidate transcriptions 335 the speech recognizer module 330 estimates to be most likely to be correct transcriptions.
- the candidate transcriptions 335 represent a set of highest ranking or most likely transcriptions, as estimated by the speech recognizer 330 . This set can be an n-best list, including, for example, the top 3, 5, 30, 25, or other integer number of candidate transcriptions.
- the speech recognizer module 330 uses an acoustic model and a language model to identify the candidate transcriptions 335 .
- the models used by the speech recognizer module 330 may or may not use non-linguistic context data to determine candidate transcriptions. Accordingly, in some instances, the candidate transcriptions 335 may be determined based on the audio data 312 and the linguistic context data 314 , without being influenced by the non-linguistic context data 316 .
- Another language model may use information about the non-linguistic context to re-score or re-rank the candidate transcriptions 335 to improve accuracy.
- the speech recognizer module 330 may use the non-linguistic context data 316 to identify and/or score the candidate transcriptions 335 .
- the computing system 320 uses a feature extraction module 340 to determine feature values 345 for various different features.
- the set of features that feature values 345 are determined for is the set of features defined in a language model 350 that will receive the feature values 345 as input.
- the feature extraction module 340 can determine which n-gram features and backoff features should be set as active, and which should be set as inactive. For example, the computing system 320 can evaluate each candidate transcription to determine a likelihood of occurrence of the candidate transcription given the context.
- the computing system 320 may compare n-grams comprising a candidate transcription and at least a portion of the context to n-grams in an n-gram feature dictionary for a language model 350 . For the candidate transcription “beach,” the computing system 320 can determine whether the n-gram “Let's meet at the beach” matches any of the 5-grams in the n-gram feature dictionary.
- the matching n-gram feature is given a feature value of “1,” and all other n-gram features for 5-grams are given a feature value of “0.” Similarly, since the 5-gram was found to have a corresponding n-gram feature, none of the backoff features are activated (e.g., all are given a value of “0”) By contrast, if none of the n-gram features match “Let's meet at the beach,” then one or more backoff features will be activated.
- each of the following prefix backoff features may be activated if they are defined as part of the model 150 : “ ⁇ backoff-5>,” ⁇ backoff-4, beach>,” “ ⁇ backoff-3, the beach>,” “ ⁇ backoff-2, at the beach>,” “ ⁇ backoff-1, meet at the beach>.”
- Suffix backoff features e.g., “ ⁇ Let's meet at the, backoff-1>,” and other backoff features may also be activated based on the context. All other backoff features that do not correspond to the n-gram under evaluation, e.g., “ ⁇ backoff-4, house>” or “ ⁇ backoff-3, the roof>,” would be assigned a value of “0.”
- the evaluation of candidate transcription “beach” would also involve determination of feature scores for features corresponding to n-grams with lower values of n. For example, feature scores n-gram features and backoff features representing 4-grams would be determined with respect to the 4-gram “meet at the beach,” feature scores for features representing 3-grams would be determined with respect to the 3-gram “at the beach,” and so on.
- the feature values 345 are provided as input to the language model 350 .
- the language model 350 Based on the feature values 345 , the language model 350 provides a set of output values 355 , which may indicate likelihoods that one or more words will occur in the current context.
- the language model 350 can be a model that has been trained to estimate the likelihood of a word or phrase occurring based on scores for linguistic and/or non-linguistic features.
- the language model 350 can determine a posterior probability of a current word, e.g., the first word of the utterance 304 , given information about the context for the utterance 304 , which may include linguistic context, e.g., the prior words “Let's meet at the,” and/or non-linguistic context, e.g., location, device state, application, user characteristics, etc.
- the feature values 345 are determined in stage (D) for the features that the language model 350 was trained to be able to process and use to determine word likelihoods.
- the language model 350 may include a set of internal weights that represent the training state of the language model 350 . These weights may indicate how various aspects of context make words more or less likely to occur. Typically, the weights in the language model 350 are set during training of the language model 350 and do not change during use of the language model. However, the weights are trained using examples of input from a variety of different users and different environments, so the language model 350 is able to estimate likelihoods of words occurring given many different types of linguistic and non-linguistic contexts.
- the language model 350 is a log-linear model.
- Log-linear models may effectively take into account scores from large numbers of features and scores for features of multiple different types.
- a log-linear model may be used to combine word n-gram feature values with feature values indicating physical environment, user characteristics, and other factors.
- log-linear models may provide greater efficiency or smaller storage requirements than, for example, hidden Markov models (HMMs) or other statistical models.
- HMMs hidden Markov models
- the language model 350 may be a maximum entropy model.
- Other types of models and other training techniques may additionally or alternatively be used.
- support vector machines, neural networks, classifiers, and other types of models may be used to process various contextual features, including linguistic feature values, non-linguistic feature values, and/or other types of information.
- an integrated circuit or other device could implement a neural network to serve as a language model.
- a set of multiple classifiers could each be trained to process one or more feature values, and a system could combine the outputs of the classifiers to indicate a probability of occurrence of a word or other lexical item.
- any appropriate model may be used, where the model receives values for contextual features and provides output indicative of a likelihood of occurrence of a word based on the received values.
- the output values 355 provided by the language model 350 may be, for example, scores indicating likelihoods of occurrence of different words given the context indicated by the feature values 345 .
- the language model 350 may indicate a posterior probability P(y
- the language model 350 may be used to obtain a score for each of multiple different words within a particular candidate transcription.
- the techniques described above can be used to determine an output of the language model 350 for a first word of a candidate transcription. Then, using an assumption that the first word of the candidate transcription is correct, the same techniques may be used to determine an output of the language model 350 for the second word in the candidate transcription. For this second word, the linguistic context has changed, e.g., by the inclusion of the first word of the candidate transcription.
- the computing system 320 may use the feature extraction module 340 to determine a new set of feature values that are appropriate for the new context. In this manner, the computing system 320 may use the language model 350 to determine a score for each of the words in each of the candidate transcriptions 335 , based on the particular sequence of words that each word follows.
- the computing system 320 uses a re-scoring module 360 to determine scores 365 for the different candidate transcriptions 335 . If a candidate transcription includes multiple words, the outputs from the language model 350 for each of the different words of the candidate transcription can be used by the re-scoring module 360 to determine a score 365 indicating a likelihood of occurrence of each candidate transcription as a whole, given the context in which the utterance was spoken.
- the computing system 320 selects a transcription for the utterance 304 based on the scores 365 . For example, the computing system 320 may select the candidate transcription 335 having the score 365 that indicates the highest likelihood of occurrence.
- the computing system 320 provides the selected transcription to the client device 302 .
- the client device 302 may insert the transcription in the application that is running, to complete the user's intended phrase, “Let's meet at the beach.”
- non-linguistic context data is used to re-score candidate transcriptions 335 that were determined without taking into account non-linguistic context data.
- the speech recognizer 330 may use a language model, such as the language model 350 , that uses non-linguistic context data to select and rank the candidate transcriptions. In these implementations, a separate re-scoring process may not be needed.
- the input to the language model 350 may include only feature values for non-linguistic features.
- feature values may be provided for both linguistic and non-linguistic features.
- a language model that determines likelihoods using both linguistic and non-linguistic features may have better accuracy than a language model that provides scores based on only linguistic features or only non-linguistic features.
- the backoff features may include backoff features corresponding to elements of non-linguistic context.
- some standard features or n-gram features may represent the occurrence of a word or other outcome with a context that includes a particular time, e.g., time of day, day of the week, date, year, etc., or range of time, a particular geographical location, e.g., country, state, city, zip code, etc., or a particular user characteristic, e.g., a user's gender, age, educational level, primary language spoken, etc.
- backoff features may be used to represent the occurrence of a city and word combination that has no specific feature in the model 350 .
- a backoff feature may represent any of multiple cities, e.g., “ ⁇ city_backoff; cheese steak>”, which can represent the occurrence of the term “cheese steak” in an unknown city or any city that does not have a specific feature in the model 350 for the occurrence of “cheese steak” in that city.
- Further backoffs can be defined, such as “ ⁇ city_backoff; cheese backoff-1>” or “ ⁇ city_backoff; backoff-2>,” with each feature represents different combinations of words and cities.
- features of a model may ask a question about the domain of the input.
- the feature may include a component indicating whether the input was entered for a particular domain.
- Examples of different domains may be different types of searches, e.g., web search, image search, movie library search, etc.
- different domains may represent different categories of applications or tasks, e.g., voice search, e-mail, shopping, voice commands, navigation, and so on.
- Backoff features can correspond to instances where a combination of words or phrases with a domain does not have a corresponding feature in the model, e.g., “ ⁇ domain_backoff; who>” or “ ⁇ domain_backoff; main street>.” For example, if a user speaks the word “who” for a navigation application, and there is no corresponding feature for that word in that specific context, the backoff feature “ ⁇ domain_backoff; who>” can be activated. This indicates that, the domain component had to be omitted or backed off since the combination did not have a corresponding feature in the model.
- the language model 350 may indicate the likelihood of occurrence of sequences of language units other than words.
- the language model 350 may predict n-grams of characters, phonemes, or other language units.
- the language model 350 has n-gram features and backoff features based on for n-grams of the type of language unit used. For example, when the language units for a language model are phonemes, each n-gram feature represents a specific n-gram of phonemes, and each backoff feature represents a set of n-grams that include the same number of phonemes (e.g., the same order or n-gram length) and that do not have a corresponding n-gram feature in the model 350 .
- FIG. 4 is a flow diagram that illustrates an example of a method 400 for using an enhanced maximum entropy model.
- the method 200 may be performed by one or more computers.
- the candidate transcription may be provided in any of various forms, such as text, a word lattice, a set of phonemes, and so on.
- the context can include a sequence of one or more language units, for example, a sequence of one or more words that immediately precede the candidate transcription.
- the maximum entropy language model may include (i) scores for one or more n-gram features that each correspond to a respective n-gram and (ii) scores for one or more backoff features that each correspond to a set of n-grams for which there are no corresponding n-gram features in the maximum entropy language model.
- the maximum entropy language model may be a log-linear model, and the scores may be weights of the log-linear model that have been adjusted through training.
- the model may be a model trained to indicate a likelihood of occurrence of a word or phrase given one or more prior words or phrases.
- the model can be a model that has been trained to indicate a non-zero probability of occurrence of sets of n-grams represented by the backoff features.
- the maximum entropy language model may be normalized.
- Determining the feature values may include determining multiple second feature values that each separately indicate the occurrence of an n-gram having a particular number of words, the multiple second feature values corresponding to different backoff features and indicating that different portions of the particular context occurred within an n-gram having the particular number of words. For example, in one example, for the phase “I have a friend,” backoff features “backoff-1 have a friend” and “backoff-2 a friend” may be activated if the model does not include n-gram feature for “I have a friend.”
- the feature values for the n-gram features indicate whether a particular n-gram comprising the candidate transcription and the particular context matches n-grams associated with the respective n-gram features.
- the feature values for the backoff features indicate whether the portions of the particular n-gram are different from the n-grams associated with the respective n-gram features.
- Features values may be determined for features corresponding to n-grams of a lower value of n than the full particular context for a candidate transcription. At least one of the feature values for the backoff features may indicate that a portion of the particular context having particular size is different from the each of the contexts of the particular size that are associated with n-gram features in the model.
- the maximum entropy language model may include score for each context in a set of different contexts that each comprise a different sequence of one or more words.
- the model can include scores for multiple different n-gram features that each correspond to the occurrence of a respective word with the context.
- the respective words form a set of words.
- the context may be the phrase “I have a,” and the set of words that occur with this context may be the set “dollar,” “pen,” and “tool.”
- the model can also include a backoff feature that corresponds to the occurrence of any of multiple words with the context.
- the backoff feature may correspond to the occurrence, with the context, of any word that is not in the set of words for the n-gram features.
- a backoff feature would be a feature corresponding to sequence “I have a backoff-1,” where the term “backoff-1” represents any single word that is not in the set “dollar,” “pen,” and “tool.” Because the “backoff-1” term can be any of multiple words, the backoff feature can represent any of multiple different language sequences. Notwithstanding the backoff feature described in this example, different backoff features, or multiple backoff features, may be determined for a context or for different portions of a context.
- the maximum entropy language model may include score for each context in a set of different contexts that each comprise a different sequence of one or more words.
- the model can include scores for multiple different n-gram features, with each n-gram feature corresponding to a respective language sequence that (i) includes the sequence of one or more words of the context, and (ii) is formed of a same, particular number of words.
- the n-grams features may correspond to n-grams “I have a dollar,” “I have a pen,” and “I have a tool,” which each have four words.
- the model may include one or more backoff features that each correspond to a set of multiple language sequences, wherein, for each backoff feature, each language sequence in the set of language sequences (i) is formed of the particular number of words, (ii) comprises a particular subset of the one or more words of the context, and (iii) omits a particular sub-sequence of words within the context.
- one backoff feature may correspond to the sequence “backoff-1 have a dollar.”
- the sequence corresponds to a specific n-gram length in which n is four, and the sequence includes part of the context, e.g., “have a,” while omitting at least a part of the context, e.g., “I.”
- a backoff term e.g., the term “backoff-1,” is a placeholder or catchall to indicate that a portion of the context has been omitted, opening up the space to any single word that would not form one of the n-grams for n-gram features of the model.
- the term “backoff-1” represents any single word that does not have a 4-word-long n-gram feature for the word being followed by “have a dollar.”
- Other backoff features such as those corresponding to sequences “backoff-2 a dollar,” “backoff-3 dollar,” “backoff-4,” may be additionally or alternatively used by a model.
- backoff features for sequences “backoff-1 have a pen” or “backoff-1 have a tool,” and others may additionally or alternatively be used.
- the backoff features may include multiple backoff features that correspond to different sets of language sequences that include different portions of the context.
- Feature values are determined for features of the maximum entropy language model ( 406 ).
- a feature value may be determined for (i) each of the one or more n-gram features of the maximum entropy language model and (ii) each of the one or more backoff features of the maximum entropy language model.
- the feature values may be determined using a feature dictionary that indicates each of the n-grams corresponding to n-gram features of the maximum entropy language model.
- Each of the feature values may be a binary value.
- Feature values for one or more backoff features may be given values that indicate that a language sequence has occurred for which the model does not include a corresponding n-gram feature.
- a backoff feature that is activated may indicate a specific n-gram length, and/or may specify specific words being present at specific positions within the language sequence.
- a backoff feature being activated, or having a value of “1” determined, may be based on determining that at least a portion of the particular context does not correspond to any of the n-gram features.
- determining the feature values includes identifying a particular n-gram that includes words of the candidate transcription immediately following a sequence of words indicated by the particular context.
- the n-gram of words can be formed of a particular number of words. Further it can be determined that the maximum entropy language model does not have an n-gram feature corresponding to the particular n-gram. This may be done, for example, by comparing the particular n-gram with n-grams in the n-gram feature dictionary.
- a computing system can determine (a) first feature values that indicate the non-occurrence of n-grams having the particular number of words that have corresponding n-gram features in the maximum entropy language model, and (b) a second feature value, for at least one backoff feature, that indicates the occurrence of a language sequence that (i) has the particular number of words and (ii) includes a specific portion of the particular context.
- the feature values for the n-gram features and the feature values for the backoff features are input to the maximum entropy language model ( 408 ).
- an output is received from the maximum entropy language model in response to the feature values ( 410 ).
- the output is indicative of a likelihood of occurrence of the candidate transcription.
- the output can represent a likelihood that the candidate transcription will occur given the occurrence of the sequence of words in the particular context.
- a transcription for the utterance is selected, from among a plurality of candidate transcriptions, based on the output of the maximum entropy language model ( 412 ).
- an output of the maximum entropy language model is determined for each of multiple candidate transcriptions, in response to inputting different sets of feature values to the model.
- Each of multiple transcriptions is assigned a score based on an output of the model.
- the candidate transcription assigned the score indicating the highest likelihood of occurrence can be selected.
- Other techniques may additionally or alternatively be used. For example, a set of feature scores can be determined for each of multiple paths through a speech recognition lattice. The outputs may be used to score different paths of the lattice, to identify a most likely path. A transcription represented by the most likely path may be selected.
- the selected transcription is provided to a client device ( 414 ).
- the transcription may be provided, over a computer network, for display at a mobile computing device.
- the transcription is provided for display in, for example a particular field of a web page or application being displayed at the client device.
- FIG. 5 shows an example of a computing device 500 and an example of a mobile computing device 550 that can be used to implement the techniques described above.
- the computing device 500 is intended to represent various forms of digital computers, such as laptops, desktops, workstations, personal digital assistants, servers, blade servers, mainframes, and other appropriate computers.
- the mobile computing device is intended to represent various forms of mobile devices, such as personal digital assistants, cellular telephones, smart-phones, and other similar computing devices.
- the components shown here, their connections and relationships, and their functions, are meant to be exemplary only, and are not meant to limit implementations of the inventions described and/or claimed in this document.
- the computing device 500 includes a processor 502 , a memory 504 , a storage device 506 , a high-speed interface 508 connecting to the memory 504 and multiple high-speed expansion ports 510 , and a low-speed interface 512 connecting to a low-speed expansion port 514 and the storage device 506 .
- Each of the processor 502 , the memory 504 , the storage device 506 , the high-speed interface 508 , the high-speed expansion ports 510 , and the low-speed interface 512 are interconnected using various busses, and may be mounted on a common motherboard or in other manners as appropriate.
- the processor 502 can process instructions for execution within the computing device 500 , including instructions stored in the memory 504 or on the storage device 506 to display graphical information for a GUI on an external input/output device, such as a display 516 coupled to the high-speed interface 508 .
- an external input/output device such as a display 516 coupled to the high-speed interface 508 .
- multiple processors and/or multiple buses may be used, as appropriate, along with multiple memories and types of memory.
- multiple computing devices may be connected, with each device providing portions of the necessary operations (e.g., as a server bank, a group of blade servers, or a multi-processor system).
- the memory 504 stores information within the computing device 500 .
- the memory 504 is a volatile memory unit or units.
- the memory 504 is a non-volatile memory unit or units.
- the memory 504 may also be another form of computer-readable medium, such as a magnetic or optical disk.
- the storage device 506 is capable of providing mass storage for the computing device 500 .
- the storage device 506 may be or contain a computer-readable medium, such as a floppy disk device, a hard disk device, an optical disk device, or a tape device, a flash memory or other similar solid state memory device, or an array of devices, including devices in a storage area network or other configurations.
- a computer program product can be tangibly embodied in an information carrier.
- the computer program product may also contain instructions that, when executed, perform one or more methods, such as those described above.
- the computer program product can also be tangibly embodied in a computer- or machine-readable medium, such as the memory 504 , the storage device 506 , or memory on the processor 502 .
- the high-speed interface 508 manages bandwidth-intensive operations for the computing device 500 , while the low-speed interface 512 manages lower bandwidth-intensive operations.
- the high-speed interface 508 is coupled to the memory 504 , the display 516 (e.g., through a graphics processor or accelerator), and to the high-speed expansion ports 510 , which may accept various expansion cards (not shown).
- the low-speed interface 512 is coupled to the storage device 506 and the low-speed expansion port 514 .
- the low-speed expansion port 514 which may include various communication ports (e.g., USB, Bluetooth, Ethernet, wireless Ethernet) may be coupled to one or more input/output devices, such as a keyboard, a pointing device, a scanner, or an networking device such as a switch or router, e.g., through an network adapter.
- input/output devices such as a keyboard, a pointing device, a scanner, or an networking device such as a switch or router, e.g., through an network adapter.
- the computing device 500 may be implemented in a number of different forms, as shown in the figure. For example, it may be implemented as a standard server 520 , or multiple times in a group of such servers. In addition, it may be implemented in a personal computer such as a laptop computer 522 . It may also be implemented as part of a rack server system 524 . Alternatively, components from the computing device 500 may be combined with other components in a mobile device (not shown), such as a mobile computing device 550 . Each of such devices may contain one or more of the computing device 500 and the mobile computing device 550 , and an entire system may be made up of multiple computing devices communicating with each other.
- the mobile computing device 550 includes a processor 552 , a memory 564 , an input/output device such as a display 554 , a communication interface 566 , and a transceiver 568 , among other components.
- the mobile computing device 550 may also be provided with a storage device, such as a micro-drive or other device, to provide additional storage.
- a storage device such as a micro-drive or other device, to provide additional storage.
- Each of the processor 552 , the memory 564 , the display 554 , the communication interface 566 , and the transceiver 568 are interconnected using various buses, and several of the components may be mounted on a common motherboard or in other manners as appropriate.
- the processor 552 can execute instructions within the mobile computing device 550 , including instructions stored in the memory 564 .
- the processor 552 may be implemented as a chipset of chips that include separate and multiple analog and digital processors.
- the processor 552 may provide, for example, for coordination of the other components of the mobile computing device 550 , such as control of user interfaces, applications run by the mobile computing device 550 , and wireless communication by the mobile computing device 550 .
- the processor 552 may communicate with a user through a control interface 558 and a display interface 556 coupled to the display 554 .
- the display 554 may be, for example, a TFT (Thin-Film-Transistor Liquid Crystal Display) display or an OLED (Organic Light Emitting Diode) display, or other appropriate display technology.
- the display interface 556 may comprise appropriate circuitry for driving the display 554 to present graphical and other information to a user.
- the control interface 558 may receive commands from a user and convert them for submission to the processor 552 .
- an external interface 562 may provide communication with the processor 552 , so as to enable near area communication of the mobile computing device 550 with other devices.
- the external interface 562 may provide, for example, for wired communication in some implementations, or for wireless communication in other implementations, and multiple interfaces may also be used.
- the memory 564 stores information within the mobile computing device 550 .
- the memory 564 can be implemented as one or more of a computer-readable medium or media, a volatile memory unit or units, or a non-volatile memory unit or units.
- An expansion memory 574 may also be provided and connected to the mobile computing device 550 through an expansion interface 572 , which may include, for example, a SIMM (Single In Line Memory Module) card interface.
- SIMM Single In Line Memory Module
- the expansion memory 574 may provide extra storage space for the mobile computing device 550 , or may also store applications or other information for the mobile computing device 550 .
- the expansion memory 574 may include instructions to carry out or supplement the processes described above, and may include secure information also.
- the expansion memory 574 may be provide as a security module for the mobile computing device 550 , and may be programmed with instructions that permit secure use of the mobile computing device 550 .
- secure applications may be provided via the SIMM cards, along with additional information, such as placing identifying information on the SIMM card in a non-hackable manner.
- the memory may include, for example, flash memory and/or NVRAM memory (non-volatile random access memory), as discussed below.
- NVRAM memory non-volatile random access memory
- a computer program product is tangibly embodied in an information carrier.
- the computer program product contains instructions that, when executed, perform one or more methods, such as those described above.
- the computer program product can be a computer- or machine-readable medium, such as the memory 564 , the expansion memory 574 , or memory on the processor 552 .
- the computer program product can be received in a propagated signal, for example, over the transceiver 568 or the external interface 562 .
- the mobile computing device 550 may communicate wirelessly through the communication interface 566 , which may include digital signal processing circuitry where necessary.
- the communication interface 566 may provide for communications under various modes or protocols, such as GSM voice calls (Global System for Mobile communications), SMS (Short Message Service), EMS (Enhanced Messaging Service), or MMS messaging (Multimedia Messaging Service), CDMA (code division multiple access), TDMA (time division multiple access), PDC (Personal Digital Cellular), WCDMA (Wideband Code Division Multiple Access), CDMA2000, or GPRS (General Packet Radio Service), among others.
- GSM voice calls Global System for Mobile communications
- SMS Short Message Service
- EMS Enhanced Messaging Service
- MMS messaging Multimedia Messaging Service
- CDMA code division multiple access
- TDMA time division multiple access
- PDC Personal Digital Cellular
- WCDMA Wideband Code Division Multiple Access
- CDMA2000 Code Division Multiple Access
- GPRS General Packet Radio Service
- a GPS (Global Positioning System) receiver module 570 may provide additional navigation- and location-related wireless data to the mobile computing device 550 , which may be used as appropriate by applications running on the mobile computing device 550 .
- the mobile computing device 550 may also communicate audibly using an audio codec 560 , which may receive spoken information from a user and convert it to usable digital information.
- the audio codec 560 may likewise generate audible sound for a user, such as through a speaker, e.g., in a handset of the mobile computing device 550 .
- Such sound may include sound from voice telephone calls, may include recorded sound (e.g., voice messages, music files, etc.) and may also include sound generated by applications operating on the mobile computing device 550 .
- the mobile computing device 550 may be implemented in a number of different forms, as shown in the figure. For example, it may be implemented as a cellular telephone 580 . It may also be implemented as part of a smart-phone 582 , personal digital assistant, tablet computer, wearable computer, or other similar mobile device.
- backoff features may be used with maximum entropy models for natural language processing, such as language modeling.
- backoff features may be used with maximum entropy models for computer vision, object recognition, speaker identification, classification, and other applications to represent the occurrence of unseen or uncommon contexts.
- All of the functional operations described in this specification may be implemented in digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them.
- the techniques disclosed may be implemented as one or more computer program products, i.e., one or more modules of computer program instructions encoded on a computer-readable medium for execution by, or to control the operation of, data processing apparatus.
- the computer readable-medium may be a machine-readable storage device, a machine-readable storage substrate, a memory device, a composition of matter affecting a machine-readable propagated signal, or a combination of one or more of them.
- the computer-readable medium may be a non-transitory computer-readable medium.
- data processing apparatus encompasses all apparatus, devices, and machines for processing data, including by way of example a programmable processor, a computer, or multiple processors or computers.
- the apparatus may include, in addition to hardware, code that creates an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, or a combination of one or more of them.
- a propagated signal is an artificially generated signal, e.g., a machine-generated electrical, optical, or electromagnetic signal that is generated to encode information for transmission to suitable receiver apparatus.
- a computer program (also known as a program, software, software application, script, or code) may be written in any form of programming language, including compiled or interpreted languages, and it may be deployed in any form, including as a standalone program or as a module, component, subroutine, or other unit suitable for use in a computing environment.
- a computer program does not necessarily correspond to a file in a file system.
- a program may be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub programs, or portions of code).
- a computer program may be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
- the processes and logic flows described in this specification may be performed by one or more programmable processors executing one or more computer programs to perform functions by operating on input data and generating output.
- the processes and logic flows may also be performed by, and apparatus may also be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application specific integrated circuit).
- FPGA field programmable gate array
- ASIC application specific integrated circuit
- processors suitable for the execution of a computer program include, by way of example, both general and special purpose microprocessors, and any one or more processors of any kind of digital computer.
- a processor will receive instructions and data from a read only memory or a random access memory or both.
- the essential elements of a computer are a processor for performing instructions and one or more memory devices for storing instructions and data.
- a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto optical disks, or optical disks.
- mass storage devices for storing data, e.g., magnetic, magneto optical disks, or optical disks.
- a computer need not have such devices.
- a computer may be embedded in another device, e.g., a tablet computer, a mobile telephone, a personal digital assistant (PDA), a mobile audio player, a Global Positioning System (GPS) receiver, to name just a few.
- Computer readable media suitable for storing computer program instructions and data include all forms of non-volatile memory, media and memory devices, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks; magneto-optical disks; and CD-ROM and DVD-ROM disks.
- the processor and the memory may be supplemented by, or incorporated in, special purpose logic circuitry.
- the techniques disclosed may be implemented on a computer having a display device, e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor, for displaying information to the user and a keyboard and a pointing device, e.g., a mouse or a trackball, by which the user may provide input to the computer.
- a display device e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor
- a keyboard and a pointing device e.g., a mouse or a trackball
- Other kinds of devices may be used to provide for interaction with a user as well; for example, feedback provided to the user may be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input from the user may be received in any form, including acoustic, speech, or tactile input.
- Implementations may include a computing system that includes a back end component, e.g., as a data server, or that includes a middleware component, e.g., an application server, or that includes a front end component, e.g., a client computer having a graphical user interface or a Web browser through which a user may interact with an implementation of the techniques disclosed, or any combination of one or more such back end, middleware, or front end components.
- the components of the system may be interconnected by any form or medium of digital data communication, e.g., a communication network. Examples of communication networks include a local area network (“LAN”) and a wide area network (“WAN”), e.g., the Internet.
- LAN local area network
- WAN wide area network
- the computing system may include clients and servers.
- a client and server are generally remote from each other and typically interact through a communication network.
- the relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.
Abstract
Description
Algorithm 1 Sample-based Iterative Parameter Mixtures |
Require: n is the number of samples per worker per epoch |
Require: Break S into K partitions |
1: | S ← {D1, . . . , Dj, . . . , DK} |
2: | t ← 0 |
3: | Θt ← 0 |
4: | repeat |
5: | t ← t + 1 |
6: | {θ1 1, . . . , θL K} ← IPMMAP(D1, . . . , DK, Θt-1, n) |
7: | Θ′t ← IPMREDUCE(θ1 1, . . . , θl j, . . . , θL K) |
8: | Θt ← APPLYL1(Θ′t) |
9: | until converged |
10: | function IPMMAP(D, Θ, n) |
11: | |
12: | Θ0 ← Θ |
13: | for i = 1 . . . n do |
14: | Sample di from D |
15: | Θ′i ← ApplyLazyL1(ActiveFeatures(di, Θi-1)) |
16: | Θi ← Θ′i − α∇Fddi i (Θ′i) |
17: | α ← UpdateAlpha(α, i) |
18: | end for |
19: | return Θn |
20: | end function |
21: | function IPMREDUCE(θl 1, . . . , θl j, . . . , θl K) |
22: | |
23: |
|
24: | return θl |
25: | end function |
NGram(w 1 . . . w n ,i,k)=<w i−k , . . . w i−1 ,w i> (4)
SuffixBackoff(w 1 . . . w n ,i,k)=<w i−k , . . . w i−1 ,BO> (5)
PrefixBackoff(w 1 . . . w n ,i,k)=<BO,w i−k+1 , . . . w i> (6)
PrefixBackoffj(w 1 . . . w n ,i,k)=<BO k ,w i−j , . . . w i> (7)
SuffixBackOffj(w 1 . . . w n ,i,k)=<w i−k , . . . w i−k+j ,BO k> (8)
SuffixBackoff(S,5,3)=<will,save,the,BO>
PrefixBackoff(S,5,3)=<BO,save,the,snails>
SuffixBackoff0(S,5,3)=<will,BO 3>
SuffixBackoff1(S,5,3)=<will,save,BO 3>
PrefixBackoff0(S,5,3)=<BO 3,snails>
PrefixBackoff1(S,5,3)=<BO 3,the,snails>
|
for all w1, w2, . . . , wn ε Data do |
for i ← 1 . . . n do |
for k ← 0 . . . 4 do |
key ← NGram(w1, . . . , wn, i, k) |
dictk ← dictk ∪ {key} |
countk[key] ← countk[key] + 1 |
bo_key ← SuffixBackoff(w1, . . . , wn, i, k) |
dictk ← dictk ∪ {bo_key} |
countk[bo_key] ← countk[bo_key] + 1 |
end for |
end for |
end for |
feature to a unique index, for each k = 0, . . . , 4. |
Score=Σi log P(w i |w i−k i−1)(for 1≦i≦N), (9)
Claims (20)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US14/667,518 US9412365B2 (en) | 2014-03-24 | 2015-03-24 | Enhanced maximum entropy models |
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US201461969625P | 2014-03-24 | 2014-03-24 | |
US14/667,518 US9412365B2 (en) | 2014-03-24 | 2015-03-24 | Enhanced maximum entropy models |
Publications (2)
Publication Number | Publication Date |
---|---|
US20150269934A1 US20150269934A1 (en) | 2015-09-24 |
US9412365B2 true US9412365B2 (en) | 2016-08-09 |
Family
ID=54142710
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US14/667,518 Active US9412365B2 (en) | 2014-03-24 | 2015-03-24 | Enhanced maximum entropy models |
Country Status (1)
Country | Link |
---|---|
US (1) | US9412365B2 (en) |
Cited By (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10318632B2 (en) | 2017-03-14 | 2019-06-11 | Microsoft Technology Licensing, Llc | Multi-lingual data input system |
US10446138B2 (en) | 2017-05-23 | 2019-10-15 | Verbit Software Ltd. | System and method for assessing audio files for transcription services |
US10540963B2 (en) | 2017-02-02 | 2020-01-21 | International Business Machines Corporation | Input generation for classifier |
US10692502B2 (en) | 2017-03-03 | 2020-06-23 | Pindrop Security, Inc. | Method and apparatus for detecting spoofing conditions |
US20210183372A1 (en) * | 2019-12-17 | 2021-06-17 | Spotify Ab | Masking systems and methods |
US11295231B2 (en) | 2017-05-12 | 2022-04-05 | Microsoft Technology Licensing, Llc | Systems, methods, and computer-readable media for parallel stochastic gradient descent with linear and non-linear activation functions |
Families Citing this family (22)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9703394B2 (en) * | 2015-03-24 | 2017-07-11 | Google Inc. | Unlearning techniques for adaptive language models in text entry |
JP6614639B2 (en) * | 2015-05-22 | 2019-12-04 | 国立研究開発法人情報通信研究機構 | Speech recognition apparatus and computer program |
CN105654945B (en) * | 2015-10-29 | 2020-03-06 | 乐融致新电子科技(天津)有限公司 | Language model training method, device and equipment |
JP6727607B2 (en) * | 2016-06-09 | 2020-07-22 | 国立研究開発法人情報通信研究機構 | Speech recognition device and computer program |
US10546066B2 (en) * | 2016-08-31 | 2020-01-28 | Microsoft Technology Licensing, Llc | End-to-end learning of dialogue agents for information access |
CN107885716B (en) * | 2016-09-29 | 2020-02-11 | 腾讯科技（深圳）有限公司 | Text recognition method and device |
US11081104B1 (en) * | 2017-06-27 | 2021-08-03 | Amazon Technologies, Inc. | Contextual natural language processing |
US10431210B1 (en) | 2018-04-16 | 2019-10-01 | International Business Machines Corporation | Implementing a whole sentence recurrent neural network language model for natural language processing |
EP3707703A1 (en) * | 2018-11-28 | 2020-09-16 | Google LLC. | Training and/or using a language selection model for automatically determining language for speech recognition of spoken utterance |
US11075862B2 (en) | 2019-01-22 | 2021-07-27 | International Business Machines Corporation | Evaluating retraining recommendations for an automated conversational service |
US11537821B2 (en) | 2019-04-10 | 2022-12-27 | International Business Machines Corporation | Evaluating text classification anomalies predicted by a text classification model |
US11068656B2 (en) * | 2019-04-10 | 2021-07-20 | International Business Machines Corporation | Displaying text classification anomalies predicted by a text classification model |
KR20210042696A (en) * | 2019-10-10 | 2021-04-20 | 삼성전자주식회사 | Apparatus and method for learning model |
US11372860B2 (en) | 2019-12-26 | 2022-06-28 | Snowflake Inc. | Processing techniques for queries where predicate values are unknown until runtime |
US11308090B2 (en) | 2019-12-26 | 2022-04-19 | Snowflake Inc. | Pruning index to support semi-structured data types |
US11681708B2 (en) | 2019-12-26 | 2023-06-20 | Snowflake Inc. | Indexed regular expression search with N-grams |
US10997179B1 (en) | 2019-12-26 | 2021-05-04 | Snowflake Inc. | Pruning index for optimization of pattern matching queries |
US10769150B1 (en) | 2019-12-26 | 2020-09-08 | Snowflake Inc. | Pruning indexes to enhance database query processing |
US11567939B2 (en) | 2019-12-26 | 2023-01-31 | Snowflake Inc. | Lazy reassembling of semi-structured data |
WO2022047252A1 (en) * | 2020-08-27 | 2022-03-03 | Unified Compliance Framework (Network Frontiers) | Automatically identifying multi-word expressions |
US20220382973A1 (en) * | 2021-05-28 | 2022-12-01 | Microsoft Technology Licensing, Llc | Word Prediction Using Alternative N-gram Contexts |
US11880369B1 (en) | 2022-11-21 | 2024-01-23 | Snowflake Inc. | Pruning data based on state of top K operator |
Citations (162)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4820059A (en) | 1985-10-30 | 1989-04-11 | Central Institute For The Deaf | Speech processing apparatus and methods |
US5267345A (en) | 1992-02-10 | 1993-11-30 | International Business Machines Corporation | Speech recognition apparatus which predicts word classes from context and words from word classes |
US5632002A (en) | 1992-12-28 | 1997-05-20 | Kabushiki Kaisha Toshiba | Speech recognition interface system suitable for window systems and speech mail systems |
US5638487A (en) | 1994-12-30 | 1997-06-10 | Purespeech, Inc. | Automatic speech recognition |
US5715367A (en) | 1995-01-23 | 1998-02-03 | Dragon Systems, Inc. | Apparatuses and methods for developing and using models for speech recognition |
US5737724A (en) | 1993-11-24 | 1998-04-07 | Lucent Technologies Inc. | Speech recognition employing a permissive recognition criterion for a repeated phrase utterance |
US5768603A (en) | 1991-07-25 | 1998-06-16 | International Business Machines Corporation | Method and system for natural language translation |
US5822729A (en) * | 1996-06-05 | 1998-10-13 | Massachusetts Institute Of Technology | Feature-based speech recognizer having probabilistic linguistic processor providing word matching based on the entire space of feature vectors |
US5822730A (en) | 1996-08-22 | 1998-10-13 | Dragon Systems, Inc. | Lexical tree pre-filtering in speech recognition |
WO1999031654A3 (en) | 1997-12-12 | 1999-08-26 | Koninkl Philips Electronics Nv | Method of determining model-specific factors for pattern recognition, in particular for speech patterns |
US6021403A (en) | 1996-07-19 | 2000-02-01 | Microsoft Corporation | Intelligent user assistance facility |
US6119186A (en) | 1997-05-30 | 2000-09-12 | Texas Instruments Incorporated | Computer system with environmental manager for detecting and responding to changing environmental conditions |
US6167377A (en) | 1997-03-28 | 2000-12-26 | Dragon Systems, Inc. | Speech recognition language models |
US6182038B1 (en) | 1997-12-01 | 2001-01-30 | Motorola, Inc. | Context dependent phoneme networks for encoding speech information |
DE10045020A1 (en) | 1999-09-16 | 2001-05-03 | Denso Corp | User interface for exchanging information between navigation system and user, judges whether input voice signal is in predefined language based on which switching of predefined dictionaries is controlled |
US6317712B1 (en) | 1998-02-03 | 2001-11-13 | Texas Instruments Incorporated | Method of phonetic modeling using acoustic decision tree |
US20020062216A1 (en) | 2000-11-23 | 2002-05-23 | International Business Machines Corporation | Method and system for gathering information by voice input |
US6397180B1 (en) | 1996-05-22 | 2002-05-28 | Qwest Communications International Inc. | Method and system for performing speech recognition based on best-word scoring of repeated speech attempts |
US20020078091A1 (en) | 2000-07-25 | 2002-06-20 | Sonny Vu | Automatic summarization of a document |
US20020087309A1 (en) | 2000-12-29 | 2002-07-04 | Lee Victor Wai Leung | Computer-implemented speech expectation-based probability method and system |
US20020087314A1 (en) | 2000-11-14 | 2002-07-04 | International Business Machines Corporation | Method and apparatus for phonetic context adaptation for improved speech recognition |
US6418431B1 (en) | 1998-03-30 | 2002-07-09 | Microsoft Corporation | Information retrieval and speech recognition based on language models |
US20020111990A1 (en) | 1999-11-01 | 2002-08-15 | Wood Christopher Noah | Internet based message management system |
US6446041B1 (en) | 1999-10-27 | 2002-09-03 | Microsoft Corporation | Method and system for providing audio playback of a multi-source document |
WO2002073331A2 (en) | 2001-02-20 | 2002-09-19 | Semantic Edge Gmbh | Natural language context-sensitive and knowledge-based interaction environment for dynamic and flexible product, service and information search and presentation applications |
WO2002096070A2 (en) | 2001-05-24 | 2002-11-28 | Cellport Systems Inc. | Using identification information obtained from a portable phone |
US20030050778A1 (en) | 2001-09-13 | 2003-03-13 | Patrick Nguyen | Focused language models for improved speech input of structured documents |
US6539358B1 (en) | 2000-05-24 | 2003-03-25 | Delphi Technologies, Inc. | Voice-interactive docking station for a portable computing device |
US6581033B1 (en) | 1999-10-19 | 2003-06-17 | Microsoft Corporation | System and method for correction of speech recognition mode errors |
US20030149561A1 (en) | 2002-02-01 | 2003-08-07 | Intel Corporation | Spoken dialog system using a best-fit language model and best-fit grammar |
US20030216919A1 (en) | 2002-05-13 | 2003-11-20 | Roushar Joseph C. | Multi-dimensional method and apparatus for automated language interpretation |
US20030236099A1 (en) | 2002-06-20 | 2003-12-25 | Deisher Michael E. | Speech recognition of mobile devices |
US6678415B1 (en) | 2000-05-12 | 2004-01-13 | Xerox Corporation | Document image decoding using an integrated stochastic language model |
US20040024583A1 (en) | 2000-03-20 | 2004-02-05 | Freeman Robert J | Natural-language processing system using a large corpus |
US20040043758A1 (en) | 2002-08-29 | 2004-03-04 | Nokia Corporation | System and method for providing context sensitive recommendations to digital services |
US20040049388A1 (en) | 2001-09-05 | 2004-03-11 | Roth Daniel L. | Methods, systems, and programming for performing speech recognition |
US6714778B2 (en) | 2001-05-15 | 2004-03-30 | Nokia Corporation | Context sensitive web services |
US20040098571A1 (en) | 2002-11-15 | 2004-05-20 | Falcon Stephen R. | Portable computing device-integrated appliance |
US6754626B2 (en) * | 2001-03-01 | 2004-06-22 | International Business Machines Corporation | Creating a hierarchical tree of language models for a dialog system based on prompt and dialog context |
US20040138882A1 (en) | 2002-10-31 | 2004-07-15 | Seiko Epson Corporation | Acoustic model creating method, speech recognition apparatus, and vehicle having the speech recognition apparatus |
US6778959B1 (en) | 1999-10-21 | 2004-08-17 | Sony Corporation | System and method for speech verification using out-of-vocabulary models |
US20040172258A1 (en) | 2002-12-10 | 2004-09-02 | Dominach Richard F. | Techniques for disambiguating speech input using multimodal interfaces |
US20040230420A1 (en) | 2002-12-03 | 2004-11-18 | Shubha Kadambe | Method and apparatus for fast on-line automatic speaker/environment adaptation for speech/speaker recognition in the presence of changing environments |
US20040243415A1 (en) | 2003-06-02 | 2004-12-02 | International Business Machines Corporation | Architecture for a speech input method editor for handheld portable devices |
US6839670B1 (en) | 1995-09-11 | 2005-01-04 | Harman Becker Automotive Systems Gmbh | Process for automatic control of one or more devices by voice commands or by real-time voice dialog and apparatus for carrying out this process |
US20050005240A1 (en) | 1999-10-05 | 2005-01-06 | Microsoft Corporation | Method and system for providing alternatives for text derived from stochastic input sources |
US6876966B1 (en) | 2000-10-16 | 2005-04-05 | Microsoft Corporation | Pattern recognition training method and apparatus using inserted noise followed by noise reduction |
US20050108017A1 (en) | 2003-10-27 | 2005-05-19 | John-Alexander Esser | Determining language for word recognition event |
US20050114474A1 (en) | 2003-11-20 | 2005-05-26 | International Business Machines Corporation | Automatic configuration of the network devices via connection to specific switch ports |
US6912499B1 (en) | 1999-08-31 | 2005-06-28 | Nortel Networks Limited | Method and apparatus for training a multilingual speech model set |
US6922669B2 (en) | 1998-12-29 | 2005-07-26 | Koninklijke Philips Electronics N.V. | Knowledge-based strategies applied to N-best lists in automatic speech recognition systems |
US20050187763A1 (en) | 2004-02-23 | 2005-08-25 | General Motors Corporation | Dynamic tuning of hands-free algorithm for noise and driving conditions |
US20050193144A1 (en) | 2004-02-26 | 2005-09-01 | Hassan Ahmed E. | Computing device with environment aware features |
US6950796B2 (en) | 2001-11-05 | 2005-09-27 | Motorola, Inc. | Speech recognition by dynamical noise model adaptation |
US20050216273A1 (en) | 2000-11-30 | 2005-09-29 | Telesector Resources Group, Inc. | Methods and apparatus for performing speech recognition over a network and using speech recognition results |
US6959276B2 (en) | 2001-09-27 | 2005-10-25 | Microsoft Corporation | Including the category of environmental noise when processing speech signals |
US20050246325A1 (en) | 2004-04-30 | 2005-11-03 | Microsoft Corporation | Method and system for recording and accessing usage of an item in a computer system |
US20050283364A1 (en) | 1998-12-04 | 2005-12-22 | Michael Longe | Multimodal disambiguation of speech recognition |
US20060004572A1 (en) | 2004-06-30 | 2006-01-05 | Microsoft Corporation | Homonym processing in the context of voice-activated command systems |
US20060004850A1 (en) | 2004-07-01 | 2006-01-05 | Chowdhury Abdur R | Analyzing a query log for use in managing category-specific electronic content |
US20060009974A1 (en) | 2004-07-09 | 2006-01-12 | Matsushita Electric Industrial Co., Ltd. | Hands-free voice dialing for portable and remote devices |
US20060035632A1 (en) | 2004-08-16 | 2006-02-16 | Antti Sorvari | Apparatus and method for facilitating contact selection in communication devices |
US7027987B1 (en) | 2001-02-07 | 2006-04-11 | Google Inc. | Voice interface for a search engine |
US20060095248A1 (en) | 2004-11-04 | 2006-05-04 | Microsoft Corporation | Machine translation system incorporating syntactic dependency treelets into a statistical framework |
US7043422B2 (en) | 2000-10-13 | 2006-05-09 | Microsoft Corporation | Method and apparatus for distribution-based language model adaptation |
US20060212288A1 (en) | 2005-03-17 | 2006-09-21 | Abhinav Sethy | Topic specific language models built from large numbers of documents |
US20060247915A1 (en) | 1998-12-04 | 2006-11-02 | Tegic Communications, Inc. | Contextual Prediction of User Words and User Actions |
US7149688B2 (en) | 2002-11-04 | 2006-12-12 | Speechworks International, Inc. | Multi-lingual speech recognition with cross-language context modeling |
US7149970B1 (en) | 2000-06-23 | 2006-12-12 | Microsoft Corporation | Method and system for filtering and selecting from a candidate list generated by a stochastic input method |
US7174288B2 (en) | 2002-05-08 | 2007-02-06 | Microsoft Corporation | Multi-modal entry of ideogrammatic languages |
US20070060114A1 (en) | 2005-09-14 | 2007-03-15 | Jorey Ramer | Predictive text completion for a mobile communication facility |
US20070078653A1 (en) * | 2005-10-03 | 2007-04-05 | Nokia Corporation | Language model compression |
US20070174040A1 (en) | 2006-01-23 | 2007-07-26 | Fuji Xerox Co., Ltd. | Word alignment apparatus, example sentence bilingual dictionary, word alignment method, and program product for word alignment |
US7257532B2 (en) | 2002-09-18 | 2007-08-14 | Pioneer Corporation | Apparatus and method for speech recognition |
US7310601B2 (en) | 2004-06-08 | 2007-12-18 | Matsushita Electric Industrial Co., Ltd. | Speech recognition apparatus and speech recognition method |
US20080091406A1 (en) | 2006-10-16 | 2008-04-17 | Voicebox Technologies, Inc. | System and method for a cooperative conversational voice user interface |
US20080091443A1 (en) | 2006-10-13 | 2008-04-17 | Brian Strope | Business listing search |
US20080091435A1 (en) | 2006-10-13 | 2008-04-17 | Brian Strope | Business listing search |
US7370275B2 (en) | 2003-10-24 | 2008-05-06 | Microsoft Corporation | System and method for providing context to an input method by tagging existing applications |
US7383553B2 (en) | 2003-05-15 | 2008-06-03 | International Business Machines Corporation | Accessing a platform independent input method editor from an underlying operating system |
US20080131851A1 (en) | 2006-12-04 | 2008-06-05 | Dimitri Kanevsky | Context-sensitive language learning |
US20080133228A1 (en) | 2006-11-30 | 2008-06-05 | Rao Ashwin P | Multimodal speech recognition system |
US7392188B2 (en) | 2003-07-31 | 2008-06-24 | Telefonaktiebolaget Lm Ericsson (Publ) | System and method enabling acoustic barge-in |
US20080162117A1 (en) | 2006-12-28 | 2008-07-03 | Srinivas Bangalore | Discriminative training of models for sequence classification |
US7403888B1 (en) | 1999-11-05 | 2008-07-22 | Microsoft Corporation | Language input user interface |
US20080188271A1 (en) | 2007-02-07 | 2008-08-07 | Denso Corporation | Communicating road noise control system, in-vehicle road noise controller, and server |
US7424426B2 (en) | 2003-09-12 | 2008-09-09 | Sadaoki Furui And Ntt Docomo, Inc. | Noise adaptation system of speech model, noise adaptation method, and noise adaptation program for speech recognition |
US7424428B2 (en) | 2001-01-10 | 2008-09-09 | Koninklijke Philips Electronics N.V. | Automatic dialog system with database language model |
US20080221887A1 (en) | 2000-10-13 | 2008-09-11 | At&T Corp. | Systems and methods for dynamic re-configurable speech recognition |
US20080221902A1 (en) | 2007-03-07 | 2008-09-11 | Cerra Joseph P | Mobile browser environment speech processing facility |
US20080243481A1 (en) | 2007-03-26 | 2008-10-02 | Thorsten Brants | Large Language Models in Machine Translation |
US7451085B2 (en) | 2000-10-13 | 2008-11-11 | At&T Intellectual Property Ii, L.P. | System and method for providing a compensated speech recognition model for speech recognition |
US20080301112A1 (en) | 2007-05-29 | 2008-12-04 | Yahoo! Inc. | Enabling searching of user ratings and reviews using user profile location, and social networks |
US20090030696A1 (en) * | 2007-03-07 | 2009-01-29 | Cerra Joseph P | Using results of unstructured language model based speech recognition to control a system-level function of a mobile communications facility |
US20090030687A1 (en) | 2007-03-07 | 2009-01-29 | Cerra Joseph P | Adapting an unstructured language model speech recognition system based on usage |
US20090083023A1 (en) | 2005-06-17 | 2009-03-26 | George Foster | Means and Method for Adapted Language Translation |
US7526431B2 (en) | 2001-09-05 | 2009-04-28 | Voice Signal Technologies, Inc. | Speech recognition using ambiguous or phone key spelling and/or filtering |
US20090150160A1 (en) | 2007-10-05 | 2009-06-11 | Sensory, Incorporated | Systems and methods of performing speech recognition using gestures |
US20090164216A1 (en) | 2007-12-21 | 2009-06-25 | General Motors Corporation | In-vehicle circumstantial speech recognition |
US20090210214A1 (en) | 2008-02-19 | 2009-08-20 | Jiang Qian | Universal Language Input |
US7599893B2 (en) | 2005-10-13 | 2009-10-06 | Aureon Laboratories, Inc. | Methods and systems for feature selection in machine learning based on feature contribution and model fitness |
US20090271188A1 (en) | 2008-04-24 | 2009-10-29 | International Business Machines Corporation | Adjusting A Speech Engine For A Mobile Computing Device Based On Background Noise |
US20090287681A1 (en) | 2008-05-14 | 2009-11-19 | Microsoft Corporation | Multi-modal search wildcards |
US20090292529A1 (en) | 2002-12-18 | 2009-11-26 | At&T Corp. | System and method of providing a spoken dialog interface to a website |
US20100004930A1 (en) | 2008-07-02 | 2010-01-07 | Brian Strope | Speech Recognition with Parallel Recognition Tasks |
US20100049502A1 (en) | 2000-07-24 | 2010-02-25 | Microsoft Corporation | Method and system of generating reference variations for directory assistance data |
US7672833B2 (en) | 2005-09-22 | 2010-03-02 | Fair Isaac Corporation | Method and apparatus for automatic entity disambiguation |
US20100088303A1 (en) | 2008-10-03 | 2010-04-08 | Microsoft Corporation | Mining new words from a query log for input method editors |
US7698136B1 (en) | 2003-01-28 | 2010-04-13 | Voxify, Inc. | Methods and apparatus for flexible speech recognition |
US20100100377A1 (en) | 2008-10-10 | 2010-04-22 | Shreedhar Madhavapeddi | Generating and processing forms for receiving speech data |
US20100153219A1 (en) | 2008-12-12 | 2010-06-17 | Microsoft Corporation | In-text embedded advertising |
US20100169094A1 (en) * | 2008-12-25 | 2010-07-01 | Kabushiki Kaisha Toshiba | Speaker adaptation apparatus and program thereof |
US7752046B2 (en) | 2003-10-30 | 2010-07-06 | At&T Intellectual Property Ii, L.P. | System and method for using meta-data dependent language modeling for automatic speech recognition |
US20100179803A1 (en) | 2008-10-24 | 2010-07-15 | AppTek | Hybrid machine translation |
WO2010085773A1 (en) | 2009-01-24 | 2010-07-29 | Kontera Technologies, Inc. | Hybrid contextual advertising and related content analysis and display techniques |
US7778816B2 (en) | 2001-04-24 | 2010-08-17 | Microsoft Corporation | Method and system for applying input mode bias |
US7805299B2 (en) | 2004-03-01 | 2010-09-28 | Coifman Robert E | Method and apparatus for improving the transcription accuracy of speech recognition software |
US20100254521A1 (en) | 2009-04-02 | 2010-10-07 | Microsoft Corporation | Voice scratchpad |
US7831427B2 (en) | 2007-06-20 | 2010-11-09 | Microsoft Corporation | Concept monitoring in spoken-word audio |
US7848927B2 (en) | 2004-11-30 | 2010-12-07 | Panasonic Corporation | Speech recognition device and method of recognizing speech using a language model |
US20100318531A1 (en) | 2009-06-10 | 2010-12-16 | Microsoft Corporation | Smoothing clickthrough data for web search ranking |
US20100325109A1 (en) | 2007-02-09 | 2010-12-23 | Agency For Science, Technology And Rearch | Keyword classification and determination in language modelling |
US20110004462A1 (en) | 2009-07-01 | 2011-01-06 | Comcast Interactive Media, Llc | Generating Topic-Specific Language Models |
US7907705B1 (en) | 2006-10-10 | 2011-03-15 | Intuit Inc. | Speech to text for assisted form completion |
US20110066577A1 (en) | 2009-09-15 | 2011-03-17 | Microsoft Corporation | Machine Learning Using Relational Databases |
US20110077943A1 (en) | 2006-06-26 | 2011-03-31 | Nec Corporation | System for generating language model, method of generating language model, and program for language model generation |
US20110093265A1 (en) | 2009-10-16 | 2011-04-21 | Amanda Stent | Systems and Methods for Creating and Using Geo-Centric Language Models |
US7953692B2 (en) | 2007-12-07 | 2011-05-31 | Microsoft Corporation | Predicting candidates using information sources |
US20110137653A1 (en) | 2009-12-04 | 2011-06-09 | At&T Intellectual Property I, L.P. | System and method for restricting large language models |
US20110144992A1 (en) | 2009-12-15 | 2011-06-16 | Microsoft Corporation | Unsupervised learning using global features, including for log-linear model word segmentation |
US20110162035A1 (en) | 2009-12-31 | 2011-06-30 | Apple Inc. | Location-based dock for a computing device |
US8001130B2 (en) | 2006-07-25 | 2011-08-16 | Microsoft Corporation | Web object retrieval based on a language model |
US8005680B2 (en) | 2005-11-25 | 2011-08-23 | Swisscom Ag | Method for personalization of a service |
US8009678B2 (en) | 2005-03-17 | 2011-08-30 | Microsoft Corporation | System and method for generating a dynamic prioritized contact list |
US20110224982A1 (en) * | 2010-03-12 | 2011-09-15 | c/o Microsoft Corporation | Automatic speech recognition based upon information retrieval methods |
US20110231183A1 (en) | 2008-11-28 | 2011-09-22 | Nec Corporation | Language model creation device |
US8027973B2 (en) | 2008-08-04 | 2011-09-27 | Microsoft Corporation | Searching questions based on topic and focus |
US20110257974A1 (en) | 2010-04-14 | 2011-10-20 | Google Inc. | Geotagged environmental audio for enhanced speech recognition accuracy |
EP2383663A1 (en) | 2004-11-04 | 2011-11-02 | Microsoft Corporation | Projection of dependency structures from aligned corpora |
US8060373B2 (en) | 2007-03-21 | 2011-11-15 | At&T Intellectual Property I, L.P. | System and method of identifying contact information |
US20110288868A1 (en) | 2010-05-19 | 2011-11-24 | Lloyd Matthew I | Disambiguation of contact information using historical data |
US20110295590A1 (en) | 2010-05-26 | 2011-12-01 | Google Inc. | Acoustic model adaptation using geographic information |
US20120084235A1 (en) | 2010-09-30 | 2012-04-05 | Massachusetts Institute Of Technology | Structured prediction model learning apparatus, method, program, and recording medium |
US8296142B2 (en) | 2011-01-21 | 2012-10-23 | Google Inc. | Speech recognition using dock context |
US20120316877A1 (en) | 2011-06-12 | 2012-12-13 | Microsoft Corporation | Dynamically adding personalization features to language models for voice search |
WO2012170817A1 (en) | 2011-06-10 | 2012-12-13 | Google Inc. | Augmenting statistical machine translation with linguistic knowledge |
US8352245B1 (en) | 2010-12-30 | 2013-01-08 | Google Inc. | Adjusting language models |
US20130046619A1 (en) * | 2011-08-15 | 2013-02-21 | Daniel Alberto TRANSLATEUR | System and method for targeted advertising |
US20130110491A1 (en) | 2011-10-28 | 2013-05-02 | Microsoft Corporation | Discriminative learning of feature functions of generative type in speech translation |
WO2013083132A1 (en) | 2011-12-05 | 2013-06-13 | Copenhagen Business School | Translation method and computer programme for assisting the same |
US8473289B2 (en) | 2010-08-06 | 2013-06-25 | Google Inc. | Disambiguating input based on context |
US8521526B1 (en) | 2010-07-28 | 2013-08-27 | Google Inc. | Disambiguation of a spoken query term |
US8532994B2 (en) | 2010-08-27 | 2013-09-10 | Cisco Technology, Inc. | Speech recognition using a personal vocabulary and language model |
US8583416B2 (en) | 2007-12-27 | 2013-11-12 | Fluential, Llc | Robust information extraction from utterances |
WO2013192218A2 (en) | 2012-06-21 | 2013-12-27 | Google Inc. | Dynamic language model |
US20140200878A1 (en) | 2013-01-14 | 2014-07-17 | Xerox Corporation | Multi-domain machine translation model adaptation |
US8798984B2 (en) | 2011-04-27 | 2014-08-05 | Xerox Corporation | Method and system for confidence-weighted learning of factored discriminative language models |
US20140244261A1 (en) * | 2013-02-22 | 2014-08-28 | International Business Machines Corporation | Conversion of non-back-off language models for efficient speech decoding |
US8862468B2 (en) * | 2006-12-01 | 2014-10-14 | Microsoft Corporation | Leveraging back-off grammars for authoring context-free grammars |
US20150228279A1 (en) * | 2014-02-12 | 2015-08-13 | Google Inc. | Language models using non-linguistic context |
US9110880B1 (en) * | 2013-02-08 | 2015-08-18 | Google Inc. | Acoustically informed pruning for language modeling |
US20150332670A1 (en) * | 2014-05-15 | 2015-11-19 | Microsoft Corporation | Language Modeling For Conversational Understanding Domains Using Semantic Web Resources |
-
2015
- 2015-03-24 US US14/667,518 patent/US9412365B2/en active Active
Patent Citations (186)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4820059A (en) | 1985-10-30 | 1989-04-11 | Central Institute For The Deaf | Speech processing apparatus and methods |
US5768603A (en) | 1991-07-25 | 1998-06-16 | International Business Machines Corporation | Method and system for natural language translation |
US5805832A (en) | 1991-07-25 | 1998-09-08 | International Business Machines Corporation | System for parametric text to text language translation |
US5267345A (en) | 1992-02-10 | 1993-11-30 | International Business Machines Corporation | Speech recognition apparatus which predicts word classes from context and words from word classes |
US5632002A (en) | 1992-12-28 | 1997-05-20 | Kabushiki Kaisha Toshiba | Speech recognition interface system suitable for window systems and speech mail systems |
US5737724A (en) | 1993-11-24 | 1998-04-07 | Lucent Technologies Inc. | Speech recognition employing a permissive recognition criterion for a repeated phrase utterance |
US5638487A (en) | 1994-12-30 | 1997-06-10 | Purespeech, Inc. | Automatic speech recognition |
US5715367A (en) | 1995-01-23 | 1998-02-03 | Dragon Systems, Inc. | Apparatuses and methods for developing and using models for speech recognition |
US6839670B1 (en) | 1995-09-11 | 2005-01-04 | Harman Becker Automotive Systems Gmbh | Process for automatic control of one or more devices by voice commands or by real-time voice dialog and apparatus for carrying out this process |
US6397180B1 (en) | 1996-05-22 | 2002-05-28 | Qwest Communications International Inc. | Method and system for performing speech recognition based on best-word scoring of repeated speech attempts |
US5822729A (en) * | 1996-06-05 | 1998-10-13 | Massachusetts Institute Of Technology | Feature-based speech recognizer having probabilistic linguistic processor providing word matching based on the entire space of feature vectors |
US6021403A (en) | 1996-07-19 | 2000-02-01 | Microsoft Corporation | Intelligent user assistance facility |
US5822730A (en) | 1996-08-22 | 1998-10-13 | Dragon Systems, Inc. | Lexical tree pre-filtering in speech recognition |
US6167377A (en) | 1997-03-28 | 2000-12-26 | Dragon Systems, Inc. | Speech recognition language models |
US6119186A (en) | 1997-05-30 | 2000-09-12 | Texas Instruments Incorporated | Computer system with environmental manager for detecting and responding to changing environmental conditions |
US6182038B1 (en) | 1997-12-01 | 2001-01-30 | Motorola, Inc. | Context dependent phoneme networks for encoding speech information |
WO1999031654A3 (en) | 1997-12-12 | 1999-08-26 | Koninkl Philips Electronics Nv | Method of determining model-specific factors for pattern recognition, in particular for speech patterns |
US20020165714A1 (en) | 1997-12-12 | 2002-11-07 | U.S. Philips Corporation | Method of determining model-specific factors for pattern recognition, in particular for speech patterns |
US6317712B1 (en) | 1998-02-03 | 2001-11-13 | Texas Instruments Incorporated | Method of phonetic modeling using acoustic decision tree |
US6418431B1 (en) | 1998-03-30 | 2002-07-09 | Microsoft Corporation | Information retrieval and speech recognition based on language models |
US20050283364A1 (en) | 1998-12-04 | 2005-12-22 | Michael Longe | Multimodal disambiguation of speech recognition |
US7881936B2 (en) | 1998-12-04 | 2011-02-01 | Tegic Communications, Inc. | Multimodal disambiguation of speech recognition |
US20060247915A1 (en) | 1998-12-04 | 2006-11-02 | Tegic Communications, Inc. | Contextual Prediction of User Words and User Actions |
US6922669B2 (en) | 1998-12-29 | 2005-07-26 | Koninklijke Philips Electronics N.V. | Knowledge-based strategies applied to N-best lists in automatic speech recognition systems |
US6912499B1 (en) | 1999-08-31 | 2005-06-28 | Nortel Networks Limited | Method and apparatus for training a multilingual speech model set |
DE10045020A1 (en) | 1999-09-16 | 2001-05-03 | Denso Corp | User interface for exchanging information between navigation system and user, judges whether input voice signal is in predefined language based on which switching of predefined dictionaries is controlled |
US20050005240A1 (en) | 1999-10-05 | 2005-01-06 | Microsoft Corporation | Method and system for providing alternatives for text derived from stochastic input sources |
US6581033B1 (en) | 1999-10-19 | 2003-06-17 | Microsoft Corporation | System and method for correction of speech recognition mode errors |
US6778959B1 (en) | 1999-10-21 | 2004-08-17 | Sony Corporation | System and method for speech verification using out-of-vocabulary models |
US6446041B1 (en) | 1999-10-27 | 2002-09-03 | Microsoft Corporation | Method and system for providing audio playback of a multi-source document |
US20020111990A1 (en) | 1999-11-01 | 2002-08-15 | Wood Christopher Noah | Internet based message management system |
US7403888B1 (en) | 1999-11-05 | 2008-07-22 | Microsoft Corporation | Language input user interface |
US20040024583A1 (en) | 2000-03-20 | 2004-02-05 | Freeman Robert J | Natural-language processing system using a large corpus |
US6678415B1 (en) | 2000-05-12 | 2004-01-13 | Xerox Corporation | Document image decoding using an integrated stochastic language model |
US6539358B1 (en) | 2000-05-24 | 2003-03-25 | Delphi Technologies, Inc. | Voice-interactive docking station for a portable computing device |
US7149970B1 (en) | 2000-06-23 | 2006-12-12 | Microsoft Corporation | Method and system for filtering and selecting from a candidate list generated by a stochastic input method |
US20100049502A1 (en) | 2000-07-24 | 2010-02-25 | Microsoft Corporation | Method and system of generating reference variations for directory assistance data |
US20020078091A1 (en) | 2000-07-25 | 2002-06-20 | Sonny Vu | Automatic summarization of a document |
US20080221887A1 (en) | 2000-10-13 | 2008-09-11 | At&T Corp. | Systems and methods for dynamic re-configurable speech recognition |
US7451085B2 (en) | 2000-10-13 | 2008-11-11 | At&T Intellectual Property Ii, L.P. | System and method for providing a compensated speech recognition model for speech recognition |
US7043422B2 (en) | 2000-10-13 | 2006-05-09 | Microsoft Corporation | Method and apparatus for distribution-based language model adaptation |
US7996220B2 (en) | 2000-10-13 | 2011-08-09 | At&T Intellectual Property Ii, L.P. | System and method for providing a compensated speech recognition model for speech recognition |
US6876966B1 (en) | 2000-10-16 | 2005-04-05 | Microsoft Corporation | Pattern recognition training method and apparatus using inserted noise followed by noise reduction |
US20020087314A1 (en) | 2000-11-14 | 2002-07-04 | International Business Machines Corporation | Method and apparatus for phonetic context adaptation for improved speech recognition |
US20020062216A1 (en) | 2000-11-23 | 2002-05-23 | International Business Machines Corporation | Method and system for gathering information by voice input |
US20050216273A1 (en) | 2000-11-30 | 2005-09-29 | Telesector Resources Group, Inc. | Methods and apparatus for performing speech recognition over a network and using speech recognition results |
US20080027723A1 (en) | 2000-11-30 | 2008-01-31 | Verizon Services Organization, Inc. | Methods and apparatus for performing speech recognition over a network and using speech recognition results |
US20020087309A1 (en) | 2000-12-29 | 2002-07-04 | Lee Victor Wai Leung | Computer-implemented speech expectation-based probability method and system |
US7424428B2 (en) | 2001-01-10 | 2008-09-09 | Koninklijke Philips Electronics N.V. | Automatic dialog system with database language model |
US7366668B1 (en) | 2001-02-07 | 2008-04-29 | Google Inc. | Voice interface for a search engine |
US7027987B1 (en) | 2001-02-07 | 2006-04-11 | Google Inc. | Voice interface for a search engine |
WO2002073331A2 (en) | 2001-02-20 | 2002-09-19 | Semantic Edge Gmbh | Natural language context-sensitive and knowledge-based interaction environment for dynamic and flexible product, service and information search and presentation applications |
US6754626B2 (en) * | 2001-03-01 | 2004-06-22 | International Business Machines Corporation | Creating a hierarchical tree of language models for a dialog system based on prompt and dialog context |
US7778816B2 (en) | 2001-04-24 | 2010-08-17 | Microsoft Corporation | Method and system for applying input mode bias |
US6714778B2 (en) | 2001-05-15 | 2004-03-30 | Nokia Corporation | Context sensitive web services |
WO2002096070A2 (en) | 2001-05-24 | 2002-11-28 | Cellport Systems Inc. | Using identification information obtained from a portable phone |
US7526431B2 (en) | 2001-09-05 | 2009-04-28 | Voice Signal Technologies, Inc. | Speech recognition using ambiguous or phone key spelling and/or filtering |
US20040049388A1 (en) | 2001-09-05 | 2004-03-11 | Roth Daniel L. | Methods, systems, and programming for performing speech recognition |
US20030050778A1 (en) | 2001-09-13 | 2003-03-13 | Patrick Nguyen | Focused language models for improved speech input of structured documents |
US6959276B2 (en) | 2001-09-27 | 2005-10-25 | Microsoft Corporation | Including the category of environmental noise when processing speech signals |
US6950796B2 (en) | 2001-11-05 | 2005-09-27 | Motorola, Inc. | Speech recognition by dynamical noise model adaptation |
US20030149561A1 (en) | 2002-02-01 | 2003-08-07 | Intel Corporation | Spoken dialog system using a best-fit language model and best-fit grammar |
US7174288B2 (en) | 2002-05-08 | 2007-02-06 | Microsoft Corporation | Multi-modal entry of ideogrammatic languages |
US20030216919A1 (en) | 2002-05-13 | 2003-11-20 | Roushar Joseph C. | Multi-dimensional method and apparatus for automated language interpretation |
US20030236099A1 (en) | 2002-06-20 | 2003-12-25 | Deisher Michael E. | Speech recognition of mobile devices |
US20040043758A1 (en) | 2002-08-29 | 2004-03-04 | Nokia Corporation | System and method for providing context sensitive recommendations to digital services |
US7257532B2 (en) | 2002-09-18 | 2007-08-14 | Pioneer Corporation | Apparatus and method for speech recognition |
US20040138882A1 (en) | 2002-10-31 | 2004-07-15 | Seiko Epson Corporation | Acoustic model creating method, speech recognition apparatus, and vehicle having the speech recognition apparatus |
US7149688B2 (en) | 2002-11-04 | 2006-12-12 | Speechworks International, Inc. | Multi-lingual speech recognition with cross-language context modeling |
US20040098571A1 (en) | 2002-11-15 | 2004-05-20 | Falcon Stephen R. | Portable computing device-integrated appliance |
US20040230420A1 (en) | 2002-12-03 | 2004-11-18 | Shubha Kadambe | Method and apparatus for fast on-line automatic speaker/environment adaptation for speech/speaker recognition in the presence of changing environments |
US20040172258A1 (en) | 2002-12-10 | 2004-09-02 | Dominach Richard F. | Techniques for disambiguating speech input using multimodal interfaces |
US20090292529A1 (en) | 2002-12-18 | 2009-11-26 | At&T Corp. | System and method of providing a spoken dialog interface to a website |
US7698136B1 (en) | 2003-01-28 | 2010-04-13 | Voxify, Inc. | Methods and apparatus for flexible speech recognition |
US7383553B2 (en) | 2003-05-15 | 2008-06-03 | International Business Machines Corporation | Accessing a platform independent input method editor from an underlying operating system |
US20040243415A1 (en) | 2003-06-02 | 2004-12-02 | International Business Machines Corporation | Architecture for a speech input method editor for handheld portable devices |
US7392188B2 (en) | 2003-07-31 | 2008-06-24 | Telefonaktiebolaget Lm Ericsson (Publ) | System and method enabling acoustic barge-in |
US7424426B2 (en) | 2003-09-12 | 2008-09-09 | Sadaoki Furui And Ntt Docomo, Inc. | Noise adaptation system of speech model, noise adaptation method, and noise adaptation program for speech recognition |
US7634720B2 (en) | 2003-10-24 | 2009-12-15 | Microsoft Corporation | System and method for providing context to an input method |
US7370275B2 (en) | 2003-10-24 | 2008-05-06 | Microsoft Corporation | System and method for providing context to an input method by tagging existing applications |
US20050108017A1 (en) | 2003-10-27 | 2005-05-19 | John-Alexander Esser | Determining language for word recognition event |
US7752046B2 (en) | 2003-10-30 | 2010-07-06 | At&T Intellectual Property Ii, L.P. | System and method for using meta-data dependent language modeling for automatic speech recognition |
US8069043B2 (en) | 2003-10-30 | 2011-11-29 | At&T Intellectual Property Ii, L.P. | System and method for using meta-data dependent language modeling for automatic speech recognition |
US20050114474A1 (en) | 2003-11-20 | 2005-05-26 | International Business Machines Corporation | Automatic configuration of the network devices via connection to specific switch ports |
US20050187763A1 (en) | 2004-02-23 | 2005-08-25 | General Motors Corporation | Dynamic tuning of hands-free algorithm for noise and driving conditions |
US20050193144A1 (en) | 2004-02-26 | 2005-09-01 | Hassan Ahmed E. | Computing device with environment aware features |
US7805299B2 (en) | 2004-03-01 | 2010-09-28 | Coifman Robert E | Method and apparatus for improving the transcription accuracy of speech recognition software |
US20050246325A1 (en) | 2004-04-30 | 2005-11-03 | Microsoft Corporation | Method and system for recording and accessing usage of an item in a computer system |
US7310601B2 (en) | 2004-06-08 | 2007-12-18 | Matsushita Electric Industrial Co., Ltd. | Speech recognition apparatus and speech recognition method |
US20060004572A1 (en) | 2004-06-30 | 2006-01-05 | Microsoft Corporation | Homonym processing in the context of voice-activated command systems |
US20060004850A1 (en) | 2004-07-01 | 2006-01-05 | Chowdhury Abdur R | Analyzing a query log for use in managing category-specific electronic content |
US20060009974A1 (en) | 2004-07-09 | 2006-01-12 | Matsushita Electric Industrial Co., Ltd. | Hands-free voice dialing for portable and remote devices |
US20060035632A1 (en) | 2004-08-16 | 2006-02-16 | Antti Sorvari | Apparatus and method for facilitating contact selection in communication devices |
US7505894B2 (en) | 2004-11-04 | 2009-03-17 | Microsoft Corporation | Order model for dependency structure |
US20060095248A1 (en) | 2004-11-04 | 2006-05-04 | Microsoft Corporation | Machine translation system incorporating syntactic dependency treelets into a statistical framework |
US20060111896A1 (en) | 2004-11-04 | 2006-05-25 | Microsoft Corporation | Projecting dependencies to generate target language dependency structure |
EP2383663A1 (en) | 2004-11-04 | 2011-11-02 | Microsoft Corporation | Projection of dependency structures from aligned corpora |
US20060111891A1 (en) | 2004-11-04 | 2006-05-25 | Microsoft Corporation | Order model for dependency structure |
US20090271177A1 (en) | 2004-11-04 | 2009-10-29 | Microsoft Corporation | Extracting treelet translation pairs |
US7698124B2 (en) | 2004-11-04 | 2010-04-13 | Microsoft Corporaiton | Machine translation system incorporating syntactic dependency treelets into a statistical framework |
US7200550B2 (en) | 2004-11-04 | 2007-04-03 | Microsoft Corporation | Projecting dependencies to generate target language dependency structure |
US20060111892A1 (en) | 2004-11-04 | 2006-05-25 | Microsoft Corporation | Extracting treelet translation pairs |
US7577562B2 (en) | 2004-11-04 | 2009-08-18 | Microsoft Corporation | Extracting treelet translation pairs |
US7848927B2 (en) | 2004-11-30 | 2010-12-07 | Panasonic Corporation | Speech recognition device and method of recognizing speech using a language model |
US20060212288A1 (en) | 2005-03-17 | 2006-09-21 | Abhinav Sethy | Topic specific language models built from large numbers of documents |
US8009678B2 (en) | 2005-03-17 | 2011-08-30 | Microsoft Corporation | System and method for generating a dynamic prioritized contact list |
US20090083023A1 (en) | 2005-06-17 | 2009-03-26 | George Foster | Means and Method for Adapted Language Translation |
US20070060114A1 (en) | 2005-09-14 | 2007-03-15 | Jorey Ramer | Predictive text completion for a mobile communication facility |
US7672833B2 (en) | 2005-09-22 | 2010-03-02 | Fair Isaac Corporation | Method and apparatus for automatic entity disambiguation |
US20070078653A1 (en) * | 2005-10-03 | 2007-04-05 | Nokia Corporation | Language model compression |
US20100191685A1 (en) | 2005-10-13 | 2010-07-29 | Aureon Laboratories, Inc. | Methods and systems for feature selection in machine learning based on feature contribution and model fitness |
US7599893B2 (en) | 2005-10-13 | 2009-10-06 | Aureon Laboratories, Inc. | Methods and systems for feature selection in machine learning based on feature contribution and model fitness |
US8005680B2 (en) | 2005-11-25 | 2011-08-23 | Swisscom Ag | Method for personalization of a service |
US20070174040A1 (en) | 2006-01-23 | 2007-07-26 | Fuji Xerox Co., Ltd. | Word alignment apparatus, example sentence bilingual dictionary, word alignment method, and program product for word alignment |
US8069027B2 (en) | 2006-01-23 | 2011-11-29 | Fuji Xerox Co., Ltd. | Word alignment apparatus, method, and program product, and example sentence bilingual dictionary |
US20110077943A1 (en) | 2006-06-26 | 2011-03-31 | Nec Corporation | System for generating language model, method of generating language model, and program for language model generation |
US8001130B2 (en) | 2006-07-25 | 2011-08-16 | Microsoft Corporation | Web object retrieval based on a language model |
US7907705B1 (en) | 2006-10-10 | 2011-03-15 | Intuit Inc. | Speech to text for assisted form completion |
US7890326B2 (en) | 2006-10-13 | 2011-02-15 | Google Inc. | Business listing search |
US20080091435A1 (en) | 2006-10-13 | 2008-04-17 | Brian Strope | Business listing search |
US20080091443A1 (en) | 2006-10-13 | 2008-04-17 | Brian Strope | Business listing search |
US20080091406A1 (en) | 2006-10-16 | 2008-04-17 | Voicebox Technologies, Inc. | System and method for a cooperative conversational voice user interface |
US20080133228A1 (en) | 2006-11-30 | 2008-06-05 | Rao Ashwin P | Multimodal speech recognition system |
US8862468B2 (en) * | 2006-12-01 | 2014-10-14 | Microsoft Corporation | Leveraging back-off grammars for authoring context-free grammars |
US20080131851A1 (en) | 2006-12-04 | 2008-06-05 | Dimitri Kanevsky | Context-sensitive language learning |
US20080162117A1 (en) | 2006-12-28 | 2008-07-03 | Srinivas Bangalore | Discriminative training of models for sequence classification |
US20080188271A1 (en) | 2007-02-07 | 2008-08-07 | Denso Corporation | Communicating road noise control system, in-vehicle road noise controller, and server |
US7941189B2 (en) | 2007-02-07 | 2011-05-10 | Denso Corporation | Communicating road noise control system, in-vehicle road noise controller, and server |
US20100325109A1 (en) | 2007-02-09 | 2010-12-23 | Agency For Science, Technology And Rearch | Keyword classification and determination in language modelling |
US20080221902A1 (en) | 2007-03-07 | 2008-09-11 | Cerra Joseph P | Mobile browser environment speech processing facility |
US20090030687A1 (en) | 2007-03-07 | 2009-01-29 | Cerra Joseph P | Adapting an unstructured language model speech recognition system based on usage |
US20090030696A1 (en) * | 2007-03-07 | 2009-01-29 | Cerra Joseph P | Using results of unstructured language model based speech recognition to control a system-level function of a mobile communications facility |
US8060373B2 (en) | 2007-03-21 | 2011-11-15 | At&T Intellectual Property I, L.P. | System and method of identifying contact information |
US20080243481A1 (en) | 2007-03-26 | 2008-10-02 | Thorsten Brants | Large Language Models in Machine Translation |
US20130346059A1 (en) | 2007-03-26 | 2013-12-26 | Google Inc. | Large language models in machine translation |
US20080301112A1 (en) | 2007-05-29 | 2008-12-04 | Yahoo! Inc. | Enabling searching of user ratings and reviews using user profile location, and social networks |
US7831427B2 (en) | 2007-06-20 | 2010-11-09 | Microsoft Corporation | Concept monitoring in spoken-word audio |
US20090150160A1 (en) | 2007-10-05 | 2009-06-11 | Sensory, Incorporated | Systems and methods of performing speech recognition using gestures |
US7953692B2 (en) | 2007-12-07 | 2011-05-31 | Microsoft Corporation | Predicting candidates using information sources |
US20090164216A1 (en) | 2007-12-21 | 2009-06-25 | General Motors Corporation | In-vehicle circumstantial speech recognition |
US8583416B2 (en) | 2007-12-27 | 2013-11-12 | Fluential, Llc | Robust information extraction from utterances |
US20090210214A1 (en) | 2008-02-19 | 2009-08-20 | Jiang Qian | Universal Language Input |
US20090271188A1 (en) | 2008-04-24 | 2009-10-29 | International Business Machines Corporation | Adjusting A Speech Engine For A Mobile Computing Device Based On Background Noise |
US20090287681A1 (en) | 2008-05-14 | 2009-11-19 | Microsoft Corporation | Multi-modal search wildcards |
US20100004930A1 (en) | 2008-07-02 | 2010-01-07 | Brian Strope | Speech Recognition with Parallel Recognition Tasks |
US8027973B2 (en) | 2008-08-04 | 2011-09-27 | Microsoft Corporation | Searching questions based on topic and focus |
US20100088303A1 (en) | 2008-10-03 | 2010-04-08 | Microsoft Corporation | Mining new words from a query log for input method editors |
US20100100377A1 (en) | 2008-10-10 | 2010-04-22 | Shreedhar Madhavapeddi | Generating and processing forms for receiving speech data |
US20100179803A1 (en) | 2008-10-24 | 2010-07-15 | AppTek | Hybrid machine translation |
US20110231183A1 (en) | 2008-11-28 | 2011-09-22 | Nec Corporation | Language model creation device |
US20100153219A1 (en) | 2008-12-12 | 2010-06-17 | Microsoft Corporation | In-text embedded advertising |
US20100169094A1 (en) * | 2008-12-25 | 2010-07-01 | Kabushiki Kaisha Toshiba | Speaker adaptation apparatus and program thereof |
WO2010085773A1 (en) | 2009-01-24 | 2010-07-29 | Kontera Technologies, Inc. | Hybrid contextual advertising and related content analysis and display techniques |
US20100254521A1 (en) | 2009-04-02 | 2010-10-07 | Microsoft Corporation | Voice scratchpad |
US20100318531A1 (en) | 2009-06-10 | 2010-12-16 | Microsoft Corporation | Smoothing clickthrough data for web search ranking |
US20110004462A1 (en) | 2009-07-01 | 2011-01-06 | Comcast Interactive Media, Llc | Generating Topic-Specific Language Models |
US20110066577A1 (en) | 2009-09-15 | 2011-03-17 | Microsoft Corporation | Machine Learning Using Relational Databases |
US20110093265A1 (en) | 2009-10-16 | 2011-04-21 | Amanda Stent | Systems and Methods for Creating and Using Geo-Centric Language Models |
US20110137653A1 (en) | 2009-12-04 | 2011-06-09 | At&T Intellectual Property I, L.P. | System and method for restricting large language models |
US20110144992A1 (en) | 2009-12-15 | 2011-06-16 | Microsoft Corporation | Unsupervised learning using global features, including for log-linear model word segmentation |
US20110162035A1 (en) | 2009-12-31 | 2011-06-30 | Apple Inc. | Location-based dock for a computing device |
US20110224982A1 (en) * | 2010-03-12 | 2011-09-15 | c/o Microsoft Corporation | Automatic speech recognition based upon information retrieval methods |
US20110257974A1 (en) | 2010-04-14 | 2011-10-20 | Google Inc. | Geotagged environmental audio for enhanced speech recognition accuracy |
US20110288868A1 (en) | 2010-05-19 | 2011-11-24 | Lloyd Matthew I | Disambiguation of contact information using historical data |
US20110295590A1 (en) | 2010-05-26 | 2011-12-01 | Google Inc. | Acoustic model adaptation using geographic information |
US8521526B1 (en) | 2010-07-28 | 2013-08-27 | Google Inc. | Disambiguation of a spoken query term |
US8473289B2 (en) | 2010-08-06 | 2013-06-25 | Google Inc. | Disambiguating input based on context |
US8532994B2 (en) | 2010-08-27 | 2013-09-10 | Cisco Technology, Inc. | Speech recognition using a personal vocabulary and language model |
US20120084235A1 (en) | 2010-09-30 | 2012-04-05 | Massachusetts Institute Of Technology | Structured prediction model learning apparatus, method, program, and recording medium |
US8352246B1 (en) | 2010-12-30 | 2013-01-08 | Google Inc. | Adjusting language models |
US8352245B1 (en) | 2010-12-30 | 2013-01-08 | Google Inc. | Adjusting language models |
US8296142B2 (en) | 2011-01-21 | 2012-10-23 | Google Inc. | Speech recognition using dock context |
US8798984B2 (en) | 2011-04-27 | 2014-08-05 | Xerox Corporation | Method and system for confidence-weighted learning of factored discriminative language models |
US20120316862A1 (en) | 2011-06-10 | 2012-12-13 | Google Inc. | Augmenting statistical machine translation with linguistic knowledge |
WO2012170817A1 (en) | 2011-06-10 | 2012-12-13 | Google Inc. | Augmenting statistical machine translation with linguistic knowledge |
US20120316877A1 (en) | 2011-06-12 | 2012-12-13 | Microsoft Corporation | Dynamically adding personalization features to language models for voice search |
US20130046619A1 (en) * | 2011-08-15 | 2013-02-21 | Daniel Alberto TRANSLATEUR | System and method for targeted advertising |
US20130110491A1 (en) | 2011-10-28 | 2013-05-02 | Microsoft Corporation | Discriminative learning of feature functions of generative type in speech translation |
WO2013083132A1 (en) | 2011-12-05 | 2013-06-13 | Copenhagen Business School | Translation method and computer programme for assisting the same |
WO2013192218A2 (en) | 2012-06-21 | 2013-12-27 | Google Inc. | Dynamic language model |
US20140200878A1 (en) | 2013-01-14 | 2014-07-17 | Xerox Corporation | Multi-domain machine translation model adaptation |
US9110880B1 (en) * | 2013-02-08 | 2015-08-18 | Google Inc. | Acoustically informed pruning for language modeling |
US20140244261A1 (en) * | 2013-02-22 | 2014-08-28 | International Business Machines Corporation | Conversion of non-back-off language models for efficient speech decoding |
US20140244248A1 (en) * | 2013-02-22 | 2014-08-28 | International Business Machines Corporation | Conversion of non-back-off language models for efficient speech decoding |
US20150228279A1 (en) * | 2014-02-12 | 2015-08-13 | Google Inc. | Language models using non-linguistic context |
US20150332670A1 (en) * | 2014-05-15 | 2015-11-19 | Microsoft Corporation | Language Modeling For Conversational Understanding Domains Using Semantic Web Resources |
Non-Patent Citations (47)
Title |
---|
Allauzen and Riley, "Bayesian language model interpolation for mobile speech input," In Interspeech, 2011, pp. 1429-1432. |
Alumae and Kurimo, "Efficient estimation of maximum entropy language models with N-gram features: an SRILM extension," in Interspeech, 2010, pp. 1820-1823. |
Biadsy et al., "Backoff Inspired Features for Maximum Entropy Language Models", Proceedings of Interspeech, 2014, 5 pages. |
Bocchieri et al., "Use of geographical meta-data in ASR language and acoustic models", Acoustics Speech and Signal Processing (ICASSP), 2010 IEEE International Conference on IEEE, Mar. 14, 2010, pp. 5118-5121. |
Brants et al., "Large language models in machine translation," in In Proceedings of the Joint Conference on Empirical Methods in Natural Language Processing and Computational Natural Language Learning, pp. 858-867, Jun. 2007. |
Chen "Performance Prediction for Exponential Language Models", Technical Report RC 24671, IBM Research Division, 2008, 53 pages. |
Chen and Rosenfeld, "A survey of smoothing techniques for ME models," IEEE Transactions on Speech and Audio Processing, vol. 8, issue 1, pp. 37-50, Jan. 2000. |
Collins, "Log-Linear Models," retrieved on Jul. 21, 2015. Retrieved from the internet: URL 20 pages. |
Collins, "Log-Linear Models," retrieved on Jul. 21, 2015. Retrieved from the internet: URL<http://www.cs.columbia.edu/˜mcollins/loglinear.pdf> 20 pages. |
Della et al., "Adaptive Language Modeling Using Minimum Discriminant Estimation", paper submitted to the ICASSP92 Proceedings, 1992, 4 pages. |
Dhillon. 2001. Co-clustering documents and words using bipartite spectral graph partitioning. In: Proceedings of the seventh ACM SIGKDD international conference on Knowledge discovery and data mining, (KDD '01). ACM, New York, NY, USA, 269-274. http://doi.acm.org/10.1145/502512.502550. |
Frey et al., "ALGONQUIN: Iterating Laplace's Method to Remove Multiple Types of Acoustic Distortion for Robust Speech Recognition", EUROSPEECH 2001 Scandinavia, 7th European Conference on Speech Communication and Technology, Aalborg, Denmark, Sep. 3-7, 2001, [online] research.microsoft.com [retrieved on Nov. 23, 2010]. Retrieved from the Internet: . 4 pages. |
Frey et al., "ALGONQUIN: Iterating Laplace's Method to Remove Multiple Types of Acoustic Distortion for Robust Speech Recognition", EUROSPEECH 2001 Scandinavia, 7th European Conference on Speech Communication and Technology, Aalborg, Denmark, Sep. 3-7, 2001, [online] research.microsoft.com [retrieved on Nov. 23, 2010]. Retrieved from the Internet: <URL: http://research.microsoft.com/pubs/76516/2001-frey-eurospeech.pdf>. 4 pages. |
Hall et al., "MapReduce/Bigtable for distributed optimization," in Neural Information Processing Systems Workshop on Leaning on Cores, Clusters, and Clouds, 2010, pp. 1-7. |
Katz, "Estimation of probabilities from sparse data for the language model component of a speech recognizer," IEEE Transactions on Acoustics, Speech, and Signal Processing, vol. 35, No. 3, pp. 400-401, Mar. 1987. |
Kristjansson et al., "Super-Human Multi-Talker Speech Recognition: The IBM 2006 Speech Separation Challenge System", INTERSPEECH 2006: ICSLP; Proceedings of the Ninth International Conference on Spoken Language Process, Sep. 17-21, 2006, Pittsburgh, Pennsylvania, USA, Bonn, ISCA, 2006, 4 pages. |
Lau et al., "Trigger-based language models: a maximum entropy approach," in Proceedings of the International Conference on Acoustics, Speech, and Signal Processing (ICASSP), Apr. 1993, pp. 45-48. |
Lee et al. Search Result Clustering Using Label Language Model. IJCNLP 2008, The Third International Joint Conference on Natural Language Processing. Jan. 7-12, 2008, Hyderabad, India. |
Liu and Croft, "Cluster-based retrieval using language models," In: Proceedings of the 27th annual international ACM SIGIR conference on Research and development in information retrieval, (SIGIR '04), 2004, ACM, New York, NY, USA, 186-193. http://doi.acm.org/10.1145/1008992.1009026. |
McDonald et al., "Distributed training strategies for the structured perceptron," in Human Language Technologies: The 2010 Annual Conference of the North American Chapter of the Association for Computational Linguistics, Jun. 2010, pp. 456-464. |
Mohri et al. Weighted Finite-State Transducers in Speech Recognition, Computer Speech & Language, vol. 16, Issue 1, Jan. 2002, pp. 69-88. |
Niu et al., "Hogwild!: A lock-free approach to parallelizing stochastic gradient descent," in Advances in Neural Information Processing Systems 24, 2011, 9 pages. |
Roark et al., "Discriminative n-gram language modeling," Computer Speech &: Language, vol. 21, No. 2, pp. 373-392, Apr. 2007. |
Rosenfeld et al., "Whole-sentence exponential language models: a vehicle for linguistic-statistical integration," Computer Speech and Language, vol. 15, No. 1, pp. 55-73, Jan. 2001. |
Rosenfeld, "A maximum entropy approach to adaptive statistical language modeling," Computer Speech and Language, vol. 10, pp. 187-228, May 1996. |
Rosenfeld, "A whole sentence maximum entropy language model," in Proceedings of IEEE Workshop on Speech Recognition and Understanding, Dec. 1997, pp. 230-237. |
Sarikaya et al., "Joint Morphological-Lexical Language Modeling for Processing Morphologically Rich Languages With Application to Dialectal Arabic," Audio, Speech, and Language Processing, IEEE Transactions on, vol. 16, No. 7, pp. 1330-1339, Sep. 2008. |
Schalkwyk et al., "your word is my command: Google search by voice: A case study," in Advances in Speech Recognition. Springer, Aug. 2010, pp. 61-90. |
Shaik et al., "Feature-rich sub-lexical language models using a maximum entropy approach for German LVCSR," in Interspeech, 2013, pp. 3404-3408. |
Tsitsiklis et al., "Distributed asynchronous deterministic and stochastic gradient optimization algorithms," IEEE Transactions on Automatic Control, 31(9):803-812, Sep. 1986. |
Tsuruoka et al., "Stochastic gradient descent training for 11-regularized log-linear models with cumulative penalty," in Proceedings of the Joint Conference of the 47th Annual Meeting of the ACL, Aug. 2009, pp. 477-485. |
Vertanen, "An Overview of Discriminative Training for Speech Recognition," Technical Report, 2004, from http://www.inference.phy.cam.ac.uk/kv227/papers/Discriminative-Training.pdf., 14 pages. |
Wikipedia.com, "Gradient descent," Jan. 7, 2014 [retrieved on Feb. 10, 2014]. Retrieved from the Internet: URL. 8 pages. |
Wikipedia.com, "Gradient descent," Jan. 7, 2014 [retrieved on Feb. 10, 2014]. Retrieved from the Internet: URL< http://en.wikipedia.org/wiki/Gradient-descent>. 8 pages. |
Wikipedia.com, "Language Model," Dec. 22, 2013, [retrieved on Feb. 10, 2014]. Retrieved from the internet: URL. 3 pages. |
Wikipedia.com, "Language Model," Dec. 22, 2013, [retrieved on Feb. 10, 2014]. Retrieved from the internet: URL< http://en.wikipedia.org/wiki/Language-model>. 3 pages. |
Wikipedia.com, "Log-linear model," Apr. 6, 2013 [retrieved on Feb. 10, 2014]. Retrieved from the Internet: URL. 1 page. |
Wikipedia.com, "Log-linear model," Apr. 6, 2013 [retrieved on Feb. 10, 2014]. Retrieved from the Internet: URL< http://en.wikipedia.org/wiki/Log-linear-model>. 1 page. |
Wu and Khudanpur, "Building a topic-dependent maximum entropy model for very large corpora," in Acoustics, Speech, and Signal Processing (ICASSP), 2002 IEEE International Conference on, vol. 1. IEEE, May 2002, pp. I-777-I-780. |
Wu and Khudanpur, "Efficient training methods for maximum entropy language modeling," in INTERSPEECH, 2000, pp. 114-118. |
Wu, "Maximum Entropy Language Modeling with Non-Local Dependencies", dissertation submitted to the Johns Hopkins University in conformity with the requirements for the degree of Doctor of Philosophy, Baltimore, Maryland, 2002, 227 pages. |
Xu et al. 2007. Using social annotations to improve language model for information retrieval. In: Proceedings of the sixteenth ACM conference on Conference on information and knowledge management, (CIKM '07). ACM, New York, NY, USA, 1003-1006. http://doi.acm.org/10.1145. |
Xu et al., "Efficient subsampling for training complex language models," in Proceedings of the Conference on Empirical Methods in Natural Language Processing. Association for Computational Linguistics, 2011, pp. 1128-1136. |
Zha et al. Bipartite graph partitioning and data clustering. In Proceedings of the tenth international conference on Information and knowledge management (CIKM '01), Henrique Paques, Ling Liu, and David Grossman (Eds.). 2001, ACM, New York, NY, USA, 25-32. |
Zinkevich et al., "Parallelized stochastic gradient descent," in Advances in Neural Information Processing Systems 23, J. Lafferty, C. K. I. Williams, J. Shawe-Taylor, R Zemel, and A. Culotta, Eds., 2010, pp. 2595-2603. |
Zweig et al., "Structured Models for Joint Decoding of Repeated Utterances", INTERSPEECH 2008, 9th Annual Conference of the International Speech Communication Association, Brisbane, Australia, Sep. 22-26, 2008, 4 pages. |
Zweig, "New Methods for the Analysis of Repeated Utterances", INTERSPEECH 2009, 10th Annual Conference of the International Speech Communication Association, Brighton, United Kingdom, Sep. 6-10, 2009, 4 pages. |
Cited By (10)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10540963B2 (en) | 2017-02-02 | 2020-01-21 | International Business Machines Corporation | Input generation for classifier |
US11056102B2 (en) | 2017-02-02 | 2021-07-06 | International Business Machines Corporation | Input generation for classifier |
US10692502B2 (en) | 2017-03-03 | 2020-06-23 | Pindrop Security, Inc. | Method and apparatus for detecting spoofing conditions |
US11488605B2 (en) | 2017-03-03 | 2022-11-01 | Pindrop Security, Inc. | Method and apparatus for detecting spoofing conditions |
US10318632B2 (en) | 2017-03-14 | 2019-06-11 | Microsoft Technology Licensing, Llc | Multi-lingual data input system |
US11295231B2 (en) | 2017-05-12 | 2022-04-05 | Microsoft Technology Licensing, Llc | Systems, methods, and computer-readable media for parallel stochastic gradient descent with linear and non-linear activation functions |
US10446138B2 (en) | 2017-05-23 | 2019-10-15 | Verbit Software Ltd. | System and method for assessing audio files for transcription services |
US20210183372A1 (en) * | 2019-12-17 | 2021-06-17 | Spotify Ab | Masking systems and methods |
US11087744B2 (en) * | 2019-12-17 | 2021-08-10 | Spotify Ab | Masking systems and methods |
US11574627B2 (en) | 2019-12-17 | 2023-02-07 | Spotify Ab | Masking systems and methods |
Also Published As
Publication number | Publication date |
---|---|
US20150269934A1 (en) | 2015-09-24 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US9412365B2 (en) | Enhanced maximum entropy models | |
US11875789B2 (en) | Language models using domain-specific model components | |
US11646019B2 (en) | Minimum word error rate training for attention-based sequence-to-sequence models | |
US11227582B2 (en) | Asynchronous optimization for sequence training of neural networks | |
US11900915B2 (en) | Multi-dialect and multilingual speech recognition | |
US20230410796A1 (en) | Encoder-decoder models for sequence to sequence mapping | |
US9842592B2 (en) | Language models using non-linguistic context | |
US20210217408A1 (en) | Dialogue systems | |
US9805713B2 (en) | Addressing missing features in models | |
US10134394B2 (en) | Speech recognition using log-linear model | |
US9336771B2 (en) | Speech recognition using non-parametric models | |
Rosenfeld | Adaptive statistical language modeling: A maximum entropy approach | |
US20190189111A1 (en) | Method and Apparatus for Multi-Lingual End-to-End Speech Recognition | |
JP2020505650A (en) | Voice recognition system and voice recognition method | |
US11580145B1 (en) | Query rephrasing using encoder neural network and decoder neural network | |
CN113692616B (en) | Phoneme-based contextualization for cross-language speech recognition in an end-to-end model | |
Holter et al. | Maximum likelihood modelling of pronunciation variation | |
US7788094B2 (en) | Apparatus, method and system for maximum entropy modeling for uncertain observations | |
Enarvi et al. | Automatic speech recognition with very large conversational finnish and estonian vocabularies | |
US11568863B1 (en) | Skill shortlister for natural language processing | |
US20230104228A1 (en) | Joint Unsupervised and Supervised Training for Multilingual ASR | |
Chan | End-to-end speech recognition models | |
Biadsy et al. | Backoff inspired features for maximum entropy language models | |
Perraud et al. | N-Gram and N-Class Models for On line Handwriting Recognition. | |
Duta | Natural language understanding and prediction: from formal grammars to large scale machine learning |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:BIADSY, FADI;ROARK, BRIAN E.;REEL/FRAME:035937/0473Effective date: 20150324 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044566/0657Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 4 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 8TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1552); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 8 |
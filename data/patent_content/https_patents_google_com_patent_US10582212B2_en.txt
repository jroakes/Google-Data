US10582212B2 - Warped reference motion vectors for video compression - Google Patents
Warped reference motion vectors for video compression Download PDFInfo
- Publication number
- US10582212B2 US10582212B2 US15/846,295 US201715846295A US10582212B2 US 10582212 B2 US10582212 B2 US 10582212B2 US 201715846295 A US201715846295 A US 201715846295A US 10582212 B2 US10582212 B2 US 10582212B2
- Authority
- US
- United States
- Prior art keywords
- motion vector
- block
- motion
- warped
- current block
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active
Links
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/50—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using predictive coding
- H04N19/503—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using predictive coding involving temporal prediction
- H04N19/51—Motion estimation or motion compensation
- H04N19/513—Processing of motion vectors
- H04N19/517—Processing of motion vectors by encoding
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/169—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding
- H04N19/17—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding the unit being an image region, e.g. an object
- H04N19/176—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding the unit being an image region, e.g. an object the region being a block, e.g. a macroblock
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/50—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using predictive coding
- H04N19/503—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using predictive coding involving temporal prediction
- H04N19/51—Motion estimation or motion compensation
- H04N19/537—Motion estimation other than block-based
- H04N19/54—Motion estimation other than block-based using feature points or meshes
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/50—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using predictive coding
- H04N19/503—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using predictive coding involving temporal prediction
- H04N19/51—Motion estimation or motion compensation
- H04N19/537—Motion estimation other than block-based
- H04N19/543—Motion estimation other than block-based using regions
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/102—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the element, parameter or selection affected or controlled by the adaptive coding
- H04N19/103—Selection of coding mode or of prediction mode
- H04N19/109—Selection of coding mode or of prediction mode among a plurality of temporal predictive coding modes
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/134—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the element, parameter or criterion affecting or controlling the adaptive coding
- H04N19/157—Assigned coding mode, i.e. the coding mode being predefined or preselected to be further used for selection of another element or parameter
- H04N19/159—Prediction type, e.g. intra-frame, inter-frame or bidirectional frame prediction
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/169—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding
- H04N19/182—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding the unit being a pixel
Definitions
- Digital video streams may represent video using a sequence of frames or still images.
- Digital video can be used for various applications including, for example, video conferencing, high definition video entertainment, video advertisements, or sharing of user-generated videos.
- a digital video stream can contain a large amount of data and consume a significant amount of computing or communication resources of a computing device for processing, transmission or storage of the video data.
- Various approaches have been proposed to reduce the amount of data in video streams, including compression and other encoding techniques.
- One technique for compression uses a reference frame to generate a prediction block corresponding to a current block to be encoded. Differences between the prediction block and the current block can be encoded, instead of the values of the current block themselves, to reduce the amount of data encoded.
- This disclosure relates generally to encoding and decoding video data and more particularly relates to generating a warped reference motion vector for video compression.
- a method includes determining a reference frame for a current block, and, for each source block, determining a motion mode and a reference frame for the source block, responsive to determining that the motion mode for the source block is a translational motion mode and that the reference frame for the source block matches the reference frame for the current block, adding a motion vector used to predict the source block to a reference motion vector candidate list, and responsive to determining that the motion mode for the source block is the warped motion mode and that the reference frame for the source block matches the reference frame for the current block, generating a warped reference motion vector for the current block, and adding the warped reference motion vector to the reference motion vector candidate list.
- the method also includes using a reference motion vector from the reference motion vector candidate list to encode or decode a motion vector used to predict the current block.
- An apparatus includes a non-transitory storage medium or memory and a processor.
- the medium includes instructions executable by the processor to carry out a method including determining a reference frame of a current block, and, for one or more source blocks for the current block, determining a motion mode and a reference frame for the source block, responsive to determining that the motion mode for the source block is a translational motion mode and that the reference frame for the source block matches the reference frame for the current block, adding a motion vector used to predict the source block to a reference motion vector candidate list, and responsive to determining that the motion mode for the source block is the warped motion mode and that the reference frame for the source block matches the reference frame for the current block, generating a warped reference motion vector for the current block, and adding the warped reference motion vector to the reference motion vector candidate list.
- the method also includes using a reference motion vector of the reference motion vector candidate list to encode or decode a motion vector used to predict the current block.
- Another apparatus also includes a non-transitory storage medium or memory and a processor.
- the medium includes instructions executable by the processor to carry out a method including determining a reference frame for encoding a current block.
- the method also includes, for a previously-coded block adjacent to the current block, determining the motion mode of the previously-coded block, the motion mode comprising one of a translational motion mode and a warped motion mode, determining a reference frame used to encode the previously-coded block, comparing the motion mode of the previously-coded block to the warped motion mode to obtain a first comparison result, comparing the reference frame for encoding the current block to the reference frame used to encode the previously-coded block to obtain a second comparison result, and responsive to the first comparison result indicating that the motion mode of the previously-coded block is the warped motion mode, and the second comparison result indicating that the reference frame for encoding the current block is the reference frame used to encode the previously-coded block, calculating a warped reference motion vector for
- FIG. 1 is a schematic of a video encoding and decoding system.
- FIG. 2 is a block diagram of an example of a computing device that can implement a transmitting station or a receiving station.
- FIG. 3 is a diagram of a typical video stream to be encoded and subsequently decoded.
- FIG. 4 is a block diagram of an encoder according to implementations of this disclosure.
- FIG. 5 is a block diagram of a decoder according to implementations of this disclosure.
- FIG. 6 is a flowchart diagram of a process for generating a warped reference motion vector.
- FIG. 7 is a diagram that illustrates the process of FIG. 6 .
- a video stream can be compressed by a variety of techniques to reduce bandwidth required transmit or store the video stream.
- a video stream can be encoded into a bitstream, which involves compression, which is then transmitted to a decoder that can decode or decompress the video stream to prepare it for viewing or further processing. Compression of the video stream often exploits spatial and temporal correlation of video signals through spatial and/or motion-compensated prediction.
- Motion-compensated prediction may also be referred to as inter-prediction.
- Inter-prediction uses one or more motion vectors to generate a block (also called a prediction block) that resembles a current block to be encoded using previously encoded and decoded pixels. By encoding the motion vector(s), and the difference between the two blocks, a decoder receiving the encoded signal can re-create the current block.
- Each motion vector used to generate a prediction block in the inter-prediction process refers to a frame, i.e., a reference frame, other than a current frame.
- Reference frames can be located before or after the current frame in the sequence of the video stream, and may be frames that are reconstructed before being used as a reference frame.
- a forward reference frame is a frame used for forward prediction relative to the sequence
- a backward reference frame is a frame used for backward prediction relative to the sequence.
- One or more forward and/or backward reference frames can be used to encode or decode a block.
- the efficacy of a reference frame when used to encode or decode a block within a current frame can be measured based on a resulting signal-to-noise ratio or other measure of rate-distortion.
- the motion vector(s) for a block in motion-compensated prediction may be written into the encoded bitstream, taking a large portion of the total bitrate.
- a motion vector may be coded differentially. Namely, a motion vector is selected as a reference motion vector, and only a difference between the motion vector and the reference motion vector (also called the motion vector difference herein) is coded into the bitstream.
- the reference motion vector may be a motion vector of one of the neighboring blocks, for example. An accurate reference motion vector for a block improves coding efficiency.
- inter-prediction mode There may exist more than one inter-prediction mode.
- one available inter-prediction mode represents that the motion vector of the block is 0.
- ZEROMV mode there is no rate cost for encoding a motion vector.
- Another inter-prediction mode may represent that the motion vector of the block is the reference motion vector.
- REFMV mode there is no rate cost for encoding a motion vector.
- the motion vector for the block is not zero, and is different from the reference motion vector, the motion vector may be encoded using the reference motion vector. In this mode, encoding the motion vector difference generates a rate cost. This mode is referred to as a NEWMV mode herein.
- One process for finding a reference motion vector for a current block in a current frame includes collecting motion vectors from neighboring or adjacent blocks to the current block (e.g., in the scan order) and the collocated block(s) to the current block in a previous frame, and storing them in a list of motion vector candidates.
- the neighboring or adjacent blocks and the collocated block(s) may be referred to as source or reference blocks herein.
- Any number of ranking algorithms may be applied to the list to rank the motion vector candidates, and the reference motion vector for the current block may be selected based on the resulting ranking. For example, the motion vector candidate with the highest ranking score may be selected as the reference motion vector for the current block.
- a motion vector candidate may be ranked higher if the motion vector candidate is a dominant motion vector in the surrounding area of the current block, which means that motion vector candidate may be a better representative of the local motion field.
- a dominant motion vector may be one that is used by more source blocks, or more pixels of the source blocks, than other motion vectors.
- the size of a source block may be used to weight the motion vector for the ranking. The larger the source block is, the more dominant its motion vector is.
- the REFMV mode may be chosen such that the reference motion vector is used directly without generating any motion vector rate cost.
- the determination of whether the reference motion vector is close enough to the motion vector of the current block to be used in place of the determined motion vector may be made by calculating an error, such as a rate-distortion error. If the REFMV mode results in a smaller rate-distortion error than any other modes, the REFMV mode is selected such that no motion vector rate cost results.
- the NEWMV mode may have a lower rate-distortion error and be chosen.
- the new motion vector may be encoded by calculating a motion vector difference using the reference motion vector. Then, the motion vector difference is transmitted in the encoded bitstream to a decoder. Even where the reference motion vector is not close enough to the motion vector of the current block to be used in place of the current block, a relatively accurate reference motion vector can lower the bit rate needed for transmitting the motion vector difference.
- a translational motion mode is not capable of precisely describing more complicated motion, such as rotation, zooming, shear, etc.
- various warped motion models have been developed to implement a warped motion mode.
- One example of a warped motion model is an affine transformation that describes the inter-block motion.
- One technique to produce an affine transformation is found in U.S. Pat. No. 9,438,910, and other techniques are possible.
- U.S. Pat. No. 9,438,910 is incorporated herein in its entirety by reference.
- the decision of whether to use a translational motion mode or warped motion mode may be made based on which mode results in the lowest rate-distortion error, where the rate-distortion error for each mode represents the rate cost of encoding the block using the mode as compared to the distortion cost that results from the compression using the mode in a similar manner as to how the motion vector coding modes are compared. For example, if a block is encoded using a warped motion mode, then the parameters defined by the warped motion mode are used to generate a warped prediction block. When the warped motion mode is an affine transformation, then a set of affine parameters are computed and used to generate the warped prediction block. For a block with the warped motion mode, it may be assumed in some implementations that the motion vector of the block is the motion vector of its center point.
- the motion of a block is non-translational, that is, it is predicted using a warped reference mode
- its motion vector is likely to be different from those of its source motion vectors.
- the reference motion vector is one of these motion vectors, the reference motion vector is also likely to be different from the block's motion vector.
- the differences tend to be relatively large, so an encoder mostly chooses the NEWMV mode to encode the motion vector of a block under such circumstances.
- the NEWMV mode is the most expensive technique to encode a motion vector, as described above.
- warped reference motion vectors are described herein with initial reference to a system in which the teachings herein can be implemented.
- FIG. 1 is a schematic of a video encoding and decoding system 100 .
- a transmitting station 102 can be, for example, a computer having an internal configuration of hardware such as that described in FIG. 2 .
- the processing of the transmitting station 102 can be distributed among multiple devices.
- a network 104 can connect the transmitting station 102 and a receiving station 106 for encoding and decoding of the video stream.
- the video stream can be encoded in the transmitting station 102 and the encoded video stream can be decoded in the receiving station 106 .
- the network 104 can be, for example, the Internet.
- the network 104 can also be a local area network (LAN), wide area network (WAN), virtual private network (VPN), cellular telephone network or any other means of transferring the video stream from the transmitting station 102 to, in this example, the receiving station 106 .
- LAN local area network
- WAN wide area network
- VPN virtual private network
- the receiving station 106 in one example, can be a computer having an internal configuration of hardware such as that described in FIG. 2 . However, other suitable implementations of the receiving station 106 are possible. For example, the processing of the receiving station 106 can be distributed among multiple devices.
- an implementation can omit the network 104 .
- a video stream can be encoded and then stored for transmission at a later time to the receiving station 106 or any other device having a non-transitory storage medium or memory.
- the receiving station 106 receives (e.g., via the network 104 , a computer bus, and/or some communication pathway) the encoded video stream and stores the video stream for later decoding.
- a real-time transport protocol is used for transmission of the encoded video over the network 104 .
- a transport protocol other than RTP may be used, e.g., a Hypertext Transfer Protocol (HTTP) based video streaming protocol.
- HTTP Hypertext Transfer Protocol
- the transmitting station 102 and/or the receiving station 106 may include the ability to both encode and decode a video stream as described below.
- the receiving station 106 could be a video conference participant who receives an encoded video bitstream from a video conference server (e.g., the transmitting station 102 ) to decode and view and further encodes and transmits its own video bitstream to the video conference server for decoding and viewing by other participants.
- FIG. 2 is a block diagram of an example of a computing device 200 that can implement a transmitting station or a receiving station.
- the computing device 200 can implement one or both of the transmitting station 102 and the receiving station 106 of FIG. 1 .
- the computing device 200 can be in the form of a computing system including multiple computing devices, or in the form of one computing device, for example, a mobile phone, a tablet computer, a laptop computer, a notebook computer, a desktop computer, and the like.
- a CPU 202 in the computing device 200 can be a central processing unit.
- the CPU 202 can be any other type of device, or multiple devices, capable of manipulating or processing information now-existing or hereafter developed.
- the disclosed implementations can be practiced with one processor as shown, e.g., the CPU 202 , advantages in speed and efficiency can be achieved using more than one processor.
- a memory 204 in computing device 200 can be a read only memory (ROM) device or a random access memory (RAM) device in an implementation. Any other suitable type of storage device or non-transitory storage medium can be used as the memory 204 .
- the memory 204 can include code and data 206 that is accessed by the CPU 202 using a bus 212 .
- the memory 204 can further include an operating system 208 and application programs 210 , the application programs 210 including at least one program that permits the CPU 202 to perform the methods described here.
- the application programs 210 can include applications 1 through N, which further include a video coding application that performs the methods described here.
- Computing device 200 can also include a secondary storage 214 , which can, for example, be a memory card used with a mobile computing device. Because the video communication sessions may contain a significant amount of information, they can be stored in whole or in part in the secondary storage 214 and loaded into the memory 204 as needed for processing.
- a secondary storage 214 can, for example, be a memory card used with a mobile computing device. Because the video communication sessions may contain a significant amount of information, they can be stored in whole or in part in the secondary storage 214 and loaded into the memory 204 as needed for processing.
- the computing device 200 can also include one or more output devices, such as a display 218 .
- the display 218 may be, in one example, a touch sensitive display that combines a display with a touch sensitive element that is operable to sense touch inputs.
- the display 218 can be coupled to the CPU 202 via the bus 212 .
- Other output devices that permit a user to program or otherwise use the computing device 200 can be provided in addition to or as an alternative to the display 218 .
- the output device is or includes a display
- the display can be implemented in various ways, including by a liquid crystal display (LCD), a cathode-ray tube (CRT) display or light emitting diode (LED) display, such as an organic LED (OLED) display.
- LCD liquid crystal display
- CRT cathode-ray tube
- LED light emitting diode
- OLED organic LED
- the computing device 200 can also include or be in communication with an image-sensing device 220 , for example a camera, or any other image-sensing device 220 now existing or hereafter developed that can sense an image such as the image of a user operating the computing device 200 .
- the image-sensing device 220 can be positioned such that it is directed toward the user operating the computing device 200 .
- the position and optical axis of the image-sensing device 220 can be configured such that the field of vision includes an area that is directly adjacent to the display 218 and from which the display 218 is visible.
- the computing device 200 can also include or be in communication with a sound-sensing device 222 , for example a microphone, or any other sound-sensing device now existing or hereafter developed that can sense sounds near the computing device 200 .
- the sound-sensing device 222 can be positioned such that it is directed toward the user operating the computing device 200 and can be configured to receive sounds, for example, speech or other utterances, made by the user while the user operates the computing device 200 .
- FIG. 2 depicts the CPU 202 and the memory 204 of the computing device 200 as being integrated into one unit, other configurations can be utilized.
- the operations of the CPU 202 can be distributed across multiple machines (wherein individual machines can have one or more of processors) that can be coupled directly or across a local area or other network.
- the memory 204 can be distributed across multiple machines such as a network-based memory or memory in multiple machines performing the operations of the computing device 200 .
- the bus 212 of the computing device 200 can be composed of multiple buses.
- the secondary storage 214 can be directly coupled to the other components of the computing device 200 or can be accessed via a network and can comprise an integrated unit such as a memory card or multiple units such as multiple memory cards.
- the computing device 200 can thus be implemented in a wide variety of configurations.
- FIG. 3 is a diagram of an example of a video stream 300 to be encoded and subsequently decoded.
- the video stream 300 includes a video sequence 302 .
- the video sequence 302 includes a number of adjacent frames 304 . While three frames are depicted as the adjacent frames 304 , the video sequence 302 can include any number of adjacent frames 304 .
- the adjacent frames 304 can then be further subdivided into individual frames, e.g., a frame 306 .
- the frame 306 can be divided into a series of planes or segments 308 .
- the segments 308 can be subsets of frames that permit parallel processing, for example.
- the segments 308 can also be subsets of frames that can separate the video data into separate colors.
- a frame 306 of color video data can include a luminance plane and two chrominance planes.
- the segments 308 may be sampled at different resolutions.
- the frame 306 may be further subdivided into blocks 310 , which can contain data corresponding to, for example, 16 ⁇ 16 pixels in the frame 306 .
- the blocks 310 can also be arranged to include data from one or more segments 308 of pixel data.
- the blocks 310 can also be of any other suitable size such as 4 ⁇ 4 pixels, 8 ⁇ 8 pixels, 16 ⁇ 8 pixels, 8 ⁇ 16 pixels, 16 ⁇ 16 pixels, or larger. Unless otherwise noted, the terms block and macroblock are used interchangeably herein.
- FIG. 4 is a block diagram of an encoder 400 according to implementations of this disclosure.
- the encoder 400 can be implemented, as described above, in the transmitting station 102 such as by providing a computer software program stored in memory, for example, the memory 204 .
- the computer software program can include machine instructions that, when executed by a processor such as the CPU 202 , cause the transmitting station 102 to encode video data in the manner described in FIG. 4 .
- the encoder 400 can also be implemented as specialized hardware included in, for example, the transmitting station 102 .
- the encoder 400 may be a hardware encoder.
- the encoder 400 has the following stages to perform the various functions in a forward path (shown by the solid connection lines) to produce an encoded or compressed bitstream 420 using the video stream 300 as input: an intra/inter prediction stage 402 , a transform stage 404 , a quantization stage 406 , and an entropy encoding stage 408 .
- the encoder 400 may also include a reconstruction path (shown by the dotted connection lines) to reconstruct a frame for encoding of future blocks.
- the encoder 400 has the following stages to perform the various functions in the reconstruction path: a dequantization stage 410 , an inverse transform stage 412 , a reconstruction stage 414 , and a loop filtering stage 416 .
- Other structural variations of the encoder 400 can be used to encode the video stream 300 .
- respective frames 304 can be processed in units of blocks.
- respective blocks can be encoded using intra-frame prediction (also called intra-prediction) or inter-frame prediction (also called inter-prediction).
- intra-frame prediction also called intra-prediction
- inter-frame prediction also called inter-prediction
- a prediction block can be formed.
- intra-prediction a prediction block may be formed from samples in the current frame that have been previously encoded and reconstructed.
- inter-prediction a prediction block may be formed from samples in one or more previously constructed reference frames.
- the prediction block can be subtracted from the current block at the intra/inter prediction stage 402 to produce a residual block (also called a residual).
- the transform stage 404 transforms the residual into transform coefficients in, for example, the frequency domain using block-based transforms.
- the quantization stage 406 converts the transform coefficients into discrete quantum values, which are referred to as quantized transform coefficients, using a quantizer value or a quantization level. For example, the transform coefficients may be divided by the quantizer value and truncated.
- the quantized transform coefficients are then entropy encoded by the entropy encoding stage 408 .
- the entropy-encoded coefficients, together with other information used to decode the block, which may include for example the type of prediction used, transform type, motion vectors and quantizer value, are then output to the compressed bitstream 420 .
- the compressed bitstream 420 can be formatted using various techniques, such as variable length coding (VLC) or arithmetic coding.
- VLC variable length coding
- the compressed bitstream 420 can also be referred to as an encoded video stream or encoded video bitstream, and the terms will be used interchangeably herein.
- the reconstruction path in FIG. 4 can be used to ensure that the encoder 400 and a decoder 500 (described below) use the same reference frames to decode the compressed bitstream 420 .
- the reconstruction path performs functions that are similar to functions that take place during the decoding process that are discussed in more detail below, including dequantizing the quantized transform coefficients at the dequantization stage 410 and inverse transforming the dequantized transform coefficients at the inverse transform stage 412 to produce a derivative residual block (also called a derivative residual).
- the prediction block that was predicted at the intra/inter prediction stage 402 can be added to the derivative residual to create a reconstructed block.
- the loop filtering stage 416 can be applied to the reconstructed block to reduce distortion such as blocking artifacts.
- encoder 400 can be used to encode the compressed bitstream 420 .
- a non-transform based encoder can quantize the residual signal directly without the transform stage 404 for certain blocks or frames.
- an encoder can have the quantization stage 406 and the dequantization stage 410 combined in a common stage.
- FIG. 5 is a block diagram of a decoder 500 according to implementations of this disclosure.
- the decoder 500 can be implemented in the receiving station 106 , for example, by providing a computer software program stored in the memory 204 .
- the computer software program can include machine instructions that, when executed by a processor such as the CPU 202 , cause the receiving station 106 to decode video data in the manner described herein.
- the decoder 500 can also be implemented in hardware included in, for example, the transmitting station 102 or the receiving station 106 .
- the decoder 500 may be a hardware decoder.
- the decoder 500 similar to the reconstruction path of the encoder 400 discussed above, includes in one example the following stages to perform various functions to produce an output video stream 516 from the compressed bitstream 420 : an entropy decoding stage 502 , a dequantization stage 504 , an inverse transform stage 506 , an intra/inter prediction stage 508 , a reconstruction stage 510 , a loop filtering stage 512 and a post filtering stage 514 .
- Other structural variations of the decoder 500 can be used to decode the compressed bitstream 420 .
- the data elements within the compressed bitstream 420 can be decoded by the entropy decoding stage 502 to produce a set of quantized transform coefficients.
- the dequantization stage 504 dequantizes the quantized transform coefficients (e.g., by multiplying the quantized transform coefficients by the quantizer value), and the inverse transform stage 506 inverse transforms the dequantized transform coefficients to produce a derivative residual that can be identical to that created by the inverse transform stage 412 in the encoder 400 .
- the decoder 500 can use the intra/inter prediction stage 508 to create the same prediction block as was created in the encoder 400 , e.g., at the intra/inter prediction stage 402 .
- the prediction block can be added to the derivative residual to create a reconstructed block.
- the loop filtering stage 512 can be applied to the reconstructed block to reduce blocking artifacts.
- the post filtering stage 514 can be a deblocking filter that is applied to the reconstructed block to reduce blocking distortion, and the result is output as the output video stream 516 .
- the output video stream 516 can also be referred to as a decoded video stream, and the terms will be used interchangeably herein.
- Other variations of the decoder 500 can be used to decode the compressed bitstream 420 .
- the decoder 500 can produce the output video stream 516 without the post filtering stage 514 .
- FIG. 6 is a flowchart diagram of a method or process 600 for generating a reference motion vector for a block of a video frame.
- the process 600 can be implemented, for example, as a software program that may be executed by computing devices such as transmitting station 102 or receiving station 106 .
- the software program can include machine-readable instructions that may be stored in a memory such as the memory 204 or the secondary storage 214 , and that, when executed by a processor, such as CPU 202 , may cause the computing device to perform the process 600 .
- the process 600 may be implemented in whole or in part in the intra/inter prediction stage 402 of the encoder 400 and/or the intra/inter prediction stage 508 of the decoder 500 .
- the process 600 can be implemented using specialized hardware or firmware. Multiple processors, memories, or both, may be used.
- the process 600 determines a reference frame for a block, also referred to as the current block herein. Determining the reference frame for the current block may include selecting one reference frame of multiple available reference frames for predicting the current block.
- a reference frame buffer may store up to a defined number of available reference frames, such as four or eight reference frames.
- the reference frame buffer may store a LAST reference frame, corresponding to the last frame before the current frame in a video sequence, a GOLDEN reference frame, corresponding to an intra-predicted frame located before the current frame in the video sequence, and an alternate or alternative reference frame designated as ALTREF_FRAME.
- An alternative reference frame may be a frame of a video sequence that is distant from a current frame in a display order, but is encoded or decoded earlier than it is displayed.
- the alternative reference frame may be ten, twelve, or more (or fewer) frames after the current frame in a display order of the video sequence.
- Further alternative reference frames can be frames located nearer to the current frame in the display order.
- An alternative reference frame may not correspond directly to a frame in the sequence. Instead, the alternative reference frame may be generated using one or more frames having filtering applied, being combined together, or being both combined together and filtered.
- An alternative reference frame may not be displayed. Instead, it can be a frame or portion of a frame generated and transmitted for use only for prediction (i.e., it is omitted when the decoded sequence is displayed).
- a reference frame buffer may be able to store additional or fewer reference frames.
- the available spaces may store a second last frame (i.e., the first frame before the last frame) and/or a third last frame (i.e., a frame two frames before the last frame) as additional forward prediction reference frames (e.g., in addition to the LAST and GOLDEN reference frames).
- a backward frame may be stored as an additional backward prediction reference frame (e.g., in addition to the ALTREF_FRAME reference frame).
- the terms LAST, GOLDEN, ALTREF_FRAME, etc. may be referred to as reference frame identifiers herein.
- a source block is selected to determine a candidate reference motion vector.
- the source block may be a previously encoded neighboring block of the current block.
- the source block may be an adjacent block above, to the left of, above and to the left of, or above and to the right of the current block.
- the block above and to the left of the current block may also be referred to as an above-left block, while the block above and to the right of the current block may also be referred to as an above-right block.
- FIG. 7 a source block B for determining a candidate reference motion vector for the current block A is shown.
- a motion mode and motion information are determined for the selected source block.
- the motion mode may be a translational motion mode or a warped motion mode.
- a warped motion mode implementing an affine transformation motion model is described.
- the teachings herein may be used with any warped motion model.
- the motion information for the source block may include one or more motion vectors and an associated one or more reference frames. That is, if the selected source block is inter-predicted it has one or more motion vectors, each pointing to a respective reference frame. For this discussion, it is assumed that each source block uses only one motion vector for inter-prediction, but this is not necessary.
- Each motion vector and hence each reference frame of a source block may be processed as described herein.
- a query is made as to whether the reference frame of the source block that is determined at operation 606 is the same as the reference frame for the current block determined at operation 602 .
- the comparison of reference frames at operation 608 may be performed by comparing reference frame identifiers. For example, if the source block reference frame is designated as the LAST reference frame, and the current block reference frame is designated as the LAST reference frame, then the reference frames may be considered as matching. On the other hand, the reference frame buffer is updated for each frame. For this reason, at least one of the LAST, GOLDEN, or ALTREF_FRAME reference frames may not correspond to the same frames for the previous frame as the current frame when considering a source block that is a co-located block. In this case, the identifiers LAST, GOLDEN, ALTREF_FRAME, or otherwise may be compared. Alternatively, the frames that are identified as the LAST, GOLDEN, ALTREF_FRAME, or other reference frame for each of the current block and the source block can be compared to determine whether they match at operation 608 .
- the process 600 advances to operation 616 to determine whether additional source blocks need to be considered. If instead the reference frames match, the process 600 advances to operation 610 .
- a query is made as to whether the motion mode for the source block is the warped motion mode. If the source block motion mode is a translational motion mode, the process 600 advances to operation 612 . At operation 612 , the motion vector of the source block is added to the candidate list before the process 600 advances to operation 616 .
- the process 600 advances to operation 614 , where a warped reference motion vector is calculated and added to the candidate list.
- a warped reference motion vector may be described with reference to FIG. 7 .
- the warped reference motion vector is calculated for the center point 704 of the current block A.
- the center point 704 may or may not correspond to a pixel location (e.g., it may be a whole pixel or a sub-pel pixel position).
- the source block B is predicted using a warped motion mode in this example.
- the warped motion model of the warped motion mode may be used to compute the motion vector of the center point 704 of the current block A.
- the warped motion model is an affine transformation.
- the affine parameters of the source block B may be used to compute the motion vector of the center point 704 .
- the center point 704 may be selected, and their motions calculated. It is useful, but not necessary that the pixels be evenly spaced from the center point 704 . The pixels may be spaced on opposite sides of the center point 704 . Once their motions are calculated, the center point motion vector, and hence the warped reference motion vector may be determined by interpolation.
- two pixels 706 and 708 are selected.
- the pixel 706 has a pixel position or location of (x0, y0), and the pixel 706 has a pixel position or location of (x1, y1).
- (block_offset_x, block_offset_y) is the coordinate of the top-left pixel of the current block A as shown by the arrows 700 and 702 , respectively, w is the width of the current block A, and h is the height of the current block A.
- the center point is at (3.5, 3.5), which is not a full pixel location.
- i 0 and 1 (for the respective pixels 706 and 708 ), and a, b, c, d, e, and f are the affine parameters of the source block B.
- warped_reference_MV ⁇ (MV_ x 0 +MV_ x 1 )/2,(MV_ y 0 +MV_ y 1 )/2 ⁇ .
- warped_reference_MV is added to the candidate motion vector list for the current block A.
- the process advances to operation 616 to query whether there are more source blocks to consider. If there are more source blocks to consider, the process 600 returns to operation 604 so that the process 600 is repeated for the next source block. If there are no more source blocks to consider in response to the query at operation 616 , the process 600 ends.
- the candidate list is complete for the reference frame determined at operation 602 .
- a motion search for the current block in the reference frame determined at operation 602 (which also may be referred to as the current reference frame herein) may be performed.
- the process 600 may be repeated for some or all of the available reference frames such that each of the reference frames determined at operation 602 has a respective candidate list of reference motion vectors.
- the process 600 may be performed as part of a rate-distortion loop to select the best prediction mode for the blocks of a current frame.
- different intra-prediction modes may also be considered, along with prediction using the different reference frames.
- the candidate list for the reference frame may be ranked as discussed previously, and used to select the motion vector coding mode (e.g., ZEROMV mode, NEWMV mode, or REFMV mode) as whichever of the motion vector coding modes results in the lowest, e.g., rate-distortion, error for coding the motion vector.
- the motion vector coding mode e.g., ZEROMV mode, NEWMV mode, or REFMV mode
- teachings herein may be used for a compound prediction mode that has two or more motion vectors referring to respective reference frames, as well as for single predictors as described in detail above.
- different reference motion vectors may be used in the determination of the motion vector coding mode from respective reference frame candidate lists.
- a decoder can use the same process as the encoder to complete the candidate list and find the reference motion vector used to code the motion vector for the current block.
- determining the reference frame for the block at the operation 602 may include reading header information from a block header, a slice header, a frame header, or any combination of these headers that identifies the reference frame for the current block. The remainder of the operations of the process 600 are performed as previously described for the one or more reference frames used to encode the current block.
- a candidate list it may be used to decode the motion vector as indicated by the motion vector coding mode that may be read from a header, such as a block header, a slice header, a frame header, or any combination of these headers.
- the affine parameters for a current block may be obtained by a parameter search or be estimated based on motion vectors of nearby blocks. If one area in a frame obeys an affine transformation, then two blocks within that area may use a same set of affine parameters. Accordingly, if a source block (such as the neighbor block B) uses the same reference frame as the current block A, the current block A and the source block B both use a warped motion mode, and the current block A uses REFMV mode, it is possible to assign the affine parameters of the source block B to the current block A. This would not hurt coding efficiency, but such a step can speed up the encoder and decoder by not searching or estimating the affine parameters for the current block A.
- warped motion model information e.g., affine parameters
- the proposed warped reference motion vector strategy can provide a more accurate reference motion vector for the current block than directly using a source block motion vector when the source block exhibits warped motion.
- a block is very likely to choose the NEWMV mode under such circumstances.
- an encoder exhibits increased use of the REFMV mode. This shows that the teachings herein provide more accurate reference motion vectors and lower the bitrate cost. For a set of videos with camera motions, a 0.5% ⁇ 1+% bitrate reduction has been demonstrated.
- process 600 is depicted and described as a series of steps or operations. However, the steps or operations in accordance with this disclosure can occur in various orders and/or concurrently. Additionally, other steps or operations not presented and described herein may be used. Furthermore, not all illustrated steps or operations may be required to implement a method in accordance with the disclosed subject matter.
- encoding and decoding illustrate some examples of encoding and decoding techniques. However, it is to be understood that encoding and decoding, as those terms are used in the claims, could mean compression, decompression, transformation, or any other processing or change of data.
- example is used herein to mean serving as an example, instance, or illustration. Any aspect or design described herein as “example” is not necessarily to be construed as preferred or advantageous over other aspects or designs. Rather, use of the word “example” is intended to present concepts in a concrete fashion.
- the term “or” is intended to mean an inclusive “or” rather than an exclusive “or”. That is, unless specified otherwise, or clear from context, “X includes A or B” is intended to mean any of the natural inclusive permutations. That is, if X includes A; X includes B; or X includes both A and B, then “X includes A or B” is satisfied under any of the foregoing instances.
- Implementations of the transmitting station 102 and/or the receiving station 106 can be realized in hardware, software, or any combination thereof.
- the hardware can include, for example, computers, intellectual property (IP) cores, application-specific integrated circuits (ASICs), programmable logic arrays, optical processors, programmable logic controllers, microcode, microcontrollers, servers, microprocessors, digital signal processors or any other suitable circuit.
- IP intellectual property
- ASICs application-specific integrated circuits
- programmable logic arrays optical processors
- programmable logic controllers programmable logic controllers
- microcode microcontrollers
- servers microprocessors, digital signal processors or any other suitable circuit.
- signal processors should be understood as encompassing any of the foregoing hardware, either singly or in combination.
- signals and “data” are used interchangeably. Further, portions of the transmitting station 102 and the receiving station 106 do not necessarily have to be implemented in the same manner.
- the transmitting station 102 or the receiving station 106 can be implemented using a general purpose computer or general purpose processor with a computer program that, when executed, carries out any of the respective methods, algorithms and/or instructions described herein.
- a special purpose computer/processor can be utilized that contains other hardware for carrying out any of the methods, algorithms, or instructions described herein.
- the transmitting station 102 and the receiving station 106 can, for example, be implemented on computers in a video conferencing system.
- the transmitting station 102 can be implemented on a server and the receiving station 106 can be implemented on a device separate from the server, such as a hand-held communications device.
- the transmitting station 102 can encode content using an encoder 400 into an encoded video signal and transmit the encoded video signal to the communications device.
- the communications device can then decode the encoded video signal using a decoder 500 .
- the communications device can decode content stored locally on the communications device, for example, content that was not transmitted by the transmitting station 102 .
- Other suitable transmitting and receiving implementation schemes are available.
- the receiving station 106 can be a generally stationary personal computer rather than a portable communications device and/or a device including an encoder 400 may also include a decoder 500 .
- implementations of the present disclosure can take the form of a computer program product accessible from, for example, a computer-usable or computer-readable medium.
- a computer-usable or computer-readable medium can be any device that can, for example, tangibly contain, store, communicate, or transport the program for use by or in connection with any processor.
- the medium can be, for example, an electronic, magnetic, optical, electromagnetic, or a semiconductor device. Other suitable mediums are also available.
Abstract
Description
x 0=block_offset_x+w/2−1;
y 0=block_offset_y+h/2−1;
x 1=block_offset_x+w/2; and
y 1=block_offset_y+h/2.
x′ i =a*x i +b*y i +c; and
y′ i =d*x i +e*y i +f
{MV_x i,MV_y i }={x′ i −x i ,y′ i −y i) (1)
warped_reference_MV={(MV_x 0+MV_x 1)/2,(MV_y 0+MV_y 1)/2}.
Claims (20)
Priority Applications (4)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US15/846,295 US10582212B2 (en) | 2017-10-07 | 2017-12-19 | Warped reference motion vectors for video compression |
CN201880036784.XA CN110741641B (en) | 2017-10-07 | 2018-07-06 | Method and apparatus for video compression |
PCT/US2018/041073 WO2019070322A1 (en) | 2017-10-07 | 2018-07-06 | Warped reference motion vectors for video compression |
EP18746414.4A EP3622712A1 (en) | 2017-10-07 | 2018-07-06 | Warped reference motion vectors for video compression |
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US201762569530P | 2017-10-07 | 2017-10-07 | |
US15/846,295 US10582212B2 (en) | 2017-10-07 | 2017-12-19 | Warped reference motion vectors for video compression |
Publications (2)
Publication Number | Publication Date |
---|---|
US20190110063A1 US20190110063A1 (en) | 2019-04-11 |
US10582212B2 true US10582212B2 (en) | 2020-03-03 |
Family
ID=65993618
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US15/846,295 Active US10582212B2 (en) | 2017-10-07 | 2017-12-19 | Warped reference motion vectors for video compression |
Country Status (4)
Country | Link |
---|---|
US (1) | US10582212B2 (en) |
EP (1) | EP3622712A1 (en) |
CN (1) | CN110741641B (en) |
WO (1) | WO2019070322A1 (en) |
Cited By (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US11128860B2 (en) * | 2018-09-08 | 2021-09-21 | Beijing Bytedance Network Technology Co., Ltd. | Affine mode calculations for different video block sizes |
Families Citing this family (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10582212B2 (en) * | 2017-10-07 | 2020-03-03 | Google Llc | Warped reference motion vectors for video compression |
US20230090440A1 (en) * | 2021-09-21 | 2023-03-23 | Qualcomm Incorporated | Lossy Compressed Feedback For Multiple Incremental Redundancy Scheme (MIRS) |
US20230126830A1 (en) * | 2021-10-21 | 2023-04-27 | Tencent America LLC | Adaptive Resolution for Motion Vector Difference |
WO2023219616A1 (en) * | 2022-05-11 | 2023-11-16 | Google Llc | Local motion extension in video coding |
Citations (11)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20020034250A1 (en) * | 2000-05-24 | 2002-03-21 | Samsung Electronics Co., Ltd. | Motion vector coding method |
US20140286433A1 (en) * | 2011-10-21 | 2014-09-25 | Dolby Laboratories Licensing Corporation | Hierarchical motion estimation for video compression and motion analysis |
US9438910B1 (en) * | 2014-03-11 | 2016-09-06 | Google Inc. | Affine motion prediction in video coding |
US20170013279A1 (en) * | 2012-11-13 | 2017-01-12 | Ntel Corporation | Content adaptive dominant motion compensated prediction for next generation video coding |
WO2017118411A1 (en) | 2016-01-07 | 2017-07-13 | Mediatek Inc. | Method and apparatus for affine inter prediction for video coding system |
WO2017148345A1 (en) | 2016-03-01 | 2017-09-08 | Mediatek Inc. | Method and apparatus of video coding with affine motion compensation |
US20170332095A1 (en) * | 2016-05-16 | 2017-11-16 | Qualcomm Incorporated | Affine motion prediction for video coding |
US20180098087A1 (en) * | 2016-09-30 | 2018-04-05 | Qualcomm Incorporated | Frame rate up-conversion coding mode |
US20180098089A1 (en) * | 2016-10-04 | 2018-04-05 | Qualcomm Incorporated | Adaptive motion vector precision for video coding |
US20180098066A1 (en) * | 2016-10-05 | 2018-04-05 | Qualcomm Incorporated | Systems and methods of switching interpolation filters |
US20190110063A1 (en) * | 2017-10-07 | 2019-04-11 | Google Llc | Warped reference motion vectors for video compression |
Family Cites Families (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
WO2013168407A1 (en) * | 2012-05-09 | 2013-11-14 | Panasonic Corporation | Method of performing motion vector prediction, encoding and decoding methods, and apparatuses thereof |
JP2017083582A (en) * | 2015-10-26 | 2017-05-18 | Hoya株式会社 | Imaging device |
CN107046645B9 (en) * | 2016-02-06 | 2020-08-14 | 华为技术有限公司 | Image coding and decoding method and device |
-
2017
- 2017-12-19 US US15/846,295 patent/US10582212B2/en active Active
-
2018
- 2018-07-06 CN CN201880036784.XA patent/CN110741641B/en active Active
- 2018-07-06 EP EP18746414.4A patent/EP3622712A1/en active Pending
- 2018-07-06 WO PCT/US2018/041073 patent/WO2019070322A1/en unknown
Patent Citations (13)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20020034250A1 (en) * | 2000-05-24 | 2002-03-21 | Samsung Electronics Co., Ltd. | Motion vector coding method |
US20140286433A1 (en) * | 2011-10-21 | 2014-09-25 | Dolby Laboratories Licensing Corporation | Hierarchical motion estimation for video compression and motion analysis |
US20170013279A1 (en) * | 2012-11-13 | 2017-01-12 | Ntel Corporation | Content adaptive dominant motion compensated prediction for next generation video coding |
US9438910B1 (en) * | 2014-03-11 | 2016-09-06 | Google Inc. | Affine motion prediction in video coding |
US20190028731A1 (en) * | 2016-01-07 | 2019-01-24 | Mediatek Inc. | Method and apparatus for affine inter prediction for video coding system |
WO2017118411A1 (en) | 2016-01-07 | 2017-07-13 | Mediatek Inc. | Method and apparatus for affine inter prediction for video coding system |
WO2017148345A1 (en) | 2016-03-01 | 2017-09-08 | Mediatek Inc. | Method and apparatus of video coding with affine motion compensation |
US20190058896A1 (en) * | 2016-03-01 | 2019-02-21 | Mediatek Inc. | Method and apparatus of video coding with affine motion compensation |
US20170332095A1 (en) * | 2016-05-16 | 2017-11-16 | Qualcomm Incorporated | Affine motion prediction for video coding |
US20180098087A1 (en) * | 2016-09-30 | 2018-04-05 | Qualcomm Incorporated | Frame rate up-conversion coding mode |
US20180098089A1 (en) * | 2016-10-04 | 2018-04-05 | Qualcomm Incorporated | Adaptive motion vector precision for video coding |
US20180098066A1 (en) * | 2016-10-05 | 2018-04-05 | Qualcomm Incorporated | Systems and methods of switching interpolation filters |
US20190110063A1 (en) * | 2017-10-07 | 2019-04-11 | Google Llc | Warped reference motion vectors for video compression |
Non-Patent Citations (35)
Title |
---|
"Introduction to Video Coding Part 1: Transform Coding", Mozilla, Mar. 2012, 171 pp. 60, 116, 140, 145, 162, 170. |
"Overview VP7 Data Format and Decoder", Version 1.5, On2 Technologies, Inc., Mar. 28, 2005, 65 pp. |
"Overview VP7 Data Format and Decoder", Version 1.5, On2 Technologies, Inc., Mar. 28, 2005, 65. |
"VP6 Bitstream and Decoder Specification", Version 1.02, On2 Technologies, Inc., Aug. 17, 2006, 88 pp. |
"VP6 Bitstream and Decoder Specification", Version 1.02, On2 Technologies, Inc., Aug. 17, 2006, 88. |
"VP6 Bitstream and Decoder Specification", Version 1.03, On2 Technologies, Inc., Oct. 29, 2007, 95 pp. |
"VP6 Bitstream and Decoder Specification", Version 1.03, On2 Technologies, Inc., Oct. 29, 2007, 95. |
"VP8 Data Format and Decoding Guide, WebM Project", Google On2, Dec. 1, 2010, 103 pp. 13-14, 86. |
Bankoski et al, "VP8 Data Format and Decoding Guide draft-bankoski-vp8-bitstream-02", Network Working Group, Internet-Draft, May 18, 2011, 288 p. 122. |
Bankoski et al, "VP8 Data Format and Decoding Guide", Independent Submission RFC 6389, Nov. 2011, 305 p. 14. |
Bankoski, et al., "Technical Overview of VP8, An Open Source Video Codec for the Web", Jul. 11, 2011, 6 pp. |
Bankoski, et al., "Technical Overview of VP8, An Open Source Video Codec for the Web", Jul. 11, 2011, 6. |
Gary J. Sullivan et al., "Overview of the High Efficiency Video Coding (HEVC) Standard", IEEE Transactions on Circuits and Systems for Video Technology, vol. 22, No. 12, Dec. 1, 2012, pp. 1649-1668. |
International Search Report and Written Opinion in PCT/US2018/041073, dated Sep. 19, 2018, 16 pgs. |
Series H: Audiovisual and Multimedia Systems, Coding of moving video: Implementors Guide for H.264: Advanced video coding for generic audiovisual services, International Telecommunication Union, Jul. 30, 2010, 15 pp. |
Series H: Audiovisual and Multimedia Systems, Coding of moving video: Implementors Guide for H.264: Advanced video coding for generic audiovisual services, International Telecommunication Union, Jul. 30, 2010, 15. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services-Coding of moving video, Advanced video coding for generic audiovisual services, Amendment 1: Support of additional colour spaces and removal of the High 4:4:4 Profile, International Telecommunication Union, Jun. 2006, 16 pp. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services—Coding of moving video, Advanced video coding for generic audiovisual services, Amendment 1: Support of additional colour spaces and removal of the High 4:4:4 Profile, International Telecommunication Union, Jun. 2006, 16 pp. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services-Coding of moving video, Advanced video coding for generic audiovisual services, Amendment 1: Support of additional colour spaces and removal of the High 4:4:4 Profile, International Telecommunication Union, Jun. 2006, 16. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services—Coding of moving video, Advanced video coding for generic audiovisual services, Amendment 1: Support of additional colour spaces and removal of the High 4:4:4 Profile, International Telecommunication Union, Jun. 2006, 16. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services-Coding of moving video, Advanced video coding for generic audiovisual services, International Telecommunication Union, Version 11, Mar. 2009. 670 pp. 54, 175-176, 183-185, 455, 475, 495-501, 526-529. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services—Coding of moving video, Advanced video coding for generic audiovisual services, International Telecommunication Union, Version 11, Mar. 2009. 670 pp. 54, 175-176, 183-185, 455, 475, 495-501, 526-529. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services-Coding of moving video, Advanced video coding for generic audiovisual services, International Telecommunication Union, Version 12, Mar. 2010, 676 pp. 54, 173, 181-182, 458, 479, 499-505, 530-533. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services—Coding of moving video, Advanced video coding for generic audiovisual services, International Telecommunication Union, Version 12, Mar. 2010, 676 pp. 54, 173, 181-182, 458, 479, 499-505, 530-533. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services-Coding of moving video, Advanced video coding for generic audiovisual services, Version 1, International Telecommunication Union, May 2003, 282 pp. 41, 131, 138-140. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services—Coding of moving video, Advanced video coding for generic audiovisual services, Version 1, International Telecommunication Union, May 2003, 282 pp. 41, 131, 138-140. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services-Coding of moving video, Advanced video coding for generic audiovisual services, Version 3, International Telecommunication Union, Mar. 2005, 343 pp. 48, 154-155, 162-163. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services—Coding of moving video, Advanced video coding for generic audiovisual services, Version 3, International Telecommunication Union, Mar. 2005, 343 pp. 48, 154-155, 162-163. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services-Coding of moving video, Advanced video coding for generic audiovisual services, Version 8, International Telecommunication Union, Nov. 1, 2007, 564 pp. 55, 169, 177-178, 445, 462-467, 492-495. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services—Coding of moving video, Advanced video coding for generic audiovisual services, Version 8, International Telecommunication Union, Nov. 1, 2007, 564 pp. 55, 169, 177-178, 445, 462-467, 492-495. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services-Coding of moving video, Amendment 2: New profiles for professional applications, International Telecommunication Union, Apr. 2007, 75 pp. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services—Coding of moving video, Amendment 2: New profiles for professional applications, International Telecommunication Union, Apr. 2007, 75 pp. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services-Coding of moving video, Amendment 2: New profiles for professional applications, International Telecommunication Union, Apr. 2007, 75. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services—Coding of moving video, Amendment 2: New profiles for professional applications, International Telecommunication Union, Apr. 2007, 75. |
Yi-Wen Chen et al., "Improved Affine Motion Vector Coding", Joint Video Exploration Team (JVET) of ITU-T SG 16 WP 3 and ISO/ IEC JTC 1/SC 29/WG 11, 4th Meeting, Chengdu, CN, Oct. 15-21, 2016, No. JVET-D0128-v4 (Oct. 20, 2016, pp. 1-4. |
Cited By (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US11128860B2 (en) * | 2018-09-08 | 2021-09-21 | Beijing Bytedance Network Technology Co., Ltd. | Affine mode calculations for different video block sizes |
US11431965B2 (en) | 2018-09-08 | 2022-08-30 | Beijing Bytedance Network Technology Co., Ltd. | Affine mode in video coding and decoding |
US11729377B2 (en) | 2018-09-08 | 2023-08-15 | Beijing Bytedance Network Technology Co., Ltd | Affine mode in video coding and decoding |
Also Published As
Publication number | Publication date |
---|---|
US20190110063A1 (en) | 2019-04-11 |
CN110741641B (en) | 2021-09-21 |
WO2019070322A1 (en) | 2019-04-11 |
EP3622712A1 (en) | 2020-03-18 |
CN110741641A (en) | 2020-01-31 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US10555000B2 (en) | Multi-level compound prediction | |
US10142652B2 (en) | Entropy coding motion vector residuals obtained using reference motion vectors | |
US9374578B1 (en) | Video coding using combined inter and intra predictors | |
US10484707B1 (en) | Dynamic reference motion vector coding mode | |
US10116957B2 (en) | Dual filter type for motion compensated prediction in video coding | |
US10582212B2 (en) | Warped reference motion vectors for video compression | |
US20140098855A1 (en) | Lossless intra-prediction video coding | |
US11025950B2 (en) | Motion field-based reference frame rendering for motion compensated prediction in video coding | |
US20210021859A1 (en) | Same frame motion estimation and compensation | |
US20170272773A1 (en) | Motion Vector Reference Selection Through Reference Frame Buffer Tracking | |
US11343528B2 (en) | Compound prediction for video coding | |
US8908767B1 (en) | Temporal motion vector prediction | |
WO2019036080A1 (en) | Constrained motion field estimation for inter prediction | |
US10419777B2 (en) | Non-causal overlapped block prediction in variable block size video coding | |
US10448013B2 (en) | Multi-layer-multi-reference prediction using adaptive temporal filtering | |
US10412410B2 (en) | Compound motion-compensated prediction | |
US10499078B1 (en) | Implicit motion compensation filter selection | |
WO2023219616A1 (en) | Local motion extension in video coding | |
EP4352958A1 (en) | Reference motion vector candidate bank | |
WO2023172243A1 (en) | Multi-frame motion compensation synthesis for video coding |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
FEPP | Fee payment procedure |
Free format text: ENTITY STATUS SET TO UNDISCOUNTED (ORIGINAL EVENT CODE: BIG.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:MUKHERJEE, DEBARGHA;WANG, YUNQING;SIGNING DATES FROM 20171215 TO 20180122;REEL/FRAME:044688/0838 |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: NON FINAL ACTION MAILED |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: RESPONSE TO NON-FINAL OFFICE ACTION ENTERED AND FORWARDED TO EXAMINER |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: FINAL REJECTION MAILED |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: RESPONSE AFTER FINAL ACTION FORWARDED TO EXAMINER |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: ADVISORY ACTION MAILED |
|
STCV | Information on status: appeal procedure |
Free format text: NOTICE OF APPEAL FILED |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: NOTICE OF ALLOWANCE MAILED -- APPLICATION RECEIVED IN OFFICE OF PUBLICATIONS |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: PUBLICATIONS -- ISSUE FEE PAYMENT RECEIVED |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: PUBLICATIONS -- ISSUE FEE PAYMENT VERIFIED |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 4 |
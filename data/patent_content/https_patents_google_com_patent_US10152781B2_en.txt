US10152781B2 - Method for image processing using local statistics convolution - Google Patents
Method for image processing using local statistics convolution Download PDFInfo
- Publication number
- US10152781B2 US10152781B2 US15/461,284 US201715461284A US10152781B2 US 10152781 B2 US10152781 B2 US 10152781B2 US 201715461284 A US201715461284 A US 201715461284A US 10152781 B2 US10152781 B2 US 10152781B2
- Authority
- US
- United States
- Prior art keywords
- image
- regional
- tile
- histogram
- pixel
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active, expires
Links
- 238000000034 method Methods 0.000 title claims abstract description 40
- 238000012545 processing Methods 0.000 title description 21
- 230000006870 function Effects 0.000 claims abstract description 113
- 238000012546 transfer Methods 0.000 claims abstract description 60
- 238000001914 filtration Methods 0.000 claims abstract description 29
- 238000013507 mapping Methods 0.000 claims abstract description 8
- 238000009499 grossing Methods 0.000 abstract description 7
- 238000001514 detection method Methods 0.000 abstract description 3
- 235000019557 luminance Nutrition 0.000 description 15
- 230000000694 effects Effects 0.000 description 10
- 230000002146 bilateral effect Effects 0.000 description 9
- 230000014509 gene expression Effects 0.000 description 9
- 238000013459 approach Methods 0.000 description 7
- 230000008569 process Effects 0.000 description 7
- 125000001475 halogen functional group Chemical group 0.000 description 5
- 230000008901 benefit Effects 0.000 description 4
- 238000004422 calculation algorithm Methods 0.000 description 4
- 238000004364 calculation method Methods 0.000 description 3
- 239000003086 colorant Substances 0.000 description 3
- 230000001955 cumulated effect Effects 0.000 description 3
- 230000001419 dependent effect Effects 0.000 description 3
- 230000007812 deficiency Effects 0.000 description 2
- 210000004209 hair Anatomy 0.000 description 2
- 239000000203 mixture Substances 0.000 description 2
- 230000003044 adaptive effect Effects 0.000 description 1
- 230000006399 behavior Effects 0.000 description 1
- 230000009286 beneficial effect Effects 0.000 description 1
- 230000001413 cellular effect Effects 0.000 description 1
- 230000008859 change Effects 0.000 description 1
- 238000010276 construction Methods 0.000 description 1
- 238000012937 correction Methods 0.000 description 1
- 238000009795 derivation Methods 0.000 description 1
- 238000002474 experimental method Methods 0.000 description 1
- 210000000720 eyelash Anatomy 0.000 description 1
- 238000005286 illumination Methods 0.000 description 1
- 239000002245 particle Substances 0.000 description 1
- 230000009467 reduction Effects 0.000 description 1
- 238000005070 sampling Methods 0.000 description 1
- 230000003595 spectral effect Effects 0.000 description 1
- 230000001131 transforming effect Effects 0.000 description 1
- 230000007704 transition Effects 0.000 description 1
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06T—IMAGE DATA PROCESSING OR GENERATION, IN GENERAL
- G06T5/00—Image enhancement or restoration
- G06T5/40—Image enhancement or restoration by the use of histogram techniques
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F18/00—Pattern recognition
- G06F18/20—Analysing
- G06F18/22—Matching criteria, e.g. proximity measures
-
- G06K9/4661—
-
- G06K9/6201—
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06T—IMAGE DATA PROCESSING OR GENERATION, IN GENERAL
- G06T5/00—Image enhancement or restoration
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06T—IMAGE DATA PROCESSING OR GENERATION, IN GENERAL
- G06T5/00—Image enhancement or restoration
- G06T5/001—Image restoration
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06T—IMAGE DATA PROCESSING OR GENERATION, IN GENERAL
- G06T5/00—Image enhancement or restoration
- G06T5/001—Image restoration
- G06T5/002—Denoising; Smoothing
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06T—IMAGE DATA PROCESSING OR GENERATION, IN GENERAL
- G06T5/00—Image enhancement or restoration
- G06T5/007—Dynamic range modification
- G06T5/008—Local, e.g. shadow enhancement
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06T—IMAGE DATA PROCESSING OR GENERATION, IN GENERAL
- G06T5/00—Image enhancement or restoration
- G06T5/007—Dynamic range modification
- G06T5/009—Global, i.e. based on properties of the image as a whole
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06T—IMAGE DATA PROCESSING OR GENERATION, IN GENERAL
- G06T5/00—Image enhancement or restoration
- G06T5/20—Image enhancement or restoration by the use of local operators
-
- G06T5/70—
-
- G06T5/92—
-
- G06T5/94—
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06T—IMAGE DATA PROCESSING OR GENERATION, IN GENERAL
- G06T7/00—Image analysis
- G06T7/10—Segmentation; Edge detection
- G06T7/11—Region-based segmentation
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06T—IMAGE DATA PROCESSING OR GENERATION, IN GENERAL
- G06T7/00—Image analysis
- G06T7/60—Analysis of geometric attributes
-
- G06K2009/4666—
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06T—IMAGE DATA PROCESSING OR GENERATION, IN GENERAL
- G06T2207/00—Indexing scheme for image analysis or image enhancement
- G06T2207/20—Special algorithmic details
- G06T2207/20016—Hierarchical, coarse-to-fine, multiscale or multiresolution image processing; Pyramid transform
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06T—IMAGE DATA PROCESSING OR GENERATION, IN GENERAL
- G06T2207/00—Indexing scheme for image analysis or image enhancement
- G06T2207/20—Special algorithmic details
- G06T2207/20021—Dividing image into blocks, subimages or windows
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06T—IMAGE DATA PROCESSING OR GENERATION, IN GENERAL
- G06T2207/00—Indexing scheme for image analysis or image enhancement
- G06T2207/20—Special algorithmic details
- G06T2207/20024—Filtering details
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06T—IMAGE DATA PROCESSING OR GENERATION, IN GENERAL
- G06T2207/00—Indexing scheme for image analysis or image enhancement
- G06T2207/20—Special algorithmic details
- G06T2207/20024—Filtering details
- G06T2207/20028—Bilateral filtering
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06T—IMAGE DATA PROCESSING OR GENERATION, IN GENERAL
- G06T2207/00—Indexing scheme for image analysis or image enhancement
- G06T2207/20—Special algorithmic details
- G06T2207/20112—Image segmentation details
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06T—IMAGE DATA PROCESSING OR GENERATION, IN GENERAL
- G06T2207/00—Indexing scheme for image analysis or image enhancement
- G06T2207/20—Special algorithmic details
- G06T2207/20172—Image enhancement details
Definitions
- This disclosure relates to digital image filtering, based on applying 1D convolution kernels to 1D local histogram data, and is thereby very different from the conventional idea of applying 2D convolution kernels to 2D image data.
- This image filtering domain is to enhance local contrast in an image.
- One conventional approach of doing this is to spread the values of the image signal so that the lowest appearing value is forced to 0.0 and the highest appearing value is forced to 1.0. If this is done for the entire image, this is an old, well-established approach. This can also be done locally, that is tile-by-tile, which is also not a novel approach.
- Another approach tries to find a local upper bound and a local lower bound of the image signal, which can be understood as a locally dependent “lowest value” and a locally dependent “highest value”, so that the image signal is then spread so that the lower boundary is set to 0.0 and the upper boundary is set to 1.0.
- This system creates artifacting and may take a long time to process.
- edge preserving smoothing filters There is a high demand in the field of image processing for edge preserving smoothing filters.
- An old, known filter of this kind is the median filter, as it leaves strong edges in the image without blurring them, while small details are erased.
- Another representative filter of the class of edge preserving smoothing is the bilateral filter, which is a derivation of the Gaussian blur filter. It has a wide usage for photographic and analytic image processing. Its downside is that a fast and efficient implementation is not easily possible.
- the invention surmounts these deficiencies in the prior art by providing a method for using 1D-convolution of histogram data to construct fast and efficient image filters.
- the histogram-convolution based image enhancements of the invention can be performed with minimal memory and processing requirements, and make extensive and fast use of a large range of filters.
- bilateral histogram equalization is a histogram equalization that spreads the image signal to span a range from 0.0 to 1.0 within the context of local objects in an image, that is for every pixel a lower boundary is established concerning only the peak of the local histogram that this pixel belongs to, and a higher boundary is established in similar fashion.
- 1D convolutions on 1D histogram data this can be done without explicitly determining said boundaries; instead, an equation is provided in direct form that directly treats the signal so that each object in the image spans a contrast range of 0.0 to 1.0. This is not merely a formal difference, it also leads to different results, as pixel neighborhood issues dont play a role in this approach, and the computation is also faster.
- An advantage of the system disclosed herein is that an edge-preserving smoothing filter can be implemented where, again, pixel neighborhood issues play no role and therefore many artifact problems are eliminated.
- the EPS filter introduced in this disclosure does again function on the idea of applying 1D convolution kernels to 1D histogram data. In its results it compares to a bilateral filter, while the processing herein takes place very fast, and full flexibility with respect to the convolution in signal domain is possible, unlike other fast embodiments.
- This disclosure also describes a large amount of other filters using the said philosophy of 1D convolution kernels on 1D statistical image data in order to create a Tile Transfer Function, also called a Region Transfer Function, that can be used to enhance an image.
- a Tile Transfer Function also called a Region Transfer Function
- Many of these filters would be difficult to conceive or to implement without the system disclosed herein. For instance, an edge-preserving smoothing filter is easily implemented with this concept.
- Other applications include HDR tone mapping, edge invariant gradient or entropy detection, image upsampling, mapping coarse data to fine data, and more. Since mostly 1D kernels are computed on histogram data, only little processing power is required, so that all filters in this disclosure run in linear time.
- a method for filtering a digital image comprising a first plurality of pixels, comprising segmenting the first plurality of pixels into a first plurality of regions; computing a first plurality of regional histograms by calculating a regional histogram corresponding to each region in the first plurality of regions; computing a first plurality of regional transfer functions by calculating for each region in the first plurality of regions a regional transfer function comprising a convolution of the corresponding regional histogram with a first convolution kernel; deriving an image transfer function by interpolation of two or more of the first plurality of regional transfer functions; and filtering the digital image by applying the image transfer function to each of the first plurality of pixels.
- the first plurality of pixels may comprise the entire digital image.
- the regions may be chosen so that they do not overlap, and each pixel is contained within a single region.
- interpolation comprises selecting a pixel having a luminosity value from a first region of the first plurality of regions; computing a plurality of single value results by inputting the selected pixel's luminosity value into each of a second plurality of regional transfer functions, said second plurality including regional transfer functions corresponding to regions not comprising the selected pixel; and interpolating a resulting value for the selected pixel as a function of the plurality of single value results.
- the first convolution kernel could be a Gaussian function.
- the first convolution kernel is one-dimensional.
- the regional transfer function may also be a function of a second convolution comprising the convolution of the corresponding regional histogram with a second convolution kernel.
- the first convolution kernel is a Gaussian function
- the second convolution kernel is a product of a Gaussian function and a step function.
- the second convolution may optionally be weighted by pixel luminosity.
- the regional histograms may be function of luminosity, or of other characteristics such as pixel difference, color, depth along a z-axis, or of saturation.
- Another embodiment for filtering a digital image comprising a first plurality of pixels is provided, each pixel having a luminosity value and being within a neighborhood comprising a second plurality of pixels, the neighborhood having an extent, comprising selecting a pixel from the first plurality of pixels; calculating a new luminosity value for the selected pixel as a function of the ratio of the number of pixels in the neighborhood that fulfill a given condition to the total number of pixels in the neighborhood, the condition comprising a luminance comparison against said pixel; and repeating the calculating step until the luminosity values of each of the first plurality of pixels has been calculated.
- the first plurality of pixels could comprise the entire digital image.
- the extent of the neighborhood is defined by a distance function, such as a spatial distance, a vector difference, or a colormetrical distance.
- the pixel numbers in the ratio may be weighted, such that pixels with a low distance to the selected pixel receiving a high weight and pixels with a high distance to the selected pixel receiving a low weight.
- a program storage device readable by a machine, tangibly embodying a program of instructions executable by the machine to perform method steps to transform a digital image comprising a first plurality of pixels is also provided.
- FIG. 1 is a representation of one embodiment of the methods of the invention.
- FIG. 2 is a representation of a digital image in which a histogram has been found for a portion of the image.
- FIG. 3 is graph showing the relationship of the histogram to the edge preserving filter.
- FIG. 4 is a set of representations of digital images showing the result of applying different filters.
- FIG. 5 is a set of three representations of a digital image (left), showing the comparison of a prior art highlights filter (middle) and a bilateral histogram equalization according to the invention (right).
- FIG. 6 is an example of a three-dimensional histogram.
- FIG. 7 illustrates how equation 30 can be imagined within the signal domain.
- tile transfer function or region transfer function
- regions can have dimensions of 5 ⁇ 5 pixels up to 1 ⁇ 3rd of the image dimensions, depending on the application.
- a so-called tile transfer function or region transfer function, is found so that if an image has 100 tiles, we will compute 100 local transfer functions.
- These functions are then used to map, for instance, input luminosities to output luminosities.
- the tile transfer functions need to be interpolated when they are applied to the final image.
- FIG. 1 illustrates this concept.
- the image I is separated into tiles I 1,1 . . . I X,Y . . . I MaxX,MaxY .
- a histogram is computed for each tile.
- a tile transfer function ⁇ (x) is derived from the histogram.
- an interpolation takes place between the tile transfer functions and the resulting pixels are computed.
- J x,y Interpolation( ⁇ X ⁇ 1,Y ⁇ 1 , ⁇ X+1,Y+1 ) (I x,y ).
- step (2) and step (3) convolution kernels are applied to the histograms in order to obtain the tile transfer functions.
- 2D convolution kernels are applied to 2D image data
- 1D convolution kernels are applied to 1D histogram data. This introduces new possibilities for image filtering, while the same time much less processing power is required, since the convolution is performed on a much smaller data set.
- the calculation of the tile transfer functions requires less operations than the image has pixels, so the most processing intense steps are the calculation of the histograms (2) and the application of the tile transfer functions (4), which are both linear.
- Some of the filters introduced in this disclosure are an Edge Preserving Smoothing filter, a Bilateral Histogram Equalization filter, useful as a HDR tone mapper, an Edge-Ignoring Entropy Detector, a filter to map coarse data onto fine data, and a filter to measure soft image gradients, invariant to strong edges.
- LSC Low-Systems for Mobile Communications
- tile histogram when finding the histogram of a small portion in an image, let's say I aX . . . aX+a ⁇ 1,aY . . . aY+a ⁇ 1 it is much more likely that the tile histogram will provide more insights, as the smaller histogram is more likely to contain only one, two, three or four objects. So the assumption can be made that tile histograms in an image have fewer and more clearly defined peaks. A tile histogram is shown in FIG. 2 .
- a basic LSC filter is applying a blur within the LSC filter domain, therefore it is a good introduction to LSC filtering.
- ⁇ X,Y,i is constant for i and varies only from tile to tile, providing an average for each tile contents.
- Equation 4 above divides a blurred version of h ⁇ Id, that is, a histogram where its entries are multiplied with its index, by a blurred version of the histogram itself.
- ⁇ gauss denotes a 1D-convolution with a Gaussian filter.
- equation 4 is in its idea identical to equation 2, with the difference that the average calculated for every i is constrained within the signal domain.
- Equation 4 Applying equation 4 to every pixel in the image will result in a detail reduction per tile.
- ⁇ EPS a tile transfer function, or briefly TTF. This function, if applied to each pixel in the tile, will reduce details.
- ⁇ EPS dashed line
- h( ) solid line
- the center of these peaks coincides with the identity (dotted line). This basically means that image areas belonging to one peak are smoothed by the TTF, where the average of the original values is about identical to the average of the smoothened areas.
- Prior art solutions include calculating a local histogram for every pixel, while the present invention performs an interpolation between the tile transfer functions.
- an interpolation could for instance be:
- ⁇ X,Y ( ) we denote ⁇ X,Y ( ) as the TTF of a given tile (X, Y), while we will denote ⁇ tilde over ( ⁇ ) ⁇ x,y ( ) as the already interpolated function that varies from pixel to pixel. Note that when Gaussian kernels are used for the histogram convolution as well as for the spatial interpolation, ⁇ tilde over ( ⁇ ) ⁇ x,y (i) will be smooth with respect to variations of x, y and i.
- the process shown herein provides a fast way for EPS filtering at a speed of O(n), since the creation of the histograms h X,Y requires a single pixel-read operation for each pixel in the image.
- Creation of the tile transfer function TTF for instance as in equation 4, requires almost no processing time, as it is performed on 1D data, which is typically much less data than the image data.
- the values found in the TTF of 2 ⁇ 2, 3 ⁇ 3 or 5 ⁇ 5 adjacent tiles need to be interpolated, which consumes the most processing time, but still can be performed in linear time.
- the LSC framework provides for a fast method to determine how “rare” a pixel's value is within its neighborhood. While determining the rarity of a single pixel color within an image is easy, determining the same value for all pixels within a certain neighborhood in efficient time and based on robust statistics isn't. With the following TTF:
- f rarity ⁇ ( X , Y , i ) log ⁇ 1 ( h X , Y ⁇ blur ) ⁇ ( i ) ( 6 )
- tile transfer function provides a filter for extracting the high pass out of an image while strong edges are ignored. Typically, this will extract the structure of an image (fine branches in a tree, fur of an animal, fine cloud structures) while not providing extreme values for strong edges (like the transition from a building to the sky). Similarly, the tile transfer function
- ⁇ is the standard deviation of the superimposed filter, so that generally ⁇ i ⁇ . This means that ⁇ defines the ‘window’ in which an entropy can be detected, that is:
- sums of pixel neighbor differences are divided by the amount of pixels of that color, where both again are convolved with a 1D blurring filter.
- the Entropy can be used to modify an image. For instance, the image can be made more pleasing by lightening those areas that have a high entropy and darkening the others. Imagine a person being photographed against a sky, where the sky has a low entropy and the person has a high entropy—accentuating the person by increasing his/her brightness while darkening the background will make the image more pleasing.
- u( ) is defined as earlier in this document, for instance, u( ) can be a square root. This will ensure that the equalization will affect mostly those areas with low values in the histogram; in other words: the function above will modify the histogram so that gaps between the histogram's peaks will be filled up, while peaks remain peaks of about the same shape, leading to more natural structures.
- equation 12 tile-wise as shown in equation 2 (calculating tiles of histograms) and 5 (interpolating between transfer functions) will result to a locally adaptive histogram equalization. Note that we suggest for better effects a large tile size in the image, such as 10%-20% of the image dimensions.
- f ⁇ ( r ) ⁇ 0 r ⁇ ( u ⁇ ( h ) ⁇ exp ⁇ ( - 1 / 2 ⁇ ( i - r ) 2 ⁇ ) ) ⁇ ( i ) ⁇ di ⁇ 0 1 ⁇ ( u ⁇ ( h ) ⁇ exp ⁇ ( - 1 / 2 ⁇ ( i - r ) 2 ⁇ ) ) ⁇ ( i ) ⁇ di ⁇ 256 ( 13 )
- the convolution kernel leftgauss is meant to be a Gaussian kernel where all values to the right of its center are forced to zero. This can be done by a product of the Gaussian function and a step function with zero for all positive values. Of course, in analogous fashion a rightgauss kernel could be constructed with a step function with zero for all negative values, and then inverted.
- the idea of the above given equations is to detect for a given pixel's luminosity i if it belongs to the lower, middle or higher part of its peak in the histogram.
- the Gauss functions are used to fade out remote, unwanted peaks, and then the integral of the area to the left of i is divided by the entire integral. That provides information how the input luminosity i relates to the luminosities of the entire peak.
- equations 13 and 14 are examples of functions that may be used to calculate a new luminosity value of a selected pixel as a function of the ratio of the number of pixels in the neighborhood that fulfill a given condition to the total number of pixels in the neighborhood.
- the condition in this case comprises a luminance comparison, in which the function selects for pixels that are brighter (or darker) than the selected pixel.
- the neighborhood could be chosen as appropriate, and the extent of the neighborhood could be defined with a distance function.
- the distance function could comprise one or more of a spatial distance, a vector difference, or a colormetrical distance.
- the distance function could be used to weight the number of pixels, so that pixels with a low distance to the selected pixel receive a high weight and pixels with a high distance to the selected pixel receive a low weight. Note that in the LSC system, the convolution of the histogram data with a 1D kernel is one fast way to weight pixels based on the abovementioned distance with respect to luminance. All or part of the image could be processed by using these equations repeatedly.
- FIG. 5 shows a digital image (left) that has been filtered with a prior art highlights and shadows correction (center), and a bilateral histogram equalization according to the present invention (right).
- a fundamental difference between this HDR tone mapper and the majority of prior art tone mappers is that conventional tone mappers try to relate a pixel to its surrounding average luminosity, namely the “adaption luminance.” Said adaption luminance is a scalar value and carries no information about the local structure. This tone mapper puts each pixel not only into relation to an average luminance, but in relation to the entire surrounding peak, including its center and its broadness.
- h G ( ) and h B ( ) can be calculated in a similar way.
- the three functions h R , h G and h B hold now accumulated luminances, categorized by the depth value d, where the histogram C holds accumulated pixel counts per tile, categorized by the depth value d.
- ⁇ depthblur,R,X,Y will now produce a blurred value for the red channel for the current tile X, Y for each depth d.
- the calculation of the green and blue channel is equivalent. For instance, if the current tile X, Y may contain a red candle at 5 cm distance from the camera, while containing a blue background at 15 cm from the camera, then ⁇ depthblur,X,Y (5) will deliver the average of the candle's red pixels, while ⁇ depthblur,X,Y (15) will deliver the average of the background.
- the size of the Gaussian kernel in equation 5 can be varied based upon the current pixel's depth D x,y , while the Gaussian kernel in equation 17 may be varied, for instance to achieve that objects at 5 cm and 15 cm distance from the camera will not blend into one another, while objects at 105 cm and 115 cm distance from the camera actually do blend into one another.
- the Gaussian kernel does not drop to zero, that is the Gaussian bell curve is always >0. (Note that this is not the case with many pseudo-Gaussian filters which are often used for speed reasons).
- This characteristic of the Gaussian function means that sparse, positive datasets will also not contain any zeros after being convolved with a Gaussian function. Of course, this can only be observed when floating point numbers are used in the implementation.
- the tile size can be reduced dramatically. For instance, with a tile size of 4 ⁇ 4 pixels, the histogram won't have more than 16 entries, 256-16 or more will remain empty. However, even if such a sparse histogram is used, functions like ⁇ EPS or ⁇ 3DBlur will be defined for the domain of [0 . . . 255] and they will be smooth. Therefore the filters herein work as well with small tile sizes.
- tile transfer functions suggested in this disclosure can be evaluated for parameters not occurring in the image. So for instance, ⁇ depthblur can be evaluated for every location in the image and for every 3D depth D. This means that we have a volumetric information for every spatial position of the image suggesting a “most likely color.” For instance, imagine again an image with a red candle in front of a blue wall, the candle at 5 cm distance and the wall at 15 cm distance, and imagine that the pixel coordinate (100,100) is in the middle of the candle.
- a manifold that will be a smooth surface within the 3D space that does not have holes and that will suggest a location of a surface within the 3D space even for those locations in the image that were not recorded, e.g., the wall behind the candle, or the backside of the candle. Note, though, that the precision of the routine is limited to a, a being the tile size.
- equations 20 and 17 we will have information for likely-to-exist surfaces and for most-likely colors at the location of those surfaces. This will allow us to rotate the recorded 3D image by a few degrees and to inpaint the then missing regions.
- I x,y fine denote the fine image data and I x,y rough the trivial upsampled rough channel.
- I x,y in the fine resolution. As in the above the image is divided into tiles.
- ⁇ f2r might be understood as the average rough channel value belonging to a given fine channel value on a specific tile. Equation (22) is very similar to (4). The only difference is the we distribute averaged rough channel data instead of averaged fine channel data.
- equation 21 can be used to map the poor 3D data to the fine color/luminance data.
- a camera recording other spectral information with lower precision than the visible light bands can use said algorithm to map the rough data to the fine data.
- this band can be used to map the rough, visible data to the fine data.
- Randomness does not necessarily need to mean lower resolution, it can also mean that the rough data have a greater expected signal error (noise) or spatial error (distortion), or all of the three.
- I the input image
- ⁇ a conventionally interpolated image (for instance bilinear)
- ⁇ having more pixels than I
- Î our desired result, that is an image of the same dimensions of ⁇ but with less of a blurry-edges effect.
- (x, y) is a coordinate in I
- (x′, y′) is the corresponding coordinate in ⁇ and ⁇ .
- ⁇ EPS needs to be derived from the original image I as in equation 4. This will ensure that only the original image's pixels with the coordinate's (x, y) will contribute to the TTF ⁇ EPS , so that ⁇ EPS will plateau along the peaks of the original image's histogram. Therefore, if ⁇ EPS is applied to the newly interpolated pixels of ⁇ , gray-level pixels will be transformed towards the peaks dominant in the original image.
- This section deals with enhancements to the LSC filtering that apply to most of the filters introduced in section 2.
- FIG. 6 shows such a three-dimensional histogram, where pixel counts are not mapped solely against their luminance, but against Luminance and two chrominances. Convolution needs to take place in three directions, which doesn't introduce any additional magnitudes of processing power, since the Gaussian filter is separable. However, due to memory efficiency we suggest to limit the dimensions of a 3D histogram to 6-12 entries for the color directions and to 20-100 entries for each luminance. Then, to avoid artifacting, during readout of the histogram a bilinear interpolation in three directions is suggested.
- TTF like ⁇ EPS ( ) or equations 13, 9 and 10 are capable of putting a “‘focus’” on a certain band of luminosity.
- ⁇ EPS an average value for each band of luminosity is found (the band being defined by the 1D gauss filter). This can be refined by using a 3D histogram. Then the operations work on a local neighborhood as well as on a confined color space, being confined by luminance and chrominance.
- the TTF will be able to perform a filtering operation specific to one color, region and luminosity, while ignoring other colors in the same region and of the same luminosity. For instance, if equation 13 is implemented with a 3D histogram, the local, bilateral equalization can be performed individually for the blue sky and individually for the green meadow, even if both have the same luminosity. Or with respect to entropy finding, if a 3D histogram is used, the presence of same-luminosity but differently colored objects will not affect the detection of the entropy of a given object.
- kappa is a measure for the likelihood that an image pixel's color is representative of an image feature opposed to a blurry edge between two features.
- Another solution is to process the TTFs value by value and, while processing each TTF, ensuring that the derivative of the TTF is within an interval of [a, b], such as [0.25, 4]. This proves to be a helpful method to avoid extreme or negative contrasts. As the results may be (unwantedly) different depending on whether the TTF is passed from left-to-right or from right-to-left, it is preferable to compute the result in both directions and interpolate in between the two results. Typically, all TTFs of an image have much fewer entries than the image has pixels, so processing resources are not an issue.
- LSC Filter Domain we use the language LSC Filter Domain to describe the class of the filters found herein. Unlike filters being applied to images' Fourier components (Frequency Domain), wavelet components (Wavelet Domain) or gradients (Gradient Domain), the filters provided in this disclosure are not being applied to the image in a different, bijective representation of itself. Therefore the conventional model of (1) transforming the image into a complete, different representation of the original image, (2) applying filters to the coefficients of the new representation, and (3) converting the image back does not hold true for the LSC filter domain. However, we still decided to name the concept provided in this disclosure a “filter domain,” since the suggested technique allows us to:
- I x ′ , y ′ ′ ⁇ x , y ⁇ ⁇ I x , y ⁇ g ⁇ ( ⁇ ( x , y ) - ( x ′ , y ′ ) ⁇ ) ⁇ g ⁇ ( ⁇ I ⁇ ( x , y ) - I ⁇ ( x ′ , y ′ ) ⁇ ) ) . ( 28 )
- I x , y ′ ⁇ x ′ , y ′ ⁇ ⁇ I ⁇ ( x ′ , y ′ ) ⁇ I ⁇ ( x , y ) ⁇ I ⁇ ( x , y ) ⁇ g ( ⁇ ( x , y ) - ( x ′ , y ′ ) ⁇ ) ⁇ g ⁇ ( ⁇ I ⁇ ( x , y ) - I ⁇ ( x ′ , y ′ ) ⁇ ) ⁇ x ′ , y ′ ⁇ I ⁇ ( x , y ) ⁇ g ⁇ ( ⁇ ( x , y ) - ( x ′ , y ′ ) ⁇ ) ⁇ g ⁇ ( ⁇ I ⁇ ( x , y ) - I ⁇ ( x ′ , y ′ ) ⁇ ) (
- FIG. 7 illustrates how equation 30 can be imagined within the signal domain: The average luminosity of the lower half of the depicted sphere is divided by the average luminosity of all pixels within the sphere.
- the pixels are to be understood as a “particle cloud,” where a position of a pixel is defined by its spatial coordinates and its luminosity.
- This invention is not limited to particular hardware described herein, and any hardware presently existing or developed in the future that permits processing of digital images using the method disclosed can be used, including for example, a digital camera system, or a phone enabled cellular telephone.
- a program storage device readable by a machine tangibly embodying a program of instructions executable by the machine to perform the steps described herein. This could be, for example, a computer readable medium.
- memory block refers to any possible computer-related image storage structure known to those skilled in the art, including but not limited to RAM, processor cache, hard drive, or combinations of those, including dynamic memory structures.
- the methods and application program interface disclosed will be embodied in a program of instructions (not shown) either by coding in a high level language.
- Any currently existing or future developed program storage device suitable for reading by a machine can be used to store the programs embodying the afore-described interface, methods and algorithms, including, but not limited to hard drives, floppy disks, digital tape, flash cards, compact discs, and DVD's.
- the program storage device can comprise more than one device, such as two linked hard drives. This invention is not limited to the particular hardware used herein, and any hardware currently existing or developed in the future that permits image processing can be used.
- tile histogram and regional histogram As used herein, the terms tile histogram and regional histogram, tile transfer function and regional histogram function, and interpolated tile transfer function and image transfer function, are, respectively, synonyms.
Abstract
Description
- I is the original image.
- İ and Ï are processing results of applying a filter to I.
- J is typically the resulting image.
- (x, y) denote a pixel coordinate, Ix,y and Jx,y denote pixels within I and J.
- a will denote the edge length of an image tile, the tile size being a×a.
- (X, Y) denote the coordinate of an image tile.
- i denotes a pixel intensity.
- hX,Y( ) denotes a histogram of the tile at (X, Y). Sometimes we will omit the indices, so that a tile histogram is noted as h( ).
- ƒX,Y( ) will denote a tile transfer function.
- {tilde over (ƒ)}x,y( ) is an interpolated tile transfer function for the pixel (x, y).
- Id stands for the identity function Id(t)=t.
- ∘ stands for the convolution operator.
- gauss stands for a Gaussian kernel, often being 1D in this disclosure.
- blur stands for a blurring kernel, for instance a Gaussian or box filter.
- ∇ is the gradient operator, being
2 LSC Filtering
contains cumulated data of all image features, that is, hi provides the amount of pixels of the intensity i. Note that δ( ) is an operator evaluating to 1 if its expression is true, and zero otherwise. However, finding such a histogram h is often worthless, as one will find all features of an image, being often hundreds of objects and shades, combined in one histogram.
I aX . . . aX+a−1,aY . . . aY+a−1
it is much more likely that the tile histogram will provide more insights, as the smaller histogram is more likely to contain only one, two, three or four objects. So the assumption can be made that tile histograms in an image have fewer and more clearly defined peaks. A tile histogram is shown in
J x,y=ƒ(┌x/a┐,┌y/a┐,I x,y) (3)
-
- bilinear works fast and well, but not superb
- cosine can create artifacts in soft gradients
- bicubic works mediocre
- Gaussian (see equation 5) works optimal, even if interpolation takes place on as few as 5×5 or even 3×3 tiles.
-
- separate the image into tiles of dimensions a×a;
- calculate local statistics (e.g., a histogram) for each of said tiles;
- derive TTF from the local statistics of each tile, for instance by applying convolution filters to the histograms;
- interpolate between TTF of adjacent tiles; and
- apply the interpolated TTF to the image.
ƒentropy,X,Y(h X,Y ,i)=σi (9)
with σi being the standard deviation of:
where ψ is the standard deviation of the superimposed filter, so that generally σi≤ψ. This means that ψ defines the ‘window’ in which an entropy can be detected, that is:
-
- no variances in a structure (plain sky) will lead to a low entropy
- variations in a structure within the magnitude of ψ will lead to a higher entropy
- variations in a structure greater than the magnitude of ψ (such the black letters on white paper) will not affect the entropy.
2.6.1 Alternative Entropy Finding
{tilde over (ƒ)}″depthdensity,x,y=0 and {tilde over (ƒ)}′″depthdensity,x,y>0 (20)
denote the function taking fine channel intensities to there corresponding cumulated rough channel intensities and
denote a TTF taking fine data intensities to rough data intensities. As in the previous sections the tile indices are omitted for the sake of readability. ƒf2r might be understood as the average rough channel value belonging to a given fine channel value on a specific tile. Equation (22) is very similar to (4). The only difference is the we distribute averaged rough channel data instead of averaged fine channel data.
g x,y =∇I xy (23)
-
- In each tile, there are about one to three different image objects
- Each image object has, within a tile, about one level of luminosity
- If adjacent tiles have same clusters of gray levels, these belong to the same object
- If adjacent tiles have similar, but slightly different clusters of gray levels, this is an indication for a gradient.
ƒgradient(X,Y,i)=∇ƒEPS(X,Y,i)dXdY (24)
Ï x′y′=ƒEPS(I)(İ x′,y′) (25)
-
- express filters based on a different domain (a 1D field of accumulated pixel values versus a 2D field of frequencies, gradients or signal intensities)
- find short expressions for filters that would be complicated, in-comprehensive in signal domain
- use a new mind-set for filters that facilitates the creation of new filters. (For instance, the filter provided in equation 24 would be very difficult to come up with in the spatial image domain).
Claims (20)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US15/461,284 US10152781B2 (en) | 2008-09-26 | 2017-03-16 | Method for image processing using local statistics convolution |
Applications Claiming Priority (5)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US10060408P | 2008-09-26 | 2008-09-26 | |
US12/566,782 US8625921B1 (en) | 2008-09-26 | 2009-09-25 | Method for image processing using local statistics convolution |
US14/094,405 US9311694B2 (en) | 2008-09-26 | 2013-12-02 | Method for image processing using local statistics convolution |
US15/076,404 US9633422B2 (en) | 2008-09-26 | 2016-03-21 | Method for image processing using local statistics convolution |
US15/461,284 US10152781B2 (en) | 2008-09-26 | 2017-03-16 | Method for image processing using local statistics convolution |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US15/076,404 Continuation US9633422B2 (en) | 2008-09-26 | 2016-03-21 | Method for image processing using local statistics convolution |
Publications (2)
Publication Number | Publication Date |
---|---|
US20170186142A1 US20170186142A1 (en) | 2017-06-29 |
US10152781B2 true US10152781B2 (en) | 2018-12-11 |
Family
ID=49840925
Family Applications (4)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US12/566,782 Active 2032-01-26 US8625921B1 (en) | 2008-09-26 | 2009-09-25 | Method for image processing using local statistics convolution |
US14/094,405 Active 2030-01-01 US9311694B2 (en) | 2008-09-26 | 2013-12-02 | Method for image processing using local statistics convolution |
US15/076,404 Active US9633422B2 (en) | 2008-09-26 | 2016-03-21 | Method for image processing using local statistics convolution |
US15/461,284 Active 2029-10-03 US10152781B2 (en) | 2008-09-26 | 2017-03-16 | Method for image processing using local statistics convolution |
Family Applications Before (3)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US12/566,782 Active 2032-01-26 US8625921B1 (en) | 2008-09-26 | 2009-09-25 | Method for image processing using local statistics convolution |
US14/094,405 Active 2030-01-01 US9311694B2 (en) | 2008-09-26 | 2013-12-02 | Method for image processing using local statistics convolution |
US15/076,404 Active US9633422B2 (en) | 2008-09-26 | 2016-03-21 | Method for image processing using local statistics convolution |
Country Status (1)
Country | Link |
---|---|
US (4) | US8625921B1 (en) |
Families Citing this family (21)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8625921B1 (en) * | 2008-09-26 | 2014-01-07 | Google Inc. | Method for image processing using local statistics convolution |
ITTO20120602A1 (en) * | 2012-07-09 | 2014-01-10 | Sisvel Technology Srl | METHOD FOR TRANSFORMING AN IMAGE DESCRIPTOR BASED ON A GRADIENT HISTOGRAM AND RELATIVE IMAGE PROCESSING APPARATUS. |
US9589184B1 (en) * | 2012-08-16 | 2017-03-07 | Groupon, Inc. | Method, apparatus, and computer program product for classification of documents |
US10111714B2 (en) * | 2014-01-27 | 2018-10-30 | Align Technology, Inc. | Adhesive objects for improving image registration of intraoral images |
CN104574277A (en) * | 2015-01-30 | 2015-04-29 | 京东方科技集团股份有限公司 | Image interpolation method and image interpolation device |
LU92673B1 (en) * | 2015-03-05 | 2016-09-06 | Iee Int Electronics & Eng Sa | Method and system for real-time noise removal and image enhancement of high-dynamic range images |
CN105160635B (en) * | 2015-07-08 | 2018-12-18 | 苏州科技学院 | A kind of image filtering method based on fractional order differential estimation gradient field |
CN106384351A (en) * | 2016-08-25 | 2017-02-08 | 成都市晶林科技有限公司 | Infrared image background recognition method based on infrared image histogram |
US10489884B2 (en) | 2016-09-23 | 2019-11-26 | Apple Inc. | Fast and edge-preserving upsampling of images |
CN108268879B (en) * | 2016-12-30 | 2020-10-02 | 法法汽车(中国)有限公司 | Three-dimensional full-convolution network implementation method and equipment and electronic equipment |
CN107730546B (en) * | 2017-08-25 | 2020-11-03 | 华北电力大学（保定） | Image depth feature determination method and system |
CN107483844B (en) * | 2017-09-04 | 2020-08-25 | 海信视像科技股份有限公司 | Image processing method and device |
CN108389162B (en) * | 2018-01-09 | 2021-06-25 | 浙江大学 | Image edge preserving filtering method based on self-adaptive neighborhood shape |
JP7075773B2 (en) * | 2018-02-16 | 2022-05-26 | オリンパス株式会社 | Image processing equipment, microscope system, image processing method and image processing program |
CN109886133B (en) * | 2019-01-25 | 2020-11-03 | 北京市遥感信息研究所 | Ship detection method and system based on optical remote sensing image |
CN110717869B (en) * | 2019-09-11 | 2023-09-19 | 哈尔滨工程大学 | Method for clearing underwater turbid image |
CN110836878B (en) * | 2019-11-01 | 2021-09-07 | 同济大学 | Convolution interpolation coupling Gaussian mixture model rapid three-dimensional fluorescence peak searching method |
CN111223060B (en) * | 2020-01-05 | 2021-01-05 | 西安电子科技大学 | Image processing method based on self-adaptive PLIP model |
CN114359598B (en) * | 2021-11-26 | 2023-09-12 | 西安交通大学 | Self-adaptive automobile oil tank outer cover identification method based on region comparison difference |
WO2023247822A1 (en) * | 2022-06-20 | 2023-12-28 | Nokia Technologies Oy | An apparatus, a method and a computer program for video coding and decoding |
CN116883292B (en) * | 2023-09-07 | 2023-11-28 | 上海海栎创科技股份有限公司 | pseudo-Gaussian-based image direction field acquisition method, system and computer equipment |
Citations (5)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20070236517A1 (en) | 2004-04-15 | 2007-10-11 | Tom Kimpe | Method and Device for Improving Spatial and Off-Axis Display Standard Conformance |
US20080091757A1 (en) | 2006-09-08 | 2008-04-17 | Ingrassia Christopher A | System and method for web enabled geo-analytics and image processing |
US20080298680A1 (en) | 2007-05-31 | 2008-12-04 | Miller Gavin S P | System and Method for Image Processing Using Integral Histogram Convolution |
US20100195905A1 (en) | 2005-08-08 | 2010-08-05 | Trident Microsystems (Far East) Ltd. | Method of setting contrast in digital image processing, and an arrangement for this purpose |
US8625921B1 (en) * | 2008-09-26 | 2014-01-07 | Google Inc. | Method for image processing using local statistics convolution |
Family Cites Families (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5642442A (en) * | 1995-04-10 | 1997-06-24 | United Parcel Services Of America, Inc. | Method for locating the position and orientation of a fiduciary mark |
US7405740B1 (en) * | 2000-03-27 | 2008-07-29 | Stmicroelectronics, Inc. | Context sensitive scaling device and method |
US8406518B2 (en) * | 2009-01-20 | 2013-03-26 | Pixar | Smoothed local histogram filters for computer graphics |
-
2009
- 2009-09-25 US US12/566,782 patent/US8625921B1/en active Active
-
2013
- 2013-12-02 US US14/094,405 patent/US9311694B2/en active Active
-
2016
- 2016-03-21 US US15/076,404 patent/US9633422B2/en active Active
-
2017
- 2017-03-16 US US15/461,284 patent/US10152781B2/en active Active
Patent Citations (5)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20070236517A1 (en) | 2004-04-15 | 2007-10-11 | Tom Kimpe | Method and Device for Improving Spatial and Off-Axis Display Standard Conformance |
US20100195905A1 (en) | 2005-08-08 | 2010-08-05 | Trident Microsystems (Far East) Ltd. | Method of setting contrast in digital image processing, and an arrangement for this purpose |
US20080091757A1 (en) | 2006-09-08 | 2008-04-17 | Ingrassia Christopher A | System and method for web enabled geo-analytics and image processing |
US20080298680A1 (en) | 2007-05-31 | 2008-12-04 | Miller Gavin S P | System and Method for Image Processing Using Integral Histogram Convolution |
US8625921B1 (en) * | 2008-09-26 | 2014-01-07 | Google Inc. | Method for image processing using local statistics convolution |
Non-Patent Citations (2)
Title |
---|
Chen, et al., "Real-time Edge-Aware Image Processing with the Bilateral Grid", Computer Science and Artificial Intelligence Laboratory, Massachusetts Institute of Technology, Jul. 2007. |
Chen, Jiawen, et al, "Real-time Edge-Aware Image Processing with the Bilateral Grid", Computer Science and Artificial Intelligence Laboratory, Massachusetts Institute of Technology, Jul. 2007. * |
Also Published As
Publication number | Publication date |
---|---|
US20160225126A1 (en) | 2016-08-04 |
US9633422B2 (en) | 2017-04-25 |
US9311694B2 (en) | 2016-04-12 |
US20140105490A1 (en) | 2014-04-17 |
US20170186142A1 (en) | 2017-06-29 |
US8625921B1 (en) | 2014-01-07 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US10152781B2 (en) | Method for image processing using local statistics convolution | |
Liu et al. | Efficient single image dehazing and denoising: An efficient multi-scale correlated wavelet approach | |
Zhou et al. | Underwater image enhancement method via multi-feature prior fusion | |
US10339643B2 (en) | Algorithm and device for image processing | |
Lee et al. | A space-variant luminance map based color image enhancement | |
Wang et al. | Automatic local exposure correction using bright channel prior for under-exposed images | |
Li et al. | Clustering based content and color adaptive tone mapping | |
US7751641B2 (en) | Method and system for digital image enhancement | |
KR20090091207A (en) | Apparatus and methods for boosting dynamic range in digital images | |
US8831346B2 (en) | Image processing apparatus and method, and program | |
KR20180048627A (en) | Method and apparatus for reverse tone mapping | |
Ancuti et al. | Image and video decolorization by fusion | |
Vazquez-Corral et al. | A fast image dehazing method that does not introduce color artifacts | |
Zhou et al. | A multifeature fusion method for the color distortion and low contrast of underwater images | |
Singh et al. | Anisotropic diffusion for details enhancement in multiexposure image fusion | |
Chen et al. | A solution to the deficiencies of image enhancement | |
Abebe et al. | Towards an automatic correction of over-exposure in photographs: Application to tone-mapping | |
Al-Samaraie | A new enhancement approach for enhancing image of digital cameras by changing the contrast | |
Son et al. | Art‐photographic detail enhancement | |
Dixit et al. | A review on image contrast enhancement in colored images | |
JP7307371B2 (en) | Image adjustment device, image adjustment method and program | |
US20140133778A1 (en) | Image processing apparatus, image adjusting apparatus, image processing method and computer readable medium | |
Ofili et al. | An in-depth analysis and image quality assessment of exponent-based tone mapping algorithm | |
Liu et al. | An adaptive tone mapping algorithm based on gaussian filter | |
Yang et al. | Tone mapping based on multi-scale histogram synthesis |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:NIK SOFTWARE, INC.;REEL/FRAME:042680/0232Effective date: 20130723Owner name: NIK SOFTWARE, INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:KOKEMOHR, NILS;REEL/FRAME:042680/0215Effective date: 20091012 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044129/0001Effective date: 20170929 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 4 |
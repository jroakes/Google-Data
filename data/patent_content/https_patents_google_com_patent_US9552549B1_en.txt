US9552549B1 - Ranking approach to train deep neural nets for multilabel image annotation - Google Patents
Ranking approach to train deep neural nets for multilabel image annotation Download PDFInfo
- Publication number
- US9552549B1 US9552549B1 US14/444,272 US201414444272A US9552549B1 US 9552549 B1 US9552549 B1 US 9552549B1 US 201414444272 A US201414444272 A US 201414444272A US 9552549 B1 US9552549 B1 US 9552549B1
- Authority
- US
- United States
- Prior art keywords
- label
- neural network
- labels
- training
- training example
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active, expires
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N3/00—Computing arrangements based on biological models
- G06N3/02—Neural networks
- G06N3/08—Learning methods
- G06N3/084—Backpropagation, e.g. using gradient descent
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N3/00—Computing arrangements based on biological models
- G06N3/02—Neural networks
- G06N3/04—Architecture, e.g. interconnection topology
- G06N3/045—Combinations of networks
Definitions
- Automated image annotation may be done using neural networks.
- the neural networks used for image annotation are trained to determine the most appropriate label to apply to a given image. For example, a picture of a cat on a beach may be labeled by a trained neural network with what is considered the most salient feature of the image. If the cat happens to take up most of the image, the cat may be considered the most salient feature, and the neural network may annotate the image with the word “cat.” This may be the result of how the neural network was trained, with images in the training examples used to train the neural network being assigned only one correct label. Thus, a neural network that was trained with the image of the cat on the beach may have been trained that “cat” was the only correct label for the image, and that “beach” was an incorrect label. The neural network may then only apply the label “cat” to similar images, even when a label “beach” might also be considered a correct label for the image. This may limit the usefulness of automated image annotation when preparing images to be searched using a query based search engine
- label scores may be received for labels determined by a neural network for training examples.
- Each of the labels may be associated with one of the label scores.
- One or more of the labels may be a positive label for the training example and one or more of the labels may be a negative label for the training example.
- An error of the neural network may be determined based on a comparison, for each of the training examples, of the label scores for each of the labels that is a positive label for one of the training examples with each of the labels that is a negative label for the training example and a semantic distance between each of the labels that is a positive label for the one of the training examples and each of the labels that is a negative label for the training example.
- Updated weights may be determined for the neural network based on a gradient of the determined error of the neural network. The updated weights may be applied to the neural network to train the neural network.
- the semantic ranking loss may be determined according to:
- W is the ranking function of the neural network
- n is the number of training examples
- x i is an ith training example
- c+ is the number of positive labels for the training example x i
- c ⁇ is the number of negative labels for the training example x i
- ⁇ is the margin for hinge loss
- y c+ j is the jth positive label
- y c ⁇ k is kth negative label
- D(y c+ j , y c ⁇ k ) is a function that evaluates the semantic distance between two labels
- D(y c+ j , y c ⁇ k ) may be determined based on the number of nodes traversed to travel between a leaf including the positive label y c+ j and a leaf including the negative label y c ⁇ k in a semantic tree.
- Determining the updated weights of the neural network may include training the neural network with gradient descent backpropagation.
- the training examples may be images, and the labels may be words or phrases.
- a label may be a positive label for one of the training examples when the label has been predetermined to describe the content of the training example, and a label may be a negative label for the one of the training examples when the label has been predetermined to not describe the content of the training example.
- Determining the updated weights for the neural network may include attempting to minimize J. There may be two or more positive labels for each of the training examples.
- An image may be received with the neural network.
- a label corpus including labels may be received with the neural network.
- Each label from the label corpus may be scored by scoring the label with the neural network for the image.
- the image may be annotated with a predetermined number of the labels with the highest scores from the label corpus.
- a means for receiving label scores for labels determined by a neural network for training examples where each of the labels is associated with one of the label scores, and where one or more of the labels is a positive label for the training example and one or more other of the labels is a negative label for the training example
- a means for determining an error of the neural network based on a comparison, for each of the training examples, of the label scores for each of the labels that is a positive label for one of the training examples with each of the labels that is a negative label for the training example and a semantic distance between each of the labels that is a positive label for training example and each of the labels that is a negative label for the training example a means for determining updated weights for the neural network based on a gradient of the determined error of the neural network, a means for applying the updated weights to the neural network according to train the neural network, a means for receiving, with the neural network, an image, a means for receiving, with the neural network, a label corpus comprising
- FIG. 1 shows an example system suitable for a ranking approach to train deep neural nets for multilabel image annotation according to an implementation of the disclosed subject matter.
- FIG. 2 shows an example arrangement for a ranking approach to train deep neural nets for multilabel image annotation according to an implementation of the disclosed subject matter.
- FIG. 3 shows an example semantic structure for a ranking approach to train deep neural nets for multilabel image annotation according to an implementation of the disclosed subject matter.
- FIG. 4 shows an example arrangement for a ranking approach to train deep neural nets for multilabel image annotation according to an implementation of the disclosed subject matter.
- FIG. 5 shows an example of a process for a ranking approach to train deep neural nets for multilabel image annotation according to an implementation of the disclosed subject matter.
- FIG. 6 shows a computer according to an embodiment of the disclosed subject matter.
- FIG. 7 shows a network configuration according to an embodiment of the disclosed subject matter.
- a semantic ranking loss approach may be used to train a neural network for multilabel image annotation.
- a neural network such as, for example, a convolutional neural network, may be trained using training examples, which may be, for example, images.
- the training examples may be annotated with several correct labels, or classifications. For example, the training example image of a cat on a beach may be labeled with “cat”, “water”, “sand”, and “beach.”
- the neural network scores labels for the training examples.
- the labels may have been divided in positive and negative labels, where the positive labels are the correct labels for the training example.
- the neural network may be unaware of which labels are positive and which are negative when scoring the labels.
- the neural network's scores for the positive labels may be compared to the neural network's scores for the negative labels for the training examples, and the level of error, or gradient of the error, in the neural network's predictions may be used to adjust the neural network to make better predictions in the future.
- the level of error in the neural network's predictions may be determined using semantic loss ranking, which may determine a semantic distance between the positive and negative labels and weight any scoring errors made by the neural network, scoring a negative label higher than a positive label, for example, based on the semantic distance.
- the total error made by the neural network may be used to train the neural network.
- the neural network may be part of any suitable machine learning system, and may be in any suitable form.
- the neural network may be a convolution neural network, which may be a feed-forward neural network in which certain weights of the neural network are tied together.
- the neural network may be used for any suitable purpose, such as, for example, image annotation.
- an image may be input into the neural network, and the neural network may output scores for labels that may be used to annotate the image.
- the labels may correspond to features of the image, such as, for example, discrete objects depicted in the image, concepts represented by the image, actions taking place within the image, or moods reflected by the image.
- an image of a wet cat jumping in the air on a beach may be correctly labeled with the object labels “cat” and “beach”, the concept label “vacation”, the action label “jumping”, and mood label “funny”.
- the neural network may predict the labels by, for example, scoring labels from a label corpus for their relevance to a given input.
- a label corpus may include a number of words that may possibly be applied to describe the content of an image.
- the neural network may score each of the words in the label corpus based on how well the neural network believes the word describes an input image, with the highest scoring words being output as predicted labels for the image.
- the machine learning system of which the neural network is a part may also include a neural network trainer, which may be responsible for the training of the neural network.
- the neural network trainer may be able to compare scores for positive and negative labels output by the neural network in response to receiving a training example as input.
- the positive labels for a training example such as an image, may be, for example, human annotations made to an image.
- the negative labels may be labels from the label corpus that do not describe the content of the training example, and may be any label in the label corpus which was not designated as a positive label.
- the neural network trainer may determine how incorrect the neural network's scores for the labels are, and determine updated weights for the neural network based on the magnitude and type of errors found in the neural network's scoring of the labels.
- the magnitude and type of error made by the neural network may be determined using semantic ranking loss.
- Semantic ranking loss may determine how to penalize the incorrectness of the score given to labels based on a semantic distance between the score given to a positive label and the score given to a negative label for a training example.
- the semantic distance may be based on, for example, the distance between the predicted label and the correct label on a tree that connects the labels semantically.
- the labels may be leaf nodes on the tree, and the semantic distance between two labels may be the number of nodes that would need to be traversed in the tree to get to the node for one label from the node for the other label. This may result in errors in the neural network's scoring being penalized more heavily when the semantic distinction between labels is greater.
- the neural network may score a label of “tiger” higher than the label “cat” for an image of a cat on a beach.
- the neural network may be penalized less for scoring “tiger” higher than “cat” than it would have been for scoring “elephant” higher than “cat”, since “tiger” is semantically closer to “cat” than “elephant”.
- W represents the ranking function that will be optimized to minimize J
- n represents the number of training examples
- x i represents ith training example
- c+ represents the number of positive labels for the training example x i
- c ⁇ represents the number of negative labels for the training example x i
- ⁇ represents the margin for hinge loss
- y c+ j represents the jth positive label
- y c ⁇ k represents kth negative label
- D(y c+ j , y c ⁇ k ) is a function that evaluates the semantic distance between two labels, y c+
- a set of training examples used to train a neural network may include n training examples.
- Each of the n training examples may be evaluated with relation to c labels.
- the c labels may be divided into positive labels, which may be the correct labels for the training example, and negative labels, which may be improper labels for the training example.
- For a given set of training examples c+ may be constant, so that each training example receives the same number of positive and negative labels.
- the labels may be divided into positive and negative labels by, for example, a human.
- the training examples may be input to neural network with weights W, which may score each of the n training examples for each of the c labels, including the c+ positive labels and the c ⁇ negative labels.
- the scores for the labels produced by the neural network may be used with (1) to determine J, which may be an error level for the neural network.
- the weights W may then be adjusted, for example, through the determination of updated weights, to minimize J when the n training examples, or a different set of training example, are input into the neural network. This may result in an optimized neural network for multilabel image annotation.
- J may be the sum of the weighted errors made in labeling by the neural network.
- the neural network's score for each of the positive labels for that training example may be compared with the neural network's score for each of the negative labels.
- (1) may add a 0 to J, indicating that no error was made.
- the error may be weighted by the semantic distance between the positive and negative label, with the result added to J.
- the semantic distance between the positive label and the negative label, D(y c+ j , y c ⁇ k ) may be determined by, for example, counting the number of nodes in a semantic tree structure between the positive label and the negative label.
- “cat” may be a positive label for an image used as a training example, while “tiger” and “elephant” may be negative labels.
- a neural network may score both “elephant” and “tiger” higher than “cat” for the image. Because “cat” and “tiger” are semantically similar, the penalty, or error added to J, may be lower when (1) is evaluating the “cat” and “tiger” labels than when (1) is evaluating the “cat” and “elephant” labels, even if “tiger” and “elephant” were scored the same.
- FIG. 1 shows an example system suitable for a ranking approach to train deep neural nets for multilabel image annotation according to an implementation of the disclosed subject matter.
- a computing device 100 may include a machine learning system 105 , which may include a neural network 110 and a neural network trainer 120 , and a storage 140 .
- the computing device 100 may be any suitable device, such as, for example, a computer 20 as described in FIG. 6 , for implementing the machine learning system 105 and the storage 140 .
- the computing device 100 may be a single computing device, or may include multiple connected computing devices.
- the neural network 110 may be trained for multilabel image annotation with the neural network trainer 120 using the training data set 150 , the label corpus 170 , and the semantic structure 180 from the storage 140 .
- the storage 140 may store the training data set 150 , the label corpus 170 , and the semantic structure 180 in any suitable manner.
- the training data set 150 may be any data set suitable for training the neural network 110 of the machine learning system 105 .
- the training data set may include a number of training examples, which may be, for example, images.
- the images may have been annotated, for example, by a human, using labels from the label corpus 170 .
- the label corpus 170 may include labels, which may be words or phrases in any suitable language that may be used to label a training example, so as to describe the content of the training example.
- the labels from the label corpus 170 may be divided into two groups, positive labels, which may describe the content of the training example, and negative labels, which may not describe the content of the training example. These may be the training example labels for the training example.
- annotations for training examples images may include positive labels, which may describe the content depicted by the image, and negative labels, which may be all labels which do not describe the content depicted by the image.
- a training example image of a cat on a beach may be annotated with a positive label of “cat”, and every label that corresponds to an animal that is not a cat may be a negative label for the image.
- the semantic structure 180 may be data structured to allow for the determination of the distance between semantic concepts represented by the labels in the label corpus 170 .
- the semantic structure 180 may be a tree structure, with labels from the label corpus 170 that represent similar concepts being closer in the tree structure than labels that represent distinct semantic concepts.
- the semantic structure 180 may be a tree structure with a leaf for each label from the label corpus 170 .
- the distance between leaves, based on traversal of the tree structure may indicate the semantic distance between the labels on the leaves.
- the leaf for “cat” may be near “tiger”, but farther from “elephant”, and even farther from “boat,” based on traversal distance between leaves.
- the semantic structure 180 may also be, for example, a look-up table, where the semantic distance between any two of the labels from the label corpus 170 may have been pre-computed based on, for example, the average distance between the labels as determined by textual analysis, for example, of books and other written materials.
- the semantic distance between two labels may be the average word distance between the labels as found in a body of written materials.
- the machine learning system 105 may be any suitable system for implementing any suitable machine learning technique, such as, for example neural networks.
- the machine learning system 105 may be, for example, hosted on one or multiple servers which may have access to training data, such as the training data set 150 .
- the machine learning system 105 may include the neural network 110 and the neural network trainer 120 .
- the neural network 110 may use any suitable neural network architecture, such as, for example, five convolution layers and three densely connected layer arranged for image recognition and annotation.
- the neural network 110 may include convolution filters set to square sizes of 11, 9, and 5, for the convolutional layers, and max pooling layers may be used in some of the convolutional layers.
- Each densely connected layer may have an output size of 4096. Dropout layers may follow each of the densely connected layers with a dropout ratio of 0.6. For all of the layers, rectified linear units (RELU) may be used as a nonlinear activation function
- RELU rectified linear units
- the neural network trainer 120 may include a semantic ranking loss function 125 , which may be used to determine semantic ranking loss.
- the training examples from the training data set 150 may be input into the neural network 110 , along with the label corpus 170 .
- the neural network 110 may score each of the labels in the label corpus 170 with regard to each of the training examples.
- the score for a given label and a given training example may represent the degree to which the neural network 110 believes the label describes the content of the training example. For example, if the neural network gives a high score to the label “cat” for an input training image, the neural network may believe that the training example image includes a depiction of a cat.
- the semantic ranking loss function 125 may use the scores given to labels from the label corpus 170 by the neural network 110 to determine the magnitude of any error made by the neural network 110 . For example, for a given training example, the neural network 110 may give a higher score to a label that is a negative label for the training example than to a label that is a positive labels for the training example based on the training example labels.
- the error may be determined, for example, according to (1), using the semantic structure 180 to determine the semantic distance between any two labels.
- the error determined using the semantic ranking loss function 125 may be used to train the neural network 110 in any suitable manner by the neural network trainer 120 .
- the neural network trainer 120 may use gradient descent backpropagation to determine updated weights for the neural network 110 , with asynchronous stochastic gradient descent with a momentum term with weight 0.9, a mini-batch size of 32, a global learning rate of 0:002 at the, which begins, and a staircase weight decay that may be applied after a few epochs.
- the neural network trainer 120 may also apply any suitable function to statistics maintained for the neural network 110 to determine updated weights.
- the updated weights may be based on a gradient of the error for the neural network 110 .
- FIG. 2 shows an example arrangement for a ranking approach to train deep neural nets for multilabel image annotation according to an implementation of the disclosed subject matter.
- the neural network 110 may receive as input the training examples from the training data set 150 and the label corpus 170 .
- the training examples may be, for example, images that have been annotated by a human with training example labels using the label corpus 170 .
- the training example labels for each training example may be divided into positive labels and negative labels.
- the neural network 110 may evaluate each of the input training examples against each of the labels from the label corpus 170 to provide a score for each label regarding the training example. For example, the neural network 110 may receive a training example image, and may score each label from the label corpus 170 for that training example image, where the score may represent the level of belief by the neural network 110 that the label describes the content of the training example image. Every label from the label corpus 170 may be scored for every training example from the training data set 150 , producing the label scores.
- the neural network trainer 120 may receive the label scores as determined by the neural network 110 , along with the training examples labels from the training data set 150 and the semantic structure 180 .
- the neural network trainer 120 may then use the semantic ranking loss function 125 , which may be (1), to determine any error made in the label scores by the neural network 110 .
- the semantic ranking loss function 125 may compare label score for each label that is identified as a positive label in the training examples to the label score for each label that is identified as a negative label in the training examples, to determine if the neural network 110 scored the positive labels higher than the negative labels. In instances where a positive label was scored higher than a negative label, the neural network trainer 120 may determine that no error was made.
- margin for example, a hinge loss margin, by which the positive label's score must be higher than the negative label's for a determination that no error was made. If the positive label's score is lower than the negative label's score, an error may have been made.
- the magnitude of the error which may be the difference in the scores, plus the margin, may be weighted by the semantic distance between the positive label and the negative label, as determined, for example, using the semantic structure 180 .
- the error determined by the semantic ranking loss function 125 may be used by the neural network trainer 120 to determine updated weights adjustments for the neural network 110 , for example, using gradient descent backpropagation.
- the updated weights may be used to change the weights of the neural network 110 , which may then be trained further using the training examples from the training data set 150 that were just used, training examples from the training data set 150 that have not been used, or additional training examples added to the training data set 150 .
- the machine learning system 105 may train the neural network 110 in batch mode or online.
- the neural network trainer 120 may determine updated weights after receiving all of the label scores for the labels for a single training example from the training data set 150 as soon as the neural network 110 determines them, without waiting for the label scores from other training examples.
- the neural network trainer 120 may only determine updated weights after receiving label scores for all of the training examples from the training data set 150 .
- FIG. 3 shows an example semantic structure for a ranking approach to train deep neural nets for multilabel image annotation according to an implementation of the disclosed subject matter.
- the semantic structure 180 may be, for example a tree structure organized based on semantic relationships between labels from the label corpus 170 .
- labels related to living creatures may be organized in the tree structure at least partially based on biological classification systems, such that the labels for “cat” and “tiger” may both be under the category felidae, which may be under mammal, which my under animal.
- “elephant” may be also be under animal and mammal, but may be under elephantidae.
- the semantic distance between “cat” and “tiger” labels in the semantic structure 180 may be determined to be 1, since there is only one node that needs to be traversed between the leaf nodes for each of the labels.
- the semantic distance between “cat” and “elephant” may be 3, as three nodes may need to be traversed to travel from leaf for “cat” to the leaf for “elephant.” This may indicate that “elephant” is more semantically distant from “cat” than “tiger” is, and thus giving a high score to “tiger” for a training example image depicting a cat may be less of an error than giving a high score to “elephant” for the same training example image.
- FIG. 4 shows an example arrangement for a ranking approach to train deep neural nets for multilabel image annotation according to an implementation of the disclosed subject matter.
- the neural network 110 may receive a training example image 405 , which may be one of the training examples from the training data set 150 , and the label corpus 170 .
- the training example image 405 may be, for example, an image depicting a cat on a beach.
- the label corpus 170 may include, for example, the labels “cat”, “tiger”, “elephant”, “water”, “grass”, and “sand.”
- the neural network 110 may score each of the labels from the label corpus 170 for the training example image 405 , producing label scores 415 .
- the label scores 415 may include a score of 45 for “cat”, 60 for “tiger”, 60 for “elephant”, 70 for “water”, 20 for “grass”, and 55 for “sand”.
- the neural network trainer 120 may receive the label scores 415 , the semantic structure 180 , and training example image labels 415 .
- the training example image labels 415 may be the training example labels in the training data set 150 for the training example image 405 , and may be divided into positive and negative labels.
- the training example image labels 415 may include positive labels of “cat”, “water”, and “sand”, and negative labels of “tiger”, “elephant”, and “grass.”
- the semantic ranking loss function 125 may be used to determine the magnitude of the error the neural network 110 may have made in the label scores 415 .
- the semantic distance D(y c+ j , y c ⁇ k ) may be determined using the semantic structure 180 , which may be, for example, a tree structure.
- the neural network 110 may be penalized more for scoring “elephant” higher than “cat”, even though “elephant” was given the same label score as “tiger”, because “elephant” is more semantically distinct from “cat” than is “tiger.”
- the neural network trainer 120 may use the error determined by the semantic ranking loss function 125 to determine updated weights 425 .
- the updated weights 425 may be then be used to adjust the weights of the neural network 110 , for example, to train the neural network 110 for multilabel image annotation.
- FIG. 5 shows an example of a process for a ranking approach to train deep neural nets for multilabel image annotation according to an implementation of the disclosed subject matter.
- training example labels may be received.
- the neural network trainer 120 may receive training example labels, such as the training example image labels 410 , corresponding to a training example, such as the training example image 405 , from the training data set 150 .
- the training example labels may be divided in positive labels and negative labels for their associated training example.
- a semantic structure may be received.
- the neural network trainer 120 may receive the semantic structure 180 .
- the semantic structure 180 may include semantic distances between labels in the label corpus 170 from which the training example labels, such as the training example image labels 410 , were taken.
- label scores may be received.
- the neural network 110 may determine label scores, such as the label scores 415 , for the training example, for example, the training example image 405 .
- the neural network trainer 120 may receive the label scores from the neural network 110 .
- semantic ranking loss may be determined for the label scores using the semantic structure and training example labels.
- the semantic ranking loss which may be the magnitude of the error of the neural network 110
- the semantic structure 180 may be used to determine the semantic distance between two labels.
- the semantic ranking loss function 125 may compare the label scores given to each of the positive labels with the label scores given to each of the negative labels by the neural network 110 , weighting any errors based on the semantic distance between the labels being compared.
- weight adjustment may be determined.
- the neural network trainer 120 may use the semantic ranking loss determined using the semantic ranking loss function 125 to determine updated weights for the neural network 110 .
- the neural network trainer 120 may determine the updated weights using, for example, gradient descent with backpropagation.
- the neural network trainer 120 may determine the updated weights based on semantic ranking loss determined for individual training examples from the training data set 150 , for example, as in online-learning, or after determining the semantic ranking loss for any number of training examples from the training data set 150 , as in batch learning.
- the updated weights may be determined, for example, by applying any suitable function to statistics maintained for the neural network 110 .
- the updated weights may be based on a gradient of the error for the neural network 110 .
- the updated weights may be applied to the neural network.
- the neural network trainer 120 apply the updated weights to the neural network 110 , replacing any current weights with the updated weights determined from the semantic ranking loss for the neural network's label scores. Applying the updated weights to the neural network 110 may train the neural network 110 for multilabel image annotation.
- FIG. 6 is an example computer system 20 suitable for implementing embodiments of the presently disclosed subject matter.
- the computer 20 includes a bus 21 which interconnects major components of the computer 20 , such as one or more processors 24 , memory 27 such as RAM, ROM, flash RAM, or the like, an input/output controller 28 , and fixed storage 23 such as a hard drive, flash storage, SAN device, or the like.
- a user display such as a display screen via a display adapter
- user input interfaces such as controllers and associated user input devices
- keyboard, mouse, touchscreen, or the like and other components known in the art to use in or in conjunction with general-purpose computing systems.
- the bus 21 allows data communication between the central processor 24 and the memory 27 .
- the RAM is generally the main memory into which the operating system and application programs are loaded.
- the ROM or flash memory can contain, among other code, the Basic Input-Output system (BIOS) which controls basic hardware operation such as the interaction with peripheral components.
- BIOS Basic Input-Output system
- Applications resident with the computer 20 are generally stored on and accessed via a computer readable medium, such as the fixed storage 23 and/or the memory 27 , an optical drive, external storage mechanism, or the like.
- Each component shown may be integral with the computer 20 or may be separate and accessed through other interfaces.
- Other interfaces such as a network interface 29 , may provide a connection to remote systems and devices via a telephone link, wired or wireless local- or wide-area network connection, proprietary network connections, or the like.
- the network interface 29 may allow the computer to communicate with other computers via one or more local, wide-area, or other networks, as shown in FIG. 7 .
- FIG. 6 Many other devices or components (not shown) may be connected in a similar manner, such as document scanners, digital cameras, auxiliary, supplemental, or backup systems, or the like. Conversely, all of the components shown in FIG. 6 need not be present to practice the present disclosure. The components can be interconnected in different ways from that shown. The operation of a computer such as that shown in FIG. 6 is readily known in the art and is not discussed in detail in this application. Code to implement the present disclosure can be stored in computer-readable storage media such as one or more of the memory 27 , fixed storage 23 , remote storage locations, or any other storage mechanism known in the art.
- FIG. 7 shows an example arrangement according to an embodiment of the disclosed subject matter.
- One or more clients 10 , 11 such as local computers, smart phones, tablet computing devices, remote services, and the like may connect to other devices via one or more networks 7 .
- the network may be a local network, wide-area network, the Internet, or any other suitable communication network or networks, and may be implemented on any suitable platform including wired and/or wireless networks.
- the clients 10 , 11 may communicate with one or more computer systems, such as processing units 14 , databases 15 , and user interface systems 13 .
- clients 10 , 11 may communicate with a user interface system 13 , which may provide access to one or more other systems such as a database 15 , a processing unit 14 , or the like.
- the user interface 13 may be a user-accessible web page that provides data from one or more other computer systems.
- the user interface 13 may provide different interfaces to different clients, such as where a human-readable web page is provided to web browser clients 10 , and a computer-readable API or other interface is provided to remote service clients 11 .
- the user interface 13 , database 15 , and processing units 14 may be part of an integral system, or may include multiple computer systems communicating via a private network, the Internet, or any other suitable network.
- Processing units 14 may be, for example, part of a distributed system such as a cloud-based computing system, search engine, content delivery system, or the like, which may also include or communicate with a database 15 and/or user interface 13 .
- an analysis system 5 may provide back-end processing, such as where stored or acquired data is pre-processed by the analysis system 5 before delivery to the processing unit 14 , database 15 , and/or user interface 13 .
- a machine learning system 5 may provide various prediction models, data analysis, or the like to one or more other systems 13 , 14 , 15 .
Abstract
Description
where W is the ranking function of the neural network, n is the number of training examples, xi is an ith training example, c+ is the number of positive labels for the training example xi, c− is the number of negative labels for the training example xi, ρ is the margin for hinge loss, yc+
J=Σ i=1 nΣj=1 c+Σk=1 c− D(y c+
where W represents the ranking function that will be optimized to minimize J, n represents the number of training examples, xi represents ith training example, c+ represents the number of positive labels for the training example xi, c− represents the number of negative labels for the training example xi, ρ represents the margin for hinge loss, yc+
Claims (19)
J=Σ i=1 nΣj=1 c+Σk=1 c− D(y c+
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US14/444,272 US9552549B1 (en) | 2014-07-28 | 2014-07-28 | Ranking approach to train deep neural nets for multilabel image annotation |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US14/444,272 US9552549B1 (en) | 2014-07-28 | 2014-07-28 | Ranking approach to train deep neural nets for multilabel image annotation |
Publications (1)
Publication Number | Publication Date |
---|---|
US9552549B1 true US9552549B1 (en) | 2017-01-24 |
Family
ID=57795170
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US14/444,272 Active 2035-09-04 US9552549B1 (en) | 2014-07-28 | 2014-07-28 | Ranking approach to train deep neural nets for multilabel image annotation |
Country Status (1)
Country | Link |
---|---|
US (1) | US9552549B1 (en) |
Cited By (32)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20180032796A1 (en) * | 2016-07-29 | 2018-02-01 | NTech lab LLC | Face identification using artificial neural network |
US20180276815A1 (en) * | 2017-03-27 | 2018-09-27 | Siemens Healthcare Gmbh | Highly Integrated Annotation and Segmentation System for Medical Imaging |
US20180311663A1 (en) * | 2017-04-26 | 2018-11-01 | Lawrence Livermore National Security, Llc | Automated control of microfluidic devices based on machine learning |
US10148525B1 (en) | 2018-04-13 | 2018-12-04 | Winshuttle, Llc | Methods and systems for mitigating risk in deploying unvetted data handling rules |
WO2018218481A1 (en) * | 2017-05-31 | 2018-12-06 | 深圳市大疆创新科技有限公司 | Neural network training method and device, computer system and mobile device |
CN109583333A (en) * | 2018-11-16 | 2019-04-05 | 中证信用增进股份有限公司 | Image-recognizing method based on water logging method and convolutional neural networks |
US10262236B2 (en) | 2017-05-02 | 2019-04-16 | General Electric Company | Neural network training image generation system |
US20190258935A1 (en) * | 2018-02-19 | 2019-08-22 | Fujitsu Limited | Computer-readable recording medium, learning method, and learning apparatus |
US10572801B2 (en) | 2017-11-22 | 2020-02-25 | Clinc, Inc. | System and method for implementing an artificially intelligent virtual assistant using machine learning |
US20200081896A1 (en) * | 2016-03-18 | 2020-03-12 | Oath Inc. | Computerized system and method for high-quality and high-ranking digital content discovery |
US10635949B2 (en) * | 2015-07-07 | 2020-04-28 | Xerox Corporation | Latent embeddings for word images and their semantics |
US10679150B1 (en) | 2018-12-13 | 2020-06-09 | Clinc, Inc. | Systems and methods for automatically configuring training data for training machine learning models of a machine learning-based dialogue system including seeding training samples or curating a corpus of training data based on instances of training data identified as anomalous |
US10679100B2 (en) | 2018-03-26 | 2020-06-09 | Clinc, Inc. | Systems and methods for intelligently curating machine learning training data and improving machine learning model performance |
US10740383B2 (en) | 2017-06-04 | 2020-08-11 | Apple Inc. | Mood determination of a collection of media content items |
US10783393B2 (en) | 2017-06-20 | 2020-09-22 | Nvidia Corporation | Semi-supervised learning for landmark localization |
CN111797895A (en) * | 2020-05-30 | 2020-10-20 | 华为技术有限公司 | Training method of classifier, data processing method, system and equipment |
JP2020201731A (en) * | 2019-06-11 | 2020-12-17 | 日本放送協会 | Convolutional neural network learning device and program thereof |
US10872203B2 (en) * | 2016-11-18 | 2020-12-22 | Microsoft Technology Licensing, Llc | Data input system using trained keypress encoder |
US10943353B1 (en) | 2019-09-11 | 2021-03-09 | International Business Machines Corporation | Handling untrainable conditions in a network architecture search |
US11010656B2 (en) | 2017-10-30 | 2021-05-18 | Clinc, Inc. | System and method for implementing an artificially intelligent virtual assistant using machine learning |
US11023783B2 (en) * | 2019-09-11 | 2021-06-01 | International Business Machines Corporation | Network architecture search with global optimization |
CN112906382A (en) * | 2021-02-05 | 2021-06-04 | 山东省计算中心（国家超级计算济南中心） | Policy text multi-label labeling method and system based on graph neural network |
CN113326390A (en) * | 2021-08-03 | 2021-08-31 | 中国海洋大学 | Image retrieval method based on depth feature consistent Hash algorithm |
US11126898B2 (en) | 2019-05-29 | 2021-09-21 | Markov Llc | Computer vision classifier using item micromodels |
US11157769B2 (en) * | 2018-09-25 | 2021-10-26 | Realtek Semiconductor Corp. | Image processing circuit and associated image processing method |
US11170262B2 (en) * | 2015-10-30 | 2021-11-09 | Morpho, Inc. | Training system, training device, method for training, training data creation device, training data creation method, terminal device, and threshold value changing device |
US11238113B2 (en) * | 2020-04-01 | 2022-02-01 | Grand Rounds Inc. | Systems and methods for machine learning models for search engine performance optimization |
CN114139656A (en) * | 2022-01-27 | 2022-03-04 | 成都橙视传媒科技股份公司 | Image classification method based on deep convolution analysis and broadcast control platform |
US11281566B2 (en) * | 2018-07-23 | 2022-03-22 | Mitsubishi Electric Corporation | Scoring device, computer readable medium, and scoring method |
US11386353B2 (en) * | 2016-12-12 | 2022-07-12 | Tencent Technology (Shenzhen) Company Limited | Method and apparatus for training classification model, and method and apparatus for classifying data |
US20230267719A1 (en) * | 2022-02-21 | 2023-08-24 | Ford Global Technologies, Llc | Neural network training |
US11875250B1 (en) * | 2017-06-19 | 2024-01-16 | Amazon Technologies, Inc. | Deep neural networks with semantically weighted loss functions |
Citations (15)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6324532B1 (en) | 1997-02-07 | 2001-11-27 | Sarnoff Corporation | Method and apparatus for training a neural network to detect objects in an image |
US7467159B2 (en) | 2002-10-15 | 2008-12-16 | Definiens Ag | Generating applications that analyze image data using a semantic cognition network |
US20090083010A1 (en) * | 2007-09-21 | 2009-03-26 | Microsoft Corporation | Correlative Multi-Label Image Annotation |
US20090304272A1 (en) * | 2008-06-06 | 2009-12-10 | Google Inc. | Annotating images |
US20090313294A1 (en) * | 2008-06-11 | 2009-12-17 | Microsoft Corporation | Automatic image annotation using semantic distance learning |
US20110087660A1 (en) * | 2007-03-01 | 2011-04-14 | Microsoft Corporation | Scoring relevance of a document based on image text |
US8078557B1 (en) | 2005-09-26 | 2011-12-13 | Dranias Development Llc | Use of neural networks for keyword generation |
US20120089552A1 (en) * | 2008-12-22 | 2012-04-12 | Shih-Fu Chang | Rapid image annotation via brain state decoding and visual pattern mining |
US8180754B1 (en) | 2008-04-01 | 2012-05-15 | Dranias Development Llc | Semantic neural network for aggregating query searches |
US8204842B1 (en) * | 2006-01-31 | 2012-06-19 | The Research Foundation Of State University Of New York | System and method for image annotation and multi-modal image retrieval using probabilistic semantic models comprising at least one joint probability distribution |
US20120269436A1 (en) * | 2011-04-20 | 2012-10-25 | Xerox Corporation | Learning structured prediction models for interactive image labeling |
US8392436B2 (en) | 2008-02-07 | 2013-03-05 | Nec Laboratories America, Inc. | Semantic search via role labeling |
US8429212B1 (en) * | 2009-11-23 | 2013-04-23 | Google Inc. | Training scoring models optimized for highly-ranked results |
US20130202205A1 (en) * | 2012-02-06 | 2013-08-08 | Microsoft Corporation | System and method for semantically annotating images |
US20140307958A1 (en) * | 2013-04-16 | 2014-10-16 | The Penn State Research Foundation | Instance-weighted mixture modeling to enhance training collections for image annotation |
-
2014
- 2014-07-28 US US14/444,272 patent/US9552549B1/en active Active
Patent Citations (15)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6324532B1 (en) | 1997-02-07 | 2001-11-27 | Sarnoff Corporation | Method and apparatus for training a neural network to detect objects in an image |
US7467159B2 (en) | 2002-10-15 | 2008-12-16 | Definiens Ag | Generating applications that analyze image data using a semantic cognition network |
US8078557B1 (en) | 2005-09-26 | 2011-12-13 | Dranias Development Llc | Use of neural networks for keyword generation |
US8204842B1 (en) * | 2006-01-31 | 2012-06-19 | The Research Foundation Of State University Of New York | System and method for image annotation and multi-modal image retrieval using probabilistic semantic models comprising at least one joint probability distribution |
US20110087660A1 (en) * | 2007-03-01 | 2011-04-14 | Microsoft Corporation | Scoring relevance of a document based on image text |
US20090083010A1 (en) * | 2007-09-21 | 2009-03-26 | Microsoft Corporation | Correlative Multi-Label Image Annotation |
US8392436B2 (en) | 2008-02-07 | 2013-03-05 | Nec Laboratories America, Inc. | Semantic search via role labeling |
US8180754B1 (en) | 2008-04-01 | 2012-05-15 | Dranias Development Llc | Semantic neural network for aggregating query searches |
US20090304272A1 (en) * | 2008-06-06 | 2009-12-10 | Google Inc. | Annotating images |
US20090313294A1 (en) * | 2008-06-11 | 2009-12-17 | Microsoft Corporation | Automatic image annotation using semantic distance learning |
US20120089552A1 (en) * | 2008-12-22 | 2012-04-12 | Shih-Fu Chang | Rapid image annotation via brain state decoding and visual pattern mining |
US8429212B1 (en) * | 2009-11-23 | 2013-04-23 | Google Inc. | Training scoring models optimized for highly-ranked results |
US20120269436A1 (en) * | 2011-04-20 | 2012-10-25 | Xerox Corporation | Learning structured prediction models for interactive image labeling |
US20130202205A1 (en) * | 2012-02-06 | 2013-08-08 | Microsoft Corporation | System and method for semantically annotating images |
US20140307958A1 (en) * | 2013-04-16 | 2014-10-16 | The Penn State Research Foundation | Instance-weighted mixture modeling to enhance training collections for image annotation |
Non-Patent Citations (2)
Title |
---|
Gong Y. et al. "Deep Convolutional Ranking for Multilabel Image Annotation", Dec. 23, 2013. * |
Weston, Jason et al.,"WSABIE: Scaling Up to Large Vocabulary Image Annotation", IJCAI'11 Proceedings of the Twenty-Second international joint conference on Artificial Intelligence-vol. Three, Jul. 16, 2011, AAAI Press. |
Cited By (45)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10635949B2 (en) * | 2015-07-07 | 2020-04-28 | Xerox Corporation | Latent embeddings for word images and their semantics |
US11170262B2 (en) * | 2015-10-30 | 2021-11-09 | Morpho, Inc. | Training system, training device, method for training, training data creation device, training data creation method, terminal device, and threshold value changing device |
US20200081896A1 (en) * | 2016-03-18 | 2020-03-12 | Oath Inc. | Computerized system and method for high-quality and high-ranking digital content discovery |
US20180032796A1 (en) * | 2016-07-29 | 2018-02-01 | NTech lab LLC | Face identification using artificial neural network |
US10083347B2 (en) * | 2016-07-29 | 2018-09-25 | NTech lab LLC | Face identification using artificial neural network |
US10872203B2 (en) * | 2016-11-18 | 2020-12-22 | Microsoft Technology Licensing, Llc | Data input system using trained keypress encoder |
US11386353B2 (en) * | 2016-12-12 | 2022-07-12 | Tencent Technology (Shenzhen) Company Limited | Method and apparatus for training classification model, and method and apparatus for classifying data |
US20180276815A1 (en) * | 2017-03-27 | 2018-09-27 | Siemens Healthcare Gmbh | Highly Integrated Annotation and Segmentation System for Medical Imaging |
US10366490B2 (en) * | 2017-03-27 | 2019-07-30 | Siemens Healthcare Gmbh | Highly integrated annotation and segmentation system for medical imaging |
US10408852B2 (en) * | 2017-04-26 | 2019-09-10 | Lawrence Livermore National Security, Llc | Automated control of microfluidic devices based on machine learning |
US20190234976A1 (en) * | 2017-04-26 | 2019-08-01 | Lawrence Livermore National Security, Llc | Automated control of microfluidic devices based on machine learning |
US20180311663A1 (en) * | 2017-04-26 | 2018-11-01 | Lawrence Livermore National Security, Llc | Automated control of microfluidic devices based on machine learning |
US11061042B2 (en) | 2017-04-26 | 2021-07-13 | Lawrence Livermore National Security, Llc | Automated control of microfluidic devices based on machine learning |
US10262236B2 (en) | 2017-05-02 | 2019-04-16 | General Electric Company | Neural network training image generation system |
WO2018218481A1 (en) * | 2017-05-31 | 2018-12-06 | 深圳市大疆创新科技有限公司 | Neural network training method and device, computer system and mobile device |
US11567985B2 (en) | 2017-06-04 | 2023-01-31 | Apple Inc. | Mood determination of a collection of media content items |
US10740383B2 (en) | 2017-06-04 | 2020-08-11 | Apple Inc. | Mood determination of a collection of media content items |
US11875250B1 (en) * | 2017-06-19 | 2024-01-16 | Amazon Technologies, Inc. | Deep neural networks with semantically weighted loss functions |
US10783393B2 (en) | 2017-06-20 | 2020-09-22 | Nvidia Corporation | Semi-supervised learning for landmark localization |
US10783394B2 (en) | 2017-06-20 | 2020-09-22 | Nvidia Corporation | Equivariant landmark transformation for landmark localization |
US11010656B2 (en) | 2017-10-30 | 2021-05-18 | Clinc, Inc. | System and method for implementing an artificially intelligent virtual assistant using machine learning |
US11042800B2 (en) | 2017-11-22 | 2021-06-22 | Cline, Inc. | System and method for implementing an artificially intelligent virtual assistant using machine learning |
US10572801B2 (en) | 2017-11-22 | 2020-02-25 | Clinc, Inc. | System and method for implementing an artificially intelligent virtual assistant using machine learning |
US20190258935A1 (en) * | 2018-02-19 | 2019-08-22 | Fujitsu Limited | Computer-readable recording medium, learning method, and learning apparatus |
US10679100B2 (en) | 2018-03-26 | 2020-06-09 | Clinc, Inc. | Systems and methods for intelligently curating machine learning training data and improving machine learning model performance |
US10148525B1 (en) | 2018-04-13 | 2018-12-04 | Winshuttle, Llc | Methods and systems for mitigating risk in deploying unvetted data handling rules |
US11281566B2 (en) * | 2018-07-23 | 2022-03-22 | Mitsubishi Electric Corporation | Scoring device, computer readable medium, and scoring method |
US11157769B2 (en) * | 2018-09-25 | 2021-10-26 | Realtek Semiconductor Corp. | Image processing circuit and associated image processing method |
CN109583333A (en) * | 2018-11-16 | 2019-04-05 | 中证信用增进股份有限公司 | Image-recognizing method based on water logging method and convolutional neural networks |
US10679150B1 (en) | 2018-12-13 | 2020-06-09 | Clinc, Inc. | Systems and methods for automatically configuring training data for training machine learning models of a machine learning-based dialogue system including seeding training samples or curating a corpus of training data based on instances of training data identified as anomalous |
US11126898B2 (en) | 2019-05-29 | 2021-09-21 | Markov Llc | Computer vision classifier using item micromodels |
JP2020201731A (en) * | 2019-06-11 | 2020-12-17 | 日本放送協会 | Convolutional neural network learning device and program thereof |
JP7261661B2 (en) | 2019-06-11 | 2023-04-20 | 日本放送協会 | Convolutional neural network learning device and its program |
US11023783B2 (en) * | 2019-09-11 | 2021-06-01 | International Business Machines Corporation | Network architecture search with global optimization |
US10943353B1 (en) | 2019-09-11 | 2021-03-09 | International Business Machines Corporation | Handling untrainable conditions in a network architecture search |
US20230244726A1 (en) * | 2020-04-01 | 2023-08-03 | Included Health, Inc. | Systems and methods for machine learning models for search engine performance optimization |
US11238113B2 (en) * | 2020-04-01 | 2022-02-01 | Grand Rounds Inc. | Systems and methods for machine learning models for search engine performance optimization |
US20220156333A1 (en) * | 2020-04-01 | 2022-05-19 | Grand Rounds, Inc. | Systems and methods for machine learning models for search engine performance optimization |
US11640435B2 (en) * | 2020-04-01 | 2023-05-02 | Included Health, Inc. | Systems and methods for machine learning models for search engine performance optimization |
CN111797895B (en) * | 2020-05-30 | 2024-04-26 | 华为技术有限公司 | Training method, data processing method, system and equipment for classifier |
CN111797895A (en) * | 2020-05-30 | 2020-10-20 | 华为技术有限公司 | Training method of classifier, data processing method, system and equipment |
CN112906382A (en) * | 2021-02-05 | 2021-06-04 | 山东省计算中心（国家超级计算济南中心） | Policy text multi-label labeling method and system based on graph neural network |
CN113326390A (en) * | 2021-08-03 | 2021-08-31 | 中国海洋大学 | Image retrieval method based on depth feature consistent Hash algorithm |
CN114139656A (en) * | 2022-01-27 | 2022-03-04 | 成都橙视传媒科技股份公司 | Image classification method based on deep convolution analysis and broadcast control platform |
US20230267719A1 (en) * | 2022-02-21 | 2023-08-24 | Ford Global Technologies, Llc | Neural network training |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US9552549B1 (en) | Ranking approach to train deep neural nets for multilabel image annotation | |
US11468246B2 (en) | Multi-turn dialogue response generation with template generation | |
AU2016256764B2 (en) | Semantic natural language vector space for image captioning | |
WO2019153737A1 (en) | Comment assessing method, device, equipment and storage medium | |
CN108073568B (en) | Keyword extraction method and device | |
GB2547068B (en) | Semantic natural language vector space | |
CN112131350B (en) | Text label determining method, device, terminal and readable storage medium | |
US9536522B1 (en) | Training a natural language processing model with information retrieval model annotations | |
CN108536679A (en) | Name entity recognition method, device, equipment and computer readable storage medium | |
US20160378863A1 (en) | Selecting representative video frames for videos | |
CN109492222B (en) | Intention identification method and device based on concept tree and computer equipment | |
CN111753060A (en) | Information retrieval method, device, equipment and computer readable storage medium | |
CN112287089B (en) | Classification model training and automatic question-answering method and device for automatic question-answering system | |
CN109086265B (en) | Semantic training method and multi-semantic word disambiguation method in short text | |
CN106940726B (en) | Creative automatic generation method and terminal based on knowledge network | |
CN111310440B (en) | Text error correction method, device and system | |
CN112307164A (en) | Information recommendation method and device, computer equipment and storage medium | |
US11545042B2 (en) | Personalized learning system | |
CN110909145A (en) | Training method and device for multi-task model | |
CN109271636B (en) | Training method and device for word embedding model | |
CN115858886B (en) | Data processing method, device, equipment and readable storage medium | |
CN113961666A (en) | Keyword recognition method, apparatus, device, medium, and computer program product | |
CN114144774A (en) | Question-answering system | |
CN111259147A (en) | Sentence-level emotion prediction method and system based on adaptive attention mechanism | |
CN112256863A (en) | Method and device for determining corpus intentions and electronic equipment |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:GONG, YUNCHAO;LEUNG, KING HONG THOMAS;TOSHEV, ALEXANDER TOSHKOV;AND OTHERS;SIGNING DATES FROM 20140723 TO 20140725;REEL/FRAME:033402/0601 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044097/0658Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 4 |
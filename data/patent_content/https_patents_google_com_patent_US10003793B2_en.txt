US10003793B2 - Processing of pulse code modulation (PCM) parameters - Google Patents
Processing of pulse code modulation (PCM) parameters Download PDFInfo
- Publication number
- US10003793B2 US10003793B2 US13/831,074 US201313831074A US10003793B2 US 10003793 B2 US10003793 B2 US 10003793B2 US 201313831074 A US201313831074 A US 201313831074A US 10003793 B2 US10003793 B2 US 10003793B2
- Authority
- US
- United States
- Prior art keywords
- pcm
- parameter
- video
- pcm parameter
- flag
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active, expires
Links
Images
Classifications
-
- H04N19/00775—
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/46—Embedding additional information in the video signal during the compression process
Definitions
- Video compression systems employ block processing for most of the compression operations.
- a block is a group of neighboring pixels and may be treated as one coding unit in terms of the compression operations. Theoretically, a larger coding unit is preferred to take advantage of correlation among immediate neighboring pixels.
- Various video compression standards e.g., Motion Picture Expert Group (MPEG)-1, MPEG-2, and MPEG-4, use block sizes of 4 ⁇ 4, 8 ⁇ 8, and 16 ⁇ 16 (referred to as a macroblock (MB)).
- MPEG Motion Picture Expert Group
- MPEG-4 use block sizes of 4 ⁇ 4, 8 ⁇ 8, and 16 ⁇ 16 (referred to as a macroblock (MB)).
- High efficiency video coding is also a block-based hybrid spatial and temporal predictive coding scheme.
- HEVC partitions an input picture into square blocks referred to as coding tree units (CTUs) as shown in FIG. 1 .
- the CTU can be as large as 128 ⁇ 128 pixels.
- Each CTU can be partitioned into smaller square blocks called coding units (CUs).
- FIG. 2 shows an example of a CTU partition of CUs.
- a CTU 100 is first partitioned into four CUs 102 .
- Each CU 102 may also be further split into four smaller CUs 102 that are a quarter of the size of the CU 102 .
- CUs 102 - 1 , 102 - 3 , and 102 - 4 are a quarter of the size of CTU 100 . Further, a CU 102 - 2 has been split into four CUs 102 - 5 , 102 - 6 , 102 - 7 , and 102 - 8 .
- Each CU 102 may include one or more blocks, which may be referred to as prediction units (PUs).
- FIG. 3A shows an example of a CU partition of PUs.
- the PUs may be used to perform spatial prediction or temporal prediction.
- a CU can be either spatially or temporally predictive coded. If a CU is coded in intra mode, each PU of the CU can have its own spatial prediction direction. If a CU is coded in inter mode, each PU of the CU can have its own motion vector(s) and associated reference picture(s).
- a set of block transforms of different sizes may be applied to a CU 102 .
- the CU partition of PUs 202 shown in FIG. 3A may be associated with a set of transform units (TUs) 204 shown in FIG. 3B .
- TUs transform units
- FIG. 3B PU 202 - 1 is partitioned into four TUs 204 - 5 - 204 - 8 .
- TUs 204 - 2 , 204 - 3 , and 204 - 4 are the same size as corresponding PUs 202 - 2 - 202 - 4 .
- Each TU 204 can include one or more transform coefficients.
- Transform coefficients of the TU 204 can be quantized into one of a finite number of possible values. After the transform coefficients have been quantized, the quantized transform coefficients can be entropy coded to obtain the final compressed bits that can be sent to a decoder.
- the above process encodes video using prediction, transformation, and quantization, which is a lossy compression process.
- data lost by quantization may not be recoverable when the video is reconstructed by the decoder.
- an encoder may want to encode video using a lossless compression process.
- PCM pulse code modulation
- PCM is a way to compress video in a lossless manner. That is, when video is compressed and decompressed, the original video that is compressed can be reconstructed without any loss.
- PCM pulse code modulation
- a pixel value is encoded and decoded without losing any information for the pixel value.
- FIG. 1 shows an input picture partitioned into square blocks referred to as coding tree units (CTUs).
- CTUs coding tree units
- FIG. 2 shows an example of a coding tree unit (CTU) partition of coding units (CUs).
- CTU coding tree unit partition of coding units
- FIG. 3A shows an example of a CU partition of prediction units (PUs).
- FIG. 3B shows an example of a transform unit (TU) partition of PUs.
- FIG. 4 depicts an example of a system for encoding and decoding video content according to one embodiment.
- FIG. 5A shows an example of a syntax that describes a grouping of the parameters for the PCM coding mode according to one embodiment.
- FIG. 5B shows a more detailed example of the syntax according to one embodiment.
- FIG. 6 shows an example of an encoded bitstream according to one embodiment.
- FIG. 7 depicts a simplified flowchart of a method for encoding PCM parameters according to one embodiment.
- FIG. 8 depicts a simplified flowchart for decoding PCM parameters according to one embodiment.
- FIG. 9 depicts an example of an encoder according to one embodiment.
- FIG. 10 depicts an example of a decoder according to one embodiment.
- a method determines a pulse code modulation (PCM) flag that indicates whether a PCM mode can be used to encode or decode a portion of video.
- PCM pulse code modulation
- the method encodes or decodes a first PCM parameter indicating a bit depth for representing a PCM luma component of the portion of video, a second PCM parameter indicating a bit depth for representing a PCM chroma component of the portion of video, a third PCM parameter indicating a minimum block size for one or more PCM luma coding blocks of the portion of video, a fourth PCM parameter indicating a difference between the minimum block size and a maximum block size for the one or more PCM luma coding blocks of the portion of video, and a fifth PCM parameter indicating whether a PCM loop filter is disabled or enabled for the portion of video.
- the first PCM parameter, the second PCM parameter, the third PCM parameter, the fourth PCM parameter, and the fifth PCM parameter are encoded or decoded consecutively without any other bits or syntax between the first PCM parameter, the second PCM parameter, the third PCM parameter, the fourth PCM parameter, and the fifth PCM parameter in or from an encoded bitstream associated with the portion of video.
- a decoder includes: one or more computer processors; and a non-transitory computer-readable storage medium comprising instructions that, when executed, control the one or more computer processors to be configured for: determining an encoded bitstream; determining a pulse code modulation (PCM) flag in the encoded bitstream that indicates whether a PCM mode can be used to encode or decode a portion of video; evaluating a single conditional statement once to determine if the PCM flag indicates the PCM mode is enabled; based on the evaluating of the single conditional statement, when the PCM flag indicates the PCM mode is enabled, performing: decoding a first PCM parameter indicating a bit depth for representing a PCM luma component of the portion of video; decoding a second PCM parameter indicating a bit depth for representing a PCM chroma component of the portion of video; decoding a third PCM parameter indicating a minimum block size for one or more PCM luma coding blocks of the portion of video; decoding a fourth PCM
- an encoder includes: one or more computer processors; and a non-transitory computer-readable storage medium comprising instructions that, when executed, control the one or more computer processors to be configured for: determining a pulse code modulation (PCM) flag that indicates whether a PCM mode can be used to encode or decode a portion of video; evaluating a single conditional statement once to determine if the PCM flag indicates the PCM mode is enabled; based on the evaluating, when the PCM flag indicates the PCM mode is enabled, performing encoding a first PCM parameter indicating a bit depth for representing a PCM luma component of the portion of video; encoding a second PCM parameter indicating a bit depth for representing a PCM chroma component of the portion of video; encoding a third PCM parameter indicating a minimum block size for one or more PCM luma coding blocks of the portion of video; encoding a fourth PCM parameter indicating a difference between the minimum block size and a maximum block size for the
- FIG. 4 depicts an example of a system 400 for encoding and decoding video content according to one embodiment.
- Encoder 402 and decoder 403 may encode and decode a bitstream using HEVC; however, other video compression standards may also be appreciated.
- Encoder 402 includes a PCM coding block 404 - 1 and decoder 403 includes a PCM coding block 404 - 2 .
- PCM coding block 404 When PCM coding block 404 is referred to, the processes may be performed in encoding video and/or decoding video in either PCM coding block 404 - 1 and/or PCM coding block 404 - 2 .
- PCM coding block 404 - 1 performs an encoding process using PCM
- PCM coding block 404 - 2 performs a decoding process using PCM.
- PCM when PCM is used to code portions of video, the portions of video may be encoded and decoded in a lossless manner.
- PCM generates a digital representation of an analog signal (e.g., video) where the magnitude of the signal is sampled regularly at uniform intervals, and then quantized to a series of symbols in a digital (usually binary) code. The digital codes are not compressed and can be reconstructed without any loss.
- PCM is generally known in the art. Also, although PCM is discussed, other lossless compression methods may also be appreciated.
- PCM When compressing video, PCM may only be used for certain portions of the video being encoded. For example, encoder 402 may determine that some portion of video is important and should be encoded using PCM. In this case, encoder 402 encodes the portion of video (e.g., a block, multiple blocks, slice, picture, or series of pictures) using PCM. When encoder 402 determines that another portion of video does not need to be encoded using PCM, then encoder 402 reverts back to encoding the video using prediction, transformation, and quantization, which results in a loss of information from the original portion of video when the portion of video is reconstructed at decoder 403 .
- portion of video e.g., a block, multiple blocks, slice, picture, or series of pictures
- Encoder 402 uses a flag PCM_enabled_flag that indicates whether or not PCM data is present in a sequence of video. For example, a PCM mode may be enabled or disabled. When the flag PCM_enabled_flag is set to a first value, such as 0, which indicates that the PCM mode is disabled, then PCM data is not present in the sequence of video. However, when the flag PCM_enabled_flag is equal to a second value, such as 1, which indicates the PCM mode is enabled, then it is possible that PCM data is present in the sequence of video. Although PCM mode may be enabled, it is possible that encoder 402 does not encode any portions of video using PCM, but has the choice to do so. When PCM mode is disabled, encoder 402 cannot use PCM to encode any portions of video in the applicable sequence of video.
- the flag PCM_enabled_flag is found in a sequence parameter set (SPS) header.
- SPS header is a header for a sequence of pictures.
- the flag PCM_enabled_flag governs whether PCM data may be found in the sequence of pictures that is associated with the SPS header.
- the flag PCM_enabled_flag may be located in other headers, such as in a slice header, or may be located at the block level. If the flag PCM_enabled_flag is in the slice header, the flag PCM_enabled_flag applies to all blocks in the slice. When at the block level, the flag PCM_enabled_flag applies to the block.
- encoder 402 may decide encode portions of video using PCM coding block 404 - 1 . This bypasses the prediction, transformation, and quantization steps as will be discussed in more detail below.
- encoder 402 may decide to encode certain pictures (or portions of pictures) in the sequence using PCM.
- Encoder 402 would indicate which portions of video were encoded using PCM to decoder 403 .
- encoder 402 indicates which blocks in a picture are encoded using PCM using a flag PCM_flag. That is, each block encoded using PCM has the flag PCM_flag set to a value, such as 1, to indicate the block was encoded using PCM.
- Encoder 402 may encode parameters that are associated with the PCM mode.
- the parameters govern how the PCM data was encoded and how the PCM data should be decoded.
- the parameters include a bit depth for a PCM luma component and a bit depth for a PCM chroma component, a minimum coding block size for the PCM luma component, a difference between the maximum and minimum coding block size for the PCM luma component, and a flag that indicates whether loop filtering is disabled or not for PCM samples.
- FIG. 5A shows an example of a syntax 500 that describes a grouping 501 of the parameters for the PCM coding mode according to one embodiment.
- Syntax 500 may be for a SPS header, but may be used for other headers.
- Syntax 500 governs how encoder 402 encodes the SPS header and how decoder 403 decodes the SPS header.
- Particular embodiments group the parameters for the PCM mode together in grouping 501 in the SPS header. For example, encoder 402 encodes the PCM parameters consecutively in the encoded bitstream. Then, decoder 403 may decode the PCM parameters consecutively when the encoded bitstream is received.
- the flag PCM_enabled_flag is shown.
- the flag PCM_enabled_flag may indicate whether the PCM mode is enabled or disabled for the sequence of pictures.
- encoder 402 may encode the value for the flag PCM_enabled_flag as 0 or 1.
- syntax 500 includes a conditional statement (e.g., if statement) that tests whether the flag PCM_enabled_flag is enabled or disabled. If the flag PCM_enabled_flag is disabled, then encoder 402 does not encode the parameters shown in grouping 501 in the encoded bitstream. Further, decoder 403 does not attempt to decode the parameters shown in grouping 501 if the flag PCM_enabled_flag is disabled. However, if the flag PCM_enabled_flag is enabled, then the conditional statement evaluates to true, and encoder 402 encodes the PCM parameters shown in grouping 501 in the encoded bitstream and also decoder 403 decodes the PCM parameters from the encoded bitstream.
- a conditional statement e.g., if statement
- syntax 500 includes a parameter PCM_sample_bit_depth_luma_minus1.
- This parameter specifies the number of bits used to represent each of the PCM sample values of a luma component.
- the video may be sampled at uniform intervals.
- the parameter PCM_sample_bit_depth_luma_minus1 is less than or equal to the value of the bit depth used to represent a non-PCM sample of a luma component.
- the luma component of a sample e.g., a pixel
- the luma component of a sample may be represented by 8 bits; however, although the luma component is equal to 8 bits, a PCM sample could be represented by a different number of bits, such as 8 bits or less.
- syntax 500 uses a separate PCM parameter for the PCM luma component.
- bit depth for the PCM luma component is 4 bits, then the parameter PCM_sample_bit_depth_luma_minus1 is equal to “3”.
- a parameter PCM_sample_bit_depth_chroma_minus1 is shown.
- the parameter PCM_sample_bit_depth_chroma_minus1 specifies a number of bits used to represent each of the PCM sample values of chroma components.
- the value of the parameter PCM_sample_bit_depth_chroma_minus1 may be less than or equal to the value of the bit depth of the chroma component for a non-PCM sample.
- the chroma component for non-PCM samples is represented by 8 bits, the chroma component of the PCM sample should be equal to 8 bits or less. For example, if the PCM sample bit depth is 4 bits and thus the parameter PCM_sample_bit_depth_chroma_minus1 is equal to “3”.
- a parameter log 2_diff_minPCM_luma_coding_block_size_minus3 defines the minimum luma coding block size for the PCM mode.
- the parameter log 2_min_PCM_luma_coding_block_size_minus3+3 specifies the minimum size of coding blocks for the luma component that have been encoded using PCM (e.g., when a flag PCM_flag is equal to 1 for the coding block).
- the parameter log 2_diff_max_min_PCM_luma_coding_block_size specifies the difference between the maximum and minimum size of coding blocks that are coded using PCM (e.g., when a flag PCM_flag is equal to 1 for the block).
- the parameter log 2_diff_max_min_PCM_luma_coding_block_size is coded as the value of 3. This indicates that PCM luma coding block sizes are in the range of a 8 ⁇ 8 minimum block size to a 64 ⁇ 64 maximum block size.
- the maximum PCM luma coding block size may be different from the maximum coding block size. That is, the PCM coding block sizes may vary within the range of the minimum coding block size and the maximum coding block size.
- a parameter PCM_loop_filter_disable_flag specifies whether the loop filter process is disabled on reconstructed samples that use the PCM mode (e.g., where the PCM_flag is equal to 1 for a block). If the parameter PCM_loop_filter_disable_flag is equal to 1, the de-blocking filter and sample adaptive offset filter processes on the reconstructed samples for a block decoded using PCM (e.g., with the PCM_flag equal to 1) are disabled. Otherwise, if the parameter PCM_loop_filter_disable_flag value is equal to 0, the de-blocking filter and sample adaptive offset filter processes on the reconstructed samples for a block decoded using PCM are enabled.
- encoder 402 may have encoded the PCM parameters in different portions of the encoded bitstream due to the syntax not grouping the PCM parameters all together. In this case, every time PCM parameters in non-consecutive portions of the syntax could be inserted, the syntax specified a conditional statement should be evaluated to determine whether the PCM mode is enabled to determine whether to insert the PCM parameters.
- the likelihood of error may be reduced and also computations are saved. For example, encoder 402 or decoder 403 only need to test the conditional statement once for the entire group of parameters.
- FIG. 5B shows a more detailed example of syntax 500 according to one embodiment.
- the bit depth for the non-PCM samples of the luma component is shown at 508 - 2 and the bit depth for the non-PCM samples of the chroma component is shown at 510 - 2 in syntax 500 .
- the syntax of the PCM parameter grouping shown at 501 is not found after the parameter bit_depth_luma_minus8 shown at 508 - 2 or the parameter bit_depth_chroma_minus8 shown at 510 - 2 , which means the parameters PCM_sample_bit_depth_luma_minus1 and PCM_sample_bit_depth_chroma_minus1 are not found after the parameters bit_depth_luma_minus8 and bit_depth_chroma_minus8 in the encoded bitstream.
- the PCM minimum luma coding block size may be less than or equal to the block size specified by the luma coding block size.
- a parameter log 2_diff max_min_luma_coding_block_size specifies the difference between the maximum and minimum size of coding blocks for the luma component for non-PCM samples.
- the parameters log 2_min_luma_coding_block_size_minus3 and log 2_diff_max_min_luma_coding_block_size at 512 - 2 and 514 - 2 , respectively, are separately located from the grouping shown at 501 in syntax 500 .
- the parameters log 2_min_PCM_luma_coding_block_size_minus3 and log 2_diff_max_min_PCM_luma_coding_block_size shown at 512 - 1 and 514 - 1 , respectively, are not located after the parameters shown at 512 - 2 and 514 - 2 .
- log 2_diff_min_PCM_luma_coding_block_size_minus3 and log 2_diff_max_min_PCM_luma_coding_block_size are moved in syntax 500 such that they can be included consecutively with the parameters PCM_sample_bit_depth_luma_minus1 and PCM_sample_bit_depth_chroma_minus1 shown at 508 - 1 and 510 - 1 . This again requires only one conditional statement to be evaluated for all of the PCM parameters in the grouping shown at 501 .
- a second conditional e.g., if statement
- log 2_diff_min_PCM_luma_coding_block_size_minus3 and log 2_diff_max_min_PCM_luma_coding_block_size in the encoded bitstream or to decode the parameters from the encoded bitstream was included in the syntax right after the parameters log 2_min_luma_coding_block_size_minus3 and log 2_diff_max_min_luma_coding_block_size. This grouped the related parameters together, but as will be discussed below, caused multiple conditional statements to be tested.
- the flag sample_adaptive_offset_enabled_flag indicates whether or not the sample adaptive offset process is enabled or disabled for the sequence of pictures.
- the parameter PCM_loop_filter_disable_flag is not located after the flag sample_adaptive_offset_enabled_flag in syntax 500 . Rather, the flag PCM_loop_filter_disabled_flag is grouped with the other PCM parameters consecutively in grouping 501 .
- PCM parameters are grouped consecutively, only one conditional statement needs to be evaluated by encoder 402 or decoder 403 . Thus, computations are saved by reducing the number of conditional statements encoder 402 and decoder 403 need to evaluate. Further, by coding the PCM parameters consecutively, less error may result. For example, encoder 402 can consecutively encode the PCM parameters. Further, decoder 403 may know that the PCM parameters are included consecutively in the encoded bitstream and can perform error checking easily.
- FIG. 6 shows an example of an encoded bitstream 600 according to one embodiment.
- the encoded bitstream includes the flag PCM_enabled_flag. Additionally, in this example, the PCM_enabled_flag is enabled and thus following the PCM_enabled_flag in the encoded bitstream are the PCM parameters shown at 508 - 1 , 510 - 1 , 512 - 1 , 514 - 1 , and 516 - 1 in syntax 500 . As discussed above, the PCM parameters are included consecutively in the encoded bitstream.
- the values for the parameters PCM_sample_bit_depth_luma_minus1, PCM_sample_bit_depth_chroma_minus1, log 2_diff_min_PCM_luma_coding_block_size_minus3, log 2_diff_max_min_PCM_luma_coding_block_size, and PCM_loop_filter_disable_flag may be 3, 3, 0, 3, and 1.
- PCM_enabled_flag set as 1 then the bitstream from right to left includes the values of 1, 11, 11, 0, 11, and 1.
- FIG. 7 depicts a simplified flowchart 700 of a method for encoding PCM parameters according to one embodiment.
- encoder 402 determines if a flag PCM_enabled_flag is enabled or disabled.
- encoder 402 determines values for the PCM parameters.
- values for the parameters PCM_sample_bit_depth_luma_minus1, PCM_sample_bit_depth_chroma_minus1, log 2_diff_min_PCM_luma_coding_block_size_minus3, log 2_diff_max_min_PCM_luma_coding_block_size, and PCM_loop_filter_disable_flag are determined.
- encoder 402 encodes values for the PCM parameters.
- encoder 402 if the flag PCM_enabled_flag is disabled or after the PCM parameters have been encoded, encoder 402 continues to encode parameters for the SPS header.
- FIG. 8 depicts a simplified flowchart 800 for decoding PCM parameters according to one embodiment.
- decoder 403 receives an encoded bitstream.
- the encoded bitstream may or may not include the PCM parameters depending on whether or not the PCM mode has been enabled or disabled for a sequence of pictures.
- decoder 403 decodes the flag PCM_enabled_flag.
- decoder 403 determines the value for the flag PCM_enabled_flag.
- decoder 403 determines if the flag PCM_enabled_flag is enabled or disabled. If the value of the flag PCM_enabled_flag is equal to 1 (e.g., enabled), then, at 810 , decoder 403 decodes the PCM parameters that are located consecutively after the PCM_enabled_flag in the encoded bitstream.
- PCM_sample_bit_depth_luma_minus1, PCM_sample_bit_depth_chroma_minus1, log 2_diff_min_PCM_luma_coding_block_size_minus3, log 2_diff_max_min_PCM_luma_coding_block_size, and PCM_loop_filter_disable_flag are decoded.
- decoder 403 does not attempt to decode the PCM parameters from the encoded bitstream.
- decoder 403 continues to decode the SPS header.
- encoder 402 can be incorporated or otherwise associated with a transcoder or an encoding apparatus at a headend and decoder 403 can be incorporated or otherwise associated with a downstream device, such as a mobile device, a set top box or a transcoder.
- FIG. 9 depicts an example of encoder 402 according to one embodiment. A general operation of encoder 402 will now be described; however, it will be understood that variations on the encoding process described will be appreciated by a person skilled in the art based on the disclosure and teachings herein.
- a branch includes PCM encoding block 404 - 1 .
- the switch at 902 is switched to select the branch including PCM encoding block 404 - 1 .
- transform block 907 , quantizer 908 , and entropy coding block 910 are skipped.
- a prediction PU, x′ is obtained through either spatial prediction or temporal prediction.
- the prediction PU is then subtracted from the current PU, resulting in a residual PU, e.
- Spatial prediction relates to intra mode pictures. Intra mode coding can use data from the current input image, without referring to other images, to code an I picture.
- a spatial prediction block 904 may include different spatial prediction directions per PU, such as horizontal, vertical, 45-degree diagonal, 135-degree diagonal, DC (flat averaging), and planar, or any other direction.
- the spatial prediction direction for the PU can be coded as a syntax element.
- brightness information (Luma) and color information (Chroma) for the PU can be predicted separately.
- the number of Luma intra prediction modes for all block sizes is 35.
- An additional mode can be used for the Chroma intra prediction mode.
- the Chroma prediction mode can be called “IntraFromLuma.”
- Temporal prediction block 906 performs temporal prediction.
- Inter mode coding can use data from the current input image and one or more reference images to code “P” pictures and/or “B” pictures. In some situations and/or embodiments, inter mode coding can result in higher compression than intra mode coding.
- inter mode PUs can be temporally predictive coded, such that each PU of the CU can have one or more motion vectors and one or more associated reference images.
- Temporal prediction can be performed through a motion estimation operation that searches for a best match prediction for the PU over the associated reference images. The best match prediction can be described by the motion vectors and associated reference images.
- P pictures use data from the current input image and one or more reference images, and can have up to one motion vector.
- B pictures may use data from the current input image and one or more reference images, and can have up to two motion vectors.
- the motion vectors and reference pictures can be coded in the encoded bitstream.
- the motion vectors can be syntax elements “MV,” and the reference pictures can be syntax elements “refIdx.”
- inter mode can allow both spatial and temporal predictive coding. The best match prediction is described by the motion vector (MV) and associated reference picture index (refIdx). The motion vector and associated reference picture index are included in the coded bitstream.
- Transform block 907 performs a transform operation with the residual PU, e.
- a set of block transforms of different sizes can be performed on a CU, such that some PUs can be divided into smaller TUs and other PUs can have TUs the same size as the PU. Division of CUs and PUs into TUs can be shown by a quadtree representation.
- Transform block 907 outputs the residual PU in a transform domain, E.
- a quantizer 908 then quantizes the transform coefficients of the residual PU, E.
- Quantizer 908 converts the transform coefficients into a finite number of possible values. In some embodiments, this is a lossy operation in which data lost by quantization may not be recoverable.
- entropy coding block 910 entropy encodes the quantized coefficients, which results in final compression bits to be transmitted. Different entropy coding methods may be used, such as context-adaptive variable length coding (CAVLC) or context-adaptive binary arithmetic coding (CABAC).
- CAVLC context-adaptive variable length coding
- CABAC context-adaptive binary arithmetic coding
- a de-quantizer 912 de-quantizes the quantized transform coefficients of the residual PU.
- De-quantizer 912 then outputs the de-quantized transform coefficients of the residual PU, E′.
- An inverse transform block 914 receives the de-quantized transform coefficients, which are then inverse transformed resulting in a reconstructed residual PU, e′.
- the reconstructed PU, e′ is then added to the corresponding prediction, x′, either spatial or temporal, to form the new reconstructed PU, x′′.
- a loop filter 916 performs de-blocking on the reconstructed PU, x′′, to reduce blocking artifacts.
- loop filter 916 may perform a sample adaptive offset process after the completion of the de-blocking filter process for the decoded picture, which compensates for a pixel value offset between reconstructed pixels and original pixels. Also, loop filter 916 may perform adaptive loop filtering over the reconstructed PU, which minimizes coding distortion between the input and output pictures. Additionally, if the reconstructed pictures are reference pictures, the reference pictures are stored in a reference buffer 918 for future temporal prediction. Intra mode coded images can be a possible point where decoding can begin without needing additional reconstructed images.
- FIG. 10 depicts an example of decoder 403 according to one embodiment.
- Decoder 403 receives input bits from encoder 402 for encoded video content.
- a switch is used to select between the PCM decoding mode and a decoding mode using prediction, transformation, and quantization.
- portions of video are decoded using PCM decoding block 404 - 2 .
- the switch is switched to a second state, the portions of video are decoded using de-quantization, inverse transformation, and prediction.
- An entropy decoding block 1030 performs entropy decoding on the input bitstream to generate quantized transform coefficients of a residual PU.
- a de-quantizer 1032 de-quantizes the quantized transform coefficients of the residual PU.
- De-quantizer 1032 then outputs the de-quantized transform coefficients of the residual PU, E′.
- An inverse transform block 1034 receives the de-quantized transform coefficients, which are then inverse transformed resulting in a reconstructed residual PU, e′.
- the reconstructed PU, e′ is then added to the corresponding prediction, x′, either spatial or temporal, to form the new reconstructed PU, x′′.
- a loop filter 1036 performs de-blocking on the reconstructed PU, x′′, to reduce blocking artifacts. Additionally, loop filter 1036 may perform a sample adaptive offset process after the completion of the de-blocking filter process for the decoded picture, which compensates for a pixel value offset between reconstructed pixels and original pixels. Also, loop filter 1036 may perform adaptive loop filtering over the reconstructed PU, which minimizes coding distortion between the input and output pictures. Additionally, if the reconstructed pictures are reference pictures, the reference pictures are stored in a reference buffer 1038 for future temporal prediction.
- the prediction PU, x′ is obtained through either spatial prediction or temporal prediction.
- a spatial prediction block 1040 may receive decoded spatial prediction directions per PU, such as horizontal, vertical, 45-degree diagonal, 135-degree diagonal, DC (flat averaging), and planar. The spatial prediction directions are used to determine the prediction PU, x′.
- a temporal prediction block 1006 performs temporal prediction through a motion estimation operation. Particular embodiments may be used in determining the prediction, such as collocated reference picture manager 404 is used in the prediction process to determine the collocated reference picture to use. A decoded motion vector is used to determine the prediction PU, x′. Interpolation may be used in the motion estimation operation.
- Particular embodiments may be implemented in a non-transitory computer-readable storage medium for use by or in connection with the instruction execution system, apparatus, system, or machine.
- the computer-readable storage medium contains instructions for controlling a computer system to perform a method described by particular embodiments.
- the computer system may include one or more computing devices.
- the instructions, when executed by one or more computer processors, may be operable to perform that which is described in particular embodiments.
Abstract
Description
Claims (20)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/831,074 US10003793B2 (en) | 2012-10-01 | 2013-03-14 | Processing of pulse code modulation (PCM) parameters |
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US201261708052P | 2012-10-01 | 2012-10-01 | |
US13/831,074 US10003793B2 (en) | 2012-10-01 | 2013-03-14 | Processing of pulse code modulation (PCM) parameters |
Publications (2)
Publication Number | Publication Date |
---|---|
US20140092984A1 US20140092984A1 (en) | 2014-04-03 |
US10003793B2 true US10003793B2 (en) | 2018-06-19 |
Family
ID=50385179
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/831,074 Active 2036-05-19 US10003793B2 (en) | 2012-10-01 | 2013-03-14 | Processing of pulse code modulation (PCM) parameters |
Country Status (1)
Country | Link |
---|---|
US (1) | US10003793B2 (en) |
Cited By (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10567773B2 (en) * | 2013-12-26 | 2020-02-18 | Samsung Electronics Co., Ltd. | Inter-layer video decoding method for performing subblock-based prediction and apparatus therefor, and inter-layer video encoding method for performing subblock-based prediction and apparatus therefor |
US11627321B2 (en) | 2012-03-08 | 2023-04-11 | Google Llc | Adaptive coding of prediction modes using probability distributions |
Families Citing this family (7)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
KR102276914B1 (en) * | 2013-10-24 | 2021-07-13 | 삼성전자주식회사 | Video encoding devic and driving method thereof |
WO2020056763A1 (en) * | 2018-09-21 | 2020-03-26 | Alibaba Group Holding Limited | Adaptive coding of video coding units based on coding block type |
MY189399A (en) * | 2019-03-21 | 2022-02-09 | Samsung Electronics Co Ltd | Method and device for encoding video having block size set for each block shape, and method and device for decoding video |
WO2020215338A1 (en) * | 2019-04-26 | 2020-10-29 | 深圳市大疆创新科技有限公司 | Video coding and decoding method and apparatus |
JP2021002724A (en) * | 2019-06-20 | 2021-01-07 | キヤノン株式会社 | Image encoding device, image decoding device, method, and program |
CN114503561A (en) * | 2019-10-09 | 2022-05-13 | 北京达佳互联信息技术有限公司 | Method and apparatus for prediction refinement using optical flow, bi-directional optical flow, and decoder-side motion vector refinement |
US11368715B2 (en) * | 2019-12-27 | 2022-06-21 | Qualcomm Incorporated | Block-based delta pulse code modulation for video coding |
Citations (18)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20030185455A1 (en) | 1999-02-04 | 2003-10-02 | Goertzen Kenbe D. | Digital image processor |
US20040258156A1 (en) | 2002-11-22 | 2004-12-23 | Takeshi Chujoh | Video encoding/decoding method and apparatus |
US20050180500A1 (en) | 2001-12-31 | 2005-08-18 | Stmicroelectronics Asia Pacific Pte Ltd | Video encoding |
US20080279466A1 (en) | 2007-05-08 | 2008-11-13 | Kyeong Ho Yang | Methods and Systems for Rate-Distortion Optimized Quantization of Transform Blocks in Block Transform Video Coding |
US20100027625A1 (en) | 2006-11-16 | 2010-02-04 | Tilo Wik | Apparatus for encoding and decoding |
US20100061461A1 (en) | 2008-09-11 | 2010-03-11 | On2 Technologies Inc. | System and method for video encoding using constructed reference frame |
US20100166069A1 (en) | 2008-12-31 | 2010-07-01 | Nxp B.V. | System and method for video compression using predictive coding |
US20120027084A1 (en) | 2010-03-15 | 2012-02-02 | Kai Zhang | Methods of utilizing tables adaptively updated for coding/decoding and related processing circuits thereof |
US20120257676A1 (en) | 2011-04-06 | 2012-10-11 | Google Inc. | Apparatus and method for coding using motion vector segmentation |
US20120257677A1 (en) | 2011-04-07 | 2012-10-11 | Google Inc. | Encoding and decoding motion via image segmentation |
US8594189B1 (en) | 2011-04-07 | 2013-11-26 | Google Inc. | Apparatus and method for coding video using consistent regions and resolution scaling |
US20130336395A1 (en) * | 2012-06-18 | 2013-12-19 | Qualcomm Incorporated | Unification of signaling lossless coding mode and pulse code modulation (pcm) mode in video coding |
US20140023138A1 (en) * | 2012-07-20 | 2014-01-23 | Qualcomm Incorporated | Reusing parameter sets for video coding |
US8638863B1 (en) | 2010-05-18 | 2014-01-28 | Google Inc. | Apparatus and method for filtering video using extended edge-detection |
US20140036998A1 (en) * | 2011-11-03 | 2014-02-06 | Matthias Narroschke | Quantization parameter for blocks coded in the pcm mode |
US20140140406A1 (en) | 2012-11-16 | 2014-05-22 | General Instrument Corporation | Devices and methods for processing of non-idr related syntax for high efficiency video coding (hevc) |
US8781004B1 (en) | 2011-04-07 | 2014-07-15 | Google Inc. | System and method for encoding video using variable loop filter |
US20140307779A1 (en) * | 2011-11-01 | 2014-10-16 | Nec Corporation | Video encoding device, video decoding device, video encoding method, video decoding method, and program |
-
2013
- 2013-03-14 US US13/831,074 patent/US10003793B2/en active Active
Patent Citations (23)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20030185455A1 (en) | 1999-02-04 | 2003-10-02 | Goertzen Kenbe D. | Digital image processor |
US20050180500A1 (en) | 2001-12-31 | 2005-08-18 | Stmicroelectronics Asia Pacific Pte Ltd | Video encoding |
US20040258156A1 (en) | 2002-11-22 | 2004-12-23 | Takeshi Chujoh | Video encoding/decoding method and apparatus |
US20100027625A1 (en) | 2006-11-16 | 2010-02-04 | Tilo Wik | Apparatus for encoding and decoding |
US20080279466A1 (en) | 2007-05-08 | 2008-11-13 | Kyeong Ho Yang | Methods and Systems for Rate-Distortion Optimized Quantization of Transform Blocks in Block Transform Video Coding |
US7957600B2 (en) | 2007-05-08 | 2011-06-07 | Arris Group, Inc. | Methods and systems for rate-distortion optimized quantization of transform blocks in block transform video coding |
US20100061461A1 (en) | 2008-09-11 | 2010-03-11 | On2 Technologies Inc. | System and method for video encoding using constructed reference frame |
US8385404B2 (en) | 2008-09-11 | 2013-02-26 | Google Inc. | System and method for video encoding using constructed reference frame |
US20130044817A1 (en) | 2008-09-11 | 2013-02-21 | James Bankoski | System and method for video encoding using constructed reference frame |
US20100166069A1 (en) | 2008-12-31 | 2010-07-01 | Nxp B.V. | System and method for video compression using predictive coding |
US20120027084A1 (en) | 2010-03-15 | 2012-02-02 | Kai Zhang | Methods of utilizing tables adaptively updated for coding/decoding and related processing circuits thereof |
US8638863B1 (en) | 2010-05-18 | 2014-01-28 | Google Inc. | Apparatus and method for filtering video using extended edge-detection |
US8798131B1 (en) | 2010-05-18 | 2014-08-05 | Google Inc. | Apparatus and method for encoding video using assumed values with intra-prediction |
US20120257676A1 (en) | 2011-04-06 | 2012-10-11 | Google Inc. | Apparatus and method for coding using motion vector segmentation |
US8693547B2 (en) | 2011-04-06 | 2014-04-08 | Google Inc. | Apparatus and method for coding using motion vector segmentation |
US20120257677A1 (en) | 2011-04-07 | 2012-10-11 | Google Inc. | Encoding and decoding motion via image segmentation |
US8781004B1 (en) | 2011-04-07 | 2014-07-15 | Google Inc. | System and method for encoding video using variable loop filter |
US8594189B1 (en) | 2011-04-07 | 2013-11-26 | Google Inc. | Apparatus and method for coding video using consistent regions and resolution scaling |
US20140307779A1 (en) * | 2011-11-01 | 2014-10-16 | Nec Corporation | Video encoding device, video decoding device, video encoding method, video decoding method, and program |
US20140036998A1 (en) * | 2011-11-03 | 2014-02-06 | Matthias Narroschke | Quantization parameter for blocks coded in the pcm mode |
US20130336395A1 (en) * | 2012-06-18 | 2013-12-19 | Qualcomm Incorporated | Unification of signaling lossless coding mode and pulse code modulation (pcm) mode in video coding |
US20140023138A1 (en) * | 2012-07-20 | 2014-01-23 | Qualcomm Incorporated | Reusing parameter sets for video coding |
US20140140406A1 (en) | 2012-11-16 | 2014-05-22 | General Instrument Corporation | Devices and methods for processing of non-idr related syntax for high efficiency video coding (hevc) |
Non-Patent Citations (28)
Title |
---|
Anonymous: "Study Text of ISO/IEC DIS 23800-2 High Efficiency Video Coding", 102. MPEG Meeting ; Oct. 15, 2012-Oct. 19, 2012; Shanghai; (Motion Picture Expert Group or ISO/IEC JTC1/SC29/WG11) No. N13155, Dec. 25, 2012, all pages. |
Anonymous: "Text of ISO/IEC DIS 23800-2 High Efficiency Video Coding", 101. MPEG Meeting ; Jul. 16, 2012-Jul. 20, 2012; Stockholm; (Motion Picture Expert Group or ISO/IEC JTC1/SC29/WG11) No. N12935, Aug. 3, 2012, all pages. |
B. Bross, W.-J. Han, G. J. Sullivan, J.-R. Ohm, T. Wiegand, "High Efficiency Video Coding (HEVC) text specification draft 7," Joint Collaborative Team on Video Coding (JCT-VC) of ITU-T SG16 WP3 and ISO/IEC JTC1/SC29/WG11, 9th Meeting: Geneva, CH, Apr. 27-May 7, 2012, JCTVC-I1003_d9, 278 pages. |
Bankoski et al. "Technical Overview of VP8, an Open Source Video Codec for the Web". Dated Jul. 11, 2011. |
Bankoski et al. "VP8 Data Format and Decoding Guide" Independent Submission. RFC 6389, Dated Nov. 2011. |
Bankoski et al. "VP8 Data Format and Decoding Guide; draft-bankoski-vp8-bitstream-02" Network Working Group. Internet-Draft, May 18, 2011, 288 pp. |
Bross, Benjamin et al.: "High Efficiency Video Coding (HEVC) text specification draft 9,"JCT-VC , Nov. 8, 2012, Retrieved from the internet: URL: http://phenix.int-evry.fr/jct/doc_end_user/documents/11_Shanghai/wg11/JCTVC-K1003-v10.zip [retrieved on Mar. 7, 2014] all pages. |
Implementors' Guide; Series H: Audiovisual and Multimedia Systems; Coding of moving video: Implementors Guide for H.264: Advanced video coding for generic audiovisual services. H.264. International Telecommunication Union. Version 12. Dated Jul. 30, 2010. |
ISR, "ISR Search Report and Written Opinion of the International Searching Authority" for International Application No. ISR/US2013/065870 (CS41073) dated Apr. 10, 2014, 15 pages. |
Mozilla, "Introduction to Video Coding Part 1: Transform Coding", Video Compression Overview, Mar. 2012, 171 pp. |
Overview; VP7 Data Format and Decoder. Version 1.5. On2 Technologies, IxNC. Dated Mar. 28, 2005. |
Series H: Audiovisual and Multimedia Systems; Infrastructure of audiovisual services-Coding of moving video. H.264. Advanced video coding for generic audiovisual services. International Telecommunication Union. Version 11. Dated Mar. 2009. |
Series H: Audiovisual and Multimedia Systems; Infrastructure of audiovisual services—Coding of moving video. H.264. Advanced video coding for generic audiovisual services. International Telecommunication Union. Version 11. Dated Mar. 2009. |
Series H: Audiovisual and Multimedia Systems; Infrastructure of audiovisual services-Coding of moving video. H.264. Advanced video coding for generic audiovisual services. International Telecommunication Union. Version 12. Dated Mar. 2010. |
Series H: Audiovisual and Multimedia Systems; Infrastructure of audiovisual services—Coding of moving video. H.264. Advanced video coding for generic audiovisual services. International Telecommunication Union. Version 12. Dated Mar. 2010. |
Series H: Audiovisual and Multimedia Systems; Infrastructure of audiovisual services-Coding of moving video. H.264. Advanced video coding for generic audiovisual services. Version 8. International Telecommunication Union. Dated Nov. 1, 2007. |
Series H: Audiovisual and Multimedia Systems; Infrastructure of audiovisual services—Coding of moving video. H.264. Advanced video coding for generic audiovisual services. Version 8. International Telecommunication Union. Dated Nov. 1, 2007. |
Series H: Audiovisual and Multimedia Systems; Infrastructure of audiovisual services-Coding of moving video. H.264. Amendment 2: New profiles for professional applications. International Telecommunication Union. Dated Apr. 2007. |
Series H: Audiovisual and Multimedia Systems; Infrastructure of audiovisual services—Coding of moving video. H.264. Amendment 2: New profiles for professional applications. International Telecommunication Union. Dated Apr. 2007. |
Series H: Audiovisual and Multimedia Systems; Infrastructure of audiovisual services-Coding of moving video; Advanced video coding for generic audiovisual services. H.264. Amendment 1: Support of additional colour spaces and removal of the High 4:4:4 Profile. International Telecommunication Union. Dated Jun. 2006. |
Series H: Audiovisual and Multimedia Systems; Infrastructure of audiovisual services—Coding of moving video; Advanced video coding for generic audiovisual services. H.264. Amendment 1: Support of additional colour spaces and removal of the High 4:4:4 Profile. International Telecommunication Union. Dated Jun. 2006. |
Series H: Audiovisual and Multimedia Systems; Infrastructure of audiovisual services-Coding of moving video; Advanced video coding for generic audiovisual services. H.264. Version 1. International Telecommunication Union. Dated May 2003. |
Series H: Audiovisual and Multimedia Systems; Infrastructure of audiovisual services—Coding of moving video; Advanced video coding for generic audiovisual services. H.264. Version 1. International Telecommunication Union. Dated May 2003. |
Series H: Audiovisual and Multimedia Systems; Infrastructure of audiovisual services-Coding of moving video; Advanced video coding for generic audiovisual services. H.264. Version 3. International Telecommunication Union. Dated Mar. 2005. |
Series H: Audiovisual and Multimedia Systems; Infrastructure of audiovisual services—Coding of moving video; Advanced video coding for generic audiovisual services. H.264. Version 3. International Telecommunication Union. Dated Mar. 2005. |
VP6 Bitstream & Decoder Specification. Version 1.02. On2 Technologies, IxNC. Dated Aug. 17, 2006. |
VP6 Bitstream & Decoder Specification. Version 1.03. On2 Technologies, IxNC. Dated Oct. 29, 2007. |
VP8 Data Format and Decoding Guide. WebM Project. Google On2. Dated: Dec. 1, 2010. |
Cited By (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US11627321B2 (en) | 2012-03-08 | 2023-04-11 | Google Llc | Adaptive coding of prediction modes using probability distributions |
US10567773B2 (en) * | 2013-12-26 | 2020-02-18 | Samsung Electronics Co., Ltd. | Inter-layer video decoding method for performing subblock-based prediction and apparatus therefor, and inter-layer video encoding method for performing subblock-based prediction and apparatus therefor |
Also Published As
Publication number | Publication date |
---|---|
US20140092984A1 (en) | 2014-04-03 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US10003793B2 (en) | Processing of pulse code modulation (PCM) parameters | |
US9380319B2 (en) | Implicit transform unit representation | |
US9253483B2 (en) | Signaling of scaling list | |
US9210442B2 (en) | Efficient transform unit representation | |
US9210425B2 (en) | Signaling of temporal motion vector predictor (MVP) flag for temporal prediction | |
US9560383B2 (en) | Intra pulse code modulation (IPCM) and lossless coding mode deblocking for video coding | |
US9549177B2 (en) | Evaluation of signaling of collocated reference picture for temporal prediction | |
US10701360B2 (en) | Method and device for determining the value of a quantization parameter | |
US9319681B2 (en) | Signaling of temporal motion vector predictor (MVP) enable flag | |
US20130039417A1 (en) | Residual tree structure of transform unit partitioning | |
US9300959B2 (en) | Implicit determination of collocated picture for temporal prediction | |
US20140146894A1 (en) | Devices and methods for modifications of syntax related to transform skip for high efficiency video coding (hevc) | |
US20140092956A1 (en) | Adaptive transform options for scalable extension | |
EP2920971B1 (en) | Devices and methods for processing of non-idr related syntax for high efficiency video coding (hevc) | |
WO2018102782A1 (en) | Indication of bilateral filter usage in video coding | |
US20140092975A1 (en) | Devices and methods for using base layer motion vector for enhancement layer motion vector prediction | |
US11039166B2 (en) | Devices and methods for using base layer intra prediction mode for enhancement layer intra mode prediction | |
US9826229B2 (en) | Scan pattern determination from base layer pixel information for scalable extension | |
WO2014028631A1 (en) | Signaling of temporal motion vector predictor (mvp) enable flag | |
KR20130070215A (en) | Method and apparatus for seletcing the adaptive depth information and processing deblocking filtering | |
WO2014051962A1 (en) | Signaling of scaling list |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GENERAL INSTRUMENT CORPORATION, PENNSYLVANIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:FANG, XUE;WANG, LIMIN;REEL/FRAME:030118/0835Effective date: 20130328 |
|
AS | Assignment |
Owner name: MOTOROLA MOBILITY LLC, ILLINOISFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:GENERAL INSTRUMENT HOLDINGS, INC.;REEL/FRAME:030866/0113Effective date: 20130528Owner name: GENERAL INSTRUMENT HOLDINGS, INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:GENERAL INSTRUMENT CORPORATION;REEL/FRAME:030764/0575Effective date: 20130415 |
|
AS | Assignment |
Owner name: GOOGLE TECHNOLOGY HOLDINGS LLC, CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MOTOROLA MOBILITY LLC;REEL/FRAME:034274/0290Effective date: 20141028 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 4 |
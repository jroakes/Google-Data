CN112154501B - Hotword suppression - Google Patents
Hotword suppression Download PDFInfo
- Publication number
- CN112154501B CN112154501B CN201980034189.7A CN201980034189A CN112154501B CN 112154501 B CN112154501 B CN 112154501B CN 201980034189 A CN201980034189 A CN 201980034189A CN 112154501 B CN112154501 B CN 112154501B
- Authority
- CN
- China
- Prior art keywords
- audio
- watermark
- audio data
- computing device
- watermarked
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active
Links
- 230000001629 suppression Effects 0.000 title description 5
- 238000000034 method Methods 0.000 claims abstract description 68
- 238000012545 processing Methods 0.000 claims abstract description 49
- 238000012549 training Methods 0.000 claims description 11
- 238000013518 transcription Methods 0.000 claims description 10
- 230000035897 transcription Effects 0.000 claims description 10
- 238000010801 machine learning Methods 0.000 claims description 9
- 230000000737 periodic effect Effects 0.000 claims description 8
- 230000004044 response Effects 0.000 claims description 3
- 230000009471 action Effects 0.000 abstract description 13
- 238000004590 computer program Methods 0.000 abstract description 6
- 230000015654 memory Effects 0.000 description 37
- 230000008569 process Effects 0.000 description 20
- 238000004891 communication Methods 0.000 description 18
- 230000008901 benefit Effects 0.000 description 11
- 238000001514 detection method Methods 0.000 description 11
- 239000011159 matrix material Substances 0.000 description 11
- 230000004913 activation Effects 0.000 description 9
- 238000013528 artificial neural network Methods 0.000 description 9
- 239000000872 buffer Substances 0.000 description 9
- 230000005236 sound signal Effects 0.000 description 7
- 238000001228 spectrum Methods 0.000 description 6
- 230000001413 cellular effect Effects 0.000 description 5
- 230000006870 function Effects 0.000 description 5
- 230000007246 mechanism Effects 0.000 description 5
- 238000013527 convolutional neural network Methods 0.000 description 4
- 230000000873 masking effect Effects 0.000 description 4
- 241000282412 Homo Species 0.000 description 3
- 238000013459 approach Methods 0.000 description 3
- 238000013461 design Methods 0.000 description 3
- 230000004048 modification Effects 0.000 description 3
- 238000012986 modification Methods 0.000 description 3
- 230000003287 optical effect Effects 0.000 description 3
- 238000004378 air conditioning Methods 0.000 description 2
- 235000013351 cheese Nutrition 0.000 description 2
- 235000015228 chicken nuggets Nutrition 0.000 description 2
- 238000011156 evaluation Methods 0.000 description 2
- 238000001914 filtration Methods 0.000 description 2
- 238000010438 heat treatment Methods 0.000 description 2
- 230000003993 interaction Effects 0.000 description 2
- 239000004973 liquid crystal related substance Substances 0.000 description 2
- 239000003550 marker Substances 0.000 description 2
- 235000013550 pizza Nutrition 0.000 description 2
- 230000010076 replication Effects 0.000 description 2
- 238000007792 addition Methods 0.000 description 1
- 239000003795 chemical substances by application Substances 0.000 description 1
- 238000010411 cooking Methods 0.000 description 1
- 230000000694 effects Effects 0.000 description 1
- 238000005265 energy consumption Methods 0.000 description 1
- 238000005516 engineering process Methods 0.000 description 1
- 230000002452 interceptive effect Effects 0.000 description 1
- 238000012423 maintenance Methods 0.000 description 1
- 238000010295 mobile communication Methods 0.000 description 1
- 230000000644 propagated effect Effects 0.000 description 1
- 230000009467 reduction Effects 0.000 description 1
- 230000003362 replicative effect Effects 0.000 description 1
- 230000001953 sensory effect Effects 0.000 description 1
- 238000007493 shaping process Methods 0.000 description 1
- 239000004984 smart glass Substances 0.000 description 1
- 239000007787 solid Substances 0.000 description 1
- 230000001502 supplementing effect Effects 0.000 description 1
- 238000012706 support-vector machine Methods 0.000 description 1
- 239000010409 thin film Substances 0.000 description 1
- 230000007704 transition Effects 0.000 description 1
- 230000001960 triggered effect Effects 0.000 description 1
- 230000000007 visual effect Effects 0.000 description 1
- 230000001755 vocal effect Effects 0.000 description 1
Classifications
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L15/00—Speech recognition
- G10L15/22—Procedures used during a speech recognition process, e.g. man-machine dialogue
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/16—Sound input; Sound output
- G06F3/167—Audio in a user interface, e.g. using voice commands for navigating, audio feedback
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L15/00—Speech recognition
- G10L15/06—Creation of reference templates; Training of speech recognition systems, e.g. adaptation to the characteristics of the speaker's voice
- G10L15/063—Training
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L15/00—Speech recognition
- G10L15/08—Speech classification or search
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L15/00—Speech recognition
- G10L15/28—Constructional details of speech recognition systems
- G10L15/30—Distributed recognition, e.g. in client-server systems, for mobile phones or network applications
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L17/00—Speaker identification or verification
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L17/00—Speaker identification or verification
- G10L17/22—Interactive procedures; Man-machine interfaces
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L25/00—Speech or voice analysis techniques not restricted to a single one of groups G10L15/00 - G10L21/00
- G10L25/48—Speech or voice analysis techniques not restricted to a single one of groups G10L15/00 - G10L21/00 specially adapted for particular use
- G10L25/51—Speech or voice analysis techniques not restricted to a single one of groups G10L15/00 - G10L21/00 specially adapted for particular use for comparison or discrimination
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L19/00—Speech or audio signals analysis-synthesis techniques for redundancy reduction, e.g. in vocoders; Coding or decoding of speech or audio signals, using source filter models or psychoacoustic analysis
- G10L19/018—Audio watermarking, i.e. embedding inaudible data in the audio signal
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L15/00—Speech recognition
- G10L15/08—Speech classification or search
- G10L2015/088—Word spotting
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L15/00—Speech recognition
- G10L15/22—Procedures used during a speech recognition process, e.g. man-machine dialogue
- G10L2015/223—Execution procedure of a spoken command
Abstract
Methods, systems, and apparatus, including computer programs encoded on a computer storage medium, for suppressing hotwords are disclosed. In one aspect, a method includes an act of receiving audio data corresponding to playback of an utterance. The actions further include providing the audio data as input to a model that is (i) configured to determine whether a given audio data sample includes an audio watermark, and (ii) trained using watermarked audio data samples that each include an audio watermark sample and non-watermarked audio data samples that each do not include an audio watermark sample. The actions further include receiving, from the model, data indicating whether the audio data includes an audio watermark. The actions further include determining to continue or stop processing the audio data based on the data indicating whether the audio data includes an audio watermark.
Description
Cross Reference to Related Applications
The present application claims the benefit of U.S. application Ser. No.16/418,415, filed on even 21. 5.2019, which U.S. application Ser. No.16/418,415 claims the benefit of U.S. application Ser. No.62/674,973, filed on even 22.5.2018, the contents of both of which are incorporated herein by reference.
Technical Field
The present disclosure relates generally to automatic speech processing.
Background
The reality of a voice-enabled home or other environment-that is, an environment in which a user only needs to speak a query or command aloud and a computer-based system will cope with and answer the query and/or have the command executed-is imminent. A voice-enabled environment (e.g., home, workplace, school, etc.) may be implemented using a network of connected microphone devices distributed throughout various rooms or areas of the environment. Through such a network of microphones, the user basically has the right to make a verbal query of the system from anywhere in the environment without having to have a computer or other device in front of or even in the vicinity of him/her. For example, while cooking in a kitchen, the user may ask the system "how many milliliters in three cups (how many milliliters are in three cups)? And in response, receives an answer, for example, from the system in the form of a synthesized speech output. Alternatively, the user may ask a system question such as "when does my nearest gas station close (i am when the nearest gas station is closed)", or "should I wear a coat today? (does i should i wear the jacket today?
In addition, the user may query the system and/or issue commands related to the user's personal information. For example, a user may query the system "when is my meeting with John? (when is i's meeting with John.
Disclosure of Invention
For voice-enabled systems, the manner in which the user interacts with the system is designed to be primarily, if not exclusively, by means of voice input. Thus, a system potentially picking up all utterances in the surrounding environment, including those not directed to the system, must in some way discern when any given utterance is directed to the system and not, for example, to a person present in the environment. One way to accomplish this is to use a "hotword" that is kept as a predetermined word or words, which is spoken to draw the attention of the system, according to an agreement between users in the environment. In an example environment, the hotword used to draw the attention of the system is a word of "OK computer". Thus, whenever an "OK computer" word is spoken, it is picked up by a microphone and transmitted to the system, which may perform speech recognition techniques or use audio features and neural networks to determine if a hot word is spoken, and if so, wait for a subsequent command or query to occur. Thus, the utterance for the system is in the generic format [ HOTWORD ] [ QUERY ], where "HOTWORD" in this example is "OK computer", "QUERY" may be any question, command, claim or other request for speech recognition, parsing and actions by the system alone or with a server via a network.
The present disclosure discusses methods based on audio watermarking to distinguish re-recorded speech, such as broadcast speech or text-to-speech audio, from real-time speech. This distinction enables false hotword triggers to be detected in inputs that include re-recorded speech, and allows false hotword triggers to be suppressed. However, real-time speech input from the user will not be watermarked, and hotwords determined to be unwatered in the speech input may not be suppressed. The watermark detection mechanism is robust to noisy and reverberant environments and can use convolutional neural network based detectors designed to meet the goals of small footprint, memory and computation, and low latency. The scalability advantage of this approach is highlighted in preventing hot word triggering simultaneously on millions of devices during a large audience television event.
The hotword-based trigger may be a mechanism to activate the virtual assistant. Distinguishing hotwords in real-time speech from hotwords in recorded speech (e.g., advertisements) can be a problem because false hotword triggers can result in accidental activation of the virtual assistant. Furthermore, where a user installs a virtual assistant on multiple devices, speech output from one virtual assistant may even contain hotwords that inadvertently trigger another virtual assistant. Accidental activation of the virtual assistant may generally be undesirable. For example, if a virtual assistant is used to control a home automation device, accidental activation of the virtual assistant may result in accidental turning on of, for example, lighting, heating or air conditioning devices, resulting in unnecessary energy consumption and inconvenience to the user. Also, when a device is turned on, it may transmit messages to other devices (e.g., retrieve information from other devices, signal their status to other devices, communicate with a search engine to perform searches, etc.), such that an unexpectedly turned on device may also result in unnecessary network traffic and/or unnecessary use of processing power, unnecessary power consumption, etc. Furthermore, accidental activation of devices (such as lighting, heating or air conditioning devices) may cause unnecessary wear of the device and reduce its reliability. Furthermore, as the range of devices and devices controlled by the virtual assistant increases, the possibility of accidental activation of the virtual assistant is also potentially dangerous. Likewise, accidental activation of a virtual assistant may raise privacy concerns.
In accordance with innovative aspects of the subject matter described in this application, a method for suppressing hotwords includes an act of receiving, by a computing device, audio data corresponding to playback of an utterance; providing, by a computing device, audio data as input to a model that is (i) configured to determine whether a given audio data sample includes an audio watermark, and (ii) trained using watermarked audio data samples that each include an audio watermark sample and non-watermarked audio data samples that each do not include an audio watermark sample; receiving, by the computing device and from a model, data indicating whether the audio data includes an audio watermark, the model (i) configured to determine whether a given audio data sample includes an audio watermark, and (ii) trained using watermarked audio data samples that each include an audio watermark and non-watermarked audio data samples that each do not include an audio watermark; and determining, by the computing device, to continue or stop processing the audio data based on the data indicating whether the audio data includes the audio watermark.
These and other implementations can each optionally include one or more of the following features. The act of receiving data indicating whether the audio data includes an audio watermark includes receiving data indicating that the audio data includes an audio watermark. The act of determining to continue or stop processing of the audio data includes determining to stop processing of the audio data based on receiving data indicating that the audio data includes an audio watermark. The actions further include stopping, by the computing device, processing of the audio data based on the determining to stop processing of the audio data. The act of receiving data indicating whether the audio data includes an audio watermark includes receiving data indicating that the audio data does not include an audio watermark. The act of determining to continue or stop processing of the audio data includes determining to continue processing of the audio data based on receiving data indicating that the audio data does not include an audio watermark.
The actions further include: processing of the audio data is continued by the computing device based on the determination to continue processing of the audio data. The act of processing the audio data includes generating a transcription of the utterance by performing speech recognition on the audio data. The act of processing the audio data includes determining whether the audio data includes an utterance of a particular predefined hotword. The actions further include, prior to providing the audio data as input to the model, determining, by the computing device, that the audio data includes an utterance of a particular predefined hotword, the model (i) configured to determine whether a given audio data sample includes an audio watermark, and (ii) trained using watermarked audio data samples that each include an audio watermark sample and non-watermarked audio data samples that each do not include an audio watermark sample. The actions further include determining, by the computing device, that the audio data includes an utterance of a particular predefined hotword. The act of providing the audio data as input to a model is responsive to determining that the audio data includes an utterance of a particular predefined hotword, the model being (i) configured to determine whether a given audio data sample includes an audio watermark, and (ii) trained using watermarked audio data samples that each include an audio watermark sample and non-watermarked audio data samples that each do not include an audio watermark sample.
The actions further include: receiving, by the computing device, watermarked audio data samples each including an audio watermark, non-watermarked audio data samples each not including an audio watermark, and data indicating whether each watermarked audio sample and non-watermarked audio sample includes an audio watermark; and training, by the computing device and using machine learning, a model using watermarked audio data samples each including an audio watermark, non-watermarked audio data samples each not including an audio watermark, and data indicating whether each of the watermarked audio samples and the non-watermarked audio samples includes an audio watermark. At least a portion of the watermarked audio data samples each include an audio watermark at a plurality of periodic positions. The audio watermark in one of the watermarked audio data samples is different from the audio watermark in the other watermarked audio data sample. The actions further include determining, by the computing device, a first time to receive audio data corresponding to playback of the utterance; receiving, by the computing device, a second time at which the additional computing device provides audio data corresponding to playback of the utterance and data indicating whether the audio data includes a watermark for output; determining, by the computing device, that the first time matches the second time; and based on determining that the first time matches the second time, updating, by the computing device, the model using data indicating whether the audio data includes a watermark.
Other embodiments of this aspect include corresponding systems, apparatus, and computer programs, each configured to perform the operations of the methods, recorded on computer storage devices. Other embodiments of this aspect include a computer-readable medium storing software comprising instructions executable by one or more computers, which when executed, cause the one or more computers to perform operations comprising any of the methods described herein.
Particular embodiments of the subject matter described in this specification can be implemented so that one or more of the following advantages are realized. The computing device may be responsive to hotwords included in the real-time speech and not responsive to hotwords included in the recorded media. This may reduce or prevent accidental activation of the device and thus save battery power and processing power of the computing device. Network bandwidth may also be saved by fewer computing devices executing the search query when hot words with audio watermarks are received.
The details of one or more implementations of the subject matter described in this specification are set forth in the accompanying drawings and the description below. Other features, aspects, and advantages of the subject matter will become apparent from the description, the drawings, and the claims.
Drawings
FIG. 1 illustrates an example system that suppresses hotword triggering when hotwords in a recorded medium are detected.
FIG. 2 is a flow chart of an example process for suppressing hotword triggering when hotwords in a recorded medium are detected.
Fig. 3 illustrates an example minimum masking threshold, energy, and absolute hearing threshold for frames in a watermark region.
Fig. 4 illustrates example correlations of (a) an example amplitude spectrum of a host signal, (b) an example amplitude spectrum of a watermark signal, (c) an example copy symbol matrix of a watermark signal, and (d) a copy symbol matrix pattern having a single instance of the symbol matrix, wherein vertical lines represent example boundaries of the watermark pattern between copies.
Fig. 5 illustrates an example neural network architecture for a watermark detector.
Fig. 6 illustrates an example matched filter created by replication of cross-correlation patterns.
Fig. 7 illustrates an example neural network output and an example matched filtered neural network output for an un-watermarked signal.
Fig. 8 illustrates an example of a computing device and a mobile computing device.
In the drawings, like reference numerals designate corresponding parts throughout the different views.
Detailed Description
FIG. 1 illustrates an example system 100 for suppressing hotword triggering upon detection of a "hotword" in a recorded medium. Briefly, and as described in more detail below, the computing device 104 outputs an utterance 108, the utterance 108 including an audio watermark 116 and an utterance of a predefined hotword 110. The computing device 102 detects the utterance 108 and determines that the utterance 108 includes an audio watermark 134 by using an audio watermark identification model 158. Based on the utterance 108 that includes the audio watermark 134, the computing device 102 does not respond to the predefined hotword 110.
In more detail, computing device 104 is playing media content of the chicken Nugget World (Nugget World). During the media content, actors in the media content speak the speech 108: "Ok computer, what's in a nugget? (good, computer, what is there in chicken nuggets. The speech 108 includes a hotword 110"ok computer" and a query 112 that includes other terms "what's in a nugget? ". Computing device 104 outputs utterance 108 through a speaker. Any computing device with a microphone in the vicinity is able to detect the utterance 108.
The audio of utterance 108 includes speech portion 114 and audio watermark 116. The creator of the media content may add an audio watermark 116 to ensure that the computing device that detected the utterance 108 does not respond to the hotword 110. In some implementations, the audio watermark 116 may include audio frequencies above or below the human hearing range. For example, the audio watermark 116 may include frequencies greater than 20kHz or less than 20 Hz. In some implementations, the audio watermark 116 may include audio that is within the range of human hearing but undetectable to humans because its sound resembles noise. For example, the audio watermark 116 may include frequency patterns between 8 and 10 kHz. The intensities of the different frequency bands may not be perceivable to humans, but may be detected by the computing device. As illustrated by the frequency domain representation 115, the utterance 108 includes an audio watermark 116 in a higher frequency range than the audible portion 114.
In some implementations, the computing device 104 can use the audio watermarking 120 to add a watermark to the voice data 118. The voice data 118 may be "Ok computer, what's in a nugget? "recorded utterance 108. The audio watermarking device 120 may add watermarks to the speech data 118 at periodic intervals. For example, the audio watermarking 120 may add the watermark every two hundred milliseconds. In some implementations, the computing device 104 can identify the portion of the speech data 118 that includes the hotword 110, for example, by performing speech recognition. The audio watermarker 120 may add periodic watermarks over the audio of the hotword 110, before the hotword 110, and/or after the hotword 110. For example, the audio watermark 120 may add three (or any other number) watermarks over the audio of "ok computer" at periodic intervals.
Techniques for adding the watermark 120 are discussed in detail below with respect to fig. 3-7. Typically, each watermark 120 is different for each speech data sample. The audio watermarking 120 may add an audio watermark to the audio of the utterance 108 every two and three hundred milliseconds, and add a different or the same audio watermark to the audio of the utterance, "Ok computer, order a cheese pizza (good bar, computer, order cheese pizza)". The audio watermarker 120 may generate a watermark for each audio sample such that the watermark minimizes distortion of the audio samples. This may be important because the audio watermarking device 120 may add a watermark in a frequency range that can be detected by humans. The computing device 104 may store the watermarked audio samples in the watermarked speech 112 for later output by the computing device 104.
In some implementations, each time the computing device 104 outputs the watermarked audio, the computing device 104 can store data in the playback log 124 that indicates the output audio. The playback log 124 may include data identifying any combination of the output audio 108, the date and time the audio 108 was output, the computing device 104, the location of the computing device 104, the transcription of the audio 108, and the audio 108 without a watermark.
Computing device 102 detects utterance 108 through a microphone. Computing device 102 may be any type of device capable of receiving audio. For example, computing device 102 may be a desktop computer, a laptop computer, a tablet computer, a wearable computer, a cellular telephone, a smart phone, a music player, an electronic book reader, a navigation system, smart speakers and home assistant, a wireless (e.g., bluetooth) headset, a hearing aid, a smart watch, smart glasses, an activity tracker, or any other suitable computing device. As illustrated in fig. 1, computing device 102 is a smart phone. Computing device 104 may be any device capable of outputting audio, such as a television, radio, music player, desktop computer, laptop computer, tablet computer, wearable computer, cellular telephone, or smart phone. As illustrated in fig. 1, computing device 104 is a television.
The microphone of computing device 102 may be part of audio subsystem 150. The audio subsystem 150 may include buffers, filters, analog-to-digital converters, all of which are designed to initially process audio received through a microphone. The buffer may store current audio received by the microphone and processed by the audio subsystem 150. For example, the buffer stores audio data for the first five seconds.
The computing device 102 includes an audio watermark identifier 152. The audio watermark identifier 152 is configured to process audio received by the microphone and/or stored in the buffer, and to identify an audio watermark included in the audio. The audio watermark identifier 152 may be configured to provide the processed audio as input to the audio watermark identification model 158. The audio watermark identification model 158 may be configured to receive audio data and output data indicating whether the audio data includes a watermark. For example, the audio watermark identifier 152 may continuously provide audio processed by the audio subsystem 150 to the audio watermark identification model 158. As the audio watermark identifier 152 provides more audio, the accuracy of the audio watermark identification model 158 may increase. For example, after three hundred milliseconds, the audio watermark identification model 158 may have received audio that includes one watermark. After five hundred milliseconds, the audio watermark identification model 158 may have received audio that includes two watermarks. In embodiments where the watermarks in any of the audio samples are identical to each other, the audio watermark identification model 158 may improve its accuracy by processing more audio.
In some implementations, the audio watermark identifier 152 may be configured to remove any detected watermark from audio received from the audio subsystem 150. After removing the watermark, the audio watermark identifier 152 may provide the audio without the watermark to the hotworder 154 and/or the speech recognizer 162. In some implementations, the audio watermark identifier 152 may be configured to pass audio received from the audio subsystem 150 to the hotworder 154 and/or the speech recognizer 162 without removing the watermark.
Hotword engine 154 is configured to identify hotwords in audio received by a microphone and/or stored in a buffer. In some implementations, hotworder 154 may be active at any time computing device 102 is powered on. The hotworder 154 may continuously analyze the audio data stored in the buffer. Hotword engine 154 calculates a hotword confidence score that reflects the likelihood that the current audio data in the buffer includes a hotword. To calculate the hotword confidence score, hotword engine 154 may extract audio features from audio data such as filter bank energy or mel-frequency cepstral coefficients. Hotworder 154 may use a classification window to process these audio features, such as by using a support vector machine or neural network. In some implementations, the hotword engine 154 does not perform speech recognition to determine hotword confidence scores (e.g., by comparing audio features extracted from received audio with corresponding audio features of one or more hotwords, but does not use the extracted audio features to perform speech recognition on the audio data). If the hotword confidence score meets the hotword confidence score threshold, hotword engine 154 determines that the audio includes a hotword. For example, if the hotword confidence score is 0.8 and the hotword confidence score threshold is 0.7, hotword engine 154 determines that the audio corresponding to utterance 108 includes hotword 110. In some cases, the hotword may be referred to as a wake word or a focus word.
The speech recognizer 162 may perform any type of process that generates a transcription based on the incoming audio. For example, the speech recognizer 162 may use acoustic models to identify phonemes in the audio data in the buffer. The speech recognizer 162 may use a language model to determine the transcription corresponding to the phonemes. As another example, the speech recognizer 162 may use a single model that processes the audio data in the buffer and outputs the transcription.
In the event that the audio watermark identification model 158 determines that the audio includes a watermark, the audio watermark identifier 152 may deactivate the speech recognizer 162 and/or the hotword recognizer 154. By disabling the speech recognizer 162 and/or the hotword recognizer 154, the audio watermark identifier 152 may prevent further processing of audio that may trigger the computing device 102 to respond to the hotword 110 and/or the query 112. As illustrated in fig. 1, the audio watermark identifier 152 sets the hotworder 154 to an inactive state 156 and sets the speech recognizer 162 to an inactive state 160.
In some implementations, the default state of hotword engine 154 can be an active state and the default state of speech recognizer 162 can be an active state. In this case, the inactive state 156 and the inactive state 162 may expire after a predetermined amount of time. For example, after five seconds (or another predetermined amount of time), the states of hotword engine 154 and speech recognizer 162 may return to an active state. The five second period may be updated each time the audio watermark identifier 152 detects an audio watermark. For example, if the audio 115 of the utterance 108 includes a watermark for the entire duration of the audio, the hotworder 154 and the speech recognizer 162 may be set to the inactive state 156 and the inactive state 162 and may remain in that state for an additional five seconds after the end of the output of the utterance 108 by the computing device 104. As another example, if the audio 115 of the utterance 108 includes a watermark throughout the utterance of the hotword 110, the hotword 154 and the speech recognizer 162 may be set to the inactive state 156 and the inactive state 162 and may remain in that state for an additional five seconds after the computing device 104 outputs the hotword 110, which would overlap with the output of the query 108.
In some implementations, the audio watermark identifier 152 may store data in the identification log 164 that indicates the date and time the audio watermark identifier 152 identified the watermark. For example, audio watermark identifier 152 may identify a watermark in the audio of utterance 110 at 3:15 pm on month 6 and 10 2019. The identification log 164 may store data identifying the time and date at which the watermark was received, a transcription of the utterance containing the watermark 134, the computing device 102, the watermark 134, the location of the computing device 102 at the time the watermark was detected, the underlying audio 132, the combined audio and watermark, and any combination of audio detected within a period of time before or after the utterance 108 or the watermark 134.
In some implementations, the audio watermark identifier 152 may store data in the identification log 164 that indicates the date and time that the audio watermark identifier 152 did not identify the watermark and the hotword 154 identified the hotword. For example, at 7:15 a.c. at 2019, 6, 20, the audio watermark identifier 152 may not identify a watermark in the audio of the utterance, and the hotword generator 154 may identify hotwords in the audio of the utterance. The identification log 164 may store data identifying any combination of time and date when the un-watermarked audio and the hotword were received, transcription of the utterance, location of the computing device 102, computing device, audio detected during a period of time before or after the utterance of the hotword.
In some implementations, the hotworder 154 may process the audio received from the audio subsystem 150 before, after, or concurrently with the audio watermark identifier 152. For example, the audio watermark identifier 152 may determine that the audio of the utterance 108 includes a watermark, and at the same time, the hotworder 154 may determine that the audio of the utterance 108 includes hotwords. In this case, the audio watermark identifier 152 may set the state of the speech recognizer 162 to the inactive state 160. The audio watermark identifier 152 may not be able to update the state 156 of the hotworder 154.
In some implementations, before the audio watermark identifier 152 uses the audio watermark identification model 158, the computing device 106 generates the watermark identification model 130 and provides the watermark identification model 130 to the computing device 102. The computing device 106 uses the non-watermarked speech samples 136, the audio watermark 138, and the trainer 144 using machine learning to generate an audio watermark identification model 148.
The non-watermarked speech samples 136 may include various speech samples collected under various conditions. The non-watermarked speech samples 136 may include audio samples of different users speaking different terms, speaking the same terms, speaking terms with different types of background noise, speaking terms in different languages, speaking terms in different accents, speaking terms recorded by different devices, and so forth. In some implementations, the non-watermarked speech samples 136 each include an utterance of a hotword. In some implementations, only some of the non-watermarked speech samples 136 include utterances that are hotwords.
The audio watermarker 138 may generate a different watermark for each un-watermarked speech sample. The audio watermarker 138 may generate one or more watermarked speech samples 140 for each of the non-watermarked speech samples. Using the same non-watermarked speech samples, the audio watermarking 138 may generate a watermarked speech sample including a watermark every two hundred milliseconds and another watermarked speech sample including a watermark every three hundred milliseconds. The audio watermarker 138 may also generate watermarked speech samples including watermarks that overlap only with hotwords, if any. The audio watermarker 138 may also generate watermarked speech samples including watermarks that overlap and precede the hotwords. In this case, the audio watermarking 138 may make four different watermarked speech samples from the same non-watermarked speech sample. The audio watermarking 138 may also be made more or less than four. In some cases, the audio watermarking 138 may operate similarly to the audio watermarking 120.
The trainer 144 uses machine learning and training data comprising the non-watermarked speech samples 136 and the watermarked speech samples 140 to generate an audio watermark identification model 148. Because the non-watermarked speech samples 136 and the watermarked speech samples 140 are marked as including a watermark or not, the trainer 148 may use training data that includes the non-watermarked speech samples 136 and a marker indicating that each sample does not include a watermark and the watermarked speech samples 140 and a marker indicating that each sample includes a watermark. The trainer 144 uses machine learning to generate an audio watermark identification model 148 to be able to receive audio samples and output whether the audio samples include a watermark.
The computing device 106 may access the audio watermark identification model 148 and provide the model 128 to the computing device 102 for processing the received audio data. The computing device 102 may store the model 128 in the audio watermark identification model 158.
The computing device 106 may update the audio watermark identification model 148 based on the playback log 142 and the identification log 146. The playback log 142 may include data such as playback data 126 received from the computing device 104 and stored in the playback log 124. The playback log 142 may include playback data from a plurality of computing devices that has output watermarked audio. The identification log 146 may include data such as the identification data 130 received from the computing device 102 and stored in the identification log 164. The identification log 146 may include additional identification data from a plurality of computing devices configured to identify the audio watermark and to prevent execution of any commands or queries included in the watermarked audio.
Trainer 144 may compare playback log 142 and identification log 146 to identify a matching entry that instructs a computing device to output watermarked audio, while another computing device identifies a watermark in the watermarked audio. Trainer 144 may also identify watermark identification errors in identification log 146 and playback log 142. A first type of watermark identification error may occur when the identification log 146 indicates that the computing device identifies a watermark and the playback log 142 does not indicate output of the watermarked audio. A second type of watermark identification error may occur when the playback log 142 indicates the output of the watermarked audio and the identification log 146 indicates that the computing device in the vicinity of the watermarked audio did not identify the watermark.
Trainer 144 may update the errors and update the audio watermark identification model 148 using the corresponding audio data as additional training data. The trainer 144 may also update the audio watermark identification model 148 with audio in which the computing device has correctly identified the watermark. Trainer 144 may use both the audio output by the computing device and the audio detected by the computing device as training data. Trainer 144 may update audio watermark identification model 148 using machine learning and audio data stored in playback log 142 and identification log 146. Trainer 144 may use the watermark labels provided in playback log 142 and identification log 146, as well as labels corrected in accordance with the error identification techniques described above, as part of a machine learning training process.
In some implementations, the computing device 102 and the number of other computing devices may be configured to transmit the audio 115 to a server for processing by a server-based hotword and/or a server-based speech recognizer running on the server. The audio watermark identifier 152 may indicate that the audio 115 does not include an audio watermark. Based on the determination, computing device 102 may transmit the audio to a server for further processing by a server-based hotword engine and/or a server-based speech recognizer. The audio watermark identifier of several other computing devices may also indicate that the audio 115 does not include an audio watermark. Based on those determinations, each of the other computing devices may transmit their respective audio to a server for further processing by a server-based hotword recognizer and/or a server-based speech recognizer. The server may determine whether the audio from each computing device includes hotwords and/or generate a transcription of the audio and transmit the results back to each computing device.
In some implementations, the server may receive data indicating watermark confidence scores for each watermark decision. The server may determine that the audio received by computing device 102 and the other computing devices are from the same source based on the location of computing device 102 and the other computing devices, characteristics of the received audio, each audio portion received at a similar time, or any other similar indicator. In some cases, each watermark confidence score may be within a particular range that includes a watermark confidence score threshold at one end of the range and another confidence score that may differ from the watermark confidence score threshold by a percentage, such as less than five percent. For example, the watermark confidence score threshold may range from 0.80 to 0.76. In other cases, the other end of the range may be a fixed distance, such as 0.05, from the watermark confidence score threshold. For example, the watermark confidence score threshold may range from 0.80 to 0.75.
If the server determines that each watermark confidence score is within a range that is close to, but not satisfied by, the watermark confidence score threshold, the server may determine that the watermark confidence score threshold should be adjusted. In this case, the server may adjust the watermark confidence score threshold to be the lower limit of the range. In some implementations, the server can update the watermark speech samples 140 by including the audio received from each computing device in the watermark speech samples 140. Trainer 144 may update audio watermark identification model 148 using machine-learned and updated watermark speech samples 140.
Although fig. 1 illustrates three different computing devices performing the different functions described above, any combination of one or more computing devices may perform any combination of functions. For example, the computing device 102 may train the audio watermark identification model 148, rather than the separate computing device 106 training the audio watermark identification model 148.
FIG. 2 illustrates an example process 200 for suppressing hotword triggering when hotwords in a recorded medium are detected. In general, the process 200 processes the received audio to determine whether the audio includes an audio watermark. If the audio includes an audio watermark, the process 200 may suppress further processing of the audio. If the audio does not include an audio watermark, the process 200 continues to process the audio and execute any queries or commands included in the audio. Process 200 is described as being performed by a computer system comprising one or more computers (e.g., computing devices 102, 104, and/or 106 as shown in fig. 1).
The system receives audio data corresponding to playback of the utterance (210). For example, a television may be playing media content, and actors in the media content may speak: "Ok computer, turn on the lights (good bar, computer, on lights)". The system includes a microphone, and the microphone detects audio of media content that includes an utterance of an actor.
The system provides audio data as input to a model that (i) is configured to determine whether a given audio data sample includes an audio watermark, and (ii) is trained using watermarked audio data samples that each include an audio watermark sample and non-watermarked audio data samples that each do not include an audio watermark sample (220). In some implementations, the system can determine that the audio data includes hotwords. Based on the detection of the hotword, the system provides audio data as input to the model. For example, the system may determine that the audio data includes "ok computer". Based on detecting "ok computer", the system provides the audio data to the model. The system may provide a portion of the audio data that includes the hotword and audio received after the hotword. In some cases, the system may provide a portion of the audio from before the hotword.
In some implementations, the system can analyze the audio data to determine whether the audio data includes hotwords. Analysis may occur before or after audio data is provided as input to the model. In some implementations, the system can train the model using machine learning and watermarked audio data samples that each include an audio watermark, non-watermarked audio data samples that each do not include an audio watermark, and data indicating that each watermarked audio sample and non-watermarked audio sample includes an audio watermark. The system may train the model to output data indicating whether the audio input to the model includes a watermark.
In some embodiments, different watermarked audio signals may include watermarks that are different from each other (the watermarks in any one audio sample may all be the same, but the watermarks in one audio signal are different from the watermarks in the other audio signal). The system may generate a different watermark for each audio signal to minimize distortion in the audio signal. In some implementations, the system may place the watermark in the audio signal at periodic intervals. For example, the system may place the watermark every 200 milliseconds. In some implementations, the system can place the watermark on audio that includes the hotword and/or a period of time preceding the hotword.
The system receives data indicating whether the audio data includes an audio watermark from a model that is (i) configured to determine whether a given audio data sample includes an audio watermark, and (ii) trained using watermarked audio data samples that include the audio watermark and non-watermarked audio data samples that do not include the audio watermark (S230). The system may receive an indication that the audio data includes a watermark, or that the audio data does not include a watermark.
Based on the data indicating whether the audio data includes an audio watermark, the system continues or stops processing the audio data (240). In some implementations, if the audio data includes an audio watermark, the system may stop processing the audio data. In some implementations, if the audio data does not include an audio watermark, the system may continue processing the audio data. In some implementations, processing the audio data may include performing speech recognition on the audio data and/or determining whether the audio data includes hotwords. In some implementations, the processing may include executing a query or command included in the audio data.
In some embodiments, the system logs the time and date when the system received the audio data. The system may compare the time and date with the time and date of the output audio data received from the computing device. If the system determines that the date and time of receipt of the audio data matches the date and time of output of the audio data, the system may update the model using the audio data as additional training data. The system may identify whether the model is correct when determining whether the audio data includes a watermark and ensure that the audio data includes the correct watermark tag when added to the training data.
In more detail, software agents that can perform tasks for users are commonly referred to as "virtual assistants. For example, the virtual assistant may be actuated by voice input from the user-e.g., may be programmed to recognize one or more trigger words that, when spoken by the user, cause the virtual assistant to be activated and perform tasks associated with the trigger words that have been spoken. Such trigger words are commonly referred to as "hotwords". The virtual assistant may be provided on, for example, a user's computer mobile phone or other user device. Alternatively, the virtual assistant may be integrated into another device, such as a so-called "smart speaker" (a wireless speaker with an integrated virtual assistant that provides interactive operation and hands-free activation with the aid of one or more hotwords).
With the widespread adoption of intelligent speakers, additional problems arise. During events with large numbers of viewers (e.g., sporting events that attract more than 1 million viewers), advertisements with hotwords may result in triggering virtual assistants simultaneously. Simultaneous queries to the speech recognition server may increase significantly due to high audience ratings, which may lead to denial of service (DOS).
Two possible mechanisms for filtering erroneous hotwords are based on the following: (1) Audio fingerprints, wherein fingerprints from query audio are checked against a database of fingerprints from known audio (e.g., advertisements) to filter false triggers, and (2) audio watermarks, wherein the audio is watermarked by the publisher and queries recorded by a watermark checking virtual assistant are filtered.
The present disclosure describes the design of a low latency, small footprint watermark detector using convolutional neural networks. This watermark detector is trained to be more robust in noisy and reverberant environments, which may be frequent in the scene of interest.
The audio watermark may be used for copyright protection and second screen applications. In copyright protection watermark detection is not typically required to be delay sensitive, as the entire audio signal is available for detection. In the case of a second screen application, the delay introduced by the high latency watermark detection may be tolerable. Unlike both scenarios, watermark detection in virtual assistance is very delay sensitive.
In known applications involving watermark detection, the embedded message constituting the watermark is typically unknown in advance, and the watermark detector has to decode the message sequence before it can determine whether the message sequence includes a watermark, and if so, determine the watermark. However, in some applications described herein, the watermark detector may be detecting a watermark pattern that is exactly known to the decoder/watermark detector. That is, the publisher or provider of the re-recorded voice content may watermark it with a watermark, and the details of the watermark may be made available to, for example, the provider of the virtual assistant and/or the provider of the device that includes the virtual assistant. Similarly, the provider of the virtual assistant may arrange that the speech output from the virtual assistant is provided with a watermark and that details of the watermark are made available. As a result, once the watermark has been detected in the received message, it is known that the received message is not a real-time voice input from the user, and activation of the virtual assistant due to any hotwords in the received message can be suppressed without waiting until the entire message has been received and processed. This provides a reduction in latency.
Some embodiments for hotword suppression utilize an audio fingerprinting method. This method requires a fingerprint database of known audio. Because maintaining this database on the device is significant, deployment on devices of such solutions is not feasible. However, a significant advantage of the audio fingerprinting method is that it may not require modification of the audio distribution process. Thus, it can even cope with the situation where the audio publisher is not an opponent of the partner.
This disclosure describes a hot word suppression mechanism based on watermarks. Hotword suppression mechanisms may be deployed using on-device, which may impose design constraints on memory and computation space. In addition, there is a constraint on latency to avoid impact on the user experience.
Watermark-based methods may require modification of the audio distribution process to add the watermark. Therefore, they can sometimes only be used to detect audio published by a partner. However, they may not require maintenance of a fingerprint database. This feature can achieve several advantages.
A first advantage may be the feasibility of deployment on the device. This may be an advantage during events where the audience rating is high when several virtual assistants may be triggered simultaneously. Server-based solutions for detecting these false triggers may result in denial of service due to the size of the simultaneous triggers. A second advantage may be to detect unknown audio published by a partner, such as a text-to-speech (TTS) synthesizer output, where the publishers may be collaborative, but the audio is not known in advance. A third advantage may be scalability. An entity such as an audio/video publisher on an online platform may watermark its audio to avoid triggering a virtual assistant. In some implementations, these platforms host millions of hours of content that are virtually impossible to process using audio fingerprinting based methods.
In some implementations, the watermark-based approach described herein may be combined with an audio fingerprinting-based approach, which may have the ability to cope with adversary agents.
The following description describes a watermark embedder and a watermark detector.
The watermark embedder may be based on a spread spectrum based watermark in the FFT domain. The watermark embedder may use a psycho-acoustic model to estimate a minimum masking (masking) threshold (MMT) for shaping the amplitude of the watermark signal.
To summarize the technique, a host signal region suitable for watermarking is selected based on a minimum energy criterion. For each host signal frame in these regions (2 ms window-12.5 ms transition), discrete Fourier Transform (DFT) coefficients are estimated. These DFT coefficients are used to estimate the Minimum Masking Threshold (MMT) using a psychoacoustic model. MMT is used to shape the amplitude spectrum of the frames of the watermark signal. Fig. 3 presents the estimated MMT as well as the host signal energy and absolute hearing threshold. The phase of the host signal may be used for the watermark signal and the sign of the DFT coefficients is determined from the message payload. Multiple scrambling may be used to spread the message bit payloads across a large block of frames. In some implementations, the system may be detecting whether the query is watermarked and may not have to transmit any payload. Thus, the system may randomly select a symbol matrix over a large block of frames (e.g., 16 frames or 200 ms) and repeat the symbol matrix across the watermark region. This repetition of the symbol matrix can be exploited to post-process the watermark detector output and improve detection performance. Overlapping additions of individual watermark frames may generate the watermark signal. Subgraphs (a) and (b) of fig. 2 represent the amplitude spectra of the host signal and the watermark signal, and subgraph (c) represents the symbol matrix. Vertical lines represent the boundary between two replications of the matrix.
After scaling the watermark signal by a factor (e.g., a e 0, 1), the watermark signal may be added to the host signal in the time domain to further ensure the inaudibility of the watermark. In some implementations, α is iteratively determined using objective evaluation metrics such as Perceptual Evaluation of Audio Quality (PEAQ). In some implementations, the system can use conservative scaling factors (e.g., a e {0.1,0.2,0.3,0.4,0.5 }) and evaluate detection performance on each of these scaling factors.
In some embodiments, the design requirement of the watermark detector may be an on-device deployment, which places significant constraints on both the memory footprint of the model and its computational complexity. The following description describes a convolutional neural network-based model architecture for on-device keyword detection. In some implementations, the system may use a time-convolutional neural network.
In some implementations, the neural network is trained to estimate the cross-correlation of the embedded watermark symbol matrix (fig. 4, sub-graph (c)), which may be a copy of the same 200ms pattern, with one example of a 200ms pattern. Sub-graph (d) in fig. 4 shows the cross-correlation. The cross-correlation may encode information about the beginning of each symbol matrix block and may not be zero for the entire duration of the watermark signal within the host signal.
The system may train the neural network using a multi-tasking loss function. The primary task may be an estimation of ground truth (ground truth) cross-correlation, while the secondary task may be an estimation of energy disturbance pattern and/or watermark magnitude spectrum. A mean square error may be calculated between the ground truth and the network output. After scaling the auxiliary loss with the regularization constant, some or all of the loss may be interpolated. In some embodiments, limiting each network output to only cover the dynamic range of the corresponding ground truth may improve performance.
In some implementations, the system may post-process the network output. In some implementations, the watermark may have no payload message and a single symbol matrix is replicated throughout the watermark region. This may result in a periodic cross-correlation pattern (fig. 4, sub-graph (d)). This aspect can be exploited to eliminate spurious peaks in the network output. In some embodiments and for improved performance, the system may use matched filters created by replicating cross-correlation patterns on bandpass filters isolating frequencies of interest (see fig. 6). Fig. 7 compares the network outputs generated for the un-watermarked signal before and after matched filtering. In some embodiments, spurious peaks that do not have periodicity may be significantly suppressed. Ground truth 705 may be approximately 0.0 (e.g., between-0.01 and 0.01) and may track the x-axis more closely than network output 710 and matched filtered network output 720. Network output 710 may vary significantly from ground truth 705 and matched filtered network output 720 with respect to the x-axis. The matched filtered network output 720 may track the x-axis more closely than the network output 710 and may not track the x-axis as closely as the ground truth 705. The matched filtered network output 720 may be smoother than the network output 710. The matched filtered network output 720 may be kept within a small range than the network output 710. For example, the matched filtered network output 720 may stay between-0.15 and 0.15. The network output 710 may stay between-0.30 and 0.60.
Once the neural network has been trained, it may be used in a method of determining whether a given audio data sample includes an audio watermark by applying a model embodying the neural network to the audio data sample. The method may include determining a confidence score reflecting a likelihood that the audio data includes an audio watermark; comparing the confidence score reflecting the likelihood that the audio data includes an audio watermark to a confidence score threshold; and determining whether to perform additional processing on the audio data based on comparing the confidence score reflecting the likelihood that the audio data includes an audio watermark to a confidence score threshold.
In an embodiment, the method comprises: determining that the confidence score meets the confidence score threshold based on comparing the confidence score reflecting the likelihood that the audio data includes an audio watermark to the confidence score threshold, wherein determining whether to perform additional processing on the audio data includes determining to refrain from performing additional processing on the audio data. In an embodiment, the method comprises: based on comparing the confidence score reflecting the likelihood that the utterance includes the audio watermark to a confidence score threshold, determining that the confidence score does not satisfy the confidence score threshold, wherein determining whether to perform additional processing on the audio data includes determining to perform additional processing on the audio data. In an embodiment, the method comprises: receiving data confirming execution of additional processing on the audio data from the user; and updating the model based on the received data confirming the execution of the additional processing on the audio data. In an embodiment, the additional processing of the audio data includes performing an action based on a transcription of the audio data; or whether the audio data includes a particular predefined hotword. In an embodiment, the method comprises: before applying the model to the audio data, determining that the audio data includes a particular predefined hotword, the model (i) being configured to determine whether a given audio data sample includes an audio watermark, and (ii) being trained using watermarked audio data samples that include the audio watermark and non-watermarked audio data samples that do not include the audio watermark. In an embodiment, the method comprises: determining that the audio data includes a particular predefined hotword, wherein applying a model to the audio data is in response to determining that the audio data includes the particular predefined hotword, the model being (i) configured to determine whether a given audio data sample includes an audio watermark, and (ii) trained using watermarked audio data samples including the audio watermark and non-watermarked audio data samples not including the audio watermark. In an embodiment, the method comprises: receiving watermarked audio data samples including an audio watermark and non-watermarked audio data samples not including an audio watermark; and training a model using machine learning, the model using watermarked audio data samples including the audio watermark and non-watermarked audio data samples not containing the audio watermark. In an embodiment, the method comprises: at least a portion of the watermarked audio data samples include an audio watermark at a plurality of periodic positions.
Fig. 8 illustrates an example of a computing device 800 and a mobile computing device 850 that can be used to implement the techniques described here. Computing device 800 is intended to represent various forms of digital computers, such as laptops, desktops, workstations, personal digital assistants, servers, blade servers, mainframes, and other appropriate computers. Mobile computing device 850 is intended to represent various forms of mobile devices, such as personal digital assistants, cellular telephones, smartphones, and other similar computing devices. The components shown here, their connections and relationships, and their functions, are examples only, and are not meant to be limiting.
Computing device 800 includes a processor 802, a memory 804, a storage device 806, a high-speed interface 808 coupled to memory 804 and to a plurality of high-speed expansion ports 810, and a low-speed interface 812 coupled to the low-speed expansion interface 814 and to storage device 806. Each of the processor 802, memory 804, storage 806, high-speed interface 808, high-speed expansion port 810, and low-speed interface 812 are interconnected by various buses, and may be mounted on a general-purpose motherboard or in other manners as appropriate. The processor 802 may process instructions for execution within the computing device 800, including instructions stored in the memory 804 or on the storage device 806, to display graphical information for a Graphical User Interface (GUI) on an external input/output device, such as a display 816 coupled to the high-speed interface 808. In other embodiments, multiple processors and/or multiple buses may be used, as appropriate, along with multiple memories and various types of memory. Moreover, multiple computing devices may be connected, each providing portions of the necessary operations (e.g., as a server bank, a group of blade servers, or a multiprocessor system).
Memory 804 stores information within computing device 800. In some implementations, the memory 804 is a volatile memory unit or units. In some implementations, the memory 804 is a non-volatile memory unit or units. Memory 804 may also be another form of computer-readable medium, such as a magnetic or optical disk.
The storage device 806 is capable of providing mass storage for the computing device 800. In some implementations, the storage device 806 may be or contain a computer-readable medium, such as a floppy disk device, a hard disk device, an optical disk device, a tape device, a flash memory, or other similar solid state memory device or array of devices, including devices in a storage area network or other configurations. The instructions may be stored in an information carrier. When the instructions are executed by one or more processing devices (e.g., processor 802), one or more methods, such as those described above, are performed. The instructions may also be stored by one or more storage devices (e.g., memory 804, storage 806, or memory on processor 802) such as a computer-readable or machine-readable medium.
The high speed interface 808 manages bandwidth-intensive operations for the computing device 800, while the low speed interface 412 manages lower bandwidth-intensive operations. This allocation of functions is merely an example. In some implementations, the high-speed interface 808 is coupled to the memory 804, the display 816 (e.g., via a graphics processor or accelerator), and to a high-speed expansion port 810 that can accept various expansion cards (not shown). In an implementation, low-speed interface 812 is coupled to storage device 806 and low-speed expansion port 814. The low-speed expansion port 814 may include various communication ports (e.g., USB, bluetooth, ethernet, wireless ethernet) that may be coupled to one or more input/output devices, such as a keyboard, a pointing device, a scanner, or a network device such as a switch or router, for example, through a network adapter.
As shown in the figures, computing device 800 may be implemented in a number of different forms. For example, it may be implemented as a standard server 820, or multiple times as a set of such servers. In addition, it may be implemented in a personal computer such as a laptop 822. It may also be implemented as part of a rack server system 824. Alternatively, components from computing device 800 may be combined with other components in a mobile device (not shown), such as mobile computing device 850. Each such device may contain one or more of computing device 800 and mobile computing device 850, and the entire system may be made up of multiple computing devices in communication with each other.
The mobile computing device 850 includes a processor 852, memory 864, input/output devices such as a display 854, a communication interface 866, and a transceiver 868, among other components. The mobile computing device 850 may also be provided with a storage device, such as a microdrive or other device, to provide additional storage. Each of the processor 852, the memory 864, the display 854, the communication interface 866, and the transceiver 868 are interconnected using various buses, and several of the components may be mounted on a general purpose motherboard or in other manners as appropriate.
Processor 852 can execute instructions within mobile computing device 850, including instructions stored in memory 864. Processor 852 may be implemented as a chipset of chips that include separate and multiple analog and digital processors. Processor 852 can provide, for example, for coordination of the other components of mobile computing device 850, such as control of user interfaces, applications run by mobile computing device 850, and wireless communication by mobile computing device 850.
Processor 852 may communicate with a user through control interface 858 and display interface 856 coupled to a display 854. The display 854 may be, for example, a TFT (thin film transistor liquid crystal display) display or an OLED (organic light emitting diode) display or other suitable display technology. The display interface 856 may comprise suitable circuitry for driving the display 854 to present graphical and other information to a user. The control interface 858 may receive commands from a user and convert them for submission to the processor 852. In addition, external interface 862 may provide for communication with processor 852, such that mobile computing device 850 is enabled for close range communication with other devices. For example, external interface 862 may be provided for wired communication in some implementations, or for wireless communication in other implementations, and multiple interfaces may also be used.
The memory 864 stores information within the mobile computing device 850. The memory 864 may be implemented as one or more of a computer-readable medium or media, a volatile or nonvolatile memory unit or units. Expansion memory 874 may also be provided and connected to mobile computing device 850 through expansion interface 872, which expansion interface 872 may include, for example, a SIMM (Single in line memory Module) card interface. Expansion memory 874 may provide additional storage space for mobile computing device 850 or may store applications or other information for mobile computing device 850. Specifically, expansion memory 874 may include instructions for performing or supplementing the processes described above, and also include secure information. Thus, for example, expansion memory 874 may be provided as a security module for mobile computing device 850 and may be programmed with instructions that allow secure use of mobile computing device 850. In addition, secure applications may be securely provided via the SIMM cards as well as other information, such as placing identification information on the SIMM cards in a non-intrusive manner.
The memory may include, for example, flash memory and/or NVRAM memory (non-volatile random access memory), as discussed below. In some implementations, instructions are stored in an information carrier that, when executed by one or more processing devices (e.g., processor 852), perform one or more methods, such as those described above. The instructions may also be stored by one or more storage devices, such as one or more computer-or machine-readable media (e.g., memory 864, expansion memory 874, or memory on processor 852). In some implementations, the instructions may be received as a propagated signal, for example, through transceiver 868 or external interface 862.
The mobile computing device 850 may communicate wirelessly through a communication interface 866, which may include digital signal processing circuitry as necessary. Communication interface 866 may provide communication under various modes or protocols, such as GSM voice calls (global system for mobile communications), SMS (short message service), EMS (enhanced message service) or MMS messages (multimedia message service), CDMA (code division multiple access), TDMA (time division multiple access), PDC (personal digital cellular), WCDMA (wideband code division multiple access), CDMA2000 or GPRS (general packet radio service), and the like. Such communication may occur, for example, using radio frequencies through transceiver 868. In addition, short-range communications may occur, such as using bluetooth, wiFi, or other such transceivers (not shown). In addition, the GPS (Global positioning System) receiver module 870 may provide additional navigation and location-related wireless data to the mobile computing device 850, which may be suitably utilized by applications running on the mobile computing device 850.
The mobile computing device 850 may also communicate audibly using an audio codec 860, which audio codec 860 may receive voice information from a user and convert it to usable digital information. Such as through a speaker, for example, in the earpiece of the mobile computing device 850, the audio codec 860 may similarly generate audible sound for the user. Such sound may include sound from voice telephone calls, may include recorded sound (e.g., voice messages, music files, etc.), and may also include sound generated by applications running on mobile computing device 850.
The mobile computing device 850 may be implemented in a number of different forms, as shown in the figures. For example, it may be implemented as a cellular telephone 880. It may also be implemented as part of a smart phone 882, personal digital assistant, or other similar mobile device.
Various implementations of the systems and techniques described here can be realized in digital electronic circuitry, integrated circuitry, specially designed ASICs (application specific integrated circuits), computer hardware, firmware, software, and/or combinations thereof. These various implementations may include implementations in one or more computer programs that may be executed and/or construed on a programmable system including at least one programmable processor, coupled to receive data and instructions therefrom, and to transmit data and instructions to a storage system, at least one input device, and at least one output device.
These computer programs (also known as programs, software applications or code) include machine instructions for a programmable processor, and may be implemented in a high-level procedural and/or object-oriented programming language, and/or in assembly/machine language. The term machine-readable medium, computer-readable medium, as used herein, refers to any computer program product, apparatus and/or device, such as magnetic disks, optical disks, memory, programmable Logic Devices (PLDs), for providing machine instructions and/or data to a programmable processor, including a machine-readable medium that receives machine instructions as a machine-readable signal. The term machine-readable signal refers to any signal used to provide machine instructions and/or data to a programmable processor.
To provide for interaction with a user, the systems and techniques described here can be implemented on a computer having a display device (e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor) for displaying information to the user and a keyboard and a pointing device (e.g., a mouse or a trackball) by which the user can provide input to the computer. Other kinds of devices may also be used to provide for interaction with a user; for example, feedback provided to the user may be any form of sensory feedback (e.g., visual feedback, auditory feedback, or tactile feedback); and input from the user may be received in any form, including acoustic, speech, or tactile input.
The systems and techniques described here can be implemented in a computing system that includes a back-end component (e.g., as a data server), or that includes a middleware component (such as an application server), or that includes a front-end component (e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the systems and techniques described here), or any combination of such back-end, middleware, or front-end components. The components of the system can be interconnected by any form or medium of digital data communication (e.g., a communication network). Examples of communication networks include a Local Area Network (LAN), a Wide Area Network (WAN), and the Internet.
The computing system can include clients and servers. The client and server are typically remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.
Although some embodiments have been described in detail above, other modifications are possible. For example, the logic flows described in an application do not require the particular order shown or sequential order to achieve desirable results. Additionally, other actions may be provided from the described flow, or actions may be eliminated, and other components may be added to, or removed from, the described systems. Accordingly, other embodiments are within the scope of the following claims. Moreover, features described in one aspect or embodiment are applied in any other aspect or embodiment.
Claims (13)
1. A computer-implemented method, comprising:
receiving, by the computing device, audio data corresponding to playback of the utterance;
providing, by the computing device, the audio data as input to a model that is (i) configured to determine whether a given audio data sample includes an audio watermark and (ii) trained using watermarked audio data samples that each include an audio watermark sample and non-watermarked audio data samples that each do not include an audio watermark sample;
Receiving, by the computing device and from the model, data indicating whether the audio data includes the audio watermark; and
based on the data indicating whether the audio data includes the audio watermark, determining, by the computing device, to continue or stop processing the audio data.
2. The method according to claim 1, wherein:
receiving the data indicating whether the audio data includes the audio watermark includes: receiving said data indicating that said audio data comprises said audio watermark,
determining to continue or stop processing of the audio data includes: determining to stop processing the audio data based on receiving the data indicating that the audio data includes the audio watermark, and
the method further comprises: based on determining to stop processing the audio data, stopping processing the audio data by the computing device.
3. The method according to claim 1, wherein:
receiving the data indicating whether the audio data includes the audio watermark includes: receiving said data indicating that said audio data does not comprise said audio watermark,
Determining to continue or stop processing of the audio data includes: determining to continue processing the audio data based on receiving the data indicating that the audio data does not include the audio watermark, and
the method further comprises: processing of the audio data is continued by the computing device based on the determination to continue processing of the audio data.
4. The method of claim 1, wherein processing the audio data comprises:
a transcription of the utterance is generated by performing speech recognition on the audio data.
5. The method of claim 1, wherein processing the audio data comprises:
it is determined whether the audio data includes an utterance of a particular predefined hotword.
6. The method according to claim 1, comprising:
prior to providing the audio data as input to the model, determining, by the computing device, an utterance of the audio data that includes a particular predefined hotword.
7. The method according to claim 1, comprising:
determining by the computing device that the audio data includes an utterance of a particular predefined hotword,
wherein providing the audio data as input to the model is in response to determining that the audio data includes an utterance of a particular predefined hotword.
8. The method according to claim 1, comprising:
receiving, by the computing device, the watermarked audio data samples each including an audio watermark, the non-watermarked audio data samples each not including an audio watermark, and data indicating whether each watermarked audio sample and non-watermarked audio sample includes an audio watermark; and
training, by the computing device and using machine learning, the model using the watermarked audio data samples each including an audio watermark, the non-watermarked audio data samples each not including the audio watermark, and the data indicating whether each watermarked audio sample and non-watermarked audio sample includes an audio watermark.
9. The method of claim 8, wherein at least a portion of the watermarked audio data samples each include an audio watermark at a plurality of periodic positions.
10. The method of claim 8, wherein an audio watermark in one of the watermarked audio data samples is different from an audio watermark in another one of the watermarked audio data samples.
11. The method according to any one of claims 1-10, comprising:
determining, by the computing device, a first time to receive the audio data corresponding to playback of an utterance;
receiving, by the computing device, a second time at which additional computing devices provide the audio data corresponding to playback of the utterance and data indicating whether the audio data includes a watermark for output;
determining, by the computing device, that the first time matches the second time; and
based on determining that the first time matches the second time, the model is updated by the computing device with the data indicating whether the audio data includes a watermark.
12. A system, comprising:
one or more computers; and
one or more storage devices storing instructions operable, when executed by the one or more computers, to cause the one or more computers to perform the method of any one of claims 1-11.
13. A non-transitory computer-readable medium storing software comprising instructions executable by one or more computers which, when executed, cause the one or more computers to perform the method of any one of claims 1-11.
Applications Claiming Priority (5)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US201862674973P | 2018-05-22 | 2018-05-22 | |
US62/674,973 | 2018-05-22 | ||
US16/418,415 | 2019-05-21 | ||
US16/418,415 US10692496B2 (en) | 2018-05-22 | 2019-05-21 | Hotword suppression |
PCT/US2019/033571 WO2019226802A1 (en) | 2018-05-22 | 2019-05-22 | Hotword suppression |
Publications (2)
Publication Number | Publication Date |
---|---|
CN112154501A CN112154501A (en) | 2020-12-29 |
CN112154501B true CN112154501B (en) | 2024-04-16 |
Family
ID=68614842
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201980034189.7A Active CN112154501B (en) | 2018-05-22 | 2019-05-22 | Hotword suppression |
Country Status (6)
Country | Link |
---|---|
US (3) | US10692496B2 (en) |
EP (2) | EP3782151B1 (en) |
JP (2) | JP7395509B2 (en) |
KR (2) | KR102572814B1 (en) |
CN (1) | CN112154501B (en) |
WO (1) | WO2019226802A1 (en) |
Families Citing this family (14)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10692496B2 (en) * | 2018-05-22 | 2020-06-23 | Google Llc | Hotword suppression |
US11412295B2 (en) * | 2018-10-02 | 2022-08-09 | Comcast Cable Communications, Llc | Systems and methods for determining usage information |
US11100930B1 (en) * | 2018-10-05 | 2021-08-24 | Facebook, Inc. | Avoiding false trigger of wake word from remote device during call |
US11042611B2 (en) * | 2018-12-10 | 2021-06-22 | XNOR.ai, Inc. | Digital watermarking of machine-learning models |
US11922953B2 (en) * | 2018-12-18 | 2024-03-05 | Nissan Motor Co., Ltd. | Voice recognition device, control method of voice recognition device, content reproducing device, and content transmission/reception system |
US11676589B2 (en) * | 2019-09-17 | 2023-06-13 | Global Strategies International LLC | Systems and methods for voice search and response retrieval |
US11138964B2 (en) * | 2019-10-21 | 2021-10-05 | Baidu Usa Llc | Inaudible watermark enabled text-to-speech framework |
US11170793B2 (en) * | 2020-02-13 | 2021-11-09 | Adobe Inc. | Secure audio watermarking based on neural networks |
US11776549B2 (en) | 2020-11-06 | 2023-10-03 | Google Llc | Multi-factor audio watermarking |
US11600260B1 (en) * | 2020-11-09 | 2023-03-07 | Amazon Technologies, Inc. | Utterance generation and evaluation |
US11562748B2 (en) | 2020-12-01 | 2023-01-24 | Google Llc | Detecting and suppressing commands in media that may trigger another automated assistant |
US11620990B2 (en) * | 2020-12-11 | 2023-04-04 | Google Llc | Adapting automated speech recognition parameters based on hotword properties |
TWI790718B (en) * | 2021-08-19 | 2023-01-21 | 宏碁股份有限公司 | Conference terminal and echo cancellation method for conference |
US20230178075A1 (en) * | 2021-12-02 | 2023-06-08 | Lenovo (Singapore) Pte. Ltd | Methods and devices for preventing a sound activated response |
Citations (11)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN1297560A (en) * | 1999-03-19 | 2001-05-30 | 索尼公司 | Additional information embedding method and its device, and additional information decoding method and its decoding device |
CN102265344A (en) * | 2008-10-24 | 2011-11-30 | 尼尔森（美国）有限公司 | Methods and apparatus to perform audio watermarking imbedding and watermark detection and extraction |
CN102959544A (en) * | 2010-05-04 | 2013-03-06 | 沙扎姆娱乐有限公司 | Methods and systems for synchronizing media |
CN102959622A (en) * | 2010-02-26 | 2013-03-06 | 弗兰霍菲尔运输应用研究公司 | Watermark signal provision and watermark embedding |
CN103747277A (en) * | 2014-01-10 | 2014-04-23 | 北京酷云互动科技有限公司 | Multimedia program identification method and device |
CN105556598A (en) * | 2013-09-12 | 2016-05-04 | 杜比实验室特许公司 | Selective watermarking of channels of multichannel audio |
CN105960673A (en) * | 2014-10-09 | 2016-09-21 | 谷歌公司 | Hotword detection on multiple devices |
CN106030699A (en) * | 2014-10-09 | 2016-10-12 | 谷歌公司 | Hotword detection on multiple devices |
US9548053B1 (en) * | 2014-09-19 | 2017-01-17 | Amazon Technologies, Inc. | Audible command filtering |
CN107016999A (en) * | 2015-10-16 | 2017-08-04 | 谷歌公司 | Hot word is recognized |
WO2018045154A1 (en) * | 2016-09-01 | 2018-03-08 | Amazon Technologies, Inc. | Voice-based communications |
Family Cites Families (118)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4363102A (en) | 1981-03-27 | 1982-12-07 | Bell Telephone Laboratories, Incorporated | Speaker identification system using word recognition templates |
JPS59180599A (en) | 1983-03-31 | 1984-10-13 | 日本電気ホームエレクトロニクス株式会社 | Voice recognition controller to be carried on vehicle |
US5659665A (en) | 1994-12-08 | 1997-08-19 | Lucent Technologies Inc. | Method and apparatus for including speech recognition capabilities in a computer system |
JP3674990B2 (en) | 1995-08-21 | 2005-07-27 | セイコーエプソン株式会社 | Speech recognition dialogue apparatus and speech recognition dialogue processing method |
US6023676A (en) | 1996-12-12 | 2000-02-08 | Dspc Israel, Ltd. | Keyword recognition system and method |
SE511418C2 (en) | 1997-03-13 | 1999-09-27 | Telia Ab | Method of speech verification / identification via modeling of typical non-typical characteristics. |
US6076055A (en) | 1997-05-27 | 2000-06-13 | Ameritech | Speaker verification method |
US5897616A (en) | 1997-06-11 | 1999-04-27 | International Business Machines Corporation | Apparatus and methods for speaker verification/identification/classification employing non-acoustic and/or acoustic models and databases |
JPH1152976A (en) | 1997-07-29 | 1999-02-26 | Nec Home Electron Ltd | Voice recognition device |
JP3524370B2 (en) | 1998-02-19 | 2004-05-10 | 富士通テン株式会社 | Voice activation system |
US6141644A (en) | 1998-09-04 | 2000-10-31 | Matsushita Electric Industrial Co., Ltd. | Speaker verification and speaker identification based on eigenvoices |
US6744860B1 (en) | 1998-12-31 | 2004-06-01 | Bell Atlantic Network Services | Methods and apparatus for initiating a voice-dialing operation |
US6671672B1 (en) | 1999-03-30 | 2003-12-30 | Nuance Communications | Voice authentication system having cognitive recall mechanism for password verification |
US6408272B1 (en) | 1999-04-12 | 2002-06-18 | General Magic, Inc. | Distributed voice user interface |
JP3357629B2 (en) | 1999-04-26 | 2002-12-16 | 旭化成株式会社 | Equipment control system |
DE10015960C2 (en) | 2000-03-30 | 2003-01-16 | Micronas Munich Gmbh | Speech recognition method and speech recognition device |
US6567775B1 (en) | 2000-04-26 | 2003-05-20 | International Business Machines Corporation | Fusion of audio and video based speaker identification for multimedia information access |
US6826159B1 (en) | 2000-05-24 | 2004-11-30 | Cisco Technology, Inc. | System and method for providing speaker identification in a conference call |
EP1168736A1 (en) | 2000-06-30 | 2002-01-02 | Alcatel | Telecommunication system and method with a speech recognizer |
US7016833B2 (en) | 2000-11-21 | 2006-03-21 | The Regents Of The University Of California | Speaker verification system using acoustic data and non-acoustic data |
US6973426B1 (en) | 2000-12-29 | 2005-12-06 | Cisco Technology, Inc. | Method and apparatus for performing speaker verification based on speaker independent recognition of commands |
US6701293B2 (en) | 2001-06-13 | 2004-03-02 | Intel Corporation | Combining N-best lists from multiple speech recognizers |
KR100552468B1 (en) | 2001-07-19 | 2006-02-15 | 삼성전자주식회사 | an electronic-apparatus and method for preventing mis-operation and rising speech recognition rate according to sound recognizing |
JP4224250B2 (en) | 2002-04-17 | 2009-02-12 | パイオニア株式会社 | Speech recognition apparatus, speech recognition method, and speech recognition program |
US20030231746A1 (en) | 2002-06-14 | 2003-12-18 | Hunter Karla Rae | Teleconference speaker identification |
TW200409525A (en) | 2002-11-26 | 2004-06-01 | Lite On Technology Corp | Voice identification method for cellular phone and cellular phone with voiceprint password |
EP1429314A1 (en) | 2002-12-13 | 2004-06-16 | Sony International (Europe) GmbH | Correction of energy as input feature for speech processing |
US7222072B2 (en) | 2003-02-13 | 2007-05-22 | Sbc Properties, L.P. | Bio-phonetic multi-phrase speaker identity verification |
US8290603B1 (en) | 2004-06-05 | 2012-10-16 | Sonos, Inc. | User interfaces for controlling and manipulating groupings in a multi-zone media system |
US7571014B1 (en) | 2004-04-01 | 2009-08-04 | Sonos, Inc. | Method and apparatus for controlling multimedia players in a multi-zone system |
US20070198262A1 (en) | 2003-08-20 | 2007-08-23 | Mindlin Bernardo G | Topological voiceprints for speaker identification |
US20050165607A1 (en) | 2004-01-22 | 2005-07-28 | At&T Corp. | System and method to disambiguate and clarify user intention in a spoken dialog system |
US8214447B2 (en) | 2004-06-08 | 2012-07-03 | Bose Corporation | Managing an audio network |
US7720012B1 (en) | 2004-07-09 | 2010-05-18 | Arrowhead Center, Inc. | Speaker identification in the presence of packet losses |
US8412521B2 (en) | 2004-08-20 | 2013-04-02 | Multimodal Technologies, Llc | Discriminative training of document transcription system |
US8521529B2 (en) | 2004-10-18 | 2013-08-27 | Creative Technology Ltd | Method for segmenting audio signals |
KR100679043B1 (en) | 2005-02-15 | 2007-02-05 | 삼성전자주식회사 | Apparatus and method for spoken dialogue interface with task-structured frames |
US8041570B2 (en) | 2005-05-31 | 2011-10-18 | Robert Bosch Corporation | Dialogue management using scripts |
US8709018B2 (en) | 2005-09-16 | 2014-04-29 | Applied Medical Technology, Inc. | Non-balloon low profile feed device with insertion/removal tool |
US7603275B2 (en) | 2005-10-31 | 2009-10-13 | Hitachi, Ltd. | System, method and computer program product for verifying an identity using voiced to unvoiced classifiers |
KR100711094B1 (en) | 2005-11-29 | 2007-04-27 | 삼성전자주식회사 | Resource allocating method among mobile-stations in distribution communication network |
JP2006227634A (en) | 2006-03-29 | 2006-08-31 | Seiko Epson Corp | Equipment control method using voice recognition, equipment control system using voice recognition and recording medium which records equipment control program using voice recognition |
CN1996847B (en) | 2006-12-27 | 2010-05-19 | 中国科学院上海技术物理研究所 | Cooperative network based image and multi-media data communication and storage system |
US8099288B2 (en) | 2007-02-12 | 2012-01-17 | Microsoft Corp. | Text-dependent speaker verification |
US20110060587A1 (en) | 2007-03-07 | 2011-03-10 | Phillips Michael S | Command and control utilizing ancillary information in a mobile voice-to-speech application |
US8838457B2 (en) | 2007-03-07 | 2014-09-16 | Vlingo Corporation | Using results of unstructured language model based speech recognition to control a system-level function of a mobile communications facility |
US20080252595A1 (en) | 2007-04-11 | 2008-10-16 | Marc Boillot | Method and Device for Virtual Navigation and Voice Processing |
US8503686B2 (en) | 2007-05-25 | 2013-08-06 | Aliphcom | Vibration sensor and acoustic voice activity detection system (VADS) for use with electronic systems |
US8385233B2 (en) | 2007-06-12 | 2013-02-26 | Microsoft Corporation | Active speaker identification |
GB2450886B (en) | 2007-07-10 | 2009-12-16 | Motorola Inc | Voice activity detector and a method of operation |
US8528033B2 (en) | 2007-10-22 | 2013-09-03 | At&T Intellectual Property I, L.P. | Method and system for providing subscription data |
GB2458461A (en) | 2008-03-17 | 2009-09-23 | Kai Yu | Spoken language learning system |
US8504365B2 (en) | 2008-04-11 | 2013-08-06 | At&T Intellectual Property I, L.P. | System and method for detecting synthetic speaker verification |
US8805689B2 (en) | 2008-04-11 | 2014-08-12 | The Nielsen Company (Us), Llc | Methods and apparatus to generate and use content-aware watermarks |
US8145482B2 (en) | 2008-05-25 | 2012-03-27 | Ezra Daya | Enhancing analysis of test key phrases from acoustic sources with key phrase training models |
KR101056511B1 (en) | 2008-05-28 | 2011-08-11 | (주)파워보이스 | Speech Segment Detection and Continuous Speech Recognition System in Noisy Environment Using Real-Time Call Command Recognition |
GB2463231B (en) | 2008-09-01 | 2012-05-30 | Sony Corp | Audio watermarking apparatus and method |
US8676586B2 (en) | 2008-09-16 | 2014-03-18 | Nice Systems Ltd | Method and apparatus for interaction or discourse analytics |
US8676904B2 (en) | 2008-10-02 | 2014-03-18 | Apple Inc. | Electronic devices with voice command and contextual data processing capabilities |
US9922640B2 (en) | 2008-10-17 | 2018-03-20 | Ashwin P Rao | System and method for multimodal utterance detection |
KR101519104B1 (en) | 2008-10-30 | 2015-05-11 | 삼성전자 주식회사 | Apparatus and method for detecting target sound |
US20110066437A1 (en) | 2009-01-26 | 2011-03-17 | Robert Luff | Methods and apparatus to monitor media exposure using content-aware watermarks |
US8326637B2 (en) | 2009-02-20 | 2012-12-04 | Voicebox Technologies, Inc. | System and method for processing multi-modal device interactions in a natural language voice services environment |
US8209174B2 (en) | 2009-04-17 | 2012-06-26 | Saudi Arabian Oil Company | Speaker verification system |
US9858925B2 (en) | 2009-06-05 | 2018-01-02 | Apple Inc. | Using context information to facilitate processing of commands in a virtual assistant |
CN101923853B (en) | 2009-06-12 | 2013-01-23 | 华为技术有限公司 | Speaker recognition method, equipment and system |
US8311838B2 (en) | 2010-01-13 | 2012-11-13 | Apple Inc. | Devices and methods for identifying a prompt corresponding to a voice input in a sequence of prompts |
US8626511B2 (en) | 2010-01-22 | 2014-01-07 | Google Inc. | Multi-dimensional disambiguation of voice commands |
JP2010164992A (en) | 2010-03-19 | 2010-07-29 | Toshiba Tec Corp | Speech interaction device |
KR101672212B1 (en) | 2010-06-15 | 2016-11-04 | 엘지전자 주식회사 | Mobile terminal and operation method thereof |
US8719018B2 (en) | 2010-10-25 | 2014-05-06 | Lockheed Martin Corporation | Biometric speaker identification |
US9484046B2 (en) * | 2010-11-04 | 2016-11-01 | Digimarc Corporation | Smartphone-based methods and systems |
CN102741918B (en) | 2010-12-24 | 2014-11-19 | 华为技术有限公司 | Method and apparatus for voice activity detection |
US9196028B2 (en) | 2011-09-23 | 2015-11-24 | Digimarc Corporation | Context-based smartphone sensor logic |
US9159324B2 (en) | 2011-07-01 | 2015-10-13 | Qualcomm Incorporated | Identifying people that are proximate to a mobile device user via social graphs, speech models, and user context |
WO2013012112A1 (en) | 2011-07-21 | 2013-01-24 | 엘지전자 주식회사 | Electronic device and social commerce server performing a coupon search |
US8660847B2 (en) | 2011-09-02 | 2014-02-25 | Microsoft Corporation | Integrated local and cloud based speech recognition |
US8340975B1 (en) | 2011-10-04 | 2012-12-25 | Theodore Alfred Rosenberger | Interactive speech recognition device and system for hands-free building control |
US8868039B2 (en) * | 2011-10-12 | 2014-10-21 | Digimarc Corporation | Context-related arrangements |
US9031847B2 (en) | 2011-11-15 | 2015-05-12 | Microsoft Technology Licensing, Llc | Voice-controlled camera operations |
WO2013078388A1 (en) | 2011-11-21 | 2013-05-30 | Robert Bosch Gmbh | Methods and systems for adapting grammars in hybrid speech recognition engines for enhancing local sr performance |
JP5902457B2 (en) | 2011-12-07 | 2016-04-13 | ブリヂストンスポーツ株式会社 | Golf club head |
US8825020B2 (en) | 2012-01-12 | 2014-09-02 | Sensory, Incorporated | Information access and device control using mobile phones and audio in the home environment |
US9536528B2 (en) | 2012-07-03 | 2017-01-03 | Google Inc. | Determining hotword suitability |
JP6131537B2 (en) | 2012-07-04 | 2017-05-24 | セイコーエプソン株式会社 | Speech recognition system, speech recognition program, recording medium, and speech recognition method |
TWI474317B (en) | 2012-07-06 | 2015-02-21 | Realtek Semiconductor Corp | Signal processing apparatus and signal processing method |
US8983836B2 (en) | 2012-09-26 | 2015-03-17 | International Business Machines Corporation | Captioning using socially derived acoustic profiles |
US9305559B2 (en) | 2012-10-15 | 2016-04-05 | Digimarc Corporation | Audio watermark encoding with reversing polarity and pairwise embedding |
US8996372B1 (en) | 2012-10-30 | 2015-03-31 | Amazon Technologies, Inc. | Using adaptation data with cloud-based speech recognition |
CN104641410A (en) | 2012-11-30 | 2015-05-20 | 日立麦克赛尔株式会社 | Picture display device, and setting modification method and setting modification program therefor |
CN104956436B (en) * | 2012-12-28 | 2018-05-29 | 株式会社索思未来 | Equipment and audio recognition method with speech identifying function |
WO2014112110A1 (en) | 2013-01-18 | 2014-07-24 | 株式会社東芝 | Speech synthesizer, electronic watermark information detection device, speech synthesis method, electronic watermark information detection method, speech synthesis program, and electronic watermark information detection program |
US9349386B2 (en) | 2013-03-07 | 2016-05-24 | Analog Device Global | System and method for processor wake-up based on sensor data |
US9361885B2 (en) | 2013-03-12 | 2016-06-07 | Nuance Communications, Inc. | Methods and apparatus for detecting a voice command |
US9312826B2 (en) | 2013-03-13 | 2016-04-12 | Kopin Corporation | Apparatuses and methods for acoustic channel auto-balancing during multi-channel signal extraction |
US8768687B1 (en) | 2013-04-29 | 2014-07-01 | Google Inc. | Machine translation of indirect speech |
WO2015025330A1 (en) | 2013-08-21 | 2015-02-26 | Kale Aaditya Kishore | A system to enable user to interact with an electronic processing device using voice of the user |
US9865255B2 (en) | 2013-08-29 | 2018-01-09 | Panasonic Intellectual Property Corporation Of America | Speech recognition method and speech recognition apparatus |
US8775191B1 (en) | 2013-11-13 | 2014-07-08 | Google Inc. | Efficient utterance-specific endpointer triggering for always-on hotwording |
US9373321B2 (en) | 2013-12-02 | 2016-06-21 | Cypress Semiconductor Corporation | Generation of wake-up words |
US9354778B2 (en) * | 2013-12-06 | 2016-05-31 | Digimarc Corporation | Smartphone-based methods and systems |
US8938394B1 (en) | 2014-01-09 | 2015-01-20 | Google Inc. | Audio triggers based on context |
CN104978968A (en) | 2014-04-11 | 2015-10-14 | 鸿富锦精密工业（深圳）有限公司 | Watermark loading apparatus and watermark loading method |
US9368124B2 (en) | 2014-08-12 | 2016-06-14 | Tata Consultancy Services Ltd. | Computer implemented system for audio watermarking |
KR20160043267A (en) | 2014-10-13 | 2016-04-21 | 한국전자통신연구원 | Apparatus and method for transmitting watermark robust to acoustic channel distortion |
US9721566B2 (en) | 2015-03-08 | 2017-08-01 | Apple Inc. | Competing devices responding to voice triggers |
US10147433B1 (en) * | 2015-05-03 | 2018-12-04 | Digimarc Corporation | Digital watermark encoding and decoding with localization and payload replacement |
US10153113B2 (en) | 2015-08-31 | 2018-12-11 | Deako, Inc. | Systems and methods for occupancy prediction |
US9928840B2 (en) | 2015-10-16 | 2018-03-27 | Google Llc | Hotword recognition |
US9747926B2 (en) | 2015-10-16 | 2017-08-29 | Google Inc. | Hotword recognition |
US10453449B2 (en) * | 2016-09-01 | 2019-10-22 | Amazon Technologies, Inc. | Indicator for voice-based communications |
KR102241970B1 (en) * | 2016-11-07 | 2021-04-20 | 구글 엘엘씨 | Suppressing recorded media hotword trigger |
US10559309B2 (en) | 2016-12-22 | 2020-02-11 | Google Llc | Collaborative voice controlled devices |
US10074371B1 (en) | 2017-03-14 | 2018-09-11 | Amazon Technologies, Inc. | Voice control of remote device by disabling wakeword detection |
US10395650B2 (en) * | 2017-06-05 | 2019-08-27 | Google Llc | Recorded media hotword trigger suppression |
US10276175B1 (en) | 2017-11-28 | 2019-04-30 | Google Llc | Key phrase detection with audio watermarking |
US10692496B2 (en) * | 2018-05-22 | 2020-06-23 | Google Llc | Hotword suppression |
WO2020068401A1 (en) * | 2018-09-25 | 2020-04-02 | Amazon Technologies, Inc. | Audio watermark encoding/decoding |
-
2019
- 2019-05-21 US US16/418,415 patent/US10692496B2/en active Active
- 2019-05-22 JP JP2020565375A patent/JP7395509B2/en active Active
- 2019-05-22 CN CN201980034189.7A patent/CN112154501B/en active Active
- 2019-05-22 KR KR1020237002831A patent/KR102572814B1/en active IP Right Grant
- 2019-05-22 WO PCT/US2019/033571 patent/WO2019226802A1/en unknown
- 2019-05-22 EP EP19730048.6A patent/EP3782151B1/en active Active
- 2019-05-22 EP EP22195235.1A patent/EP4181121A1/en active Pending
- 2019-05-22 KR KR1020207036730A patent/KR102493289B1/en active IP Right Grant
-
2020
- 2020-05-14 US US16/874,646 patent/US11373652B2/en active Active
-
2022
- 2022-06-24 US US17/849,253 patent/US11967323B2/en active Active
-
2023
- 2023-11-28 JP JP2023200953A patent/JP2024026199A/en active Pending
Patent Citations (11)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN1297560A (en) * | 1999-03-19 | 2001-05-30 | 索尼公司 | Additional information embedding method and its device, and additional information decoding method and its decoding device |
CN102265344A (en) * | 2008-10-24 | 2011-11-30 | 尼尔森（美国）有限公司 | Methods and apparatus to perform audio watermarking imbedding and watermark detection and extraction |
CN102959622A (en) * | 2010-02-26 | 2013-03-06 | 弗兰霍菲尔运输应用研究公司 | Watermark signal provision and watermark embedding |
CN102959544A (en) * | 2010-05-04 | 2013-03-06 | 沙扎姆娱乐有限公司 | Methods and systems for synchronizing media |
CN105556598A (en) * | 2013-09-12 | 2016-05-04 | 杜比实验室特许公司 | Selective watermarking of channels of multichannel audio |
CN103747277A (en) * | 2014-01-10 | 2014-04-23 | 北京酷云互动科技有限公司 | Multimedia program identification method and device |
US9548053B1 (en) * | 2014-09-19 | 2017-01-17 | Amazon Technologies, Inc. | Audible command filtering |
CN105960673A (en) * | 2014-10-09 | 2016-09-21 | 谷歌公司 | Hotword detection on multiple devices |
CN106030699A (en) * | 2014-10-09 | 2016-10-12 | 谷歌公司 | Hotword detection on multiple devices |
CN107016999A (en) * | 2015-10-16 | 2017-08-04 | 谷歌公司 | Hot word is recognized |
WO2018045154A1 (en) * | 2016-09-01 | 2018-03-08 | Amazon Technologies, Inc. | Voice-based communications |
Also Published As
Publication number | Publication date |
---|---|
EP3782151B1 (en) | 2022-10-19 |
EP4181121A1 (en) | 2023-05-17 |
US10692496B2 (en) | 2020-06-23 |
US11967323B2 (en) | 2024-04-23 |
WO2019226802A1 (en) | 2019-11-28 |
CN112154501A (en) | 2020-12-29 |
KR20210013140A (en) | 2021-02-03 |
EP3782151A1 (en) | 2021-02-24 |
US20200279562A1 (en) | 2020-09-03 |
US20190362719A1 (en) | 2019-11-28 |
JP2024026199A (en) | 2024-02-28 |
US11373652B2 (en) | 2022-06-28 |
KR102572814B1 (en) | 2023-08-30 |
KR102493289B1 (en) | 2023-01-30 |
JP7395509B2 (en) | 2023-12-11 |
KR20230018546A (en) | 2023-02-07 |
JP2021525385A (en) | 2021-09-24 |
US20220319519A1 (en) | 2022-10-06 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
CN112154501B (en) | Hotword suppression | |
CN110214351B (en) | Recorded media hotword trigger suppression | |
US11031002B2 (en) | Recognizing speech in the presence of additional audio | |
US20210210071A1 (en) | Methods and devices for selectively ignoring captured audio data | |
US11817094B2 (en) | Automatic speech recognition with filler model processing | |
CN110741433A (en) | Intercom communication using multiple computing devices | |
US8645132B2 (en) | Truly handsfree speech recognition in high noise environments | |
US9240183B2 (en) | Reference signal suppression in speech recognition | |
WO2015047517A1 (en) | Keyword detection | |
Lojka et al. | Efficient acoustic detector of gunshots and glass breaking | |
EP4139816B1 (en) | Voice shortcut detection with speaker verification | |
US11557293B2 (en) | Contextual suppression of assistant command(s) | |
CN112037772A (en) | Multi-mode-based response obligation detection method, system and device | |
US11955122B1 (en) | Detecting machine-outputted audio | |
US20230298609A1 (en) | Generalized Automatic Speech Recognition for Joint Acoustic Echo Cancellation, Speech Enhancement, and Voice Separation | |
CN117795597A (en) | Joint acoustic echo cancellation, speech enhancement and voice separation for automatic speech recognition | |
Rangappa et al. | Check for updates Analysis of a Hinglish ASR System's Performance for Fraud Detection | |
Panwar et al. | DeepAdversaryDefense: A Deep Model to Identify and Prevent Adversarial Attacks against Medical Speech Recognition. |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
SE01 | Entry into force of request for substantive examination | ||
GR01 | Patent grant | ||
GR01 | Patent grant |
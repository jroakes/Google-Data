US7725452B1 - Scheduler for search engine crawler - Google Patents
Scheduler for search engine crawler Download PDFInfo
- Publication number
- US7725452B1 US7725452B1 US10/853,627 US85362704A US7725452B1 US 7725452 B1 US7725452 B1 US 7725452B1 US 85362704 A US85362704 A US 85362704A US 7725452 B1 US7725452 B1 US 7725452B1
- Authority
- US
- United States
- Prior art keywords
- document
- score
- url
- identifier
- determining
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active, expires
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/951—Indexing; Web crawling techniques
Definitions
- the present invention relates generally to search engine crawlers for use in computer network systems, and in particular to a scheduler for a search engine crawler.
- a search engine is a software program designed to help a user access files stored on a computer, for example on the World Wide Web (WWW), by allowing the user to ask for documents meeting certain criteria (e.g., those containing a given word, a set of words, or a phrase) and retrieving files that match those criteria.
- Web search engines work by storing information about a large number of web pages (hereinafter also referred to as “pages” or “documents”), which they retrieve from the WWW. These documents are retrieved by a web crawler or spider, which is an automated web browser which follows every link it encounters in a crawled document. The contents of each document are indexed, thereby adding data concerning the words or terms in the document to an index database for use in responding to queries.
- search engines also store all or part of the document itself, in addition to the index entries.
- the search engine searches the index for documents that satisfy the query, and provides a listing of matching documents, typically including for each listed document the URL, the title of the document, and in some search engines a portion of document's text deemed relevant to the query.
- web pages can be manually selected for crawling, such manual assignment becomes impracticable as the number of web pages grows.
- web pages should be added or removed from crawl cycles to ensure acceptable crawler performance. For instance, as of the end of 2003, the WWW is believed to include well in excess of 10 billion distinct documents or web pages, while a search engine may have a crawling capacity that is less than half as many documents.
- a system and method of automatically selecting and scheduling documents for crawling based on one or more selection criteria should be able to assess the stature (e.g., page rank) of a web page and schedule the web page for crawling as appropriate based on its stature.
- stature e.g., page rank
- a scheduler for a search engine crawler includes a history log containing document identifiers (e.g., URLs) corresponding to documents (e.g., web pages) on a network (e.g., Internet).
- the scheduler is configured to process each document identifier in a set of the document identifiers by determining a content change frequency of the document corresponding to the document identifier, determining a first score for the document identifier that is a function of the determined content change frequency of the corresponding document, comparing the first score against a threshold value, and scheduling the corresponding document for indexing based on the results of the comparison.
- the threshold value can be computed from an initial sampling of document identifiers.
- One or more factors can be used to compute a score, including page rank, crawl history and the like.
- a method of scheduling documents to be downloaded by a search engine crawler includes retrieving a number of document identifiers, each document identifier identifying a corresponding document on a network. For each retrieved document identifier, the method determines a content change frequency of the corresponding document and determines a first score for the document identifier that is a function of the determined content change frequency of the corresponding document. It then compares the first score against a threshold value, and schedules the document for indexing based on the result of the comparison.
- a computer-readable medium has stored thereon instructions which, when executed by a processor, cause the processor to perform the operations of the method described above.
- FIG. 1 illustrates a data structure for storing URLs, in accordance with some embodiments of the present invention.
- FIG. 2 illustrates a web crawler system for processing crawled web pages, in accordance with some embodiments of the present invention.
- FIG. 3 is illustrates a history log generated by the system shown in FIG. 2 , in accordance with some embodiments of the present invention.
- FIG. 4 is a block diagram of a URL scheduler computer system, in accordance with some embodiments of the present invention.
- FIG. 5 is a flow diagram of a URL scheduler initialization process, in accordance with some embodiments of the present invention.
- FIG. 6 is flow diagram of a URL scheduler process, in accordance with some embodiments of the present invention.
- FIG. 7 illustrates an schedule output file generated by the URL scheduler shown in FIG. 4 , in accordance with some embodiments of the present invention.
- FIG. 1 illustrates a data structure 100 for storing document identifiers (e.g., web page URLs) in segments, in accordance with some embodiments of the present invention.
- the data structure 100 includes a base layer 102 , a daily crawl layer 104 and an optional real-time layer 106 .
- the base layer 102 comprises a sequence of segments 112 a , . . . , 112 n , wherein each segment 112 includes a number of URLs representing a percentage of the web page address space that has been (or will be) used by a web crawler system.
- Some embodiments do not include a daily crawl layer 104 or a real-time layer 106 .
- the daily crawl layer 104 comprises URLs to be crawled more frequently than the URLs in segments 112 .
- daily crawl layer 104 includes high priority URLs that are discovered by the web crawler system during a current epoch.
- An epoch is a predetermined time period (e.g., a day).
- the real-time layer 106 includes URLs to be crawled multiple times during a given epoch (e.g., multiple times per day). For example, the URLs in the real-time layer 106 are crawled every few minutes, or N times per hour (where N is a value greater than or equal to 1). The real-time layer 106 can also include newly discovered URLs that have not been crawled but should be crawled as soon as possible.
- FIG. 2 is a block diagram of a web crawler system 200 , which crawls URLs stored in the data structure 100 , in accordance with some embodiments of the present invention.
- URL sources used to populate the data structure 100 , including direct submission 203 of URLs by users of the search engine system 200 , or submissions 203 (e.g., time-based submissions) from third parties who have agreed to provide links as they are published, updated or changed.
- Another source of URLs is through discovery of outgoing links on crawled pages.
- the URL scheduler 202 determines which URLs will be crawled in each epoch, and stores that information in the data structure 100 .
- the controller 201 selects a segment 112 from the base layer 102 for crawling.
- the selected segment 112 is referred to hereinafter as the “active segment.”
- the controller 201 selects a different segment 112 from the base layer 102 as the active segment so that, over the course of several epochs, all the segments 112 a , . . . , n are selected for crawling in a round-robin manner.
- the URL scheduler 202 revises the daily crawl layer 104 and/or the real-time layer 106 by moving URLs to the layers 104 and/or 106 from the base layer 102 or vice versa. Alternately, in some embodiments URLs are scheduled to the daily and real-time layers 104 , 106 without regard to their absence or inclusion in the base layer 102 .
- the front end of the search engine provides a mechanism for using the most recent version of the document when responding to queries.
- a query-independent score (also called a document score) is computed for each URL by URL page rankers 222 .
- the page rankers 222 compute a page rank for a given URL by considering not only the number of URLs that reference a given URL but also the page rank of such referencing URLs.
- Page rank data is provided to URL managers 204 , which pass a page rank value for each URL to URL server 206 , robots 208 , content filters 210 , and other servers in the system 200 .
- An explanation of the computation of page rank is found in U.S. Pat. No. 6,285,999, which is incorporated by reference herein in its entirety.
- the URL server 206 requests URLs from the URL managers 204 .
- the URL managers 204 provide the URL server 206 with URLs obtained from data structure 100 .
- the URL server 206 then distributes URLs from the URL managers 204 to crawlers 208 (hereinafter also called “robots” or “bots”) to be crawled.
- a robot 208 is a server that retrieves documents at the URLs provided by the URL server 206 .
- the robots 208 use various known protocols to download pages associated with URLs (e.g., HTTP, HTTPS, gopher, FTP, etc.).
- a dedicated local DNS database 250 ( FIG. 2 ) can be used to store IP addresses for URLs that have been crawled in the past. This feature allows previously crawled URLs to be pre-resolved with respect to DNS resolution, thus enabling a high percentage of the system's DNS resolution operations to be handled locally at high speed.
- DNS domain name system
- a cookie database 260 can be included in system 200 for providing stable storage for cookies sent to robots 208 by cookie servers (not shown) on the Internet.
- the cookie database 260 is structured so that cookie servers can update the status of cookies upon request.
- the ability to access cookies acquired by robots 208 on previous crawls provides a number of possible advantages to subsequent robot 208 queries, such as speeding up the login process to the URL on the second crawl, gaining access to preferred web content, and possibly regulating which content is accessed from the URL.
- the use of the cookie database 260 enables robots 208 to crawl content that is regulated by cookie servers.
- Pages obtained from URLs that have been crawled by robots 208 are delivered to the content filters 210 .
- the content filter 210 can be implemented as part of each robot 208 .
- Each content filter 210 sends the retrieved web pages to Dupserver 224 to determine if they are duplicates of other web pages using, for example, techniques described in co-pending U.S. patent application Ser. No. 10/614,111, filed Jul. 3, 2003, which is hereby incorporated by reference as background information.
- the content filters 210 write out four or more types of log files, including link logs 214 , RTlogs 226 , 228 , and 230 , history logs 218 , and status logs 212 .
- the link log 214 contains one link record per URL document.
- a URL document is a document obtained from a URL by a robot 208 and passed to a content filter 210 .
- Each link log 214 record comprises all the links (e.g., URLs, also called outbound links) that are found in the URL document associated with the record and the text that surrounds the link.
- the log records in an RTlog include the full content of the documents obtained by robots 208 .
- Each document is coupled with a score (e.g., page rank) that was assigned to the source URL of the document by the page rankers 222 .
- Indexers 232 , 240 and 242 obtain documents from the RTlogs 226 , 228 and 230 , on a high throughput basis and make these documents searchable by a front-end querying system (not shown).
- Global state manager 216 reads link logs 214 and uses the information in the link logs to create link maps 220 .
- the records in the link map 220 are similar to records in the link log 214 with the exception that text is stripped and the records are keyed by a “fingerprint” of the normalized value of the source URL.
- a URL fingerprint is a 64-bit integer determined by applying a hash function or other one way function to a URL. The bit-length of the URL fingerprint may be longer or shorter than 64 bits in other embodiments.
- each link map 220 may optionally be sorted or keyed by a fingerprint.
- the link maps 220 are used by the page rankers 222 to adjust the page rank of URLs within data structure 100 . Preferably, such page rankings persist between epochs.
- each record in an anchor map 238 comprises a fingerprint of an outbound URL and text that corresponds to the URL in the link log 214 .
- the anchor maps 238 are used by indexers 232 , 240 and 242 to facilitate the indexing of “anchor text” as well as to facilitate the indexing of URLs that do not contain words.
- the indexing of anchor text is described more fully in U.S. patent application Ser. No. 10/614,113, filed Jul. 3, 2003.
- the URL scheduler 202 determines whether to add or remove URLs from the daily layer 104 and the real-time layer 106 based on information stored in records in the history logs 218 .
- the history log records include information indicating how frequently the content associated with the URLs is changing (hereinafter also referred to as “URL change frequency” or “content change frequency”) and individual URL page ranks set by the page rankers 222 .
- URL change frequency information indicating how frequently the content associated with the URLs is changing
- content change frequency individual URL page ranks set by the page rankers 222 .
- the history logs 218 also contain log records for URLs that are not found in data structure 100 .
- the history log 218 can contain log records for URLs that no longer exist and/or log records for URLs that exist but are no longer scheduled for crawling (e.g., due to a request by the website owner that the URL not be crawled, due to objectionable content, or for any other reasons).
- FIG. 3 illustrates a history log 218 , in accordance with some embodiments of the present invention.
- the history log 218 includes a record 300 for each URL that has been crawled by the robot 208 .
- each record includes a URL Fingerprint (URL FP) 302 , a Timestamp 304 , a Crawl Status 306 , a Content Checksum 308 , a Link Checksum 310 , a Source ID 312 , a Download Time 314 , an Error Condition 316 , a Segment ID 318 and a Page Rank 320 .
- URL FP URL Fingerprint
- the URL fingerprint 302 is, for example, an N-bit number (where N is a value or a bit length) that is generated from the corresponding URL by first normalizing the URL text (e.g., converting host names to lower case) and then passing the normalized URL through a fingerprinting function that is similar to a hash function except the fingerprint function guarantees that the fingerprints are well distributed across the entire space of possible numbers.
- the fingerprint modulus S where S is the number of segments 112 in base layer 102 (e.g., “fingerprint modulus 12 ”, in the case where there are 12 segments 112 in base layer 102 ) is used to select the segment 112 in which to place a given URL.
- additional rules are used to partition URLs into a segment 112 of base layer 102 , the daily crawl layer 104 and/or the real-time layer 106 .
- the TimeStamp 304 indicates the time the record 300 was recorded.
- the Crawl Status 306 indicates whether the corresponding URL 302 was successfully crawled (i.e., whether the particular download attempt documented by this history log record 300 was successful).
- the Content Checksum 308 (also called the content fingerprint) is a numerical value corresponding to the content of the downloaded document, if the download was successful. In some embodiments, this checksum value 308 is generated by computing a predefined checksum on the contents of the downloaded document.
- the Content Checksum 308 can be used to determine whether the content of a web page has changed. When web pages have identical content, they will also have the same Content Checksum 308 .
- the URL scheduler 202 can compare these content fingerprints 308 with previous content fingerprints obtained for the corresponding URL (e.g., identified by URL FP 302 in the history log record 300 ) on a previous crawl to ascertain whether the web page has changed since the last crawl.
- the Link Checksum 310 is a numerical value corresponding to the values of all the outbound links on the web page associated the URL 302 .
- the Link Checksum 310 is generated by computing a predefined checksum on the output links of the downloaded document.
- the URL scheduler 202 is configured to use the Link Checksum 310 to determine whether any of the outbound links on the web page associated with the corresponding URL 302 have changed since the last crawl.
- the URL schedule 202 may be configured to compare the Link Checksum 310 of the downloaded document with the Link Checksum 310 for the most recent prior download of the same URL to see if they are equal. If they are not equal, a change has occurred in the set of outbound links in the document (e.g., at least one outbound link has been added, removed or changed in value).
- the Source ID 312 provides an indication of whether the robot 208 accessed the URL 302 using the Internet (which can be considered to be a first database of documents) or an internal repository of documents (which can be considered to be a second database of documents).
- the Download Time 314 provides an indication of how long it took a robot 208 to download the web page associated with the corresponding URL FP 302 .
- the Error Condition 316 records any errors that were encountered by a robot 208 when attempting to download the web page associated with the URL FP 302 .
- An example of an error is “HTTP4,” which indicates that the web page does not exist.
- Other, distinct error types may be used to indicate if an existing web page is unavailable or unreachable.
- the Segment ID 318 identifies the particular crawl segment 112 a , . . . , 112 n ( FIG. 1 ) associated with the URL FP 302 at the time that the document download operation represented by this record 300 was performed or attempted.
- Page Rank 320 includes the page rank assigned to the URL FP 302 at the time that the document download operation represented by this record was performed or attempted.
- the page rank of a URL may change over time, as the set of pages having links to the page corresponding to URL FP 302 changes, and as the page ranks of these referring pages change.
- the Page Rank 320 included in any particular record for a URL FP 302 represents a snapshot of the corresponding URL's page rank at the time represented by the timestamp 304 .
- URL scheduler 202 obtains URL change frequency data is best understood by reviewing FIG. 2 .
- the information is passed through content filters 210 .
- Content filters 210 determine whether a URL has changed (e.g., by checking Content Checksum 308 ) and when a URL was last accessed by a robot 208 . This information is placed in the history logs 218 , which are passed back to the URL scheduler 202 .
- the URL schedule 202 (or other module) can compute a URL change frequency.
- the computation of a URL change frequency can include supplemental information about the URL.
- the URL scheduler 202 can maintain or access information about web sites (i.e., URLs) whose content is known to change quickly.
- the placement of the URL into a given segment 112 a , . . . , 112 n of base layer 102 is random (or pseudo-random), so that the URLs to be crawled are evenly distributed (or approximately evenly distributed) over the segments 112 a , . . . 112 n .
- a mathematical function e.g., a modulo function
- a Crawl Score is computed for each URL in an active segment 112 , the daily layer 104 and/or the real-time layer 106 . Only those URLs that receive a high Crawl Score (e.g., above a threshold value) are passed on to the next stage (URL managers 204 ) for downloading.
- URL scheduler 202 determines an optimum crawl frequency for each such URL and passes the crawl frequency information on to the URL managers 204 . The crawl frequency information is then ultimately used by URL managers 204 to decide which URLs to crawl.
- the URL scheduler 202 determines which URLs will be crawled (downloaded from the Internet) during the epoch by computing a Crawl Score (or referencing a previously computed Crawl Score) for each URL. Those URLs that receive a high Crawl Score (e.g., above a predefined threshold) are passed on to the next stage (URL managers 204 ), whereas those URLs that receive a low Crawl Score (e.g., below the predefined threshold) are not passed on to the next stage during the given epoch.
- a Crawl Score or referencing a previously computed Crawl Score
- Crawl Score There are many different factors that can be used to compute a Crawl Score including the current location of the URL (active segment 112 , daily crawl segment 104 or real-time segment 106 ), page rank, and crawl history.
- the crawl history can be obtained from the history logs 218 .
- Crawl Score F 2(page rank,change frequency,age) (Eq. 2A)
- F2 is a function of a specified document's page rank, change frequency and age, or a subset of those parameters.
- a document's age is defined as the time since the last download of the document by a web crawler.
- the expected_shelf_life(u) of a document (u) is based on an expiration time provided by the document's source, or based on other information (e.g., rates of change) known about the document or other documents from the same source, or based on such information known about other documents considered to be similar to document (u).
- information may be statistical information about the rates of change of a set of documents, and such information maybe distilled, using various statistical or mathematical techniques, to produce an “expected shelf life” value for a particular document.
- Crawl Score (page rank) 2 *(URL change frequency)*(time since last crawl of URL).
- Crawl Score (page rank)*(URL change frequency)*(time since last crawl of URL).
- Crawl Score (page rank) 2 *(age) (Eq. 2E) where the age of document (u) may be defined or computed using any of a variety of techniques, as mentioned above.
- information about a document's content change frequency may be incorporated into (or otherwise taken into account in) the “age” parameter of the Crawl Score function.
- the Crawl Score of URLs that have not been crawled in a relatively long period of time can be weighted so that the minimum refresh time for a URL is a predetermined period of time (e.g., two months).
- the URL change frequency is computed using the Content Checksum 308 stored in the history log 218 .
- the Content Checksum 308 is generated by applying the 32-bit Ethernet CRC to the content of the document at the URL, while in other embodiments other checksum functions are used. If the document at a URL is altered, the Content Checksum 308 will have a different value.
- the “time since last crawl” variable can be computed from the TimeStamp 304 and the current system time derived from a master system clock or the like.
- the URL scheduler 202 sets and refines a URL crawl frequency for each URL in the data structure 100 .
- the URL crawl frequency for a given URL represents the optimum crawl frequency (or, more generally, a selected or computed crawl frequency) for a URL.
- the crawl frequency for URLs in the daily crawl layer 104 and the real-time layer 106 will tend to be higher than the crawl frequency for URLs in the base layer 102 .
- the crawl frequency for any given URL can range from high values (e.g., representing crawl repeat rates of multiple times per hour) to low values (e.g., representing crawl repeat rates of less than once per month).
- the optimal crawl frequency for a URL is computed based on the historical change frequency of the URL and the page rank of the URL.
- the URL scheduler 202 determines which URLs are deleted from the data structure 100 and therefore dropped from the system 200 .
- the URLs are removed from the data structure 100 to make room for new URLs to be added to the data structure 100 .
- a Keep Score is computed for each URL in data structure 100 .
- the URLs are then sorted by the Keep Score and the URLs that receive a low Keep Score are eliminated as newly discovered URLs are added to the data structure 100 .
- the Keep Score for a document (u) is set equal to the page rank of the document, as determined by the page rankers 222 ( FIG. 2 ).
- FIG. 4 is a block diagram of a stand alone URL scheduler computer system 400 , in accordance with some embodiments of the present invention.
- the URL scheduler computer system 400 generally includes one or more processing units (CPU's) 402 , one or more network or other communications interfaces 410 , memory 412 , and one or more communication buses 414 for interconnecting these components.
- the system 400 may optionally include a user interface 404 , for instance a display 406 and a keyboard 408 .
- Memory 412 may include high speed random access memory and may also include non-volatile memory, such as one or more magnetic disk storage devices.
- Memory 412 may include mass storage that is remotely located from the central processing unit(s) 402 .
- the memory 412 stores an operating system 416 (e.g., Linux or Unix), a network communication module 418 , a system initialization module 420 and a URL scheduler module 422 .
- the operating system 416 generally includes procedures for handling various basic system services and for performing hardware dependent tasks.
- the network communication module 418 is used for connecting the system 400 to the servers hosting the content filters 210 ( FIG. 2 ) and possibly to other servers or computers via one or more communication networks (wired or wireless), such as the Internet, other wide area networks, local area networks, metropolitan area networks, and the like.
- the system initialization module 420 initializes other modules and data structures stored in memory 414 required for the appropriate operation of the system 400 .
- the URL scheduler module 422 is used to implement various aspects of the present invention, as described below with respect to FIGS. 5 and 6 .
- the memory 412 also includes scoring functions 428 and data structures (e.g., data structure 100 ) used by the URL scheduler 422 .
- the data structures include a history log 424 , a schedule output file 426 , and thresholds 430 .
- the URL scheduler computer system 400 is a runtime system integrated into a search engine crawler system (e.g., URL scheduler 202 in web crawler system 200 ) and the scoring functions 428 and thresholds 430 are computed in one or more context filters 210 ( FIG. 2 ).
- the URL scheduler computer system 400 is a stand alone system that performs background processing independent of the web crawling system 200 .
- FIG. 5 is a flow diagram of a URL scheduler 422 initialization process, in accordance with some embodiments of the present invention.
- the process begins by selecting 500 (randomly or pseudo-randomly) a sample set of URLs to be scheduled.
- a set of scores are computed 502 for each URL in the sample.
- three types of scores are computed: Keep Score, Crawl Score and Daily Score.
- the Keep Score is set equal to the URL page rank and the Daily Score and Crawl Score are computed using Equations (1A) and (2A). Note that more or less scores can be computed, as needed, depending upon the architecture of the system 200 .
- the sample set of URLs is sorted 504 in descending (or ascending) order into three sorted lists based on the computed Keep, Crawl and Daily Scores.
- a cutoff score (hereinafter also referred to as a “Keep Score threshold”) is selected 506 based on a target size of a set of URLs to be included in base layer 102 .
- a cut off score (hereinafter also referred to as a “Crawl Score Threshold”) is selected 506 based on a target size of a set of URLs from the base layer 102 to be re-crawled (as opposed to being fetched from a repository).
- a cut off score (hereinafter also referred to as a “Daily Score Threshold”) is selected 506 based on a target size of a set of URLs to be moved from the base layer 102 into the daily crawl layer 104 . Any new URLs discovered during a crawl can be placed in the smallest segment in base layer 102 . Each of these URLs will have a record in the history log 218 after being crawled for the first time, and will thereafter become part of the normal scheduling process, as described with respect to FIGS. 6 and 7 .
- each URL having an associated page rank, change frequency and a time value indicating a period of time that has transpired since the URL was last crawled.
- the URLs and associated information can be represented as shown in Table I below. Note that this example has been simplified by using integers to represent the URL FP and page rank. In practice, the crawling system 200 would process several billion URLs and the URL FPs and page ranks could be any N-bit integer or other value.
- Table I includes a randomly selected sample set of URLs resulting from the performance of step 500 in FIG. 5 .
- the number of URLs in the sample set is at least one million (e.g., in one embodiment the number of URLs in the sample set is about ten million). In some other embodiments, the number of URLs in the sample set is at least 50,000.
- a Keep Score, Crawl Score and Daily Score are computed 502 from the sample set of URLs, then sorted 504 by Score into three sorted lists of URLs, as shown in Table H below. The sorted lists include a Keep List, a Crawl List and a Daily List. Note that in this example the Keep Score is set equal to the Page Rank and the Daily and Crawl Scores are computed using Equations (1B) and (2B).
- cut off scores are selected 506 as a function of URL target size.
- the target sizes are arbitrarily selected based on the respective URL capacities of the base layer 102 and daily layer 104 (or real-time layer 106 ) and the bandwidth of the crawler.
- the Keep Threshold is 3, since 70% of the URLs in the sample set have a Keep Score that exceeds 3, including URLs 5, 6, 1, 7, 10, 9 and 4 (see column 1 of Table II).
- the Crawl Threshold is 147, since there 50% of the URLs in the sample set have a Crawl Score that exceeds 147, including URLs 6, 5, 1, 9 and 10 (see column 2 of Table II).
- the Daily Threshold may be set to 128, since 20% of the URLs in the sample set have a Daily Score that exceeds 128, including URLs 5 and 6 (see column 3 of Table II). In practice, where the sample set has thousands or millions of URLs, the differences between Daily Score values between adjacent items in the sorted list will typically be very small.
- the threshold score may be selected as being equal to lowest Daily Score of the URLs to be included in the selected set of URLs, or the next lowest Daily Score, depending on how the threshold is applied to select URLs for the daily crawl.
- the threshold score is the highest score of any URL that is not to be included in the selected set; and if the selection criteria is URLs having a score equal to or above the threshold, then the threshold score is the lowest score of any URL to be included in the selected set. Similar criteria are used for selecting the Keep Threshold and the Crawl Threshold.
- the cut off scores are selected 506 , they are stored 508 (e.g., in memory 412 ) for use by the URL scheduler 422 in performing a scheduling process on the entire data structure 100 of system 200 , as described below with reference to FIG. 6 .
- the initialization process described above assumes that the sample set of URLs is a good statistical representation of the entire data structure 100 of URLs, and therefore the selected threshold values will result in an allocation of URLs to the various segments in data structure 100 without exceeding the capacity constraints of those segments or the capacity of the crawler system 200 to download web pages.
- FIG. 6 is flow diagram of a URL scheduler process, in accordance with some embodiments of the present invention.
- the Keep, Crawl and Daily Scores for the URLs in that segment are computed 604 .
- the URLS are then sorted 606 by Keep Score and the URLs having a Keep Score above the Keep Score threshold are selected 606 .
- a Crawl/Reuse and Daily Flag are then set 610 (or unset) for the selected URLs having Crawl and Daily Scores above the Crawl and Daily Score thresholds.
- the selected URLs, and the Page Rank, Crawl/Reuse Flag and Daily Flag for the selected URLs are then written 612 to a schedule output file 426 , as shown in FIG. 7 . This process is repeated ( 600 ) for each segment of the base layer.
- FIG. 7 illustrates a schedule output file 426 , in accordance with some embodiments of the present invention.
- the schedule output file 426 includes a number of records 700 a , . . . , 700 n .
- Each record 700 a , . . . , 700 n includes a URL 702 , a Page Rank 704 , a Crawl/Reuse Flag 706 and a Daily Flag 708 .
- the Crawl/Reuse Flag 706 indicates whether the URL should be crawled and downloaded from the network or retrieved from a repository.
- the Daily Flag 708 indicates whether the URL should be included in the daily layer 104 .
- the Crawl/Reuse Flag is a single bit, which can be set to logic “1” to indicate that the URL should be crawled and to logic “0” to indicate that the URL should be fetched from a repository, or vice-versa.
- the Daily Flag can be a single bit that is set to logic “1” to indicate that the URL should be included in the daily layer 104 and to logic “0” to indicate that the URL should not be included in the daily layer 104 , or vice-versa.
- the Daily Flag can have more than two values.
- each Daily Flag has one of three values: crawl (i.e., download from Internet), reuse (i.e., use copy from document repository), and crawl if new (i.e., download if the document has been modified since a specified date and/or time).
- the base layer 104 will include a total of 7 URLS (6, 5, 1, 7, 10, 9, 4).
- URLs 5, 6, 1, 10 and 9 will be crawled and URLs 7 and 4 will be retrieved from a repository (i.e., reused).
- URLs 5 and 6 will be moved from the base layer 102 to the daily crawl layer 104 (or real-time layer 106 ) where they will be crawled more frequently (e.g., once a day), and URLs 1, 7, 10, 9 and 4 will remain in the base layer 102 where they will be crawled less frequently (e.g., every ten days).
Abstract
Description
Daily Score=F1(page rank,change frequency,age) (Eq. 1A)
where F1 is a function of a specified document's page rank, change frequency and age, or a subset of those parameters. For instance in one embodiment,
Daily Score=(page rank)2*URL change frequency (Eq. 1B)
Crawl Score=F2(page rank,change frequency,age) (Eq. 2A)
Age(u)=Now−(last_crawl(u)+expected_shelf life(u)) (Eq. 2B)
where the expected_shelf_life(u) of a document (u) is based on an expiration time provided by the document's source, or based on other information (e.g., rates of change) known about the document or other documents from the same source, or based on such information known about other documents considered to be similar to document (u). Such information may be statistical information about the rates of change of a set of documents, and such information maybe distilled, using various statistical or mathematical techniques, to produce an “expected shelf life” value for a particular document. In one embodiment:
Crawl Score=(page rank)2*(URL change frequency)*(time since last crawl of URL). (Eq. 2C)
In another embodiment,
Crawl Score=(page rank)*(URL change frequency)*(time since last crawl of URL). (Eq. 2D)
In yet another embodiment,
Crawl Score=(page rank)2*(age) (Eq. 2E)
where the age of document (u) may be defined or computed using any of a variety of techniques, as mentioned above. In this last embodiment, information about a document's content change frequency may be incorporated into (or otherwise taken into account in) the “age” parameter of the Crawl Score function.
Keep Score=F3(page rank,change frequency,age) (Eq. 3A)
where F3 is a function of a specified document's page rank, change frequency and age, or a subset of those parameters. In one embodiment, the Keep Score for a document (u) is set equal to the page rank of the document, as determined by the page rankers 222 (
URL Scheduler Computer System
TABLE I | |||
Change Frequency | Time Since Last | ||
URL Fingerprint | Page Rank | (Changes/Day) | Crawl (Days) |
1 | 8 | 2 | 3 |
2 | 3 | 1 | 2 |
3 | 1 | 1 | 1 |
4 | 4 | 2 | 1 |
5 | 10 | 3 | 4 |
6 | 9 | 2 | 7 |
7 | 7 | 1 | 3 |
8 | 2 | 3 | 4 |
9 | 5 | 1 | 15 |
10 | 6 | 2 | 3 |
TABLE II | ||
Keep List | Crawl List | Daily List |
(URL FP, Keep Score) | (URL FP, Crawl Score) | (URL FP, Daily Score) |
5.10 | 6.1134 | 5.300 |
6.9 | 5.1200 | 6.162 |
1.8 | 1.384 | 1.128 |
7.7 | 9.375 | 10.72 |
10.6 | 10.216 | 7.49 |
9.5 | 7.147 | 4.32 |
4.4 | 8.48 | 9.25 |
2.3 | 4.32 | 8.12 |
8.2 | 2.18 | 2.9 |
3.1 | 3.1 | 3.1 |
TABLE III | |||||
URL FP | Keep Score | Crawl Flag | Daily Flag | ||
5 | 10 | 1 | 1 | ||
6 | 9 | 1 | 1 | ||
1 | 8 | 1 | 0 | ||
7 | 7 | 0 | 0 | ||
10 | 6 | 1 | 0 | ||
9 | 5 | 1 | 0 | ||
4 | 4 | 0 | 0 | ||
Claims (18)
Priority Applications (4)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US10/853,627 US7725452B1 (en) | 2003-07-03 | 2004-05-20 | Scheduler for search engine crawler |
US12/787,321 US8161033B2 (en) | 2003-07-03 | 2010-05-25 | Scheduler for search engine crawler |
US13/449,228 US8775403B2 (en) | 2003-07-03 | 2012-04-17 | Scheduler for search engine crawler |
US14/325,211 US10621241B2 (en) | 2003-07-03 | 2014-07-07 | Scheduler for search engine crawler |
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US10/614,113 US7308643B1 (en) | 2003-07-03 | 2003-07-03 | Anchor tag indexing in a web crawler system |
US10/853,627 US7725452B1 (en) | 2003-07-03 | 2004-05-20 | Scheduler for search engine crawler |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US10/614,113 Continuation-In-Part US7308643B1 (en) | 2003-07-03 | 2003-07-03 | Anchor tag indexing in a web crawler system |
Related Child Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US12/787,321 Continuation US8161033B2 (en) | 2003-07-03 | 2010-05-25 | Scheduler for search engine crawler |
Publications (1)
Publication Number | Publication Date |
---|---|
US7725452B1 true US7725452B1 (en) | 2010-05-25 |
Family
ID=42184367
Family Applications (4)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US10/853,627 Active 2024-12-08 US7725452B1 (en) | 2003-07-03 | 2004-05-20 | Scheduler for search engine crawler |
US12/787,321 Expired - Lifetime US8161033B2 (en) | 2003-07-03 | 2010-05-25 | Scheduler for search engine crawler |
US13/449,228 Expired - Fee Related US8775403B2 (en) | 2003-07-03 | 2012-04-17 | Scheduler for search engine crawler |
US14/325,211 Expired - Lifetime US10621241B2 (en) | 2003-07-03 | 2014-07-07 | Scheduler for search engine crawler |
Family Applications After (3)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US12/787,321 Expired - Lifetime US8161033B2 (en) | 2003-07-03 | 2010-05-25 | Scheduler for search engine crawler |
US13/449,228 Expired - Fee Related US8775403B2 (en) | 2003-07-03 | 2012-04-17 | Scheduler for search engine crawler |
US14/325,211 Expired - Lifetime US10621241B2 (en) | 2003-07-03 | 2014-07-07 | Scheduler for search engine crawler |
Country Status (1)
Country | Link |
---|---|
US (4) | US7725452B1 (en) |
Cited By (32)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20060112094A1 (en) * | 2004-11-24 | 2006-05-25 | Sbc Knowledge Ventures, L.P. | Method, system, and software for correcting uniform resource locators |
US20070208699A1 (en) * | 2004-09-07 | 2007-09-06 | Shigeki Uetabira | Information search provision apparatus and information search provision system |
US20080104256A1 (en) * | 2006-10-26 | 2008-05-01 | Yahoo! Inc. | System and method for adaptively refreshing a web page |
US20080104257A1 (en) * | 2006-10-26 | 2008-05-01 | Yahoo! Inc. | System and method using a refresh policy for incremental updating of web pages |
US20080120533A1 (en) * | 2006-11-20 | 2008-05-22 | Microsoft Corporation | Handling external content in web applications |
US20090112843A1 (en) * | 2007-10-29 | 2009-04-30 | International Business Machines Corporation | System and method for providing differentiated service levels for search index |
US20090240670A1 (en) * | 2008-03-20 | 2009-09-24 | Yahoo! Inc. | Uniform resource identifier alignment |
US20100241621A1 (en) * | 2003-07-03 | 2010-09-23 | Randall Keith H | Scheduler for Search Engine Crawler |
US20100250516A1 (en) * | 2009-03-28 | 2010-09-30 | Microsoft Corporation | Method and apparatus for web crawling |
US20100318587A1 (en) * | 2009-06-11 | 2010-12-16 | Auditude, Inc. | Media identification system with fingerprint database balanced according to search loads |
US7987172B1 (en) | 2004-08-30 | 2011-07-26 | Google Inc. | Minimizing visibility of stale content in web searching including revising web crawl intervals of documents |
US8001462B1 (en) * | 2009-01-30 | 2011-08-16 | Google Inc. | Updating search engine document index based on calculated age of changed portions in a document |
US8042112B1 (en) | 2003-07-03 | 2011-10-18 | Google Inc. | Scheduler for search engine crawler |
US20120047121A1 (en) * | 2010-08-23 | 2012-02-23 | Microsoft Corporation | Content signature notification |
US8307076B1 (en) * | 2003-12-23 | 2012-11-06 | Google Inc. | Content retrieval from sites that use session identifiers |
US8332408B1 (en) | 2010-08-23 | 2012-12-11 | Google Inc. | Date-based web page annotation |
US20130018920A1 (en) * | 2011-07-12 | 2013-01-17 | Griffin Andrew M | Configuration management database security |
US8386460B1 (en) | 2005-06-24 | 2013-02-26 | Google Inc. | Managing URLs |
US8386459B1 (en) * | 2005-04-25 | 2013-02-26 | Google Inc. | Scheduling a recrawl |
US20130332585A1 (en) * | 2011-02-25 | 2013-12-12 | Zte Corporation | Method and system for downloading content |
US8666964B1 (en) | 2005-04-25 | 2014-03-04 | Google Inc. | Managing items in crawl schedule |
US8676783B1 (en) * | 2011-06-28 | 2014-03-18 | Google Inc. | Method and apparatus for managing a backlog of pending URL crawls |
US20140195510A1 (en) * | 2012-09-24 | 2014-07-10 | International Business Machines Corporation | Partitioning a search space for distributed crawling |
US8838571B2 (en) * | 2010-06-28 | 2014-09-16 | International Business Machines Corporation | Data-discriminate search engine updates |
US20170144066A1 (en) * | 2014-06-09 | 2017-05-25 | Capcom Co., Ltd. | Distribution system and method |
US10068021B1 (en) * | 2017-10-20 | 2018-09-04 | Carmax Business Services, Llc | Systems and methods for generating web pages for database search and search engine optimization |
US10326783B2 (en) * | 2014-03-28 | 2019-06-18 | Amazon Technologies, Inc. | Token based automated agent detection |
CN110020046A (en) * | 2017-10-20 | 2019-07-16 | 中移(苏州)软件技术有限公司 | A kind of data grab method and device |
WO2020236250A1 (en) * | 2019-05-22 | 2020-11-26 | Microsoft Technology Licensing, Llc | Efficient freshness crawl scheduling |
US11055369B2 (en) * | 2015-06-15 | 2021-07-06 | Google Llc | Automatic crawling of applications |
US20210397660A1 (en) * | 2006-04-13 | 2021-12-23 | Wgrs Licensing Company, Llc | Systems and methods for enhancing search results with input from brands, cities and geographic locations |
CN116401435A (en) * | 2023-02-22 | 2023-07-07 | 北京麦克斯泰科技有限公司 | Method and device for calculating and scheduling heat of daily active columns |
Families Citing this family (32)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7475320B2 (en) * | 2003-08-19 | 2009-01-06 | International Business Machines Corporation | Frequency modification techniques that adjust an operating frequency to compensate for aging electronic components |
US7444589B2 (en) * | 2004-12-30 | 2008-10-28 | At&T Intellectual Property I, L.P. | Automated patent office documentation |
US20080250008A1 (en) * | 2007-04-04 | 2008-10-09 | Microsoft Corporation | Query Specialization |
US20100205168A1 (en) * | 2009-02-10 | 2010-08-12 | Microsoft Corporation | Thread-Based Incremental Web Forum Crawling |
US8346755B1 (en) * | 2010-05-04 | 2013-01-01 | Google Inc. | Iterative off-line rendering process |
US8566956B2 (en) * | 2010-06-23 | 2013-10-22 | Salesforce.Com, Inc. | Monitoring and reporting of data access behavior of authorized database users |
US8639686B1 (en) | 2010-09-07 | 2014-01-28 | Amazon Technologies, Inc. | Item identification systems and methods |
US8818880B1 (en) * | 2010-09-07 | 2014-08-26 | Amazon Technologies, Inc. | Systems and methods for source identification in item sourcing |
CN102567407B (en) * | 2010-12-22 | 2014-07-16 | 北大方正集团有限公司 | Method and system for collecting forum reply increment |
US8782031B2 (en) * | 2011-08-09 | 2014-07-15 | Microsoft Corporation | Optimizing web crawling with user history |
US8468145B2 (en) | 2011-09-16 | 2013-06-18 | Google Inc. | Indexing of URLs with fragments |
US9191411B2 (en) | 2013-03-15 | 2015-11-17 | Zerofox, Inc. | Protecting against suspect social entities |
US9674212B2 (en) | 2013-03-15 | 2017-06-06 | Zerofox, Inc. | Social network data removal |
US9674214B2 (en) * | 2013-03-15 | 2017-06-06 | Zerofox, Inc. | Social network profile data removal |
JP6386089B2 (en) | 2014-06-26 | 2018-09-05 | グーグル エルエルシー | Optimized browser rendering process |
KR101768181B1 (en) | 2014-06-26 | 2017-08-16 | 구글 인코포레이티드 | Optimized browser rendering process |
EP3161668B1 (en) | 2014-06-26 | 2020-08-05 | Google LLC | Batch-optimized render and fetch architecture |
WO2016003219A1 (en) * | 2014-07-02 | 2016-01-07 | Samsung Electronics Co., Ltd. | Electronic device and method for providing content on electronic device |
US9544325B2 (en) | 2014-12-11 | 2017-01-10 | Zerofox, Inc. | Social network security monitoring |
CN105992194B (en) * | 2015-01-30 | 2019-10-29 | 阿里巴巴集团控股有限公司 | The acquisition methods and device of network data content |
CN104967698B (en) * | 2015-02-13 | 2018-11-23 | 腾讯科技（深圳）有限公司 | A kind of method and apparatus crawling network data |
US10516567B2 (en) | 2015-07-10 | 2019-12-24 | Zerofox, Inc. | Identification of vulnerability to social phishing |
US10216694B2 (en) | 2015-08-24 | 2019-02-26 | Google Llc | Generic scheduling |
US11681770B2 (en) * | 2016-05-16 | 2023-06-20 | International Business Machines Corporation | Determining whether to process identified uniform resource locators |
US11256812B2 (en) | 2017-01-31 | 2022-02-22 | Zerofox, Inc. | End user social network protection portal |
US11394722B2 (en) | 2017-04-04 | 2022-07-19 | Zerofox, Inc. | Social media rule engine |
US10868824B2 (en) | 2017-07-31 | 2020-12-15 | Zerofox, Inc. | Organizational social threat reporting |
US11165801B2 (en) | 2017-08-15 | 2021-11-02 | Zerofox, Inc. | Social threat correlation |
US11418527B2 (en) | 2017-08-22 | 2022-08-16 | ZeroFOX, Inc | Malicious social media account identification |
US11403400B2 (en) | 2017-08-31 | 2022-08-02 | Zerofox, Inc. | Troll account detection |
US11134097B2 (en) | 2017-10-23 | 2021-09-28 | Zerofox, Inc. | Automated social account removal |
CN111444407B (en) * | 2020-03-26 | 2023-05-16 | 桂林理工大学 | Automatic extraction method and system for page list information of web crawlers |
Citations (30)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5898836A (en) * | 1997-01-14 | 1999-04-27 | Netmind Services, Inc. | Change-detection tool indicating degree and location of change of internet documents by comparison of cyclic-redundancy-check(CRC) signatures |
US6012087A (en) * | 1997-01-14 | 2000-01-04 | Netmind Technologies, Inc. | Unique-change detection of dynamic web pages using history tables of signatures |
WO2001050320A1 (en) * | 1999-12-30 | 2001-07-12 | Auctionwatch.Com, Inc. | Minimal impact crawler |
US6263364B1 (en) * | 1999-11-02 | 2001-07-17 | Alta Vista Company | Web crawler system using plurality of parallel priority level queues having distinct associated download priority levels for prioritizing document downloading and maintaining document freshness |
US6285999B1 (en) | 1997-01-10 | 2001-09-04 | The Board Of Trustees Of The Leland Stanford Junior University | Method for node ranking in a linked database |
WO2001086507A1 (en) * | 2000-05-08 | 2001-11-15 | The Johns Hopkins University | Relevant search rankings using high refresh-rate distributed crawling |
US6321265B1 (en) * | 1999-11-02 | 2001-11-20 | Altavista Company | System and method for enforcing politeness while scheduling downloads in a web crawler |
US20020010682A1 (en) * | 2000-07-20 | 2002-01-24 | Johnson Rodney D. | Information archival and retrieval system for internetworked computers |
US6351755B1 (en) * | 1999-11-02 | 2002-02-26 | Alta Vista Company | System and method for associating an extensible set of data with documents downloaded by a web crawler |
US6377984B1 (en) * | 1999-11-02 | 2002-04-23 | Alta Vista Company | Web crawler system using parallel queues for queing data sets having common address and concurrently downloading data associated with data set in each queue |
US20020052928A1 (en) * | 2000-07-31 | 2002-05-02 | Eliyon Technologies Corporation | Computer method and apparatus for collecting people and organization information from Web sites |
US6418453B1 (en) * | 1999-11-03 | 2002-07-09 | International Business Machines Corporation | Network repository service for efficient web crawling |
US6418433B1 (en) * | 1999-01-28 | 2002-07-09 | International Business Machines Corporation | System and method for focussed web crawling |
US6424966B1 (en) * | 1998-06-30 | 2002-07-23 | Microsoft Corporation | Synchronizing crawler with notification source |
US20020099602A1 (en) * | 2000-12-04 | 2002-07-25 | Paul Moskowitz | Method and system to provide web site schedules |
US20020129062A1 (en) * | 2001-03-08 | 2002-09-12 | Wood River Technologies, Inc. | Apparatus and method for cataloging data |
US6547829B1 (en) * | 1999-06-30 | 2003-04-15 | Microsoft Corporation | Method and system for detecting duplicate documents in web crawls |
US6594662B1 (en) * | 1998-07-01 | 2003-07-15 | Netshadow, Inc. | Method and system for gathering information resident on global computer networks |
US6631369B1 (en) * | 1999-06-30 | 2003-10-07 | Microsoft Corporation | Method and system for incremental web crawling |
US6638314B1 (en) * | 1998-06-26 | 2003-10-28 | Microsoft Corporation | Method of web crawling utilizing crawl numbers |
US6701350B1 (en) * | 1999-09-08 | 2004-03-02 | Nortel Networks Limited | System and method for web page filtering |
US20040044962A1 (en) * | 2001-05-08 | 2004-03-04 | Green Jacob William | Relevant search rankings using high refresh-rate distributed crawling |
US6751612B1 (en) * | 1999-11-29 | 2004-06-15 | Xerox Corporation | User query generate search results that rank set of servers where ranking is based on comparing content on each server with user query, frequency at which content on each server is altered using web crawler in a search engine |
US20040225642A1 (en) * | 2003-05-09 | 2004-11-11 | International Business Machines Corporation | Method and apparatus for web crawler data collection |
US20040225644A1 (en) * | 2003-05-09 | 2004-11-11 | International Business Machines Corporation | Method and apparatus for search engine World Wide Web crawling |
US20050086206A1 (en) * | 2003-10-15 | 2005-04-21 | International Business Machines Corporation | System, Method, and service for collaborative focused crawling of documents on a network |
US6952730B1 (en) * | 2000-06-30 | 2005-10-04 | Hewlett-Packard Development Company, L.P. | System and method for efficient filtering of data set addresses in a web crawler |
US7080073B1 (en) * | 2000-08-18 | 2006-07-18 | Firstrain, Inc. | Method and apparatus for focused crawling |
US7139747B1 (en) * | 2000-11-03 | 2006-11-21 | Hewlett-Packard Development Company, L.P. | System and method for distributed web crawling |
US7171619B1 (en) * | 2001-07-05 | 2007-01-30 | Sun Microsystems, Inc. | Methods and apparatus for accessing document content |
Family Cites Families (70)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
FR2448979B1 (en) * | 1979-02-16 | 1986-05-23 | Havas Machines | DEVICE FOR DEPOSITING INK DROPS ON A SUPPORT |
KR940010649A (en) * | 1992-10-14 | 1994-05-26 | 오오가 노리오 | Printer and Photo Paper |
US5544352A (en) * | 1993-06-14 | 1996-08-06 | Libertech, Inc. | Method and apparatus for indexing, searching and displaying data |
JPH07164656A (en) * | 1993-10-22 | 1995-06-27 | Sony Corp | Recording part structure and recording apparatus |
JP2906949B2 (en) * | 1993-10-27 | 1999-06-21 | 富士ゼロックス株式会社 | Hypertext device |
US5801702A (en) * | 1995-03-09 | 1998-09-01 | Terrabyte Technology | System and method for adding network links in a displayed hierarchy |
US6213652B1 (en) | 1995-04-18 | 2001-04-10 | Fuji Xerox Co., Ltd. | Job scheduling system for print processing |
US5757669A (en) * | 1995-05-31 | 1998-05-26 | Netscape Communications Corporation | Method and apparatus for workgroup information replication |
US5727197A (en) * | 1995-11-01 | 1998-03-10 | Filetek, Inc. | Method and apparatus for segmenting a database |
US5855020A (en) * | 1996-02-21 | 1998-12-29 | Infoseek Corporation | Web scan process |
JP3368147B2 (en) * | 1996-07-04 | 2003-01-20 | キヤノン株式会社 | Printhead and printing equipment |
US6189019B1 (en) * | 1996-08-14 | 2001-02-13 | Microsoft Corporation | Computer system and computer-implemented process for presenting document connectivity |
JPH10105550A (en) * | 1996-10-02 | 1998-04-24 | Matsushita Electric Ind Co Ltd | Hyper-text document preparing device |
US5832529A (en) * | 1996-10-11 | 1998-11-03 | Sun Microsystems, Inc. | Methods, apparatus, and product for distributed garbage collection |
US6003060A (en) * | 1996-12-20 | 1999-12-14 | International Business Machines Corporation | Method and apparatus to share resources while processing multiple priority data flows |
US5877766A (en) * | 1997-08-15 | 1999-03-02 | International Business Machines Corporation | Multi-node user interface component and method thereof for use in accessing a plurality of linked records |
US6243091B1 (en) * | 1997-11-21 | 2001-06-05 | International Business Machines Corporation | Global history view |
US6836768B1 (en) | 1999-04-27 | 2004-12-28 | Surfnotes | Method and apparatus for improved information representation |
US6505230B1 (en) * | 1999-05-14 | 2003-01-07 | Pivia, Inc. | Client-server independent intermediary mechanism |
US7343412B1 (en) | 1999-06-24 | 2008-03-11 | International Business Machines Corporation | Method for maintaining and managing dynamic web pages stored in a system cache and referenced objects cached in other data stores |
US6418452B1 (en) | 1999-11-03 | 2002-07-09 | International Business Machines Corporation | Network repository service directory for efficient web crawling |
US6883135B1 (en) | 2000-01-28 | 2005-04-19 | Microsoft Corporation | Proxy server using a statistical model |
US6832263B2 (en) * | 2000-04-27 | 2004-12-14 | Hyperion Solutions Corporation | Method and apparatus for implementing a dynamically updated portal page in an enterprise-wide computer system |
US7260543B1 (en) * | 2000-05-09 | 2007-08-21 | Sun Microsystems, Inc. | Automatic lease renewal with message gates in a distributed computing environment |
US7236976B2 (en) | 2000-06-19 | 2007-06-26 | Aramark Corporation | System and method for scheduling events and associated products and services |
US7231606B2 (en) * | 2000-10-31 | 2007-06-12 | Software Research, Inc. | Method and system for testing websites |
US8060816B1 (en) * | 2000-10-31 | 2011-11-15 | International Business Machines Corporation | Methods and apparatus for intelligent crawling on the world wide web |
GB2368670A (en) * | 2000-11-03 | 2002-05-08 | Envisional Software Solutions | Data acquisition system |
US7043473B1 (en) | 2000-11-22 | 2006-05-09 | Widevine Technologies, Inc. | Media tracking system and method |
US7047491B2 (en) * | 2000-12-05 | 2006-05-16 | Schubert Daniel M | Electronic information management system for abstracting and reporting document information |
US20020073188A1 (en) * | 2000-12-07 | 2002-06-13 | Rawson Freeman Leigh | Method and apparatus for partitioning system management information for a server farm among a plurality of leaseholds |
US7143088B2 (en) * | 2000-12-15 | 2006-11-28 | The Johns Hopkins University | Dynamic-content web crawling through traffic monitoring |
US6950874B2 (en) * | 2000-12-15 | 2005-09-27 | International Business Machines Corporation | Method and system for management of resource leases in an application framework system |
US6910071B2 (en) | 2001-04-02 | 2005-06-21 | The Aerospace Corporation | Surveillance monitoring and automated reporting method for detecting data changes |
US6754651B2 (en) | 2001-04-17 | 2004-06-22 | International Business Machines Corporation | Mining of generalized disjunctive association rules |
US6961723B2 (en) * | 2001-05-04 | 2005-11-01 | Sun Microsystems, Inc. | System and method for determining relevancy of query responses in a distributed network search mechanism |
US20030126136A1 (en) * | 2001-06-22 | 2003-07-03 | Nosa Omoigui | System and method for knowledge retrieval, management, delivery and presentation |
US7089223B2 (en) | 2001-06-29 | 2006-08-08 | The Mathworks, Inc. | Programmable control of data attributes |
US20030061260A1 (en) * | 2001-09-25 | 2003-03-27 | Timesys Corporation | Resource reservation and priority management |
US6763362B2 (en) * | 2001-11-30 | 2004-07-13 | Micron Technology, Inc. | Method and system for updating a search engine |
US20030131005A1 (en) | 2002-01-10 | 2003-07-10 | International Business Machines Corporation | Method and apparatus for automatic pruning of search engine indices |
US20030135499A1 (en) * | 2002-01-14 | 2003-07-17 | Schirmer Andrew Lewis | System and method for mining a user's electronic mail messages to determine the user's affinities |
US7447777B1 (en) | 2002-02-11 | 2008-11-04 | Extreme Networks | Switching system |
US6993534B2 (en) * | 2002-05-08 | 2006-01-31 | International Business Machines Corporation | Data store for knowledge-based data mining system |
US20040064442A1 (en) * | 2002-09-27 | 2004-04-01 | Popovitch Steven Gregory | Incremental search engine |
US20040064432A1 (en) | 2002-09-27 | 2004-04-01 | Oetringer Eugen H. | Method and system for maintaining documents |
US7213047B2 (en) | 2002-10-31 | 2007-05-01 | Sun Microsystems, Inc. | Peer trust evaluation using mobile agents in peer-to-peer networks |
US7627613B1 (en) * | 2003-07-03 | 2009-12-01 | Google Inc. | Duplicate document detection in a web crawler system |
US7308643B1 (en) * | 2003-07-03 | 2007-12-11 | Google Inc. | Anchor tag indexing in a web crawler system |
US8136025B1 (en) | 2003-07-03 | 2012-03-13 | Google Inc. | Assigning document identification tags |
US7725452B1 (en) * | 2003-07-03 | 2010-05-25 | Google Inc. | Scheduler for search engine crawler |
US8707312B1 (en) | 2003-07-03 | 2014-04-22 | Google Inc. | Document reuse in a search engine crawler |
US7685296B2 (en) * | 2003-09-25 | 2010-03-23 | Microsoft Corporation | Systems and methods for client-based web crawling |
US7346839B2 (en) * | 2003-09-30 | 2008-03-18 | Google Inc. | Information retrieval based on historical data |
US7240064B2 (en) | 2003-11-10 | 2007-07-03 | Overture Services, Inc. | Search engine with hierarchically stored indices |
JP2007518469A (en) | 2003-11-26 | 2007-07-12 | タイラー ミッシェル ユージン | System and method for modifying vestibular biomechanics |
US7483891B2 (en) * | 2004-01-09 | 2009-01-27 | Yahoo, Inc. | Content presentation and management system associating base content and relevant additional content |
US7310632B2 (en) * | 2004-02-12 | 2007-12-18 | Microsoft Corporation | Decision-theoretic web-crawling and predicting web-page change |
US20050210008A1 (en) | 2004-03-18 | 2005-09-22 | Bao Tran | Systems and methods for analyzing documents over a network |
US20050216522A1 (en) | 2004-03-23 | 2005-09-29 | Integrated Data Corporation | Multi-tier document management system |
US7383382B2 (en) * | 2004-04-14 | 2008-06-03 | Microsoft Corporation | System and method for storage power, thermal and acoustic management in server systems |
US20070214133A1 (en) | 2004-06-23 | 2007-09-13 | Edo Liberty | Methods for filtering data and filling in missing data using nonlinear inference |
US7565423B1 (en) | 2004-06-30 | 2009-07-21 | Google Inc. | System and method of accessing a document efficiently through multi-tier web caching |
US8224964B1 (en) | 2004-06-30 | 2012-07-17 | Google Inc. | System and method of accessing a document efficiently through multi-tier web caching |
US7437364B1 (en) | 2004-06-30 | 2008-10-14 | Google Inc. | System and method of accessing a document efficiently through multi-tier web caching |
US7987172B1 (en) | 2004-08-30 | 2011-07-26 | Google Inc. | Minimizing visibility of stale content in web searching including revising web crawl intervals of documents |
US8335785B2 (en) * | 2004-09-28 | 2012-12-18 | Hewlett-Packard Development Company, L.P. | Ranking results for network search query |
US7769742B1 (en) | 2005-05-31 | 2010-08-03 | Google Inc. | Web crawler scheduler that utilizes sitemaps from websites |
US7475069B2 (en) * | 2006-03-29 | 2009-01-06 | International Business Machines Corporation | System and method for prioritizing websites during a webcrawling process |
US8180760B1 (en) | 2007-12-20 | 2012-05-15 | Google Inc. | Organization system for ad campaigns |
-
2004
- 2004-05-20 US US10/853,627 patent/US7725452B1/en active Active
-
2010
- 2010-05-25 US US12/787,321 patent/US8161033B2/en not_active Expired - Lifetime
-
2012
- 2012-04-17 US US13/449,228 patent/US8775403B2/en not_active Expired - Fee Related
-
2014
- 2014-07-07 US US14/325,211 patent/US10621241B2/en not_active Expired - Lifetime
Patent Citations (33)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6285999B1 (en) | 1997-01-10 | 2001-09-04 | The Board Of Trustees Of The Leland Stanford Junior University | Method for node ranking in a linked database |
US6012087A (en) * | 1997-01-14 | 2000-01-04 | Netmind Technologies, Inc. | Unique-change detection of dynamic web pages using history tables of signatures |
US6219818B1 (en) * | 1997-01-14 | 2001-04-17 | Netmind Technologies, Inc. | Checksum-comparing change-detection tool indicating degree and location of change of internet documents |
US5898836A (en) * | 1997-01-14 | 1999-04-27 | Netmind Services, Inc. | Change-detection tool indicating degree and location of change of internet documents by comparison of cyclic-redundancy-check(CRC) signatures |
US6638314B1 (en) * | 1998-06-26 | 2003-10-28 | Microsoft Corporation | Method of web crawling utilizing crawl numbers |
US6424966B1 (en) * | 1998-06-30 | 2002-07-23 | Microsoft Corporation | Synchronizing crawler with notification source |
US6594662B1 (en) * | 1998-07-01 | 2003-07-15 | Netshadow, Inc. | Method and system for gathering information resident on global computer networks |
US6418433B1 (en) * | 1999-01-28 | 2002-07-09 | International Business Machines Corporation | System and method for focussed web crawling |
US6631369B1 (en) * | 1999-06-30 | 2003-10-07 | Microsoft Corporation | Method and system for incremental web crawling |
US6547829B1 (en) * | 1999-06-30 | 2003-04-15 | Microsoft Corporation | Method and system for detecting duplicate documents in web crawls |
US6701350B1 (en) * | 1999-09-08 | 2004-03-02 | Nortel Networks Limited | System and method for web page filtering |
US6377984B1 (en) * | 1999-11-02 | 2002-04-23 | Alta Vista Company | Web crawler system using parallel queues for queing data sets having common address and concurrently downloading data associated with data set in each queue |
US6351755B1 (en) * | 1999-11-02 | 2002-02-26 | Alta Vista Company | System and method for associating an extensible set of data with documents downloaded by a web crawler |
US6321265B1 (en) * | 1999-11-02 | 2001-11-20 | Altavista Company | System and method for enforcing politeness while scheduling downloads in a web crawler |
US6263364B1 (en) * | 1999-11-02 | 2001-07-17 | Alta Vista Company | Web crawler system using plurality of parallel priority level queues having distinct associated download priority levels for prioritizing document downloading and maintaining document freshness |
US6418453B1 (en) * | 1999-11-03 | 2002-07-09 | International Business Machines Corporation | Network repository service for efficient web crawling |
US6751612B1 (en) * | 1999-11-29 | 2004-06-15 | Xerox Corporation | User query generate search results that rank set of servers where ranking is based on comparing content on each server with user query, frequency at which content on each server is altered using web crawler in a search engine |
WO2001050320A1 (en) * | 1999-12-30 | 2001-07-12 | Auctionwatch.Com, Inc. | Minimal impact crawler |
WO2001086507A1 (en) * | 2000-05-08 | 2001-11-15 | The Johns Hopkins University | Relevant search rankings using high refresh-rate distributed crawling |
US6952730B1 (en) * | 2000-06-30 | 2005-10-04 | Hewlett-Packard Development Company, L.P. | System and method for efficient filtering of data set addresses in a web crawler |
US20020010682A1 (en) * | 2000-07-20 | 2002-01-24 | Johnson Rodney D. | Information archival and retrieval system for internetworked computers |
US20020052928A1 (en) * | 2000-07-31 | 2002-05-02 | Eliyon Technologies Corporation | Computer method and apparatus for collecting people and organization information from Web sites |
US20060277175A1 (en) * | 2000-08-18 | 2006-12-07 | Dongming Jiang | Method and Apparatus for Focused Crawling |
US7080073B1 (en) * | 2000-08-18 | 2006-07-18 | Firstrain, Inc. | Method and apparatus for focused crawling |
US7139747B1 (en) * | 2000-11-03 | 2006-11-21 | Hewlett-Packard Development Company, L.P. | System and method for distributed web crawling |
US20020099602A1 (en) * | 2000-12-04 | 2002-07-25 | Paul Moskowitz | Method and system to provide web site schedules |
US20020129062A1 (en) * | 2001-03-08 | 2002-09-12 | Wood River Technologies, Inc. | Apparatus and method for cataloging data |
US20040044962A1 (en) * | 2001-05-08 | 2004-03-04 | Green Jacob William | Relevant search rankings using high refresh-rate distributed crawling |
US7299219B2 (en) * | 2001-05-08 | 2007-11-20 | The Johns Hopkins University | High refresh-rate retrieval of freshly published content using distributed crawling |
US7171619B1 (en) * | 2001-07-05 | 2007-01-30 | Sun Microsystems, Inc. | Methods and apparatus for accessing document content |
US20040225644A1 (en) * | 2003-05-09 | 2004-11-11 | International Business Machines Corporation | Method and apparatus for search engine World Wide Web crawling |
US20040225642A1 (en) * | 2003-05-09 | 2004-11-11 | International Business Machines Corporation | Method and apparatus for web crawler data collection |
US20050086206A1 (en) * | 2003-10-15 | 2005-04-21 | International Business Machines Corporation | System, Method, and service for collaborative focused crawling of documents on a network |
Non-Patent Citations (30)
Title |
---|
Ali, Halil, et al., "What's Changed? Measuring Document Change in Web Crawling for Search Engines", SPIRE 2003, Manaus, Brazil, Oct. 8-10, 2003, pp. 28-42. * |
Arasu, Arvind, et al., "Searching the Web", ACM Transactions on Internet Technology, vol. 1, No. 1, Aug. 2001, pp. 2-43. * |
Baeza-Yates, Ricardo, et al., "Balancing Volume, Quality and Freshness in web Crawling", Soft Computing Systems-Design, Management and Applications, © 2002, pp. 1-10. * |
Baeza-Yates, Ricardo, et al., "Balancing Volume, Quality and Freshness in web Crawling", Soft Computing Systems—Design, Management and Applications, © 2002, pp. 1-10. * |
Brandman, Onn, et al., "Crawler-Friendly Web Servers", ACM SIGMETRICS Performance Evaluation Review, vol. 28, issue 2, Sep. 2000, pp. 9-14. * |
Brandman, Ono, et al., "Crawler-Friendly Web Servers", ACM SIGMETRICS Performance Evaluation Review, vol. 28, Issue 2, Sep. 2000, pp. 9-14. * |
Brin, S., et al., "The Anatomy of a Large-Scale Hypertextual Web Search Engine," In Proc. of the 7th Int'l World Wide Web Conf., 1998. |
Bullot, Hadrien, et al., "A Data-Mining Approach for Optimizing Performance of an Incremental Crawler", WI '03, Oct. 13-17, 2003, pp. 610-615. * |
Cho, Junghoo, "Crawling the Web: Discovery and Maintenance of Large-Scale Web Data", PhD Thesis, Dept. of Computer Science, Stanford University, © 2001, 188 pages. * |
Cho, Junghoo, et al., "Efficient Crawling Through URL Ordering", Computer Networks and ISDN Systems, vol. 30, Issues 1-7, Apr. 1998, pp. 161-172. * |
Cho, Junghoo, et al., "Synchronizing a Database to Improve Freshness", MOD 2000, Dallas, TX, Jun. 2000, pp. 117-128. * |
Cho, Junghoo, et al., "The Evolution of the Web and Implications for an Incremental Crawler", Proc. of the 26th VLDB Conf., Cairo, Egypt, © 2000, pp. 200-209. * |
Coffman, Jr., E. G., et al., "Optimal Robot Scheduling", Tech. Rep. RR-3317, © 1997, 19 pages, downloaded from: citeseer.ist.psu.edu/coffman97optimal.html. * |
Douglis, Fred, et al., "Rate of Change and Other Metrics: A Live Study of the World Wide Web", USENIX Symposium on Internetworking Technologies and Systems, Monterey, CA, Dec. 1997, pp. i and 1-13. * |
Douglis, Fred, et al., "The AT&T Internet Difference Engine: Tracking and Viewing Changes on the Web", World Wide Web, vol. 1, No. 1, Mar. 1998, pp. 27-44. * |
Fetterly, Dennis, et al., "A Large-Scale Study of the Evolution of Web Pages", WWW 2003, Budapest, Hungary, May 20-24, 2003, pp. 669-678. * |
Haveliwala, T.H., "Topic-Sensitive PageRank," In Proc. of the 11th Int'l World Wide Web Conf., May 2002. |
Henzinger, Monika, "Web Information Retrieval-An Algorithmic Perspective", ESA 2000, LNCS 1879, Springer-Verlag, Berlin, Germany, © 2000, pp. 1-8. * |
Henzinger, Monika, "Web Information Retrieval—An Algorithmic Perspective", ESA 2000, LNCS 1879, Springer-Verlag, Berlin, Germany, © 2000, pp. 1-8. * |
Heydon, Allan, et al., "Mercator: A Scalable, Extensible Web Crawler", World Wide Web, vol. 2, No. 4, Springer, Netherlands, Dec. 1999, pp. 219-229. * |
Hirai, Jun, et al., "WebBase: A Repository of Web Pages", Computer Networks, vol. 33 Issues 1-6, Jun. 2000, pp. 277-293. * |
Introna, Lucas, et al., "Defining the web: The Politics of Search Engines", Computer, vol. 33, Issue 1, Jan. 2000, pp. 54-62. * |
Jeh, G., et al., "Scaling Personalized Web Search," In Proc. of the 12th Int'l World Wide Web Conf., 2003. |
Kamvar, S.D., et al., "Exploiting the Block Structure of the Web for Computing PageRank," Stanford Univ. Technical Report, 2003. |
Klemm, Reinhard P., "WebCompanion: A Friendly Client-Side web Prefetching Agent", IEEE Transactions on Knowledge and Data Engineering, vol. 11, No. 4, Jul./Aug. 1999, pp. 577-594. * |
Lee, Joseph K. W., et al., "Intelligent Agents for Matching Information Providers and Consumers on the World-Wide-Web", Proc. of the 13th Annual Hawaii International Conf. on System Sciences, © 1997, 11 pages. * |
Pandey, Sandeep, et al., "Monitoring the Dynamic Web to Respond to Continuous Queries", WWW 2003, Budapest, Hungary, May 20-24, 2003, pp. 659-668. * |
Shkapenyuk, Vladislav, et al., "Design and Implementation of a High-Performance Web Crawler", ICDE '02, San Jose, CA, Feb. 26-Mar. 1, 2002, pp. 357-368. * |
Suel, Torsten, et al., "ODISSEA: A Peer-to-Peer Architecture for Scalable Web Search and Information Retrieval", WebDB, San Diego, CA, Jun. 12-13, 2003, pp. 1-6. * |
Wolf, J. L., et al., "Optimal Crawling Strategies for Web Search Engines", WWW 2002, Honolulu, HI, May 7-11, 2002, pp. 136-147. * |
Cited By (58)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8707313B1 (en) | 2003-07-03 | 2014-04-22 | Google Inc. | Scheduler for search engine crawler |
US8042112B1 (en) | 2003-07-03 | 2011-10-18 | Google Inc. | Scheduler for search engine crawler |
US8161033B2 (en) * | 2003-07-03 | 2012-04-17 | Google Inc. | Scheduler for search engine crawler |
US10216847B2 (en) | 2003-07-03 | 2019-02-26 | Google Llc | Document reuse in a search engine crawler |
US8707312B1 (en) | 2003-07-03 | 2014-04-22 | Google Inc. | Document reuse in a search engine crawler |
US20100241621A1 (en) * | 2003-07-03 | 2010-09-23 | Randall Keith H | Scheduler for Search Engine Crawler |
US8775403B2 (en) | 2003-07-03 | 2014-07-08 | Google Inc. | Scheduler for search engine crawler |
US9679056B2 (en) | 2003-07-03 | 2017-06-13 | Google Inc. | Document reuse in a search engine crawler |
US10621241B2 (en) | 2003-07-03 | 2020-04-14 | Google Llc | Scheduler for search engine crawler |
US8307076B1 (en) * | 2003-12-23 | 2012-11-06 | Google Inc. | Content retrieval from sites that use session identifiers |
US8782032B2 (en) | 2004-08-30 | 2014-07-15 | Google Inc. | Minimizing visibility of stale content in web searching including revising web crawl intervals of documents |
US7987172B1 (en) | 2004-08-30 | 2011-07-26 | Google Inc. | Minimizing visibility of stale content in web searching including revising web crawl intervals of documents |
US8407204B2 (en) | 2004-08-30 | 2013-03-26 | Google Inc. | Minimizing visibility of stale content in web searching including revising web crawl intervals of documents |
US20070208699A1 (en) * | 2004-09-07 | 2007-09-06 | Shigeki Uetabira | Information search provision apparatus and information search provision system |
US8341135B2 (en) * | 2004-09-07 | 2012-12-25 | Interman Corporation | Information search provision apparatus and information search provision system |
US7966310B2 (en) * | 2004-11-24 | 2011-06-21 | At&T Intellectual Property I, L.P. | Method, system, and software for correcting uniform resource locators |
US20060112094A1 (en) * | 2004-11-24 | 2006-05-25 | Sbc Knowledge Ventures, L.P. | Method, system, and software for correcting uniform resource locators |
US8666964B1 (en) | 2005-04-25 | 2014-03-04 | Google Inc. | Managing items in crawl schedule |
US8386459B1 (en) * | 2005-04-25 | 2013-02-26 | Google Inc. | Scheduling a recrawl |
US8386460B1 (en) | 2005-06-24 | 2013-02-26 | Google Inc. | Managing URLs |
US20210397660A1 (en) * | 2006-04-13 | 2021-12-23 | Wgrs Licensing Company, Llc | Systems and methods for enhancing search results with input from brands, cities and geographic locations |
US20080104257A1 (en) * | 2006-10-26 | 2008-05-01 | Yahoo! Inc. | System and method using a refresh policy for incremental updating of web pages |
US8745183B2 (en) * | 2006-10-26 | 2014-06-03 | Yahoo! Inc. | System and method for adaptively refreshing a web page |
US20080104256A1 (en) * | 2006-10-26 | 2008-05-01 | Yahoo! Inc. | System and method for adaptively refreshing a web page |
US8255873B2 (en) * | 2006-11-20 | 2012-08-28 | Microsoft Corporation | Handling external content in web applications |
US10496350B2 (en) * | 2006-11-20 | 2019-12-03 | Microsoft Technology Licensing, Llc | Handling external content in web applications |
US20120260159A1 (en) * | 2006-11-20 | 2012-10-11 | Microsoft Corporation | Handling external content in web applications |
US20080120533A1 (en) * | 2006-11-20 | 2008-05-22 | Microsoft Corporation | Handling external content in web applications |
US20090112843A1 (en) * | 2007-10-29 | 2009-04-30 | International Business Machines Corporation | System and method for providing differentiated service levels for search index |
US20090240670A1 (en) * | 2008-03-20 | 2009-09-24 | Yahoo! Inc. | Uniform resource identifier alignment |
US8423885B1 (en) | 2009-01-30 | 2013-04-16 | Google Inc. | Updating search engine document index based on calculated age of changed portions in a document |
US8001462B1 (en) * | 2009-01-30 | 2011-08-16 | Google Inc. | Updating search engine document index based on calculated age of changed portions in a document |
US8712992B2 (en) * | 2009-03-28 | 2014-04-29 | Microsoft Corporation | Method and apparatus for web crawling |
US20100250516A1 (en) * | 2009-03-28 | 2010-09-30 | Microsoft Corporation | Method and apparatus for web crawling |
US8713068B2 (en) * | 2009-06-11 | 2014-04-29 | Yahoo! Inc. | Media identification system with fingerprint database balanced according to search loads |
US20100318587A1 (en) * | 2009-06-11 | 2010-12-16 | Auditude, Inc. | Media identification system with fingerprint database balanced according to search loads |
US8838571B2 (en) * | 2010-06-28 | 2014-09-16 | International Business Machines Corporation | Data-discriminate search engine updates |
US9043306B2 (en) * | 2010-08-23 | 2015-05-26 | Microsoft Technology Licensing, Llc | Content signature notification |
US8332408B1 (en) | 2010-08-23 | 2012-12-11 | Google Inc. | Date-based web page annotation |
US20120047121A1 (en) * | 2010-08-23 | 2012-02-23 | Microsoft Corporation | Content signature notification |
US20130332585A1 (en) * | 2011-02-25 | 2013-12-12 | Zte Corporation | Method and system for downloading content |
US9432425B2 (en) * | 2011-02-25 | 2016-08-30 | Zte Corporation | Method and system for downloading content |
US8676783B1 (en) * | 2011-06-28 | 2014-03-18 | Google Inc. | Method and apparatus for managing a backlog of pending URL crawls |
US20130018920A1 (en) * | 2011-07-12 | 2013-01-17 | Griffin Andrew M | Configuration management database security |
US9710557B2 (en) * | 2012-09-24 | 2017-07-18 | International Business Machines Corporation | Partitioning a search space for distributed crawling |
US20140195510A1 (en) * | 2012-09-24 | 2014-07-10 | International Business Machines Corporation | Partitioning a search space for distributed crawling |
US10326783B2 (en) * | 2014-03-28 | 2019-06-18 | Amazon Technologies, Inc. | Token based automated agent detection |
US20170144066A1 (en) * | 2014-06-09 | 2017-05-25 | Capcom Co., Ltd. | Distribution system and method |
US11055369B2 (en) * | 2015-06-15 | 2021-07-06 | Google Llc | Automatic crawling of applications |
CN110020046A (en) * | 2017-10-20 | 2019-07-16 | 中移(苏州)软件技术有限公司 | A kind of data grab method and device |
US10949476B1 (en) | 2017-10-20 | 2021-03-16 | Carmax Business Services, Llc | Systems and methods for generating web pages for database search and search engine optimization |
CN110020046B (en) * | 2017-10-20 | 2021-06-15 | 中移(苏州)软件技术有限公司 | Data capturing method and device |
US10068021B1 (en) * | 2017-10-20 | 2018-09-04 | Carmax Business Services, Llc | Systems and methods for generating web pages for database search and search engine optimization |
US11797616B1 (en) | 2017-10-20 | 2023-10-24 | Carmax Enterprise Services, Llc | Systems and methods for generating web pages for database search and search engine optimization |
WO2020236250A1 (en) * | 2019-05-22 | 2020-11-26 | Microsoft Technology Licensing, Llc | Efficient freshness crawl scheduling |
US11379539B2 (en) | 2019-05-22 | 2022-07-05 | Microsoft Technology Licensing, Llc | Efficient freshness crawl scheduling |
CN116401435A (en) * | 2023-02-22 | 2023-07-07 | 北京麦克斯泰科技有限公司 | Method and device for calculating and scheduling heat of daily active columns |
CN116401435B (en) * | 2023-02-22 | 2023-11-10 | 北京麦克斯泰科技有限公司 | Method and device for calculating and scheduling heat of daily active columns |
Also Published As
Publication number | Publication date |
---|---|
US8775403B2 (en) | 2014-07-08 |
US10621241B2 (en) | 2020-04-14 |
US20100241621A1 (en) | 2010-09-23 |
US8161033B2 (en) | 2012-04-17 |
US20120317089A1 (en) | 2012-12-13 |
US20140324818A1 (en) | 2014-10-30 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US10621241B2 (en) | Scheduler for search engine crawler | |
US10216847B2 (en) | Document reuse in a search engine crawler | |
US7308643B1 (en) | Anchor tag indexing in a web crawler system | |
US7984054B2 (en) | Representative document selection for sets of duplicate documents in a web crawler system | |
US7185088B1 (en) | Systems and methods for removing duplicate search engine results | |
US6263364B1 (en) | Web crawler system using plurality of parallel priority level queues having distinct associated download priority levels for prioritizing document downloading and maintaining document freshness | |
US6351755B1 (en) | System and method for associating an extensible set of data with documents downloaded by a web crawler | |
US7987172B1 (en) | Minimizing visibility of stale content in web searching including revising web crawl intervals of documents | |
US7440964B2 (en) | Method, device and software for querying and presenting search results | |
US6377984B1 (en) | Web crawler system using parallel queues for queing data sets having common address and concurrently downloading data associated with data set in each queue | |
US6952730B1 (en) | System and method for efficient filtering of data set addresses in a web crawler | |
US6321265B1 (en) | System and method for enforcing politeness while scheduling downloads in a web crawler | |
US20100057916A1 (en) | Method and system for gathering information resident on global computer networks | |
US20050086192A1 (en) | Method and apparatus for improving the integration between a search engine and one or more file servers | |
WO2001033384A1 (en) | System and method for efficient representation of data set addresses in a web crawler | |
CA2537269C (en) | Method, device and software for querying and presenting search results | |
JPH11184862A (en) | Group adaptation-type information retrieval device | |
Crawling | SRC Research Report 173 |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE, INC.,CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:RANDALL, KEITH H.;REEL/FRAME:015087/0376Effective date: 20040519 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044101/0610Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 8TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1552)Year of fee payment: 8 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 12TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1553); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 12 |
US10061850B1 - Using recent queries for inserting relevant search results for navigational queries - Google Patents
Using recent queries for inserting relevant search results for navigational queries Download PDFInfo
- Publication number
- US10061850B1 US10061850B1 US12/844,744 US84474410A US10061850B1 US 10061850 B1 US10061850 B1 US 10061850B1 US 84474410 A US84474410 A US 84474410A US 10061850 B1 US10061850 B1 US 10061850B1
- Authority
- US
- United States
- Prior art keywords
- query
- search
- navigational
- search result
- alternate
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/951—Indexing; Web crawling techniques
-
- G06F17/30864—
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/24—Querying
- G06F16/245—Query processing
- G06F16/2453—Query optimisation
Definitions
- the disclosed embodiments relate generally to search results for navigational queries.
- the disclosed embodiments relate to a system and method for using recent search queries for inserting relevant search results for navigational queries.
- Online search engines such as Google®, Yahoo! Alta Vista, and the like are used by many Internet users to search for a variety of items.
- the searched items may include books, media content (e.g., audio and video content), documents, and other products or services such as accounting, tourism, car rental, air travel, hotels, restaurants, and the like.
- Some of the items are available online from various e-commerce web sites. For example, a large number of items are offered for sale at web sites such as Amazon.com, eBay.com, Travelzoo.com, Dell.com, and so forth.
- Users may search for items of interest directly from these web sites. For instance, a user interested in purchasing or obtaining information related to a particular laptop computer can navigate to the Amazon.com or Dell.com web site and search for the laptop using whatever search tools are provided by the respective site.
- One drawback of this approach is that users will need to adapt to the possibly limited capabilities of an on-site search engine to find the desired item(s).
- FIG. 1 is a block diagram illustrating an online session where recent search queries are used to supplement search results for navigational queries, according to some embodiments;
- FIG. 2 is a block diagram of a client-server system for using recent search queries to supplement search results for navigational queries, according to some embodiments;
- FIG. 3 is a block diagram of an exemplary data structure used for storing history files of search queries, according to some embodiments
- FIGS. 4A and 4B are exemplary data structures used for storing navigational query (Nav_Name) and item (Nav_Item) information, respectively, according to some embodiments;
- FIG. 5 is a block diagram of an exemplary data structure used for storing web sites catalogs, according to some embodiments.
- FIG. 6 is a block diagram of a server system for using recent search queries for inserting relevant search results for navigational queries, according to some embodiments
- FIG. 7 is a block diagram of a client system for displaying relevant search results for navigational queries based on recent search queries, according to some embodiments.
- FIGS. 8A and 8B are flowcharts of a method for using recent search queries for inserting relevant search results for navigational queries, according to some embodiments.
- FIGS. 9A and 9B are flowcharts of a method for displaying relevant search results for navigational queries based on recent search queries, according to some embodiments.
- Some embodiments provide a system, a computer-readable storage medium including instructions, and a computer-implemented method for using recent search queries for inserting relevant search results for navigational queries.
- a server one or more first queries, each including one or more search terms are received from a first user of a client. At least a subset of the first queries is stored in memory.
- a navigational query is received from the first user.
- the navigational query includes a first identifier of a first web site.
- An alternate query including one or more of the search terms and the navigational query is performed at the server.
- the search results for the alternate query are transmitted to the client for display to the first user.
- the performing of the alternate query is based on a prediction by the server, using the recent search queries (e.g., the multiple first queries) received from the first user, of items the first user may intend to search for on the first web site.
- the first queries may include queries received from the user within a predefined period of time or queries from the most recent N queries received from the first user, where N is a predefined number (e.g., a number between one and five).
- the server determines that items referenced by the first queries are associated with the first website. The server subsequently performs the navigational query received from the first user to obtain navigational search results. The navigational search results are merged with the alternate search results to form merged search results. The merged search results are subsequently transmitted to the client for display to the first user.
- the client receives the merged search results from the server.
- the merged search results include top ranking navigational search results, top ranking alternate search results, and remaining navigational search results.
- the client displays these search results in different displayed positions in a displayed search result page, as described in detail below.
- FIG. 1 is a block diagram illustrating an online session where recent search queries are used to supplement search results for navigational queries, according to some embodiments.
- a client system 100 also referred to hereinafter as a “client”
- a user in an online session enters one or more search queries 104 , including search terms such as “book1” 104 - 1 and “book2” 104 - 2 , in the search window 110 of a browser or another program that provides search capabilities.
- the server system 102 also referred to hereinafter as a “server” receives the user's search queries and in some embodiments stores the queries or a subset of the queries (e.g., the search terms) in a search database 120 for later reference.
- the server system 102 also returns search results for the respective search queries 104 .
- the stored search terms can be associated with a particular user id or a user session. Note that in such an embodiment, the user id could be in anonymized form; that is, not associated with an actual identity of the user. In other embodiments the user id may not be anonymized.
- a navigational query is a query that includes an identifier or other term that is clearly associated with a particular web site, such as the web site's name.
- Navigational queries also include multi-word identifications of a site, such as “bed bath and beyond;” misspelled site identifications where the intended site is apparent, such as “wolmart” instead of “walmart;” and shorthand notations for web sites, such as the query “today,” used by many users as short hand for, “today show,” with the corresponding expected site being, “today.msnbc.msn.com.”
- the server 102 receives the navigational search query 106 and performs the navigational search to obtain navigational search results.
- the server 102 maintains a Nav_Name database 244 of search terms associated with navigational queries in order to determine when the user has issued such a navigational search query. Instead of merely transmitting the navigational search results to the user, the server 102 uses its record of the user's recent search queries, such as the search queries 104 - 1 and 104 - 2 to predict what items (e.g., items corresponding to at least a subset of the recent search queries) the user might want to search for on the site associated with the navigational query 106 .
- items e.g., items corresponding to at least a subset of the recent search queries
- the server 102 consults a list of items/search terms that have been selected/clicked through on search results for specific sites (e.g., sites on the Nav_Item lists 246 ) to determine which of the recent search results have been selected by previous users from previous search results for the same navigational query 106 .
- the server 102 then performs an additional alternate query based on that prediction.
- items as used herein includes search terms entered into search queries and displayed in search results, and can also refer to items on web sites, which, as mentioned above, can include media, documents, commercial products of any kind, or information of any type that can be related to search results for particular web sites.
- the server 102 assumes that the user may want to submit at least one of the recent search queries 104 to the web site associated with the navigational query 106 .
- the server 102 internally prepares an alternate query 130 that includes the navigational search query 106 and one or more search terms from the user's recent search queries (e.g., the search queries 104 ).
- the server 102 then performs the alternate query 130 and obtains alternate query search results 132 .
- the user may search for “Harry Potter” (e.g., as “book1” in the search query 104 - 1 ) in the search engine and then subsequently enter a navigational search query for “amazon.”
- the alternate search query internally performed by the server 102 i.e., the Google server
- the server 102 i.e., the Google server
- the alternate search query performed by the server 102 would correspond to the string: “harry potter amazon site:amazon.com.” With this search query, the terms “harry potter” and “amazon” would be highlighted in the search results from the amazon.com site. In other embodiments, the alternate search query performed by the server 102 could correspond to the string: “harry potter site:amazon.com.” With this search query, only the term “harry potter” would be highlighted in the search results from the amazon.com site.
- each of the navigational search results and the alternate query search results 132 include multiple search results. These search results, as will be described in more detail below, are ranked by the server 102 to identify top ranking search results.
- each of the top ranking navigational search results, the top ranking alternate search results, and the remaining navigational search results are associated with a priority attribute that indicates a priority level for display or other purposes.
- the top ranking navigational search results, the top ranking alternate search results, and the remaining navigational search results can have associated first, second, and third priority attributes, respectively, where the first, second, and third priority attributes correspond to the highest, medium, and lowest priority levels, respectively.
- the server 102 merges the top ranking navigational search results, the top ranking alternate search results, and the remaining navigational search results, with their associated priority attributes, and transmits the merged search results to the client 100 for display to the user.
- the client 100 receives the merged search results and displays them according to their respective priority level in different displayed locations. For example, in some embodiments, the client 100 displays the top ranking navigational search results, the top ranking alternate search results, and the remaining navigational search results, respectively, at displayed positions 142 , 144 , and 146 of the displayed search results 140 in a browser window.
- FIG. 2 is a block diagram of a client-server system 200 for using recent search queries to supplement search results for navigational queries, according to some embodiments.
- the client-server system 200 includes a number of clients 100 (e.g., clients 100 - 1 to 100 -M) connected to a server 102 through one or more communication networks 204 .
- a client 100 may be any computer or similar device through which a user of the client 100 can submit data access requests (e.g., search queries) to and receive results (e.g., search results) or other services from the server 102 and/or web servers 210 . Examples include, without limitation, desktop computers, laptop computers, tablet computers, mobile devices such as mobile phones, personal digital assistants, set-top boxes, or any combination of the above.
- a respective client 100 may contain at least one client application 202 for submitting requests to the server 102 and/or the web servers 210 .
- the client application 202 can be web applications such as web browser or other type of application that permits a user to access the services provided by the server 102 and/or the web servers 210 .
- the client application 202 includes one or more client assistants 204 .
- a client assistant 204 can be a software application that performs tasks related to assisting a user's activities with respect to the client application 202 and/or other applications.
- the client assistant 204 may assist a user at the client 100 with browsing information (e.g., web pages retrieved from the web servers 210 ), processing information (e.g., query results) received from the server 102 , and monitoring the user's activities on the query results.
- the client assistant 204 is embedded in a web page (e.g., a query results web page) or other documents downloaded from the server 102 .
- the client assistant 204 is a part of the client application 202 (e.g., a plug-in application of a web browser).
- the client 100 further includes a communication interface 206 to support the communication between the client 100 and other systems/devices (e.g., the server 102 , web server 210 , or another client device 100 ).
- the communication network(s) 204 can be any wired or wireless local area network (LAN) and/or wide area network (WAN), such as an intranet, an extranet, the Internet, or a combination of such networks.
- the communication network 204 uses the HyperText Transport Protocol (HTTP) and the Transmission Control Protocol/Internet Protocol (TCP/IP) to transport information between different networks.
- HTTP HyperText Transport Protocol
- TCP/IP Transmission Control Protocol/Internet Protocol
- the HTTP permits client devices to access various information items available on the Internet via the communication network 204 .
- the various embodiments of the invention are not limited to the use of any particular protocol.
- the server 102 includes a web interface 220 (also referred to as a “front-end server”), a server application 222 (also referred to as a “mid-tier server”), and a backend server 230 .
- the web interface 220 receives data access requests from clients 100 and forwards the requests to the server application 222 .
- the server application 222 decides how to process the requests.
- the server application 222 optionally pre-processes the request (e.g., one or more search queries including search strings) to identify data filters associated with a request and search terms embedded in each of the search strings.
- the server application 222 submits the pre-processed request to a search engine 240 .
- the search engine 240 stores search strings and/or the identified search terms in a history file 242 of search queries of a search database 120 .
- the search engine 240 builds a list 244 of navigational queries (e.g., the Nav_Name list 244 ) and stores the list in the search database 120 where it can be accessed by the search engine 240 .
- the search engine 240 builds the list of navigational queries by scanning the queries in global search logs 238 ( FIG. 6 ) and identifying as navigational queries those search queries “X” where the most common click (i.e., selected result) in the search results is for a web site named X.
- the server 102 can identify the search term, “google,” as a navigational query by examining users' clicks in search results for the query, “google” and determining that some predetermined percentage (e.g., more than 60%) of the resulting clicks in the search results are for the “google.com” web site.
- the search engine then stores the navigation query (“X”) and the associated web site URL (X) as a pair in the list of navigational queries 244 .
- the search engine 240 builds a list 246 of items associated with each navigational query in the Nav_Name list 244 (e.g., the Nav_Item list 246 ).
- the search engine 240 builds the Nav_Item list of items 246 by scanning the search logs 242 and identifying queries from various users with the strings “X Y” or “Y X”, where X represents a navigational query and Y represents a sequence of one or more search terms. After finding such queries, the search engine 240 then identifies, among the found queries, those queries for which the majority of clicks were on a web site named X.
- the search terms included in the sequence of search terms Y are then identified as referencing items associated with the web site named X.
- the search engine 240 then stores the identified queries and associated items Y in the navigation items list 246 , which, in some embodiments, is stored in the database 120 .
- Many of the examples discussed herein are related to commercial web sites, such as online stores, where the Nav_Items are commercial products available from those sites.
- Nav_Names and Nav_Items can be used in a wide range of applications. For example, the Nav_Name, “you tube” can have associated Nav_Items, “hip hop” or “cats” (returning youtube results for hip hop and cat videos, respectively).
- a server 102 can use the Nav_Name and Nav_Item lists 244 , 246 to suggest multiple Nav_Names for a given Nav_Item (entered, for example, by a user in a search window on a client 100 ) even though the user entered just one Nav_Name.
- a server 102 could also return suggestions that the user search for “harry potter” on the following Nav_Names: “walmart,” “imdb,” “target” and “youtube,” because all of those Nav_Names have “harry potter” as an associated Nav_Item.
- the server 102 could trigger such a suggestion only when the user enters more than one Nav_Name matching a Nav_item used in their session.
- a server 102 could return a list of all of the Nav_Names that have “titanic” as a Nav_Item because both “wikipedia′ and “history channel” have “titanic” as a Nav_Item.
- the search database 120 is stored at the server 102 .
- the search database 120 is a distributed database.
- the search database 120 is located on a computer system that is separate and distinct from the server 102 .
- the distributed database is a multi-dimensional sorted map.
- the multi-dimensional sorted map may be implemented as a BigTable database.
- the backend 230 is a database management system including a database server 232 that is configured to manage a database 234 .
- the backend 230 receives and processes queries from the server application 222 .
- the queries can be associated with a request made by one of the clients 100 or a server-based application.
- the server application 222 determines whether it has data that is responsive to the request, submits queries to the backend 230 , processes the data returned by the backend server 230 in response to the queries, and returns the processed data as results to the requesting clients 100 .
- the client application 202 at a respective client 100 displays the result to the user who submitted the original request.
- the database 234 is stored at the server 102 . In some embodiments, the database 234 is located on a computer system that is separate and distinct from the server 102 . In some embodiments, the database 324 is a distributed database. In some embodiments, the distributed database is a multi-dimensional sorted map. For example, the multi-dimensional sorted map may be implemented as a BigTable database.
- the list of associated Nav_Item entries can be very large.
- a very large e-commerce site such as “amazon.com” can have as many as one million Nav_Items associated with the site's Nav_Name.
- the server e.g., the database 120
- returning the list of Nav_Items can be very slow.
- some embodiments test for the existence of a (Nav_Name, Nav_Item) pair in a map, avoiding the need to retrieve in one operation all Nav_Items that match a specific Nav_Name entry.
- the web server 210 that provides web pages 212 stores lists of items available from various web sites as web site catalogs 236 in the item database 214 .
- the web site catalogs can be provided, upon request, to the server 102 . Once requested and received by the server 102 , the web site catalogs can be stored in a website catalog file 236 associated in some embodiments with the database 234 . In some embodiments, these catalogs can be used by the server to confirm that items of interest to a user are available at web sites associated with the user's navigational searches.
- FIG. 3 is a block diagram of an exemplary data structure 300 used to store per-user and/or per-session search histories in some embodiments.
- the session data stored in the history files 242 of search queries correspond to an online session (e.g., the online session described above with respect to FIG. 1 ) of a user of the client 100 ( FIG. 1 ) using a browser application and issuing search queries to a search engine 240 .
- the server 102 ( FIG. 2 ) associates with each online session a session-ID 302 , which is stored in the data structure 300 .
- information stored for each session includes a user (or computer) ID 310 that identifies a user (or computer) of the client 100 who initiated the online session and information 320 on queries issued by the user during that session.
- the session-ID 302 and the user ID 310 may be derived from information provided by the client, such as information stored in a cookie received from a client web browser. The cookie may also be stored in the client 100 and transmitted by the browser to the server 102 when the online session is initiated by the user.
- other information stored for a session 302 includes a time stamp 330 that indicates when the server received a particular query 320 from the user, and the search string 340 associated with that query.
- each search query 340 is a logical function F(term1, term2 . . . ) of search terms, term1, term2, . . . , where the logical function F( )) represents a filtering function applied to the search terms, term1, term2, . . . , by the user.
- the filtering function is a combination, subset or superset of Boolean operators, such as AND, OR and NOT; and restriction operators that, for example, specify that the search be limited to a particular site or result date range.
- the server application 222 may pre-process a search string 340 to identify search terms associated with a search query 320 , and submit these search terms to the search engine 240 for storing in the search database 120 .
- FIG. 4A is a block diagram of an exemplary data structure 400 used to store navigational search terms and associated web site addresses (e.g., the Nav_Name list 244 ), according to some embodiments.
- the data structure includes for each of a collection of known web site addresses 402 one or more navigational search terms 404 that are associated with that web site.
- the Nav_Name list 244 entries are generated as described above, with reference to FIG. 2 .
- FIG. 4B is a block diagram of an exemplary data structure 450 used to store lists of items/search terms associated with particular sites from the Nav_Name list 244 (e.g., the Nav_Item list 246 ), according to some embodiments.
- the data structure 400 includes, for each web site identifier 410 (e.g., a web site name) corresponding to a navigational query a number of items 420 associated with the web site identified by that web site identifier.
- each item ID 420 represents an item associated with the web site identified by the web site identifier 410 - 1 .
- the list of items 420 of the website 410 may be derived from a web site catalog for the web site identified by the web site identifier 410 received from a respective web server (e.g., web server 210 , FIG. 2 ).
- the web site identifier 410 corresponds to an address of a web site for which there is an entry in the Nav_Name list 242 ; in other embodiments the web site identifier 410 is an actual Nav_Name.
- FIG. 5 is a block diagram of an exemplary data structure 500 used for storing website catalogs 236 , according to some embodiments.
- the arrangement of the data structure 500 is analogous to the data structure 450 of FIG. 4B , except that in the data structure 500 , for each item 510 of a web site identified by a web site identifier 502 ; supplementary data, such as item information 514 , in addition to item ID 512 , are provided.
- the item information 514 may include images, specifications, a price, an expiration date, and the like.
- FIG. 6 is a block diagram of a server 102 for using recent search queries for inserting relevant search results for navigational queries, according to some embodiments.
- the server 102 generally includes one or more processing units (CPU's) 602 , one or more network or other communications interfaces 604 , memory 610 , and one or more communication buses 609 for interconnecting these components.
- the server 102 may optionally include a user interface 605 comprising a display device 606 (e.g., a touch sensitive display device) and input devices 608 (e.g., a keyboard, a mouse, a track pad, etc.).
- the communication buses 609 may include circuitry (sometimes called a chipset) that interconnects and controls communications between components.
- Memory 610 includes high-speed random access memory, such as DRAM, SRAM, DDR RAM, or other random access solid state memory devices; and may include non-volatile memory, such as one or more magnetic disk storage devices, optical disk storage devices, flash memory devices, or other non-volatile solid state storage devices. Memory 610 may optionally include one or more storage devices remotely located from the CPU(s) 602 . Memory 610 , or alternately the non-volatile memory device(s) within memory 610 , comprises a computer readable storage medium. Memory 610 or the computer readable storage medium of memory 610 stores the following elements, or a subset of these elements, and may also include additional elements:
- FIG. 7 is a block diagram of a client 100 for displaying relevant search results for navigational queries based on recent search queries, according to some embodiments.
- the client device 100 generally includes one or more processing units (CPU's) 702 , one or more network or other communications interfaces 704 , memory 710 , and one or more communication buses 709 for interconnecting these components.
- the client device 100 may optionally include a user interface 705 , for instance, a display device 706 , such as a touch sensitive display, input devices 708 (e.g., a keyboard, a mouse, a track pad, a touch-sensitive surface, etc.).
- the communication buses 709 may include circuitry (sometimes called a chipset) that interconnects and controls communications between components.
- Memory 710 may include high speed random access memory, such as DRAM, SRAM, DDR RAM or other random access solid state memory devices; and may also include non-volatile memory, such as one or more magnetic disk storage devices, optical disk storage devices, flash memory devices, or other non-volatile solid state storage devices.
- Memory 710 may include mass storage that is remotely located from the central processing unit(s) 702 .
- Memory 710 or alternately the non-volatile memory device(s) within memory 710 , comprises a computer readable storage medium.
- Memory 710 or the computer readable storage medium of memory 710 stores the following elements, or a subset of these elements, and may also include additional elements:
- FIGS. 8A and 8B are flowcharts of a method 800 for using recent search queries for inserting relevant search results for navigational queries, according to some embodiments.
- the method 800 may be implemented by a standalone computer or the server 102 of FIG. 6 .
- the method 800 as described below relates to a number of operations performed at server 102 to predict a user's next step, based on recent search queries entered by the user (e.g., a first user), after the user enters a navigational search query 106 ( FIG. 1 ) in a search window 112 ( FIG. 1 ) of a web browser or other client application.
- the server 102 receives one or more search queries from a first user. Multiple search queries may be received from the client 100 ( FIG. 7 ), where the first user has entered the multiple search queries in an online session ( FIG. 1 ). Each of the search queries (e.g., first queries) includes ( 812 ) at least one search term. For example, each search query includes a string that can form a logical function of search terms. The logical function may include logical operators such as “AND,” “OR,” “NOT,” and the like.
- each of the first search queries is associated with a user identifier (ID).
- ID may be determined by the server 102 based on user or computer information, such as a cookie, associated with the online session of the first user.
- the user or computer information is sent by the web browser to the server 102 .
- the user or computer information may include a user ID 310 ( FIG. 3 ) and/or a session identifier (e.g., session-ID 302 , FIG. 3 ).
- the one or more first search queries include “recent” queries received by the server 102 from the first user.
- the recent queries may, for example, be the queries received from the user within a predefined period of time.
- the predefined period of time is referenced to a time stamp (e.g., the time stamp 330 , FIG. 3 ) associated with the server's receipt of the navigational query.
- the predefined period may include the last few minutes (such as the last 10-30 minutes) or the last few days, depending on the nature of the search queries.
- the search queries include search terms such as names of items, for example, books, then the predefined period may be considered to be the last few minutes or hours.
- a longer time period such as the last few days may also be acceptable.
- the one more first search queries correspond to the most recent N queries (or a subset thereof) received by the server 102 from the first user, wherein the most recent queries are determined with respect to a time stamp (e.g., the time stamp 330 , FIG. 3 ) associated with receipt by the server 102 of the navigational query from the user.
- a time stamp e.g., the time stamp 330 , FIG. 3
- the number N is a predefined number such as 5 or 10.
- Other measures for determining which of a user's multiple queries are recent queries, or, alternatively, determining session boundaries (where a session includes the recent search queries that can possibly be combined with a subsequent navigational search query) include:
- the server 102 stores at least a subset of the search queries from the first user in a search database 120 .
- the server 102 also stores ( 822 ) search information derived from other users (e.g., one or more second users).
- the search information from the other users includes pairs of navigational search terms and associated web site addresses, which are stored in a Nav_Name list 244 ( FIGS. 2, 4 ).
- the search information from the other uses also includes a list of items/search terms associated with particular web sites, which are stored in a Nav_Item list 246 , including in some embodiments the web sites included in the Nav_Name list 244 .
- the server derives the information in the lists 244 , 246 from global search logs 238 that include information from searches conducted by multiple users.
- the server 102 receives a navigational query from the first user.
- the navigational query comprises a query that includes an identifier (e.g., the first identifier, such as a name) of a web site, such as the identifier, “google,” corresponding to a first web site, “google.com”.
- the determining module 618 may determine that some of the items referenced by the recent search queries are associated with the web site identified in the received navigational query or, putting it in a different way, that the search terms in some of the one or more first search queries have previously been selected, or clicked through, by another user from previous search results for the navigational query.
- the determining module 618 may, for example, compare the web site identifier included in a user's navigational query (e.g., web site identifier 410 of FIG. 4 ) and one or more search terms included in user's recent search queries to search pairs stored in the global history file 244 of search pairs to determine whether a match exists ( 832 ).
- the determining module 618 may compare the items referenced by the recent queries, including the most recent N queries received from the user, to a stored list of items for the web site to determine whether the items are available from the web site ( 834 ).
- the list of the items for the web site may be obtained from the web sites catalogs 236 ( FIGS. 2 and 5 ).
- the determining module 618 notifies the execution module 616 of the existing match.
- the execution module 616 performs an alternate query that includes one or more of the search terms included in the recent search queries, and the navigational query, both received by the server 102 from the user. In some embodiments ( 842 ), the execution module 616 performs the navigational query in parallel with the alternate query to obtain navigational results as well as alternate results.
- the server 102 transmits the search results for the alternate query and the navigational query to the client 100 for display to the user.
- the server 102 merges the search results for the alternate query and the navigational search results to form merged search results ( 860 ).
- the merged search results include an arrangement where different portions of the search results are presented with different priority attributes. For example, top ranking navigational search results are presented with a first priority attribute, top ranking alternate query search results are presented with a second priority attribute, and the remaining navigational search results are presented with a third priority attribute.
- the first priority attribute corresponds to a highest priority level and the third priority attribute corresponds to a lowest priority level.
- the server 102 transmits the merged results to the client 100 for display to the user ( 864 ).
- the top ranking search results are defined as the search results that have received historically the top N percent of clicks from various users, where N is a predefined number (e.g., a value between 60-100, such as 90).
- the remaining navigational search results are the navigational search results other than the top ranking navigational search results.
- any navigational search result that receives less than L percent of the clicks is not displayed as part of the remaining navigational search results, where L is a predefined number (e.g., less than 20, such as 5).
- the number of clicks referred to herein corresponds to the historical number of received clicks for each search result as stored in the global search logs.
- FIG. 9 is a flowchart of a method 900 for displaying relevant search results for navigational queries based on recent search queries, according to some embodiments.
- the method 900 may be implemented by a standalone computer or the client 100 of FIG. 7 .
- the method 900 as described below, relates to a number of operations performed at the client 100 to display search results received from the server 102 ( FIG. 6 ) in response to search queries received from users (e.g., a first and a second user) and transmitted to the server 102 , as described herein.
- the client 100 receives multiple queries (e.g., first queries) from the user ( 902 ). Each of the queries includes one or more search terms ( 904 ). The client 100 transmits the queries to the server 102 ( 906 ). Subsequently ( 908 ), the client 100 receives a navigational query from the user.
- the navigational query includes an identifier (e.g., the web site identifier 410 of FIG. 4 , such as a web site name) ( 910 ).
- the client 100 transmits ( 912 ) the navigational query to the server 102 .
- the client 100 receives ( 914 ) search results from the server 102 .
- the search results include ( 916 ) top ranking navigational search results, in response to the navigational query, and a first top ranking alternate search results in response to an alternate query performed by the server.
- the alternate query includes the navigational query and the multiple queries.
- the user interface module 716 displays ( 920 ) received search results to the user.
- the user interface module 716 displays different portions of the search results, for example, the top ranking navigational search results, the first top ranking alternate search results, and the remaining navigational search results at different displayed positions in a displayed search result page.
- the displayed position for each portion of the search results depends on the priority attribute of that portion as presented by the server 102 and described above with respect to FIG. 8 .
- the top ranking navigational search results portion that is presented with the first priority attribute indicating the highest priority are displayed at the top of the displayed search result page (display position 142 , FIG. 1 ).
- the first top ranking alternate search results portion that is presented with the second priority attribute are displayed below the top ranking navigational search (display position 144 , FIG. 1 ).
- the remaining navigational search results portion that is presented with the third priority attribute are displayed below the first top ranking alternate search results portion (display position 146 , FIG. 1 ).
- different displayed positions 142 , 144 , and 146 are displayed with different display attributes (e.g., color, shading, font size, font type, and the like).
- the client 100 may receive a text of the alternate query from the server 102 . Subsequently ( 932 ), the client 100 may display the text of the alternate query to the user as a suggested equivalent search query. Alternatively, the client 100 displays ( 934 ) the text of the alternate query to the user and detects ( 936 ) a selection of the displayed text of the alternate query from the user. The user may select the displayed text of the alternate query by, for example, a click or mouse over action, which is detected by the operating system 712 of the client 100 ( FIG. 7 ). In some embodiments ( 938 ), the client 100 transmits the alternate search query instead of the navigational search query to the server 102 ( FIG. 6 ).
- the client 100 in response to transmitting the alternate search query, receives search results from the server 102 .
- the search results include a second top ranking alternate search results in response to the transmitted alternate query ( 942 ).
- the client 100 subsequently, displays the search results in different displayed positions as discussed above ( 922 - 928 ).
- Some embodiments can employ additional techniques for presenting/displaying the prediction of a Nav_Item that a user is looking for (i.e., beyond injecting the results of an alternative query into search results presented to the user as described above).
- additional techniques include:
- embodiments described herein save a user's time and effort by predicting searches that the user is likely to make based on a history of the user's recent searches (including general searches—e.g., for items that can be purchased from online retailers—and a navigational query) and, in some instances, global search information from which the server is able to identify navigational queries entered by the user and to determine whether the items recently searched for by the user are available from the site corresponding to the navigational search.
- general searches e.g., for items that can be purchased from online retailers—and a navigational query
- the server performs multiple searches nearly simultaneously, including the navigational query input by the user and an alternate search based on recent search terms (restricted to the site corresponding to the navigational query), the user is able to either select from displayed, merged results a result associated with the recent navigational query or one of the alternate results, therefore saving time that would otherwise be required to re-enter search terms on a particular web site.
Abstract
A method and system for using recent search queries for inserting relevant search results for navigational queries. At a server, multiple first queries including one or more search terms are received from a first user of a client. At least a subset of the first queries is stored in memory. A navigational query is received from the first user. The navigational query includes a first identifier of a first web site. An alternate query including one or more of the search terms is performed at the server. The search results for the alternate query are transmitted to the client for display to the first user.
Description
The disclosed embodiments relate generally to search results for navigational queries. In particular, the disclosed embodiments relate to a system and method for using recent search queries for inserting relevant search results for navigational queries.
Online search engines such as Google®, Yahoo! Alta Vista, and the like are used by many Internet users to search for a variety of items. The searched items may include books, media content (e.g., audio and video content), documents, and other products or services such as accounting, tourism, car rental, air travel, hotels, restaurants, and the like. Some of the items are available online from various e-commerce web sites. For example, a large number of items are offered for sale at web sites such as Amazon.com, eBay.com, Travelzoo.com, Dell.com, and so forth.
Users may search for items of interest directly from these web sites. For instance, a user interested in purchasing or obtaining information related to a particular laptop computer can navigate to the Amazon.com or Dell.com web site and search for the laptop using whatever search tools are provided by the respective site. One drawback of this approach is that users will need to adapt to the possibly limited capabilities of an on-site search engine to find the desired item(s).
Also, many users may not know exactly what model or brand they want to purchase, or even the URL of a web site from which to make their purchase. Such users might first perform one or more informational searches where they enter various laptop models or manufacturer names into a general-purpose search engine (such as the Google® search engine) to see what particular choices are available. They then might perform a navigational search by entering in their chosen search engine the name of a shopping site (such as “Amazon” or “Dell”), hoping that one of the top results will provide a link to the corresponding site (such as “http://www.amazon.com” or “http://www.dell.com”). After selecting a link from the navigation search results and landing on the desired web-site, these users would then need to enter the product names of interest from the first set of search results into the on-site search engine to continue with their shopping. In addition to requiring users to employ multiple search engines, possibly with different interfaces and capabilities, this is an inefficient process as it requires users to perform multiple, possibly redundant, searches from the different search engines. Also, it might be the case that products identified in the first information searches are not available on the shopping site selected from the navigational search results. Therefore, it would be desirable to provide users who might have limited information about web site URLs and particular products available on those sites with a more efficient and consistent searching and shopping experience.
Like reference numerals refer to corresponding parts throughout the drawings.
Some embodiments provide a system, a computer-readable storage medium including instructions, and a computer-implemented method for using recent search queries for inserting relevant search results for navigational queries. At a server, one or more first queries, each including one or more search terms are received from a first user of a client. At least a subset of the first queries is stored in memory. A navigational query is received from the first user. The navigational query includes a first identifier of a first web site. An alternate query including one or more of the search terms and the navigational query is performed at the server. The search results for the alternate query are transmitted to the client for display to the first user. The performing of the alternate query is based on a prediction by the server, using the recent search queries (e.g., the multiple first queries) received from the first user, of items the first user may intend to search for on the first web site.
In some embodiments, the first queries may include queries received from the user within a predefined period of time or queries from the most recent N queries received from the first user, where N is a predefined number (e.g., a number between one and five). In some embodiments, the server determines that items referenced by the first queries are associated with the first website. The server subsequently performs the navigational query received from the first user to obtain navigational search results. The navigational search results are merged with the alternate search results to form merged search results. The merged search results are subsequently transmitted to the client for display to the first user.
In some embodiments, the client receives the merged search results from the server. In some embodiments, the merged search results include top ranking navigational search results, top ranking alternate search results, and remaining navigational search results. The client displays these search results in different displayed positions in a displayed search result page, as described in detail below.
Reference will now be made in detail to embodiments, examples of which are illustrated in the accompanying drawings. While the invention will be described in conjunction with the embodiments, it will be understood that the invention is not limited to these particular embodiments. On the contrary, the invention includes alternatives, modifications and equivalents that are within the spirit and scope of the appended claims. Numerous specific details are set fourth in order to provide a thorough understanding of the subject matter presented herein. But it will be apparent to one of ordinary skill in the art that the subject matter may be practiced without these specific details. In other instances, well-known methods, procedures, components, and circuits have not been described in detail so as not to unnecessarily obscure aspects of the embodiments.
Subsequently, the user enters a navigational query 106 in the search window 110. For the purposes of this patent application, a navigational query is a query that includes an identifier or other term that is clearly associated with a particular web site, such as the web site's name. For example, “Google,” “Amazon” and “HP” are examples of navigational queries for the respective web sites, “google.com,” “amazon.com,” and “hp.com.” Navigational queries also include multi-word identifications of a site, such as “bed bath and beyond;” misspelled site identifications where the intended site is apparent, such as “wolmart” instead of “walmart;” and shorthand notations for web sites, such as the query “today,” used by many users as short hand for, “today show,” with the corresponding expected site being, “today.msnbc.msn.com.” The server 102 receives the navigational search query 106 and performs the navigational search to obtain navigational search results. In some embodiments, as described below, the server 102 maintains a Nav_Name database 244 of search terms associated with navigational queries in order to determine when the user has issued such a navigational search query. Instead of merely transmitting the navigational search results to the user, the server 102 uses its record of the user's recent search queries, such as the search queries 104-1 and 104-2 to predict what items (e.g., items corresponding to at least a subset of the recent search queries) the user might want to search for on the site associated with the navigational query 106. In some embodiments, the server 102 consults a list of items/search terms that have been selected/clicked through on search results for specific sites (e.g., sites on the Nav_Item lists 246) to determine which of the recent search results have been selected by previous users from previous search results for the same navigational query 106. The server 102 then performs an additional alternate query based on that prediction. Note that the term, “items” as used herein includes search terms entered into search queries and displayed in search results, and can also refer to items on web sites, which, as mentioned above, can include media, documents, commercial products of any kind, or information of any type that can be related to search results for particular web sites.
In some embodiments, the server 102 assumes that the user may want to submit at least one of the recent search queries 104 to the web site associated with the navigational query 106. In order to save the user the time and effort required to re-enter such search terms 104 into that site's internal search engine, the server 102 internally prepares an alternate query 130 that includes the navigational search query 106 and one or more search terms from the user's recent search queries (e.g., the search queries 104). The server 102 then performs the alternate query 130 and obtains alternate query search results 132.
For example, the user may search for “Harry Potter” (e.g., as “book1” in the search query 104-1) in the search engine and then subsequently enter a navigational search query for “amazon.” In this example, the alternate search query internally performed by the server 102 (i.e., the Google server) would include the search term, “Harry Potter,” and the navigational query, “amazon” and would be restricted to the “amazon.com” site. In some embodiments, as shown in FIG. 1 , the alternate search query performed by the server 102 would correspond to the string: “harry potter amazon site:amazon.com.” With this search query, the terms “harry potter” and “amazon” would be highlighted in the search results from the amazon.com site. In other embodiments, the alternate search query performed by the server 102 could correspond to the string: “harry potter site:amazon.com.” With this search query, only the term “harry potter” would be highlighted in the search results from the amazon.com site.
In some embodiments, each of the navigational search results and the alternate query search results 132 include multiple search results. These search results, as will be described in more detail below, are ranked by the server 102 to identify top ranking search results. In some embodiments, each of the top ranking navigational search results, the top ranking alternate search results, and the remaining navigational search results are associated with a priority attribute that indicates a priority level for display or other purposes. For example, in some embodiments, the top ranking navigational search results, the top ranking alternate search results, and the remaining navigational search results can have associated first, second, and third priority attributes, respectively, where the first, second, and third priority attributes correspond to the highest, medium, and lowest priority levels, respectively.
In some embodiments, the server 102 merges the top ranking navigational search results, the top ranking alternate search results, and the remaining navigational search results, with their associated priority attributes, and transmits the merged search results to the client 100 for display to the user. The client 100 receives the merged search results and displays them according to their respective priority level in different displayed locations. For example, in some embodiments, the client 100 displays the top ranking navigational search results, the top ranking alternate search results, and the remaining navigational search results, respectively, at displayed positions 142, 144, and 146 of the displayed search results 140 in a browser window.
In some embodiments, the client application 202 includes one or more client assistants 204. A client assistant 204 can be a software application that performs tasks related to assisting a user's activities with respect to the client application 202 and/or other applications. For example, the client assistant 204 may assist a user at the client 100 with browsing information (e.g., web pages retrieved from the web servers 210), processing information (e.g., query results) received from the server 102, and monitoring the user's activities on the query results. In some embodiments, the client assistant 204 is embedded in a web page (e.g., a query results web page) or other documents downloaded from the server 102. In some embodiments, the client assistant 204 is a part of the client application 202 (e.g., a plug-in application of a web browser). The client 100 further includes a communication interface 206 to support the communication between the client 100 and other systems/devices (e.g., the server 102, web server 210, or another client device 100).
The communication network(s) 204 can be any wired or wireless local area network (LAN) and/or wide area network (WAN), such as an intranet, an extranet, the Internet, or a combination of such networks. In some embodiments, the communication network 204 uses the HyperText Transport Protocol (HTTP) and the Transmission Control Protocol/Internet Protocol (TCP/IP) to transport information between different networks. The HTTP permits client devices to access various information items available on the Internet via the communication network 204. The various embodiments of the invention, however, are not limited to the use of any particular protocol.
In some embodiments, the server 102 includes a web interface 220 (also referred to as a “front-end server”), a server application 222 (also referred to as a “mid-tier server”), and a backend server 230. The web interface 220 receives data access requests from clients 100 and forwards the requests to the server application 222. In response to receiving the requests, the server application 222 decides how to process the requests. In some embodiments, the server application 222 optionally pre-processes the request (e.g., one or more search queries including search strings) to identify data filters associated with a request and search terms embedded in each of the search strings. The server application 222 submits the pre-processed request to a search engine 240. The search engine 240 stores search strings and/or the identified search terms in a history file 242 of search queries of a search database 120.
In some embodiments, the search engine 240 builds a list 244 of navigational queries (e.g., the Nav_Name list 244) and stores the list in the search database 120 where it can be accessed by the search engine 240. In some embodiments, the search engine 240 builds the list of navigational queries by scanning the queries in global search logs 238 (FIG. 6 ) and identifying as navigational queries those search queries “X” where the most common click (i.e., selected result) in the search results is for a web site named X. For example, the server 102 can identify the search term, “google,” as a navigational query by examining users' clicks in search results for the query, “google” and determining that some predetermined percentage (e.g., more than 60%) of the resulting clicks in the search results are for the “google.com” web site. The search engine then stores the navigation query (“X”) and the associated web site URL (X) as a pair in the list of navigational queries 244. In some embodiments, there can be more than navigational query (“X1” and “X2”) associated with a particular web site (X). For example, both “google” and “google.com” could be navigational queries associated with the google.com site.
In some embodiments, the search engine 240 builds a list 246 of items associated with each navigational query in the Nav_Name list 244 (e.g., the Nav_Item list 246). The search engine 240 builds the Nav_Item list of items 246 by scanning the search logs 242 and identifying queries from various users with the strings “X Y” or “Y X”, where X represents a navigational query and Y represents a sequence of one or more search terms. After finding such queries, the search engine 240 then identifies, among the found queries, those queries for which the majority of clicks were on a web site named X. The search terms included in the sequence of search terms Y, are then identified as referencing items associated with the web site named X. The search engine 240 then stores the identified queries and associated items Y in the navigation items list 246, which, in some embodiments, is stored in the database 120. Many of the examples discussed herein are related to commercial web sites, such as online stores, where the Nav_Items are commercial products available from those sites. However, Nav_Names and Nav_Items can be used in a wide range of applications. For example, the Nav_Name, “you tube” can have associated Nav_Items, “hip hop” or “cats” (returning youtube results for hip hop and cat videos, respectively). Other exemplary Nav_Name/Nav_Item pairs include: Nav_Name=“irs”/Nav_Item=“form 1040,” and Nav_Name=wikipedia/Nav_Name=“roman empire.” In some embodiments, a server 102 can use the Nav_Name and Nav_Item lists 244, 246 to suggest multiple Nav_Names for a given Nav_Item (entered, for example, by a user in a search window on a client 100) even though the user entered just one Nav_Name. For example, if the user types the queries: 1) “harry potter,” and 2) “amazon,” a server 102 could also return suggestions that the user search for “harry potter” on the following Nav_Names: “walmart,” “imdb,” “target” and “youtube,” because all of those Nav_Names have “harry potter” as an associated Nav_Item. In other embodiments, the server 102 could trigger such a suggestion only when the user enters more than one Nav_Name matching a Nav_item used in their session. For example, if a user entered the query sequence: 1) “titanic,” 2) “wikipedia,” and 3) “history channel,” a server 102 could return a list of all of the Nav_Names that have “titanic” as a Nav_Item because both “wikipedia′ and “history channel” have “titanic” as a Nav_Item.
In some embodiments, the search database 120 is stored at the server 102. In some embodiments, the search database 120 is a distributed database. In some embodiments, the search database 120 is located on a computer system that is separate and distinct from the server 102. In some embodiments, the distributed database is a multi-dimensional sorted map. For example, the multi-dimensional sorted map may be implemented as a BigTable database.
In some embodiments, the backend 230 is a database management system including a database server 232 that is configured to manage a database 234. For example, the backend 230 receives and processes queries from the server application 222. The queries can be associated with a request made by one of the clients 100 or a server-based application. In response to such a request the server application 222 determines whether it has data that is responsive to the request, submits queries to the backend 230, processes the data returned by the backend server 230 in response to the queries, and returns the processed data as results to the requesting clients 100. After receiving the results, the client application 202 at a respective client 100 displays the result to the user who submitted the original request.
In some embodiments, the database 234 is stored at the server 102. In some embodiments, the database 234 is located on a computer system that is separate and distinct from the server 102. In some embodiments, the database 324 is a distributed database. In some embodiments, the distributed database is a multi-dimensional sorted map. For example, the multi-dimensional sorted map may be implemented as a BigTable database.
For some sites, the list of associated Nav_Item entries can be very large. For example, a very large e-commerce site (such as “amazon.com”) can have as many as one million Nav_Items associated with the site's Nav_Name. For such sites, when sending the site's Nav_Name to the server (e.g., the database 120,) and requesting a list of Nav_Items for that Nav_Name, returning the list of Nav_Items (for example, from the database 120 to the search program 240) can be very slow. To avoid such delay, some embodiments test for the existence of a (Nav_Name, Nav_Item) pair in a map, avoiding the need to retrieve in one operation all Nav_Items that match a specific Nav_Name entry.
In some embodiments, the web server 210 that provides web pages 212 stores lists of items available from various web sites as web site catalogs 236 in the item database 214. The web site catalogs can be provided, upon request, to the server 102. Once requested and received by the server 102, the web site catalogs can be stored in a website catalog file 236 associated in some embodiments with the database 234. In some embodiments, these catalogs can be used by the server to confirm that items of interest to a user are available at web sites associated with the user's navigational searches.
In some embodiments, other information stored for a session 302 includes a time stamp 330 that indicates when the server received a particular query 320 from the user, and the search string 340 associated with that query. In some embodiments, each search query 340 is a logical function F(term1, term2 . . . ) of search terms, term1, term2, . . . , where the logical function F( )) represents a filtering function applied to the search terms, term1, term2, . . . , by the user. In some embodiments, the filtering function is a combination, subset or superset of Boolean operators, such as AND, OR and NOT; and restriction operators that, for example, specify that the search be limited to a particular site or result date range. Optionally, the server application 222 may pre-process a search string 340 to identify search terms associated with a search query 320, and submit these search terms to the search engine 240 for storing in the search database 120.
-
- an
operating system 612 that includes procedures for handling various basic system services and for performing hardware dependent tasks; - a
communication module 614 that is used for connecting theserver 102 to other computers such as theclients 102 and the web servers 210 (FIG. 2 ) via the communication network interfaces 604 (wired or wireless) and one or more communication networks, such as the Internet, other wide area networks, local area networks, metropolitan area networks, and so on; - a
web interface module 220 for receiving (using a receiving module) requests including search queries 104 and the navigation search query 106 (FIG. 1 ) from theclient devices 100 and returning (using a transmitting module) search results in response to the client requests; - a
server application 222, including anexecution module 616 for performing client requests including search queries and navigational search queries targeting at the search engine 240 (FIG. 2 ); a determiningmodule 618 for determining that items referenced by the recent queries received from theclient 100 are associated with the web site identified by the navigational query received from theclient 100; amerging module 620 for merging the search results for the alternate query and the navigational search results to form merged search results to be transmitted theclient 100 for display to the user; anidentification module 622 for identifying each query received from the user or computer with a user or computer identification determined based on information (e.g., cookies) received from theclient 100; asearch engine 240 for receiving requests including search queries from theserver application 222 and interacting withsearch database 120; and thesearch database 120 for storing global search logs 238, recent persession search history 242,Nav_Name list 244 andNav_Item list 246 as described above with respect toFIGS. 3, 4A and 4B and - a
backend 230 including adatabase server 232 for accessing adatabase 234 and further performing as discussed above with respect toFIG. 2 ; and thedatabase 234 for storing various data including web site catalogs 236 (FIG. 2 ).
- an
-
- an
operating system 712 that includes procedures for handling various basic system services and for performing hardware dependent tasks; - a
communication module 714 that is used for connecting theclient device 100 to other servers or computers including theserver 102, andweb servers 210, via one or more communication interfaces 704 (wired or wireless), and one or more communication networks such as the Internet, other wide area networks, local area networks, and metropolitan area networks and so on; - a
user interface module 716 for displaying search results including top ranking navigational search results and alternate query search results, as shown inFIG. 1 , at different displayed positions of thedisplay 706; and - a web browser 718 (e.g., the client application 202), including a web application manager 720 (e.g., the client assistant 204) for managing the user interactions with the
web browser 718. Theweb browser 718 or other application on the client is used in some embodiments to issue the search queries 104, 106 and to display the search results 140, as described with respect toFIG. 1 .
- an
In some embodiments (810), the server 102 receives one or more search queries from a first user. Multiple search queries may be received from the client 100 (FIG. 7 ), where the first user has entered the multiple search queries in an online session (FIG. 1 ). Each of the search queries (e.g., first queries) includes (812) at least one search term. For example, each search query includes a string that can form a logical function of search terms. The logical function may include logical operators such as “AND,” “OR,” “NOT,” and the like.
In some embodiments (814), each of the first search queries is associated with a user identifier (ID). The user ID may be determined by the server 102 based on user or computer information, such as a cookie, associated with the online session of the first user. The user or computer information is sent by the web browser to the server 102. The user or computer information may include a user ID 310 (FIG. 3 ) and/or a session identifier (e.g., session-ID 302, FIG. 3 ).
In some embodiments (816), the one or more first search queries include “recent” queries received by the server 102 from the first user. The recent queries may, for example, be the queries received from the user within a predefined period of time. In some embodiments, the predefined period of time is referenced to a time stamp (e.g., the time stamp 330, FIG. 3 ) associated with the server's receipt of the navigational query. The predefined period may include the last few minutes (such as the last 10-30 minutes) or the last few days, depending on the nature of the search queries. For example, if the search queries include search terms such as names of items, for example, books, then the predefined period may be considered to be the last few minutes or hours. However, when the search term relates to long term planning, for instance, such as a name of a vacation destination (e.g., Hawaii), a longer time period such as the last few days may also be acceptable.
In some embodiments (818), the one more first search queries correspond to the most recent N queries (or a subset thereof) received by the server 102 from the first user, wherein the most recent queries are determined with respect to a time stamp (e.g., the time stamp 330, FIG. 3 ) associated with receipt by the server 102 of the navigational query from the user. In some embodiments, the number N is a predefined number such as 5 or 10. Other measures for determining which of a user's multiple queries are recent queries, or, alternatively, determining session boundaries (where a session includes the recent search queries that can possibly be combined with a subsequent navigational search query) include:
-
- A defined time gap between consecutive queries/clicks (where a short time gap implies that consecutive queries/clicks are related);
- Edit distance between consecutive queries/clicks (where a small edit distance implies that consecutive queries/clicks are related);
- Common words that appear in consecutive queries (where more commonality implies that consecutive queries are more likely to be related); and
- Query topic (using a query classifier, consecutive queries on the same or similar topics are more likely to be related).
These measures can be evaluated by a client employed 100 by the user to conduct searches and then returned to theserver 102, or can be evaluated by theserver 102 in response to information on user search activity returned by theclient 100. In addition, these measures can be used independently, or any number of these measures can be combined, to identify a group of queries that are considered to be recent queries. For example, some embodiments employ for this purpose a combination of the measures as follows: - Use no more than the 4 past queries;
- Ignore any queries older than 30 minutes; and
- Compute the time-gap between queries, which equals the time between the last click on a former query to the entry of a later query. In computing the session boundaries ignore past queries if there is a time gap larger than ten minutes between them and the current query.
In some embodiments (820), the server 102 stores at least a subset of the search queries from the first user in a search database 120. In some embodiments, the server 102, also stores (822) search information derived from other users (e.g., one or more second users). In some embodiments (824), the search information from the other users includes pairs of navigational search terms and associated web site addresses, which are stored in a Nav_Name list 244 (FIGS. 2, 4 ). In some embodiments (824) the search information from the other uses also includes a list of items/search terms associated with particular web sites, which are stored in a Nav_Item list 246, including in some embodiments the web sites included in the Nav_Name list 244. In some embodiments, the server derives the information in the lists 244, 246 from global search logs 238 that include information from searches conducted by multiple users.
In some embodiments (826), the server 102 receives a navigational query from the first user. The navigational query comprises a query that includes an identifier (e.g., the first identifier, such as a name) of a web site, such as the identifier, “google,” corresponding to a first web site, “google.com”.
In some embodiments (830), the determining module 618 (FIG. 6 ) may determine that some of the items referenced by the recent search queries are associated with the web site identified in the received navigational query or, putting it in a different way, that the search terms in some of the one or more first search queries have previously been selected, or clicked through, by another user from previous search results for the navigational query. The determining module 618 may, for example, compare the web site identifier included in a user's navigational query (e.g., web site identifier 410 of FIG. 4 ) and one or more search terms included in user's recent search queries to search pairs stored in the global history file 244 of search pairs to determine whether a match exists (832). Optionally, the determining module 618 may compare the items referenced by the recent queries, including the most recent N queries received from the user, to a stored list of items for the web site to determine whether the items are available from the web site (834). The list of the items for the web site may be obtained from the web sites catalogs 236 (FIGS. 2 and 5 ). When a match exits (i.e., the items are available from the web site), the determining module 618 notifies the execution module 616 of the existing match.
In some embodiments (840), the execution module 616 performs an alternate query that includes one or more of the search terms included in the recent search queries, and the navigational query, both received by the server 102 from the user. In some embodiments (842), the execution module 616 performs the navigational query in parallel with the alternate query to obtain navigational results as well as alternate results.
Subsequently (850), the server 102 transmits the search results for the alternate query and the navigational query to the client 100 for display to the user. In some embodiments, the server 102 merges the search results for the alternate query and the navigational search results to form merged search results (860). Subsequently (862), the merged search results include an arrangement where different portions of the search results are presented with different priority attributes. For example, top ranking navigational search results are presented with a first priority attribute, top ranking alternate query search results are presented with a second priority attribute, and the remaining navigational search results are presented with a third priority attribute. The first priority attribute corresponds to a highest priority level and the third priority attribute corresponds to a lowest priority level. The server 102 transmits the merged results to the client 100 for display to the user (864).
In some embodiments, the top ranking search results (e.g., top ranking navigational search results or top ranking alternate query search results) are defined as the search results that have received historically the top N percent of clicks from various users, where N is a predefined number (e.g., a value between 60-100, such as 90). The remaining navigational search results, for example, are the navigational search results other than the top ranking navigational search results. However, any navigational search result that receives less than L percent of the clicks is not displayed as part of the remaining navigational search results, where L is a predefined number (e.g., less than 20, such as 5). The number of clicks referred to herein corresponds to the historical number of received clicks for each search result as stored in the global search logs.
The client 100 receives multiple queries (e.g., first queries) from the user (902). Each of the queries includes one or more search terms (904). The client 100 transmits the queries to the server 102 (906). Subsequently (908), the client 100 receives a navigational query from the user. The navigational query includes an identifier (e.g., the web site identifier 410 of FIG. 4 , such as a web site name) (910). The client 100 then transmits (912) the navigational query to the server 102. In response, the client 100 receives (914) search results from the server 102. The search results include (916) top ranking navigational search results, in response to the navigational query, and a first top ranking alternate search results in response to an alternate query performed by the server. The alternate query includes the navigational query and the multiple queries.
The user interface module 716 (FIG. 7 ) displays (920) received search results to the user. In some embodiments (922), the user interface module 716 displays different portions of the search results, for example, the top ranking navigational search results, the first top ranking alternate search results, and the remaining navigational search results at different displayed positions in a displayed search result page. The displayed position for each portion of the search results depends on the priority attribute of that portion as presented by the server 102 and described above with respect to FIG. 8 .
In some embodiments (924), the top ranking navigational search results portion that is presented with the first priority attribute indicating the highest priority are displayed at the top of the displayed search result page (display position 142, FIG. 1 ).
In some embodiments (926), the first top ranking alternate search results portion that is presented with the second priority attribute are displayed below the top ranking navigational search (display position 144, FIG. 1 ).
In some embodiments (928), the remaining navigational search results portion that is presented with the third priority attribute are displayed below the first top ranking alternate search results portion (display position 146, FIG. 1 ).
In some embodiments, different displayed positions 142, 144, and 146 are displayed with different display attributes (e.g., color, shading, font size, font type, and the like).
In some embodiments (930), the client 100 may receive a text of the alternate query from the server 102. Subsequently (932), the client 100 may display the text of the alternate query to the user as a suggested equivalent search query. Alternatively, the client 100 displays (934) the text of the alternate query to the user and detects (936) a selection of the displayed text of the alternate query from the user. The user may select the displayed text of the alternate query by, for example, a click or mouse over action, which is detected by the operating system 712 of the client 100 (FIG. 7 ). In some embodiments (938), the client 100 transmits the alternate search query instead of the navigational search query to the server 102 (FIG. 6 ). Subsequently (940), the client 100, in response to transmitting the alternate search query, receives search results from the server 102. The search results include a second top ranking alternate search results in response to the transmitted alternate query (942). The client 100, subsequently, displays the search results in different displayed positions as discussed above (922-928).
Some embodiments can employ additional techniques for presenting/displaying the prediction of a Nav_Item that a user is looking for (i.e., beyond injecting the results of an alternative query into search results presented to the user as described above). These additional techniques include:
-
- Presenting the predicted Nav_Item results when suggesting queries (e.g., in Google Suggest, as the user enters the query);
- Instead of displaying the alternate query, showing it to the user as a link; and
- Displaying the results of the alternative query in a separate area of the screen from the conventional search results. Possible alternative areas of the screen that can be employed for this purpose include:
- At the bottom of the screen;
- In a side bar of the screen;
- In a different tab of the browser (where selecting the tab will cause the results for the alternative Nav_Item search to be displayed); and
- In a user interface dialog that pops up when the user hovers above some text.
In this way, embodiments described herein save a user's time and effort by predicting searches that the user is likely to make based on a history of the user's recent searches (including general searches—e.g., for items that can be purchased from online retailers—and a navigational query) and, in some instances, global search information from which the server is able to identify navigational queries entered by the user and to determine whether the items recently searched for by the user are available from the site corresponding to the navigational search. Also, because the server performs multiple searches nearly simultaneously, including the navigational query input by the user and an alternate search based on recent search terms (restricted to the site corresponding to the navigational query), the user is able to either select from displayed, merged results a result associated with the recent navigational query or one of the alternate results, therefore saving time that would otherwise be required to re-enter search terms on a particular web site.
The foregoing description, for purpose of explanation, has been described with reference to specific embodiments. However, the illustrative discussions above are not intended to be exhaustive or to limit the invention to the precise forms disclosed. Many modifications and variations are possible in view of the above teachings. The embodiments were chosen and described in order to best explain the principles of the invention and its practical applications, to thereby enable others skilled in the art to best utilize the invention and various embodiments with various modifications as are suited to the particular use contemplated.
Claims (26)
1. A method comprising:
at a server having one or more processors and memory storing programs executable by the processors,
receiving from a first user a query for one or more items of interest, the query including at least one search term;
obtaining and storing results responsive to the query;
after obtaining and storing the results responsive to the query:
receiving from the first user a separate navigational query for a first website, wherein the navigational query includes a first identifier of the first web site, and wherein the at least one search term is absent from the navigational query; and
in response to receiving the navigational query, when the query is a recent query, obtaining the at least one search term from the recent query and executing an alternate query of the first web site to yield alternate search results responsive to the alternate query within a domain of the first website, the alternate query including the at least one search term and the navigational query; and
formatting for display and transmitting to the first user the alternate search results, at least one top ranking navigational search result, and at least one remaining navigational search result, wherein the at least one top ranking navigational search result, the alternate search results, and the at least one remaining navigational search result are associated with a priority attribute that indicates a priority level for display,
wherein a first priority attribute is associated with the at least one top ranking navigational search result and indicates that the at least one top ranking navigational search result is to be displayed above other search results displayed on a search result page, a second priority attribute is associated with the alternate query search result and indicates that the alternate query search result is to be displayed below the at least one top ranking navigational search result in the search result page, and a third priority attribute is associated with the at least one remaining navigational search result and indicates that the at least one remaining navigational search result is to be displayed below the alternate query search result in the search result page, the first priority attribute having a highest priority level and the third priority attribute having a lowest priority level.
2. The method of claim 1 , further comprising:
obtaining search information for a plurality of second users, the search information including a plurality of search pairs, each search pair including a second identifier of a second web site and an identifier of an item associated with the second web site,
comparing the first identifier of the first web site and the at least one search term with the stored search pairs to determine that a match exits.
3. The method of claim 1 , further comprising:
performing the navigational query to obtain navigational search results;
merging the search results for the alternate query and the navigational search results to form merged search results; and
transmitting the merged search results to the client for display to the first user.
4. The method of claim 3 , wherein the merged search results include an arrangement where the at least one top ranking navigational search result is presented with the first priority attribute, the alternate query search result is presented with the second priority attribute, and the at least one remaining navigational search result is presented with the third priority attribute.
5. The method of claim 1 , further comprising,
prior to performing the alternative query,
confirming that a second user has previously selected results associated with the at least one search term from the recent query, wherein the previously selected results are associated with the first website.
6. The method of claim 1 , wherein the search results for the alternate query further include a search result in the search results for the recent query.
7. The method of claim 1 , wherein the recent query comprises a first recent query, the method further comprising receiving a plurality of recent queries, including the first recent query, from the first user within a predefined period of time.
8. The method of claim 1 , further comprising receiving a plurality of the recent queries included in most recent N queries received from the user, wherein N is a predefined number.
9. The method of claim 1 , further comprising, prior to performing the alternate query, comparing the at least one search term with a list of items for the first web site to determine that items referenced by the search terms are associated with the first web site.
10. The method of claim 1 , wherein the recent query and the navigational query are queries received within a same browsing session.
11. The method of claim 1 , wherein the one or more items of interest are goods or services.
12. The method of claim 1 , wherein the at least one search term is not present in the navigational query.
13. The method of claim 11 , wherein the first website is an e-commerce web site, and the one or more goods or services can be purchased or sold at the first web site.
14. The method of claim 1 , wherein the navigational query is based on text received from the user.
15. The method of claim 1 , wherein:
the at least one search term corresponds to a most recent query, wherein the most recent query is determined with respect to a time stamp associated with a server of the navigational query from the user.
16. The method of claim 1 , wherein the at least one top ranking navigational search result, the alternate query search result, and the at least one remaining navigational search result are formatted for concurrent display on the search result page.
17. A system for providing search results to a first user of a client, the system comprising:
one or more processors;
memory coupled to the processor, the memory storing program modules executable by the processors, the program modules including:
a receiving module configured to receive a first query for one or more items of interest and a navigational query for a first website, wherein the first query includes at least one search term, and wherein the navigational query includes a first identifier of the first web site, and the at least one search term is absent from the navigational query;
an execution module configured to:
obtain and store results responsive to the first query prior to receiving the navigation query, wherein the first query is a recent query of the navigation query,
after obtaining and storing the results responsive to the recent query, in response to receiving the navigational query, obtain the at least one search term from the recent query, and
execute an alternate query of the first web site to yield alternate search results responsive to the alternate query within a domain of the first website, the alternate query including the at least one search term and the navigational query; and
a transmitting module configured to transmit to the first user the alternate search results, at least one top ranking navigational search result, and at least one remaining navigational search result for display, wherein the at least one top ranking navigational search result, the alternate search results, and the at least one remaining navigational search result are associated with a priority attribute that indicates a priority level for display,
wherein a first priority attribute is associated with the at least one top ranking navigational search result and indicates that the at least one top ranking navigational search result is to be displayed above other search results displayed on a search result page, a second priority attribute is associated with the alternate query search result and indicates that the alternate query search result is to be displayed below the at least one top ranking navigational search result in the search result page, and a third priority attribute is associated with the at least one remaining navigational search result and indicates that the at least one remaining navigational search result is to be displayed below the alternate query search result in the search result page, the first priority attribute having a highest priority level and the third priority attribute having a lowest priority level.
18. The system of claim 17 , further comprising:
a second database configured to obtain search information for a plurality of second users, the search information including a plurality of search pairs, each search pair including a second identifier of a second web site and an identifier of an item associated with the second web site; and
a determining module configured to compare the first identifier of the first web site and the at least one search term with the stored search pairs to determine that a match exits and notify the execution module of the existing match.
19. The system of claim 17 , wherein the determining module is further configured to:
compare the at least one search term with a stored list of items for the first web site; and
when there is a match, notify the execution module of the existing match.
20. The system of claim 17 , wherein the execution module is further configured to:
perform the navigational query in parallel with the alternate query to receive navigational search results; and
receive the navigational search results for the navigational query.
21. The system of claim 17 , further comprising:
a merging module configured to merge the search results for the alternate query and the navigational search results to form merged search results;
wherein the transmitting module is further configured to transmit the merged search results to the client for display to the first user.
22. The system of claim 21 , wherein the merging module is further configured to arrange the merged search results such that
the at least one top ranking navigational search result is presented with the first priority attribute,
the alternate query search result is presented with the second priority attribute, and
the at least one remaining navigational search result is presented with the third priority attribute.
23. The system of claim 17 , wherein the search results for the alternate query further include a search result in the search results for the recent query.
24. The system of claim 17 , further comprising:
a determining module configured to confirm, prior to execution of the alternative query by the execution module, that a second user has previously selected the items when they have been returned in prior search results for the navigational query.
25. The system of claim 17 , wherein:
the at least one search term corresponds to a most recent query, wherein the most recent query is determined with respect to a time stamp associated with a server of the navigational query from the user.
26. The system of claim 17 , wherein the at least one top ranking navigational search result, the alternate query search result, and the at least one remaining navigational search result are formatted for concurrent display on the search result page.
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US12/844,744 US10061850B1 (en) | 2010-07-27 | 2010-07-27 | Using recent queries for inserting relevant search results for navigational queries |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US12/844,744 US10061850B1 (en) | 2010-07-27 | 2010-07-27 | Using recent queries for inserting relevant search results for navigational queries |
Publications (1)
Publication Number | Publication Date |
---|---|
US10061850B1 true US10061850B1 (en) | 2018-08-28 |
Family
ID=63208134
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US12/844,744 Active US10061850B1 (en) | 2010-07-27 | 2010-07-27 | Using recent queries for inserting relevant search results for navigational queries |
Country Status (1)
Country | Link |
---|---|
US (1) | US10061850B1 (en) |
Cited By (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20170249684A1 (en) * | 2013-09-27 | 2017-08-31 | Ebay Inc. | Systems and methods for search term prioritization |
Citations (17)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20020035611A1 (en) * | 2000-01-14 | 2002-03-21 | Dooley Thomas P. | System and method for providing an information network on the internet |
US20020059258A1 (en) * | 1999-01-21 | 2002-05-16 | James F. Kirkpatrick | Method and apparatus for retrieving and displaying consumer interest data from the internet |
US20070198489A1 (en) * | 2006-02-15 | 2007-08-23 | Hon Hai Precision Industry Co., Ltd. | System and method for searching web sites for data |
US20070203890A1 (en) * | 2006-02-28 | 2007-08-30 | Microsoft Corporation | Serving cached query results based on a query portion |
US20070244900A1 (en) * | 2005-02-22 | 2007-10-18 | Kevin Hopkins | Internet-based search system and method of use |
US20090119263A1 (en) * | 2007-11-05 | 2009-05-07 | Chacha Search, Inc. | Method and system of promoting human-assisted search |
US20090187515A1 (en) * | 2008-01-17 | 2009-07-23 | Microsoft Corporation | Query suggestion generation |
US20090240569A1 (en) * | 2005-09-14 | 2009-09-24 | Jorey Ramer | Syndication of a behavioral profile using a monetization platform |
US20090327224A1 (en) * | 2008-06-26 | 2009-12-31 | Microsoft Corporation | Automatic Classification of Search Engine Quality |
US7657515B1 (en) * | 2007-03-30 | 2010-02-02 | Alexa Internet | High efficiency document search |
US20100131902A1 (en) * | 2008-11-26 | 2010-05-27 | Yahoo! Inc. | Navigation assistance for search engines |
US20100153427A1 (en) * | 2008-12-11 | 2010-06-17 | Microsoft Corporation | Providing recent history with search results |
US20100306241A1 (en) * | 2009-06-01 | 2010-12-02 | Click Group, Inc. | Intelligent feed system for creating a representation of a web page for a search engine |
US20100332508A1 (en) * | 2009-06-30 | 2010-12-30 | General Electric Company | Methods and systems for extracting and analyzing online discussions |
US20110022582A1 (en) * | 2009-07-22 | 2011-01-27 | Microsoft Corporation | Indexing of Partitioned External Data Sources |
US20110047149A1 (en) * | 2009-08-21 | 2011-02-24 | Vaeaenaenen Mikko | Method and means for data searching and language translation |
US20110060717A1 (en) * | 2009-09-08 | 2011-03-10 | George Forman | Systems and methods for improving web site user experience |
-
2010
- 2010-07-27 US US12/844,744 patent/US10061850B1/en active Active
Patent Citations (17)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20020059258A1 (en) * | 1999-01-21 | 2002-05-16 | James F. Kirkpatrick | Method and apparatus for retrieving and displaying consumer interest data from the internet |
US20020035611A1 (en) * | 2000-01-14 | 2002-03-21 | Dooley Thomas P. | System and method for providing an information network on the internet |
US20070244900A1 (en) * | 2005-02-22 | 2007-10-18 | Kevin Hopkins | Internet-based search system and method of use |
US20090240569A1 (en) * | 2005-09-14 | 2009-09-24 | Jorey Ramer | Syndication of a behavioral profile using a monetization platform |
US20070198489A1 (en) * | 2006-02-15 | 2007-08-23 | Hon Hai Precision Industry Co., Ltd. | System and method for searching web sites for data |
US20070203890A1 (en) * | 2006-02-28 | 2007-08-30 | Microsoft Corporation | Serving cached query results based on a query portion |
US7657515B1 (en) * | 2007-03-30 | 2010-02-02 | Alexa Internet | High efficiency document search |
US20090119263A1 (en) * | 2007-11-05 | 2009-05-07 | Chacha Search, Inc. | Method and system of promoting human-assisted search |
US20090187515A1 (en) * | 2008-01-17 | 2009-07-23 | Microsoft Corporation | Query suggestion generation |
US20090327224A1 (en) * | 2008-06-26 | 2009-12-31 | Microsoft Corporation | Automatic Classification of Search Engine Quality |
US20100131902A1 (en) * | 2008-11-26 | 2010-05-27 | Yahoo! Inc. | Navigation assistance for search engines |
US20100153427A1 (en) * | 2008-12-11 | 2010-06-17 | Microsoft Corporation | Providing recent history with search results |
US20100306241A1 (en) * | 2009-06-01 | 2010-12-02 | Click Group, Inc. | Intelligent feed system for creating a representation of a web page for a search engine |
US20100332508A1 (en) * | 2009-06-30 | 2010-12-30 | General Electric Company | Methods and systems for extracting and analyzing online discussions |
US20110022582A1 (en) * | 2009-07-22 | 2011-01-27 | Microsoft Corporation | Indexing of Partitioned External Data Sources |
US20110047149A1 (en) * | 2009-08-21 | 2011-02-24 | Vaeaenaenen Mikko | Method and means for data searching and language translation |
US20110060717A1 (en) * | 2009-09-08 | 2011-03-10 | George Forman | Systems and methods for improving web site user experience |
Cited By (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20170249684A1 (en) * | 2013-09-27 | 2017-08-31 | Ebay Inc. | Systems and methods for search term prioritization |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US11194872B2 (en) | Dynamic inference graph | |
US9811566B1 (en) | Modifying search result ranking based on implicit user feedback | |
US9684720B2 (en) | Lateral search | |
US6718365B1 (en) | Method, system, and program for ordering search results using an importance weighting | |
KR101872547B1 (en) | Presenting actions and providers associated with entities | |
US7949647B2 (en) | Navigation assistance for search engines | |
US8392435B1 (en) | Query suggestions for a document based on user history | |
US10726083B2 (en) | Search query transformations | |
US9342607B2 (en) | Dynamic inference graph | |
US10007705B2 (en) | Display of boosted slashtag results | |
US20120271805A1 (en) | Predictively suggesting websites | |
US9396188B2 (en) | Assigning tags to digital content | |
US20090043749A1 (en) | Extracting query intent from query logs | |
US20140108445A1 (en) | System and Method for Personalizing Query Suggestions Based on User Interest Profile | |
US9411895B2 (en) | Personalized deeplinks for search results | |
KR20070007131A (en) | System and method for responding to search requests in a computer network | |
US20150169708A1 (en) | Providing recently selected images | |
US20170075899A1 (en) | Utilizing keystroke logging to determine items for presentation | |
US20130031075A1 (en) | Action-based deeplinks for search results | |
US20140156623A1 (en) | Generating and displaying tasks | |
US10061850B1 (en) | Using recent queries for inserting relevant search results for navigational queries | |
WO2016046650A1 (en) | Method of and server for processing a message to determine intent | |
Mihai | The Usage of Web Mining in E-commerce |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 4 |
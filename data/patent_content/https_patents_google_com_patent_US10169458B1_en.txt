US10169458B1 - Using a query log from a two-box interface to identify standalone locations - Google Patents
Using a query log from a two-box interface to identify standalone locations Download PDFInfo
- Publication number
- US10169458B1 US10169458B1 US14/331,138 US201414331138A US10169458B1 US 10169458 B1 US10169458 B1 US 10169458B1 US 201414331138 A US201414331138 A US 201414331138A US 10169458 B1 US10169458 B1 US 10169458B1
- Authority
- US
- United States
- Prior art keywords
- location
- term
- determining
- standalone
- score
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active, expires
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/951—Indexing; Web crawling techniques
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/29—Geographical information databases
-
- G06F17/30864—
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/30—Information retrieval; Database structures therefor; File system structures therefor of unstructured textual data
- G06F16/33—Querying
- G06F16/3331—Query processing
- G06F16/3332—Query translation
- G06F16/3334—Selection or weighting of terms from queries, including natural language queries
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/953—Querying, e.g. by the use of web search engines
- G06F16/9537—Spatial or temporal dependent retrieval, e.g. spatiotemporal queries
-
- G06F17/30663—
-
- G06F17/3087—
Definitions
- the present invention relates generally to search engines. More specifically, the present invention relates to techniques for identifying “standalone locations,” that can be unambiguously identified by the names for the locations alone.
- Standalone locations are the locations that can be unambiguously identified by their names alone, either within a specific geographic region or globally.
- the name “San Francisco” usually refers to “San Francisco, Calif., Unites States” even without additional location specifiers like “California”, and “United States” (so it is standalone location).
- the name “Washington” as a location could refer to the “City of Washington” in the state of Missouri, “Washington, D.C.” or “Washington State”, so it is not strictly a standalone location in the United States.
- a large number of locations are not standalone because they do not have names that uniquely identify them; an extreme case is the city of “Orange” in the state of Texas: just given its name, most people do not think it is a location.
- the location blacklist can include terms such as: “Orlando Bloom,” wherein the component “Orlando” is typically related to a location but the entire query term “Orlando Bloom” is the name of a person; and “Victoria's Secret,” wherein the component “Victoria” can be a location but the entire query term “Victoria's Secret” is not.
- One embodiment of the present invention provides a system that automatically identifies a standalone location, wherein a standalone location is a location which can be unambiguously identified by a name for the location alone.
- the system receives inputs from an interface for a search engine, wherein the interface includes two or more boxes, including a non-location box for receiving terms specifying what a user is searching for in a query, and a location box for receiving terms specifying a geographic location associated with the query.
- the system receives a term to be evaluated.
- the system uses the inputs to determine: a non-location score for the term which indicates how frequently the term appears in the non-location box; and a location score for the term which indicates how frequently the term appears in the location box.
- the system determines whether the term is a standalone location based on the non-location score and the location score for the term.
- the system receives the term from a list of known locations.
- the system determines that the term t is a standalone location if P L (t) is greater than a standalone threshold.
- the system receives a query comprised of terms from a user. If a term in the query is the name for a standalone location, the system uses location information for the standalone location while producing and/or ranking search results for the query. Next, the system presents the search results to the user.
- the system determines whether the term belongs in a blacklist for locations because the term contains a location component but the term is not actually related to a location.
- the system determines whether the term belongs in the blacklist for locations based on the non-location score and the location score for the term.
- the term is in one of the following languages: Chinese; Japanese; Korean; or English.
- Another embodiment of the present invention provides a system that automatically identifies a term that belongs in a blacklist for locations because the term contains a component which appears to be related to a location but the term is not actually related to the location.
- the system receives inputs from an interface for a search engine, wherein the interface includes two or more boxes, including a non-location box for receiving terms specifying what a user is searching for in a query, and a location box for receiving terms specifying a geographic location associated with the query.
- the system receives a term to be evaluated.
- the system uses the inputs to determine: a non-location score for the term which indicates how frequently the term appears in the non-location box; and a location score for the term which indicates how frequently the term appears in the location box.
- the system next determines whether the term belongs in a blacklist for locations based on the non-location score and the location score for the term.
- the system determines that the term t belongs in a blacklist for locations if P L (t) is less than a blacklist threshold.
- the system while determining whether the term t belongs in the blacklist for locations, the system sends the term t as a query to a location extraction server (LES) to determine whether the term t gets triggered as a location query. If so, and if P L (t) is less than a blacklist threshold, the system then determines that the term t belongs in the blacklist for locations.
- LES location extraction server
- the system receives a query comprised of terms from a user. If a term in the query appears in the blacklist, the system does not use the term as a source of location information while producing and/or ranking search results for the query. Next, the system presents the search results to the user.
- the term is in one of the following languages: Chinese; Japanese; Korean; or English.
- FIG. 1 illustrates the crawling, ranking and searching processes for a search engine in accordance with an embodiment of the present invention.
- FIG. 2 illustrates a two-box query interface in accordance with an embodiment of the present invention.
- FIG. 3 illustrates an exemplary query log summarizing the number of times each term is used as a location and as a non-location in the two-box query interface in accordance with an embodiment of the present invention.
- FIG. 4 presents a flow chart illustrating the process of determining whether a term is a standalone location or belongs in a location blacklist in accordance with an embodiment of the present invention.
- FIG. 5 presents a flowchart illustrating the process of using a list of standalone locations to process a query in accordance with an embodiment of the present invention.
- a computer-readable storage medium which may be any device or medium that can store code and/or data for use by a computer system.
- the system determines if a specific term represents a standalone location by determining both a location score and a non-location score for the term. Specifically, the system determines the location score and the non-location score for the term based on user inputs received through a query interface.
- This query interface includes at least two input boxes, which include a non-location box for receiving terms specifying what a user is searching for in a query, and a location box for receiving terms specifying a geographic location associated with the query.
- the system constructs a query log for each term wherein the query log summarizes the numbers of times that term appears in the location box and the non-location box.
- the system computes the location score and non-location score based on the query log for the term.
- the system uses the location score and the non-location score for a term to determine if the term belongs in a blacklist for locations.
- FIG. 1 illustrates the crawling, ranking and searching processes for a search engine in accordance with an embodiment of the present invention.
- a web crawler 104 crawls or otherwise searches through websites on web 102 to select web pages to be stored in indexed form in data center 108 .
- the selected web pages are then compressed, indexed and ranked in module 105 before being stored in data center 108 .
- a search engine 112 receives a query 113 from a user 111 through a Web browser 114 .
- This query 113 specifies a number of terms to be searched for in the set of documents.
- search engine 112 uses search terms specified in the query as well as synonyms for search terms to identify highly-ranked documents that satisfy the query.
- Search engine 112 then returns a response 115 through Web browser 114 , wherein the response 115 contains matching pages along with ranking information and references to the identified documents.
- search engine 112 uses a list of standalone locations 126 to identify query terms that specify a location. This location information can be used to improve the searching process by narrowing the search to pages that are associated with the specific location. This makes the search results more relevant to a user who is associated with the location.
- search engine 112 can use a location blacklist 128 to identify query terms that contain a component which appears to be related to a location but the term is not actually related to that location. If such a term is identified in query 113 , search engine 112 filters out returned pages that are associated with that location so that these pages are not included in response 115 .
- the list of standalone locations and the location blacklist are automatically generated by a standalone location/blacklist generator 120 .
- standalone location/blacklist generator 120 sends query terms, such as query term 122 , to search engine 112 and receives responses from search engine 112 .
- Standalone location/blacklist generator 120 also receives a query log 124 from each engine 112 .
- Standalone location/blacklist generator 120 subsequently determines if query term 122 is a standalone location or if query term 122 belongs in the location blacklist based on the responses and query log 124 . This automatic process is described in more detail below with reference to FIGS. 2, 3, and 4 .
- FIG. 2 illustrates a two-box query interface 200 in accordance with an embodiment of the present invention. More specifically, interface 200 comprises a non-location box 202 , which receives terms that describe “what” a user is searching for in a query, and a location box 204 , which receives terms that specify a geographic location associated with the query. For example, if a user is looking for pizza in New York, instead of entering the entire query “pizza new york” in a single query box, the user enters term “pizza” in non-location box 202 , and separately enters term “new york” in location box 204 . In another example, if a user is looking for movie theaters in Pittsburgh, the user enters the term “movie theater” in non-location box 202 , and separately enters the term “Pittsburgh” in location box 204 .
- a query interface can also include more than two boxes.
- FIG. 3 illustrates an exemplary query log 300 summarizing the number of times each term is used as a location and as a non-location in two-box query interface 200 in accordance with an embodiment of the present invention.
- each reoccurring term t can be summarized in query log 300 to obtain the following two numbers:
- FIG. 4 presents a flow chart illustrating the process of determining whether a term is a standalone location or belongs in a location blacklist in accordance with an embodiment of the present invention.
- the system receives a term t to be evaluated (step 402 ).
- term t can be a query term received through a query interface.
- term t can be received from an automatically generated list of locations.
- term t can be in different languages, such as: Chinese, Japanese, Korean, and English.
- the system then obtains a location count L and a non-location count N for term t based on user inputs received through a two-box interface as described above (step 404 ).
- the system obtains numbers L and N for term t from a query log which summaries the input counts for the term in the location box and the non-location box.
- the system determines a location score S L (t) based on L, which indicates how frequently term t appears in the location box (step 406 ).
- the system additionally determines a non-location score S N (t) based on N, which indicates how frequently term t appears in the non-location box (step 406 ).
- the system computes location score S L (t) and non-location score S N (t) according to:
- the system next computes a normalized location indicator P L (t) based on location score S L (t) and non-Location score S N (t) (step 408 ).
- the system determines whether term t is a standalone location by comparing P L (t) with a standalone threshold—TH_standalone (step 410 ).
- the system determines that term t is a standalone location (step 412 ). Otherwise, the system determines that term tis not a standalone location (step 414 ).
- the system assembles a standalone location list which includes those terms that have been determined to be standalone locations. If the standalone location list has already been created, each newly determined standalone location can be appended to the list.
- the system next determines whether term t belongs in a location blacklist by comparing normalized location indicator P L (t) with a blacklist threshold—TH_blacklist (step 416 ).
- the system determines that term t belongs in the location blacklist (step 418 ). Otherwise, the system determines that term t does not belong in the location blacklist (step 420 ).
- condition P L (t) ⁇ TH_blacklist is a necessary but not a sufficient condition to determine that term t belongs in the location blacklist.
- the system sends term t to a location extraction server (LES) to determine whether term t gets triggered as a location query. If so, the system determines that t belongs in the location blacklist. Otherwise, the system determines that term t does not belong in the location blacklist.
- LES location extraction server
- the LES is typically triggered when an input term contains a component which appears to be related to a location, even if that term is not actually related to the location. For example, term “Orlando Bloom” will cause the LES to extract “Orlando” from the term, even thought the term is not a location. However, a term that does not contain any location typically does not trigger the LES. Consequently, the system can use the LES to filter out terms that have small P L (t) values but do not contain a location. This prevents the system from including too many terms in the location blacklist.
- the two thresholds are chosen so that they satisfy the condition 0 ⁇ TH_blacklist ⁇ TH_standalone ⁇ 1. Moreover, these threshold values can be dynamically adjusted according to frequency data in the query log.
- FIG. 5 presents a flowchart illustrating the process of using a list of standalone locations to process a query in accordance with an embodiment of the present invention.
- the system receives a query which comprises search terms from a user (step 502 ).
- a search term in the query is the name for a standalone location (which does not appear in the location blacklist)
- the system uses location information for the standalone location while producing and/or ranking search results for the query (step 504 ).
- these search results can include pages associated with search terms in the query.
- the system presents the search results to the user (step 506 ).
Abstract
One embodiment of the present invention provides a system that automatically identifies a standalone location, wherein a standalone location is a location which can be unambiguously identified by a name for the location alone. During operation, the system receives inputs from an interface for a search engine, wherein the interface includes two or more boxes, including a non-location box for receiving terms specifying what a user is searching for in a query, and a location box for receiving terms specifying a geographic location associated with the query. Next, the system receives a term to be evaluated. The system then uses the inputs to determine: a non-location score for the term which indicates how frequently the term appears in the non-location box; and a location score for the term which indicates how frequently the term appears in the location box. Next, the system determines whether the term is a standalone location based on the non-location score and the location score for the term.
Description
This application is a continuation of U.S. patent application Ser. No. 11/788,722, filed on Apr. 20, 2007, and entitled “Using A Query Log From A Two-Box Interface To Identify Standalone Locations,” the contents of which are incorporated by reference herein, and the subject matter of which is related to the subject matter in U.S. patent application Ser. No. 11/607,568, which issued on Jul. 9, 2013 as U.S. Patent No. 8,484,222, by inventors Xin Li, Jiang Qian, Daniel T. Egnor and Lawrence E. Greenfield, entitled, “Method and Apparatus for Identifying Standalone Locations,” and filing date 01 Dec. 2006.
The present invention relates generally to search engines. More specifically, the present invention relates to techniques for identifying “standalone locations,” that can be unambiguously identified by the names for the locations alone.
Standalone locations are the locations that can be unambiguously identified by their names alone, either within a specific geographic region or globally. For example, the name “San Francisco” usually refers to “San Francisco, Calif., Unites States” even without additional location specifiers like “California”, and “United States” (so it is standalone location). However, the name “Washington” as a location could refer to the “City of Washington” in the state of Missouri, “Washington, D.C.” or “Washington State”, so it is not strictly a standalone location in the United States. Moreover, a large number of locations are not standalone because they do not have names that uniquely identify them; an extreme case is the city of “Orange” in the state of Texas: just given its name, most people do not think it is a location.
The ability to identify standalone locations within a query has a huge impact on quality of a search results generated by the query. Without such knowledge, the query processor cannot tell the difference between an obvious location query such as “new york pizza” (new york is a location) and an obvious non-location query such as “orange juice” (orange could be a location, but not here).
Unfortunately, some query terms contain a component which appears to be related to a location, but the entire query term is not actually related to the location. It is advantageous to place such terms in a “location blacklist.” For example, the location blacklist can include terms such as: “Orlando Bloom,” wherein the component “Orlando” is typically related to a location but the entire query term “Orlando Bloom” is the name of a person; and “Victoria's Secret,” wherein the component “Victoria” can be a location but the entire query term “Victoria's Secret” is not.
Hence, what is needed is a method and an apparatus for automatically identifying standalone locations and terms that belong in a location blacklist without the above-described problems.
One embodiment of the present invention provides a system that automatically identifies a standalone location, wherein a standalone location is a location which can be unambiguously identified by a name for the location alone. During operation, the system receives inputs from an interface for a search engine, wherein the interface includes two or more boxes, including a non-location box for receiving terms specifying what a user is searching for in a query, and a location box for receiving terms specifying a geographic location associated with the query. Next, the system receives a term to be evaluated. The system then uses the inputs to determine: a non-location score for the term which indicates how frequently the term appears in the non-location box; and a location score for the term which indicates how frequently the term appears in the location box. Next, the system determines whether the term is a standalone location based on the non-location score and the location score for the term.
In a variation on this embodiment, the system receives the term from a list of known locations.
In a variation on this embodiment, the system determines the number of times, N, that the term t appears in the non-location box and computes the non-location score SN(t)=log(N+1) for the term t. The system also determines the number of times, L, that the term t appears in the location box and computes the location score SL(t)=log(L+1) for the term t. The system then computes a normalized location indicator PL(t)=SL(t)/(SL(t)+SN(t)). Next, the system determines that the term t is a standalone location if PL(t) is greater than a standalone threshold.
In a variation on this embodiment, the system receives a query comprised of terms from a user. If a term in the query is the name for a standalone location, the system uses location information for the standalone location while producing and/or ranking search results for the query. Next, the system presents the search results to the user.
In a variation on this embodiment, the system determines whether the term belongs in a blacklist for locations because the term contains a location component but the term is not actually related to a location.
In a further variation on this embodiment, the system determines whether the term belongs in the blacklist for locations based on the non-location score and the location score for the term.
In a variation on this embodiment, the term is in one of the following languages: Chinese; Japanese; Korean; or English.
Another embodiment of the present invention provides a system that automatically identifies a term that belongs in a blacklist for locations because the term contains a component which appears to be related to a location but the term is not actually related to the location. During operation, the system receives inputs from an interface for a search engine, wherein the interface includes two or more boxes, including a non-location box for receiving terms specifying what a user is searching for in a query, and a location box for receiving terms specifying a geographic location associated with the query. The system then receives a term to be evaluated. Next, the system uses the inputs to determine: a non-location score for the term which indicates how frequently the term appears in the non-location box; and a location score for the term which indicates how frequently the term appears in the location box. The system next determines whether the term belongs in a blacklist for locations based on the non-location score and the location score for the term.
In a variation on this embodiment, the system determines the number of times, N, that the term t appears in the non-location box and computes the non-location score SN(t)=log(N+1) for the term t. The system also determines the number of times, L, that the term t appears in the location box and computes the location score SL(t)=log(L+1) for the term t. The system then computes a normalized location indicator PL(t)=SL(t)/(SL(t)+SN(t)). Next, the system determines that the term t belongs in a blacklist for locations if PL(t) is less than a blacklist threshold.
In a further variation on this embodiment, while determining whether the term t belongs in the blacklist for locations, the system sends the term t as a query to a location extraction server (LES) to determine whether the term t gets triggered as a location query. If so, and if PL(t) is less than a blacklist threshold, the system then determines that the term t belongs in the blacklist for locations.
In a variation on this embodiment, the system receives a query comprised of terms from a user. If a term in the query appears in the blacklist, the system does not use the term as a source of location information while producing and/or ranking search results for the query. Next, the system presents the search results to the user.
In a variation on this embodiment, the term is in one of the following languages: Chinese; Japanese; Korean; or English.
The following description is presented to enable any person skilled in the art to make and use the disclosed embodiments, and is provided in the context of a particular application and its requirements. Various modifications to the disclosed embodiments will be readily apparent to those skilled in the art, and the general principles defined herein may be applied to other embodiments and applications without departing from the spirit and scope of the present description. Thus, the present description is not intended to be limited to the embodiments shown, but is to be accorded the widest scope consistent with the principles and features disclosed herein.
The data structures and code described in this detailed description are typically stored on a computer-readable storage medium, which may be any device or medium that can store code and/or data for use by a computer system. This includes, but is not limited to, volatile memory, non-volatile memory, magnetic and optical storage devices such as disk drives, magnetic tape, CDs (compact discs), DVDs (digital versatile discs or digital video discs), or other media capable of storing computer readable media now known or later developed.
In one embodiment of the present invention, the system determines if a specific term represents a standalone location by determining both a location score and a non-location score for the term. Specifically, the system determines the location score and the non-location score for the term based on user inputs received through a query interface. This query interface includes at least two input boxes, which include a non-location box for receiving terms specifying what a user is searching for in a query, and a location box for receiving terms specifying a geographic location associated with the query. The system then constructs a query log for each term wherein the query log summarizes the numbers of times that term appears in the location box and the non-location box. Next, the system computes the location score and non-location score based on the query log for the term.
In one embodiment of the present invention, the system uses the location score and the non-location score for a term to determine if the term belongs in a blacklist for locations.
Techniques for automatically identifying a term as a standalone location or as a term which belongs in a location blacklist are discussed in more detail below, but first we describe generally how a search engine operates.
During a subsequent search process, a search engine 112 receives a query 113 from a user 111 through a Web browser 114. This query 113 specifies a number of terms to be searched for in the set of documents. In response to query 113, search engine 112 uses search terms specified in the query as well as synonyms for search terms to identify highly-ranked documents that satisfy the query. Search engine 112 then returns a response 115 through Web browser 114, wherein the response 115 contains matching pages along with ranking information and references to the identified documents.
During the searching process, search engine 112 uses a list of standalone locations 126 to identify query terms that specify a location. This location information can be used to improve the searching process by narrowing the search to pages that are associated with the specific location. This makes the search results more relevant to a user who is associated with the location.
Additionally, search engine 112 can use a location blacklist 128 to identify query terms that contain a component which appears to be related to a location but the term is not actually related to that location. If such a term is identified in query 113, search engine 112 filters out returned pages that are associated with that location so that these pages are not included in response 115.
In one embodiment of the present invention, the list of standalone locations and the location blacklist are automatically generated by a standalone location/blacklist generator 120. During operation, standalone location/blacklist generator 120 sends query terms, such as query term 122, to search engine 112 and receives responses from search engine 112. Standalone location/blacklist generator 120 also receives a query log 124 from each engine 112. Standalone location/blacklist generator 120 subsequently determines if query term 122 is a standalone location or if query term 122 belongs in the location blacklist based on the responses and query log 124. This automatic process is described in more detail below with reference to FIGS. 2, 3, and 4 .
Note that although we describe a two-box interface 200 for receiving location component and non-location component of a query in separated boxes, a query interface can also include more than two boxes.
After observing and receiving a sufficiently large number of user inputs from interface 200, each reoccurring term t can be summarized in query log 300 to obtain the following two numbers:
-
- A location number L which indicates the number of times that the term t is used as a location (i.e. appeared in location box 204);
- A non-location number N which indicates the number of times that the term t is used as a non-location (i.e. appeared in non-location box 202).
Note that a standalone location term is more likely to appear in the location box than in the non-location box, whereas a non-location term is more likely to appear in the non-location box than in the location box. For example, query log 300 shows that “New York” appears significantly more frequently in the location box than it appears in the non-location box. In contrast, “Pizza” appears predominantly in the non-location box because it is a non-location.
The system then obtains a location count L and a non-location count N for term t based on user inputs received through a two-box interface as described above (step 404). In one embodiment of the present invention, the system obtains numbers L and N for term t from a query log which summaries the input counts for the term in the location box and the non-location box.
Next, the system determines a location score SL(t) based on L, which indicates how frequently term t appears in the location box (step 406). The system additionally determines a non-location score SN(t) based on N, which indicates how frequently term t appears in the non-location box (step 406).
In one embodiment of the present invention, the system computes location score SL(t) and non-location score SN(t) according to:
-
- Location score SL(t): SL(t)=log(L+1); and
- Non-Location score SN(t): SN(t)=log(N+1).
Note that in this embodiment, both SL(t) and SN(t) are greater or equal to zero. Also note that although we use the log() function to compute both SL(t) and SN(t), many other functions can possibly be used to compute SL(t) and SN(t) based on counts L and N.
The system next computes a normalized location indicator PL(t) based on location score SL(t) and non-Location score SN(t) (step 408). In one embodiment of the present invention, PL(t) is computed according to: PL(t)=SL(t)/(SL(t)+SN(t)).
An ideal location term t is associated with a count L>>0 and N=0. Hence, SL(t)>>0, SN(t)=0, and PL(t)=1. Furthermore, an ideal non-location term t is associated with a count L=0 and N>>0. Hence, SL(t)=0, SN(t)>>0, and PL(t)=0. However in practice, a given term t is associated with a normalized location indicator PL(t) with a value between 0 and 1.
The system then determines whether term t is a standalone location by comparing PL(t) with a standalone threshold—TH_standalone (step 410).
If PL(t)>TH_standalone, the system determines that term t is a standalone location (step 412). Otherwise, the system determines that term tis not a standalone location (step 414).
In one embodiment of the present invention, the system assembles a standalone location list which includes those terms that have been determined to be standalone locations. If the standalone location list has already been created, each newly determined standalone location can be appended to the list.
If term t is not a standalone location, the system next determines whether term t belongs in a location blacklist by comparing normalized location indicator PL(t) with a blacklist threshold—TH_blacklist (step 416).
If PL(t)<TH_blacklist, the system determines that term t belongs in the location blacklist (step 418). Otherwise, the system determines that term t does not belong in the location blacklist (step 420).
In another embodiment of the present invention, the condition PL(t)<TH_blacklist is a necessary but not a sufficient condition to determine that term t belongs in the location blacklist. In this embodiment, if PL(t)<TH_blacklist, the system sends term t to a location extraction server (LES) to determine whether term t gets triggered as a location query. If so, the system determines that t belongs in the location blacklist. Otherwise, the system determines that term t does not belong in the location blacklist.
Note that the LES is typically triggered when an input term contains a component which appears to be related to a location, even if that term is not actually related to the location. For example, term “Orlando Bloom” will cause the LES to extract “Orlando” from the term, even thought the term is not a location. However, a term that does not contain any location typically does not trigger the LES. Consequently, the system can use the LES to filter out terms that have small PL(t) values but do not contain a location. This prevents the system from including too many terms in the location blacklist.
Note that the two thresholds are chosen so that they satisfy the condition 0<TH_blacklist<TH_standalone<1. Moreover, these threshold values can be dynamically adjusted according to frequency data in the query log.
Note that the above technique can be used to generate standalone locations and location blacklists in multiple languages, including but not limited to: Chinese, Japanese, Korean, and English.
The foregoing descriptions of embodiments have been presented for purposes of illustration and description only. They are not intended to be—exhaustive or to limit the present description to the forms disclosed. Accordingly, many modifications and variations will be apparent to practitioners skilled in the art. Additionally, the above disclosure is not intended to limit the present description. The scope of the present description is defined by the appended claims
Claims (20)
1. A method for automatically identifying a standalone location, the method comprising performing, by one or more computing devices, the operations of:
receiving a term to be evaluated, the term including one or more words;
determining a non-location score for the term, wherein the non-location score is determined based at least in part on a logarithm of a value that is determined based at least in part from query log data and indicates how frequently the term is used as a non-location term in search queries;
determining a location score for the term, wherein the location score is determined based at least in part on a logarithm of a value that is determined based at least in part from the query log data and indicates how frequently the term is used as a location term in search queries; and
determining, based on a ratio of the location score to the sum of the location score and the non-location score, whether the term is a standalone location, wherein a standalone location is a geographic location that is identifiable by its name alone.
2. The method of claim 1 , wherein determining the non-location score for the term comprises determining the non-location score for the term based at least in part on a number of times that the term appears in a non-location box of a search engine interface that includes:
the non-location box for receiving terms specifying what a user is searching for; and
a location box for receiving terms specifying a geographic location within which the user is searching.
3. The method of claim 2 , wherein determining the location score for the term comprises determining the location score for the term based at least in part on a number of times that the term appears in the location box.
4. The method of claim 1 , wherein, upon wherein the operations comprise, responsive to determining that the term is a standalone location, adding the standalone location to a list of standalone locations.
5. The method of claim 4 , wherein the operations comprise:
receiving a search query;
using the search query to obtain a plurality of search results from a search engine;
determining that one or more terms in the search query are located in the list of standalone locations; and
responsive to determining that the one or more terms are located in the list of standalone locations, using a geographic location associated with the one or more terms to rank the plurality of search results.
6. The method of claim 1 , wherein the operations comprise, responsive to determining that the term is not a standalone location, determining that the term belongs in a location blacklist comprising terms that include names of locations but do not refer to locations.
7. The method of claim 6 , wherein determining that the term belongs in the location blacklist comprises:
submitting the term to a location-extraction engine;
receiving an indication from the location-extraction engine that the term contains the name of a location; and
determining that the ratio of the location score to the sum of the location score and the non-location score is less than a blacklist threshold.
8. The method of claim 1 , wherein determining whether the term is a standalone location comprises:
determining a normalized location indicator as the ratio of the location score to the sum of the location score and the non-location score; and
determining whether the normalized location indicator is greater than a standalone threshold, where the term is determined to be a standalone location if the normalized location indicator is greater than the standalone threshold.
9. A system comprising:
one or more processors; and
a memory storing instructions that when executed by the one or more processors cause the system to perform operations comprising:
receiving a term to be evaluated, the term including one or more words;
determining a non-location score for the term, wherein the non-location score is determined based at least in part on a logarithm of a value that is determined based at least in part from query log data and indicates how frequently the term is used as a non-location term in search queries;
determining a location score for the term, wherein the location score is determined based at least in part on a logarithm of a value that is determined based at least in part from the query log data and indicates how frequently the term is used as a location term in search queries; and
determining, based on a ratio of the location score to the sum of the location score and the non-location score, whether the term is a standalone location, wherein a standalone location is a geographic location that is identifiable by its name alone.
10. The system of claim 9 , wherein determining the non-location score for the term comprises determining the non-location score for the term based at least in part on a number of times that the term appears in a non-location box of a search engine interface that includes:
the non-location box for receiving terms specifying what a user is searching for; and
a location box for receiving terms specifying a geographic location within which the user is searching.
11. The system of claim 10 , wherein determining the location score for the term comprises determining the location score for the term based at least in part on a number of times that the term appears in the location box.
12. The system of claim 9 , wherein the operations comprise:
responsive to determining that the term is a standalone location, adding the standalone location to a list of standalone locations;
receiving a search query;
using the search query to obtain a plurality of search results from a search engine;
determining that one or more terms in the search query are located in the list of standalone locations; and
responsive to determining that the one or more terms are located in the list of standalone locations, using a geographic location associated with the one or more terms to rank the plurality of search results.
13. The system of claim 9 , wherein:
the operations comprise, responsive to determining that the term is not a standalone location, determining that the term belongs in a location blacklist comprising terms that include names of locations but do not refer to locations; and
determining that the term belongs in the location blacklist comprises:
submitting the term to a location-extraction engine;
receiving an indication from the location-extraction engine that the term contains the name of a location; and
determining that the ratio of the location score to the sum of the location score and the non-location score is less than a blacklist threshold.
14. The system of claim 9 , wherein determining whether the term is a standalone location comprises:
determining a normalized location indicator as the ratio of the location score to the sum of the location score and the non-location score; and
determining whether the normalized location indicator is greater than a standalone threshold, where the term is determined to be a standalone location if the normalized location indicator is greater than the standalone threshold.
15. One or more non-transitory computer-readable media comprising instructions that when executed by one or more computers cause the one or more computers to perform operations comprising:
receiving a term to be evaluated, the term including one or more words;
determining a non-location score for the term, wherein the non-location score is determined based at least in part on a logarithm of a value that is determined based at least in part from query log data and indicates how frequently the term is used as a non-location term in search queries;
determining a location score for the term, wherein the location score is determined based at least in part on a logarithm of a value that is determined based at least in part from the query log data and indicates how frequently the term is used as a location term in search queries; and
determining, based on a ratio of the location score to the sum of the location score and the non-location score, whether the term is a standalone location, wherein a standalone location is a geographic location that is identifiable by its name alone.
16. The one or more non-transitory computer-readable media of claim 15 , wherein determining the non-location score for the term comprises determining the non-location score for the term based at least in part on a number of times that the term appears in a non-location box of a search engine interface that includes:
the non-location box for receiving terms specifying what a user is searching for; and
a location box for receiving terms specifying a geographic location within which the user is searching.
17. The one or more non-transitory computer-readable media of claim 16 , wherein determining the location score for the term comprises determining the location score for the term based at least in part on a number of times that the term appears in the location box.
18. The one or more non-transitory computer-readable media of claim 15 , wherein the operations comprise:
responsive to determining that the term is a standalone location, adding the standalone location to a list of standalone locations;
receiving a search query;
using the search query to obtain a plurality of search results from a search engine;
determining that one or more terms in the search query are located in the list of standalone locations; and
responsive to determining that the one or more terms are located in the list of standalone locations, using a geographic location associated with the one or more terms to rank the plurality of search results.
19. The one or more non-transitory computer-readable media of claim 15 , wherein:
the operations comprise, responsive to determining that the term is not a standalone location, determining that the term belongs in a location blacklist comprising terms that include names of locations but do not refer to locations; and
determining that the term belongs in the location blacklist comprises:
submitting the term to a location-extraction engine;
receiving an indication from the location-extraction engine that the term contains the name of a location; and
determining that the ratio of the location score to the sum of the location score and the non-location score is less than a blacklist threshold.
20. The one or more non-transitory computer-readable media of claim 15 , wherein determining whether the term is a standalone location comprises:
determining a normalized location indicator as the ratio of the location score to the sum of the location score and the non-location score; and
determining whether the normalized location indicator is greater than a standalone threshold, where the term is determined to be a standalone location if the normalized location indicator is greater than the standalone threshold.
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US14/331,138 US10169458B1 (en) | 2007-04-20 | 2014-07-14 | Using a query log from a two-box interface to identify standalone locations |
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US11/788,722 US8782030B1 (en) | 2007-04-20 | 2007-04-20 | Using a query log from a two-box interface to identify standalone locations |
US14/331,138 US10169458B1 (en) | 2007-04-20 | 2014-07-14 | Using a query log from a two-box interface to identify standalone locations |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US11/788,722 Continuation US8782030B1 (en) | 2007-04-20 | 2007-04-20 | Using a query log from a two-box interface to identify standalone locations |
Publications (1)
Publication Number | Publication Date |
---|---|
US10169458B1 true US10169458B1 (en) | 2019-01-01 |
Family
ID=51135782
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US11/788,722 Active 2030-04-04 US8782030B1 (en) | 2007-04-20 | 2007-04-20 | Using a query log from a two-box interface to identify standalone locations |
US14/331,138 Active 2029-04-30 US10169458B1 (en) | 2007-04-20 | 2014-07-14 | Using a query log from a two-box interface to identify standalone locations |
Family Applications Before (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US11/788,722 Active 2030-04-04 US8782030B1 (en) | 2007-04-20 | 2007-04-20 | Using a query log from a two-box interface to identify standalone locations |
Country Status (1)
Country | Link |
---|---|
US (2) | US8782030B1 (en) |
Families Citing this family (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9582515B1 (en) | 2014-04-11 | 2017-02-28 | Google Inc. | Detecting queries for specific places |
US20150358273A1 (en) * | 2014-06-06 | 2015-12-10 | Rebecca Lee FEINSTEIN | Request for information system |
Citations (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6618727B1 (en) | 1999-09-22 | 2003-09-09 | Infoglide Corporation | System and method for performing similarity searching |
US20040073534A1 (en) | 2002-10-11 | 2004-04-15 | International Business Machines Corporation | Method and apparatus for data mining to discover associations and covariances associated with data |
US20060106778A1 (en) | 2004-10-29 | 2006-05-18 | Microsoft Corporation | System and method for providing a geographic search function |
US20060149734A1 (en) * | 2004-12-30 | 2006-07-06 | Daniel Egnor | Location extraction |
US20060271518A1 (en) | 2005-05-27 | 2006-11-30 | Microsoft Corporation | Search query dominant location detection |
US20080082477A1 (en) | 2006-09-29 | 2008-04-03 | Microsoft Corporation | Key phrase extraction from query logs |
-
2007
- 2007-04-20 US US11/788,722 patent/US8782030B1/en active Active
-
2014
- 2014-07-14 US US14/331,138 patent/US10169458B1/en active Active
Patent Citations (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6618727B1 (en) | 1999-09-22 | 2003-09-09 | Infoglide Corporation | System and method for performing similarity searching |
US20040073534A1 (en) | 2002-10-11 | 2004-04-15 | International Business Machines Corporation | Method and apparatus for data mining to discover associations and covariances associated with data |
US20060106778A1 (en) | 2004-10-29 | 2006-05-18 | Microsoft Corporation | System and method for providing a geographic search function |
US20060149734A1 (en) * | 2004-12-30 | 2006-07-06 | Daniel Egnor | Location extraction |
US20060271518A1 (en) | 2005-05-27 | 2006-11-30 | Microsoft Corporation | Search query dominant location detection |
US20080082477A1 (en) | 2006-09-29 | 2008-04-03 | Microsoft Corporation | Key phrase extraction from query logs |
Non-Patent Citations (3)
Title |
---|
Martins, Bruno et al., "Handling Locations in Search Engine Queries", GIR' 06, Aug. 10, 2003. |
Office Action for related case (U.S. Appl. No. 11/607,568), mailed from USPTO dated Oct. 15, 2008. |
Wang, Lee et al., "Detecting Dominant Locations from Search Queries", SIGIR '05, Aug. 15-19, 2005, pp. 424-431. |
Also Published As
Publication number | Publication date |
---|---|
US8782030B1 (en) | 2014-07-15 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US20230205828A1 (en) | Related entities | |
CN108009293B (en) | Video tag generation method and device, computer equipment and storage medium | |
US7890521B1 (en) | Document-based synonym generation | |
US7769751B1 (en) | Method and apparatus for classifying documents based on user inputs | |
US8768917B1 (en) | Method and apparatus for automatically identifying compounds | |
JP6141305B2 (en) | Image search | |
JP5736469B2 (en) | Search keyword recommendation based on user intention | |
US11580181B1 (en) | Query modification based on non-textual resource context | |
US9104737B2 (en) | Social distance based search result order adjustment | |
US9367637B2 (en) | System and method for searching a bookmark and tag database for relevant bookmarks | |
US10606831B1 (en) | Method and system for identifying entities | |
US9146915B2 (en) | Method, apparatus, and computer storage medium for automatically adding tags to document | |
US8280871B2 (en) | Identifying offensive content using user click data | |
US9805022B2 (en) | Generation of topic-based language models for an app search engine | |
US11734289B2 (en) | Methods, systems, and media for providing a media search engine | |
US9916384B2 (en) | Related entities | |
US8768932B1 (en) | Method and apparatus for ranking search results | |
EP2192503A1 (en) | Optimised tag based searching | |
US20230281239A1 (en) | Suppressing personally objectionable content in search results | |
US10169458B1 (en) | Using a query log from a two-box interface to identify standalone locations | |
US9361198B1 (en) | Detecting compromised resources | |
CN108228101A (en) | A kind of method and system for managing data | |
US20230334055A1 (en) | Techniques for automatically inferring intents of search queries | |
KR20150119719A (en) | Search system and method for providing expansion search information |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 4 |
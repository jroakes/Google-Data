EP3491544B1 - Web page display systems and methods - Google Patents
Web page display systems and methods Download PDFInfo
- Publication number
- EP3491544B1 EP3491544B1 EP17746267.8A EP17746267A EP3491544B1 EP 3491544 B1 EP3491544 B1 EP 3491544B1 EP 17746267 A EP17746267 A EP 17746267A EP 3491544 B1 EP3491544 B1 EP 3491544B1
- Authority
- EP
- European Patent Office
- Prior art keywords
- web page
- render
- web
- server
- rendered
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active
Links
- 238000000034 method Methods 0.000 title claims description 37
- 230000004044 response Effects 0.000 claims description 62
- 238000009877 rendering Methods 0.000 claims description 26
- 238000012545 processing Methods 0.000 description 36
- 230000008569 process Effects 0.000 description 28
- 238000004891 communication Methods 0.000 description 26
- 238000005516 engineering process Methods 0.000 description 23
- 238000004590 computer program Methods 0.000 description 10
- 238000010586 diagram Methods 0.000 description 9
- 230000003287 optical effect Effects 0.000 description 7
- 238000007726 management method Methods 0.000 description 6
- 238000013515 script Methods 0.000 description 5
- 241000700605 Viruses Species 0.000 description 3
- 238000003491 array Methods 0.000 description 3
- 238000013461 design Methods 0.000 description 3
- 239000002355 dual-layer Substances 0.000 description 3
- 230000003993 interaction Effects 0.000 description 3
- 239000004973 liquid crystal related substance Substances 0.000 description 3
- 230000002093 peripheral effect Effects 0.000 description 3
- 239000007787 solid Substances 0.000 description 3
- 230000000007 visual effect Effects 0.000 description 3
- 230000008878 coupling Effects 0.000 description 2
- 238000010168 coupling process Methods 0.000 description 2
- 238000005859 coupling reaction Methods 0.000 description 2
- 238000005562 fading Methods 0.000 description 2
- 230000006870 function Effects 0.000 description 2
- 230000007274 generation of a signal involved in cell-cell signaling Effects 0.000 description 2
- 230000004048 modification Effects 0.000 description 2
- 238000012986 modification Methods 0.000 description 2
- 238000000926 separation method Methods 0.000 description 2
- 238000012546 transfer Methods 0.000 description 2
- 238000012795 verification Methods 0.000 description 2
- 238000013459 approach Methods 0.000 description 1
- 230000009286 beneficial effect Effects 0.000 description 1
- 230000008901 benefit Effects 0.000 description 1
- 230000001419 dependent effect Effects 0.000 description 1
- 239000012530 fluid Substances 0.000 description 1
- 230000000977 initiatory effect Effects 0.000 description 1
- 230000001953 sensory effect Effects 0.000 description 1
- 230000003068 static effect Effects 0.000 description 1
- 230000001502 supplementing effect Effects 0.000 description 1
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/10—Text processing
- G06F40/12—Use of codes for handling textual entities
- G06F40/14—Tree-structured documents
- G06F40/143—Markup, e.g. Standard Generalized Markup Language [SGML] or Document Type Definition [DTD]
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/10—Text processing
- G06F40/103—Formatting, i.e. changing of presentation of documents
- G06F40/106—Display of layout of documents; Previewing
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/10—Text processing
- G06F40/197—Version control
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/40—Processing or translation of natural language
- G06F40/58—Use of machine translation, e.g. for multi-lingual retrieval, for server-side translation for client devices or for real-time translation
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q30/00—Commerce
- G06Q30/02—Marketing; Price estimation or determination; Fundraising
- G06Q30/0241—Advertisements
- G06Q30/0277—Online advertisement
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L63/00—Network architectures or network communication protocols for network security
- H04L63/14—Network architectures or network communication protocols for network security for detecting or protecting against malicious traffic
- H04L63/1408—Network architectures or network communication protocols for network security for detecting or protecting against malicious traffic by monitoring network traffic
- H04L63/1416—Event detection, e.g. attack signature detection
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L63/00—Network architectures or network communication protocols for network security
- H04L63/14—Network architectures or network communication protocols for network security for detecting or protecting against malicious traffic
- H04L63/1441—Countermeasures against malicious traffic
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/01—Protocols
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/01—Protocols
- H04L67/02—Protocols based on web technology, e.g. hypertext transfer protocol [HTTP]
Definitions
- the present description relates generally to displaying web pages, and more particularly, but not exclusively, to efficient web page display using pre-rendering.
- Web pages can take time to load with a web browser.
- a web page associated with a single uniform resource locator (URL) request there can be as many as, or more than, 100 sub-resources that are obtained and rendered.
- Sub-resources can include JavaScript resources, style sheet (e.g., cascade style sheet or CSS) resources, and image files. Obtaining and rendering all of the resources for each web page can thus cause an undesirable delay in displaying the web page to a user.
- US 2015/0310126A1 relates to the process of rendering web pages with a content delivery system that pre-renders web content for a client device.
- a web page program can be preexecuted and the result delivered to a requesting client device, rather than or before sending a traditional set of web page components, such as a markup language document, cascading style sheets, embedded objects.
- AngularJS How to create a SPA crawlable and SEO friendly?, 23 August 2015, discloses AngularJS for avoiding full page reloads, and requesting just what is needed when switching to another web page by using SPA (Single-Page Application) which enables thewebsite to provide a more fluid user experience, wherein when a page is loaded, one can browse other links and load new content without the need of a full page reload, wherein only one piece of the page is discarded and replaced by the content of the next page.
- SPA Single-Page Application
- a web browser of a user device can locally store some or all of the resources in a cache for a previously-loaded web page so that the resources can be obtained faster to reduce future load times.
- a cache of this type can provide limited or no benefit for web pages that have not been previously loaded by a user or that have not been recently loaded by the user with that particular user device.
- linked sub-pages of a currently loaded web page can be pre-rendered by the user's device in the background, while the user views the currently loaded web page, in anticipation of the user navigating to the linked sub-page.
- pre-rendering of linked sub-pages in this way can be undesirably demanding of the user's system resources, particularly for mobile devices.
- the subject disclosure provides systems and methods for providing a pre-rendered version of a web page for display, while rendering the web page.
- the pre-rendered web page may be replaced with the freshly rendered web page.
- a user can be quickly provided with a visual display of the web page (e.g., the pre-rendered version of the web page), while the resources of the web page are obtained and the web page is rendered. The user can then be provided with a freshly rendered web page that replaces the pre-rendered version.
- a system may include a plurality of user devices, one or more web servers, and one or more pre-render servers communicatively coupled via a network such as the Internet.
- Each user device may include a web client such as a web browser application, communications circuitry, and a display.
- FIG. 1 shows an exemplary implementation in which a user device 102 having a web client such as web browser application 104 (sometimes referred to herein as a browser or a web browser) interacts with a pre-render server 106 and a web server 108 for display of a web page.
- web browser application 104 sometimes referred to herein as a browser or a web browser
- FIG. 1 depicts direct communications between user device 102 and pre-render server 106, between user device 102 and web server 108 and between pre-render server 106 and web server 108, it should be appreciated that these communications may be exchanged via a network such as the Internet.
- a user when a user desires to load a web page, the user may provide input to user device 102 to indicate the desire to load the web page (e.g., by entering a URL of the web page into the web browser application 104 or clicking a link to the URL).
- a web page load may be initiated automatically by a computing system without receiving a user input.
- the web browser application 104 Responsive to the user input (or other automatic web page load initiation operations), the web browser application 104 sends two requests to two different servers.
- web browser 104 sends a request (e.g., a hypertext transfer protocol (HTTP) request, a Gopher request, a SPDY ® request, or other suitable web page request) to web server 108 (e.g . , a web server that hosts and/or serves the web page such as a web server associated with the URL of the web page) and a pre-render request to pre-render server 106.
- Pre-render server 106 is a different server from web server 108.
- pre-render server 106 may be located at a different IP address from web server 108 in some implementations.
- the web client (e.g . , web browser application 104) then receives two responses.
- web browser application 104 receives a response such as an HTTP response from web server 108 and a pre-render response from pre-render server 106.
- the pre-render response includes a pre-rendered version of the web page.
- the pre-rendered version of the web page includes a serialized hypertext markup language (HTML) file for the web page.
- HTML serialized hypertext markup language
- the pre-render response may be a null response or other notification to the web client (e.g., to web browser application 104) that no pre-rendered version of the web page is available.
- pre-render server 106 may send an additional request (e.g., an HTTP request or other suitable web page request) to web server 108 so that pre-render server 106 can render and store the web page for future pre-render requests.
- a web client such as browser 104 of user device 102 of system 100 sends a request to web server 108 for a web page.
- the request to web server 108 may, for example, be an HTTP request.
- An HTTP request may include a request line including a request for a main or index file for the web page and a protocol identifier, a request header that includes (i) a host for the web page at which the index file is located, (ii) acceptable file type identifiers for the web client, (iii) a language preference identifier, (iv) a geographical location identifier for the web client, (v) acceptable encoding scheme identifiers for the web client, and/or (vi) a web client identifier, and a request body (as examples).
- the web client of user device 102 concurrently sends a pre-render request for the web page to pre-render server 106.
- the web client of user device 102 receives a pre-rendered version of the web page from the pre-render server 106.
- the web client of user device 102 receives a response from web server 108.
- the response from web server 108 may include an HTML file for the web page.
- the web client of user device 102 provides the pre-rendered version of the web page for display while rendering the web page based on the response from web server 108.
- the pre-rendered version of the web page is a serialized hypertext markup language file for the web page.
- Providing the pre-rendered version of the web page for display includes providing a serialized data file from which a clone of a previously rendered version of the web page can be generated for display in a browser window such that the clone is viewable, scrollable, and/or interactively available to a viewing user during rendering of the web page received from the web server.
- the serialized data file is a serialized hypertext markup language file for the web page.
- Rendering the web page may include receiving an HTTP response from web server 108 (e.g., a response that includes the requested main or index file for the web page), parsing the received main or index file, generating a Data Object Model (DOM) based on the parsed main or index file, requesting additional resources identified in the main or index file, obtaining the identified resources (e.g., by making additional HTTP requests to the web server and or other web servers), processing scripts and/or style sheets in the obtained resources, and/or modifying and/or supplementing the DOM based on the processed scripts and/or style sheets.
- the pre-rendered version of the web page is displayed and visible to a viewing user during these rendering operations.
- browser 104 may provide the pre-rendered version of the web page for display by user device 102 using a display such as liquid crystal display (LCD), a light emitting diode (LED) display or other suitable display of user device 102.
- a display such as liquid crystal display (LCD), a light emitting diode (LED) display or other suitable display of user device 102.
- the web client of user device 102 may provide the rendered web page for display in place of the pre-rendered version of the web page.
- the display of user device 102 may then be updated with the provided rendered web page in place of the displayed pre-rendered version of the web page.
- the web client of user device 102 may also receive additional information from pre-render server 106 (e.g., in addition to the pre-rendered version of the web page).
- the additional information may include a warning or alert regarding content such as malicious content associated with the web page.
- the warning or alert may include a filename in the main or index file that is associated with malware or a virus or a domain or host in the main or index file or a linked location therein associated with malware or a virus.
- the web client of user device 102 may render the web page (e.g., while the pre-rendered version is displayed), at least in part, based on the additional information from the pre-render server.
- the web client may use the warning or alert to render the web page without the malicious content.
- the web client while sending requests for resources in the received main or index file for a web page may omit a request for a file that has been flagged in the additional information from the pre-render server.
- pre-render server 106 may also detect and remove the malicious content when generating the pre-rendered version of the web page. In this way, a pre-rendered version of a web page that is free of malicious content associated with the web page can be generated, stored in a pre-render cache, and provided to a client device in response to a pre-render request.
- pre-render server 106 may be provided with advertisement management capabilities. For example, in some scenarios, pre-render server 106 may remove and/or replace advertisements in the web page for the pre-rendered version of the web page. As discussed in further detail hereinafter, pre-render server 106 may remove and/or modify advertisements in a web page based on user preferences (e.g., stored user preferences) , based on preferences, agreements and/or instructions from web server 108, and/or based on preferences, agreements, and/or instructions from particular advertisers.
- user preferences e.g., stored user preferences
- the request from user device 102 to web server 108 may include the same information in a common format, may include the same information in a different format, or the pre-render request may include more, less, and/or different information than the request from user device 102 to web server 108.
- pre-render server 106 is configured to receive and process a pre-render request that is an exact copy of the request sent concurrently to web server 108.
- the processing resources of user device 102 and the complexity of the web client can be reduced by allowing the web client to request a pre-rendered version of a web page from pre-render server 106 by simply sending the same request to the two servers without generating a modified request for the pre-render server.
- Pre-render server 106 may store pre-rendered versions of various web pages associated with a particular host in a directory or database associated with that host.
- pre-render cache 304 may include a database associated with a news website host with a URL of www.samplenewssite.com.
- Pre-rendered web pages 305 in that database may include a pre-rendered web page associated with a URL of www.samplenewssite.com/index.html, a pre-rendered web page associated with a URL of www.samplenewssite.com/story1/index.html, pre-rendered a web page associated with a URL of www.samplenewssite.com/story2/index.html, a pre-rendered web page associated with a URL of www.samplenewssite.com/story1.html, a pre-rendered web page associated with a URL of www.samplenewssite.com/date/story1.html, a pre-rendered web page associated with a URL of www.samplenewssite.com/date/story2.html, a pre-rendered web page associated with a URL of www.samplenewssite.com/storytitle1.html, and pre-rendered a web page associated with a URL of www.samplenewssite.com/storytitle
- pre-render cache can store pre-rendered versions of web pages that can be quickly identified and returned in response to receiving a copy of an HTTP request for the web server of the page.
- an HTTP request provided from the web client to web server 108 and pre-render server 106 may include a request line for the file /date/story1.html and a request header that identifies www.samplenewssite.com as the host for that file.
- pre-render server may retrieve, from a database at the pre-render server titled "www.samplenewssite.com", a pre-rendered web page titled (for example) "pre-render_date/story1.com”.
- the retrieved pre-rendered web page "pre-render_date/story1.com” (e.g. a serialized HTML file for a previously rendered version of the web page at www.samplenewssite.com/date/story1.html) may be sent to the requesting web client in response to the received HTTP request.
- the pre-render request may include less and/or different information from the request sent from user device 102 to web server 108.
- the pre-render request may include a subset of the information included in the request sent from user device 102 to web server 108.
- the pre-render request may include only the URL of the web page or the URL of the web page and minimal identifying information for the web client (e.g., a browser identifier) and the user (e.g., a language preference or geographical location and/or one or more preferences as discussed herein).
- Pre-render server 106 may obtain pre-rendered versions of web pages that are stored together with the full URLs of the web pages or may parse the URL of a web page to identify a host and a filename for the web page for obtaining a stored pre-rendered version of the web page. For example, pre-render server 106 may receive a pre-render request that includes a URL of www.samplenewssite.com/date/story1.html . Pre-render server 106 may then extract a host (e.g., www.samplesnewssite.com) and a web page identifier (e.g., "/date/story1.html”) from the URL.
- a host e.g., www.samplesnewssite.com
- a web page identifier e.g., "/date/story1.html
- Pre-render server 106 may then retrieve, from a database at the pre-render server titled "www.samplenewssite.com", a pre-rendered web page titled (for example) "pre-render_date/story1.com".
- the retrieved pre-rendered web page "pre-render_date/story1.com” (e.g., an image of a previously rendered version of the web page at www.samplenewssite.com/date/story1.html or a serialized HTML file for a previously rendered version of the web page at www.samplenewssite.com/date/story1.html) may be sent to the requesting web client in response to the received pre-render request containing the URL.
- pre-rendered versions can be found in the pre-render cache and returned using only a URL of the desired web page received in the pre-render request, in accordance with some implementations.
- the pre-render request may include information that is not included in the HTTP request.
- the pre-render request may include advertisement replacement preferences, malicious content protection preferences, other preferences and/or request content that is associated with services offered by pre-render server 106 that may not be offered by web server 108.
- advertisement replacement preferences included in the pre-render request may include user-selected or automatically-determined (e.g., browser-determined) preferences for removing web page advertisements and/or replacing web page advertisements with different web page advertisements in a pre-rendered version of the web page.
- a particular pre-render request may include an indication of a user preference for advertisements related to a sports team, a particular retail outlet, or the like.
- pre-render server 106 may replace an advertisement for one sports team in the web page with an advertisement for the preferred sports team in the pre-rendered version of the web page.
- These advertisement preference operations may provide the user with an enhanced browsing experience that may not be available in systems that do not include a pre-render server (e.g., because advertisement preference services are not offered by web server 108).
- a pre-render request may include a user request for advertisement removal (e.g., an identifier such as "remove-ads" may be included in a pre-render request header).
- the pre-render server may identify advertisement resources in the web page (e.g., based on an identified advertisement block in the main or index file of the web page, based on known filenames associated with advertisements, based on domain names or host names associated with advertisers or advertisement providers, or based on other advertisement information in the main or index file or other linked files associated with the web page), prevent retrieval of the identified advertisement resources, and replace the advertisement resources with blank content, with a removed-ad identifier, or with other content in various embodiments.
- the pre-render server may identify advertisement resources in the web page associated with advertisers other than the preferred advertiser (e.g., based on an identified advertisement block in the main or index file of the web page, based on known filenames associated with advertisements, based on domain names or host names associated with advertisers or advertisement providers, or based on other advertisement information in the main or index file or other linked files associated with the web page), prevent retrieval of the identified advertisement resources, retrieve advertisement content from the preferred advertiser, and replace the identified advertisement resources with the retrieved preferred advertiser advertisement resources.
- advertisement resources in the web page associated with advertisers other than the preferred advertiser e.g., based on an identified advertisement block in the main or index file of the web page, based on known filenames associated with advertisements, based on domain names or host names associated with advertisers or advertisement providers, or based on other advertisement information in the main or index file or other linked files associated with the web page.
- a web client such as browser 104 may determine user preferences such as advertisement preferences based on a browsing history or other online profile for that user.
- the browser-determined preferences may be automatically included in pre-render requests sent by that browser.
- malicious content protection preferences included in the pre-render request may include user-selected or automatically-determined (e.g., browser-determined) preferences for removing malicious content from a web page for a pre-rendered version of the web page and/or for providing warnings related to malicious content in the web page.
- a particular pre-render request may include an indication of a user preference (e.g., a high-security preference, a medium-security preference, or a low-security reference) for malicious content management.
- pre-render server 106 may block only the highest-risk content when a low-security preference is received in a pre-render request and may block progressively less risky content when a medium-security or high-security preference is received in a pre-render request.
- These malicious content management preference operations may provide the user with an enhanced browsing experience that may not be available in systems that do not include a pre-render server.
- advertisement and/or malicious content management by pre-render server 106 is based on user preferences included in a pre-render request are merely illustrative.
- advertisement and/or malicious content management may be performed by pre-render server 106 without user preferences (e.g., based on server standards and/or agreements) or pre-render server 106 may provide pre-rendered versions of web pages without any advertisement or malicious content management.
- FIG. 2 conceptually illustrates an exemplary implementation of web server 108 in accordance with various aspects of the subject technology.
- web server 108 may include processing circuitry 200, memory 202, and communications circuitry 208.
- Processing circuitry 200 may include one or more processors configured to receive, via communications circuitry 208, web page requests and provide responses to the received web page requests.
- processing circuitry 200 may include one or more microprocessors, multi-core processors, and/or one or more integrated circuits, such as application specific integrated circuits (ASICs) or field programmable gate arrays (FPGAs) that load and execute sequences of instructions, software modules, etc.
- ASICs application specific integrated circuits
- FPGAs field programmable gate arrays
- Processing circuitry 200 may execute instructions stored in memory 202. In some implementations, such integrated circuits execute instructions that are stored on the circuit itself.
- Memory 202 may store various web pages 204 (e.g., source code for each of a plurality of web pages hosted by server 108) and web page resources 206 (e.g., text files, image files, scripts, etc.), associated with web pages 204.
- Processing circuitry 200 may be operated to retrieve web pages 204, resources 206, and/or other remotely hosted web pages and/or resources. The retrieved web pages 204, resources 206, and/or other remotely hosted web pages and/or resources may be provided, by processor 200, to various client devices responsive to client requests using communications circuitry 208.
- Memory 202 may include computer-readable media such as RAM, ROM, read-only compact discs (CD-ROM), recordable compact discs (CD-R), rewritable compact discs (CD-RW), read-only digital versatile discs (e.g . , DVD-ROM, dual-layer DVD-ROM), a variety of recordable/rewritable DVDs (e.g., DVD-RAM, DVD-RW, DVD+RW, etc.), flash memory (e.g., SD cards, mini-SD cards, micro-SD cards, etc.), magnetic and/or solid state hard drives, ultra density optical discs, any other optical or magnetic media, and floppy disks.
- RAM random access memory
- ROM read-only compact discs
- CD-R recordable compact discs
- CD-RW rewritable compact discs
- CD-RW read-only digital versatile discs
- DVD-RAM digital versatile discs
- DVD-RW dual-layer DVD-ROM
- flash memory e.g., SD
- memory 202 can store sets of instructions/code that are executable by processing circuitry 200 including sets of instructions/code that implement the processes described herein.
- Examples of computer programs or computer code include machine code, such as is produced by a compiler, and files including higher-level code that are executed by a computer, an electronic component, or a microprocessor using an interpreter.
- Communications circuitry 208 may include transceiver circuitry, signal processing circuitry, signal generation circuitry, and/or other communications circuitry for communicatively coupling server 108 to a network of computers such as a local area network ("LAN”), a wide area network (“WAN”), or an Intranet, or a network of networks, such as the Internet as would be understood by one skilled in the art.
- LAN local area network
- WAN wide area network
- Intranet or a network of networks, such as the Internet as would be understood by one skilled in the art.
- Processing circuitry 200, memory 202, communications circuitry 208, and/or other components of server 108 may be communicatively connected by a system bus (not shown) that includes system, peripheral, and chipset buses that communicatively connect the numerous internal devices a server such as server 108 as would be understood by one skilled in the art.
- a bus may be provided that communicatively connects processing circuitry 200 with memory 202, and communications circuitry 208.
- FIG. 3 conceptually illustrates an exemplary implementation of pre-render server 106 in accordance with various aspects of the subject technology.
- pre-render server 106 may include processing circuitry 300, memory 302, and communications circuitry 314.
- Processing circuitry 300 may include one or more processors configured to receive, via communications circuitry 314, pre-render requests and provide pre-render responses to the received pre-render requests.
- processing circuitry 300 may include one or more microprocessors, multi-core processors, and/or one or more integrated circuits, such as application specific integrated circuits (ASICs) or field programmable gate arrays (FPGAs) that load and execute sequences of instructions, software modules, etc.
- ASICs application specific integrated circuits
- FPGAs field programmable gate arrays
- Processing circuitry 300 may execute instructions stored in memory 302. In some implementations, such integrated circuits execute instructions that are stored on the circuit itself.
- Memory 302 may include a pre-render cache that stores pre-rendered web pages 305.
- Memory 302 may include computer-readable media such as RAM, ROM, read-only compact discs (CD-ROM), recordable compact discs (CD-R), rewritable compact discs (CD-RW), read-only digital versatile discs (e.g., DVD-ROM, dual-layer DVD-ROM), a variety of recordable/rewritable DVDs (e.g., DVD-RAM, DVD-RW, DVD+RW, etc.), flash memory (e.g., SD cards, mini-SD cards, micro-SD cards, etc.), magnetic and/or solid state hard drives, ultra density optical discs, any other optical or magnetic media, and floppy disks.
- memory 302 can store sets of instructions/code that are executable by processing circuitry 300 including sets of instructions/code (e.g., a rendering application 310 and/or a request forwarding application 312) that implement the processes described herein.
- sets of instructions/code e.g., a rendering application 310 and/or a request forwarding application 312
- Examples of computer programs or computer code with which rendering application 310 and/or request forwarding application 312 can be implemented include machine code, such as is produced by a compiler, and files including higher-level code that are executed by a computer, an electronic component, or a microprocessor using an interpreter.
- Communications circuitry 314 may include transceiver circuitry, signal processing circuitry, signal generation circuitry, and/or other communications circuitry for communicatively coupling server 106 to a network of computers such as a local area network ("LAN”), a wide area network (“WAN”), or an Intranet, or a network of networks, such as the Internet as would be understood by one skilled in the art.
- LAN local area network
- WAN wide area network
- Intranet or a network of networks, such as the Internet as would be understood by one skilled in the art.
- Processing circuitry 300, memory 302, communications circuitry 314, and/or other components of server 106 may be communicatively connected by a system bus (not shown) that includes system, peripheral, and chipset buses that communicatively connect the numerous internal devices a server such as server 106 as would be understood by one skilled in the art.
- a bus may be provided that communicatively connects processing circuitry 300 with memory 302, and communications circuitry 314.
- Pre-rendered web pages 305 may include pre-rendered versions of various web pages such as web pages 204 of FIG. 2 . As shown, pre-rendered web pages 305 includes serialized pre-rendered web pages 308. Serialized pre-rendered web pages 308 may include serialized versions of web pages such as serialized hypertext markup language versions of web pages.
- a serialized version of a web page may include, for example, a single file or packet of files that includes the web page, substantially all of the resources for the web page, and substantially all of the instructions needed by a web client for display of the web page and resources.
- the serialized version may be coded in accordance with one of various serialization standards as would be understood by one skilled in the art.
- a serialized version of a web page may include one or more embedded coded strings that are not readable by humans.
- the coded strings may be embedded within human-readable/machine-readable code such as HTML code.
- pre-render server 106 serializes the web page, in part, by encoding a separate binary-format version of the image into a more compact non-human-readable string (e.g., an ASCII string coded in a Base64 or other binary-to-text encoding format), and embedding the string within the serialized web page source.
- a more compact non-human-readable string e.g., an ASCII string coded in a Base64 or other binary-to-text encoding format
- the string may be included as a source to an ⁇ img> tag in a serialized HTML file for the web page.
- Serialization of the webpage in that manner allows to retrieve the serialized version of the webpage from the pre-render server with a single request and thus makes obtaining the pre-rendered version of the webpage from the pre-render server particularly efficient in comparison to obtaining the webpage from its original webserver and other servers on which content, such as for example images, for the webpage is hosted.
- Processing circuitry 300 may be operated to render web pages (e.g., according to instructions associated with a rendering application 310 stored in memory 302) to form pre-rendered versions of the web pages, store the pre-rendered versions of the web pages in pre-render cache 304, and retrieve pre-rendered web pages 305 from the pre-render cache.
- the retrieved pre-rendered web pages 305 (e.g., pre-rendered versions of web pages 204) may be sent, by processor 300, to various client devices responsive to client pre-render requests using communications circuitry 314.
- pre-render server 106 may receive, from a client device such as user device 102 of FIG. 1 , a pre-render request for a web page. Responsive to the pre-render request, processing circuitry 300 may be operated to determine whether a pre-rendered version of the web page is present in pre-render cache 304 (e.g., by determining whether one of a plurality of pre-rendered web pages 305 corresponds to the web page). If a pre-rendered version of the web page is present in pre-render cache 304, processing circuitry 300 may cooperate with communications circuitry 314 to send the pre-rendered version of the web page to the requesting client device.
- processing circuitry 300 may cooperate with communications circuitry 314 (e.g., according to instructions associated with a request forwarding application 312 stored in memory 302) to send (e.g., forward) a request for the web page to web server 108.
- Rendering application 310 may then render the web page based on one or more responses from web server 108 and store the rendered web page as a pre-rendered web page 305 for a later pre-render request for that web page.
- Pre-render server 106 may manage pre-rendered versions of web pages in pre-render cache 304 to ensure that updated pre-rendered versions are available in the cache and/or avoid inefficient use of storage space. For example, pre-render server 106 may periodically request and render a new version of a web page for which a pre-rendered version of the web page is already stored in the pre-render cache. The newly rendered version of the web page may be stored in place of or in addition to previously rendered versions of the web page. For example, in one implementation, one or more previously rendered versions of the web page that are stored as pre-rendered versions of the web page may be deleted from the pre-render cache and replaced with the newly rendered version.
- one or more previously rendered versions of the web page that are stored as pre-rendered versions of the web page in the pre-render cache may be moved to an archive database at the pre-render server 106 or remote from pre-render server 106 and replaced with the newly rendered version.
- removal and/or updating of pre-rendered versions of web pages stored in the pre-render cache may be performed based on the age of the pre-rendered versions (e.g., a set of the oldest pre-rendered web pages in the cache may be removed periodically), and/or based on popularity of the web page (e.g., pre-rendered versions of frequently-requested web pages may be frequently updated and replaced and/or pre-rendered versions of infrequently-requested web pages may be removed without replacement).
- removal and/or updating of pre-rendered versions of web pages stored in the pre-render cache may be performed based on web page content. For example, pre-rendered versions of web pages that include content that is updated multiple times per day (e.g., based on news updates or other content updates) may be removed and replaced with newly pre-rendered versions multiple times per day.
- pre-rendered web pages 305 may differ from the web pages with which they are associated (e.g., by including different advertisements or removed malicious content as discussed herein).
- Pre-render server 106 may accumulate pre-rendered web pages in pre-render cache 304 based on pre-render requests from users and/or based on lists (e.g., popularity-sorted lists) of web pages known to exist. For example, pre-render server 106 may send requests such as HTTP requests to various web servers associated with various web pages, obtain the associated resources for each web page, render each web page, and store a pre-rendered version of each of the various web pages in pre-render cache 304.
- requests such as HTTP requests to various web servers associated with various web pages, obtain the associated resources for each web page, render each web page, and store a pre-rendered version of each of the various web pages in pre-render cache 304.
- pre-render server 106 may render and store a plurality of pre-rendered versions of each web page.
- Web pages may be provided to users with content that is included particularly for that user.
- a web server may provide web pages with different geography-based content to users in different geographical locations (e.g., in different countries, in different states, in different cities, etc.).
- the different content may include different information such as different articles, different images, or different advertisements and/or may include the same information presented differently (e.g., in a different format or in a different human language).
- Pre-render server 106 may render and store more than one pre-rendered version of a web page, each with geography-based content as discussed herein. For example, pre-render server 106 may use proxy servers in various geographical locations to send requests to web server 108 to receive web pages from web server 108 that are specific to the various geographical locations. In this way, a pre-rendered version of the web page may be generated that includes geography-based content and the pre-render cache may include at least one additional pre-rendered version of the web page that includes different geography-based content in some embodiments.
- Geography-specific pre-rendered versions of each web page may be stored in geography-specific databases or directories in the pre-render cache or may be stored in a common directory for that web page and labeled with geography-based filenames or other geography-based identifiers.
- pre-rendered European and U.S. versions of a web page with a URL of www.samplenewssite.com/story1.html may be stored in database for www.samplenewssite.com in a pre-render cache as /EP/story1.html and /US/story1.html or as /EP-story1.html and /US-story1.html (as examples).
- versions of the web page may include similar content in different languages (e.g., common articles respectively in French and English) and/or different content (e.g., different headline stories related to different events respectively in Europe and the United States).
- the European and U.S. versions of the web page may be versions of the web page that would be displayed to user accessing the web page from a user device located respectively in Europe and the U.S.
- a geography-specific pre-rendered version of a web page, specific to a particular geographical region, may then be selected from multiple pre-rendered versions of that web page in pre-render cache 304 responsive to a pre-render request from a client device in that particular geographical location (e.g., based on an identified location of the requesting client device and/or based on a geographical identifier in a pre-render request header).
- FIG. 4 depicts a flow diagram of an example process for displaying a web page with a client device, according to aspects of the subject technology.
- the example process of FIG. 4 is described herein with reference to the components of FIGS. 1-3 .
- the blocks of the example process of FIG. 4 are described herein as occurring in serial, or linearly. However, multiple blocks of the example process of FIG. 4 may occur in parallel.
- the blocks of the example process of FIG. 4 need not be performed in the order shown and/or one or more of the blocks of the example process of FIG. 4 need not be performed.
- an electronic device such as user device 102 of FIG. 1 uses a web client to send a request (e.g., an HTTP request) to a web server of a web page such as web server 108.
- a request e.g., an HTTP request
- a web server of a web page such as web server 108.
- a pre-render request for the web page is sent to a pre-render server such as pre-render server 106.
- a pre-render response is received from the pre-render server.
- additional information may be received with or within the pre-render response.
- the additional information may include a warning associated with content of the web page such as malicious content (e.g., malware, a virus, etc.).
- a response such as an HTTP response may be received from the web server.
- the web page may be provided for display based on the pre-render response and the response from the web server.
- the web page may be provided for display based on the additional information received from the pre-render server. Illustrative operations that may be performed for providing the web page for display based on the pre-render response, the response from the web server, and/or the additional information as described above in connection with block 408 are shown in FIG. 5 .
- the web client may determine whether the pre-render response received from pre-render server 106 includes a pre-rendered version of the web page.
- the web client may render the web page based on the response (e.g., a HTTP response) received from the web server and, at block 504, provide the rendered web page for display upon completion of the rendering.
- Providing the rendered web page for display may include providing the web page to display circuitry of the client device for display to a user.
- the web client may provide the pre-rendered version of the web page for display while rendering the web page based on the response (e.g., an HTTP response) from the web server (e.g., in the background). If additional information (e.g., a warning regarding malicious content in the web page) has been received from the pre-render server, while the pre-rendered version is displayed, the web page may be rendered based on the response from the web server and based on the additional information (e.g., by removing the malicious content).
- the response e.g., an HTTP response
- additional information e.g., a warning regarding malicious content in the web page
- the web client may provide the rendered web page for display in place of the pre-rendered version of the web page.
- the display circuitry may then replace, on the display, the pre-rendered version of the web page with the freshly rendered version of the web page.
- the display circuitry may replace the pre-rendered version with the freshly rendered version in by replacing the displayed pre-rendered version with the freshly rendered version in a manner that is detectable or undetectable by the viewing user.
- the display circuitry may fade out the pre-rendered version while fading in the freshly rendered web page, may fade out portions (e.g., active portions) of the pre-rendered version while fading in corresponding portions of the freshly rendered web page while leaving other portions (e.g., inactive portions) of the pre-rendered web page displayed, or may otherwise replace the pre-rendered version of the web page with the freshly rendered version of the web page in a manner that provides a visual indication to the viewing user that the pre-rendered version is being replaced.
- the display circuitry may replace the entirety of the pre-rendered version with the entirety of the freshly rendered web page during a display refresh period so that the replacement is visually undetectable to the viewing user.
- the display circuitry may replace portions (e.g., active portions) of the pre-rendered version with corresponding portions of the freshly rendered web page during a display refresh period so that the replacement is visually undetectable to the viewing user.
- portions of the image that correspond to active links, video, or other active portions of the web page can be instantaneously (e.g., between display refresh frames), or smoothly replaced on the display with the corresponding active links, video, etc.
- FIG. 6 depicts a flow diagram of an example process for providing pre-rendered versions of a web page, according to aspects of the subject technology.
- the example process of FIG. 6 is described herein with reference to the components of FIGS. 1-3 .
- the blocks of the example process of FIG. 6 are described herein as occurring in serial, or linearly. However, multiple blocks of the example process of FIG. 6 may occur in parallel.
- the blocks of the example process of FIG. 6 need not be performed in the order shown and/or one or more of the blocks of the example process of FIG. 6 need not be performed.
- a pre-render server such as pre-render server 106 of FIGS. 1 and 3 may provide requests such as HTTP requests to one or more servers of one or more web pages.
- the requests may be provided in response to determining that a web page does not have a pre-rendered version present in a pre-render cache of the pre-render server and/or based on a list of web pages for pre-rendering.
- the pre-render server may receive responses such as HTTP responses from the web servers for the one or more web pages in response to the provided requests.
- the one or more web pages may be rendered, by the pre-render server, based on the received responses from the one or more web servers.
- each rendered web page may be stored as a pre-rendered version of that web page in a pre-render cache.
- storing a pre-rendered version of the web page may include generating a still image of the rendered web page and saving the still image, with identifying information for the web page, in the pre-render cache.
- the still image may be devoid of active content or may include embedded links for obtaining active content.
- the pre-render server may capture and store a still image of all of the content initially displayed on the web page (e.g., text, still images, and initial configurations of active content).
- the pre-render server may embed, in the still image, hyperlinks from the web page at appropriate locations in the still image so that, if the viewing user desires to follow a link to another web page before the web page is freshly rendered at the web client, the hyperlink can be clicked and followed from within the still image.
- storing the pre-rendered version of the web page may include generating, from the rendered web page and associated obtained resources as rendered, a single file or packet of files that includes the web page, substantially all of the resources for the web page (e.g., encoded and embedded within the single file or packet of files as described herein), and substantially all of the instructions needed by a web client for display of the web page and resources.
- Pre-render server 106 may store pre-rendered versions of web pages in a data structure that facilitates efficient identification of the stored pre-rendered versions.
- pre-render server 106 may store pre-rendered versions of various web pages organized by a date of the pre-render, organized by a geographical location or a language associated with the pre-rendered version, and/or organized by a particular host in a directory or database associated with that host.
- pre-render cache 304 may include a database associated with a news website host with a URL of www.samplenewssite.com and with a date of January 1, 2015 (e.g., a database entitled or indexed as "2015/01/01-www.samplenewssite.com").
- Pre-rendered web pages 305 in that database may include a pre-rendered web page associated with a URL of www.samplenewssite.com/ index.html as generated on 01/01/2015, a pre-rendered web page associated with a URL of www.samplenewssite.com/story1/index.html as generated on 01/01/2015, pre-rendered a web page associated with a URL of www.samplenewssite.com/story2/index.html as generated on 01/01/2015, a pre-rendered web page associated with a URL of www.samplenewssite.com/story1.html as generated on 01/01/2015, a pre-rendered web page associated with a URL of www.samplenewssite.com/date/story1.html as generated on 01/01/2015, a pre-rendered web page associated with a URL of www.samplenewssite.com/date/story2.html as generated on 01/01/2015, a pre-rendered web page associated with a URL of www.samplenewssite
- one or more pre-rendered versions may be stored in the pre-render cache for each web page (e.g., in a geography-specific database in the pre-render cache or a geography tagged or titled files in the pre-render cache).
- the operations described above in connection with blocks 600-606 may be repeated (e.g., until all web pages in a list have been pre-rendered, or continuously or periodically during operation of the pre-render server).
- a pre-render request for a particular web page may be received from a client device such as user device 102 of FIG. 1 .
- the pre-render request may be a pre-render request for a particular web page that is hosted on a particular server different from the pre-render server (e.g., web server 108 of FIG. 1 ).
- the pre-render server may determine whether a pre-rendered version of the particular web page of the pre-render request is present in the pre-render cache. For example, a pre-render request may identify a web page associated with a URL such as www.samplenewssite.com/date/story1.html. While web server 108 retrieves the file story1.html from directory /date/ at www.samplenewssite.com, pre-render server 106 may search a database associated with host www.samplenewssite.com in the pre-render cache for a filename or index associated with the file /date/story1.html (e.g., for a file entitled "pre-render_date/story1.com").
- determining whether a pre-rendered version of the particular web page of the pre-render request is present in the pre-render cache may include extracting and parsing (e.g., from a URL of the particular web page in the pre-render request) a host name and a file name for the web page prior to searching the database associated with the host.
- the pre-render server may send a pre-render response to the user device based on whether the pre-rendered version of the particular web page is present in the pre-render cache.
- the pre-render server may send a selected one of the pre-rendered versions of the particular web page to the user device.
- the pre-render server may provide a request such as a hypertext transfer protocol request to the particular web server of the particular web page and, at block 614 may provide a null response as the pre-render response to the user device.
- the operations described above in connection with blocks 602, 604, and 606 may be repeated for the particular web page to render and store a pre-rendered version of the particular web page for future pre-render requests.
- FIGS. 1-6 can provide users with faster, more efficient browsing of web pages. These systems and methods of the subject disclosure can be particularly beneficial to users with low computational power devices or with low network bandwidth.
- FIG. 7 conceptually illustrates an electronic system with which some implementations of the subject technology are implemented.
- Electronic system 700 can be a server (e.g., an implementation of web server 108 or pre-render server 106 of FIG. 1 ), a user device, a computer, a phone, a PDA, a tablet computer, a television with one or more processors embedded therein or coupled thereto, or generally any electronic device.
- Such an electronic system includes various types of computer readable media and interfaces for various other types of computer readable media.
- Electronic system 700 includes a bus 708, processing unit(s) 712, a system memory 704, a read-only memory (ROM) 710, a permanent storage device 702, an input device interface 714, an output device interface 706, and a network interface 716.
- ROM read-only memory
- Bus 708 collectively represents all system, peripheral, and chipset buses that communicatively connect the numerous internal devices of electronic system 700. For instance, bus 708 communicatively connects processing unit(s) 712 with ROM 710, system memory 704, and permanent storage device 702.
- processing unit(s) 712 retrieves instructions to execute and data to process in order to execute the processes of the subject disclosure.
- the processing unit(s) can be a single processor or a multi-core processor in different implementations.
- ROM 710 stores static data and instructions that are needed by processing unit(s) 712 and other modules of the electronic system.
- Permanent storage device 702 is a read-and-write memory device. This device is a non-volatile memory unit that stores instructions and data even when electronic system 700 is off. Some implementations of the subject disclosure use a mass-storage device (such as a magnetic or optical disk and its corresponding disk drive) as permanent storage device 702.
- system memory 704 is a read-and-write memory device. However, unlike storage device 702, system memory 704 is a volatile read-and-write memory, such a random access memory. System memory 704 stores some of the instructions and data that the processor needs at runtime.
- the processes of the subject disclosure are stored in system memory 704, permanent storage device 702, and/or ROM 710.
- the various memory units may include instructions for processing, generating, and/or providing verification requests and/or verification responses in accordance with some implementations. From these various memory units, processing unit(s) 712 retrieves instructions to execute and data to process in order to execute the processes of some implementations.
- Bus 708 also connects to input and output device interfaces 714 and 706.
- Input device interface 714 enables the user to communicate information and select commands to the electronic system.
- Input devices used with input device interface 714 include, for example, alphanumeric keyboards and pointing devices (also called “cursor control devices").
- Output device interfaces 706 enables, for example, the display of images generated by the electronic system 700.
- Output devices used with output device interface 706 include, for example, printers and display devices, such as cathode ray tubes (CRT) or liquid crystal displays (LCD). Some implementations include devices such as a touchscreen that functions as both input and output devices.
- CTR cathode ray tubes
- LCD liquid crystal displays
- bus 708 also couples electronic system 700 to a network (not shown) through a network interface 716.
- the computer can be a part of a network of computers (such as a local area network (“LAN”), a wide area network (“WAN”), or an Intranet, or a network of networks, such as the Internet. Any or all components of electronic system 700 can be used in conjunction with the subject disclosure.
- Some implementations include electronic components, such as microprocessors, storage and memory that store computer program instructions in a machine-readable or computer-readable medium (alternatively referred to as computer-readable storage media, machine-readable media, or machine-readable storage media).
- computer-readable media include RAM, ROM, read-only compact discs (CD-ROM), recordable compact discs (CD-R), rewritable compact discs (CD-RW), read-only digital versatile discs (e.g., DVD-ROM, dual-layer DVD-ROM), a variety of recordable/rewritable DVDs (e.g., DVD-RAM, DVD-RW, DVD+RW, etc.), flash memory (e.g., SD cards, mini-SD cards, micro-SD cards, etc.), magnetic and/or solid state hard drives, ultra density optical discs, any other optical or magnetic media, and floppy disks.
- CD-ROM compact discs
- CD-R recordable compact discs
- CD-RW rewritable compact disc
- the computer-readable media can store a computer program that is executable by at least one processing unit and includes sets of instructions for performing various operations.
- Examples of computer programs or computer code include machine code, such as is produced by a compiler, and files including higher-level code that are executed by a computer, an electronic component, or a microprocessor using an interpreter.
- ASICs application specific integrated circuits
- FPGAs field programmable gate arrays
- integrated circuits execute instructions that are stored on the circuit itself.
- the terms "computer”, “server”, “processor”, and “memory” all refer to electronic or other technological devices. These terms exclude people or groups of people.
- the terms “display” or “displaying” means displaying on an electronic device.
- the terms “computer readable medium” and “computer readable media” are entirely restricted to tangible, physical objects that store information in a form that is readable by a computer. These terms exclude any wireless signals, wired download signals, and any other ephemeral signals.
- implementations of the subject matter described in this specification can be implemented on a computer having a display device, such as a CRT (cathode ray tube) or LCD (liquid crystal display) monitor, for displaying information to the user and a keyboard and a pointing device, such as a mouse or a trackball, by which the user can provide input to the computer.
- a display device such as a CRT (cathode ray tube) or LCD (liquid crystal display) monitor
- keyboard and a pointing device such as a mouse or a trackball
- Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback, such as visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form, including acoustic, speech, or tactile input.
- a computer can interact with a user by sending documents to and receiving documents from a device that is used by the user; for example, by sending web pages or pre-rendered web pages to a web browser on a user's client device in response to requests received from the web browser.
- Embodiments of the subject matter described in this specification can be implemented in a computing system that includes a back end component, such as a data server, or that includes a middleware component, such as an application server, or that includes a front end component, such as a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described in this specification, or any combination of one or more such back end, middleware, or front end components.
- the components of the system can be interconnected by any form or medium of digital data communication, such as a communication network.
- Examples of communication networks include a local area network (“LAN”) and a wide area network (“WAN”), an inter-network (e.g., the Internet), and peer-to-peer networks (e.g., ad hoc peer-to-peer networks).
- LAN local area network
- WAN wide area network
- inter-network e.g., the Internet
- peer-to-peer networks e.g., ad hoc peer-to-peer networks.
- the computing system can include clients and servers.
- a client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.
- a server transmits data (e.g., an HTML page) to a client device (e.g., for purposes of displaying data to and receiving user input from a user interacting with the client device).
- client device e.g., for purposes of displaying data to and receiving user input from a user interacting with the client device.
- Data generated at the client device e.g., a result of the user interaction
- Computer readable storage medium also referred to as computer readable medium.
- processing unit(s) e.g., one or more processors, cores of processors, or other processing units
- processing unit(s) e.g., one or more processors, cores of processors, or other processing units
- Examples of computer readable media include, but are not limited to, CD-ROMs, flash drives, RAM chips, hard drives, EPROMs, etc.
- the computer readable media does not include carrier waves and electronic signals passing wirelessly or over wired connections.
- the term "software” is meant to include firmware residing in read-only memory or applications stored in magnetic storage, which can be read into memory for processing by a processor.
- multiple software aspects of the subject disclosure can be implemented as sub-parts of a larger program while remaining distinct software aspects of the subject disclosure.
- multiple software aspects can also be implemented as separate programs.
- any combination of separate programs that together implement a software aspect described here is within the scope of the subject disclosure.
- the software programs when installed to operate on one or more electronic systems, define one or more specific machine implementations that execute and perform the operations of the software programs.
- a computer program (also known as a program, software, software application, script, or code) can be written in any form of programming language, including compiled or interpreted languages, declarative or procedural languages, and it can be deployed in any form, including as a stand alone program or as a module, component, subroutine, object, or other unit suitable for use in a computing environment.
- a computer program may, but need not, correspond to a file in a file system.
- a program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub programs, or portions of code).
- a computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
- any specific order or hierarchy of blocks in the processes disclosed is an illustration of example approaches. Based upon design preferences, it is understood that the specific order or hierarchy of blocks in the processes may be rearranged, or that all illustrated blocks be performed. Some of the blocks may be performed simultaneously. For example, in certain circumstances, multitasking and parallel processing may be advantageous. Moreover, the separation of various system components in the embodiments described above should not be understood as requiring such separation in all embodiments, and it should be understood that the described program components and systems can generally be integrated together in a single software product or packaged into multiple software products.
- a user may be provided with controls allowing the user to make an election as to both if and when systems, programs or features described herein may enable collection of user information (e.g., information about a user's preferences, or a user's current geographical location), and if the user is sent content or communications from a server.
- user information e.g., information about a user's preferences, or a user's current geographical location
- certain data may be treated in one or more ways before it is stored or used, so that personally identifiable information is removed.
- a user's identity may be treated so that no personally identifiable information can be determined for the user, or a user's geographic location may be generalized where location information is obtained (such as to a city, ZIP code, or state level), so that a particular location of a user cannot be determined.
- the user may have control over what information is collected about the user, how that information is used, and what information is provided to the user.
- the term website may include any aspect of a website, including one or more web pages, one or more servers used to host or store web related content, and the like. Accordingly, the term website may be used interchangeably with the terms web page and server.
- the predicate words “configured to”, “operable to”, and “programmed to” do not imply any particular tangible or intangible modification of a subject, but, rather, are intended to be used interchangeably.
- a processor configured to monitor and control an operation or a component may also mean the processor being programmed to monitor and control the operation or the processor being operable to monitor and control the operation.
- a processor configured to execute code can be construed as a processor programmed to execute code or operable to execute code
- a phrase such as an "aspect” does not imply that such aspect is essential to the subject technology or that such aspect applies to all configurations of the subject technology.
- a disclosure relating to an aspect may apply to all configurations, or one or more configurations.
- a phrase such as an aspect may refer to one or more aspects and vice versa.
- a phrase such as a “configuration” does not imply that such configuration is essential to the subject technology or that such configuration applies to all configurations of the subject technology.
- a disclosure relating to a configuration may apply to all configurations, or one or more configurations.
- a phrase such as a configuration may refer to one or more configurations and vice versa.
- a pre-render server may generate and store pre-rendered versions of web pages in a pre-render cache.
- a web client may concurrently send a pre-render request for the web page to the pre-render server and a request for the web page to a web server of the web page.
- the web client may receive a pre-rendered version of the web page from the pre-render server and a response from the web server.
- the web client may provide the pre-rendered version of the web page for display while rendering the web page, in the background, based on the response from the web server.
- the web client may provide the freshly rendered web page for display in place of the pre-rendered version.
- example is used herein to mean “serving as an example or illustration.” Any aspect or design described herein as “example” is not necessarily to be construed as preferred or advantageous over other aspects or design
Description
- The present description relates generally to displaying web pages, and more particularly, but not exclusively, to efficient web page display using pre-rendering.
- Web pages, particularly rich and dynamic web pages, can take time to load with a web browser. In particular, in order to load a web page associated with a single uniform resource locator (URL) request, there can be as many as, or more than, 100 sub-resources that are obtained and rendered. Sub-resources can include JavaScript resources, style sheet (e.g., cascade style sheet or CSS) resources, and image files. Obtaining and rendering all of the resources for each web page can thus cause an undesirable delay in displaying the web page to a user.
-
US 2015/0310126A1 relates to the process of rendering web pages with a content delivery system that pre-renders web content for a client device. A web page program can be preexecuted and the result delivered to a requesting client device, rather than or before sending a traditional set of web page components, such as a markup language document, cascading style sheets, embedded objects. - Diego Zanon: "AngularJS: How to create a SPA crawlable and SEO friendly?", 23 August 2015, discloses AngularJS for avoiding full page reloads, and requesting just what is needed when switching to another web page by using SPA (Single-Page Application) which enables thewebsite to provide a more fluid user experience, wherein when a page is loaded, one can browse other links and load new content without the need of a full page reload, wherein only one piece of the page is discarded and replaced by the content of the next page.
- The scope of the invention is defined by the referenced independent claims to which reference should be made. Preferable embodiments are defined by the dependent claims.
- Certain features of the subject technology are set forth in the appended claims. However, for purpose of explanation, several embodiments of the subject technology are set forth in the following figures.
-
FIG. 1 illustrates an example system for web page display in accordance with various aspects of the subject technology. -
FIG. 2 illustrates an example web server in accordance with various aspects of the subject technology. -
FIG. 3 illustrates an example pre-render server in accordance with various aspects of the subject technology. -
FIG. 4 illustrates a flow diagram of an example process for displaying a web page with a web client of a user device in accordance with various aspects of the subject technology. -
FIG. 5 illustrates a flow diagram of an example process for displaying a web page based on a pre-render response and a response from the web server in accordance with various aspects of the subject technology. -
FIG. 6 illustrates a flow diagram of an example process for providing pre-rendered versions of web pages from a pre-render server in accordance with various aspects of the subject technology. -
FIG. 7 conceptually illustrates an electronic system with which some implementations of the subject technology may be implemented in accordance with various aspects of the subject technology. - The detailed description set forth below is intended as a description of various configurations of the subject technology and is not intended to represent the only configurations in which the subject technology may be practiced. The appended drawings are incorporated herein and constitute a part of the detailed description. The detailed description includes specific details for the purpose of providing a thorough understanding of the subject technology.
- In some instances, well-known structures and components are shown in block diagram form in order to avoid obscuring the concepts of the subject technology.
- The subject disclosure provides systems and methods for reducing web page display times. In some scenarios, a web browser of a user device can locally store some or all of the resources in a cache for a previously-loaded web page so that the resources can be obtained faster to reduce future load times. However, a cache of this type can provide limited or no benefit for web pages that have not been previously loaded by a user or that have not been recently loaded by the user with that particular user device. In other scenarios, linked sub-pages of a currently loaded web page can be pre-rendered by the user's device in the background, while the user views the currently loaded web page, in anticipation of the user navigating to the linked sub-page. However, pre-rendering of linked sub-pages in this way can be undesirably demanding of the user's system resources, particularly for mobile devices.
- In particular, the subject disclosure provides systems and methods for providing a pre-rendered version of a web page for display, while rendering the web page. When the web page resources have been obtained and the web page rendered, the pre-rendered web page may be replaced with the freshly rendered web page. In this way, a user can be quickly provided with a visual display of the web page (e.g., the pre-rendered version of the web page), while the resources of the web page are obtained and the web page is rendered. The user can then be provided with a freshly rendered web page that replaces the pre-rendered version.
- In one implementation, a system may include a plurality of user devices, one or more web servers, and one or more pre-render servers communicatively coupled via a network such as the Internet. Each user device may include a web client such as a web browser application, communications circuitry, and a display. For example,
FIG. 1 shows an exemplary implementation in which auser device 102 having a web client such as web browser application 104 (sometimes referred to herein as a browser or a web browser) interacts with apre-render server 106 and aweb server 108 for display of a web page. Although the diagram ofFIG. 1 depicts direct communications betweenuser device 102 and pre-renderserver 106, betweenuser device 102 andweb server 108 and betweenpre-render server 106 andweb server 108, it should be appreciated that these communications may be exchanged via a network such as the Internet. - In an exemplary operation, when a user desires to load a web page, the user may provide input to
user device 102 to indicate the desire to load the web page (e.g., by entering a URL of the web page into theweb browser application 104 or clicking a link to the URL). Of course it should be appreciated that, in other scenarios, a web page load may be initiated automatically by a computing system without receiving a user input. - Responsive to the user input (or other automatic web page load initiation operations), the
web browser application 104 sends two requests to two different servers. In particular, as shown in the example ofFIG. 1 ,web browser 104 sends a request (e.g., a hypertext transfer protocol (HTTP) request, a Gopher request, a SPDY® request, or other suitable web page request) to web server 108 (e.g., a web server that hosts and/or serves the web page such as a web server associated with the URL of the web page) and a pre-render request to pre-renderserver 106. Pre-renderserver 106 is a different server fromweb server 108. For example, pre-renderserver 106 may be located at a different IP address fromweb server 108 in some implementations. - The web client (e.g., web browser application 104) then receives two responses. In particular, as shown in the example of
FIG. 1 ,web browser application 104 receives a response such as an HTTP response fromweb server 108 and a pre-render response frompre-render server 106. The pre-render response includes a pre-rendered version of the web page. The pre-rendered version of the web page includes a serialized hypertext markup language (HTML) file for the web page. - In an example not part of the invention, if pre-render
server 106 does not have a stored pre-rendered version of the web page, the pre-render response may be a null response or other notification to the web client (e.g., to web browser application 104) that no pre-rendered version of the web page is available. As shown inFIG. 1 , if pre-renderserver 106 does not have a stored pre-rendered version of the web page, pre-renderserver 106 may send an additional request (e.g., an HTTP request or other suitable web page request) toweb server 108 so that pre-renderserver 106 can render and store the web page for future pre-render requests. - In an exemplary operation, a web client such as
browser 104 ofuser device 102 ofsystem 100 sends a request toweb server 108 for a web page. The request toweb server 108 may, for example, be an HTTP request. An HTTP request may include a request line including a request for a main or index file for the web page and a protocol identifier, a request header that includes (i) a host for the web page at which the index file is located, (ii) acceptable file type identifiers for the web client, (iii) a language preference identifier, (iv) a geographical location identifier for the web client, (v) acceptable encoding scheme identifiers for the web client, and/or (vi) a web client identifier, and a request body (as examples). - The web client of
user device 102 concurrently sends a pre-render request for the web page to pre-renderserver 106. The web client ofuser device 102 receives a pre-rendered version of the web page from thepre-render server 106. The web client ofuser device 102 receives a response fromweb server 108. For example, the response fromweb server 108 may include an HTML file for the web page. The web client ofuser device 102 provides the pre-rendered version of the web page for display while rendering the web page based on the response fromweb server 108. - The pre-rendered version of the web page is a serialized hypertext markup language file for the web page. Providing the pre-rendered version of the web page for display includes providing a serialized data file from which a clone of a previously rendered version of the web page can be generated for display in a browser window such that the clone is viewable, scrollable, and/or interactively available to a viewing user during rendering of the web page received from the web server. The serialized data file is a serialized hypertext markup language file for the web page.
- Rendering the web page may include receiving an HTTP response from web server 108 (e.g., a response that includes the requested main or index file for the web page), parsing the received main or index file, generating a Data Object Model (DOM) based on the parsed main or index file, requesting additional resources identified in the main or index file, obtaining the identified resources (e.g., by making additional HTTP requests to the web server and or other web servers), processing scripts and/or style sheets in the obtained resources, and/or modifying and/or supplementing the DOM based on the processed scripts and/or style sheets. The pre-rendered version of the web page is displayed and visible to a viewing user during these rendering operations.
- For example,
browser 104 may provide the pre-rendered version of the web page for display byuser device 102 using a display such as liquid crystal display (LCD), a light emitting diode (LED) display or other suitable display ofuser device 102. Upon completion of the rendering of the web page based on the response fromweb server 108, the web client ofuser device 102 may provide the rendered web page for display in place of the pre-rendered version of the web page. The display ofuser device 102 may then be updated with the provided rendered web page in place of the displayed pre-rendered version of the web page. - In various embodiments, the web client of
user device 102 may also receive additional information from pre-render server 106 (e.g., in addition to the pre-rendered version of the web page). For example, the additional information may include a warning or alert regarding content such as malicious content associated with the web page. The warning or alert may include a filename in the main or index file that is associated with malware or a virus or a domain or host in the main or index file or a linked location therein associated with malware or a virus. The web client ofuser device 102 may render the web page (e.g., while the pre-rendered version is displayed), at least in part, based on the additional information from the pre-render server. For example, the web client may use the warning or alert to render the web page without the malicious content. For example, the web client, while sending requests for resources in the received main or index file for a web page may omit a request for a file that has been flagged in the additional information from the pre-render server. In some embodiments,pre-render server 106 may also detect and remove the malicious content when generating the pre-rendered version of the web page. In this way, a pre-rendered version of a web page that is free of malicious content associated with the web page can be generated, stored in a pre-render cache, and provided to a client device in response to a pre-render request. - In some embodiments,
pre-render server 106 may be provided with advertisement management capabilities. For example, in some scenarios,pre-render server 106 may remove and/or replace advertisements in the web page for the pre-rendered version of the web page. As discussed in further detail hereinafter,pre-render server 106 may remove and/or modify advertisements in a web page based on user preferences (e.g., stored user preferences) , based on preferences, agreements and/or instructions fromweb server 108, and/or based on preferences, agreements, and/or instructions from particular advertisers. - In an example not part of the invention, the request from
user device 102 to web server 108 (e.g., an HTTP request) and the pre-render request fromuser device 102 may include the same information in a common format, may include the same information in a different format, or the pre-render request may include more, less, and/or different information than the request fromuser device 102 toweb server 108. As defined by the invention,pre-render server 106 is configured to receive and process a pre-render request that is an exact copy of the request sent concurrently toweb server 108. In this way, the processing resources ofuser device 102 and the complexity of the web client (e.g., browser 104) can be reduced by allowing the web client to request a pre-rendered version of a web page frompre-render server 106 by simply sending the same request to the two servers without generating a modified request for the pre-render server. -
Pre-render server 106 may store pre-rendered versions of various web pages associated with a particular host in a directory or database associated with that host. For example,pre-render cache 304 may include a database associated with a news website host with a URL of www.samplenewssite.com.Pre-rendered web pages 305 in that database may include a pre-rendered web page associated with a URL of www.samplenewssite.com/index.html, a pre-rendered web page associated with a URL of www.samplenewssite.com/story1/index.html, pre-rendered a web page associated with a URL of www.samplenewssite.com/story2/index.html, a pre-rendered web page associated with a URL of www.samplenewssite.com/story1.html, a pre-rendered web page associated with a URL of www.samplenewssite.com/date/story1.html, a pre-rendered web page associated with a URL of www.samplenewssite.com/date/story2.html, a pre-rendered web page associated with a URL of www.samplenewssite.com/storytitle1.html, and pre-rendered a web page associated with a URL of www.samplenewssite.com/storytitle2.html (as examples). - In this way, pre-render cache can store pre-rendered versions of web pages that can be quickly identified and returned in response to receiving a copy of an HTTP request for the web server of the page. For example, an HTTP request provided from the web client to
web server 108 andpre-render server 106 may include a request line for the file /date/story1.html and a request header that identifies www.samplenewssite.com as the host for that file. Whileweb server 108 retrieves the file story1.html from directory /date/ at www.samplenewssite.com, pre-render server may retrieve, from a database at the pre-render server titled "www.samplenewssite.com", a pre-rendered web page titled (for example) "pre-render_date/story1.com". The retrieved pre-rendered web page "pre-render_date/story1.com" (e.g. a serialized HTML file for a previously rendered version of the web page at www.samplenewssite.com/date/story1.html) may be sent to the requesting web client in response to the received HTTP request. - In other examples, not defined by the invention, the pre-render request may include less and/or different information from the request sent from
user device 102 toweb server 108. For example, in one embodiment, the pre-render request may include a subset of the information included in the request sent fromuser device 102 toweb server 108. In one particular exemplary configuration, the pre-render request may include only the URL of the web page or the URL of the web page and minimal identifying information for the web client (e.g., a browser identifier) and the user (e.g., a language preference or geographical location and/or one or more preferences as discussed herein).Pre-render server 106 may obtain pre-rendered versions of web pages that are stored together with the full URLs of the web pages or may parse the URL of a web page to identify a host and a filename for the web page for obtaining a stored pre-rendered version of the web page. For example,pre-render server 106 may receive a pre-render request that includes a URL of www.samplenewssite.com/date/story1.html .Pre-render server 106 may then extract a host (e.g., www.samplesnewssite.com) and a web page identifier (e.g., "/date/story1.html") from the URL.Pre-render server 106 may then retrieve, from a database at the pre-render server titled "www.samplenewssite.com", a pre-rendered web page titled (for example) "pre-render_date/story1.com". The retrieved pre-rendered web page "pre-render_date/story1.com" (e.g., an image of a previously rendered version of the web page at www.samplenewssite.com/date/story1.html or a serialized HTML file for a previously rendered version of the web page at www.samplenewssite.com/date/story1.html) may be sent to the requesting web client in response to the received pre-render request containing the URL. In this way, pre-rendered versions can be found in the pre-render cache and returned using only a URL of the desired web page received in the pre-render request, in accordance with some implementations. - In some examples, not defined by the invention, the pre-render request may include information that is not included in the HTTP request. For example, in some embodiments, the pre-render request may include advertisement replacement preferences, malicious content protection preferences, other preferences and/or request content that is associated with services offered by
pre-render server 106 that may not be offered byweb server 108. - In various eamples, not defined by the invention, advertisement replacement preferences included in the pre-render request may include user-selected or automatically-determined (e.g., browser-determined) preferences for removing web page advertisements and/or replacing web page advertisements with different web page advertisements in a pre-rendered version of the web page. For example, a particular pre-render request may include an indication of a user preference for advertisements related to a sports team, a particular retail outlet, or the like. In this scenario,
pre-render server 106 may replace an advertisement for one sports team in the web page with an advertisement for the preferred sports team in the pre-rendered version of the web page. These advertisement preference operations may provide the user with an enhanced browsing experience that may not be available in systems that do not include a pre-render server (e.g., because advertisement preference services are not offered by web server 108). - In one example scenario, not defined by the invention, a pre-render request may include a user request for advertisement removal (e.g., an identifier such as "remove-ads" may be included in a pre-render request header). In this example scenario, while rendering the web page at the pre-render server, the pre-render server may identify advertisement resources in the web page (e.g., based on an identified advertisement block in the main or index file of the web page, based on known filenames associated with advertisements, based on domain names or host names associated with advertisers or advertisement providers, or based on other advertisement information in the main or index file or other linked files associated with the web page), prevent retrieval of the identified advertisement resources, and replace the advertisement resources with blank content, with a removed-ad identifier, or with other content in various embodiments.
- In another example scenario, not defined by the invention, a pre-render request may include a user request for advertisement replacement with preferred advertiser content (e.g., an identifier such as "replace-ads:preferred_advertiser= 'advertiser1‴ may be included in a pre-render request header). In this example scenario, while rendering the web page at the pre-render server, the pre-render server may identify advertisement resources in the web page associated with advertisers other than the preferred advertiser (e.g., based on an identified advertisement block in the main or index file of the web page, based on known filenames associated with advertisements, based on domain names or host names associated with advertisers or advertisement providers, or based on other advertisement information in the main or index file or other linked files associated with the web page), prevent retrieval of the identified advertisement resources, retrieve advertisement content from the preferred advertiser, and replace the identified advertisement resources with the retrieved preferred advertiser advertisement resources.
- In some embodiments, not defined by the invention, a web client such as
browser 104 may determine user preferences such as advertisement preferences based on a browsing history or other online profile for that user. The browser-determined preferences may be automatically included in pre-render requests sent by that browser. - In various embodiments, not defined by the invention, malicious content protection preferences included in the pre-render request may include user-selected or automatically-determined (e.g., browser-determined) preferences for removing malicious content from a web page for a pre-rendered version of the web page and/or for providing warnings related to malicious content in the web page. For example, a particular pre-render request may include an indication of a user preference (e.g., a high-security preference, a medium-security preference, or a low-security reference) for malicious content management. In this scenario,
pre-render server 106 may block only the highest-risk content when a low-security preference is received in a pre-render request and may block progressively less risky content when a medium-security or high-security preference is received in a pre-render request. These malicious content management preference operations may provide the user with an enhanced browsing experience that may not be available in systems that do not include a pre-render server. - However, these examples, which are not defined by the invention, and in which advertisement and/or malicious content management by
pre-render server 106 is based on user preferences included in a pre-render request are merely illustrative. In other embodiments, advertisement and/or malicious content management may be performed bypre-render server 106 without user preferences (e.g., based on server standards and/or agreements) orpre-render server 106 may provide pre-rendered versions of web pages without any advertisement or malicious content management. -
FIG. 2 conceptually illustrates an exemplary implementation ofweb server 108 in accordance with various aspects of the subject technology. As shown inFIG. 2 ,web server 108 may include processingcircuitry 200,memory 202, andcommunications circuitry 208.Processing circuitry 200 may include one or more processors configured to receive, viacommunications circuitry 208, web page requests and provide responses to the received web page requests. For example,processing circuitry 200 may include one or more microprocessors, multi-core processors, and/or one or more integrated circuits, such as application specific integrated circuits (ASICs) or field programmable gate arrays (FPGAs) that load and execute sequences of instructions, software modules, etc.Processing circuitry 200 may execute instructions stored inmemory 202. In some implementations, such integrated circuits execute instructions that are stored on the circuit itself. -
Memory 202 may store various web pages 204 (e.g., source code for each of a plurality of web pages hosted by server 108) and web page resources 206 (e.g., text files, image files, scripts, etc.), associated withweb pages 204.Processing circuitry 200 may be operated to retrieveweb pages 204,resources 206, and/or other remotely hosted web pages and/or resources. The retrievedweb pages 204,resources 206, and/or other remotely hosted web pages and/or resources may be provided, byprocessor 200, to various client devices responsive to client requests usingcommunications circuitry 208.Memory 202 may include computer-readable media such as RAM, ROM, read-only compact discs (CD-ROM), recordable compact discs (CD-R), rewritable compact discs (CD-RW), read-only digital versatile discs (e.g., DVD-ROM, dual-layer DVD-ROM), a variety of recordable/rewritable DVDs (e.g., DVD-RAM, DVD-RW, DVD+RW, etc.), flash memory (e.g., SD cards, mini-SD cards, micro-SD cards, etc.), magnetic and/or solid state hard drives, ultra density optical discs, any other optical or magnetic media, and floppy disks. In addition toweb pages 204 andweb page resources 206,memory 202 can store sets of instructions/code that are executable by processingcircuitry 200 including sets of instructions/code that implement the processes described herein. Examples of computer programs or computer code include machine code, such as is produced by a compiler, and files including higher-level code that are executed by a computer, an electronic component, or a microprocessor using an interpreter. -
Communications circuitry 208 may include transceiver circuitry, signal processing circuitry, signal generation circuitry, and/or other communications circuitry forcommunicatively coupling server 108 to a network of computers such as a local area network ("LAN"), a wide area network ("WAN"), or an Intranet, or a network of networks, such as the Internet as would be understood by one skilled in the art. -
Processing circuitry 200,memory 202,communications circuitry 208, and/or other components ofserver 108 may be communicatively connected by a system bus (not shown) that includes system, peripheral, and chipset buses that communicatively connect the numerous internal devices a server such asserver 108 as would be understood by one skilled in the art. For instance, a bus may be provided that communicatively connectsprocessing circuitry 200 withmemory 202, andcommunications circuitry 208. -
FIG. 3 conceptually illustrates an exemplary implementation ofpre-render server 106 in accordance with various aspects of the subject technology. As shown inFIG. 3 ,pre-render server 106 may include processingcircuitry 300,memory 302, andcommunications circuitry 314. -
Processing circuitry 300 may include one or more processors configured to receive, viacommunications circuitry 314, pre-render requests and provide pre-render responses to the received pre-render requests. For example,processing circuitry 300 may include one or more microprocessors, multi-core processors, and/or one or more integrated circuits, such as application specific integrated circuits (ASICs) or field programmable gate arrays (FPGAs) that load and execute sequences of instructions, software modules, etc.Processing circuitry 300 may execute instructions stored inmemory 302. In some implementations, such integrated circuits execute instructions that are stored on the circuit itself. -
Memory 302 may include a pre-render cache that storespre-rendered web pages 305.Memory 302 may include computer-readable media such as RAM, ROM, read-only compact discs (CD-ROM), recordable compact discs (CD-R), rewritable compact discs (CD-RW), read-only digital versatile discs (e.g., DVD-ROM, dual-layer DVD-ROM), a variety of recordable/rewritable DVDs (e.g., DVD-RAM, DVD-RW, DVD+RW, etc.), flash memory (e.g., SD cards, mini-SD cards, micro-SD cards, etc.), magnetic and/or solid state hard drives, ultra density optical discs, any other optical or magnetic media, and floppy disks. In addition topre-render cache 304,memory 302 can store sets of instructions/code that are executable by processingcircuitry 300 including sets of instructions/code (e.g., arendering application 310 and/or a request forwarding application 312) that implement the processes described herein. Examples of computer programs or computer code with whichrendering application 310 and/or request forwardingapplication 312 can be implemented include machine code, such as is produced by a compiler, and files including higher-level code that are executed by a computer, an electronic component, or a microprocessor using an interpreter. -
Communications circuitry 314 may include transceiver circuitry, signal processing circuitry, signal generation circuitry, and/or other communications circuitry forcommunicatively coupling server 106 to a network of computers such as a local area network ("LAN"), a wide area network ("WAN"), or an Intranet, or a network of networks, such as the Internet as would be understood by one skilled in the art. -
Processing circuitry 300,memory 302,communications circuitry 314, and/or other components ofserver 106 may be communicatively connected by a system bus (not shown) that includes system, peripheral, and chipset buses that communicatively connect the numerous internal devices a server such asserver 106 as would be understood by one skilled in the art. For instance, a bus may be provided that communicatively connectsprocessing circuitry 300 withmemory 302, andcommunications circuitry 314. -
Pre-rendered web pages 305 may include pre-rendered versions of various web pages such asweb pages 204 ofFIG. 2 . As shown,pre-rendered web pages 305 includes serializedpre-rendered web pages 308. Serializedpre-rendered web pages 308 may include serialized versions of web pages such as serialized hypertext markup language versions of web pages. - A serialized version of a web page may include, for example, a single file or packet of files that includes the web page, substantially all of the resources for the web page, and substantially all of the instructions needed by a web client for display of the web page and resources. The serialized version may be coded in accordance with one of various serialization standards as would be understood by one skilled in the art. For example, in some implementations, a serialized version of a web page may include one or more embedded coded strings that are not readable by humans. The coded strings may be embedded within human-readable/machine-readable code such as HTML code. For example, for a web page that contains an image,
pre-render server 106 serializes the web page, in part, by encoding a separate binary-format version of the image into a more compact non-human-readable string (e.g., an ASCII string coded in a Base64 or other binary-to-text encoding format), and embedding the string within the serialized web page source. For example, the string may be included as a source to an <img> tag in a serialized HTML file for the web page. Serialization of the webpage in that manner allows to retrieve the serialized version of the webpage from the pre-render server with a single request and thus makes obtaining the pre-rendered version of the webpage from the pre-render server particularly efficient in comparison to obtaining the webpage from its original webserver and other servers on which content, such as for example images, for the webpage is hosted. -
Processing circuitry 300 may be operated to render web pages (e.g., according to instructions associated with arendering application 310 stored in memory 302) to form pre-rendered versions of the web pages, store the pre-rendered versions of the web pages inpre-render cache 304, and retrievepre-rendered web pages 305 from the pre-render cache. The retrieved pre-rendered web pages 305 (e.g., pre-rendered versions of web pages 204) may be sent, byprocessor 300, to various client devices responsive to client pre-render requests usingcommunications circuitry 314. - In an exemplary operation,
pre-render server 106 may receive, from a client device such asuser device 102 ofFIG. 1 , a pre-render request for a web page. Responsive to the pre-render request,processing circuitry 300 may be operated to determine whether a pre-rendered version of the web page is present in pre-render cache 304 (e.g., by determining whether one of a plurality ofpre-rendered web pages 305 corresponds to the web page). If a pre-rendered version of the web page is present inpre-render cache 304,processing circuitry 300 may cooperate withcommunications circuitry 314 to send the pre-rendered version of the web page to the requesting client device. - If no pre-rendered version of the web page is present in
pre-render cache 304,processing circuitry 300 may cooperate with communications circuitry 314 (e.g., according to instructions associated with arequest forwarding application 312 stored in memory 302) to send (e.g., forward) a request for the web page toweb server 108.Rendering application 310 may then render the web page based on one or more responses fromweb server 108 and store the rendered web page as apre-rendered web page 305 for a later pre-render request for that web page. -
Pre-render server 106 may manage pre-rendered versions of web pages inpre-render cache 304 to ensure that updated pre-rendered versions are available in the cache and/or avoid inefficient use of storage space. For example,pre-render server 106 may periodically request and render a new version of a web page for which a pre-rendered version of the web page is already stored in the pre-render cache. The newly rendered version of the web page may be stored in place of or in addition to previously rendered versions of the web page. For example, in one implementation, one or more previously rendered versions of the web page that are stored as pre-rendered versions of the web page may be deleted from the pre-render cache and replaced with the newly rendered version. In another implementation, one or more previously rendered versions of the web page that are stored as pre-rendered versions of the web page in the pre-render cache may be moved to an archive database at thepre-render server 106 or remote frompre-render server 106 and replaced with the newly rendered version. - As examples, removal and/or updating of pre-rendered versions of web pages stored in the pre-render cache may be performed based on the age of the pre-rendered versions (e.g., a set of the oldest pre-rendered web pages in the cache may be removed periodically), and/or based on popularity of the web page (e.g., pre-rendered versions of frequently-requested web pages may be frequently updated and replaced and/or pre-rendered versions of infrequently-requested web pages may be removed without replacement).
- In some implementations, removal and/or updating of pre-rendered versions of web pages stored in the pre-render cache may be performed based on web page content. For example, pre-rendered versions of web pages that include content that is updated multiple times per day (e.g., based on news updates or other content updates) may be removed and replaced with newly pre-rendered versions multiple times per day.
- In various embodiments, some or all of
pre-rendered web pages 305 may differ from the web pages with which they are associated (e.g., by including different advertisements or removed malicious content as discussed herein). -
Pre-render server 106 may accumulate pre-rendered web pages inpre-render cache 304 based on pre-render requests from users and/or based on lists (e.g., popularity-sorted lists) of web pages known to exist. For example,pre-render server 106 may send requests such as HTTP requests to various web servers associated with various web pages, obtain the associated resources for each web page, render each web page, and store a pre-rendered version of each of the various web pages inpre-render cache 304. - In some embodiments,
pre-render server 106 may render and store a plurality of pre-rendered versions of each web page. Web pages may be provided to users with content that is included particularly for that user. For example, a web server may provide web pages with different geography-based content to users in different geographical locations (e.g., in different countries, in different states, in different cities, etc.). The different content may include different information such as different articles, different images, or different advertisements and/or may include the same information presented differently (e.g., in a different format or in a different human language). -
Pre-render server 106 may render and store more than one pre-rendered version of a web page, each with geography-based content as discussed herein. For example,pre-render server 106 may use proxy servers in various geographical locations to send requests toweb server 108 to receive web pages fromweb server 108 that are specific to the various geographical locations. In this way, a pre-rendered version of the web page may be generated that includes geography-based content and the pre-render cache may include at least one additional pre-rendered version of the web page that includes different geography-based content in some embodiments. Geography-specific pre-rendered versions of each web page may be stored in geography-specific databases or directories in the pre-render cache or may be stored in a common directory for that web page and labeled with geography-based filenames or other geography-based identifiers. For example, pre-rendered European and U.S. versions of a web page with a URL of www.samplenewssite.com/story1.html may be stored in database for www.samplenewssite.com in a pre-render cache as /EP/story1.html and /US/story1.html or as /EP-story1.html and /US-story1.html (as examples). The European and U.S. versions of the web page may include similar content in different languages (e.g., common articles respectively in French and English) and/or different content (e.g., different headline stories related to different events respectively in Europe and the United States). The European and U.S. versions of the web page may be versions of the web page that would be displayed to user accessing the web page from a user device located respectively in Europe and the U.S. - A geography-specific pre-rendered version of a web page, specific to a particular geographical region, may then be selected from multiple pre-rendered versions of that web page in
pre-render cache 304 responsive to a pre-render request from a client device in that particular geographical location (e.g., based on an identified location of the requesting client device and/or based on a geographical identifier in a pre-render request header). -
FIG. 4 depicts a flow diagram of an example process for displaying a web page with a client device, according to aspects of the subject technology. For explanatory purposes, the example process ofFIG. 4 is described herein with reference to the components ofFIGS. 1-3 . Further for explanatory purposes, the blocks of the example process ofFIG. 4 are described herein as occurring in serial, or linearly. However, multiple blocks of the example process ofFIG. 4 may occur in parallel. In addition, the blocks of the example process ofFIG. 4 need not be performed in the order shown and/or one or more of the blocks of the example process ofFIG. 4 need not be performed. - In the depicted example flow diagram, at
block 400, an electronic device such asuser device 102 ofFIG. 1 uses a web client to send a request (e.g., an HTTP request) to a web server of a web page such asweb server 108. - At
block 402, with the web client, a pre-render request for the web page is sent to a pre-render server such aspre-render server 106. - At
block 404, with the web client, a pre-render response is received from the pre-render server. In some embodiments, additional information may be received with or within the pre-render response. For example, the additional information may include a warning associated with content of the web page such as malicious content (e.g., malware, a virus, etc.). - At
block 406, with the web client, a response such as an HTTP response may be received from the web server. - At
block 408, with the web client, the web page may be provided for display based on the pre-render response and the response from the web server. In some embodiments, the web page may be provided for display based on the additional information received from the pre-render server. Illustrative operations that may be performed for providing the web page for display based on the pre-render response, the response from the web server, and/or the additional information as described above in connection withblock 408 are shown inFIG. 5 . - In an example not defined by the invention, as shown in
FIG. 5 , atblock 500, the web client may determine whether the pre-render response received frompre-render server 106 includes a pre-rendered version of the web page. - If it is determined that the pre-render response does not include a pre-rendered version of the web page (e.g., if the pre-render response is a null response), at
block 502, the web client may render the web page based on the response (e.g., a HTTP response) received from the web server and, atblock 504, provide the rendered web page for display upon completion of the rendering. Providing the rendered web page for display may include providing the web page to display circuitry of the client device for display to a user. - If it is determined that the pre-render response includes a pre-rendered version of the web page, at
block 506, the web client may provide the pre-rendered version of the web page for display while rendering the web page based on the response (e.g., an HTTP response) from the web server (e.g., in the background). If additional information (e.g., a warning regarding malicious content in the web page) has been received from the pre-render server, while the pre-rendered version is displayed, the web page may be rendered based on the response from the web server and based on the additional information (e.g., by removing the malicious content). - At
block 508, upon completion of the rendering of the web page based on the response from the web server and/or the additional information from the pre-render server, the web client may provide the rendered web page for display in place of the pre-rendered version of the web page. The display circuitry may then replace, on the display, the pre-rendered version of the web page with the freshly rendered version of the web page. - The display circuitry may replace the pre-rendered version with the freshly rendered version in by replacing the displayed pre-rendered version with the freshly rendered version in a manner that is detectable or undetectable by the viewing user. For example, the display circuitry may fade out the pre-rendered version while fading in the freshly rendered web page, may fade out portions (e.g., active portions) of the pre-rendered version while fading in corresponding portions of the freshly rendered web page while leaving other portions (e.g., inactive portions) of the pre-rendered web page displayed, or may otherwise replace the pre-rendered version of the web page with the freshly rendered version of the web page in a manner that provides a visual indication to the viewing user that the pre-rendered version is being replaced. However, this example is merely illustrative. In another example, the display circuitry may replace the entirety of the pre-rendered version with the entirety of the freshly rendered web page during a display refresh period so that the replacement is visually undetectable to the viewing user. In yet another example, the display circuitry may replace portions (e.g., active portions) of the pre-rendered version with corresponding portions of the freshly rendered web page during a display refresh period so that the replacement is visually undetectable to the viewing user.
- In one implementation , not defined by the invention, in which the pre-rendered version of the web page is an image of the web page, portions of the image that correspond to active links, video, or other active portions of the web page can be instantaneously (e.g., between display refresh frames), or smoothly replaced on the display with the corresponding active links, video, etc.
-
FIG. 6 depicts a flow diagram of an example process for providing pre-rendered versions of a web page, according to aspects of the subject technology. For explanatory purposes, the example process ofFIG. 6 is described herein with reference to the components ofFIGS. 1-3 . Further for explanatory purposes, the blocks of the example process ofFIG. 6 are described herein as occurring in serial, or linearly. However, multiple blocks of the example process ofFIG. 6 may occur in parallel. In addition, the blocks of the example process ofFIG. 6 need not be performed in the order shown and/or one or more of the blocks of the example process ofFIG. 6 need not be performed. - In the depicted example flow diagram, at
block 600, a pre-render server such aspre-render server 106 ofFIGS. 1 and3 may provide requests such as HTTP requests to one or more servers of one or more web pages. The requests may be provided in response to determining that a web page does not have a pre-rendered version present in a pre-render cache of the pre-render server and/or based on a list of web pages for pre-rendering. - At
block 602, the pre-render server may receive responses such as HTTP responses from the web servers for the one or more web pages in response to the provided requests. - At
block 604, the one or more web pages may be rendered, by the pre-render server, based on the received responses from the one or more web servers. - At
block 606, each rendered web page may be stored as a pre-rendered version of that web page in a pre-render cache. For example, storing a pre-rendered version of the web page may include generating a still image of the rendered web page and saving the still image, with identifying information for the web page, in the pre-render cache. The still image may be devoid of active content or may include embedded links for obtaining active content. For example, the pre-render server may capture and store a still image of all of the content initially displayed on the web page (e.g., text, still images, and initial configurations of active content). However, in some scenarios, the pre-render server may embed, in the still image, hyperlinks from the web page at appropriate locations in the still image so that, if the viewing user desires to follow a link to another web page before the web page is freshly rendered at the web client, the hyperlink can be clicked and followed from within the still image. - As another example, storing the pre-rendered version of the web page may include generating, from the rendered web page and associated obtained resources as rendered, a single file or packet of files that includes the web page, substantially all of the resources for the web page (e.g., encoded and embedded within the single file or packet of files as described herein), and substantially all of the instructions needed by a web client for display of the web page and resources.
-
Pre-render server 106 may store pre-rendered versions of web pages in a data structure that facilitates efficient identification of the stored pre-rendered versions. For example,pre-render server 106 may store pre-rendered versions of various web pages organized by a date of the pre-render, organized by a geographical location or a language associated with the pre-rendered version, and/or organized by a particular host in a directory or database associated with that host. For example,pre-render cache 304 may include a database associated with a news website host with a URL of www.samplenewssite.com and with a date of January 1, 2015 (e.g., a database entitled or indexed as "2015/01/01-www.samplenewssite.com").Pre-rendered web pages 305 in that database may include a pre-rendered web page associated with a URL of www.samplenewssite.com/ index.html as generated on 01/01/2015, a pre-rendered web page associated with a URL of www.samplenewssite.com/story1/index.html as generated on 01/01/2015, pre-rendered a web page associated with a URL of www.samplenewssite.com/story2/index.html as generated on 01/01/2015, a pre-rendered web page associated with a URL of www.samplenewssite.com/story1.html as generated on 01/01/2015, a pre-rendered web page associated with a URL of www.samplenewssite.com/date/story1.html as generated on 01/01/2015, a pre-rendered web page associated with a URL of www.samplenewssite.com/date/story2.html as generated on 01/01/2015, a pre-rendered web page associated with a URL of www.samplenewssite.com/storytitle1.html as generated on 01/01/2015, and pre-rendered a web page associated with a URL of www.samplenewssite.com/storytitle2.html as generated on 01/01/2015 (as examples). In some embodiments, the database 2015/01/01-www.samplenewssite.com in the pre-render cache may be maintained and updated throughout the day on January 1, 2015 and may be deprecated, archived, and/or replaced on the following day (for example). - As discussed herein, in some embodiments, one or more pre-rendered versions (e.g., geography-specific versions having geography-based content associated with particular geographical location or region) may be stored in the pre-render cache for each web page (e.g., in a geography-specific database in the pre-render cache or a geography tagged or titled files in the pre-render cache). As indicated by
arrow 618, the operations described above in connection with blocks 600-606 may be repeated (e.g., until all web pages in a list have been pre-rendered, or continuously or periodically during operation of the pre-render server). - At
block 608, a pre-render request for a particular web page may be received from a client device such asuser device 102 ofFIG. 1 . The pre-render request may be a pre-render request for a particular web page that is hosted on a particular server different from the pre-render server (e.g.,web server 108 ofFIG. 1 ). - At
block 610, the pre-render server may determine whether a pre-rendered version of the particular web page of the pre-render request is present in the pre-render cache. For example, a pre-render request may identify a web page associated with a URL such as www.samplenewssite.com/date/story1.html. Whileweb server 108 retrieves the file story1.html from directory /date/ at www.samplenewssite.com,pre-render server 106 may search a database associated with host www.samplenewssite.com in the pre-render cache for a filename or index associated with the file /date/story1.html (e.g., for a file entitled "pre-render_date/story1.com"). In some scenarios, determining whether a pre-rendered version of the particular web page of the pre-render request is present in the pre-render cache may include extracting and parsing (e.g., from a URL of the particular web page in the pre-render request) a host name and a file name for the web page prior to searching the database associated with the host. The pre-render server may send a pre-render response to the user device based on whether the pre-rendered version of the particular web page is present in the pre-render cache. - For example, if it is determined that one or more pre-rendered versions of the particular web page of the pre-render request is present in the pre-render cache, at
block 616, the pre-render server may send a selected one of the pre-rendered versions of the particular web page to the user device. - In another example, if it is determined that no pre-rendered versions of the particular web page are present in the pre-render cache, at
block 612, the pre-render server may provide a request such as a hypertext transfer protocol request to the particular web server of the particular web page and, atblock 614 may provide a null response as the pre-render response to the user device. As indicated byarrow 620, the operations described above in connection withblocks - The systems and method discussed above in connection with, for example,
FIGS. 1-6 can provide users with faster, more efficient browsing of web pages. These systems and methods of the subject disclosure can be particularly beneficial to users with low computational power devices or with low network bandwidth. -
FIG. 7 conceptually illustrates an electronic system with which some implementations of the subject technology are implemented.Electronic system 700 can be a server (e.g., an implementation ofweb server 108 orpre-render server 106 ofFIG. 1 ), a user device, a computer, a phone, a PDA, a tablet computer, a television with one or more processors embedded therein or coupled thereto, or generally any electronic device. Such an electronic system includes various types of computer readable media and interfaces for various other types of computer readable media.Electronic system 700 includes abus 708, processing unit(s) 712, asystem memory 704, a read-only memory (ROM) 710, apermanent storage device 702, aninput device interface 714, anoutput device interface 706, and anetwork interface 716. -
Bus 708 collectively represents all system, peripheral, and chipset buses that communicatively connect the numerous internal devices ofelectronic system 700. For instance,bus 708 communicatively connects processing unit(s) 712 withROM 710,system memory 704, andpermanent storage device 702. - From these various memory units, processing unit(s) 712 retrieves instructions to execute and data to process in order to execute the processes of the subject disclosure. The processing unit(s) can be a single processor or a multi-core processor in different implementations.
-
ROM 710 stores static data and instructions that are needed by processing unit(s) 712 and other modules of the electronic system.Permanent storage device 702, on the other hand, is a read-and-write memory device. This device is a non-volatile memory unit that stores instructions and data even whenelectronic system 700 is off. Some implementations of the subject disclosure use a mass-storage device (such as a magnetic or optical disk and its corresponding disk drive) aspermanent storage device 702. - Other implementations use a removable storage device (such as a floppy disk, flash drive, and its corresponding disk drive) as
permanent storage device 702. Likepermanent storage device 702,system memory 704 is a read-and-write memory device. However, unlikestorage device 702,system memory 704 is a volatile read-and-write memory, such a random access memory.System memory 704 stores some of the instructions and data that the processor needs at runtime. In some implementations, the processes of the subject disclosure are stored insystem memory 704,permanent storage device 702, and/orROM 710. For example, the various memory units may include instructions for processing, generating, and/or providing verification requests and/or verification responses in accordance with some implementations. From these various memory units, processing unit(s) 712 retrieves instructions to execute and data to process in order to execute the processes of some implementations. -
Bus 708 also connects to input and output device interfaces 714 and 706.Input device interface 714 enables the user to communicate information and select commands to the electronic system. Input devices used withinput device interface 714 include, for example, alphanumeric keyboards and pointing devices (also called "cursor control devices"). Output device interfaces 706 enables, for example, the display of images generated by theelectronic system 700. Output devices used withoutput device interface 706 include, for example, printers and display devices, such as cathode ray tubes (CRT) or liquid crystal displays (LCD). Some implementations include devices such as a touchscreen that functions as both input and output devices. - Finally, as shown in
FIG. 7 ,bus 708 also coupleselectronic system 700 to a network (not shown) through anetwork interface 716. In this manner, the computer can be a part of a network of computers (such as a local area network ("LAN"), a wide area network ("WAN"), or an Intranet, or a network of networks, such as the Internet. Any or all components ofelectronic system 700 can be used in conjunction with the subject disclosure. - These functions described above can be implemented in digital electronic circuitry, in computer software, firmware or hardware. The techniques can be implemented using one or more computer program products. Programmable processors and computers can be included in or packaged as mobile devices. The processes and logic flows can be performed by one or more programmable processors and by one or more programmable logic circuitry. General and special purpose computing devices and storage devices can be interconnected through communication networks.
- Some implementations include electronic components, such as microprocessors, storage and memory that store computer program instructions in a machine-readable or computer-readable medium (alternatively referred to as computer-readable storage media, machine-readable media, or machine-readable storage media). Some examples of such computer-readable media include RAM, ROM, read-only compact discs (CD-ROM), recordable compact discs (CD-R), rewritable compact discs (CD-RW), read-only digital versatile discs (e.g., DVD-ROM, dual-layer DVD-ROM), a variety of recordable/rewritable DVDs (e.g., DVD-RAM, DVD-RW, DVD+RW, etc.), flash memory (e.g., SD cards, mini-SD cards, micro-SD cards, etc.), magnetic and/or solid state hard drives, ultra density optical discs, any other optical or magnetic media, and floppy disks. The computer-readable media can store a computer program that is executable by at least one processing unit and includes sets of instructions for performing various operations. Examples of computer programs or computer code include machine code, such as is produced by a compiler, and files including higher-level code that are executed by a computer, an electronic component, or a microprocessor using an interpreter.
- While the above discussion primarily refers to microprocessor or multi-core processors that execute software, some implementations are performed by one or more integrated circuits, such as application specific integrated circuits (ASICs) or field programmable gate arrays (FPGAs). In some implementations, such integrated circuits execute instructions that are stored on the circuit itself.
- As used in this specification and any claims of this application, the terms "computer", "server", "processor", and "memory" all refer to electronic or other technological devices. These terms exclude people or groups of people. For the purposes of the specification, the terms "display" or "displaying" means displaying on an electronic device. As used in this specification and any claims of this application, the terms "computer readable medium" and "computer readable media" are entirely restricted to tangible, physical objects that store information in a form that is readable by a computer. These terms exclude any wireless signals, wired download signals, and any other ephemeral signals.
- To provide for interaction with a user, implementations of the subject matter described in this specification can be implemented on a computer having a display device, such as a CRT (cathode ray tube) or LCD (liquid crystal display) monitor, for displaying information to the user and a keyboard and a pointing device, such as a mouse or a trackball, by which the user can provide input to the computer. Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback, such as visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form, including acoustic, speech, or tactile input. In addition, a computer can interact with a user by sending documents to and receiving documents from a device that is used by the user; for example, by sending web pages or pre-rendered web pages to a web browser on a user's client device in response to requests received from the web browser.
- Embodiments of the subject matter described in this specification can be implemented in a computing system that includes a back end component, such as a data server, or that includes a middleware component, such as an application server, or that includes a front end component, such as a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described in this specification, or any combination of one or more such back end, middleware, or front end components. The components of the system can be interconnected by any form or medium of digital data communication, such as a communication network. Examples of communication networks include a local area network ("LAN") and a wide area network ("WAN"), an inter-network (e.g., the Internet), and peer-to-peer networks (e.g., ad hoc peer-to-peer networks).
- The computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other. In some embodiments, a server transmits data (e.g., an HTML page) to a client device (e.g., for purposes of displaying data to and receiving user input from a user interacting with the client device). Data generated at the client device (e.g., a result of the user interaction) can be received from the client device at the server.
- Many of the above-described features and applications are implemented as software processes that are specified as a set of instructions recorded on a computer readable storage medium (also referred to as computer readable medium). When these instructions are executed by one or more processing unit(s) (e.g., one or more processors, cores of processors, or other processing units), they cause the processing unit(s) to perform the actions indicated in the instructions. Examples of computer readable media include, but are not limited to, CD-ROMs, flash drives, RAM chips, hard drives, EPROMs, etc. The computer readable media does not include carrier waves and electronic signals passing wirelessly or over wired connections.
- In this specification, the term "software" is meant to include firmware residing in read-only memory or applications stored in magnetic storage, which can be read into memory for processing by a processor. Also, in some implementations, multiple software aspects of the subject disclosure can be implemented as sub-parts of a larger program while remaining distinct software aspects of the subject disclosure. In some implementations, multiple software aspects can also be implemented as separate programs. Finally, any combination of separate programs that together implement a software aspect described here is within the scope of the subject disclosure. In some implementations, the software programs, when installed to operate on one or more electronic systems, define one or more specific machine implementations that execute and perform the operations of the software programs.
- A computer program (also known as a program, software, software application, script, or code) can be written in any form of programming language, including compiled or interpreted languages, declarative or procedural languages, and it can be deployed in any form, including as a stand alone program or as a module, component, subroutine, object, or other unit suitable for use in a computing environment. A computer program may, but need not, correspond to a file in a file system. A program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub programs, or portions of code). A computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
- It is understood that any specific order or hierarchy of blocks in the processes disclosed is an illustration of example approaches. Based upon design preferences, it is understood that the specific order or hierarchy of blocks in the processes may be rearranged, or that all illustrated blocks be performed. Some of the blocks may be performed simultaneously. For example, in certain circumstances, multitasking and parallel processing may be advantageous. Moreover, the separation of various system components in the embodiments described above should not be understood as requiring such separation in all embodiments, and it should be understood that the described program components and systems can generally be integrated together in a single software product or packaged into multiple software products.
- Further to the descriptions above, a user may be provided with controls allowing the user to make an election as to both if and when systems, programs or features described herein may enable collection of user information (e.g., information about a user's preferences, or a user's current geographical location), and if the user is sent content or communications from a server. In addition, certain data may be treated in one or more ways before it is stored or used, so that personally identifiable information is removed. For example, a user's identity may be treated so that no personally identifiable information can be determined for the user, or a user's geographic location may be generalized where location information is obtained (such as to a city, ZIP code, or state level), so that a particular location of a user cannot be determined. Thus, the user may have control over what information is collected about the user, how that information is used, and what information is provided to the user.
- The previous description is provided to enable any person skilled in the art to practice the various aspects described herein. Various modifications to these aspects will be readily apparent to those skilled in the art, and the generic principles defined herein may be applied to other aspects. Thus, the claims are not intended to be limited to the aspects shown herein, but are to be accorded the full scope consistent with the language claims, wherein reference to an element in the singular is not intended to mean "one and only one" unless specifically so stated, but rather "one or more." Unless specifically stated otherwise, the term "some" refers to one or more. Pronouns in the masculine (e.g., his) include the feminine and neuter gender (e.g., her and its) and vice versa. Headings and subheadings, if any, are used for convenience only and do not limit the subject disclosure.
- The term website, as used herein, may include any aspect of a website, including one or more web pages, one or more servers used to host or store web related content, and the like. Accordingly, the term website may be used interchangeably with the terms web page and server. The predicate words "configured to", "operable to", and "programmed to" do not imply any particular tangible or intangible modification of a subject, but, rather, are intended to be used interchangeably. For example, a processor configured to monitor and control an operation or a component may also mean the processor being programmed to monitor and control the operation or the processor being operable to monitor and control the operation. Likewise, a processor configured to execute code can be construed as a processor programmed to execute code or operable to execute code
- A phrase such as an "aspect" does not imply that such aspect is essential to the subject technology or that such aspect applies to all configurations of the subject technology. A disclosure relating to an aspect may apply to all configurations, or one or more configurations. A phrase such as an aspect may refer to one or more aspects and vice versa. A phrase such as a "configuration" does not imply that such configuration is essential to the subject technology or that such configuration applies to all configurations of the subject technology. A disclosure relating to a configuration may apply to all configurations, or one or more configurations. A phrase such as a configuration may refer to one or more configurations and vice versa.
- In a further example, a pre-render server may generate and store pre-rendered versions of web pages in a pre-render cache. To display a web page, a web client may concurrently send a pre-render request for the web page to the pre-render server and a request for the web page to a web server of the web page. The web client may receive a pre-rendered version of the web page from the pre-render server and a response from the web server. The web client may provide the pre-rendered version of the web page for display while rendering the web page, in the background, based on the response from the web server. Upon completion of the rendering, the web client may provide the freshly rendered web page for display in place of the pre-rendered version.
- The word "example" is used herein to mean "serving as an example or illustration." Any aspect or design described herein as "example" is not necessarily to be construed as preferred or advantageous over other aspects or design
- Furthermore, to the extent that the term "include," "have," or the like is used in the description or the claims, such term is intended to be inclusive in a manner similar to the term "comprise" as "comprise" is interpreted when employed as a transitional word in a claim.
Claims (8)
- A computer-implemented method, comprising:sending (400) a request for a web page from a web client of an electronic device (102) to a web server (108), the web page including at least one image;prior to receiving a response from the web server for the request for the web page, sending (402) from the web client of the electronic device a pre-render request for the web page to a pre-render server (106), the pre-render server being different than the web server, wherein the pre-render request is a copy of the request for the web page and is sent concurrently with the request for the web page to the web server;serializing, by the pre-render server, at least one of a hypertext markup language file for the web page, at least in part, by encoding a separate binary-format version of the at least one image into a non-human-readable string, and embedding the non-human-readable string into the at least one serialized hypertext markup language file for the web page;receiving (404) at the web client of the electronic device a pre-render response from the pre-render server, the pre-render response comprising a pre-rendered version of the web page including the at least one serialized file for the web page;receiving (406) at the web client of the electronic device the response from the web server comprising a main or index file for the web page;providing (408) by the web client of the electronic device the pre-rendered version of the web page for display while rendering the web page based on the response from the web server; andupon completion of the rendering, providing (504) the rendered web page for display in place of the pre-rendered version of the web page.
- The computer-implemented method of claim 1, wherein the receiving at the web client of the pre-render response from the pre-render server, comprises receiving additional information regarding the web page from the pre-render server;wherein the web client, while sending requests for resources in the received main or index file for the web page, omits a request for a file that has been flagged as being malicious in the additional information from the pre-render server, andwherein the pre-rendered version of the web page, as received from the pre-render server, has malicious content removed therefrom.
- The computer-implemented method of claim 2, wherein the web page is rendered based, at least in part, on the additional information from the pre-render server.
- The computer-implemented method of claim 3, wherein the additional
information comprises a warning associated with content of the web page. - A system, comprising:one or more processors; anda memory device including processor-readable instructions, which when executed by the one or more processors, configure the one or more processors to perform operations comprising:sending (400) a request for a web page to a web server (108), the web page including at least one image;prior to receiving a response from the web server for the request for the web page, sending (402) a pre-render request for the web page to a pre-render server (106), the pre-render server being different than the web server, wherein the pre-render request is a copy of the request for the web page and is sent concurrently with the request for the web page to the web server;serializing, by the pre-render server, at least one of a hypertext markup language file for the web page, at least in part, by encoding a separate binary-format version of the at least one image into a non-human-readable-string, and embedding the non-human-readable string into the at least one serialized hypertext markup language file for the web page;receiving (404) a pre-rendered version of the web page from the pre-render server, wherein the pre-rendered version of the web page includes the at least one serialized HTML file for the web page;receiving (406) the response from the web server comprising a main or index file for the web page;providing (408) the pre-rendered version of the web page for display while rendering the web page based on the response from the web server; andupon completion of the rendering, providing (504) the rendered web page for display in place of the pre-rendered version of the web page.
- The system of claim 5,wherein the receiving of the pre-render version from the pre-render server, comprises receiving additional information regarding the web page from the pre-render server; andwherein the system, while sending requests for resources in the received main or index file for the web page, omits a request for a file that has been flagged as being malicious in the additional information from the pre-render server.
- The system of claim 5,
wherein the web page is rendered based, at least in part, on the additional information from the pre-render server. - The system of claim 7,
wherein the pre-rendered version of the web page, as received from the pre-render server, has malicious content removed therefrom.
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US15/220,330 US20180032491A1 (en) | 2016-07-26 | 2016-07-26 | Web page display systems and methods |
PCT/US2017/042664 WO2018022359A1 (en) | 2016-07-26 | 2017-07-18 | Web page display systems and methods |
Publications (2)
Publication Number | Publication Date |
---|---|
EP3491544A1 EP3491544A1 (en) | 2019-06-05 |
EP3491544B1 true EP3491544B1 (en) | 2022-09-07 |
Family
ID=59501560
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
EP17746267.8A Active EP3491544B1 (en) | 2016-07-26 | 2017-07-18 | Web page display systems and methods |
Country Status (3)
Country | Link |
---|---|
US (1) | US20180032491A1 (en) |
EP (1) | EP3491544B1 (en) |
WO (1) | WO2018022359A1 (en) |
Families Citing this family (23)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10459609B2 (en) * | 2018-04-03 | 2019-10-29 | Palantir Technologies Inc. | Multi-stage data page rendering |
US11443008B2 (en) | 2018-06-11 | 2022-09-13 | International Business Machines Corporation | Advanced web page content management |
US10949488B1 (en) * | 2018-06-29 | 2021-03-16 | Ca, Inc. | Image quality optimization during remote isolated sessions |
US10681165B2 (en) | 2018-09-11 | 2020-06-09 | Palantir Technologies Inc. | System architecture for enabling efficient inter-application communications |
US11157544B2 (en) | 2018-09-19 | 2021-10-26 | International Business Machines Corporation | Online site prediction and mitigation |
CN111125573A (en) * | 2018-10-31 | 2020-05-08 | 阿里巴巴集团控股有限公司 | Webpage data processing method and device and electronic equipment |
US10785336B2 (en) * | 2019-01-31 | 2020-09-22 | Walmart Apollo, Llc | Pre-loading and caching application code |
US10853434B2 (en) * | 2019-03-11 | 2020-12-01 | Vladimir Prelovac | User interface for presenting search results |
US10826870B2 (en) * | 2019-03-21 | 2020-11-03 | Wangsu Science & Technology Co., Ltd. | Method, device and server for processing access request |
CN113646740A (en) * | 2019-05-01 | 2021-11-12 | 谷歌有限责任公司 | Interface for multiple simultaneous interactive views |
US10498760B1 (en) * | 2019-07-16 | 2019-12-03 | ALSCO Software LLC | Monitoring system for detecting and preventing a malicious program code from being uploaded from a client computer to a webpage computer server |
CN110390065B (en) * | 2019-07-31 | 2024-02-06 | 腾讯科技（深圳）有限公司 | Webpage acquisition method, device and system |
CN110727422B (en) * | 2019-09-30 | 2023-10-20 | 杭州涂鸦信息技术有限公司 | Multi-language performance improving method and system based on front-end isomorphic framework |
CN113158100B (en) * | 2020-01-22 | 2024-05-03 | 阿里巴巴集团控股有限公司 | Page display method and page display device |
CN112434233B (en) * | 2020-02-20 | 2023-03-07 | 上海哔哩哔哩科技有限公司 | Method and device for accelerating first screen rendering of secondary page |
CN111506387B (en) | 2020-03-02 | 2023-09-22 | 百度在线网络技术（北京）有限公司 | Page prerendering method and device, electronic equipment and storage medium |
CN113761412A (en) * | 2020-09-17 | 2021-12-07 | 北京沃东天骏信息技术有限公司 | Application page display method and device, electronic equipment, medium and application system |
CN113760253A (en) * | 2021-01-08 | 2021-12-07 | 北京沃东天骏信息技术有限公司 | Front-end rendering method, apparatus, device, medium, and program product |
US11438442B1 (en) * | 2021-03-18 | 2022-09-06 | Verizon Patent And Licensing Inc. | Systems and methods for optimizing provision of high latency content by a network |
CN116806336A (en) * | 2021-03-24 | 2023-09-26 | 华为技术有限公司 | Accelerating loading of web pages and web applications |
CN113672323A (en) * | 2021-08-03 | 2021-11-19 | 北京三快在线科技有限公司 | Page display method and device |
US20230198769A1 (en) * | 2021-12-16 | 2023-06-22 | Nai, Inc. | Opt-out systems and methods for tailored advertising |
CN117520691B (en) * | 2024-01-08 | 2024-04-02 | 成都安世赛斯特软件技术有限公司 | Method and device for displaying item data, storage medium and electronic equipment |
Family Cites Families (12)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7555542B1 (en) * | 2000-05-22 | 2009-06-30 | Internap Network Services Corporation | Method and system for directing requests for content to a content server based on network performance |
US7565399B1 (en) * | 2002-08-26 | 2009-07-21 | Netapp, Inc. | Caching web objects transformed by a pipeline of adaptation services |
US7617294B1 (en) * | 2004-08-02 | 2009-11-10 | Sun Microsystems, Inc. | Method and apparatus for reducing latency involved in retrieving web page components |
US8812651B1 (en) * | 2007-02-15 | 2014-08-19 | Google Inc. | Systems and methods for client cache awareness |
US8195767B2 (en) * | 2008-12-22 | 2012-06-05 | Sap Ag | Method and software for reducing server requests by a browser |
US9342508B2 (en) * | 2009-03-19 | 2016-05-17 | Microsoft Technology Licensing, Llc | Data localization templates and parsing |
CN103455478A (en) * | 2012-05-21 | 2013-12-18 | 腾讯科技（深圳）有限公司 | Webpage access accelerating method and device |
US20140149192A1 (en) * | 2012-11-25 | 2014-05-29 | Microsoft Corporation | Verification of online advertisement security |
US20140283078A1 (en) * | 2013-03-15 | 2014-09-18 | Go Daddy Operating Company, LLC | Scanning and filtering of hosted content |
US9537966B2 (en) * | 2013-05-31 | 2017-01-03 | Tencent Technology (Shenzhen) Company Limited | Systems and methods for location based data pushing |
US9576070B2 (en) * | 2014-04-23 | 2017-02-21 | Akamai Technologies, Inc. | Creation and delivery of pre-rendered web pages for accelerated browsing |
US9654575B1 (en) * | 2016-05-18 | 2017-05-16 | Crowdly, Inc. | Pass-through web traffic systems and methods |
-
2016
- 2016-07-26 US US15/220,330 patent/US20180032491A1/en not_active Abandoned
-
2017
- 2017-07-18 EP EP17746267.8A patent/EP3491544B1/en active Active
- 2017-07-18 WO PCT/US2017/042664 patent/WO2018022359A1/en active Search and Examination
Non-Patent Citations (1)
Title |
---|
ANONYMOUS: "Pandoc - Pandoc User's Guide", 25 July 2016 (2016-07-25), XP055865421, Retrieved from the Internet <URL:https://web.archive.org/web/20160725014856/https://pandoc.org/MANUAL.html> [retrieved on 20211124] * |
Also Published As
Publication number | Publication date |
---|---|
WO2018022359A1 (en) | 2018-02-01 |
US20180032491A1 (en) | 2018-02-01 |
EP3491544A1 (en) | 2019-06-05 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
EP3491544B1 (en) | Web page display systems and methods | |
US10817663B2 (en) | Dynamic native content insertion | |
CN106575298B (en) | Rapid presentation of web sites containing dynamic content and stale content | |
US20190272313A1 (en) | Dynamic generation of mobile web experience | |
US20180191798A1 (en) | Methods and systems for server-side rendering of native content for presentation | |
US9304979B2 (en) | Authorized syndicated descriptions of linked web content displayed with links in user-generated content | |
EP2948889B1 (en) | Architecture for sharing browsing session histories | |
US20120210243A1 (en) | Web co-navigation | |
CN104981800A (en) | Delivery and display of page previews during page retrieval events | |
US20100199197A1 (en) | Selective content transcoding | |
US10754900B2 (en) | Access to network content | |
KR20130065710A (en) | Site memory processing and clipping control | |
US9058392B1 (en) | Client state result de-duping | |
US20150186544A1 (en) | Website content and seo modifications via a web browser for native and third party hosted websites via dns redirection | |
US8782538B1 (en) | Displaying a suggested query completion within a web browser window | |
CN103383687A (en) | Page processing method and device | |
US20120221546A1 (en) | Method and system for facilitating web content aggregation initiated by a client or server | |
CN103235800A (en) | Preview method and preview system of search results | |
CN104978373A (en) | Webpage display method and webpage display device | |
US11113455B2 (en) | Web page rendering on wireless devices | |
US20130268832A1 (en) | Method and system for creating digital bookmarks | |
US8887239B1 (en) | Access to network content | |
RU2640635C2 (en) | Method, system and server for transmitting personalized message to user electronic device | |
US9384283B2 (en) | System and method for deterring traversal of domains containing network resources | |
JP2010231508A (en) | Device, method and program for determining significance |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: UNKNOWN |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: THE INTERNATIONAL PUBLICATION HAS BEEN MADE |
|
PUAI | Public reference made under article 153(3) epc to a published international application that has entered the european phase |
Free format text: ORIGINAL CODE: 0009012 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: REQUEST FOR EXAMINATION WAS MADE |
|
17P | Request for examination filed |
Effective date: 20190226 |
|
AK | Designated contracting states |
Kind code of ref document: A1Designated state(s): AL AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HR HU IE IS IT LI LT LU LV MC MK MT NL NO PL PT RO RS SE SI SK SM TR |
|
AX | Request for extension of the european patent |
Extension state: BA ME |
|
DAV | Request for validation of the european patent (deleted) | ||
DAX | Request for extension of the european patent (deleted) | ||
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: EXAMINATION IS IN PROGRESS |
|
17Q | First examination report despatched |
Effective date: 20200911 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: EXAMINATION IS IN PROGRESS |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R079Ref document number: 602017061518Country of ref document: DEFree format text: PREVIOUS MAIN CLASS: G06F0017300000Ipc: G06F0016950000 |
|
RIC1 | Information provided on ipc code assigned before grant |
Ipc: G06F 40/143 20200101ALI20211216BHEPIpc: G06Q 30/02 20120101ALI20211216BHEPIpc: G06F 16/95 20190101AFI20211216BHEP |
|
GRAP | Despatch of communication of intention to grant a patent |
Free format text: ORIGINAL CODE: EPIDOSNIGR1 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: GRANT OF PATENT IS INTENDED |
|
INTG | Intention to grant announced |
Effective date: 20220218 |
|
GRAS | Grant fee paid |
Free format text: ORIGINAL CODE: EPIDOSNIGR3 |
|
GRAA | (expected) grant |
Free format text: ORIGINAL CODE: 0009210 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: THE PATENT HAS BEEN GRANTED |
|
AK | Designated contracting states |
Kind code of ref document: B1Designated state(s): AL AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HR HU IE IS IT LI LT LU LV MC MK MT NL NO PL PT RO RS SE SI SK SM TR |
|
REG | Reference to a national code |
Ref country code: GBRef legal event code: FG4D |
|
REG | Reference to a national code |
Ref country code: CHRef legal event code: EPRef country code: ATRef legal event code: REFRef document number: 1517660Country of ref document: ATKind code of ref document: TEffective date: 20220915 |
|
REG | Reference to a national code |
Ref country code: IERef legal event code: FG4D |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R096Ref document number: 602017061518Country of ref document: DE |
|
REG | Reference to a national code |
Ref country code: LTRef legal event code: MG9D |
|
REG | Reference to a national code |
Ref country code: NLRef legal event code: MPEffective date: 20220907 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: SEFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20220907Ref country code: RSFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20220907Ref country code: NOFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20221207Ref country code: LVFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20220907Ref country code: LTFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20220907Ref country code: FIFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20220907 |
|
REG | Reference to a national code |
Ref country code: ATRef legal event code: MK05Ref document number: 1517660Country of ref document: ATKind code of ref document: TEffective date: 20220907 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: HRFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20220907Ref country code: GRFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20221208 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: SMFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20220907Ref country code: ROFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20220907Ref country code: PTFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20230109Ref country code: ESFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20220907Ref country code: CZFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20220907Ref country code: ATFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20220907 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: SKFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20220907Ref country code: PLFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20220907Ref country code: ISFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20230107Ref country code: EEFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20220907 |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R097Ref document number: 602017061518Country of ref document: DE |
|
P01 | Opt-out of the competence of the unified patent court (upc) registered |
Effective date: 20230505 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: NLFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20220907Ref country code: ALFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20220907 |
|
PLBE | No opposition filed within time limit |
Free format text: ORIGINAL CODE: 0009261 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: NO OPPOSITION FILED WITHIN TIME LIMIT |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: DKFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20220907 |
|
26N | No opposition filed |
Effective date: 20230608 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: SIFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20220907 |
|
PGFP | Annual fee paid to national office [announced via postgrant information from national office to epo] |
Ref country code: GBPayment date: 20230727Year of fee payment: 7 |
|
PGFP | Annual fee paid to national office [announced via postgrant information from national office to epo] |
Ref country code: DEPayment date: 20230727Year of fee payment: 7 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: MCFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20220907 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: MCFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20220907 |
|
REG | Reference to a national code |
Ref country code: CHRef legal event code: PL |
|
REG | Reference to a national code |
Ref country code: BERef legal event code: MMEffective date: 20230731 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: LUFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20230718 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: LUFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20230718 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: CHFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20230731 |
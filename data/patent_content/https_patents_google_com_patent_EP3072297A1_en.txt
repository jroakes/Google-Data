EP3072297A1 - Implementation design for hybrid transform coding scheme - Google Patents
Implementation design for hybrid transform coding schemeInfo
- Publication number
- EP3072297A1 EP3072297A1 EP14863523.8A EP14863523A EP3072297A1 EP 3072297 A1 EP3072297 A1 EP 3072297A1 EP 14863523 A EP14863523 A EP 14863523A EP 3072297 A1 EP3072297 A1 EP 3072297A1
- Authority
- EP
- European Patent Office
- Prior art keywords
- transform
- butterfly
- instructions
- adst
- transitory computer
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Granted
Links
- 238000013461 design Methods 0.000 title description 6
- 238000000034 method Methods 0.000 claims abstract description 44
- 230000015654 memory Effects 0.000 claims description 53
- 230000008569 process Effects 0.000 claims description 19
- 238000010586 diagram Methods 0.000 description 17
- 238000004891 communication Methods 0.000 description 16
- 230000006835 compression Effects 0.000 description 12
- 238000007906 compression Methods 0.000 description 12
- 239000011159 matrix material Substances 0.000 description 11
- 238000004590 computer program Methods 0.000 description 9
- 230000006870 function Effects 0.000 description 7
- 238000003384 imaging method Methods 0.000 description 6
- 230000003068 static effect Effects 0.000 description 6
- 230000003287 optical effect Effects 0.000 description 5
- 238000010295 mobile communication Methods 0.000 description 4
- 238000012545 processing Methods 0.000 description 4
- 230000001413 cellular effect Effects 0.000 description 3
- 239000004973 liquid crystal related substance Substances 0.000 description 3
- 230000009466 transformation Effects 0.000 description 3
- 238000009795 derivation Methods 0.000 description 2
- 238000005516 engineering process Methods 0.000 description 2
- 230000003993 interaction Effects 0.000 description 2
- 239000000047 product Substances 0.000 description 2
- 208000037170 Delayed Emergence from Anesthesia Diseases 0.000 description 1
- 230000003044 adaptive effect Effects 0.000 description 1
- 238000007792 addition Methods 0.000 description 1
- 238000013459 approach Methods 0.000 description 1
- 239000002131 composite material Substances 0.000 description 1
- 230000000694 effects Effects 0.000 description 1
- 101150012763 endA gene Proteins 0.000 description 1
- 238000002474 experimental method Methods 0.000 description 1
- 108091023663 let-7 stem-loop Proteins 0.000 description 1
- 108091063478 let-7-1 stem-loop Proteins 0.000 description 1
- 108091049777 let-7-2 stem-loop Proteins 0.000 description 1
- 230000007246 mechanism Effects 0.000 description 1
- 230000008450 motivation Effects 0.000 description 1
- 230000006855 networking Effects 0.000 description 1
- 238000005457 optimization Methods 0.000 description 1
- 230000002093 peripheral effect Effects 0.000 description 1
- 238000013139 quantization Methods 0.000 description 1
- 230000004044 response Effects 0.000 description 1
- 230000001953 sensory effect Effects 0.000 description 1
- 239000007787 solid Substances 0.000 description 1
- 238000010025 steaming Methods 0.000 description 1
- 238000000547 structure data Methods 0.000 description 1
- 239000013589 supplement Substances 0.000 description 1
- 230000001131 transforming effect Effects 0.000 description 1
- 230000017105 transposition Effects 0.000 description 1
- 230000000007 visual effect Effects 0.000 description 1
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/169—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding
- H04N19/17—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding the unit being an image region, e.g. an object
- H04N19/176—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding the unit being an image region, e.g. an object the region being a block, e.g. a macroblock
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/60—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using transform coding
- H04N19/625—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using transform coding using discrete cosine transform [DCT]
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06T—IMAGE DATA PROCESSING OR GENERATION, IN GENERAL
- G06T1/00—General purpose image data processing
- G06T1/20—Processor architectures; Processor configuration, e.g. pipelining
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06T—IMAGE DATA PROCESSING OR GENERATION, IN GENERAL
- G06T9/00—Image coding
- G06T9/007—Transform coding, e.g. discrete cosine transform
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/102—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the element, parameter or selection affected or controlled by the adaptive coding
- H04N19/12—Selection from among a plurality of transforms or standards, e.g. selection between discrete cosine transform [DCT] and sub-band transform or selection between H.263 and H.264
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/134—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the element, parameter or criterion affecting or controlling the adaptive coding
- H04N19/157—Assigned coding mode, i.e. the coding mode being predefined or preselected to be further used for selection of another element or parameter
- H04N19/159—Prediction type, e.g. intra-frame, inter-frame or bidirectional frame prediction
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/42—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals characterised by implementation details or hardware specially adapted for video compression or decompression, e.g. dedicated software implementation
- H04N19/439—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals characterised by implementation details or hardware specially adapted for video compression or decompression, e.g. dedicated software implementation using cascaded computational arrangements for performing a single operation, e.g. filtering
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/60—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using transform coding
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/50—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using predictive coding
- H04N19/593—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using predictive coding involving spatial prediction techniques
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/60—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using transform coding
- H04N19/61—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using transform coding in combination with predictive coding
Definitions
- intra-frame coding refers to compression techniques to compress video or images within a single frame, and not relative to any other frame in a video sequence.
- Transform coding is a central component in video and image compression. Optimization of the transform kernel may be used to exploit signal correlation for compression gains. Yet, on the hardware design side, a transform module may contribute a large portion of codec computational complexity.
- a non-transitory computer-readable storage medium storing instructions that when executed cause a processor to perform a process, the instructions including instructions to identify a video data block using a video codec and apply a transform kernel of a butterfly asymmetric discrete sine transform
- ADST ADST
- the transform kernel can include a combination of a discrete cosine transform (DCT) and the butterfly ADST transform having a basis that is asymmetric.
- DCT discrete cosine transform
- ADST transform having a basis that is asymmetric.
- the kernel can be of the form where N is the block dimension, and
- n and k respectively, denote a time index and a frequency index, where both n and k range from 1 to N.
- the butterfly ADST can be performed in integer format.
- the processor can communicate with a single instruction memory and control processor.
- the instructions can further include instructions to select a set of one-dimensional transforms depending on a prediction direction.
- the instructions can further include instructions to form a two-dimensional transform using the set of one-dimensional transforms.
- the butterfly ADST can be applied to a residual pixel block generated from the video data block.
- the transform kernel can provide for parallel computing via single instruction multiple data operations.
- an apparatus in another general aspect, includes a video codec configured to identify a video data block, and a hybrid transform encoder configured to provide an intra- frame coding scheme for the video data block using a combination of a discrete cosine transform (DCT) and a butterfly asymmetric discrete sine transform (ADST) transform having an asymmetric basis, and produce a butterfly structured
- DCT discrete cosine transform
- ADST butterfly asymmetric discrete sine transform
- the kernel can be of the form sin where N is the block
- the butterfly structured implementation can be performed in integer format.
- the processor can communicate with a single instruction memory and control processor.
- the apparatus can further include a selector configured to select a set of one-dimensional transforms depending on a prediction direction.
- the selector can be further configured to form a two-dimensional transform using the set.
- the butterfly ADST can be applied to a residual pixel block generated from the video data block.
- the butterfly structured implementation can provide for parallel computing via single instruction multiple data operations.
- a non-transitory computer-readable storage medium storing instructions that when executed cause a processor to perform a process, the instructions including instructions to provide an intra-frame coding scheme for a video data block using a combination of a discrete cosine transform (DCT) and a butterfly asymmetric discrete sine transform (ADST) transform having a kernel approximating an original ADST having an asymmetric basis and produce a butterfly structured implementation of the intra-frame coding, using the butterfly
- DCT discrete cosine transform
- ADST butterfly asymmetric discrete sine transform
- the kernel is of the form sin ' '27 W k where N is the block dimension, and where n and k, respectively, denote a time index and a frequency index, where both n and k range from 1 to N.
- Implementations can include one or more of the following features.
- the instructions can further include instructions to select a set of one- dimensional transforms depending on a prediction direction.
- the instructions can further include instructions to form a two-dimensional transform using the set of one-dimensional transforms.
- Advantages of the systems and methods described here include, for example, efficient hardware utilization and code speed-up.
- FIG. 1 is a block diagram illustrating an example system that may be used for hybrid transform coding.
- FIG. 2A is a block diagram illustrating an example imaging device that may be used for hybrid transform encoding.
- FIG. 2B is a block diagram illustrating an example of SIMD operations.
- FIG. 3A is a flow diagram illustrating an example process that may be used for hybrid transform coding in a pipeline.
- FIG. 3B is a flow diagram illustrating an example process that may be used for hybrid transform coding.
- FIG. 3C is a diagram illustrating an example of a hardware operational flow that may be used for hybrid transform coding.
- FIG. 4 is a block diagram illustrating computational complexity of systems and methods described here in terms of CPU cycles.
- FIG. 5 is a flow diagram illustrating an example decoding process that may be used with systems described here.
- FIG. 6 is a block diagram illustrating example or representative computing devices and associated elements that may be used to implement one or more systems and methods described here, in accordance with aspects of the disclosure.
- a method and system is presented herein to improve image or video compression performance.
- a disclosed method and system provides a way to implement intra-frame (within a single frame) coding and prediction used in video codec.
- One motivation for employing a block coder is to separate a video frame into distinct regions, each of which may have its own locally stationary signal statistics.
- intra-frame coding exploits the local anisotropy (for instance, the occurrence of spatial patterns within a frame) via the spatial prediction of each block from previously encoded neighboring pixels, available at block boundaries.
- a hybrid transform coding scheme allows choosing from discrete sine transform (DST) and asymmetric DST, depending on the quality and the availability of boundary information.
- a hybrid transform coding scheme may achieve bit savings at the same peak signal-to-noise ratio (PSNR).
- PSNR peak signal-to-noise ratio
- the overall intra coding scheme may switch between this variant of DST named asymmetric DST (ADST), and the conventional DCT, depending on the prediction direction and boundary information.
- This adaptive prediction-transform approach also called a hybrid transform coding scheme, may outperform the DCT-based intra-frame prediction-transform coding.
- a transform module may contribute a large portion of codec computational complexity.
- the fast Fourier transform is an efficient algorithm for calculating the discrete Fourier Transform of a sequence of N numbers.
- a butterfly is a portion of a computation that combines results of smaller discrete Fourier transforms (DFTs) into a larger DFT, or vice versa, for example, breaking a larger DFT up into subtransforms.
- the method and system described here improve on asymmetric discrete sine transform and on the hybrid transform coding, to create a butterfly asymmetric discrete sine transform to predict an intra-frame transform.
- An improved butterfly structured implementation that allows parallel computing via single instruction multiple data (SIMD) operations is described.
- the original ADST kernel was derived as where N is the block
- n and k denote the time and frequency indexes, respectively, both ranging from 1 to ⁇ .
- the DCT kernel is of form The
- ADST whose kernel is of the form xh e denominator of the kernel
- the btf-ADST is has a basis with a similar asymmetric property as the original ADST.
- a system may use this btf-ADST to replace the original ADST in the hybrid transform coding scheme.
- the overall scheme selects the appropriate one- dimensional (1-D) transforms amongst the btf-ADST and DCT depending on the prediction direction to form a two-dimensional (2-D) transformation.
- the system may apply a transform in a vertical direction to each column vector of a matrix.
- FIG. 1 is a block diagram illustrating an example system 100 for hybrid transform coding, in accordance with aspects of the disclosure. In the example of FIG.
- the system 100 includes a hybrid transform coding system that may be associated with a device 104, thereby transforming the device 104 into a special purpose machine designed to implement hybrid transform coding.
- the device 104 may include various elements, including a microprocessor 110, a memory 112 such as a non-transitory computer-readable storage medium, power, peripherals, and various other elements not specifically shown in FIG. 1.
- the memory 112 may include one or more areas, such as a first area 112a and a second area 112b.
- the device 104 may include a display 140 (e.g., monitor or some other display) that may be used to display images (e.g., static images and/or video images).
- various other elements of the device 104 that may be useful to implement the device 104 may be added or included, without departing from the scope of the present disclosure.
- the system 100 may include an imager 114 configured to capture an image or images and generate uncompressed image data of the captured image or images.
- the imager 114 may be any device that converts an optical image into an electronic signal.
- the imager 114 may be a video camera configured to capture sequential images and generate uncompressed image data of the sequentially captured images.
- the imager 114 may include one or more sensors (e.g., any type of detector, such as a focal plane array) for capturing image signals representative of an image or images.
- the sensors of the imager 114 provide for representing or converting a captured image signal of an image or images as digital data (e.g., via an analog-to-digital converter included as part of the sensor or separate from the sensor as part of imaging system 100).
- the imager 114 may include a static camera configured to capture a single static image and generate uncompressed image data of the captured image.
- the imager 114 may include a video camera configured to capture a plurality of sequential images and generate uncompressed image data of the sequentially captured images.
- the system 100 may include an input interface 116 configured to receive image data from an external source including uncompressed image data.
- the input interface 116 may be configured to receive image data (e.g., static images or input video) streamed from another device.
- the input interface 116 may include one 6 or more inputs for receiving image signals representative of an image or images.
- the one or more inputs of the input interface 116 may provide for receiving image signals of an image or images as digital data (e.g., via an analog-to-digital converter included as part of the input interface 116 or separate from the input interface 116 as part of the device 104).
- the system 100 may include an encoder 120 configured to receive uncompressed image data and perform hybrid transform coding of the uncompressed image data.
- the encoder 120 may include a hybrid transform coder 122 that is configured to provide intra-frame coding, as discussed in more detail below with respect to FIGS. 2A-4.
- the system 100 may also include a decoder 130 configure to decode image data.
- the decoder 130 may operate by decoding an encoding made by the encoder 120, so that an original image or video information can be retrieved, for example
- the decoder 130 may be included in a separate system such as another computer device (not shown ) that is separate from the device 104.
- the device 104 may perform an encoding using the encoder 120, and a separate device may decode the encoding made by the encoder 120, so that the original image can be retrieved by the separate device, as an example.
- the imager 114 may be configured to capture an image or images and generate uncompressed image data of the captured image or images.
- the encoder 120 may be configured to receive the uncompressed image data from the imager 114 and store the
- the imager 114 may include a static camera configured to capture a single static image and generate uncompressed image data of the captured image.
- the imager 114 may include a video camera configured to capture a plurality of sequential images and generate uncompressed image data of the sequentially captured images.
- the imager 114 may be configured to capture an image or images and generate uncompressed image data of the captured image or images.
- the microprocessor 110 may be configured to receive the uncompressed image data from the imager 114 and provide the encoder 120 with the uncompressed image data.
- the input interface 116 may be configured to receive image data of image or images.
- the encoder 120 may be configured to receive the image data from the input interface 116 and store the image data in the first area 112a of the memory 112.
- the display 140 may display the uncompressed image data of the captured image.
- the display 140 may include an image display device (e.g., a liquid crystal display (LCD)) or some various other type of video display or monitor.
- the microprocessor 110 may be adapted to display image data on the display 140.
- the microprocessor 110 may be configured to retrieve and obtain image data from memory 112 and display any retrieved image data on the display 140.
- the display 140 may include display electronics, which may be utilized by the microprocessor 110 to display image data.
- the display 140 may receive image data directly from imager 114 via microprocessor 110, or the image data may be transferred from the memory 112 via the microprocessor 110.
- the system 100 is illustrated using various components. However, such illustration is provided for clarity and convenience, and thus, in some instances, the various components may overlap or be combined within a described block(s) or module(s), or may be implemented by one or more block(s) or module(s) not specifically illustrated in the example of FIG. 1.
- FIG. 2A is a block diagram illustrating an example of an imaging device 200 that may be used for hybrid transform encoding, in accordance with aspects of the disclosure.
- a device 200 may include an imager 210, an encoder 214 including a single instruction memory and control processor 212, a memory 216, a decoder 204, and a display 202.
- the device 200 may represent one or more of various mobile devices including mobile phones, smartphones, laptops, televisions, or desktop computers.
- the imager 210 may be remotely connected to the device 200, and the imager may represent various mobile devices such as mobile phones, consumer video cameras (e.g., compact, DSLR-video, etc), security video cameras, or any imager device that records and stores video digitally.
- the imager may represent various mobile devices such as mobile phones, consumer video cameras (e.g., compact, DSLR-video, etc), security video cameras, or any imager device that records and stores video digitally.
- the imager 210 may capture an image and generate uncompressed image data of the captured image.
- the imager 210 may also be referred to as a camera sensor or an imaging sensor.
- the imager 210 may include a video imager that captures a plurality of sequential images and generate uncompressed image data of the 8 sequentially captured images.
- the imager 210 may capture one or more images and generate uncompressed image data of the captured images.
- the imager 210 may be any device that converts an optical image into an electronic signal.
- the imager 210 may be a video camera that captures a plurality of sequential images and generates uncompressed image data of the sequentially captured images.
- the imager 210 may provide the uncompressed image data to the encoder 214.
- the encoder may operate in conjunction with a single instruction memory and control processor 212.
- the single instruction memory and control processor 212 may allow the encoder 214 to employ a butterfly structured
- SIMD single instruction multiple data
- the single instruction memory and control processor 212 fetches and dispatches instructions. In an implementation, referring to the example of FIG.
- the single instruction memory and control processor 212 may receive the uncompressed image data or image signals from the imager 210 (e.g., via the encoder 214), and the single instruction memory and control processor 212 may process the received image signals (e.g., to provide processed image data), and provide an encoded bitstream to the memory 216.
- Embodiments described here may utilize a steaming SIMD extension 2 (SSE2) running on a 64-bit platform, as an example.
- SSE2 steaming SIMD extension 2
- the encoder 214 may perform a hybrid transform coding of the uncompressed image data, as discussed in more detail below with respect to FIGS. 3A-4.
- the device may also include a decoder 204, which may apply an inverse transform to a residual pixel block data retrieved from the memory 216.
- the decoder 204 may thus decode an encoding, and then supply original image data to the display 202.
- the system 200 is illustrated using various components. However, such illustration is provided for clarity and convenience, and thus, in some instances, the various components may overlap or be combined within a described block(s) or module(s), or may be implemented by one or more block(s) or 9 module(s) not specifically illustrated in the example of FIG. 2.
- FIG. 2B is a block diagram illustrating an example of SIMD operations, which may be performed for example by the single instruction memory and control processor 212 shown in FIG. 2A in conjunction with encoding operations.
- SIMD single instruction stream
- multiple data stream (SIMD) processors one instruction works on several data items simultaneously by using several processing elements (PEs), all of which may carry out the same operation as illustrated in FIG. 2B.
- a single instruction 218 works on several data items 220 at the same time by using PEs 222A through 222n.
- the PEs 222A through 222n may be implemented in an application specific integrated circuit (ASIC), for example.
- a SIMD processor has a single control unit reading instructions point to by a single program counter, decoding them and sending control signals to the PEs. Data such as the data items 220 may be supplied to and derived from the PEs 222A through 222n with as many data paths as there are PEs.
- FIG. 3A is a flow diagram illustrating an example process that may be used for the hybrid transform coding in a pipeline.
- the operations of FIG. 3A may be performed, for example, by imaging device 104 of system 100, including by encoder 120, as shown in FIG. 1 or the encoder 214 shown in FIG. 2.
- the process includes identifying a video data block (302).
- the system may implement block prediction to generate residual values (304). For example, the system may use previously reconstructed pixels to predict the current pixel block.
- the system may subtract the above prediction from the current pixel block to generate a residual pixel block.
- the system may apply a hybrid-transform in a pipeline (306), for example as discussed below with respect to FIG. 3B.
- the system may apply a combination DCT of butterfly ADST to the residual pixel block, and quantize transform coefficients and code quantization levels.
- the system may then generate a compressed result (308) for use by a decoder, for example the decoder 130 shown in FIG. 1.
- FIG. 3B is a flow diagram illustrating an example process that may be used for the hybrid transform coding. The operations of FIG. 3 may be performed, for example, by imaging device 104 or system 100 as shown in FIG. 1.
- the system may identify a video data block using a video codec (330).
- the system may provide an intra-frame coding scheme for the video data block using a combination of a discrete cosine transform (DCT) and a variant of an asymmetric 10 discrete sine transform (ADST) transform whose kernel approximates an original ADST basis-wisely (i.e., whose basis is asymmetric) and is consistent with a DCT kernel (332).
- DCT discrete cosine transform
- ADST a variant of an asymmetric 10 discrete sine transform
- the system may produce a butterfly structured implementation of the intra-frame coding, using the variant of the ADST (which may include the DCT) (334).
- P j be the permutation matrix that moves the first half of the vector entries to the even-numbered position, and the second half entries to the odd- numbered position but in a reversed order:
- the btf-ADST enables a butterfly structured implementation in a pipeline using parallel computing, which may be performed, for example, by various processing elements such as the processing elements 222A through 222n as described above with respect to FIG. 2B.
- This butterfly structured implementation in conjunction with the SIMD operations, for example as described above with respect to FIG. 2B, provides speed-up as compared to the original ADST operating via matrix multiplication.
- FIG. 3C is a diagram illustrating an example of a hardware operational flow that may be used for hybrid transform coding.
- the example shown in FIG. 3C shows an 8x8 butterfly structure data flow of the variant ADST, as an example.
- the example shown in FIG. 3C may serve as one prototype of a hardware implementation of the transform kernel described here. It is possible to create a different
- ADST/DCT hybrid transform schemes in terms of the average CPU cycles, is shown in FIG. 4.
- the y-axis 410 depicts a number of CPU cycles.
- the x-axis 420 depicts a transform dimension.
- the implementation was using streaming SIMD extension 2 (SSE2) and the experiments were running on a 64-bit platform.
- the line 430 plots the ADST/DCT hybrid transform scheme runtimes
- the line 440 plots the btf-ADST/DCT hybrid transform scheme runtimes.
- the btf-ADST implementation allows efficient hardware utilization and thereby substantial codec speed-up, while closely resembling the compression gains of the original ADST.
- this variant of ADST transform whose kernel approximates the original ADST basis-wisely and is consistent with the DCT kernel, thereby enables the butterfly structured implementation.
- the described scheme allows efficient hardware utilization for significant codec speed-up, while retaining the compression performance of a hybrid transform coding scheme.
- FIG. 5 is a flow diagram illustrating an example decoding process that may be used with systems described here.
- the process shown in FIG. 5 may be performed in part by, for example, a decoder such as the decoder 130 shown in FIG. 1.
- the process includes identifying residual pixel block data (510).
- the data block may be a 2D residual pixel block, for example.
- the decoder may apply an inverse Attorney Docke transform to the residual pixel block data (520).
- the decoding process uses inverse transform, which is the transpose of each stage (or matrix) shown in the equation (22) in reverse order.
- the decoder may generate decoded data based on the inverse transform (530).
- the system may have two transforms Ta and Tc, and residual block R.
- Ta in the vertical direction
- Tc in the horizontal direction of R translates into: Ta * R * Tc ⁇ t, where ⁇ t denotes matrix transpose.
- the butterfly structured hybrid-transform disclosed here may be implemented using parallel computing via SIMD operations to achieve faster compression of a bitstream.
- FIG. 6 is a block diagram illustrating example or representative computing devices and associated elements that may be used to implement one or more systems and methods described here, in accordance with aspects of the disclosure.
- FIG. 6 shows an example of a computer device 600 and a mobile computer device 650 (e.g., mobile communication device including a low-power mobile communication device, such as, for example, mobile phone, cellular phone, etc.), which may be used in accordance with aspects, methods, and techniques, as described and provided herein.
- the computing device 600 may represent various forms of digital computers, such as personal computers, laptops, tablets, desktops, workstations, personal digital assistants, servers, blade servers, mainframes, and other appropriate computers.
- the computing device 650 may represent various forms of mobile devices, such as personal digital assistants, cellular telephones, smart phones, and other similar computing devices.
- the components shown herein, their connections and relationships, and their functions, are meant to be exemplary only, and are not meant to limit implementations described herein and/or claimed in this disclosure.
- the computing device 600 may include one or more processors 602, memory 604, a storage device 606, a high-speed interface 608 connecting to memory 604 and high-speed expansion ports 610, and a low speed interface 612 connecting to low speed bus 614 and storage device 606.
- One or more of the components 602, 604, 606, 608, 610, and 612 are interconnected using various busses, and may be mounted on a common motherboard or in other manners as appropriate.
- the processor 602 may be configured to process instructions for execution within the computing device 600, including instructions stored in the memory 604 or on the 1 Attorney Docke storage device 606 to display graphical information for a GUI on an external input/output device, such as display 616 coupled to high speed interface 608.
- multiple processors and/or multiple buses may be utilized, as appropriate, along with multiple memories and types of memory.
- multiple computing devices 600 may be connected, with the device providing portions of the necessary operations (e.g., as a server bank, a group of blade servers, or a multi- processor system).
- the memory 604 may be configured to store information within the computing device 600.
- the memory 604 may comprise one or more volatile memory units.
- the memory 604 may comprise one or more non-volatile memory units.
- the memory 604 may comprise another form of non-transitory computer-readable medium, such as a magnetic or optical disk.
- the storage device 606 may be configured for providing mass storage for the computing device 600.
- the storage device 606 may comprise a non-transitory computer-readable medium, such as a floppy disk device, a hard disk device, an optical disk device, or a tape device, a flash memory, or other similar solid state memory device, or an array of devices, including devices configured for use in a storage area network or various other configurations.
- a computer program product may be tangibly embodied in an information carrier.
- the computer program product may include instructions that, when executed, perform one or more methods, such as those described herein.
- the information carrier may comprise a non-transitory computer-readable medium or a non-transitory machine-readable medium, such as the memory 604, the storage device 606, or memory on the processor 602.
- the high speed controller 608 may be configured to manage bandwidth-intensive operations for the computing device 600, while the low speed controller 612 may be configured to manage lower bandwidth-intensive operations. Such allocation of functions may be exemplary only.
- the high- speed controller 608 may be coupled to the memory 604, the display 616 (e.g., through a graphics processor or accelerator), and/or to the high-speed expansion ports 610, which may be configured to accept various expansion cards (not shown).
- low-speed controller 612 may be coupled to the storage device 606 and/or the low-speed expansion port 614, wherein the low-speed expansion port, Attorney Docke which may include various communication ports (e.g., USB, BLUETOOTH, ETHERNET, wireless ETHERNET, etc.) may be coupled to one or more input/output devices, such as a keyboard, a pointing device, a scanner, or a networking device, such as a switch or router, e.g., through a network adapter.
- input/output devices such as a keyboard, a pointing device, a scanner, or a networking device, such as a switch or router, e.g., through a network adapter.
- the computing device 600 may be implemented in a number of different forms, in a manner as shown in FIG. 6.
- the computing device 600 may be implemented as a standard server 620, or multiple times in a group of such servers.
- the computing device 600 may be implemented as part of a rack server system 624.
- the computing device 600 may be implemented in a personal computer (PC), such as a laptop computer 622.
- components from the computing device 600 may be combined with other components in a mobile device (not shown), such as device 650.
- One or more of such devices may include one or more of computing devices 600, 650, and an entire system may be made up of multiple computing devices 600, 650 communicating with one another.
- the computing device 650 may include one or more processors 652, memory 664, an input/output device, such as a display 654, a communication interface 666, and a transceiver 668, among various other components.
- the device 650 may be provided with a storage device, such as a micro-drive or some other related device, to provide additional storage.
- a storage device such as a micro-drive or some other related device, to provide additional storage.
- One or more of the components 650, 652, 664, 654, 666, and 668 may be interconnected using various buses, and several of the components may be mounted on a common motherboard or in other manners as appropriate.
- the processor 652 may be configured to execute instructions within the computing device 650, including instructions stored in the memory 664.
- the processor 652 may be implemented as a chipset of chips that include separate and multiple analog and digital processors.
- the processor 652 may provide for coordination of the other components of the device 650, such as control of user interfaces, applications run by device 650, and wireless communication by device 650.
- the processor 652 may be configured to communicate with a user through a control interface 658 and a display interface 656 coupled to a display 654.
- the display 654 may comprise, for example, a TFT LCD (Thin-Film-Transistor Liquid Crystal Display) or an OLED (Organic Light Emitting Diode) display, or other appropriate display technology.
- the display interface 656 may comprise appropriate 19 Attorney Docke circuitry for driving the display 654 to present graphical and other information to a user.
- the control interface 658 may receive commands from a user and convert them for submission to the processor 652.
- an external interface 662 may be provided in communication with the processor 652 to enable near area communication of device 650 with various other devices.
- the external interface 662 may provide for wired communication in some implementations, or for wireless communication in other implementations, and multiple interfaces may be utilized.
- the memory 664 may be configured to store information within the computing device 650.
- the memory 664 may be implemented as one or more of a non-transitory computer-readable medium or media, one or more volatile memory units, or one or more non-volatile memory units.
- Expansion memory 674 may be provided and connected to device 650 through expansion interface 672, which may include, for example, a SIMM (Single In Line Memory Module) card interface.
- SIMM Single In Line Memory Module
- expansion memory 674 may provide extra storage space for device 650, or may also store applications or other information for device 650.
- expansion memory 674 may include instructions to carry out or supplement the processes described above, and may include secure information.
- the expansion memory 674 may be provided as a security module for device 650, and may be programmed with instructions that permit secure use of device 650. Further, secure applications may be provided via the SIMM cards, along with additional information, such as placing identifying information on the SIMM card in a secure manner.
- the memory may include, for example, flash memory and/or NVRAM memory, as discussed below.
- a computer program product is tangibly embodied in an information carrier.
- the computer program product contains instructions that, when executed, perform one or more methods, such as those described above.
- the information carrier is a computer- or machine-readable medium, such as the memory 664, expansion memory 674, or memory on processor 652 that may be received, for example, over transceiver 668 or external interface 662.
- the device 650 may be configured to communicate wirelessly through communication interface 666, which may include digital signal processing circuitry where necessary.
- a communication interface 666 may provide for communications under various modes or protocols, such as GSM voice calls, 20 Attorney Docke SMS, EMS, or MMS messaging, CDMA, TDMA, PDC, WCDMA, CDMA2000, or GPRS, among others.
- GSM voice calls 20 Attorney Docke SMS, EMS, or MMS messaging
- CDMA, TDMA, PDC, WCDMA, CDMA2000, or GPRS among others.
- such communication may occur, for example, through a radio-frequency transceiver 668.
- short-range communication may occur, such as using a Bluetooth, WiFi, or other such transceiver (not shown).
- a GPS (Global Positioning System) receiver module 670 may provide additional navigation- and/or location-related wireless data to device 650, which may be used as appropriate by applications running on device 650.
- the device 650 may be configured to communicate audibly using audio codec 660, which may receive spoken information from a user and convert it to usable digital information.
- an audio codec 660 may likewise generate audible sound for a user, such as through a speaker, e.g., in a handset of the device 650.
- sound may include sound from voice telephone calls, may include recorded sound (e.g., voice messages, music files, etc.) and may include sound generated by applications operating on the device 650.
- the computing device 650 may be implemented in a number of different forms, in a manner as shown in FIG. 6.
- the computing device 650 may be implemented as a mobile communication device 680 including a cellular telephone and/or some other low power mobile communication devices.
- the computing device 650 may be implemented as part of a smart phone 682, personal digital assistant, or some other similar mobile device.
- various implementations of the systems, methods, and techniques described herein may be realized in digital electronic circuitry, integrated circuitry, specially designed ASICs (application specific integrated circuits), computer hardware, firmware, software, and/or combinations thereof.
- ASICs application specific integrated circuits
- These various implementations may include implementation in one or more computer programs that are executable and/or interpretable on a programmable system including at least one programmable processor, which may be special or general purpose, coupled to receive data and instructions from, and to transmit data and instructions to, a storage system, at least one input device, and at least one output device.
- the systems, methods, and techniques described herein may be implemented on a computer having a display device (e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor) for displaying information to the user and a keyboard and a pointing device (e.g., a mouse or a trackball) by which the user may provide input to the computer.
- a display device e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor
- a keyboard and a pointing device e.g., a mouse or a trackball
- Other types of devices may be used to provide for interaction with a user as well; for example, feedback provided to the user may be any form of sensory feedback (e.g., visual feedback, auditory feedback, or tactile feedback); and input from the user may be received in any form, including acoustic, speech, or tactile input.
- the systems, methods, and techniques as described herein may be implemented in a computing system that includes a back end component (e.g., as a data server), or that includes a middleware component (e.g., an application server), or that includes a front end component (e.g., a client computer having a graphical user interface or a web browser through which a user may interact with an implementation of the systems, methods, and techniques described here), or any combination of such back end, middleware, or front end components.
- the components of the system may be interconnected by any form or medium of digital data communication (e.g., a communication network). Examples of communication networks include a local area network (“LAN”), a wide area network (“WAN”), and the Internet.
- LAN local area network
- WAN wide area network
- the Internet the global information network
- the computing system may include clients and servers.
- a client and server are generally remote from one another and typically interact through a communication network.
- the relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to one another.
Abstract
Description
Claims
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US14/087,568 US9712829B2 (en) | 2013-11-22 | 2013-11-22 | Implementation design for hybrid transform coding scheme |
PCT/US2014/066662 WO2015077476A1 (en) | 2013-11-22 | 2014-11-20 | Implementation design for hybrid transform coding scheme |
Publications (3)
Publication Number | Publication Date |
---|---|
EP3072297A1 true EP3072297A1 (en) | 2016-09-28 |
EP3072297A4 EP3072297A4 (en) | 2017-06-14 |
EP3072297B1 EP3072297B1 (en) | 2020-04-29 |
Family
ID=53180143
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
EP14863523.8A Active EP3072297B1 (en) | 2013-11-22 | 2014-11-20 | Implementation design for hybrid transform coding scheme |
Country Status (7)
Country | Link |
---|---|
US (2) | US9712829B2 (en) |
EP (1) | EP3072297B1 (en) |
KR (1) | KR101975324B1 (en) |
CN (1) | CN105765975B (en) |
AU (1) | AU2014352947B2 (en) |
CA (1) | CA2931226C (en) |
WO (1) | WO2015077476A1 (en) |
Families Citing this family (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9712829B2 (en) | 2013-11-22 | 2017-07-18 | Google Inc. | Implementation design for hybrid transform coding scheme |
WO2016190690A1 (en) * | 2015-05-26 | 2016-12-01 | 엘지전자(주) | Method and device for processing video signal by using adaptive and separable graph-based transform |
WO2019231292A1 (en) * | 2018-05-31 | 2019-12-05 | 엘지전자 주식회사 | Method and device for designing low complexity dst7 |
WO2020117011A1 (en) * | 2018-12-06 | 2020-06-11 | 엘지전자 주식회사 | Method and device for processing video signal by using transform having low complexity |
CN111385584B (en) * | 2018-12-28 | 2022-09-06 | 杭州海康威视数字技术股份有限公司 | Method, device and system for encoding and decoding |
US11785254B2 (en) * | 2020-05-29 | 2023-10-10 | Tencent America LLC | Implicit mode dependent primary transforms |
Family Cites Families (11)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5805739A (en) | 1996-04-02 | 1998-09-08 | Picturetel Corporation | Lapped orthogonal vector quantization |
US6134571A (en) | 1998-04-29 | 2000-10-17 | Hewlett-Packard Company | Implicit DST-based filter operating in the DCT domain |
US6189021B1 (en) * | 1998-09-15 | 2001-02-13 | Winbond Electronics Corp. | Method for forming two-dimensional discrete cosine transform and its inverse involving a reduced number of multiplication operations |
US7760950B2 (en) * | 2002-09-26 | 2010-07-20 | Ntt Docomo, Inc. | Low complexity and unified transforms for video coding |
US7792891B2 (en) * | 2002-12-11 | 2010-09-07 | Nvidia Corporation | Forward discrete cosine transform engine |
EP1642233A2 (en) * | 2003-06-27 | 2006-04-05 | Koninklijke Philips Electronics N.V. | Sharpness metric for asymmetrically enhanced image and video |
US7782955B2 (en) | 2005-09-28 | 2010-08-24 | Avisonic Technology Corporation | Transcoder and transcoding method operating in a transform domain for video coding schemes possessing different transform kernels |
JP2012039590A (en) | 2010-07-16 | 2012-02-23 | Sony Corp | Image processing device, image processing method, and program |
US8885701B2 (en) * | 2010-09-08 | 2014-11-11 | Samsung Electronics Co., Ltd. | Low complexity transform coding using adaptive DCT/DST for intra-prediction |
CN103282958B (en) * | 2010-10-15 | 2016-03-30 | 华为技术有限公司 | Signal analyzer, signal analysis method, signal synthesizer, signal synthesis method, transducer and inverted converter |
US9712829B2 (en) | 2013-11-22 | 2017-07-18 | Google Inc. | Implementation design for hybrid transform coding scheme |
-
2013
- 2013-11-22 US US14/087,568 patent/US9712829B2/en active Active
-
2014
- 2014-11-20 KR KR1020167016587A patent/KR101975324B1/en active IP Right Grant
- 2014-11-20 WO PCT/US2014/066662 patent/WO2015077476A1/en active Application Filing
- 2014-11-20 CA CA2931226A patent/CA2931226C/en active Active
- 2014-11-20 CN CN201480063614.2A patent/CN105765975B/en active Active
- 2014-11-20 EP EP14863523.8A patent/EP3072297B1/en active Active
- 2014-11-20 AU AU2014352947A patent/AU2014352947B2/en active Active
-
2017
- 2017-07-17 US US15/651,619 patent/US10104382B2/en active Active
Also Published As
Publication number | Publication date |
---|---|
CN105765975B (en) | 2020-01-07 |
EP3072297A4 (en) | 2017-06-14 |
WO2015077476A1 (en) | 2015-05-28 |
AU2014352947A1 (en) | 2016-05-26 |
US20150145874A1 (en) | 2015-05-28 |
EP3072297B1 (en) | 2020-04-29 |
CA2931226C (en) | 2018-11-06 |
US9712829B2 (en) | 2017-07-18 |
KR101975324B1 (en) | 2019-05-07 |
AU2014352947B2 (en) | 2017-09-21 |
US10104382B2 (en) | 2018-10-16 |
CA2931226A1 (en) | 2015-05-28 |
CN105765975A (en) | 2016-07-13 |
KR20160090331A (en) | 2016-07-29 |
US20170324964A1 (en) | 2017-11-09 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US10104382B2 (en) | Implementation design for hybrid transform coding scheme | |
JP5797774B2 (en) | 32-point conversion for media data coding | |
JP4874642B2 (en) | Lossless conversion for lossy and lossless 2D data compression | |
JP4425561B2 (en) | 2-D conversion for image and video coding | |
KR20150090206A (en) | Content adaptive parametric transforms for coding for next generation video | |
US20140010284A1 (en) | Image transform and inverse transform method, and image encoding and decoding device using same | |
TWI437356B (en) | Compressed domain image summation apparatus, systems, and methods | |
KR20160032137A (en) | Feature-based image set compression | |
US9749626B2 (en) | Modulo embedding of video parameters | |
JP2014146988A (en) | Dynamic image encoder | |
Han et al. | A butterfly structured design of the hybrid transform coding scheme | |
US20140328546A1 (en) | Signal processing method and apparatus for implementing said method | |
KR20220107028A (en) | Deep Loop Filter by Temporal Deformable Convolution | |
US20170332103A1 (en) | Interleaving luma and chroma coefficients to reduce the intra prediction loop dependency in video encoders and decoders | |
US10356410B2 (en) | Image processing system with joint encoding and method of operation thereof | |
Wang et al. | An optimized parallel IDCT on graphics processing units | |
US9819951B2 (en) | Image processing method, devices and system | |
JP2010154577A (en) | Image signal conversion method, image encoder, image encoding method, image encoding program, image decoder, image decoding method, and image decoding program | |
Yao et al. | Design of embedded electronic video processing system based on DM6467 | |
US20190166383A1 (en) | Reduced multiplicative complexity discrete cosine transform (dct) circuitry | |
JP2006191485A (en) | Image signal conversion method, image coding device, image coding method, image coding program, image decoding device, image decoding method, and image decoding program | |
US20140133582A1 (en) | Enhancing digital signals | |
JP2006318299A (en) | Image signal conversion method, image signal reverse conversion method, image encoding device, image decoding device, image encoding method, image decoding method, image encoding program, and image decoding program | |
WO2014155454A1 (en) | Moving image encoding device and moving image encoding method | |
JP2010009624A (en) | Image signal conversion method, image signal reverse conversion method, image encoding device, image decoding device, image encoding method, image decoding method, image encoding program, and image decoding program |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PUAI | Public reference made under article 153(3) epc to a published international application that has entered the european phase |
Free format text: ORIGINAL CODE: 0009012 |
|
17P | Request for examination filed |
Effective date: 20160609 |
|
AK | Designated contracting states |
Kind code of ref document: A1Designated state(s): AL AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HR HU IE IS IT LI LT LU LV MC MK MT NL NO PL PT RO RS SE SI SK SM TR |
|
AX | Request for extension of the european patent |
Extension state: BA ME |
|
DAX | Request for extension of the european patent (deleted) | ||
A4 | Supplementary search report drawn up and despatched |
Effective date: 20170512 |
|
RIC1 | Information provided on ipc code assigned before grant |
Ipc: H04N 19/12 20140101AFI20170508BHEPIpc: H04N 19/159 20140101ALI20170508BHEPIpc: H04N 19/60 20140101ALI20170508BHEPIpc: H04N 19/625 20140101ALI20170508BHEPIpc: H04N 19/176 20140101ALI20170508BHEP |
|
RAP1 | Party data changed (applicant data changed or rights of an application transferred) |
Owner name: GOOGLE LLC |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: EXAMINATION IS IN PROGRESS |
|
17Q | First examination report despatched |
Effective date: 20180524 |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R079Ref document number: 602014064696Country of ref document: DEFree format text: PREVIOUS MAIN CLASS: H04N0019625000Ipc: H04N0019120000 |
|
GRAP | Despatch of communication of intention to grant a patent |
Free format text: ORIGINAL CODE: EPIDOSNIGR1 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: GRANT OF PATENT IS INTENDED |
|
RIC1 | Information provided on ipc code assigned before grant |
Ipc: H04N 19/176 20140101ALI20191108BHEPIpc: H04N 19/625 20140101ALI20191108BHEPIpc: H04N 19/159 20140101ALI20191108BHEPIpc: H04N 19/42 20140101ALI20191108BHEPIpc: H04N 19/60 20140101ALI20191108BHEPIpc: H04N 19/12 20140101AFI20191108BHEP |
|
INTG | Intention to grant announced |
Effective date: 20191206 |
|
GRAS | Grant fee paid |
Free format text: ORIGINAL CODE: EPIDOSNIGR3 |
|
GRAA | (expected) grant |
Free format text: ORIGINAL CODE: 0009210 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: THE PATENT HAS BEEN GRANTED |
|
AK | Designated contracting states |
Kind code of ref document: B1Designated state(s): AL AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HR HU IE IS IT LI LT LU LV MC MK MT NL NO PL PT RO RS SE SI SK SM TR |
|
REG | Reference to a national code |
Ref country code: GBRef legal event code: FG4D |
|
REG | Reference to a national code |
Ref country code: CHRef legal event code: EP |
|
REG | Reference to a national code |
Ref country code: ATRef legal event code: REFRef document number: 1265086Country of ref document: ATKind code of ref document: TEffective date: 20200515 |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R096Ref document number: 602014064696Country of ref document: DE |
|
REG | Reference to a national code |
Ref country code: IERef legal event code: FG4D |
|
REG | Reference to a national code |
Ref country code: NLRef legal event code: MPEffective date: 20200429 |
|
REG | Reference to a national code |
Ref country code: LTRef legal event code: MG4D |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: FIFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200429Ref country code: NOFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200729Ref country code: LTFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200429Ref country code: GRFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200730Ref country code: PTFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200831Ref country code: ISFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200829Ref country code: SEFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200429 |
|
REG | Reference to a national code |
Ref country code: ATRef legal event code: MK05Ref document number: 1265086Country of ref document: ATKind code of ref document: TEffective date: 20200429 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: BGFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200729Ref country code: RSFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200429Ref country code: LVFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200429Ref country code: HRFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200429 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: ALFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200429Ref country code: NLFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200429 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: ESFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200429Ref country code: DKFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200429Ref country code: CZFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200429Ref country code: ATFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200429Ref country code: EEFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200429Ref country code: ROFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200429Ref country code: SMFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200429Ref country code: ITFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200429 |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R097Ref document number: 602014064696Country of ref document: DE |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: SKFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200429Ref country code: PLFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200429 |
|
PLBE | No opposition filed within time limit |
Free format text: ORIGINAL CODE: 0009261 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: NO OPPOSITION FILED WITHIN TIME LIMIT |
|
26N | No opposition filed |
Effective date: 20210201 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: SIFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200429 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: MCFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200429 |
|
REG | Reference to a national code |
Ref country code: CHRef legal event code: PL |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: LUFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20201120 |
|
REG | Reference to a national code |
Ref country code: BERef legal event code: MMEffective date: 20201130 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: LIFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20201130Ref country code: CHFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20201130 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: IEFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20201120Ref country code: FRFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20201130 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: TRFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200429Ref country code: MTFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200429Ref country code: CYFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200429 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: MKFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200429 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: BEFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20201130 |
|
P01 | Opt-out of the competence of the unified patent court (upc) registered |
Effective date: 20230510 |
|
PGFP | Annual fee paid to national office [announced via postgrant information from national office to epo] |
Ref country code: GBPayment date: 20231127Year of fee payment: 10 |
|
PGFP | Annual fee paid to national office [announced via postgrant information from national office to epo] |
Ref country code: DEPayment date: 20231129Year of fee payment: 10 |
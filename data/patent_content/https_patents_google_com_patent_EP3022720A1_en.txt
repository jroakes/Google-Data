EP3022720A1 - Method and device for processing motion events - Google Patents
Method and device for processing motion eventsInfo
- Publication number
- EP3022720A1 EP3022720A1 EP15745024.8A EP15745024A EP3022720A1 EP 3022720 A1 EP3022720 A1 EP 3022720A1 EP 15745024 A EP15745024 A EP 15745024A EP 3022720 A1 EP3022720 A1 EP 3022720A1
- Authority
- EP
- European Patent Office
- Prior art keywords
- event
- motion
- video
- implementations
- user
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Granted
Links
- 230000033001 locomotion Effects 0.000 title claims abstract description 1081
- 238000000034 method Methods 0.000 title claims description 244
- 238000012545 processing Methods 0.000 title claims description 107
- 238000012544 monitoring process Methods 0.000 claims description 170
- 230000004044 response Effects 0.000 claims description 112
- 238000003860 storage Methods 0.000 claims description 50
- 238000012552 review Methods 0.000 claims description 47
- 230000002123 temporal effect Effects 0.000 claims description 15
- 230000003068 static effect Effects 0.000 claims description 14
- 239000002131 composite material Substances 0.000 claims description 7
- 238000002372 labelling Methods 0.000 claims 1
- 230000000875 corresponding effect Effects 0.000 description 162
- 239000013598 vector Substances 0.000 description 147
- 230000008569 process Effects 0.000 description 59
- 238000001514 detection method Methods 0.000 description 54
- 238000010586 diagram Methods 0.000 description 34
- 230000002596 correlated effect Effects 0.000 description 30
- 230000006870 function Effects 0.000 description 27
- 230000006854 communication Effects 0.000 description 25
- 238000004891 communication Methods 0.000 description 25
- 230000008859 change Effects 0.000 description 18
- 230000000694 effects Effects 0.000 description 14
- 230000001276 controlling effect Effects 0.000 description 13
- 238000001914 filtration Methods 0.000 description 13
- 230000001629 suppression Effects 0.000 description 13
- 210000003811 finger Anatomy 0.000 description 7
- 241000699666 Mus <mouse, genus> Species 0.000 description 6
- 239000007787 solid Substances 0.000 description 6
- 230000005540 biological transmission Effects 0.000 description 5
- 230000002262 irrigation Effects 0.000 description 5
- 238000003973 irrigation Methods 0.000 description 5
- 235000014510 cooky Nutrition 0.000 description 4
- 230000001419 dependent effect Effects 0.000 description 4
- 230000001965 increasing effect Effects 0.000 description 4
- 230000003993 interaction Effects 0.000 description 4
- 239000000047 product Substances 0.000 description 4
- 230000001960 triggered effect Effects 0.000 description 4
- 230000000007 visual effect Effects 0.000 description 4
- CURLTUGMZLYLDI-UHFFFAOYSA-N Carbon dioxide Chemical compound O=C=O CURLTUGMZLYLDI-UHFFFAOYSA-N 0.000 description 3
- UGFAIRIUMAVXCW-UHFFFAOYSA-N Carbon monoxide Chemical compound [O+]#[C-] UGFAIRIUMAVXCW-UHFFFAOYSA-N 0.000 description 3
- 238000004458 analytical method Methods 0.000 description 3
- 230000008901 benefit Effects 0.000 description 3
- 230000007175 bidirectional communication Effects 0.000 description 3
- 230000033228 biological regulation Effects 0.000 description 3
- 238000005516 engineering process Methods 0.000 description 3
- 230000007613 environmental effect Effects 0.000 description 3
- 230000000977 initiatory effect Effects 0.000 description 3
- 239000000203 mixture Substances 0.000 description 3
- 230000003287 optical effect Effects 0.000 description 3
- 238000012805 post-processing Methods 0.000 description 3
- 230000035945 sensitivity Effects 0.000 description 3
- 238000012549 training Methods 0.000 description 3
- 230000009471 action Effects 0.000 description 2
- 238000013459 approach Methods 0.000 description 2
- 238000004364 calculation method Methods 0.000 description 2
- 229910002092 carbon dioxide Inorganic materials 0.000 description 2
- 229910002091 carbon monoxide Inorganic materials 0.000 description 2
- 238000004040 coloring Methods 0.000 description 2
- 230000000295 complement effect Effects 0.000 description 2
- 238000007796 conventional method Methods 0.000 description 2
- 230000003247 decreasing effect Effects 0.000 description 2
- 235000019580 granularity Nutrition 0.000 description 2
- 238000009499 grossing Methods 0.000 description 2
- 239000000383 hazardous chemical Substances 0.000 description 2
- 230000001976 improved effect Effects 0.000 description 2
- 230000000670 limiting effect Effects 0.000 description 2
- 230000007774 longterm Effects 0.000 description 2
- 238000010801 machine learning Methods 0.000 description 2
- 230000000873 masking effect Effects 0.000 description 2
- 238000012986 modification Methods 0.000 description 2
- 230000004048 modification Effects 0.000 description 2
- 238000012913 prioritisation Methods 0.000 description 2
- 238000013138 pruning Methods 0.000 description 2
- 230000011218 segmentation Effects 0.000 description 2
- 239000000779 smoke Substances 0.000 description 2
- 210000003813 thumb Anatomy 0.000 description 2
- 101100269850 Caenorhabditis elegans mask-1 gene Proteins 0.000 description 1
- 241000282421 Canidae Species 0.000 description 1
- OKTJSMMVPCPJKN-UHFFFAOYSA-N Carbon Chemical compound [C] OKTJSMMVPCPJKN-UHFFFAOYSA-N 0.000 description 1
- 241000282412 Homo Species 0.000 description 1
- 101100408383 Mus musculus Piwil1 gene Proteins 0.000 description 1
- 241000699670 Mus sp. Species 0.000 description 1
- 230000004931 aggregating effect Effects 0.000 description 1
- 230000002776 aggregation Effects 0.000 description 1
- 238000004220 aggregation Methods 0.000 description 1
- 230000009286 beneficial effect Effects 0.000 description 1
- 229910052799 carbon Inorganic materials 0.000 description 1
- 239000001569 carbon dioxide Substances 0.000 description 1
- 231100000357 carcinogen Toxicity 0.000 description 1
- 239000003183 carcinogenic agent Substances 0.000 description 1
- 230000001364 causal effect Effects 0.000 description 1
- 230000001413 cellular effect Effects 0.000 description 1
- 230000006835 compression Effects 0.000 description 1
- 238000007906 compression Methods 0.000 description 1
- 238000010411 cooking Methods 0.000 description 1
- 238000013480 data collection Methods 0.000 description 1
- 238000009826 distribution Methods 0.000 description 1
- 239000003814 drug Substances 0.000 description 1
- 229940079593 drug Drugs 0.000 description 1
- 238000005265 energy consumption Methods 0.000 description 1
- 230000002708 enhancing effect Effects 0.000 description 1
- 231100000573 exposure to toxins Toxicity 0.000 description 1
- 239000000284 extract Substances 0.000 description 1
- 230000001815 facial effect Effects 0.000 description 1
- 229910000078 germane Inorganic materials 0.000 description 1
- 230000036541 health Effects 0.000 description 1
- 230000002779 inactivation Effects 0.000 description 1
- 230000002427 irreversible effect Effects 0.000 description 1
- 230000009191 jumping Effects 0.000 description 1
- 238000007726 management method Methods 0.000 description 1
- 238000010295 mobile communication Methods 0.000 description 1
- 230000002093 peripheral effect Effects 0.000 description 1
- 230000001737 promoting effect Effects 0.000 description 1
- 238000011084 recovery Methods 0.000 description 1
- 230000002829 reductive effect Effects 0.000 description 1
- 230000008439 repair process Effects 0.000 description 1
- 238000011160 research Methods 0.000 description 1
- 239000000126 substance Substances 0.000 description 1
- 239000013589 supplement Substances 0.000 description 1
- 230000008093 supporting effect Effects 0.000 description 1
- 230000002459 sustained effect Effects 0.000 description 1
- 230000026676 system process Effects 0.000 description 1
- 230000008685 targeting Effects 0.000 description 1
- 239000012855 volatile organic compound Substances 0.000 description 1
- XLYOFNOQVPJJNP-UHFFFAOYSA-N water Substances O XLYOFNOQVPJJNP-UHFFFAOYSA-N 0.000 description 1
Classifications
-
- G—PHYSICS
- G08—SIGNALLING
- G08B—SIGNALLING OR CALLING SYSTEMS; ORDER TELEGRAPHS; ALARM SYSTEMS
- G08B13/00—Burglar, theft or intruder alarms
- G08B13/18—Actuation by interference with heat, light, or radiation of shorter wavelength; Actuation by intruding sources of heat, light, or radiation of shorter wavelength
- G08B13/189—Actuation by interference with heat, light, or radiation of shorter wavelength; Actuation by intruding sources of heat, light, or radiation of shorter wavelength using passive radiation detection systems
- G08B13/194—Actuation by interference with heat, light, or radiation of shorter wavelength; Actuation by intruding sources of heat, light, or radiation of shorter wavelength using passive radiation detection systems using image scanning and comparing systems
- G08B13/196—Actuation by interference with heat, light, or radiation of shorter wavelength; Actuation by intruding sources of heat, light, or radiation of shorter wavelength using passive radiation detection systems using image scanning and comparing systems using television cameras
- G08B13/19678—User interface
- G08B13/19682—Graphic User Interface [GUI] presenting system data to the user, e.g. information on a screen helping a user interacting with an alarm system
-
- G—PHYSICS
- G08—SIGNALLING
- G08B—SIGNALLING OR CALLING SYSTEMS; ORDER TELEGRAPHS; ALARM SYSTEMS
- G08B13/00—Burglar, theft or intruder alarms
- G08B13/18—Actuation by interference with heat, light, or radiation of shorter wavelength; Actuation by intruding sources of heat, light, or radiation of shorter wavelength
- G08B13/189—Actuation by interference with heat, light, or radiation of shorter wavelength; Actuation by intruding sources of heat, light, or radiation of shorter wavelength using passive radiation detection systems
- G08B13/194—Actuation by interference with heat, light, or radiation of shorter wavelength; Actuation by intruding sources of heat, light, or radiation of shorter wavelength using passive radiation detection systems using image scanning and comparing systems
- G08B13/196—Actuation by interference with heat, light, or radiation of shorter wavelength; Actuation by intruding sources of heat, light, or radiation of shorter wavelength using passive radiation detection systems using image scanning and comparing systems using television cameras
- G08B13/19602—Image analysis to detect motion of the intruder, e.g. by frame subtraction
- G08B13/19608—Tracking movement of a target, e.g. by detecting an object predefined as a target, using target direction and or velocity to predict its new position
-
- G—PHYSICS
- G08—SIGNALLING
- G08B—SIGNALLING OR CALLING SYSTEMS; ORDER TELEGRAPHS; ALARM SYSTEMS
- G08B13/00—Burglar, theft or intruder alarms
- G08B13/18—Actuation by interference with heat, light, or radiation of shorter wavelength; Actuation by intruding sources of heat, light, or radiation of shorter wavelength
- G08B13/189—Actuation by interference with heat, light, or radiation of shorter wavelength; Actuation by intruding sources of heat, light, or radiation of shorter wavelength using passive radiation detection systems
- G08B13/194—Actuation by interference with heat, light, or radiation of shorter wavelength; Actuation by intruding sources of heat, light, or radiation of shorter wavelength using passive radiation detection systems using image scanning and comparing systems
- G08B13/196—Actuation by interference with heat, light, or radiation of shorter wavelength; Actuation by intruding sources of heat, light, or radiation of shorter wavelength using passive radiation detection systems using image scanning and comparing systems using television cameras
- G08B13/19602—Image analysis to detect motion of the intruder, e.g. by frame subtraction
- G08B13/1961—Movement detection not involving frame subtraction, e.g. motion detection on the basis of luminance changes in the image
-
- G—PHYSICS
- G08—SIGNALLING
- G08B—SIGNALLING OR CALLING SYSTEMS; ORDER TELEGRAPHS; ALARM SYSTEMS
- G08B13/00—Burglar, theft or intruder alarms
- G08B13/18—Actuation by interference with heat, light, or radiation of shorter wavelength; Actuation by intruding sources of heat, light, or radiation of shorter wavelength
- G08B13/189—Actuation by interference with heat, light, or radiation of shorter wavelength; Actuation by intruding sources of heat, light, or radiation of shorter wavelength using passive radiation detection systems
- G08B13/194—Actuation by interference with heat, light, or radiation of shorter wavelength; Actuation by intruding sources of heat, light, or radiation of shorter wavelength using passive radiation detection systems using image scanning and comparing systems
- G08B13/196—Actuation by interference with heat, light, or radiation of shorter wavelength; Actuation by intruding sources of heat, light, or radiation of shorter wavelength using passive radiation detection systems using image scanning and comparing systems using television cameras
- G08B13/19639—Details of the system layout
- G08B13/19645—Multiple cameras, each having view on one of a plurality of scenes, e.g. multiple cameras for multi-room surveillance or for tracking an object by view hand-over
-
- G—PHYSICS
- G08—SIGNALLING
- G08B—SIGNALLING OR CALLING SYSTEMS; ORDER TELEGRAPHS; ALARM SYSTEMS
- G08B13/00—Burglar, theft or intruder alarms
- G08B13/18—Actuation by interference with heat, light, or radiation of shorter wavelength; Actuation by intruding sources of heat, light, or radiation of shorter wavelength
- G08B13/189—Actuation by interference with heat, light, or radiation of shorter wavelength; Actuation by intruding sources of heat, light, or radiation of shorter wavelength using passive radiation detection systems
- G08B13/194—Actuation by interference with heat, light, or radiation of shorter wavelength; Actuation by intruding sources of heat, light, or radiation of shorter wavelength using passive radiation detection systems using image scanning and comparing systems
- G08B13/196—Actuation by interference with heat, light, or radiation of shorter wavelength; Actuation by intruding sources of heat, light, or radiation of shorter wavelength using passive radiation detection systems using image scanning and comparing systems using television cameras
- G08B13/19639—Details of the system layout
- G08B13/19652—Systems using zones in a single scene defined for different treatment, e.g. outer zone gives pre-alarm, inner zone gives alarm
-
- G—PHYSICS
- G08—SIGNALLING
- G08B—SIGNALLING OR CALLING SYSTEMS; ORDER TELEGRAPHS; ALARM SYSTEMS
- G08B13/00—Burglar, theft or intruder alarms
- G08B13/18—Actuation by interference with heat, light, or radiation of shorter wavelength; Actuation by intruding sources of heat, light, or radiation of shorter wavelength
- G08B13/189—Actuation by interference with heat, light, or radiation of shorter wavelength; Actuation by intruding sources of heat, light, or radiation of shorter wavelength using passive radiation detection systems
- G08B13/194—Actuation by interference with heat, light, or radiation of shorter wavelength; Actuation by intruding sources of heat, light, or radiation of shorter wavelength using passive radiation detection systems using image scanning and comparing systems
- G08B13/196—Actuation by interference with heat, light, or radiation of shorter wavelength; Actuation by intruding sources of heat, light, or radiation of shorter wavelength using passive radiation detection systems using image scanning and comparing systems using television cameras
- G08B13/19665—Details related to the storage of video surveillance data
- G08B13/19671—Addition of non-video data, i.e. metadata, to video stream
-
- G—PHYSICS
- G08—SIGNALLING
- G08B—SIGNALLING OR CALLING SYSTEMS; ORDER TELEGRAPHS; ALARM SYSTEMS
- G08B13/00—Burglar, theft or intruder alarms
- G08B13/18—Actuation by interference with heat, light, or radiation of shorter wavelength; Actuation by intruding sources of heat, light, or radiation of shorter wavelength
- G08B13/189—Actuation by interference with heat, light, or radiation of shorter wavelength; Actuation by intruding sources of heat, light, or radiation of shorter wavelength using passive radiation detection systems
- G08B13/194—Actuation by interference with heat, light, or radiation of shorter wavelength; Actuation by intruding sources of heat, light, or radiation of shorter wavelength using passive radiation detection systems using image scanning and comparing systems
- G08B13/196—Actuation by interference with heat, light, or radiation of shorter wavelength; Actuation by intruding sources of heat, light, or radiation of shorter wavelength using passive radiation detection systems using image scanning and comparing systems using television cameras
- G08B13/19665—Details related to the storage of video surveillance data
- G08B13/19671—Addition of non-video data, i.e. metadata, to video stream
- G08B13/19673—Addition of time stamp, i.e. time metadata, to video stream
Definitions
- the disclosed implementations relates generally to video monitoring, including, but not limited, to monitoring and reviewing motion events in a video stream.
- Video surveillance produces a large amount of continuous video data over the course of hours, days, and even months. Such video data includes many long and uneventful portions that are of no significance or interest to a reviewer.
- motion detection is used to trigger alerts or video recording.
- using motion detection as the only means for selecting video segments for user review may still produce too many video segments that are of no interest to the reviewer.
- some detected motions are generated by normal activities that routinely occur at the monitored location, and it is tedious and time consuming to manually scan through all of the normal activities recorded on video to identify a small number of activities that warrant special attention.
- a method of displaying indicators for motion events on an event timeline is performed at an electronic device (e.g., an electronic device 166, Figure 1; or a client device 504, Figures 5 and 7) with one or more processors, memory, and a display.
- an electronic device e.g., an electronic device 166, Figure 1; or a client device 504, Figures 5 and 7.
- the method includes displaying a video monitoring user interface on the display including a camera feed from a camera located remotely from the client device in a first region of the video monitoring user interface and an event timeline in a second region of the video monitoring user interface, where the event timeline includes a plurality of event indicators for a plurality of motion events previously detected by the camera.
- the method includes associating a newly created first category with a set of similar motion events from among the plurality of motion events previously detected by the camera.
- the method includes changing at least one display characteristic for a first set of pre-existing event indicators from among the plurality of event indicators on the event timeline that correspond to the first category, where the first set of pre-existing event indicators correspond to the set of similar motion events.
- a method of editing event categories is performed at an electronic device (e.g., the electronic device 166, Figure 1; or the client device 504, Figures 5 and 7) with one or more processors, memory, and a display.
- the method includes displaying a video monitoring user interface on the display with a plurality of user interface elements associated one or more recognized activities.
- the method includes detecting a user input selecting a respective user interface element from the plurality of user interface elements in the video monitoring user interface, the respective user interface element being associated with a respective event category of the one or more recognized event categories.
- the method includes displaying an editing user interface for the respective event category on the display with a plurality of animated representations in a first region of the editing user interface, where the plurality of animated representations correspond to a plurality of previously captured motion events assigned to the respective event category.
- a method of categorizing a detected motion event is performed at a computing system (e.g., the client device 504, Figures 5 and 7; the video server system 508, Figures 5-6; or a combination thereof) with one or more processors and memory.
- the method includes displaying a video monitoring user interface on the display including a video feed from a camera located remotely from the client device in a first region of the video monitoring user interface and an event timeline in a second region of the video monitoring user interface, where the event timeline includes one or more event indicators corresponding to one or more motion events previously detected by the camera.
- the method includes detecting a motion event and determining one or more characteristics for the motion event. In accordance with a determination that the one or more determined characteristics for the motion event satisfy one or more criteria for a respective event category, the method includes: assigning the motion event to the respective category; and displaying an indicator for the detected motion event on the event timeline with a display characteristic
- a method of generating a smart time-lapse video clip is performed at an electronic device (e.g., the electronic device 166, Figure 1; or the client device 504, Figures 5 and 7) with one or more processors, memory, and a display.
- the method includes displaying a video monitoring user interface on the display including a video feed from a camera located remotely from the client device in a first region of the video monitoring user interface and an event timeline in a second region of the video monitoring user interface, where the event timeline includes a plurality of event indicators for a plurality of motion events previously detected by the camera.
- the method includes detecting a first user input selecting a portion of the event timeline, where the selected portion of the event timeline includes a subset of the plurality of event indicators on the event timeline.
- the method includes causing generation of a time-lapse video clip of the selected portion of the event timeline.
- the method includes displaying the time- lapse video clip of the selected portion of the event timeline, where motion events corresponding to the subset of the plurality of event indicators are played at a slower speed than the remainder of the selected portion of the event timeline.
- a method of performing client-side zooming of a remote video feed is performed at an electronic device (e.g., the electronic device 166, Figure 1; or the client device 504, Figures 5 and 7) with one or more processors, memory, and a display.
- the method includes receiving a first video feed from a camera located remotely from the client device with a first field of view and displaying, on the display, the first video feed in a video monitoring user interface.
- the method includes detecting a first user input to zoom in on a respective portion of the first video feed and, in response to detecting the first user input, performing a software zoom function on the respective portion of the first video feed to display the respective portion of the first video feed in a first resolution.
- the method includes determining a current zoom magnification of the software zoom function and coordinates of the respective portion of the first video feed and sending a command to the camera to perform a hardware zoom function on the respective portion according to the current zoom magnification and the coordinates of the respective portion of the first video feed.
- the method includes receiving a second video feed from the camera with a second field of view different from the first field of view, where the second field of view corresponds to the respective portion and displaying, on the display, the second video feed in the video monitoring user interface, where the second video feed is displayed in a second resolution that is higher than the first resolution.
- a method of processing a video stream is performed at a computing system having one or more processors and memory (e.g., the camera 118, Figures 5 and 8; the video system server 508, Figures 5-6; a combination thereof).
- processors and memory e.g., the camera 118, Figures 5 and 8; the video system server 508, Figures 5-6; a combination thereof.
- the method includes processing the video stream to detect a start of a first motion event candidate in the video stream, in response to detecting the start of the first motion event candidate in the video stream, the method includes initiating event recognition processing on a first video segment associated with the start of the first motion event candidate, where initiating the event recognition processing further includes: determining a motion track of a first object identified in the first video segment; generating a representative motion vector for the first motion event candidate based on the respective motion track of the first object; and sending the representative motion vector for the first motion event candidate to an event categorizer, where the event categorizer assigns a respective motion event category to the first motion event candidate based on the representative motion vector of the first motion event candidate.
- a method of categorizing a motion event candidate is performed at a server (e.g., the video server system 508, Figures 5-6) having one or more processors and memory.
- the method includes obtaining a respective motion vector for each of a series of motion event candidates in real-time as said each motion event candidate is detected in a live video stream.
- the method includes determining a spatial relationship between the respective motion vector of said each motion event candidate to one or more existing clusters established based on a plurality of previously processed motion vectors.
- the method includes assigning the first motion event candidate to at least a first event category associated with the first existing cluster.
- a method of facilitating review of a video recording is performed at a server (e.g., the video server system 508, Figures 5-6) having one or more processors and memory.
- the method includes identifying a plurality of motion events from a video recording, wherein each of the motion events corresponds to a respective video segment along a timeline of the video recording and identifies at least one object in motion within a scene depicted in the video recording.
- the method includes: storing a respective event mask for each of the plurality of motion events identified in the video recording, the respective event mask including an aggregate of motion pixels associated with the at least one object in motion over multiple frames of the motion event; and receiving a definition of a zone of interest within the scene depicted in the video recording.
- the method includes: determining, for each of the plurality of motion events, whether the respective event mask of the motion event overlaps with the zone of interest by at least a predetermined overlap factor; and identifying one or more events of interest from the plurality of motion events, where the respective event mask of each of the identified events of interest is determined to overlap with the zone of interest by at least the predetermined overlap factor.
- a method of monitoring selected zones in a scene depicted in a video stream is performed at a server (e.g., the video server system 508, Figures 5-6) having one or more processors and memory.
- the method includes receiving a definition of a zone of interest within the scene depicted in the video steam.
- the method includes: determining, for each motion event detected in the video stream, whether a respective event mask of the motion event overlaps with the zone of interest by at least a predetermined overlap factor; and identifying the motion event as an event of interest associated with the zone of interest in accordance with a determination that the respective event mask of the motion event overlaps with the zone of interest by at least the predetermined overlap factor.
- a computing system e.g., the video server system
- a non-transitory computer readable storage medium stores one or more programs, where the one or more programs include instructions, which, when executed by a computing system (e.g., the video server system 508, Figures 5-6; the client device 504, Figures 5 and 7; or a combination thereof) with one or more processors, cause the computing device to perform, or control performance of, the operations of any of the methods described herein.
- a computing system e.g., the video server system 508, Figures 5-6; the client device 504, Figures 5 and 7; or a combination thereof
- a computing system (e.g., the video server system 508, Figures 5-6; the client device 504, Figures 5 and 7; or a combination thereof) includes means for performing, or controlling performance of, the operations of any of the methods described herein.
- computing systems are provided with more efficient methods for monitoring and facilitating review of motion events in a video stream, thereby increasing the effectiveness, efficiency, and user satisfaction with such systems.
- Such methods may complement or replace conventional methods for motion event monitoring and presentation.
- Figure 1 is a representative smart home environment in accordance with some implementations .
- Figure 2 is a block diagram illustrating a representative network architecture that includes a smart home network in accordance with some implementations.
- Figure 3 illustrates a network-level view of an extensible devices and services platform with which the smart home environment of Figure 1 is integrated, in accordance with some implementations.
- Figure 4 illustrates an abstracted functional view of the extensible devices and services platform of Figure 3, with reference to a processing engine as well as devices of the smart home environment, in accordance with some implementations.
- Figure 5 is a representative operating environment in which a video server system interacts with client devices and video sources in accordance with some
- Figure 6 is a block diagram illustrating a representative video server system in accordance with some implementations.
- Figure 7 is a block diagram illustrating a representative client device in accordance with some implementations.
- Figure 8 is a block diagram illustrating a representative video capturing device
- Figures 9A-9BB illustrate example user interfaces on a client device for monitoring and reviewing motion events in accordance with some implementations.
- Figure 10 illustrates a flow diagram of a process for performing client-side zooming of a remote video feed in accordance with some implementations.
- Figure 11 A illustrates example system architecture and processing pipeline for video monitoring in accordance with some implementations.
- Figure 1 IB illustrates techniques for motion event detection and false positive removal in video monitoring in accordance with some implementations.
- Figure 11C illustrates an example motion mask and an example event mask generated based on video data in accordance with some implementations.
- Figure 1 ID illustrates a process for learning event categories and categorizing motion events in accordance with some implementations.
- Figure 1 IE illustrates a process for identifying an event of interest based on selected zones of interest in accordance with some implementations.
- Figures 12A-12B illustrate a flowchart diagram of a method of displaying indicators for motion events on an event timeline in accordance with some implementations.
- Figures 13A-13B illustrate a flowchart diagram of a method of editing event categories in accordance with some implementations.
- Figures 14A-14B illustrate a flowchart diagram of a method of automatically categorizing a detected motion event in accordance with some implementations.
- Figures 15A-15C illustrate a flowchart diagram of a method of generating a smart time-lapse video clip in accordance with some implementations.
- Figures 16A-16B illustrate a flowchart diagram of a method of performing client- side zooming of a remote video feed in accordance with some implementations.
- Figures 17A-17D illustrate a flowchart diagram of a method of processing a video stream for video monitoring in accordance with some implementations.
- Figures 18A-18D illustrate a flowchart diagram of a method of performing activity recognition for video monitoring in accordance with some implementations.
- Figures 19A-19C illustrate a flowchart diagram of a method of facilitating review of a video recording in accordance with some implementations.
- Figures 20A-20B illustrate a flowchart diagram of a method of providing context-aware zone monitoring on a video server system in accordance with some
- This disclosure provides example user interfaces and data processing systems and methods for video monitoring.
- Video-based surveillance and security monitoring of a premises generates a continuous video feed that may last hours, days, and even months.
- motion-based recording triggers can help trim down the amount of video data that is actually recorded
- drawbacks associated with video recording triggers based on simple motion detection in the live video feed For example, when motion detection is used as a trigger for recording a video segment, the threshold of motion detection must be set appropriately for the scene of the video; otherwise, the recorded video may include many video segments containing trivial movements (e.g., lighting change, leaves moving in the wind, shifting of shadows due to changes in sunlight exposure, etc.) that are of no
- event categories can also be used as filters for real-time notifications and alerts. For example, when a new motion event is detected in a live video feed, the new motion event is immediately categorized, and if the event category of the newly detected mention event is a category of interest selected by a reviewer, a real-time notification or alert can be sent to the reviewer regarding the newly detected motion event. In addition, if the new event is detected in the live video feed as the reviewer is viewing a timeline of the video feed, the event indicator and the notification of the new event will have an appearance or display characteristic associated with the event category.
- the motion event categories for the video stream from each camera are gradually established through machine learning, and are thus tailored to the particular setting and use of the video camera.
- the event indicators for the past events in a newly discovered event category are refreshed to reflect the newly discovered event category.
- a clustering algorithm with automatic phase out of old, inactive, and/or sparse categories is used to categorize motion events. As a camera changes location, event categories that are no longer active are gradually retired without manual input to keep the motion event categorization model current. In some implementations, user input editing the assignment of past motion events into respective event categories is also taken into account for future event category assignment and new category creation.
- multiple objects may be moving simultaneously.
- the motion track associated with each moving object corresponds to a respective motion event candidate, such that the movement of the different objects in the same scene may be assigned to different motion event categories.
- motion events may occur in different regions of a scene at different times.
- a reviewer may only be interested in motion events that occurred within or entered a particular zone of interest in the scene.
- the zones of interest may not be known to the reviewer and/or the video server system until long after one or more motion events of interest have occurred within the zones of interest.
- a parent may not be interested in activities centered around a cookie jar until after some cookies have mysteriously gone missing.
- the zones of interest in the scene of a video feed can vary for a reviewer over time depending on a present purpose of the reviewer. For example, the parent may be interested in seeing all activities that occurred around the cookie jar one day when some cookies have gone missing, and the parent may be interested in seeing all activities that occurred around a mailbox the next day when some expected mail has gone missing.
- the techniques disclosed herein allow a reviewer to define and create one or more zones of interest within a static scene of a video feed, and then use the created zones of interest to retroactively identify all past motion events (or all motion events within a particular past time window) that have touched or entered the zones of interest.
- the identified motion events are optionally presented to the user in a timeline or in a list.
- real-time alerts for any new motion events that touch or enter the zones of interest are sent to the reviewer.
- the ability to quickly identify and retrieve past motion events that are associated with a newly created zone of interest addresses the drawbacks of conventional zone monitoring techniques where the zones of interest need to be defined first based on a certain degree of guessing and anticipation that may later prove to be inadequate or wrong, and where only future events (as opposed to both past and future events) within the zones of interest can be identified.
- the event detection is based on the motion information collected from the entire scene, rather than just within the zone(s) of interest.
- aspects of motion detection, motion object definition, motion track identification, false positive suppression, and event categorization are all based on image information collected from the entire scene, rather than just within each zone of interest.
- context around the zones of interest is taken into account when monitoring events within the zones of interest.
- the accuracy of event detection and categorization may be improved as compared to conventional zone monitoring techniques that perform all calculations with image data collected only within the zones of interest.
- event monitoring and review for video data including system architecture, data processing pipeline, event categorization, user interfaces for editing and reviewing past events (e.g., event timeline, retroactive coloring of event indicators, event filters based on event categories and zones of interest, and smart time-lapse video summary), notifying new events (e.g., real-time event pop-ups), creating zones of interest, and controlling camera's operation (e.g., changing video feed focus and resolution), and the like.
- event timeline e.g., event timeline, retroactive coloring of event indicators, event filters based on event categories and zones of interest, and smart time-lapse video summary
- notifying new events e.g., real-time event pop-ups
- creating zones of interest e.g., changing video feed focus and resolution
- Figures 1-4 provide an overview of exemplary smart home device networks and capabilities.
- Figures 5-8 provide a description of the systems and devices participating in the video monitoring.
- Figures 9A-9BB illustrate exemplary user interfaces for reviewing motion events (e.g., user interfaces including event timelines, event notifications, and event categories), editing event categories (e.g., user interface for editing motion events assigned to a particular category), and setting video monitoring preferences (e.g., user interfaces for creating and selecting zones of interest, setting zone monitoring triggers, selecting event filters, changing camera operation state, etc.).
- Figure 10 illustrates the interaction between devices to alter a camera operation state (e.g., zoom and data transmission).
- Figures 1 lA-1 IE illustrate data processing techniques supporting the video monitoring and event review capabilities described herein.
- Figures 12A-12B illustrate a flowchart diagram of a method of displaying indicators for motion events on an event timeline in accordance with some implementations.
- Figures 13A-13B illustrate a flowchart diagram of a method of editing event categories in accordance with some implementations.
- Figures 14A-14B illustrate a flowchart diagram of a method of automatically categorizing a detected motion event in accordance with some implementations.
- Figures 15A-15C illustrate a flowchart diagram of a method of generating a smart time-lapse video clip in accordance with some implementations.
- Figures 16A-16B illustrate a flowchart diagram of a method of performing client-side zooming of a remote video feed in accordance with some
- Figures 17A-20B illustrate flowchart diagrams of methods for video monitoring and event review described herein.
- the user interfaces in Figures 9A-9BB are used to illustrate the processes and/or methods in Figures 10, 12A-12B, 13A-13B, 14A-14B, 15A-15C, and 16A-16B, and provide frontend examples and context for the backend processes and/or methods in Figures 11A-11E, 17A-17D, 18A-18D, 19A-19C, and 20A-20B.
- first, second, etc. are, in some instances, used herein to describe various elements, these elements should not be limited by these terms. These terms are only used to distinguish one element from another.
- a first user interface could be termed a second user interface, and, similarly, a second user interface could be termed a first user interface, without departing from the scope of the various described implementations.
- the first user interface and the second user interface are both user interfaces, but they are not the same user interface.
- “smart home environments” may refer to smart environments for homes such as a single-family house, but the scope of the present teachings is not so limited.
- the present teachings are also applicable, without limitation, to duplexes, townhomes, multi-unit apartment buildings, hotels, retail stores, office buildings, industrial buildings, and more generally any living space or work space.
- the customer may be the landlord with respect to purchasing the unit
- the installer may be a local apartment supervisor
- a first user may be the tenant
- a second user may again be the landlord with respect to remote control functionality.
- identity of the person performing the action may be germane to a particular advantage provided by one or more of the implementations, such identity should not be construed in the descriptions that follow as necessarily limiting the scope of the present teachings to those particular individuals having those particular identities.
- FIG. 1 is a representative smart home environment in accordance with some implementations.
- Smart home environment 100 includes a structure 150, which is optionally a house, office building, garage, or mobile home. It will be appreciated that devices may also be integrated into a smart home environment 100 that does not include an entire structure 150, such as an apartment, condominium, or office space. Further, the smart home environment may control and/or be coupled to devices outside of the actual structure 150. Indeed, several devices in the smart home environment need not be physically within the structure 150. For example, a device controlling a pool heater 114 or irrigation system 116 may be located outside of structure 150.
- the depicted structure 150 includes a plurality of rooms 152, separated at least partly from each other via walls 154.
- the walls 154 may include interior walls or exterior walls.
- Each room may further include a floor 156 and a ceiling 158.
- Devices may be mounted on, integrated with and/or supported by a wall 154, floor 156 or ceiling 158.
- the smart home environment 100 includes a plurality of devices, including intelligent, multi-sensing, network-connected devices, that integrate seamlessly with each other in a smart home network (e.g., 202 Figure 2) and/or with a central server or a cloud-computing system to provide a variety of useful smart home functions.
- a smart home network e.g., 202 Figure 2
- a central server or a cloud-computing system to provide a variety of useful smart home functions.
- the smart home environment 100 may include one or more intelligent, multi- sensing, network-connected thermostats 102 (hereinafter referred to as “smart thermostats 102"), one or more intelligent, network-connected, multi-sensing hazard detection units 104 (hereinafter referred to as “smart hazard detectors 104"), and one or more intelligent, multi- sensing, network-connected entryway interface devices 106 (hereinafter referred to as "smart doorbells 106").
- the smart thermostat 102 detects ambient climate characteristics (e.g., temperature and/or humidity) and controls a HVAC system 103 accordingly.
- the smart hazard detector 104 may detect the presence of a hazardous substance or a substance indicative of a hazardous substance (e.g., smoke, fire, and/or carbon
- the smart doorbell 106 may detect a person's approach to or departure from a location (e.g., an outer door), control doorbell functionality, announce a person's approach or departure via audio or visual means, and/or control settings on a security system (e.g., to activate or deactivate the security system when occupants go and come).
- a security system e.g., to activate or deactivate the security system when occupants go and come.
- the smart home environment 100 includes one or more intelligent, multi-sensing, network-connected wall switches 108 (hereinafter referred to as "smart wall switches 108"), along with one or more intelligent, multi-sensing, network- connected wall plug interfaces 110 (hereinafter referred to as "smart wall plugs 1 10").
- the smart wall switches 108 may detect ambient lighting conditions, detect room-occupancy states, and control a power and/or dim state of one or more lights. In some instances, smart wall switches 108 may also control a power state or speed of a fan, such as a ceiling fan.
- the smart wall plugs 110 may detect occupancy of a room or enclosure and control supply of power to one or more wall plugs (e.g., such that power is not supplied to the plug if nobody is at home).
- the smart home environment 100 of Figure 1 includes a plurality of intelligent, multi-sensing, network-connected appliances 112
- smart appliances 112 such as refrigerators, stoves, ovens, televisions, washers, dryers, lights, stereos, intercom systems, garage-door openers, floor fans, ceiling fans, wall air conditioners, pool heaters, irrigation systems, security systems, space heaters, window AC units, motorized duct vents, and so forth.
- an appliance when plugged in, an appliance may announce itself to the smart home network, such as by indicating what type of appliance it is, and it may automatically integrate with the controls of the smart home. Such communication by the appliance to the smart home may be facilitated by either a wired or wireless communication protocol.
- the smart home may also include a variety of non-communicating legacy appliances 140, such as old conventional washer/dryers, refrigerators, and the like, which may be controlled by smart wall plugs 110.
- the smart home environment 100 may further include a variety of partially communicating legacy appliances 142, such as infrared ("IR") controlled wall air conditioners or other IR-controlled devices, which may be controlled by IR signals provided by the smart hazard detectors 104 or the smart wall switches 108.
- IR infrared
- the smart home environment 100 includes one or more network-connected cameras 118 that are configured to provide video monitoring and security in the smart home environment 100.
- the smart home environment 100 may also include communication with devices outside of the physical home but within a proximate geographical range of the home.
- the smart home environment 100 may include a pool heater monitor 114 that communicates a current pool temperature to other devices within the smart home environment 100 and/or receives commands for controlling the pool temperature.
- the smart home environment 100 may include an irrigation monitor 116 that communicates information regarding irrigation systems within the smart home environment 100 and/or receives control information for controlling such irrigation systems.
- Figure 1 may further allow a user to interact with the device even if the user is not proximate to the device.
- a user may communicate with a device using a computer (e.g., a desktop computer, laptop computer, or tablet) or other portable electronic device (e.g., a smartphone) 166.
- a webpage or application may be configured to receive communications from the user and control the device based on the communications and/or to present information about the device's operation to the user.
- the user may view a current set point temperature for a device and adjust it using a computer.
- the user may be in the structure during this remote communication or outside the structure.
- users may control the smart thermostat and other smart devices in the smart home environment 100 using a network-connected computer or portable electronic device 166.
- some or all of the occupants e.g., individuals who live in the home
- An occupant may use their registered device 166 to remotely control the smart devices of the home, such as when the occupant is at work or on vacation.
- the occupant may also use their registered device to control the smart devices when the occupant is actually located inside the home, such as when the occupant is sitting on a couch inside the home. It should be appreciated that instead of or in addition to registering the devices 166, the smart home environment 100 may make inferences about which individuals live in the home and are therefore occupants and which devices 166 are associated with those individuals. As such, the smart home environment may "learn" who is an occupant and permit the devices 166 associated with those individuals to control the smart devices of the home.
- the devices 102, 104, 106, 108, 110, 112, 114, 116, and/or 118 are capable of data communications and information sharing with other smart devices, a central server or cloud-computing system, and/or other devices that are network-connected.
- the required data communications may be carried out using any of a variety of custom or standard wireless protocols (IEEE 802.15.4, Wi-Fi, ZigBee, 6L0WPAN, Thread, Z-Wave, Bluetooth Smart, ISAlOO. l la, WirelessHART, MiWi, etc.) and/or any of a variety of custom or standard wired protocols (CAT6 Ethernet,
- the smart devices serve as wireless or wired repeaters. For example, a first one of the smart devices communicates with a second one of the smart devices via a wireless router. The smart devices may further communicate with each other via a connection to one or more networks 162 such as the Internet. Through the one or more networks 162, the smart devices may communicate with a smart home provider server system 164 (also called a central server system and/or a cloud-computing system herein). In some implementations, the smart home provider server system 164 may include multiple server systems each dedicated to data processing associated with a respective subset of the smart devices (e.g., a video server system may be dedicated to data processing associated with camera(s) 118).
- the smart home provider server system 164 may be associated with a manufacturer, support entity, or service provider associated with the smart device.
- a user is able to contact customer support using a smart device itself rather than needing to use other communication means, such as a telephone or Internet-connected computer.
- software updates are automatically sent from the smart home provider server system 164 to smart devices (e.g., when available, when purchased, or at routine intervals).
- Figure 2 is a block diagram illustrating a representative network architecture
- one or more smart devices 204 in the smart home environment 100 combine to create a mesh network in the smart home network 202.
- the one or more smart devices 204 in the smart home network 202 operate as a smart home controller.
- a smart home controller has more computing power than other smart devices.
- a smart home controller processes inputs (e.g., from the smart device(s) 204, the electronic device 166, and/or the smart home provider server system 164) and sends commands (e.g., to the smart device(s) 204 in the smart home network 202) to control operation of the smart home environment 100.
- some of the smart device(s) 204 in the mesh network are "spokesman" nodes (e.g., node 204-1) and others are “low-powered” nodes (e.g., node 204-9).
- Some of the smart device(s) 204 in the smart home environment 100 are battery powered, while others have a regular and reliable power source, such as by connecting to wiring (e.g., to 120V line voltage wires) behind the walls 154 of the smart home environment.
- the smart devices that have a regular and reliable power source are referred to as "spokesman" nodes. These nodes are typically equipped with the capability of using a wireless protocol to facilitate bidirectional communication with a variety of other devices in the smart home environment 100, as well as with the central server or cloud-computing system 164.
- one or more "spokesman” nodes operate as a smart home controller.
- the devices that are battery powered are referred to as "low-power" nodes. These nodes tend to be smaller than spokesman nodes and typically only communicate using wireless protocols that require very little power, such as Zigbee, 6L0WPAN, etc.
- some low-power nodes are incapable of
- the spokesman nodes and some of the low-powered nodes are capable of "listening.” Accordingly, users, other devices, and/or the central server or cloud- computing system 164 may communicate control commands to the low-powered nodes. For example, a user may use the portable electronic device 166 (e.g., a smartphone) to send commands over the Internet to the central server or cloud-computing system 164, which then relays the commands to one or more spokesman nodes in the smart home network 202.
- the portable electronic device 166 e.g., a smartphone
- the spokesman nodes drop down to a low-power protocol to communicate the commands to the low-power nodes throughout the smart home network 202, as well as to other spokesman nodes that did not receive the commands directly from the central server or cloud-computing system 164.
- a smart nightlight 170 is a low-power node.
- the smart nightlight 170 houses an occupancy sensor, such as an ultrasonic or passive IR sensor, and an ambient light sensor, such as a photo resistor or a single-pixel sensor that measures light in the room.
- the smart nightlight 170 is configured to activate the light source when its ambient light sensor detects that the room is dark and when its occupancy sensor detects that someone is in the room. In other implementations, the smart nightlight 170 is simply configured to activate the light source when its ambient light sensor detects that the room is dark.
- the smart nightlight 170 includes a low-power wireless communication chip (e.g., a ZigBee chip) that regularly sends out messages regarding the occupancy of the room and the amount of light in the room, including instantaneous messages coincident with the occupancy sensor detecting the presence of a person in the room.
- these messages may be sent wirelessly, using the mesh network, from node to node (i.e., smart device to smart device) within the smart home network 202 as well as over the one or more networks 162 to the central server or cloud-computing system 164.
- low-power nodes include battery-operated versions of the smart hazard detectors 104. These smart hazard detectors 104 are often located in an area without access to constant and reliable power and may include any number and type of sensors, such as smoke/fire/heat sensors, carbon monoxide/dioxide sensors,
- the smart hazard detectors 104 may send messages that correspond to each of the respective sensors to the other devices and/or the central server or cloud- computing system 164, such as by using the mesh network as described above.
- Examples of spokesman nodes include smart doorbells 106, smart thermostats
- These devices 102, 106, 108, and 110 are often located near and connected to a reliable power source, and therefore may include more power-consuming components, such as one or more communication chips capable of bidirectional communication in a variety of protocols.
- the smart home environment 100 includes service robots 168 that are configured to carry out, in an autonomous manner, any of a variety of household tasks.
- Figure 3 illustrates a network-level view of an extensible devices and services platform 300 with which the smart home environment 100 of Figure 1 is integrated, in accordance with some implementations.
- the extensible devices and services platform 300 includes remote servers or cloud computing system 164.
- Each of the intelligent, network- connected devices 102, 104, 106, 108, 110, 112, 114, 116, and 118 from Figure 1 may communicate with the remote servers or cloud computing system 164.
- a connection to the one or more networks 162 may be established either directly (e.g., using 3G/4G connectivity to a wireless carrier), or through a network interface 160 (e.g., a router, switch, gateway, hub, or an intelligent, dedicated whole- home control node), or through any combination thereof.
- a network interface 160 e.g., a router, switch, gateway, hub, or an intelligent, dedicated whole- home control node
- the devices and services platform 300 are configured to provide the devices and services platform 300.
- the devices and services platform 300 communicates with and collects data from the smart devices of the smart home environment 100.
- the devices and services platform 300 may communicate with and collects data from the smart devices of the smart home environment 100.
- the devices and services platform 300 may communicate with and collects data from the smart devices of the smart home environment 100.
- the devices and services platform 300 may communicate with and collects data from the smart devices of the smart home environment 100.
- Example collected home data 302 includes, without limitation, power consumption data, occupancy data, HVAC settings and usage data, carbon monoxide levels data, carbon dioxide levels data, volatile organic compounds levels data, sleeping schedule data, cooking schedule data, inside and outside temperature humidity data, television viewership data, inside and outside noise level data, pressure data, video data, etc.
- the smart home provider server system 164 provides one or more services 304 to smart homes.
- Example services 304 include, without limitation, software updates, customer support, sensor data collection/logging, remote access, remote or distributed control, and/or use suggestions (e.g., based on the collected home data 302) to improve performance, reduce utility cost, increase safety, etc.
- data associated with the services 304 is stored at the smart home provider server system 164, and the smart home provider server system 164 retrieves and transmits the data at appropriate times (e.g., at regular intervals, upon receiving a request from a user, etc.).
- the extensible devices and the services platform 300 includes a processing engine 306, which may be concentrated at a single server or distributed among several different computing entities without limitation.
- the processing engine 306 includes engines configured to receive data from the devices of smart home environments (e.g., via the Internet and/or a network interface), to index the data, to analyze the data and/or to generate statistics based on the analysis or as part of the analysis.
- the analyzed data is stored as derived home data 308.
- Results of the analysis or statistics may thereafter be transmitted back to the device that provided home data used to derive the results, to other devices, to a server providing a webpage to a user of the device, or to other non-smart device entities.
- use statistics, use statistics relative to use of other devices, use patterns, and/or statistics summarizing sensor readings are generated by the processing engine 306 and transmitted.
- the results or statistics may be provided via the one or more networks 162.
- the processing engine 306 may be configured and programmed to derive a variety of useful information from the home data 302.
- a single server may include one or more processing engines.
- the derived home data 308 may be used at different granularities for a variety of useful purposes, ranging from explicit programmed control of the devices on a per-home, per-neighborhood, or per-region basis (for example, demand-response programs for electrical utilities), to the generation of inferential abstractions that may assist on a per-home basis (for example, an inference may be drawn that the homeowner has left for vacation and so security detection equipment may be put on heightened sensitivity), to the generation of statistics and associated inferential abstractions that may be used for government or charitable purposes.
- processing engine 306 may generate statistics about device usage across a population of devices and send the statistics to device users, service providers or other entities (e.g., entities that have requested the statistics and/or entities that have provided monetary compensation for the statistics).
- the devices and services platform 300 exposes a range of application programming interfaces (APIs) 310 to third parties, such as charities 314, governmental entities 316 (e.g., the Food and Drug Administration or the Environmental Protection Agency), academic institutions 318 (e.g., university researchers), businesses 320 (e.g., providing device warranties or service to related equipment, targeting advertisements based on home data), utility companies 324, and other third parties.
- the APIs 310 are coupled to and permit third-party systems to communicate with the smart home provider server system 164, including the services 304, the processing engine 306, the home data 302, and the derived home data 308.
- the APIs 310 allow applications executed by the third parties to initiate specific data processing tasks that are executed by the smart home provider server system 164, as well as to receive dynamic updates to the home data 302 and the derived home data 308.
- third parties may develop programs and/or applications, such as web applications or mobile applications, that integrate with the smart home provider server system 164 to provide services and information to users.
- programs and applications may be, for example, designed to help users reduce energy consumption, to preemptively service faulty equipment, to prepare for high service demands, to track past service performance, etc., and/or to perform other beneficial functions or tasks.
- Figure 4 illustrates an abstracted functional view 400 of the extensible devices and services platform 300 of Figure 3, with reference to a processing engine 306 as well as devices of the smart home environment, in accordance with some implementations.
- the devices may be thought of as sharing common characteristics in that each device is a data consumer 402 (DC), a data source 404 (DS), a services consumer 406 (SC), and a services source 408 (SS).
- DC data consumer 402
- DS data source 404
- SC services consumer 406
- SS services source 408
- the extensible devices and services platform 300 may also be configured to use the large amount of data that is generated by these devices.
- the extensible devices and services platform 300 may be directed to "repurpose" that data in a variety of automated, extensible, flexible, and/or scalable ways to achieve a variety of useful objectives. These objectives may be predefined or adaptively identified based on, e.g., usage patterns, device efficiency, and/or user input (e.g., requesting specific functionality).
- Figure 4 shows the processing engine 306 as including a number of processing paradigms 410.
- the processing engine 306 includes a managed services paradigm 410a that monitors and manages primary or secondary device functions.
- the device functions may include ensuring proper operation of a device given user inputs, estimating that (e.g., and responding to an instance in which) an intruder is or is attempting to be in a dwelling, detecting a failure of equipment coupled to the device (e.g., a light bulb having burned out), implementing or otherwise responding to energy demand response events, and/or alerting a user of a current or predicted future event or characteristic.
- the processing engine 306 includes an advertising/communication paradigm 410b that estimates characteristics (e.g., demographic information), desires and/or products of interest of a user based on device usage. Services, promotions, products or upgrades may then be offered or automatically provided to the user.
- the processing engine 306 includes a social paradigm 410c that uses information from a social network, provides information to a social network (for example, based on device usage), and/or processes data associated with user and/or device interactions with the social network platform. For example, a user's status as reported to their trusted contacts on the social network may be updated to indicate when the user is home based on light detection, security system inactivation or device usage detectors. As another example, a user may be able to share device-usage statistics with other users. In yet another example, a user may share HVAC settings that result in low power bills and other users may download the HVAC settings to their smart thermostat 102 to reduce their power bills.
- characteristics e.g., demographic information
- Services, promotions, products or upgrades may then be offered or automatically provided to
- the processing engine 306 includes a
- challenges/rules/compliance/rewards paradigm 410d that informs a user of challenges, competitions, rules, compliance regulations and/or rewards and/or that uses operation data to determine whether a challenge has been met, a rule or regulation has been complied with and/or a reward has been earned.
- the challenges, rules, and/or regulations may relate to efforts to conserve energy, to live safely (e.g., reducing exposure to toxins or carcinogens), to conserve money and/or equipment life, to improve health, etc.
- one challenge may involve participants turning down their thermostat by one degree for one week. Those participants that successfully complete the challenge are rewarded, such as with coupons, virtual currency, status, etc.
- compliance an example involves a rental-property owner making a rule that no renters are permitted to access certain owner's rooms.
- the devices in the room having occupancy sensors may send updates to the owner when the room is accessed.
- the processing engine 306 integrates or otherwise uses extrinsic information 412 from extrinsic sources to improve the functioning of one or more processing paradigms.
- the extrinsic information 412 may be used to interpret data received from a device, to determine a characteristic of the environment near the device (e.g., outside a structure that the device is enclosed in), to determine services or products available to the user, to identify a social network or social-network information, to determine contact information of entities (e.g., public-service entities such as an emergency-response team, the police or a hospital) near the device, to identify statistical or environmental conditions, trends or other information associated with a home or neighborhood, and so forth.
- entities e.g., public-service entities such as an emergency-response team, the police or a hospital
- FIG 5 illustrates a representative operating environment 500 in which a video server system 508 provides data processing for monitoring and facilitating review of motion events in video streams captured by video cameras 118.
- the video server system 508 receives video data from video sources 522 (including cameras 118) located at various physical locations (e.g., inside homes, restaurants, stores, streets, parking lots, and/or the smart home environments 100 of Figure 1).
- Each video source 522 may be bound to one or more reviewer accounts, and the video server system 508 provides video monitoring data for the video source 522 to client devices 504 associated with the reviewer accounts.
- the portable electronic device 166 is an example of the client device 504.
- the smart home provider server system 164 or a component thereof serves as the video server system 508.
- the video server system 508 is a dedicated video processing server that provides video processing services to video sources and client devices 504 independent of other services provided by the video server system 508.
- each of the video sources 522 includes one or more video cameras 118 that capture video and send the captured video to the video server system 508 substantially in real-time.
- each of the video sources 522 optionally includes a controller device (not shown) that serves as an intermediary between the one or more cameras 118 and the video server system 508.
- the controller device receives the video data from the one or more cameras 118, optionally, performs some preliminary processing on the video data, and sends the video data to the video server system 508 on behalf of the one or more cameras 118 substantially in real-time.
- each camera has its own on-board processing capabilities to perform some preliminary processing on the captured video data before sending the processed video data (along with metadata obtained through the preliminary processing) to the controller device and/or the video server system 508.
- each of the client devices 504 includes a client-side module 502.
- the client-side module 502 provides client- side functionalities for the event monitoring and review processing and communications with the server- side module 506.
- the server- side module 506 provides server- side functionalities for event monitoring and review processing for any number of client- side modules 502 each residing on a respective client device 504.
- the server-side module 506 also provides server- side functionalities for video processing and camera control for any number of the video sources 522, including any number of control devices and the cameras 118.
- the server-side module 506 includes one or more processors 512, a video storage database 514, an account database 516, an I/O interface to one or more client devices 518, and an I/O interface to one or more video sources 520.
- the I/O interface to one or more clients 518 facilitates the client-facing input and output processing for the server-side module 506.
- the account database 516 stores a plurality of profiles for reviewer accounts registered with the video processing server, where a respective user profile includes account credentials for a respective reviewer account, and one or more video sources linked to the respective reviewer account.
- the I/O interface to one or more video sources 520 facilitates communications with one or more video sources 522 (e.g., groups of one or more cameras 118 and associated controller devices).
- the video storage database 514 stores raw video data received from the video sources 522, as well as various types of metadata, such as motion events, event categories, event category models, event filters, and event masks, for use in data processing for event monitoring and review for each reviewer account.
- Examples of a representative client device 504 include, but are not limited to, a handheld computer, a wearable computing device, a personal digital assistant (PDA), a tablet computer, a laptop computer, a desktop computer, a cellular telephone, a smart phone, an enhanced general packet radio service (EGPRS) mobile phone, a media player, a navigation device, a game console, a television, a remote control, a point-of-sale (POS) terminal, vehicle-mounted computer, an ebook reader, or a combination of any two or more of these data processing devices or other data processing devices.
- PDA personal digital assistant
- EGPS enhanced general packet radio service
- POS point-of-sale
- Examples of the one or more networks 162 include local area networks (LAN) and wide area networks (WAN) such as the Internet.
- the one or more networks 162 are, optionally, implemented using any known network protocol, including various wired or wireless protocols, such as Ethernet, Universal Serial Bus (USB), FIREWIRE, Long Term Evolution (LTE), Global System for Mobile Communications (GSM), Enhanced Data GSM Environment (EDGE), code division multiple access (CDMA), time division multiple access (TDM A), Bluetooth, Wi-Fi, voice over Internet Protocol (VoIP), Wi-MAX, or any other suitable communication protocol.
- USB Universal Serial Bus
- FIREWIRE Long Term Evolution
- LTE Long Term Evolution
- GSM Global System for Mobile Communications
- EDGE Enhanced Data GSM Environment
- CDMA code division multiple access
- TDM A time division multiple access
- Bluetooth Wi-Fi
- Wi-Fi voice over Internet Protocol
- Wi-MAX wireless wide area network
- the video server system 508 is implemented on one or more standalone data processing apparatuses or a distributed network of computers. In some implementations, the video server system 508 also employs various virtual devices and/or services of third party service providers (e.g., third-party cloud service providers) to provide the underlying computing resources and/or infrastructure resources of the video server system 508. In some implementations, the video server system 508 includes, but is not limited to, a handheld computer, a tablet computer, a laptop computer, a desktop computer, or a combination of any two or more of these data processing devices or other data processing devices.
- third party service providers e.g., third-party cloud service providers
- the server-client environment 500 shown in Figure 1 includes both a client- side portion (e.g., the client-side module 502) and a server-side portion (e.g., the server-side module 506).
- the division of functionalities between the client and server portions of operating environment 500 can vary in different implementations.
- the division of functionalities between the video source 522 and the video server system 508 can vary in different implementations.
- client-side module 502 is a thin-client that provides only user-facing input and output processing functions, and delegates all other data processing functionalities to a backend server (e.g., the video server system 508).
- a respective one of the video sources 522 is a simple video capturing device that continuously captures and streams video data to the video server system 508 without no or limited local preliminary processing on the video data.
- the corresponding actions performed by the client device 504 and/or the video sources 522 would be apparent to ones skilled in the art without any creative efforts.
- some aspects of the present technology may be described from the perspective of the client device or the video source, and the corresponding actions performed by the video server would be apparent to ones skilled in the art without any creative efforts.
- some aspects of the present technology may be performed by the video server system 508, the client device 504, and the video sources 522 cooperatively.
- FIG. 6 is a block diagram illustrating the video server system 508 in accordance with some implementations.
- the video server system 508, typically, includes one or more processing units (CPUs) 512, one or more network interfaces 604 (e.g., including the I/O interface to one or more clients 518 and the I/O interface to one or more video sources 520), memory 606, and one or more communication buses 608 for interconnecting these components (sometimes called a chipset).
- the memory 606 includes high-speed random access memory, such as DRAM, SRAM, DDR RAM, or other random access solid state memory devices; and, optionally, includes non-volatile memory, such as one or more magnetic disk storage devices, one or more optical disk storage devices, one or more flash memory devices, or one or more other non-volatile solid state storage devices.
- the memory 606, optionally, includes one or more storage devices remotely located from the one or more processing units 512.
- the memory 606, or alternatively the non-volatile memory within the memory 606, includes a non-transitory computer readable storage medium.
- the memory 606, or the non-transitory computer readable storage medium of the memory 606, stores the following programs, modules, and data structures, or a subset or superset thereof:
- Operating system 610 including procedures for handling various basic system services and for performing hardware dependent tasks
- Network communication module 612 for connecting the video server system 508 to other computing devices (e.g., the client devices 504 and the video sources 522 including camera(s) 118) connected to the one or more networks 162 via the one or more network interfaces 604 (wired or wireless);
- Server-side module 506 which provides server-side data processing
- o Account administration module 614 for creating reviewer accounts, performing camera registration processing to establish associations between video sources to their respective reviewer accounts, and providing account login-services to the client devices 504;
- Video data receiving module 616 for receiving raw video data from the video sources 522, and preparing the received video data for event processing and long-term storage in the video storage database 514;
- Camera control module 618 for generating and sending server-initiated control commands to modify the operation modes of the video sources, and/or receiving and forwarding user-initiated control commands to modify the operation modes of the video sources 522;
- Event detection module 620 for detecting motion event candidates in video streams from each of the video sources 522, including motion track
- Event categorization module 622 for categorizing motion events detected in received video streams; o Zone creation module 624 for generating zones of interest in accordance with user input; o Person identification module 626 for identifying characteristics associated with presence of humans in the received video streams; o Filter application module 628 for selecting event filters (e.g., event categories, zones of interest, a human filter, etc.) and applying the selected event filter to past and new motion events detected in the video streams; o Zone monitoring module 630 for monitoring motions within selected zones of interest and generating notifications for new motion events detected within the selected zones of interest, where the zone monitoring takes into account changes in surrounding context of the zones and is not confined within the selected zones of interest; o Real-time motion event presentation module 632 for dynamically changing characteristics of event indicators displayed in user interfaces as new event filters, such as new event categories or new zones of interest, are created, and for providing real-time notifications as new motion events are detected in the video streams; and o Event post-process
- Each of the above identified elements may be stored in one or more of the previously mentioned memory devices, and corresponds to a set of instructions for performing a function described above.
- the above identified modules or programs i.e., sets of instructions
- the memory 606, optionally, stores a subset of the modules and data structures identified above.
- the memory 606, optionally, stores additional modules and data structures not described above.
- FIG. 7 is a block diagram illustrating a representative client device 504 associated with a reviewer account in accordance with some implementations.
- the client device 504 typically, includes one or more processing units (CPUs) 702, one or more network interfaces 704, memory 706, and one or more communication buses 708 for interconnecting these components (sometimes called a chipset).
- the client device 504 also includes a user interface 710.
- the user interface 710 includes one or more output devices 712 that enable presentation of media content, including one or more speakers and/or one or more visual displays.
- the user interface 710 also includes one or more input devices 714, including user interface components that facilitate user input such as a keyboard, a mouse, a voice- command input unit or microphone, a touch screen display, a touch-sensitive input pad, a gesture capturing camera, or other input buttons or controls.
- the client device 504 optionally uses a microphone and voice recognition or a camera and gesture recognition to supplement or replace the keyboard.
- the client device 504 includes one or more cameras, scanners, or photo sensor units for capturing images.
- the client device 504 optionally includes a location detection device 715, such as a GPS (global positioning satellite) or other geo-location receiver, for determining the location of the client device 504.
- the memory 706 includes high-speed random access memory, such as DRAM,
- SRAM, DDR RAM, or other random access solid state memory devices and, optionally, includes non-volatile memory, such as one or more magnetic disk storage devices, one or more optical disk storage devices, one or more flash memory devices, or one or more other non-volatile solid state storage devices.
- the memory 706, optionally, includes one or more storage devices remotely located from the one or more processing units 702.
- the memory 706, or alternatively the non-volatile memory within the memory 706, includes a non- transitory computer readable storage medium.
- the memory 706, or the non-transitory computer readable storage medium of memory 706, stores the following programs, modules, and data structures, or a subset or superset thereof:
- Operating system 716 including procedures for handling various basic system services and for performing hardware dependent tasks
- Network communication module 718 for connecting the client device 504 to other computing devices (e.g., the video server system 508 and the video sources 522) connected to the one or more networks 162 via the one or more network interfaces 704 (wired or wireless);
- Presentation module 720 for enabling presentation of information (e.g., user interfaces for application(s) 726 or the client-side module 502, widgets, websites and web pages thereof, and/or games, audio and/or video content, text, etc.) at the client device 504 via the one or more output devices 712 (e.g., displays, speakers, etc.) associated with the user interface 710;
- information e.g., user interfaces for application(s) 726 or the client-side module 502, widgets, websites and web pages thereof, and/or games, audio and/or video content, text, etc.
- Input processing module 722 for detecting one or more user inputs or interactions from one of the one or more input devices 714 and interpreting the detected input or interaction;
- Web browser module 724 for navigating, requesting (e.g., via HTTP), and displaying websites and web pages thereof, including a web interface for logging into a reviewer account, controlling the video sources associated with the reviewer account, establishing and selecting event filters, and editing and reviewing motion events detected in the video streams of the video sources;
- Client-side module 502 which provides client-side data processing and functionalities for monitoring and reviewing motion events detected in the video streams of one or more video sources, including but not limited to: o Account registration module 728 for establishing a reviewer account and
- o Camera setup module 730 for setting up one or more video sources within a local area network, and enabling the one or more video sources to access the video server system 508 on the Internet through the local area network; o Camera control module 732 for generating control commands for modifying an operating mode of the one or more video sources in accordance with user input; o Event review interface module 734 for providing user interfaces for reviewing event timelines, editing event categorization results, selecting event filters, presenting real-time filtered motion events based on existing and newly created event filters (e.g., event categories, zones of interest, a human filter, etc.), presenting real-time notifications (e.g., pop-ups) for newly detected motion events, and presenting smart time-lapse of selected motion events; o Zone creation module 736 for providing a user interface for creating zones of interest for each video stream in accordance with user input, and sending the definitions of the zones of interest to the video server system 508; and o Notification module 738
- client data 770 storing data associated with the reviewer account and the video
- o Account data 772 storing information related with the reviewer account
- video sources such as cached login credentials, camera characteristics, user interface settings, display preferences, etc.
- Each of the above identified elements may be stored in one or more of the previously mentioned memory devices, and corresponds to a set of instructions for performing a function described above.
- the above identified modules or programs i.e., sets of instructions
- memory 706, optionally, stores a subset of the modules and data structures identified above.
- the memory 706, optionally, stores additional modules and data structures not described above.
- At least some of the functions of the video server system 508 are performed by the client device 504, and the corresponding sub-modules of these functions may be located within the client device 504 rather than the video server system 508. In some implementations, at least some of the functions of the client device 504 are performed by the video server system 508, and the corresponding sub-modules of these functions may be located within the video server system 508 rather than the client device 504.
- the client device 504 and the video server system 508 shown in Figures 6-7, respectively, are merely illustrative, and different configurations of the modules for implementing the functions described herein are possible in various implementations.
- FIG. 8 is a block diagram illustrating a representative camera 118 in accordance with some implementations.
- the camera 118 includes one or more processing units (e.g., CPUs, ASICs, FPGAs, microprocessors, and the like) 802, one or more communication interfaces 804, memory 806, and one or more communication buses 808 for interconnecting these components (sometimes called a chipset).
- the camera 118 includes one or more input devices 810 such as one or more buttons for receiving input and one or more microphones.
- the camera 118 includes one or more output devices 812 such as one or more indicator lights, a sound card, a speaker, a small display for displaying textual information and error codes, etc.
- the camera 118 optionally includes a location detection device 814, such as a GPS (global positioning satellite) or other geo-location receiver, for determining the location of the camera 118.
- GPS global positioning satellite
- the memory 806 includes high-speed random access memory, such as DRAM,
- the memory 806, or alternatively the non-volatile memory within the memory 806, includes a non-transitory computer readable storage medium.
- the memory 806, or the non-transitory computer readable storage medium of the memory 806, stores the following programs, modules, and data structures, or a subset or superset thereof:
- Operating system 816 including procedures for handling various basic system services and for performing hardware dependent tasks
- Network communication module 818 for connecting the camera 118 to other
- computing devices e.g., the video server system 508, the client device 504, network routing devices, one or more controller devices, and networked storage devices connected to the one or more networks 162 via the one or more communication interfaces 804 (wired or wireless);
- Video control module 820 for modifying the operation mode e.g., zoom level
- Video capturing module 824 for capturing and generating a video stream and sending the video stream to the video server system 508 as a continuous feed or in short bursts;
- Video caching module 826 for storing some or all captured video data locally at one or more local storage devices (e.g., memory, flash drives, internal hard disks, portable disks, etc.);
- local storage devices e.g., memory, flash drives, internal hard disks, portable disks, etc.
- captured video data locally at the camera 118 including for example, compressing and encrypting the captured video data for network transmission, preliminary motion event detection, preliminary false positive suppression for motion event detection, preliminary motion vector generation, etc.;
- Camera data 830 storing data, including but not limited to: o Camera settings 832, including network settings, camera operation settings, camera storage settings, etc.; and o Video data 834, including video segments and motion vectors for detected motion event candidates to be sent to the video server system 508.
- Each of the above identified elements may be stored in one or more of the previously mentioned memory devices, and corresponds to a set of instructions for performing a function described above.
- the above identified modules or programs i.e., sets of instructions
- the memory 806, optionally, stores a subset of the modules and data structures identified above.
- memory 806, optionally, stores additional modules and data structures not described above.
- Figures 9A-9BB illustrate example user interfaces for monitoring and facilitating review of motion events in accordance with some implementations.
- the device detects inputs on a touch-sensitive surface that is separate from the display.
- the touch sensitive surface has a primary axis that corresponds to a primary axis on the display.
- the device detects contacts with the touch-sensitive surface at locations that correspond to respective locations on the display. In this way, user inputs detected by the device on the touch-sensitive surface are used by the device to manipulate the user interface on the display of the device when the touch-sensitive surface is separate from the display. It should be understood that similar methods are, optionally, used for other user interfaces described herein.
- finger inputs e.g., finger contacts, finger tap gestures, finger swipe gestures, etc.
- one or more of the finger inputs are replaced with input from another input device (e.g., a mouse based input or stylus input).
- a swipe gesture is, optionally, replaced with a mouse click (e.g., instead of a contact) followed by movement of the cursor along the path of the swipe (e.g., instead of movement of the contact).
- a tap gesture is, optionally, replaced with a mouse click while the cursor is located over the location of the tap gesture (e.g., instead of detection of the contact followed by ceasing to detect the contact).
- a tap gesture is, optionally, replaced with a mouse click while the cursor is located over the location of the tap gesture (e.g., instead of detection of the contact followed by ceasing to detect the contact).
- multiple user inputs it should be understood that multiple computer mice are, optionally, used simultaneously, or a mouse and finger contacts are, optionally, used simultaneously.
- Figures 9A-9BB show user interface 908 displayed on client device 504 (e.g., a tablet, laptop, mobile phone, or the like); however, one skilled in the art will appreciate that the user interfaces shown in Figures 9A-9BB may be implemented on other similar computing devices.
- client device 504 e.g., a tablet, laptop, mobile phone, or the like
- the user interfaces in Figures 9A-9BB are used to illustrate the processes described herein, including the processes and/or methods described with respect to Figures 10, 12A-12B, 13A-13B, 14A-14B, 15A-15C, and 16A-16B.
- the client device 504 is the portable electronic device 166
- Figure 1 such as a laptop, tablet, or mobile phone.
- the user of the client device 504 executes an application (e.g., the client-side module 502, Figures 5 and 7) used to monitor and control the smart home environment 100 and logs into a user account registered with the smart home provider system 164 or a component thereof (e.g., the video server system 508, Figures 5-6).
- the smart home environment 100 includes the one or more cameras 118, whereby the user of the client device 504 is able to control, review, and monitor video feeds from the one or more cameras 118 with the user interfaces for the application displayed on the client device 504 shown in Figures 9A-9BB.
- Figure 9A illustrates the client device 504 displaying a first implementation of a video monitoring user interface (UI) of the application on the touch screen 906.
- the video monitoring UI includes three distinct regions: a first region 903, a second region 905, and a third region 907.
- the first region 903 includes a video feed from a respective camera among the one or more camera 118 associated with the smart home environment 100.
- the respective camera is located on the back porch of the user's domicile or pointed out of a window of the user's domicile.
- the first region 903 includes the time 911 of the video feed being displayed in the first region 903 and also an indicator 912 indicating that the video feed being displayed in the first region 903 is a live video feed.
- the second region 905 includes an event timeline 910 and a current video feed indicator 909 indicating the temporal position of the video feed displayed in the first region 903 (i.e., the point of playback for the video feed displayed in the first region 903).
- the video feed displayed in the first region 903 is a live video feed from the respective camera.
- the video feed displayed in the first region 903 may be previously recorded video footage.
- the user of the client device 504 may drag the indicator 909 to any position on the event timeline 910 causing the client device 504 to display the video feed from that point in time forward in the first region 903.
- the user of the client device 504 may perform a substantially horizontal swipe gesture on the event timeline 910 to scrub between points of the recorded video footage causing the indicator 909 to move on the event timeline 910 and also causing the client device 504 to display the video feed from that point in time forward in the first region 903.
- the second region 905 also includes affordances 913 for changing the scale of the event timeline 910: 5 minute affordance 913A for changing the scale of the event timeline 910 to 5 minutes, 1 hour affordance 913B for changing the scale of the event timeline 910 to 1 hour, and affordance 24 hours 913C for changing the scale of the event timeline 910 to 24 hours.
- the scale of the event timeline 910 is 1 hour as evinced by the darkened border surrounding the 1 hour affordance 913B and also the temporal tick marks shown on the event timeline 910.
- the second region 905 also includes affordances 914 for changing the date associated with the event timeline 910 to any day within the preceding week: Monday affordance 914A, Tuesday affordance 914B, Wednesday affordance 914C, Thursday affordance 914D, Friday affordance 914E, Saturday affordance 914F, Sunday affordance 914G, and Today affordance 914H.
- the event timeline 910 is associated with the video feed from today as evinced by the darkened border surrounding Today affordance 914H.
- an affordance is a user interface element that is user selectable or manipulatable on a graphical user interface.
- the second region 905 further includes: "Make Time-Lapse” affordance 915, which, when activated (e.g., via a tap gesture), enables the user of the client device 504 to select a portion of the event timeline 910 for generation of a time-lapse video clip (as shown in Figures 9N-9Q); "Make Clip” affordance 916, which, when activated (e.g., via a tap gesture), enables the user of the client device 504 to select a motion event or a portion of the event timeline 910 to save as a video clip; and "Make Zone” affordance 917, which, when activated (e.g., via a tap gesture), enables the user of the client device 504 to create a zone of interest on the current field of view of the respective camera (as shown in Figures 9K-9M).
- the time-lapse video clip and saved non-time-lapse video clips are associated with the user account of the user of the client device 504 and stored by the server video server system 508 (e.g., in the video storage database 516, Figures 5-6).
- the user of the client device 504 is able to access his/her saved time- lapse video clip and saved non-time-lapse video clips by entering the login credentials for his/her for user account.
- the video monitoring UI also includes a third region 907 with a list of categories with recognized event categories and created zones of interest.
- Figure 9A also illustrates the client device 504 detecting a contact 918 (e.g., a tap gesture) at a location corresponding to the first region 903 on the touch screen 906.
- a contact 918 e.g., a tap gesture
- Figure 9B illustrates the client device 504 displaying additional video controls in response to detecting the contact 918 in Figure 9A.
- the first region 903 of the video monitoring UI includes: an elevator bar with a handle 919 for adjusting the zoom magnification of the video feed displayed in the first region 903, affordance 920 A for reducing the zoom magnification of the video feed, and affordance 920B for increasing the zoom magnification of the video feed.
- the first region 903 of the video monitoring UI also includes: affordance 921 A for enabling/disabling the microphone of the respective camera associated with the video feed; affordance 92 IB for rewinding the video feed by 30 seconds; affordance 921C for pausing the video feed displayed in the first region 903; affordance 92 ID for adjusting the playback volume of the video feed; and affordance 92 IE for displaying the video feed in full screen mode.
- Figure 9C illustrates the client device 504 displaying the event timeline 910 in the second region 905 with event indicators 922A, 922B, 922C, 922D, 922E, and 922F corresponding to detected motion events.
- the location of a respective event indicator 922 on the event timeline 910 corresponds to the time at which a motion event correlated with the respective event indicator 922 was detected.
- the detected motion events correlated with the event indicators 922A, 922B, 922C, 922D, 922E, and 922F are uncategorized motion events as no event categories have been recognized by the video server system 508 and no zones of interest have been created by the user of the client device 504.
- the list of categories in the third region 907 includes an entry for uncategorized motion events (e.g., the motion events correlated with event indicators 922A, 922B, 922C, 922D, 922E, and 922F) with a filter affordance for enabling/disabling display of event indicators for the uncategorized motion events on the event timeline 910.
- Figure 9D illustrates the client device 504 displaying the event timeline 910 in the second region 905 with additional event indicators 922G, 922H, 9221, and 922J.
- the list of categories in the third region 907 includes an entry 924A for newly recognized event category A.
- the entry 924 A for recognized event category A includes: a display characteristic indicator 925 A representing the display characteristic for event indicators corresponding to motion events assigned to event category A (e.g., vertical stripes); an indicator filter 926 A for enabling/disabling display of event indicators on the event timeline 910 for motion events assigned to event category A; and a notifications indicator 927A for enabling/disabling notifications sent in response to detection of motion events assigned to event category A.
- display of event indicators for motion events corresponding to event category A is enabled as evinced by the check mark corresponding to indicator filter 926A and notifications are enabled.
- the notifications are messages sent by the video server system 508 ( Figures 5-6) via email to an email address linked to the user's account or via a SMS or voice call to a phone number linked to the user's account.
- the notifications are audible tones or vibrations provided by the client device 504.
- Figure 9E illustrates the client device 504 displaying an entry 924B for newly recognized event category B in the list of categories in the third region 907.
- the entry 924B for recognized event category B includes: a display characteristic indicator 925B representing the display characteristic for event indicators corresponding to motion events assigned to event category B (e.g., a diagonal shading pattern); an indicator filter 926B for
- Figure 9E also illustrates client device 504 displaying a notification 928 for a newly detected respective motion event corresponding to event indicator 922L.
- event category B is recognized prior to or concurrent with detecting the respective motion event.
- an event indicator 922L is displayed on the event timeline 910 with the display characteristic for event category B (e.g., the diagonal shading pattern).
- the notification 928 pops-up from the event indicator 922L.
- the notification 928 notifies the user of the client device 504 that the motion event detected at 12:32:52 pm was assigned to event category B.
- the notification 928 is at least partially overlaid on the video feed displayed in the first region 903.
- the notification 928 pops-up from the event timeline 910 and is at least partially overlaid on the video feed displayed in the first region 903 (e.g., in the center of the first region 903 or at the top of the first region 903 as a banner notification).
- Figure 9E also illustrates the client device 504 detecting a contact 929 (e.g., a tap gesture) at a location corresponding to the notifications indicator 927 A on the touch screen 906.
- a contact 929 e.g., a tap gesture
- Figure 9F shows the notifications indicator 927A in the third region 907 as disabled, shown by the line through the notifications indicator 927A, in response to detecting the contact 929 in Figure 9E.
- Figure 9F illustrates the client device 504 detecting a contact
- Figure 9G shows the indicator filter 926A as unchecked in response to detecting the contact 930 in Figure 9F. Moreover, in Figure 9G, the client device 504 ceases to display the event indicators 922A, 922C, 922D, and 922E, which correspond to motion events assigned to event category A, on the event timeline 910 in response to detecting the contact 930 in Figure 9F. Figure 9G also illustrates the client device 504 detecting a contact
- Figure 9H illustrates the client device 504 displaying a dialog box 923 for a respective motion event correlated with the event indicator 922B in response to detecting selection of the event indicator 922B in Figure 9G.
- the dialog box 923 may be displayed in response to sliding or hovering over the event indicator 922B.
- the dialog box 923 includes the time the respective motion event was detected (e.g., 11 :37:40 am) and a preview 932 of the respective motion event (e.g., a static image, a series of images, or a video clip).
- the dialog box 923 also includes an
- FIG. 9H also illustrates the client device 504 detecting a contact 934 (e.g., a tap gesture) at a location corresponding to the entry 924B for event category B on the touch screen 906.
- a contact 934 e.g., a tap gesture
- Figure 91 illustrates the client device 504 displaying an editing user interface
- the editing UI for event category B includes two distinct regions: a first region 935; and a second region 937.
- the first region 935 includes representations 936 (sometimes also herein called "sprites") of motion events assigned to event category B, where a representation 936A corresponds to the motion event correlated with the event indicator 922F, a representation 936B corresponds to the motion event correlated with the event indicator 922G, a representation 936C corresponds to the motion event correlated with the event indicator 922L, a representation 936D corresponds to the motion event correlated with the event indicator 922K, and a representation 936E corresponds to the motion event correlated with the event indicator 922J.
- each of the representations 936 is a series of frames or a video clip of a respective motion event assigned to event category B.
- each of the representations 936 corresponds to a motion event of a bird flying from left to right across the field of view of the respective camera.
- each of the representations 936 is associated with a checkbox 941. In some implementations, when a respective checkbox 941 is unchecked (e.g., with a tap gesture) the motion event
- the checkboxes 941 enable the user of the client device 504 to remove motion events incorrectly assigned to an event category so that similar motion events are not assigned to the event category in the future.
- the first region 935 further includes: a save/exit affordance 938 for saving changes made to event category B or exiting the editing UI for event category B; a label text entry box 939 for renaming the label for the event category from the default name ("event category B") to a custom name; and a notifications indicator 940 for
- the second region 937 includes a representation of the video feed from the respective camera with a linear motion vector 942 representing the typical path of motion for motion events assigned event category B.
- the representation of the video feed is a static image recently captured from the video feed or the live video feed.
- Figure 91 also illustrates the client device 504 detecting a contact 943 (e.g., a tap gesture) at a location corresponding to the checkbox 941C on the touch screen 906 and a contact 944 (e.g., a tap gesture) at a location corresponding to the checkbox 941E on the touch screen 906.
- a contact 943 e.g., a tap gesture
- a contact 944 e.g., a tap gesture
- Figure 9J shows the checkbox 941C corresponding to the motion event correlated with the event indicator 922L and the checkbox 94 IE corresponding to the motion event correlated with the event indicator 922J as unchecked in response to detecting the contact 943 and the contact 944, respectively, in Figure 91.
- Figure 9J also shows the label for the event category as "Birds in Flight" in the label text entry box 939 as opposed to "event category B" in Figure 91.
- Figure 9J illustrates the client device 504 detecting a contact 945 (e.g., a tap gesture) at a location corresponding to the save/exit affordance 938 on the touch screen 906. For example, in response to detecting the contact 945, the client device 504 sends a message to the video server system 508 indicating removal of the motion events
- a contact 945 e.g., a tap gesture
- Figure 9K illustrates the client device 504 displaying event indicators 922J and 922L with a changed display characteristic corresponding to uncategorized motion events (i.e., no fill) in response to removal of the representations 936C and 936E, which correspond to the motion events correlated with the event indicators 922J and 922L, from event category B in Figures 9I-9J.
- Figure 9K also illustrates the client device 504 displaying "Birds in Flight" as the label for the entry 924B in the list of categories in the third region 907 in response to the changed label entered in Figure 9 J.
- Figure 9K further illustrates the client device 504 detecting a contact 946 (e.g., a tap gesture) at a location corresponding to "Make Zone" affordance 917 on the touch screen 906.
- a contact 946 e.g., a tap gesture
- Figure 9L illustrates the client device 504 displaying a customizable outline
- the customizable outline is rectangular, however, one of skill in the art will appreciate that the customizable outline may be polyhedral, circular, any other shape, or a free hand shape drawn on the touch screen 906 by the user of the client device 504.
- the customizable outline 947 A may be adjusted by performing a dragging gesture with any corner or side of the
- Figure 9L also illustrates the client device 504 detecting a dragging gesture whereby contact 949 is moved from a first location 950A corresponding to the right side of the customizable outline 947A to a second location 950B.
- the first region 903 includes "Save Zone” affordance 952, which, when activated (e.g., with a tap gesture), causes creation of the zone of interest corresponding to the customizable outline 947.
- Figure 9M illustrates the client device 504 displaying an expanded
- Figure 9M also illustrates the client device 504 detecting a contact 953 (e.g., a tap gesture) at a location corresponding to the "Save Zone” affordance 952 on the touch screen 906.
- a contact 953 e.g., a tap gesture
- the client device 504 causes creation of the zone of interest corresponding to the expanded customizable outline 947B by sending a message to the video server system 508 indicating the coordinates of the expanded customizable outline 947B.
- Figure 9N illustrates the client device 504 displaying an entry 924C for newly created zone A in the list of categories in the third region 907 in response to creating the zone of interest in Figures 9L-9M.
- the entry 924C for newly created zone A includes: a display characteristic indicator 925C representing the display characteristic for event indicators corresponding to motion events that touch or overlap zone A (e.g., an 'X' at the bottom of the event indicator); an indicator filter 926C for enabling/disabling display of event indicators on the event timeline 910 for motion events that touch or overlap zone A; and a notifications indicator 927C for enabling/disabling notifications sent in response to detection of motion events that touch or overlap zone A.
- a display characteristic indicator 925C representing the display characteristic for event indicators corresponding to motion events that touch or overlap zone A (e.g., an 'X' at the bottom of the event indicator)
- an indicator filter 926C for enabling/disabling display of event indicators on the event timeline 910 for motion events that touch or overlap
- Figure 9N display of event indicators for motion events that touch or overlap zone A is enabled as evinced by the check mark corresponding to indicator filter 926C and notifications are enabled.
- the motion event correlated with the event indicator 922M has been retroactively associated with zone A as shown by the changed display characteristic of the event indicator 922M (e.g., the 'X' at the bottom of the event indicator 922M).
- Figure 9N also illustrates the client device 504 detecting a contact 954 (e.g., a tap gesture) at a location corresponding to the "Make Time-Lapse" affordance 915 on the touch screen 906.
- a contact 954 e.g., a tap gesture
- Figure 90 illustrates the client device 504 displaying controls for generating a time-lapse video clip in response to detecting selection of the "Make Time-Lapse" affordance 915 in Figure 9N.
- the second region 905 includes a start time entry box 956A for entering/changing a start time of the time-lapse video clip to be generated and an end time entry box 956B for entering/changing an end time of the time-lapse video clip to be generated.
- the second region 905 also includes a start time indicator 957A and an end time indicator 957B on the event timeline 910, which indicate the start and end times of the time- lapse video clip to be generated.
- the locations of the start time indicator 957 A and the end time indicator 957B may be moved on the event timeline 910 via pulling/dragging gestures.
- the second region 905 further includes a "Create Time-lapse" affordance 958, which, when activated (e.g., with a tap gesture) causes generation of the time-lapse video clip based on the selected portion of the event timeline 910 corresponding to the start and end times displayed by the start time entry box 956A (e.g., 12:20:00 pm) and the end time entry box 956B (e.g., 12:42:30 pm) and also indicated by the start time indicator 957A and the end time indicator 957B.
- start time entry box 956A e.g., 12:20:00 pm
- the end time entry box 956B e.g., 12:42:30 pm
- the client device 504 displays a dialog box that enables the user of the client device 504 to select a length of the time-lapse video clip (e.g., 30, 60, 90, etc. seconds).
- the second region 905 further includes an "Abort" affordance 959, which, when activated (e.g., with a tap gesture) causes the client device 504 to display a previous UI (e.g., the video monitoring UI in Figure 9N).
- Figure 90 further illustrates the client device 504 detecting a contact 955 (e.g., a tap gesture) at a location corresponding to the "Create Time-Lapse" affordance 958 on the touch screen 906.
- a contact 955 e.g., a tap gesture
- the time-lapse video clip is generated by the client device 504, the video server system 508, or a combination thereof.
- motion events within the selected portion of the event timeline 910 are played at a slower speed than the balance of the selected portion of the event timeline 910.
- motion events within the selected portion of the event timeline 910 that are assigned to enabled event categories and motion events within the selected portion of the event timeline 910 that touch or overlap enabled zones are played at a slower speed than the balance of the selected portion of the event timeline 910 including motion events assigned to disabled event categories and motion events that touch or overlap disabled zones.
- Figure 9P illustrates the client device 504 displaying a notification 961 overlaid on the first region 903 in response to detecting selection of the "Create Time-Lapse" affordance 958 in Figure 90.
- the notification 961 indicates that the time-lapse video clip is being processed and also includes an exit affordance 962, which, when activated (e.g., with a tap gesture), causes the client device 504 the client device 504 to dismiss the notification 961.
- the notification 961 in Figure 9Q indicates that processing of the time-lapse video clip is complete and includes a "Play Time-Lapse" affordance 963, which, when activated (e.g., with a tap gesture), causes the client device 504 to play the time-lapse video clip.
- Figure 9Q illustrates the client device 504 detecting a contact 964 at a location corresponding to the exit affordance 962 on the touch screen 906.
- Figure 9R illustrates the client device 504 ceasing to display the notification
- Figure 9R also illustrates the client device 504 detecting a pinch-in gesture with contacts 965A and 965B relative to a respective portion of the video feed in the first region 903 on the touch screen 906.
- Figure 9S illustrates the client device 504 displaying a zoomed-in portion of the video feed in response to detecting the pinch-in gesture on the touch screen 906 in Figure 9R.
- the zoomed-in portion of the video feed corresponds to a software-based zoom performed locally by the client device 504 on the respective portion of the video feed corresponding to the pinch-in gesture in Figure 9R.
- the handle 919 of the elevator bar indicates the current zoom magnification of the video feed and a perspective box 969 indicates the zoomed-in portion 970 relative to the full field of view of the respective camera.
- the video monitoring UI further indicates the current zoom magnification in text.
- the video controls in the first region 903 further include an enhancement affordance 968, which, when activated (e.g., with a tap gesture) causes the client device 504 to send a zoom command to the respective camera.
- an enhancement affordance 968 which, when activated (e.g., with a tap gesture) causes the client device 504 to send a zoom command to the respective camera.
- the zoom command causes the respective camera to perform a zoom operation at the zoom magnification corresponding to the distance between contacts 965 A and 965B of the pinch-in gesture in Figure 9R on the respective portion of the video feed corresponding to the pinch-in gesture in Figure 9R.
- the zoom command is relayed to the respective camera by the video server system 508.
- the zoom command is sent directly to the respective camera by the client device 504.
- Figure 9S also illustrates the client device 504 detecting a contact 967 at a location corresponding to the enhancement affordance 968 on the touch screen 906.
- Figure 9T illustrates the client device 504 displaying a dialog box 971 in response to detecting selection of the enhancement affordance 968 in Figure 9S.
- the dialog box 971 warns the user of the client device 504 that enhancement of the video feed will cause changes to the recorded video footage and also causes changes to any previously created zones of interest.
- the dialog box 971 includes: a cancel affordance 972, which, when activated (e.g., with a tap gesture) causes the client device 504 to cancel of the enhancement operation and consequently cancel sending of the zoom command; and an enhance affordance 973, when activated (e.g., with a tap gesture) causes the client device 504 to send the zoom command to the respective camera.
- Figure 9T also illustrates the client device 504 detecting a contact 974 at a location corresponding to the enhance affordance 973 on the touch screen 906.
- Figure 9U illustrates the client device 504 displaying the zoomed-in portion of the video feed at a higher resolution as compared to Figure 9S in response to detecting selection of the enhance affordance 973 in Figure 9T.
- the client device 504 in response to sending the zoom command, receives a higher resolution video feed (e.g., 780i, 720p, 1080i, or 1080p) of the zoomed-in portion of the video feed.
- a higher resolution video feed e.g., 780i, 720p, 1080i, or 1080p
- the video controls in the first region 903 further include a zoom reset affordance 975, which, when activated (e.g., with a tap gesture) causes the client device 504 reset the zoom magnification of the video feed to its original setting (e.g., as in Figure 9R prior to the pinch- in gesture).
- Figure 9U also illustrates the client device 504 detecting a contact 978 at a location corresponding to the 24 hours affordance 913C on the touch screen 906.
- Figure 9V illustrates the client device 504 displaying the event timeline 910 with a 24 hour scale in response to detecting selection of the 24 hours affordance 913C in Figure 9U.
- Figure 9V also illustrates the client device 504 detecting a contact 980 (e.g., a tap gesture) at a location corresponding to an event indicator 979 on the touch screen 906.
- Figure 9W illustrates the client device 504 displaying a dialog box 981 for respective motion events correlated with the event indicator 979 in response to detecting selection of the event indicator 979 in Figure 9V.
- the dialog box 981 may be displayed in response to sliding or hovering over the event indicator 979.
- the dialog box 981 includes the times at which the respective motion events were detected (e.g., 6:35:05 am, 6:45: 15 am, and 6:52:45 am).
- the dialog box 981 also includes previews 982A, 982B, and 982C of the respective motion events (e.g., a static image, a series of images, or a video clip).
- Figure 9X illustrates the client device 504 displaying a second implementation of a video monitoring user interface (UI) of the application on the touch screen 906.
- the video monitoring UI includes two distinct regions: a first region 986; and a second region 988.
- the first region 986 includes a video feed from a respective camera among the one or more camera 118 associated with the smart home environment 100.
- the respective camera is located on the back porch of the user's domicile or pointed out of a window of the user's domicile.
- the first region 986 includes an indicator 990 indicating that the video feed being displayed in the first region 986 is a live video feed.
- the indicator 990 is instead displayed as a "Go Live” affordance, which, when activated (e.g., with a tap gesture), causes the client device to display the live video feed from the respective camera in the first region 986.
- the second region 988 includes a text box 993 indicating the time and date of the video feed being displayed in the first region 986.
- the second region 988 also includes: an affordance 991 for rewinding the video feed displayed in the first region 986 by 30 seconds; and an affordance 992 for enabling/disabling the microphone of the respective camera associated with the video feed displayed in the first region 986.
- the second region 988 further includes a "Motion Events Feed" affordance 994, which, when activated (e.g., via a tap gesture), causes the client device 504 to display a motion event timeline (e.g., the user interface shown in Figures 9Y-9Z).
- Figure 9X also illustrates the client device 504 detecting a contact 996 (e.g., a tap gesture) at a location corresponding to the "Motion Events Feed" affordance 994 on the touch screen 906.
- Figure 9Y illustrates the client device 504 displaying a first portion of a motion events feed 997 in response to detecting selection of the "Motion Events Feed" affordance 994 in Figure 9X.
- the motion events feed 997 includes representations 998 (sometimes also herein called “sprites") of motion events.
- each of the representations 998 is associated with a time at which the motion event was detected, and each of the representations 998 is associated with an event category to which it is assigned to the motion event (if any) and/or a zone which it touches or overlaps (if any).
- each of the representations 998 is associated with a unique display characteristic indicator 925 representing the display characteristic for the event category to which it is assigned (if any) and/or the zone which it touches or overlaps (if any).
- the representation 998A corresponds to a respective motion event that was detected at 12:39:45 pm which touches or overlaps zone A.
- the display
- characteristic indicator 925 C indicates that the respective motion event corresponding to the representation 998A touches or overlaps zone A.
- the motion events feed 997 also includes: an exit affordance 999, which, when activated (e.g., via a tap gesture), causes the client device 504 to display a previous user interface (e.g., the video monitoring UI in Figure 9X); and a filtering
- the motion events feed 997 further includes a scroll bar 9101 for viewing the balance of the representations 998 in the motion events feed 997.
- Figure 9Y also illustrates client device 504 detecting an upward dragging gesture on the touch screen 906 whereby a contact 9102 is moved from a first location 9103 A to a second location 9103B.
- Figure 9Z illustrates the client device 504 displaying a second portion of the motion events feed 997 in response to detecting the upward dragging gesture in Figure 9Y.
- the second portion of the motion events feed 997 in Figure 9Z shows a second set of representations 998 that are distinct from the first set of representations 998 shown in the first portion of the motion events feed 997 in Figure 9Y.
- Figure 9Z also illustrates the client device 504 detecting a contact 9104 at a location corresponding to the filtering affordance 9100 on the touch screen 906.
- Figure 9AA illustrates the client device 504 displaying a filtering pane 9105 in response to detecting selection of the filtering affordance 9100 in Figure 9Z.
- the filtering pane 9105 includes a list of categories with recognized event categories and previously created zones of interest.
- the filtering pane 9105 includes an entry 924A for recognized event category A, including: a display characteristic indicator 925 A representing the display characteristic for representations corresponding to motion events assigned to event category A (e.g., vertical stripes), an indicator filter 926A for enabling/disabling display of representations 998 in the motion events feed 997 for motion events assigned to event category A; a notifications indicator 927 A for enabling/disabling notifications sent in response to detection of motion events assigned to event category A; and an "Edit Category" affordance 9106A for displaying an editing user interface (UI) for event category A.
- the filtering pane 9105 also includes an entry 924B for recognized event category "Birds in Flight," including: a display characteristic indicator 925B representing the display
- an indicator filter 926B for enabling/disabling display of representations 998 in the motion events feed 997 for motion events assigned to "Birds in Flight”
- a notifications indicator 927B for enabling/disabling notifications sent in response to detection of motion events assigned to "Birds in Flight”
- an "Edit Category” affordance 9106B for displaying an editing UI for "Birds in Flight.”
- the filtering pane 9105 further includes an entry 924C for zone
- A including: a display characteristic indicator 925 C representing the display characteristic for representations corresponding to motion events that touch or overlap zone A (e.g., an 'X' at the bottom of the event indicator); an indicator filter 926C for enabling/disabling display of representations 998 in the motion events feed 997 for motion events that touch or overlap zone A; a notifications indicator 927C for enabling/disabling notifications sent in response to detection of motion events that touch or overlap zone A; and an "Edit Category" affordance 9106C for displaying an editing UI for the zone A category.
- the filtering pane 9105 further includes an entry 924D for uncategorized motion events, including: a display characteristic indicator 925D representing the display characteristic for representations corresponding to uncategorized motion events (e.g., an event indicator without fill or shading); an indicator filter 926D for enabling/disabling display of representations 998 in the motion events feed 997 for uncategorized motion events assigned; a notifications indicator 927D for
- Figure 9AA also illustrates client device 504 detecting a contact 9107 at a location corresponding to the "Edit Category” affordance 9106C on the touch screen 906.
- Figure 9BB illustrates the client device 504 displaying an editing UI for the zone A category in response to detecting selection of the "Edit Category" affordance 9106C in Figure 9AA.
- the editing UI for the zone A category includes two distinct regions: a first region 9112; and a second region 9114.
- the first region 9114 includes: a label text entry box 9114 for renaming the label for the zone A category from the default name ("zone A") to a custom name; and an "Edit Indicator Display Characteristic" affordance 9116 for editing the default display characteristic 925 C for representations corresponding to motion events that touch or overlap zone A (e.g., from the 'X' at the bottom of the event indicator to a fill color or shading pattern).
- the first region 9114 also includes: a notifications indicator 927C for enabling/disabling notifications sent in response to detection of motion events that touch or overlap zone A; and a save/exit affordance 9118 for saving changes made to the zone A category or exiting the editing UI for the zone A category.
- the second region 9112 includes representations 998
- a respective representation 998A corresponds to a motion event that touches or overlaps zone A.
- the respective representation 998A includes a series of frames or a video clips of the motion event that touches or overlaps zone A.
- the respective representation 998A corresponds to a motion event of a jackrabbit running from right to left across the field of view of the respective camera at least partially within zone A.
- the respective representation 998A is associated with a checkbox 9120. In some implementations, when the checkbox 9120 is unchecked (e.g., with a tap gesture) the motion event corresponding to the checkbox 9120 is removed the zone A category.
- Figure 10 is a flow diagram of a process 1000 for performing client-side zooming of a remote video feed in accordance with some implementations.
- the process 1000 is performed at least in part by a server with one or more processors and memory, a client device with one or more processors and memory, and a camera with one or more processors and memory.
- the server is the video server system 508 ( Figures 5-6) or a component thereof (e.g., server-side module 506, Figures 5-6)
- the client device is the client device 504 ( Figures 5 and 7) or a component thereof (e.g., the client-side module 502, Figures 5 and 7)
- the camera is a respective one of one or more camera 118 ( Figures 5 and 8).
- control and access to the smart home environment are possible.
- a client-side module 502 (e.g., an application for monitoring and controlling the smart home environment 100) is executed on one or more client devices 504 ( Figures 5 and 7).
- the video server system 508 manages, operates, and controls access to the smart home environment 100.
- a respective client-side module 502 is associated with a user account registered with the video server system 508 that corresponds to a user of the client device 504.
- the server maintains (1002) the current digital tilt-pan-zoom (DTPZ) settings for the camera.
- the server stores video settings (e.g., tilt, pan, and zoom settings) for each of the one or more cameras 118 associated with the smart home environment 100.
- the camera sends (1004) a video feed at the current DTPZ settings to the server.
- the server sends (1006) the video feed to the client device.
- the camera directly sends the video feed to the client device.
- the client device presents (1008) the video feed on an associated display.
- Figure 9 A shows the client device 504 displaying a first implementation of the video monitoring user interface (UI) of the application on the touch screen 906.
- the video monitoring UI includes three distinct regions: a first region 903, a second region 905, and a third region 907.
- the first region 903 includes a video feed from a respective camera among the one or more camera 118 associated with the smart home environment 100.
- the respective camera is located on the back porch of the user's domicile or pointed out of a window of the user's domicile.
- an indicator 912 indicates that the video feed being displayed in the first region 903 is a live video feed.
- the client device detects (1010) a first user input.
- Figure 9R shows the client device 504 detecting a pinch-in gesture with contacts 965A and 965B (i.e., the first user input) relative to a respective portion of the video feed in the first region 903 of the video monitoring UI on the touch screen 906.
- the client device In response to detecting the first user input, the client device performs (1012) a local software-based zoom on a portion of the video feed according to the first user input.
- Figure 9S shows the client device 504 displaying a zoomed-in portion of the video feed in response to detecting the pinch-in gesture (i.e., the first user input) on the touch screen 906 in Figure 9R.
- the zoomed-in portion of the video feed corresponds to a software-based zoom performed locally by the client device 504 on the respective portion of the video feed corresponding to the pinch-in gesture in Figure 9R.
- the client device detects (1014) a second user input.
- the video controls in the first region 903 further includes an enhancement affordance 968 in response to detecting the pinch-in gesture (i.e., the first user input) in Figure 9R.
- Figure 9S shows the client device 504 detecting a contact 967 (i.e., the second user input) at a location corresponding to the enhancement affordance 968 on the touch screen 906.
- the client device determines
- the client device 504 determines the zoom magnification of the local, software zoom function and the coordinates of the respective portion of the video feed in response to detecting the contact 967 (i.e., the second user input) in Figure 9S.
- the client device sends (1018) a zoom command to the server including the current zoom magnification and the coordinates.
- the client device 504 or a component thereof e.g., camera control module 732, Figure 7) causes the command to be sent to the respective camera, where the command includes the current zoom
- the command is typically relayed through the video server system 508 or a component thereof (e.g., the camera control module 618, Figure 6) to the respective camera. In some implementations, however, the client device 504 sends the command directly to the respective camera.
- the server changes (1020) the stored DTPZ settings for the camera based on the zoom command.
- the server changes the stored video settings (e.g., tilt, pan, and zoom settings) for the respective camera according to the zoom command.
- the server sends (1022) the zoom command to the camera including the zoom magnification and the coordinates.
- the camera In response to receiving the zoom command, the camera performs (1024) a hardware-based zoom according to the zoom magnification and the coordinates.
- the respective camera performs a hardware zoom at the zoom magnification on the coordinates indicated by the zoom command.
- the respective camera crops its field of view to the coordinates indicated by the zoom command.
- the camera After performing the hardware-based zoom, the camera sends (1026) the changed video feed to the server.
- the respective camera sends the changed video feed with the field of view corresponding to the coordinates indicated by the zoom command.
- the server sends (1028) the changed video feed to the client device. In some implementations, the camera directly sends the changed video feed to the client device.
- the client device presents (1030) the changed video feed on the associated display.
- Figure 9U for example, shows the client device 504 displaying the changed video feed at a higher resolution as compared to Figure 9S, where the local, software zoom produced a lower resolution of the respective portion.
- FIG. 11A illustrates a representative system architecture 1102 and a corresponding data processing pipeline 1104.
- the data processing pipeline 1104 processes a live video feed received from a video source 522 (e.g., including a camera 118 and an optional controller device) in real-time to identify and categorize motion events in the live video feed, and sends real-time event alerts and a refreshed event timeline to a client device 504 associated with a reviewer account bound to the video source 522.
- a video source 522 e.g., including a camera 118 and an optional controller device
- the video data is processed to determine if any potential motion event candidates are present in the video stream.
- a potential motion event candidate detected in the video data is also referred to as a cue point.
- the initial detection of motion event candidates is also referred to as cue point detection.
- a detected cue point triggers performance of a more through event identification process on a video segment corresponding to the cue point.
- the more through event identification process includes obtaining the video segment corresponding to the detected cue point, background estimation for the video segment, motion object identification in the video segment, obtaining motion tracks for the identified motion object(s), and motion vector generation based on the obtained motion tracks.
- the event identification process may be performed by the video source 522 and the video server system 508 cooperatively, and the division of the tasks may vary in different implementations, for different equipment capability configurations, and/or for different network and server load situations.
- the video server system 508 categorizes the motion event candidate, and presents the result of the event detection and categorization to a reviewer associated with the video source 522.
- the video server system 508 includes functional modules for an event preparer, an event categorizer, and a user facing frontend.
- the event preparer obtains the motion vectors for motion event candidates (e.g., by processing the video segment corresponding to a cue point or by receiving the motion vector from the video source).
- the event categorizer categorizes the motion event candidates into different event categories.
- the user facing frontend generates event alerts and facilitates review of the motion events by a reviewer through a review interface on a client device 504.
- the client facing frontend also receives user edits on the event categories, user preferences for alerts and event filters, and zone definitions for zones of interest.
- the event categorizer optionally revises event categorization models and results based on the user edits received by the user facing frontend.
- the video server system 508 also determines an event mask for each motion event candidate and caches the event mask for later use in event retrieval based on selected zone(s) of interest.
- the video server system 508 stores raw or compressed video data (e.g., in a video data database 1106), event categorization model (e.g., in an event categorization model database 1108), and event masks and other event metadata (e.g., in an event data and event mask database 1110) for each of the video sources 522.
- event categorization model e.g., in an event categorization model database 1108
- event masks and other event metadata e.g., in an event data and event mask database 1110
- the system architecture 1102 includes the video source 522.
- the video source 522 transmits a live video feed to the remote video server system 508 via one or more networks (e.g., the network(s) 162).
- the transmission of the video data is continuous as the video data is captured by the camera 118.
- the transmission of video data is irrespective of the content of the video data, and the video data is uploaded from the video source 522 to the video server system 508 for storage irrespective of whether any motion event has been captured in the video data.
- the video data may be stored at a local storage device of the video source 522 by default, and only video segments corresponding to motion event candidates detected in the video stream are uploaded to the video server system 508 in real-time.
- the video source 522 dynamically determines which parts of the video stream are to be uploaded to the video server system 508 in real-time. For example, in some implementations, depending on the current server load and network conditions, the video source 522 optionally prioritizes the uploading of video segments corresponding newly detected motion event candidates ahead of other portions of the video stream that do not contain any motion event candidates. This upload prioritization helps to ensure that important motion events are detected and alerted to the reviewer in real-time, even when the network conditions and server load are less than optimal. In some
- the video source 522 implements two parallel upload connections, one for uploading the continuous video stream captured by the camera 118, and the other for uploading video segments corresponding detected motion event candidates. At any given time, the video source 522 determines whether the uploading of the continuous video stream needs to be suspended temporarily to ensure that sufficient bandwidth is given to the uploading of the video segments corresponding to newly detected motion event candidates.
- the video stream uploaded for cloud storage is at a lower quality (e.g., lower resolution, lower frame rate, higher compression, etc.) than the video segments uploaded for motion event processing.
- the video source 522 includes a camera 118, and an optional controller device.
- the camera 118 includes sufficient onboard processing power to perform all necessary local video processing tasks (e.g., cue point detection for motion event candidates, video uploading prioritization, network connection management, etc.), and the camera 118 communicates with the video server system 508 directly, without any controller device acting as an intermediary.
- the camera 118 captures the video data and sends the video data to the controller device for the necessary local video processing tasks.
- the controller device optionally performs the local processing tasks for more than one camera 118.
- a single controller device receives the video data from each camera and processes the video data to detect motion event candidates in the video stream from each camera.
- the controller device is responsible for allocating sufficient outgoing network bandwidth to transmitting video segments containing motion event candidates from each camera to the server before using the remaining bandwidth to transmit the video stream from each camera to the video server system 508.
- the continuous video stream is sent and stored at one server facility while the video segments containing motion event candidates are send to and processed at a different server facility.
- Cue point detection is a first layer motion event identification which is intended to be slightly over-inclusive, such that real motion events are a subset of all identified cue points.
- cue point detection is based on the number of motion pixels in each frame of the video stream.
- any method of identifying motion pixels in a frame may be used. For example, a Gaussian mixture model is optionally used to determine the number of motion pixels in each frame of the video stream.
- a cue point is detected when the total number of motion pixels in a current image frame exceeds a predetermined threshold.
- a running sum of total motion pixel count is calculated for a predetermined number of consecutive frames as each new frame is processed, and a cue point is detected when the running sum exceeds a predetermined threshold.
- a profile of total motion pixel count over time is obtained.
- a cue point is detected when the profile of total motion pixel count for a current frame sequence of a predetermined length (e.g., 30 seconds) meets a predetermined trigger criterion (e.g., total pixel count under the profile > a threshold motion pixel count).
- the beginning of a cue point is the time when the total motion pixel count meets a predetermined threshold (e.g., 50 motion pixels).
- the start of the motion event candidate corresponding to a cue point is the beginning of the cue point (e.g., tl in Figure 1 lB-(a)).
- the start of the motion event candidate is a predetermined lead time (e.g., 5 seconds) before the beginning of the cue point.
- the start of a motion event candidate is used to retrieve a video segment corresponding to the motion event candidate for a more thorough event identification process.
- the thresholds for detecting cue points are adjusted overtime based on performance feedback. For example, if too many false positives are detected, the threshold for motion pixel count is optionally increased. If too many motion events are missed, the threshold for motion pixel count is optionally decreased.
- the profile is smoothed to remove short dips in total motion pixel count, as shown in Figure 1 lB-(b).
- momentary stops or slowing downs may occur during the motion, and such momentary stops or slowing downs are reflected as short dips in the profile of total motion pixel count. Removing these short dips from the profile helps to provide a more accurate measure of the extent of motion for cue point detection. Since cue point detection is intended to be slightly over-inclusive, by smoothing out the motion pixel profile, cue points for motion events that contain momentary stops or slowing downs of the moving objects would less likely be missed by the cue point detection.
- a change in camera state e.g., IR mode, AE mode,
- each camera state change is noted in the cue point detection process (as shown in Figure 11B- (c)), and a detected cue point is optionally suppressed if its occurrence overlaps with one of the predetermined camera state changes.
- the total motion pixel count in each frame is weighed differently if accompanied with a camera state change. For example, the total motion pixel count is optionally adjusted by a fraction (e.g., 10%) if it is accompanied by a camera state change, such as an IR mode switch.
- the motion pixel profile is reset after each camera state change.
- a fast initial increase in total motion pixel count may indicate a global scene change or a lighting change, e.g., when the curtain is drawn, or when the camera is pointed in a different direction or moved to a different location by a user.
- a detected cue point is optionally suppressed.
- the suppressed cue point undergoes an edge case recovery process to determine whether the cue point is in fact not due to lighting change or camera movement, but rather a valid motion event candidate that needs to be recovered and reported for subsequent event processing.
- the profile of motion pixel count is reset when such fast initial increase in total motion pixel count is detected and a corresponding cue point is suppressed.
- the cue point detection generally occurs at the video source 522, and immediately after a cue point is detected in the live video stream, the video source 522 sends an event alert to the video server system 508 to trigger the subsequent event processing.
- the video source 522 includes a video camera with very limited on-board processing power and no controller device, and the cue point detection described herein is performed by the video server system 508 on the continuous video stream transmitted from the camera to the video server system 508.
- a video segment corresponding to the cue point is used to identify a motion track of a motion object in the video segment.
- the identification of motion track is optionally performed locally at the video source 522 or remotely at the video server system 508. In some implementations, the identification of the motion track based on a video segment
- the event preparer module receives an alert for a cue point detected in the video stream, and retrieves the video segment corresponding to the cue point from cloud storage (e.g., the video data database 1106, Figure 11A) or from the video source 522.
- the video segment used to identify the motion track may be of higher quality than the video uploaded for cloud storage, and the video segment is retrieved from the video source 522 separately from the continuous video feed uploaded from the video source 522.
- the event preparer module after the event preparer module obtains the video segment corresponding to a cue point, the event preparer module performs background estimation, motion object identification, and motion track determination. Once the motion track(s) of the motion object(s) identified in the video segment are determined, the event preparer module generates a motion vector for each of the motion object detected in the video segment. Each motion vector corresponds to one motion event candidate. In some implementations,
- false positive suppression is optionally performed to reject some motion event candidates before the motion event candidates are submitted for event categorization.
- the background estimation, motion track determination, and the motion vector generation are optionally performed locally at the video source 522.
- the motion vector representing a motion event candidate is a simple two-dimensional linear vector defined by a start coordinate and an end coordinate of a motion object in a scene depicted in the video segment
- the motion event categorization is based on the simple two-dimensional linear motion vector.
- the advantage of using the simple two-dimensional linear motion vector for event categorization is that the event data is very compact, and fast to compute and transmit over a network.
- simplifying the representative motion vector and off-loading the motion vector generation from the event preparer module of the video server system 508 to the video source 522 can help to realize the real-time event categorization and alert generation for many video sources in parallel.
- track lengths for the motion tracks are determined.
- "short tracks” with track lengths smaller than a predetermined threshold e.g., 8 frames
- a predetermined threshold e.g. 8 frames
- pairs of short tracks that are roughly opposite in direction are suppressed as "noisy tracks.”
- the cue point is determined to be a false positive, and no motion event candidate is sent to the event categorizer for event categorization.
- a motion vector is generated for each remaining motion track, and corresponds to a respective motion event candidate going into event categorization.
- multiple motion event candidates may be generated based on a video segment, where each motion event candidate represents the motion of a respective motion object detected in the video segment.
- the false positive suppression occurring after the cue point detection and before the motion vector generation is the second layer false positive suppression, which removes false positives based on the characteristics of the motion tracks.
- object identification is performed by subtracting the estimated background from each frame of the video segment.
- a foreground motion mask is then obtained by masking all pixel locations that have no motion pixels.
- An example of a motion mask is shown in Figure 1 lC-(a). The example motion mask shows the motion pixels in one frame of the video segment in white, and the rest of the pixels in black.
- the motion track is used to generate a two- dimensional linear motion vector which only takes into account the beginning and end locations of the motion track (e.g., as shown by the dotted arrow in Figure 1 lC-(b)).
- the motion vector is a non-linear motion vector that traces the entire motion track from the first frame to the last frame of the frame sequence in which the motion object has moved.
- the motion masks corresponding to each motion object detected in the video segment are aggregated across all frames of the video segment to create an event mask for the motion event involving the motion object.
- an event mask for the motion event involving the motion object.
- all pixel locations containing less than a threshold number of motion pixels e.g., one motion pixel
- all pixel locations containing at least the threshold number of motion pixels are shown in white.
- the active portion of the event mask indicates all areas in the scene depicted in the video segment that have been accessed by the motion object during its movement in the scene.
- the event mask for each motion event is stored at the video server system 508 or a component thereof (e.g., the zone creation module 624, Figure 6), and used to selectively retrieve motion events that enter or touch a particular zone of interest within the scene depicted in the video stream of a camera. More details on the use of event masks are provided later in the present disclosure with respect to real-time zone monitoring, and retroactive event identification for newly created zones of interest.
- a motion mask is created based on an aggregation of motion pixels from a short frame sequence in the video segment.
- the pixel count at each pixel location in the motion mask is the sum of the motion pixel count at that pixel location from all frames in the short frame sequence. All pixel locations in the motion mask with less than a threshold number of motion pixels (e.g., motion pixel count > 4 for 10 consecutive frames) are masked. Thus, the unmasked portions of the motion mask for each such short frame sequence indicates a dominant motion region for the short frame sequence.
- a motion track is optionally created based on the path taken by the dominant motion regions identified from a series of consecutive short frame sequences.
- an event mask is optionally generated by
- the event mask generated this way is no longer a binary event mask, but is a two-dimensional histogram.
- the height of the histogram at each pixel location is the sum of the number of frames that contain a motion pixel at that pixel location.
- This type of non-binary event mask is also referred to as a motion energy map, and illustrates the regions of the video scene that are most active during a motion event. The characteristics of the motion energy maps for different types of motion events are optionally used to differentiate them from one another.
- the motion energy map of a motion event candidate is vectorized to generate the representative motion vector for use in event categorization.
- the motion energy map of a motion event is generated and cached by the video server system and used for real-time zone monitoring, and retro-active event identification for newly created zones of interest.
- a live event mask is generated based on the motion masks of frames that have been processed, and is continuously updated until all frames of the motion event have been processed.
- the live event mask of a motion event in progress is used to determine if the motion event is an event of interest for a particular zone of interest. More details of how a live event mask is used for zone monitoring are provided later in the present disclosure.
- the video server system 508 After the video server system 508 obtains the representative motion vector for a new motion event candidate (e.g., either by generating the motion vector from the video segment corresponding to a newly detected cue point), or by receiving the motion vector from the video source 522, the video server system 508 proceeds to categorize the motion event candidate based on its representative motion vector.
- the categorization of motion events is performed by training a categorization model based on a training data set containing motion vectors corresponding to various known event categories (e.g., person running, person jumping, person walking, dog running, car passing by, door opening, door closing, etc.).
- known event categories e.g., person running, person jumping, person walking, dog running, car passing by, door opening, door closing, etc.
- the event categorizer module examines the new motion vector in light of the common characteristics of each known event category (e.g., based on a Euclidean distance between the new motion vector and a canonical vector representing each known event type), and determines the most likely event category for the new motion vector among the known event categories.
- motion event categorization based on pre-established motion event categories is an acceptable way to categorize motion events
- this categorization technique may only be suitable for use when the variety of motion events handled by the video server system 508 is relatively few in number and already known before any motion event is processed.
- the video server system 508 serves a large number of clients with cameras used in many different environmental settings, resulting in motion events of many different types.
- each reviewer may be interested in different types of motion events, and may not know what types of events they would be interested in before certain real world events have happened (e.g., some object has gone missing in a monitored location).
- it is desirable to have an event categorization technique that can handle any number of event categories based on actual camera use, and automatically adjust (e.g., create and retire) event categories through machine learning based on the actual video data that is received over time.
- categorization of motion events is through a density-based clustering technique (e.g., DBscan) that forms clusters based on density distributions of motion events (e.g., motion events as represented by their respective motion vectors) in a vector event space.
- DBscan density-based clustering technique
- Regions with sufficiently high densities of motion vectors are promoted as recognized event categories, and all motion vectors within each promoted region are deemed to belong to a respective recognized event category associated with that promoted region.
- regions that are not sufficiently dense are not promoted or recognized as event categories.
- non-promoted regions are collectively associated with a category for unrecognized events, and all motion vectors within such non- promoted regions are deemed to be unrecognized motion events at the present time.
- the event categorizer places the new motion vector into the vector event space according to its value. If the new motion vector is sufficiently close to or falls within an existing dense cluster, the event category associated with the dense cluster is assigned to the new motion vector. If the new motion vector is not sufficiently close to any existing cluster, the new motion vector forms its own cluster of one member, and is assigned to the category of unrecognized events.
- the cluster is updated with the addition of the new motion vector. If the updated cluster is now a dense cluster, the updated cluster is promoted, and all motion vectors (including the new motion vector) in the updated cluster are assigned to a new event category created for the updated cluster. If the updated cluster is still not sufficiently dense, no new category is created, and the new motion vector is assigned to the category of unrecognized events. In some implementations, clusters that have not been updated for at least a threshold expiration period are retired. The retirement of old static clusters helps to remove residual effects of motion events that are no longer valid, for example, due to relocation of the camera that resulted in a scene change.
- Figure 1 ID illustrates an example process for the event categorizer of the video server system 508 to (1) gradually learn new event categories based on received motion events, (2) assign newly received motion events to recognized event categories or an unrecognized event category, and (3) gradually adapt the recognized event categories to the more recent motion events by retiring old static clusters and associated event categories, if any.
- the example process is provided in the context of a density-based clustering algorithm (e.g., sequential DBscan).
- a person skilled in the art will recognize that other clustering algorithms that allow growth of clusters based on new vector inputs can also be used in various implementations.
- sequential DBscan allows growth of a cluster based on density reachability and density connectedness.
- a point q is directly density-reachable from a point p if it is not farther away than a given distance s(i. Q. , is part of its ⁇ -neighborhood) and if p is surrounded by sufficiently many points M such that one may consider p and q to be part of a cluster, q is called density-reachable from p if there is a sequence p ⁇ ,...p n of points is directly density-reachable from p,. Since the relation of density-reachable is not symmetric, another notion of density-connectedness is introduced.
- a cluster is defined by two properties: (1) all points within the cluster are mutually density-connected, and (2) if a point is density-reachable from any point of the cluster, it is part of the cluster as well.
- the clusters formed based on density connectedness and density reachability can have all shapes and sizes, in other words, motion event candidates from a video source (e.g., as represented by motion vectors in a dataset) can fall into non-linearly separable clusters based on this density-based clustering algorithm, when they cannot be adequately clustered by K-means or Gaussian Mixture EM clustering techniques.
- the values of ⁇ and are adjusted by the video server system 508 for each video source or video stream, such that clustering quality can be improved for different camera usage settings.
- the four parameters are stored and sequentially updated for each cluster.
- the four parameters include: (1) cluster creation time, (2) cluster weight, (3) cluster center, and (4) cluster radius.
- the creation time for a given cluster records the time when the given cluster was created.
- the cluster weight for a given cluster records a member count for the cluster.
- a decay rate is associated with the member count parameter, such that the cluster weight decays over time if an insufficient number of new members are added to the cluster during that time. This decaying cluster weight parameter helps to automatically fade out old static clusters that are no longer valid.
- the cluster center of a given cluster is the weighted average of points in the given cluster.
- the cluster radius of a given cluster is the weighted spread of points in the given cluster (analogous to a weighted variance of the cluster). It is defined that clusters have a maximum radius of ⁇ /2.
- a cluster is considered to be a dense cluster when it contains at least M/2 points.
- Figure 1 lD-(a) shows the early state of the event vector space 1114.
- two motion vectors e.g., represented as two points
- Each motion vector forms its own cluster (e.g., c; and C2, respectively) in the event space 1114.
- the respective creation time, cluster weight, cluster center, and cluster radius for each of the two clusters are recorded.
- no recognized event category exists in the event space, and the motion events represented by the two motion vectors are assigned to the category of unrecognized events.
- the event indicators of the two events indicate that they are unrecognized events on the event timeline, for example, in the manner shown in Figure 9C.
- a new motion vector is received and placed in the event space 1114 at time t 2 .
- the new motion vector is density- reachable from the existing point in cluster c 2 and thus falls within the existing cluster c 2 .
- the cluster center, cluster weight, and cluster radius of cluster c 2 are updated based on the entry of the new motion vector.
- the new motion vector is also assigned to the category of
- the event indicator of the new motion event is added to the event timeline in real-time, and has the appearance associated with the category for unrecognized events.
- Figure 1 lD-(c) illustrates that, at time t 3 , two new clusters C3 and C4 have been established and grown in size (e.g., cluster weight and radius) based on a number of new motion vectors received during the time interval between t 2 and t 3 .
- cluster weights for clusters c; and c 2 have decayed gradually due to the lack of new members during this period of time. Up to this point, no recognized event category has been established, and all motion events are assigned to the category of unrecognized events.
- the event indicators of the motion events have an appearance associated with the category for unrecognized events (e.g., as the event indicators 922 show in Figures 9C).
- a corresponding event indicator for the new event is added to the timeline associated with the present video source.
- Figure 1 lD-(d) illustrates that, at time t 4 , another new motion vector has been added to the event space 1114, and the new motion vector falls within the existing cluster C3.
- the cluster center, cluster weight, and cluster radius of cluster C3 are updated based on the addition of the new motion vector, and the updated cluster C3 has become a dense cluster based on a predetermined density requirement (e.g., a cluster is considered dense when it contains at least M/2 points).
- a predetermined density requirement e.g., a cluster is considered dense when it contains at least M/2 points.
- the previously unrecognized events in cluster C 3 are now recognized events of the new event category.
- the event categorizer notifies the user facing frontend of the video server system 508 about the new event category.
- the user facing frontend determines whether a reviewer interface for the video stream corresponding to the event space 1114 is currently displayed on a client device 504. If a reviewer interface is currently displayed, the user facing frontend causes the client device 504 to retroactively modify the display characteristics of the event indicators for the motion events in cluster C3 to reflect the newly established event category in the review interface.
- the user facing frontend will cause the event indicators for the motion events previously within cluster C3 (and now in cluster C3) to take on a color assigned to the new event category).
- the event indicator of the new motion event will also take on the color assigned to the new event category. This is illustrated in the review interface 908 in Figure 9D by the changing color of the event indicators 922 A, 922C, 922D and 922E to reflect the newly established event category (supposing that cluster C 3 corresponds to Event Cat. A here).
- Figure 1 lD-(e) illustrates that, at time t 5 , two new motion vectors have been received in the interval between t 4 and ts.
- One of the two new motion vectors falls within the existing dense cluster C3, and is associated with the recognized event category of cluster C3.
- the event categorizer notifies the user facing frontend regarding the event categorization result. Consequently, the event indicator of the motion event represented by the newly categorized motion vector is given the appearance associated with the recognized event category of cluster C 3 .
- a pop-up notification for the newly recognized motion event is presented over the timeline associated with the event space.
- FIG. 9E This real-time recognition of a motion event for an existing event category is illustrated in Figure 9E, where an event indicator 922L and pop-up notification 928 for a new motion event are shown to be associated with an existing event category "Event Cat. B" (supposing that cluster C 3 corresponds to Event Cat. B here). It should be noted that, in Figure 9E, the presentation of the pop-up 928 and the retroactive coloring of the event indicators for Event Cat. B can also happen at the time that when Event Cat. B becomes a newly recognized category upon the arrival of the new motion event.
- Figure 1 lD-(e) further illustrates that, at time t 5 , one of the two new motion vectors is density reachable from both of the existing clusters c; and cj, and thus qualifies as a member for both clusters.
- the arrival of this new motion vector halts the gradual decay in cluster weight that cluster Ci that has sustained since time t .
- the arrival of the new motion vector also causes the existing clusters c; and cj to become density-connected, and as a result, to merge into a larger cluster cj.
- the cluster center, cluster weight, cluster radius, and optionally the creation time for cluster cj are updated accordingly.
- cluster C2 remains unchanged, and its cluster weight decays further over time.
- Figure 1 lD-(f) illustrates that, at time t 6 , the weight of the existing cluster C2 has reached below a threshold weight, and is thus deleted from the event space 1114 as a whole.
- the pruning of inactive sparse clusters allows the event space to remain fairly noise- free and keeps the clusters easily separable.
- the motion events represented by the motion vectors in the deleted sparse clusters e.g., cluster C2 are retroactively removed from the event timeline on the review interface.
- the motion events represented by the motion vectors in the deleted sparse clusters are kept in the timeline and given a new appearance associated with a category for trivial or uncommon events.
- the motion events represented by the motion vectors in the deleted sparse cluster are optionally gathered and presented to the user or an administrator to determine whether they should be removed from the event space and the event timeline.
- Figure 1 lD-(f) further illustrates that, at time t 6 , a new motion vector is assigned to the existing cluster cj, which causes the cluster weight, cluster radius, and cluster center of cluster cj to be updated accordingly.
- the updated cluster cj now reaches the threshold for qualifying as a dense cluster, and is thus promoted to a dense cluster status (and relabeled as cluster Cj).
- a new event category is created for cluster Cj. All motion vectors in cluster Cj (which were previously in clusters c; and C4) are removed from the category for unrecognized motion events, and assigned to the newly created event category for cluster Cj.
- the creation of the new category and the retroactive appearance change for the event indicators of the motion events in the new category are reflected in the reviewer interface, and optionally notified to the reviewer.
- Figure 1 lD-(g) illustrates that, at time t 7 , cluster Cj continues to grow with some of the subsequently received motion vectors. A new cluster ⁇ 3 ⁇ 4 has been created and has grown with some of the subsequently received motion vectors. Cluster C 3 has not seen any growth since time t 5 , and its cluster weight has gradually decayed overtime.
- Figure 1 lD-(h) shows that, at a later time tg, dense cluster C3 is retired (deleted from the event space 1114) when its cluster weight has fallen below a predetermine cluster retirement threshold.
- motion events represented by the motion vectors within the retired cluster C3 are removed from the event timeline for the
- the motion events represented by the motion vectors as well as the retired event category associated with the retired cluster C3 are stored as obsolete motion events, apart from the other more current motion events.
- the video data and motion event data for obsolete events are optionally compressed and archived, and require a recall process to reload into the timeline.
- the event categorizer when an event category is retired, notifies the user facing frontend to remove the event indicators for the motion events in the retired event category from the timeline.
- the motion events in the retired category are assigned to a category for retired events and their event indicators are retroactively given the appearance associated with the category for retired events in the timeline.
- Figure 1 lD-(h) further illustrates that, at time t 8 , cluster c ⁇ has grown substantially, and has been promoted as a dense cluster (relabeled as cluster C5) and given its own event category.
- cluster C5 dense cluster
- cluster C5 dense cluster
- a new event category is provided, and the appearance of the event indicators for motion events in cluster Q is retroactively changed to reflect the newly recognized event category.
- the creation of a new category causes real-time changes in the review interface provided to a client device 504 associated with the video source.
- motion events are first represented as uncategorized motion events, and as each event category is created overtime, the characteristics of event indicators for past motion events in that event category are changed to reflect the newly recognized event category. Subsequent motion events falling within the recognized categories also have event indicators showing their respective event categories.
- the currently recognized event categories are optionally presented in the review interface for user selection as event filters.
- the user may choose any subset of the currently known event categories (e.g., each recognized event categories and respective categories for trivial events, rare events, obsolete events, and unrecognized events) to selectively view or receive notifications for motion events within the subset of categories.
- Figures 9E-9G where the user has selectively turned off the event indicators for Event Cat. A and turned on the event indicators for Event Cat. B on the timeline 910 by selecting Event Cat. B (via affordance 926B) and deselecting Event Cat. A (via affordance 926A) in the region 907.
- the real-time event notification is also turned off for Event Cat. A, and turned on for Event Cat. B by selecting Event Cat. B (via affordance 927B) and deselecting Event Cat. A (via affordance 927 A) in the third region 907.
- a user may review past motion events and their categories on the event timeline.
- the user is allowed to edit the event category assignments, for example, by removing one or more past motion events from a known event category, as shown in Figures 9H-9J.
- the user facing frontend notifies the event categorizer of the edits.
- the event categorizer removes the motion vectors of the removed motion events from the cluster corresponding to the event category, and recomputes the cluster parameters (e.g., cluster weight, cluster center, and cluster radius).
- the removal of motion events from a recognized cluster optionally causes other motion events that are similar to the removed motion events to be removed from the recognized cluster as well.
- manual removal of one or more motion events from a recognized category may cause one or more motion events to be added to event category due to the change in cluster center and cluster radius.
- the event category models are stored in the event category models database 1108 ( Figure 11A), and is retrieved and updated in accordance with the user edits.
- one event category model is established for one camera.
- a composite model based on the motion events from multiple related cameras e.g., cameras reported to serve a similar purpose, or have a similar scene, etc.
- the timeline for one camera may show event categories discovered based on motion events in the video streams of its related cameras, even though no event for such categories have been seen in the camera's own video stream.
- event data and event masks of past motion events are stored in the event data and event mask database 1110 ( Figure 11A).
- Figure 11A event data and event masks of past motion events
- the client device 504 receives user input to select one or more filters to selectively review past motion events, and selectively receive event alerts for future motion events.
- the client device 504 passes the user selected filter(s) to the user facing frontend, and the user facing frontend retrieves the events of interest based on the information in the event data and event mask database 1110.
- the selectable filters include one or more recognized event categories, and optionally any of the categories for unrecognized motion events, rare events, and/or obsolete events.
- a recognized event category is selected as a filter, the user facing frontend retrieves all past motion events associated with the selected event category, and present them to the user (e.g., on the timeline, or in an ordered list shown in a review interface).
- the selectable filters in addition to event categories, other types of event filters can also be selected individually or combined with selected event categories.
- the selectable filters also include a human filter, which can be one or more characteristics associated with events involving a human being.
- the one or more characteristics that can be used as a human filter include a characteristic shape (e.g., aspect ratio, size, shape, and the like) of the motion object, audio comprising human speech, motion objects having human facial characteristics, etc.
- the selectable filters also include a filter based on similarity. For example, the user can select one or more example motion events, and be presented one or more other past motion events that are similar to the selected example motion events.
- the aspect of similarity is optionally specified by the user.
- the user may select “color content,” “number of moving objects in the scene,” “shape and/or size of motion object,” and/or “length of motion track,” etc, as the aspect(s) by which similarity between two motion events are measured.
- the user may choose to combine two or more filters and be shown the motion events that satisfy all of the filters combined.
- the user may choose multiple filters that will act separately, and be shown the motion events that satisfy at least one of the selected filters.
- the user may be interested in past motion events that have occurred within a zone of interest.
- the zone of interest can also be used as an event filter to retrieve past events and generate notifications for new events.
- the user may define one or more zones of interest in a scene depicted in the video stream.
- the user has defined a zone of interest 947 with any number of vertices and edges (e.g., four vertices and four edges) that is overlaid on the scene depicted in the video stream.
- the zone of interest may enclose an object, for example, a chair, a door, a window, or a shelf, located in the scene. Once a zone of interest is created, it is included as one of the selectable filters for selectively reviewing past motion events that had entered or touched the zone.
- a past motion event 922V which has touched Zone A is highlighted on the timeline 910, and includes an indicator (e.g., a cross mark) associated with the filter Zone A.
- the user may also choose to receive alerts for future events that enter Zone A, for example, by selecting the alert affordance 927C associated with Zone A.
- the video server system 508 receives the definitions of zones of interest from the client device 504, and stores the zones of interest in association with the reviewer account currently active on the client device 504.
- the user facing frontend searches the event data database 1110 ( Figure 11 A) to retrieve all past events that have motion object(s) within the selected zone of interest. This retrospective search of event of interest can be performed irrespective of whether the zone of interest had existed before the occurrence of the retrieved past event(s).
- the user does not need to know where in the scene he/she may be interested in monitoring before hand, and can retroactively query the event database to retrieve past motion events based on a newly created zone of interest.
- the scene There is no requirement for the scene to be divided into predefined zones first, and past events be tagged with the zones in which they occur when the past events were first processed and stored.
- the retrospective zone search based on newly created or selected zones of interest is implemented through a regular database query where the relevant features of each past event (e.g., which regions the motion object had entered during the motion event) are determined on the fly, and compared to the zones of interest.
- the server optionally defines a few default zones of interest (e.g., eight (2x4) predefined rectangular sectors within the scene), and each past event is optionally tagged with the particular default zones of interest that the motion object has entered.
- the user can merely select one or more of the default zones of interest to retrieve the past events that touched or entered the selected default zones of interest.
- event masks e.g., the example event mask shown in
- each recording the extent of a motion region accessed by a motion object during a given motion event are stored in the event data and event masks database 1 110 ( Figure 11 A).
- the event masks provide a faster and more efficient way of retrieving past motion events that have touched or entered a newly created zone of interest.
- the scene of the video stream is divided into a grid, and the event mask of each motion event is recorded as an array of flags that indicates whether motion had occurred within each grid location during the motion event.
- the zone of interest includes at least one of the grid location at which motion has occurred during the motion event
- the motion event is deemed to be relevant to the zone of interest and is retrieved for presentation.
- the user facing frontend imposes a minimum threshold on the number of grid locations that have seen motion during the motion event, in order to retrieve motion events that have at least the minimum number of grid locations that included motion. In other words, if the motion region of a motion event barely touched the zone of interest, it may not be retrieved for failing to meet the minimum threshold on grid locations that have seen motion during the motion event.
- an overlap factor is determined for the event mask of each past motion event and a selected zone of interest, and if the overlapping factor exceeds a predetermined overlap threshold, the motion event is deemed to be a relevant motion event for the selected zone of interest.
- the overlap factor is a simple sum of all overlapping grid locations or pixel locations. In some implementations, more weight is given to the central region of the zone of interest than the peripheral region of the zone of interest during calculation of the overlap factor.
- the event mask is a motion energy mask that stores the histogram of pixel count at each pixel location within the event mask. In some implementations, the overlap factor is weighted by the pixel count at the pixel locations that the motion energy map overlaps with the zone of interest. [00228] By storing the event mask at the time that the motion event is processed, the retrospective search for motion events that are relevant to a newly created zone of interest can be performed relatively quickly, and makes the user experience for reviewing the events-of- interest more seamless.
- motion event data e.g., event categories, event masks
- motion event data can be stored in anticipation of different uses, without requiring such uses to be tagged and stored at the time when the event occurs.
- wasteful storage of extra metadata tags may be avoided in some implementations.
- the filters can be used for not only past motion events, but also new motion events that have just occurred or are still in progress.
- a live motion mask is created and updated based on each frame of the motion event as the frame is received by the video server system 508.
- the live event mask is compared to the zone of interest on the fly, and as soon as a sufficient overlap factor is accumulated, an alert is generated, and the motion event is identified as an event of interest for the zone of interest.
- an alert is presented on the review interface (e.g., as a pop-up) as the motion event is detected and categorized, and the real-time alert optionally is formatted to indicate its associated zone of interest (e.g., similar to the dialog box 928 in Figure 9E corresponding to a motion event being associated with Event Category B). This provides real-time monitoring of the zone of interest in some implementations.
- the event mask of the motion event is generated after the motion event is completed, and the determination of the overlap factor is based on a comparison of the completed event mask and the zone of interest. Since the generation of the event mask is substantially in real-time, real-time monitoring of the zone of interest may also be realized this way in some implementations.
- the event mask of a new and/or old motion event is compared to each of the selected zones of interest. For a new motion event, if the overlap factor for any of the selected zones of interest exceeds the overlap threshold, an alert is generated for the new motion event as an event of interest associated with the zone(s) that are triggered. For a previously stored motion event, if the overlap factor for any of the selected zones of interest exceeds the overlap threshold, the stored motion event is retrieved and presented to the user as an event of interest associated with the zone(s) that are triggered.
- a motion object in a motion event may enter different zones at different times during the motion event.
- a single alert e.g., a pop-up notification over the timeline
- the alert can be optionally updated to indicate the additional zones that are triggered when the live event mask touches those zones at later times during the motion event.
- one alert is generated for each zone of interest when the live event mask of the motion event touches the zone of interest.
- Figure 1 IE illustrates an example process by which respective overlapping factors are calculated for a motion event and several zones of interest.
- the zones of interest may be defined after the motion event has occurred and the event mask of the motion event has been stored, such as in the scenario of retrospective zone search.
- the zones of interest may also be defined before the motion event has occurred in the context of zone monitoring.
- zone monitoring can rely on a live event mask that is being updated as the motion event is in progress.
- zone monitoring relies on a completed event mask that is formed immediately after the motion event is completed.
- motion masks 1118 for a frame sequence of a motion event are generated as the motion event is processed for motion vector generation. Based on the motion masks 1118 of the frames, an event mask 1120 is created.
- the creation of an event mask based on motion masks has been discussed earlier with respect to Figure 11C, and is not repeated herein.
- the motion masks 1 118 shown in Figure 1 IE are all the motion masks of a past motion event, thus, the event mask 1 120 is a complete event mask stored for the motion event.
- the event mask After the event mask has been stored, when a new zone of interest (e.g., Zone B among the selected zones of interest 1122) is created later, the event mask 1120 is compared to Zone B, and an overlap factor between the event mask 1120 and Zone B is determined.
- Overlap B within Overlap 1124
- an overlap factor based on Overlap B also exceeds an overlap threshold for qualifying the motion event as an event of interest for Zone B.
- the motion event will be selectively retrieved and presented to the reviewer, when the reviewer selects Zone B as a zone of interest for a present review session.
- a zone of interest is created and selected for zone monitoring.
- an event mask is created in real-time for the new motion event and the event mask is compared to the selected zone of interest. For example, if Zone B is selected for zone monitoring, when the Overlap B is detected, an alert associated with Zone B is generated and sent to the reviewer in real-time.
- the live event mask when a live event mask is used for zone monitoring, the live event mask is updated with the motion mask of each new frame of a new motion event that has just been processed.
- the live motion mask is compared to the selected zone(s) of interest 1122 at different times (e.g., every 5 frames) during the motion event to determine the overlap factor for each of the zones of interest. For example, if all of zones A, B, and C are selected for zone monitoring, at several times during the new motion event, the live event mask is compared to the selected zones of interest 1122 to determine their corresponding overlap factors.
- Overlap A is an overlap between the event mask 1120 and Zone A
- Overlap B is an overlap between the event mask 1120 and Zone B.
- No overlap is found between the event mask 1120 and Zone C.
- the motion event is identified as an event of interest for both Zone A and Zone B, but not for Zone C.
- alerts will be generated for the motion event for both Zone A and Zone B.
- the live event mask is compared to the selected zones as the motion mask of each frame is added to the live event mask, Overlap A will be detected before Overlap B, and the alert for Zone A will be triggered before the alert for Zone B.
- the motion event is detected and categorized independently of the existence of the zones of interest.
- the zone monitoring does not rely on raw image information within the selected zones; instead, the zone monitoring can take into account the raw image information from the entire scene. Specifically, the motion
- the motion information during the entire motion event is abstracted into an event mask, before the event mask is used to determine whether the motion event is an event of interest for the selected zone.
- the context of the motion within the selected zones is preserved, and the event category of the motion event can be provided to the user to provide more meaning to the zone monitoring results.
- Figures 12A-12B illustrate a flowchart diagram of a method 1200 of displaying indicators for motion events on an event timeline in accordance with some implementations.
- the method 1200 is performed by an electronic device with one or more processors, memory, and a display.
- processors for motion events on an event timeline
- display for example, in some implementations
- the method 1200 is performed by client device 504 ( Figures 5 and 7) or a component thereof (e.g., the client-side module 502, Figures 5 and 7).
- client device 504 Figures 5 and 7
- a component thereof e.g., the client-side module 502, Figures 5 and 7.
- the method 1200 is governed by instructions that are stored in a non- transitory computer readable storage medium (e.g., the memory 606, 706, or 806) and the instructions are executed by one or more processors of the electronic device (e.g., the CPUs 512, 702, or 802).
- processors of the electronic device e.g., the CPUs 512, 702, or 802.
- Optional operations are indicated by dashed lines (e.g., boxes with dashed- line borders).
- control and access to the smart home environment are possible.
- a video server system 508 ( Figures 5-6) and a client-side module 502 ( Figures 5 and 7) (e.g., an application for monitoring and controlling the smart home environment 100) is executed on one or more client devices 504 ( Figures 5 and 7).
- the video server system 508 manages, operates, and controls access to the smart home environment 100.
- a respective client-side module 502 is associated with a user account registered with the video server system 508 that corresponds to a user of the client device 504.
- the electronic device displays (1202) a video monitoring user interface on the display including a camera feed from a camera located remotely from the client device in a first region of the video monitoring user interface and an event timeline in a second region of the video monitoring user interface, where the event timeline includes a plurality of event indicators for a plurality of motion events previously detected by the camera.
- the electronic device i.e., electronic device 166, Figure 1, or client device
- the client device 504 or a component thereof (e.g., event review interface module 734, Figure 7) displays the video monitoring user interface (UI) on the display.
- Figure 9C shows a video monitoring UI displayed by the client device 504 with three distinct regions: a first region 903, a second region 905, and a third region 907.
- the first region 903 of the video monitoring UI includes a video feed from a respective camera among the one or more camera 118 associated with the smart home environment 100.
- the video feed is a live feed or playback of the recorded video feed from a previously selected start point.
- the second region 905 of the video monitoring UI includes an event timeline 910 and a current video feed indicator 909 indicating the temporal position of the video feed displayed in the first region 903 (i.e., the point of playback for the video feed displayed in the first region 903).
- Figure 9C shows event indicators 922A, 922B, 922C, 922D, 922E, and 922F corresponding to detected motion events on the event timeline 910.
- the video server system 508 or a component thereof receives the video feed from the respective camera, and the video server system 508 or a component thereof (e.g., event detection module 620, Figure 6) detects the motion events.
- the client device 504 receives the video feed either relayed through from the video server system 508 or directly from the respective camera and detects the motion events.
- At least one of the height or width of a respective event indicator among the plurality of event indicators on the event timeline corresponds to (1204) the temporal length of a motion event corresponding to the respective event indicator.
- the event indicators can be no taller or wider than a predefined height/width so as not to clutter the event timeline.
- the height of the indicators 922A, 922B, 922C, 922D, 922E, and 922F indicate the temporal length of the motion events to which they correspond.
- the video monitoring user interface further includes
- a third region with a list of one or more categories, and where the list of one or more categories at least includes an entry corresponding to the first category after associating the first category with the first set of similar motion events.
- the first, second, and third regions are each located in distinct areas of the video monitoring interface.
- the list of categories includes recognized activity categories and created zones of interest.
- Figure 9N shows the third region 907 of the video monitoring UI with a list of categories for recognized event categories and created zones of interest.
- the list of categories in the third region 907 includes an entry 924A for a first recognized event category labeled as "event category A,” an entry 924B for a second recognized event category labeled as "Birds in Flight,” and an entry 924C for a previously created zone of interest labeled as "zone A.”
- the list of categories in the third region 907 also includes an entry for uncategorized motion events.
- the entry corresponding to the first category includes (1208) a text box for entering a label for the first category.
- events indicators on the event timeline are colored according to the event category to which they are assigned and also labeled with a text label corresponding to the event category to which they are assigned.
- the entry 924A for event category A and the entry 924B for event category B in the list of categories in the third region 907 of the video monitoring UI may each further include a text box (not shown) for editing the default labels for the event categories.
- the user of the client device 504 may edit the default labels for the event categories (e.g., "event category A” and "event category B") to a customized name (e.g., "Coyotes” and "Birds in Flight") using the corresponding text boxes.
- the default labels for the event categories e.g., "event category A” and "event category B
- a customized name e.g., "Coyotes” and "Birds in Flight
- the entry corresponding to the first category includes (1210) a first affordance for disabling and enabling display of the first set of preexisting event indicators on the event timeline.
- the user of the client device is able to filter the event timeline on a category basis (e.g., event categories and/or zones of interest) by disabling view of events indicators associated with unwanted categories.
- Figure 9E shows an entry 924 A for event category A and an entry 924B for event category B in the list of categories in the third region 907 of the video monitoring UI.
- the entry 924 A includes indicator filter 926 A for
- FIG. 9E shows the client device 504 detecting a contact 930 (e.g., a tap gesture) at a location corresponding to the indicator filter 926 A on the touch screen 906.
- a contact 930 e.g., a tap gesture
- Figure 9G shows the indicator filter 926A as unchecked in response to detecting the contact 930 in Figure 9F.
- the client device 504 ceases to display event indicators 922A, 922C, 922D, and 922E, which correspond to motion events assigned to event category A, on the event timeline 910 in response to detecting the contact 930 in Figure 9F.
- the entry corresponding to the first category includes (1212) a second affordance for disabling and enabling notifications corresponding to subsequent motion events of the first category.
- the user of the client device is able to disable reception of notifications for motion events that fall into certain categories.
- Figure 9E shows an entry 924A for event category A and an entry 924B for event category B in the list of categories in the third region 907 of the video monitoring UI.
- the entry 924 A includes notifications indicator 927 A for enabling/disabling notifications sent in response to detection of motion events assigned to event category A
- the entry 924B includes notifications indicator 927B for
- FIG. 9E notifications for detection of motion events correlated with event category A and event category B are enabled.
- Figure 9E also shows the client device 504 detecting a contact 929 (e.g., a tap gesture) at a location corresponding to the notifications indicator 927A on the touch screen 906.
- Figure 9F shows the notifications indicator 927A in the third region 907 as disabled, shown by the line through the notifications indicator 927 A, in response to detecting the contact 929 in Figure 9E.
- the second region includes (1214) one or more timeline length affordances for adjusting a resolution of the event timeline.
- the second region 905 includes affordances 913 for changing the scale of event timeline 910: a 5 minute affordance 913A for changing the scale of the event timeline 910 to 5 minutes, a 1 hour affordance 913B for changing the scale of the event timeline 910 to 1 hour, and a 24 hours affordance 913C for changing the scale of the event timeline 910 to 24 hours.
- the scale of the event timeline 910 is 1 hour as evinced by the darkened border surrounding the 1 hour affordance 913B and also the temporal tick marks shown on the event timeline 910.
- the displayed portion of the event timeline may be changed by scrolling via left-to-right or right-to-left swipe gestures.
- the scale of the timeline may be increased (e.g., 1 hour to 24 hours) with a pinch-out gesture to display a greater temporal length or decreased (e.g., 1 hour to 5 minutes) with a pinch-in gesture to display a lesser temporal length.
- an adjustment to the resolution of the timeline causes the event timeline to automatically be repopulated with events indicators based on the selected granularity.
- Figure 9U shows the client device 504 detecting a contact 978 at a location corresponding to the 24 hours affordance 913C on the touch screen 906.
- Figure 9V shows the client device 504 displaying the event timeline 910 with a 24 hour scale in response to detecting selection of the 24 hours affordance 913C in Figure 9U.
- the 24 hours scale is evinced by the darkened border surrounding the 24 hours affordance 913C and also the temporal tick marks shown on the event timeline 910.
- a first set of event indicators are displayed on the event timeline 910 in Figure 9U in the 1 hour scale.
- a second set of event indicators are displayed on the event timeline 910 in Figure 9V in the 24 hours scale.
- the electronic device associates (1216) a newly created first category with a set of similar motion events (e.g., previously uncategorized events) from among the plurality of motion events previously detected by the camera.
- the newly created category is a recognized event category or a newly created zone of interest.
- the client device 504 Figures 5 and 7
- the video server system 508 the video server system 508
- Figures 5-6) or a component thereof determines a first event category and identifies the set of similar motion events with motion characteristics matching the first event category.
- the set of similar motion events match a predetermined event template or a learned event type corresponding to the first event category.
- the client device 504 Figures 5 and 7
- the video server system 508 Figures 5-6
- a component thereof e.g., zone monitoring module 630, Figure 6
- the set of similar motion events touch or overlap the newly created zone of interest.
- the video server system 508 provides an indication of the set of similar motion events assigned to the newly created first category, and, in response, the client device 504 associates the set of similar motion events with the newly created first category (i.e., by performing operation 1222 or associating the set of similar motion events with the created first category in a local database).
- the video server system 508 provides event characteristics for the set of similar motion events assigned to the newly created first category, and, in response, the client device 504 associates the set of similar motion events with the newly created first category (i.e., by performing operation 1222 or associating the set of similar motion events with the created first category in a local database).
- the newly created category corresponds to (1218) a newly recognized event category.
- the list of categories in the third region 907 of the video monitoring UI includes an entry 924A for newly recognized event category A.
- motion events correlated with event indicators 922A, 922C, 922D, and 922E have been retroactively assigned to event category A as shown by the changed display characteristic of event indicators 922A, 922C, 922D, and 922E (e.g., vertical stripes).
- the motion events correlated with the event indicators 922A, 922C, 922D, and 922E were previously uncategorized in Figure 9C as shown by the unfilled display characteristic for the event indicators 922A, 922C, 922D, and 922E.
- the newly created category corresponds to (1220) a newly created zone of interest.
- Figure 9N shows the client device 504 displaying an entry 924C for newly created zone A in the list of categories in the third region 907 in response to creating the zone of interest in Figures 9L-9M.
- the motion event correlated with event indicator 922M has been retroactively associated with zone A as shown by the changed display characteristic of the event indicator 922M (e.g., the 'X' at the bottom of the event indicator 922M).
- the motion event correlated with the event indicator 922M was previously uncategorized in Figure 9M as shown by the unfilled display characteristic for the event indicator 922M.
- the electronic device changes (1222) at least one display characteristic for a first set of pre-existing event indicators from among the plurality of event indicators on the event timeline that correspond to the first category, where the first set of pre-existing event indicators correspond to the set of similar motion events.
- pre-existing uncategorized events indicators on the event timeline that correspond to events that fall into the first event category are retroactively colored a specific color or displayed in a specific shading pattern that corresponds to the first event category.
- the display characteristic is a fill color of the event indicator, a shading pattern of the event indicator, an icon/symbol overlaid on the event indicator, or the like.
- the event indicators 922A, 922C, 922D, and 922E include vertical stripes as compared to no fill in Figure 9C.
- the event indicator 922M includes an 'X' symbol overlaid on its bottom region as compared to no fill or symbol(s) in Figure 9M.
- the set of similar motion events is (1224) a first set of similar motion events
- the electronic device associates a newly created second category with a second set of similar motion events from among the plurality of motion events previously detected by the camera, where the second set of similar motion events is distinct from the first set of similar motion events; and, in response to associating the second category with the second set of similar motion events, changes at least one display
- the list of categories in the third region 907 of the video monitoring UI includes an entry 924B for newly recognized event category B.
- motion events correlated with event indicators 922F, 922G, 922H, 922J, and 922K have been retroactively assigned to event category B as shown by the changed display characteristic of event indicators 922F, 922G, 922H, 922J, and 922K (e.g., a diagonal shading pattern).
- the motion events correlated with the event indicators 922F, 922G, 922H, 922J, and 922K were previously uncategorized in Figures 9C-9D as shown by the unfilled display characteristic for the event indicators 922F, 922G, 922H, 922J, and 922K.
- the electronic device detects (1226) a first user input at a location corresponding to a respective event indicator on the event timeline and, in response to detecting the first user input, displays preview of a motion event corresponding to the respective event indicator.
- the user of the client device 504 hovers over the respective events indicator with a mouse cursor or taps the respective events indicator with his/her finger to display a pop-up preview pane with a short video clip (e.g., approximately three seconds) of the motion event that corresponds to the respective events indicator.
- Figure 9G shows the client device 504 detecting a contact 931 (e.g., a tap gesture) at a location corresponding to event indicator 922B on the touch screen 906.
- Figure 9H shows the client device 504 displaying a dialog box 923 for a respective motion event correlated with the event indicator 922B in response to detecting selection of the event indicator 922B in Figure 9G.
- the dialog box 923 may be displayed in response to sliding or hovering over the event indicator 922B.
- the dialog box 923 includes the time the respective motion event was detected (e.g., 11 :37:40 am) and a preview 932 of the respective motion event (e.g., a static image, a series of images, or a video clip).
- the respective events indicator may be associated with the multiple motion events and the pop-up preview pane may concurrently display video clips of the multiple motion event that corresponds to the respective events indicator.
- Figure 9V shows the client device 504 displaying the event timeline 910 with a 24 hour scale in response to detecting selection of the 24 hours affordance 913C in Figure 9U.
- Figure 9V for example, also shows the client device 504 detecting a contact 980 (e.g., a tap gesture) at a location corresponding to an event indicator 979 on the touch screen 906.
- a contact 980 e.g., a tap gesture
- Figure 9W shows the client device 504 displaying a dialog box 981 for respective motion events correlated with the event indicator 979 in response to detecting selection of the event indicator 979 in Figure 9V.
- the dialog box 981 may be displayed in response to sliding or hovering over the event indicator 979.
- the dialog box 981 includes the times at which the respective motion events were detected (e.g., 6:35:05 am, 6:45: 15 am, and 6:52:45 am).
- the dialog box 981 also includes previews 982A, 982B, and 982C of the respective motion events (e.g., a static image, a series of images, or a video clip).
- Figures 12A-12B have been described is merely an example and is not intended to indicate that the described order is the only order in which the operations could be performed.
- One of ordinary skill in the art would recognize various ways to reorder the operations described herein. Additionally, it should be noted that details of other processes described herein with respect to other methods and/or processes described herein (e.g., the process 1000, and the methods 1300, 1400, 1500, and 1600) are also applicable in an analogous manner to the method 1200 described above with respect to Figures 12A-12B.
- Figures 13A-13B illustrate a flowchart diagram of a method of editing event categories in accordance with some implementations.
- the method 1300 is performed by an electronic device with one or more processors, memory, and a display.
- the method 1300 is performed by client device 504 ( Figures 5 and 7) or a component thereof (e.g., the client-side module 502, Figures 5 and 7).
- the method 1300 is governed by instructions that are stored in a non-transitory computer readable storage medium (e.g., the memory 606, 706, or 806) and the instructions are executed by one or more processors of the electronic device (e.g., the CPUs 512, 702, or 802).
- Optional operations are indicated by dashed lines (e.g., boxes with dashed- line borders).
- control and access to the smart home environment are possible.
- a video server system 508 ( Figures 5-6) and a client-side module 502 ( Figures 5 and 7) (e.g., an application for monitoring and controlling the smart home environment 100) is executed on one or more client devices 504 ( Figures 5 and 7).
- the video server system 508 manages, operates, and controls access to the smart home environment 100.
- a respective client-side module 502 is associated with a user account registered with the video server system 508 that corresponds to a user of the client device 504.
- the electronic device displays (1302) a video monitoring user interface on the display with a plurality of affordances associated one or more recognized activities.
- the electronic device i.e., electronic device 166, Figure 1, or client device 504, Figures 5 and 7) is a mobile phone, tablet, laptop, desktop computer, or the like, which executes a video monitoring application or program corresponding to the video monitoring user interface.
- the client device 504 or a component thereof e.g., event review interface module 734, Figure 7) displays the video monitoring user interface (UI) on the display.
- the video monitoring user interface includes (1304):
- FIG. 9N shows a video monitoring UI displayed by the client device 504 with three distinct regions: a first region 903, a second region 905, and a third region 907.
- the first region 903 of the video monitoring UI includes a video feed from a respective camera among the one or more camera 118 associated with the smart home environment 100.
- the video feed is a live feed or playback of the recorded video feed from a previously selected start point.
- the second region 905 of the video monitoring UI includes an event timeline 910 and a current video feed indicator 909 indicating the temporal position of the video feed displayed in the first region 903 (i.e., the point of playback for the video feed displayed in the first region 903).
- Figure 9N shows event indicators 922F, 922G, 922H, 9221, 922J, 922K, 922L, and 922M corresponding to detected motion events on the event timeline 910.
- the video server system 508 ( Figures 5-6) receives the video feed from the respective camera and detects the motion events.
- the client device 504 ( Figures 5 and 7) receives the video feed either relayed through from the video server system 508 or directly from the respective camera and detects the motion events.
- the third region 907 of the video monitoring UI includes a list of categories for recognized event categories and created zones of interest.
- the list of one or more recognized event categories includes (1306) the plurality of affordances, where each of the plurality of affordances correspond to a respective one of the one or more recognized event categories.
- the list of categories in the third region 907 includes an entry 924A for a first recognized event category labeled as "event category A,” an entry 924B for a second recognized event category labeled as "Birds in Flight,” and an entry 924C for a created zone of interest labeled as "zone A.”
- the respective affordance is displayed (1308) in response to performing a gesture with respect to one of the event indicators. For example, the user hovers over one of the event indicators on the event timeline to display a pop-up box including a video clip of the motion event corresponding to the event indicators and an affordance for accessing the editing user interface corresponding to the respective event category.
- Figure 9G shows the client device 504 detecting a contact 931 (e.g., a tap gesture) at a location corresponding to the event indicator 922B on the touch screen 906.
- Figure 9H shows the client device 504 displaying a dialog box 923 for a respective motion event correlated with the event indicator 922B in response to detecting selection of the event indicator 922B in Figure 9G.
- the dialog box 923 may be displayed in response to sliding or hovering over the event indicator 922B.
- the dialog box 923 includes an affordance 933, which, when activated (e.g., with a tap gesture), causes the client device 504 to display an editing UI for the event category to which the respective motion event is assigned (if any).
- the electronic device detects (1310) a user input selecting a respective affordance from the plurality of affordances in the video monitoring user interface, the respective affordance being associated with a respective event category of the one or more recognized event categories.
- Figure 9H shows the client device 504 detecting a contact 934 (e.g., a tap gesture) at a location corresponding to the entry 924B for event category B on the touch screen 906.
- a contact 934 e.g., a tap gesture
- the electronic device displays (1312) an editing user interface for the respective event category on the display with a plurality of animated representations in a first region of the editing user interface, where the plurality of animated representations correspond to a plurality of previously captured motion events assigned to the respective event category.
- an animated user interface for the respective event category on the display with a plurality of animated representations in a first region of the editing user interface, where the plurality of animated representations correspond to a plurality of previously captured motion events assigned to the respective event category.
- an animated representations correspond to a plurality of previously captured motion events assigned to the respective event category.
- representation (i.e., sprites) includes approximately ten frames from a corresponding motion event.
- the ten frames are the best frames illustrating the captured motion event.
- Figure 91 shows the client device 504 displaying an editing user interface (UI) for event category B in response to detecting selection of the entry 924B in Figure 9H.
- the editing user interface for event category B includes two distinct regions: a first region 935; and a second region 937.
- the first region 935 of the editing UI includes representations 936 (sometimes also herein called "sprites") of motion events assigned to event category B.
- each of the representations 936 is a series of frames or a video clip of a respective motion event assigned to event category B.
- each of the representations 936 corresponds to a motion event of a bird flying from left to right across the field of view of the respective camera (e.g., a west to northeast direction).
- the editing user interface further includes (1314) a second region with a representation of a video feed from a camera located remotely from the client device.
- the second region 937 of the editing UI includes a representation of the video feed from the respective camera with a linear motion vector 942 representing the typical path of motion for motion events assigned event category B.
- the representation is a live video feed from the respective camera.
- the representation is a static image corresponding to a recently captured frame from video feed of the respective camera.
- the representation in the second region includes
- a linear motion vector overlaid on the video feed, where the linear motion vector corresponds to a typical motion path for the plurality of previously captured motion events assigned to the respective event category.
- a linear motion vector 942 representing the typical path of motion for motion events assigned event category B is overlaid on the representation of the video feed in the second region 937 of the editing UI.
- the first region of the editing user interface further includes (1318) an affordance for disabling and enabling notifications corresponding to subsequent motion events of the respective event category.
- the first region 935 of the editing UI further includes a notifications indicator 940 for
- the first region of the editing user interface further includes (1320) a text box for entering a label for the respective event category.
- the first region 935 of the editing UI further includes a label text entry box 939 for renaming the label for the event category from the default name ("event category B") to a custom name.
- Figure 9J shows the label for the event category as "Birds in Flight" in the label text entry box 939 as opposed to the default label - "event category B" - in Figure 91.
- the electronic device detects (1322) one or more subsequent user inputs selecting one or more animated representations in the first region of the editing user interface and, in response to detecting the one or more subsequent user inputs, sends a message to a server indicating the one or more selected animated representations, where a set of previously captured motion events corresponding to the one or more selected animated representations are disassociated with the respective event category.
- the user of the client device 504 removes animated representations for motion events that are erroneously assigned to the event category.
- the client device 504 sends a message to the video server system 508 indicating the removed motion events, and, subsequently, the video server system 508 or a component thereof (e.g., event categorization module 622, Figure 6) re-computes a model or algorithm for the event category based on the removed motion events.
- the video server system 508 or a component thereof e.g., event categorization module 622, Figure 6
- each of the representations 936 is associated with a checkbox 941.
- a respective checkbox 941 is unchecked (e.g., with a tap gesture) the motion event corresponding to the respective checkbox 941 is removed from the event category B and, in some circumstances, the event category B is re- computed based on the removed motion event.
- the checkboxes 941 enable the user of the client device 504 to remove motion events incorrectly assigned to an event category so that similar motion events are not assigned to the event category in the future.
- Figure 91 shows the client device 504 detecting a contact 943 (e.g., a tap gesture) at a location corresponding to the checkbox 941C on the touch screen 906 and contact 944 (e.g., a tap gesture) at a location corresponding to the checkbox 941E on the touch screen 906.
- a contact 943 e.g., a tap gesture
- contact 944 e.g., a tap gesture
- the user of the client device 504 intends to remove the motion events corresponding to the representation 936C and the representation 936E as they do not show a bird flying in a west to northeast direction.
- Figure 9J shows the checkbox 941C corresponding to the motion event correlated with the event indicator 922L and the checkbox 94 IE corresponding to the motion event correlated with the event indicator 922J as unchecked in response to detecting the contact 943 and the contact 944, respectively, in Figure 91.
- Figures 13A-13B have been described is merely an example and is not intended to indicate that the described order is the only order in which the operations could be performed.
- One of ordinary skill in the art would recognize various ways to reorder the operations described herein. Additionally, it should be noted that details of other processes described herein with respect to other methods and/or processes described herein (e.g., the process 1000, and the methods 1200, 1400, 1500, and 1600) are also applicable in an analogous manner to the method 1300 described above with respect to Figures 13A-13B.
- Figures 14A-14B illustrate a flowchart diagram of a method of automatically categorizing a detected motion event in accordance with some implementations.
- the method 1400 is performed by a computing system (e.g., the client device 504, Figures 5 and 7; the video server system 508, Figures 5-6; or a combination thereof) with one or more processors and memory.
- the method 1400 is governed by instructions that are stored in a non-transitory computer readable storage medium (e.g., the memory 606, 706, or 806) and the instructions are executed by one or more processors of the computing system (e.g., the CPUs 512, 702, or 802).
- Optional operations are indicated by dashed lines (e.g., boxes with dashed-line borders).
- control and access to the smart home environment are possible.
- a video server system 508 ( Figures 5-6) and a client-side module 502 ( Figures 5 and 7) (e.g., an application for monitoring and controlling the smart home environment 100) is executed on one or more client devices 504 ( Figures 5 and 7).
- the video server system 508 manages, operates, and controls access to the smart home environment 100.
- a respective client-side module 502 is associated with a user account registered with the video server system 508 that corresponds to a user of the client device 504.
- the computing system displays (1402) a video monitoring user interface on the display including a video feed from a camera located remotely from the client device in a first region of the video monitoring user interface and an event timeline in a second region of the video monitoring user interface, where the event timeline includes one or more event indicators corresponding to one or more motion events previously detected by the camera.
- the client device 504 or a component thereof e.g., event review interface module 734, Figure 7) displays the video monitoring user interface (UI) on the display.
- Figure 9C shows a video monitoring UI displayed by the client device 504 with three distinct regions: a first region 903, a second region 905, and a third region 907.
- the first region 903 of the video monitoring UI includes a video feed from a respective camera among the one or more camera 118 associated with the smart home environment 100.
- the video feed is a live feed or playback of the recorded video feed from a previously selected start point.
- the second region 905 of the video monitoring UI includes an event timeline 910 and a current video feed indicator 909 indicating the temporal position of the video feed displayed in the first region 903 (i.e., the point of playback for the video feed displayed in the first region 903).
- Figure 9C shows event indicators 922A, 922B, 922C, 922D, 922E, and 922F
- the video server system 508 receives the video feed from the respective camera and detects the motion events.
- the client device 504 receives the video feed either relayed through from the video server system 508 or directly from the respective camera and detects the motion events.
- Figure 9N shows the third region 907 of the video monitoring UI with a list of categories for recognized event categories and created zones of interest.
- the list of categories in the third region 907 includes an entry 924A for a first recognized event category labeled as "event category A,” an entry 924B for a second recognized event category labeled as "Birds in Flight,” and an entry 924C for a created zone of interest labeled as "zone A.”
- the list of categories in the third region 907 also includes an entry for uncategorized motion events.
- the computing system detects (1404) a motion event.
- the client device 504 ( Figures 5 and 7) receives the video feed either relayed through the video server system 508 or directly from the respective camera, and the client device 504 detects the respective motion event.
- the video server system 508 ( Figures 5-6) receives the video feed from the respective camera, and the video server system 508 or a component thereof (e.g., event detection module 620, Figure 6) detects a respective motion event present in the video feed. Subsequently, the video server system 508 sends an indication of the motion event along with a corresponding metadata, such as a timestamp for the detected motion event and categorization information, to the client device 504 along with the relayed video feed from the respective camera. Continuing with this example, the client device 504 detects the motion event in response to receiving the indication from the video server system 508.
- a component thereof e.g., event detection module 620, Figure 6
- the computing system determines (1406) one or more characteristics for the motion event.
- the one or more characteristics include the motion direction, linear motion vector for the motion event, the time of the motion event, the area in the field- of-view of the respective in which the motion event is detected, a face or item recognized in the captured motion event, and/or the like.
- the computing system (1408): assigns the motion event to the respective category; and displays an indicator for the detected motion event on the event timeline with a display characteristic corresponding to the respective category.
- the one or more criteria for the respective event category include a set of event characteristics (e.g., motion vector, event time, model/cluster similarity, etc.), whereby the motion event is assigned to the event category if its determined characteristics match a certain number of event characteristics for the category.
- the client device 504 ( Figures 5 and 7), the video server system 508 ( Figures 5-6) or a component thereof (e.g., event categorization module 622, Figure 6), or a combination thereof assigns the detected motion event to an event category.
- the event category is a recognized event category or a previously created zone of interest.
- the client device 504 or a component thereof (e.g., event review interface module 734, Figure 7) displays an indicator for the detected motion event on the event timeline 910 with a display characteristic corresponding to the respective category.
- the client device 504 detects a respective motion event and assigns the respective motion event to event category B.
- the client device 504 displays event indicator 922L corresponding to the respective motion event with a display characteristic for event category B (e.g., the diagonal shading pattern).
- the respective category corresponds to (1410) a recognized event category.
- the client device 504, the video server system 508 ( Figures 5-6) or a component thereof (e.g., event categorization module 622, Figure 6), or a combination thereof assigns the detected motion event with motion
- the respective category corresponds to (1412) a previously created zone of interest.
- the client device 504, the video server system 508 ( Figures 5-6) or a component thereof (e.g., event categorization module 622, Figure 6), or a combination thereof determines that the detected motion event touches or overlaps at least part of a previously created zone of interest.
- the computing system or a component thereof displays (1414) a notification indicating that the detected motion event has been assigned to the respective category.
- Figure 9E shows client device 504 displaying a notification 928 for a newly detected respective motion event corresponding to event indicator 922L.
- event indicator 922L is displayed on the event timeline 910 with the display characteristic for event category B (e.g., the diagonal shading pattern).
- notification 928 pops-up from the event indicator 922L.
- the notification 928 notifies the user of the client device 504 that the motion event detected at 12:32:52 pm was assigned to event category B.
- the notification pops-up (1416) from the indicator for the detected motion event.
- the notification 928 pops-up from the event indicator 922L after or as the event indicator 922L is displayed on the event timeline 910.
- the notification is overlaid (1418) on the video in the first region of the video monitoring user interface.
- the notification 928 in Figure 9E is at least partially overlaid on the video feed displayed in the first region 903.
- the notification is (1420) a banner notification displayed in a location corresponding to the top of the video monitoring user interface.
- the notification 928 in Figure 9E pops-up from the event timeline 910 and is displayed at a location near the top of the first region 903 (e.g., as a banner notification).
- the notification 928 in Figure 9E pops-up from the event timeline 910 and is displayed in the center of the first region 903 (e.g., overlaid on the video feed).
- the notification includes (1422) one or more affordances for providing feedback as to whether the detected motion event is properly assigned to the respective category.
- the notification 928 in Figure 9E includes one or more affordances (e.g., a thumbs up affordance and a thumbs down affordance, or a properly categorized affordance and an improperly categorized affordance) for providing feedback as to whether the motion event correlated with event indicator 922L was properly assigned to event category B.
- Figures 14A-14B have been described is merely an example and is not intended to indicate that the described order is the only order in which the operations could be performed.
- One of ordinary skill in the art would recognize various ways to reorder the operations described herein. Additionally, it should be noted that details of other processes described herein with respect to other methods and/or processes described herein (e.g., the process 1000, and the methods 1200, 1300, 1500, and 1600) are also applicable in an analogous manner to the method 1400 described above with respect to Figures 14A-14B.
- Figures 15A-15C illustrate a flowchart diagram of a method of generating a smart time-lapse video clip in accordance with some implementations.
- the method 1500 is performed by an electronic device with one or more processors, memory, and a display.
- the method 1500 is performed by client device 504 ( Figures 5 and 7) or a component thereof (e.g., the client- side module 502, Figures 5 and 7).
- the method 1500 is governed by instructions that are stored in a non-transitory computer readable storage medium (e.g., the memory 606, 706, or 806) and the instructions are executed by one or more processors of the electronic device (e.g., the CPUs 512, 702, or 802).
- Optional operations are indicated by dashed lines (e.g., boxes with dashed-line borders).
- control and access to the smart home environment are possible.
- a video server system 508 ( Figures 5-6) and a client-side module 502 ( Figures 5 and 7) (e.g., an application for monitoring and controlling the smart home environment 100) is executed on one or more client devices 504 ( Figures 5 and 7).
- the video server system 508 manages, operates, and controls access to the smart home environment 100.
- a respective client-side module 502 is associated with a user account registered with the video server system 508 that corresponds to a user of the client device 504.
- the electronic device displays (1502) a video monitoring user interface on the display including a video feed from a camera located remotely from the client device in a first region of the video monitoring user interface and an event timeline in a second region of the video monitoring user interface, where the event timeline includes a plurality of event indicators for a plurality of motion events previously detected by the camera.
- the electronic device i.e., electronic device 166, Figure 1, or client device 504, Figures 5 and 7) is a mobile phone, tablet, laptop, desktop computer, or the like, which executes a video monitoring application or program corresponding to the video monitoring user interface.
- the client device 504 or a component thereof displays the video monitoring user interface (UI) on the display.
- Figure 9C shows a video monitoring UI displayed by the client device 504 with three distinct regions: a first region 903, a second region 905, and a third region 907.
- the first region 903 of the video monitoring UI includes a video feed from a respective camera among the one or more camera 118 associated with the smart home environment 100.
- the video feed is a live feed or playback of the recorded video feed from a previously selected start point.
- the second region 905 of the video monitoring UI includes an event timeline 910 and a current video feed indicator 909 indicating the temporal position of the video feed displayed in the first region 903 (i.e., the point of playback for the video feed displayed in the first region 903).
- Figure 9C shows event indicators 922A, 922B, 922C, 922D, 922E, and 922F corresponding to detected motion events on the event timeline 910.
- the video server system 508 receives the video feed from the respective camera and detects the motion events.
- the client device 504 receives the video feed either relayed through from the video server system 508 or directly from the respective camera and detects the motion events.
- Figure 9N shows the third region 907 of the video monitoring UI with a list of categories for recognized event categories and created zones of interest.
- the list of categories in the third region 907 includes an entry 924A for a first recognized event category labeled as "event category A,” an entry 924B for a second recognized event category labeled as "Birds in Flight,” and an entry 924C for a created zone of interest labeled as "zone A.”
- the list of categories in the third region 907 also includes an entry for uncategorized motion events.
- the electronic device detects (1504) a first user input selecting a portion of the event timeline, where the selected portion of the event timeline includes a subset of the plurality of event indicators on the event timeline.
- the user of the client device selects the portion of the event timeline by inputting a start and end time or using a sliding, adjustable window overlaid on the timeline.
- the second region 905 of the video monitoring UI includes a start time entry box 956 A for entering/changing a start time of the time-lapse video clip to be generated and an end time entry box 956B for entering/changing an end time of the time-lapse video clip to be generated.
- the second region 905 of the video monitoring UI also includes a start time indicator 957 A and an end time indicator 957B on the event timeline 910, which indicates the start and end times of the time-lapse video clip to be generated.
- the locations of the start time indicator 957 A and the end time indicator 957B in Figure 90 may be moved on the event timeline 910 via pulling/dragging gestures.
- the electronic device causes (1506) generation of a time-lapse video clip of the selected portion of the event timeline.
- the client device 504 causes generation of the time-lapse video clip corresponding to the selected portion by the client device 504, the video server system 508 or a component thereof (e.g., event post-processing module 634, Figure 6), or a combination thereof.
- the motion events within the selected portion of the event timeline are played at a slower speed than the balance of the selected portion of the event timeline.
- the motion events assigned to enabled event categories and motion events that touch or overlap enabled zones are played at a slower speed than the balance of the selected portion of the event timeline including motion events assigned to disabled event categories and motion events that touch or overlap disabled zones.
- the electronic device prior to detecting the first user input selecting the portion of the event timeline, the electronic device (1508): detects a third user input selecting a time-lapse affordance within the video monitoring user interface; and, in response to detecting the third user input, displays at least one of (A) an adjustable window overlaid on the event timeline for selecting the portion of the event timeline and (B) one or more text entry boxes for entering times for a beginning and an end of the portion of the event timeline.
- the first user input corresponds to the adjustable window or the one or more text entry boxes.
- the second region 905 includes "Make Time-Lapse" affordance 915, which, when activated (e.g., via a tap gesture), enables the user of the client device 504 to select a portion of the event timeline 910 for generation of a time- lapse video clip (as shown in Figures 9N-9Q).
- Figure 9N shows the client device 504 detecting a contact 954 (e.g., a tap gesture) at a location corresponding to the "Make Time-Lapse" affordance 915 on the touch screen 906.
- the contact 954 is the third user input.
- Figure 90 shows the client device 504 displaying controls for generating a time-lapse video clip in response to detecting selection of the "Make Time- Lapse" affordance 915 in Figure 9N.
- the second region 905 of the video monitoring UI includes a start time entry box 956 A for entering/changing a start time of the time-lapse video clip to be generated and an end time entry box 956B for entering/changing an end time of the time-lapse video clip to be generated.
- the second region 905 also includes a start time indicator 957 A and an end time indicator 957B on the event timeline 910, which indicates the start and end times of an adjustable window on the event timeline 910 corresponding to the time-lapse video clip to be generated.
- the locations of the start time indicator 957A and the end time indicator 957B in Figure 90 may be moved on the event timeline 910 via dragging gestures.
- causing generation of the time-lapse video clip further comprises (1510) sending an indication of the selected portion of the event timeline to a server so as to generate the time-lapse video clip of the selected portion of the event timeline.
- the client device 504 after detecting the first user input selecting the portion of the event timeline, causes the time-lapse video clip to be generated by sending an indication of the start time (e.g., 12:20:00 pm according to the start time entry box 956A in Figure 90) and the end time (e.g., 12:42:30 pm according to the end time entry box 956B in Figure 90) of the selected portion to the video server system 508.
- the video server system 508 or a component thereof e.g., event postprocessing module 643, Figure 6) generates the time-lapse video clip according to the indication of the start time and the end time and detected motion events that fall between the start time and the end time.
- causing generation of the time-lapse video clip further comprises (1512) generating the time-lapse video clip from stored video footage based on the selected portion of the event timeline and timing of the motion events
- the client device 504 after detecting the first user input selecting the portion of the event timeline, the client device 504 generates the time-lapse video clip from stored footage according to the start time (e.g., 12:20:00 pm according to the start time entry box 956A in Figure 90) and the end time (e.g., 12:42:30 pm according to the end time entry box 956B in Figure 90) indicated by the user of the client device 504 and detected motion events that fall between the start time and the end time. In some implementations, the client device generates the time-lapse video clip by modifying the playback speed of the stored footage based on the timing of motion events instead of generating a new video clip from the stored footage.
- start time e.g., 12:20:00 pm according to the start time entry box 956A in Figure 90
- the end time e.g., 12:42:30 pm according to the end time entry box 956B in Figure 90
- the client device generates the time-lapse video clip by modifying the playback speed of the stored footage based on the
- causing generation of the time-lapse video clip further comprises (1514) detecting a third user input selecting a temporal length for the time- lapse video clip.
- the client device 504 displays a dialog box or menu pane that enables the user of the client device 504 to select a length of the time- lapse video clip (e.g., 30, 60, 90, etc. seconds). For example, the user selects a two hour portion of the event timeline for the time-lapse video clip and then selects a 60 second length for the time-lapse video clip which causes the selected 2 hour portion of the event timeline to be compressed to 60 seconds in length.
- the electronic device displays (1516) a first notification within the video monitoring user interface indicating processing of the time-lapse video clip.
- the first notification is a banner notification indicating the time left in generating/processing of the time-lapse video clip.
- Figure 9P shows client device 504 displaying a notification 961 overlaid on the first region 903 (e.g., a banner notification).
- the notification 961 indicates that the time-lapse video clip is being processed and also includes an exit affordance 962, which, when activated (e.g., with a tap gesture), causes the client device 504 the client device 504 to dismiss the notification 961.
- the electronic device displays (1518) the time-lapse video clip of the selected portion of the event timeline, where motion events corresponding to the subset of the plurality of event indicators are played at a slower speed than the remainder of the selected portion of the event timeline. For example, during playback of the time-lapse video clip, motion events are displayed at 2x or 4x speed and other portions of the video feed within the selection portion are displayed at 16x or 32x speed.
- the electronic device prior to displaying the time-lapse video clip, displays a second notification within the video monitoring user interface indicating completion of generation for the time-lapse video clip; and detects a fourth user input selecting the second notification.
- displaying the time-lapse video clip further comprises displaying the time-lapse video clip in response to detecting the fourth input.
- the second notification is a banner notification indicating that generation of the time-lapse video clip is complete.
- the notification 961 in Figure 9Q indicates that processing of the time-lapse video clip is complete and includes a "Play Time -Lapse" affordance 963, which, when activated (e.g., with a tap gesture), causes the client device 504 to play the time-lapse video clip.
- the electronic device detects (1522) selection of the time-lapse video clip from a collection of saved video clips.
- displaying the time-lapse video clip further comprises displaying the time-lapse video clip in response to detecting selection of the time- lapse video clip.
- the server video server system 508 stores a collection of saved video clips (e.g., in the video storage database 516, Figures 5-6) including time-lapse video clips and non-time-lapse videos clips.
- the user of the client device 504 is able to access and view the saved clips at any time.
- the electronic device detects (1524) one or more second user inputs selecting one or more categories associated with the plurality of motion events.
- causing generation of the time-lapse video clip further comprises causing generation of the time-lapse video clip of the selected portion of the event timeline based on the one or more selected categories, and displaying the time-lapse video clip further comprises displaying the time-lapse video clip of the selected portion of the event timeline, where motion events corresponding to the subset of the plurality of event indicators assigned to the one or more selected categories are played at a slower speed than the remainder of the selected portion of the event timeline.
- the one or more selected categories include (1526) at least one of a recognized event category or a previously created zone of interest.
- the user of the client device 504 is able to enable/disable zones and/or event categories prior to generating the time-lapse video clip. For example, the motion events assigned to enabled event categories and motion events that touch or overlap enabled zones are played at a slower speed during the time-lapse than the balance of the selected portion of the event timeline including motion events assigned to disabled event categories and motion events that touch or overlap disabled zones.
- the list of categories in the third region 907 of the video monitoring UI includes entries for three categories: a first entry 924 A corresponding to event category A; a second entry 924B corresponding to the "Birds in Flight" event category; and a third entry 924C corresponding to zone A (e.g., created in Figures 9L-9M).
- Each of the entries 924 includes an indicator filter 926 for enabling/disabling motion events assigned to the corresponding category.
- indicator filter 924A in the entry 924A corresponding to event category A is disabled, indicator filter 924B in the entry 924B corresponding to the "Birds in Flight" event category is enabled, and indicator filter 924C in the entry 924C corresponding to zone A is enabled.
- the client device 504 after detecting a contact 955 at a location corresponding to the "Create Time-Lapse" affordance 958 on the touch screen 906 in Figure 90, the client device 504 causes generation of a time-lapse video clip according to the selected portion of the event timeline 910 (i.e., the portion
- motion events assigned to the "Birds in Flight" event category and motion events overlapping or touching zone A will be played at 2x or 4x speed and the balance of the selected portion (including motion events assigned to event category A) will be displayed at 16x or 32x speed during playback of the time-lapse video clip.
- Figures 15A-15C have been described is merely an example and is not intended to indicate that the described order is the only order in which the operations could be performed.
- One of ordinary skill in the art would recognize various ways to reorder the operations described herein. Additionally, it should be noted that details of other processes described herein with respect to other methods and/or processes described herein (e.g., the process 1000, and the methods 1200, 1300, 1400, and 1600) are also applicable in an analogous manner to the method 1500 described above with respect to Figures 15A-15C.
- Figures 16A-16B illustrate a flowchart diagram of a method of performing client- side zooming of a remote video feed in accordance with some implementations.
- the method 1600 is performed by an electronic device with one or more processors, memory, and a display.
- the method 1600 is performed by client device 504 ( Figures 5 and 7) or a component thereof (e.g., the client-side module 502, Figures 5 and 7).
- the method 1600 is governed by instructions that are stored in a non-transitory computer readable storage medium (e.g., the memory 606, 706, or 806) and the instructions are executed by one or more processors of the electronic device (e.g., the CPUs 512, 702, or 802).
- Optional operations are indicated by dashed lines (e.g., boxes with dashed-line borders).
- control and access to the smart home environment are possible.
- a video server system 508 ( Figures 5-6) and a client-side module 502 ( Figures 5 and 7) (e.g., an application for monitoring and controlling the smart home environment 100) is executed on one or more client devices 504 ( Figures 5 and 7).
- the video server system 508 manages, operates, and controls access to the smart home environment 100.
- a respective client-side module 502 is associated with a user account registered with the video server system 508 that corresponds to a user of the client device 504.
- the electronic device receives (1602) a first video feed from a camera located remotely from the client device with a first field of view.
- the electronic device i.e., electronic device 166, Figure 1, or client device 504, Figures 5 and 7) is a mobile phone, tablet, laptop, desktop computer, or the like, which executes a video monitoring application or program corresponding to the video monitoring user interface.
- the video feed from the respective camera is relayed to the client device 504 by the video server system 508.
- the client device 504 directly receives the video feed from the respective camera.
- the electronic device displays (1604), on the display, the first video feed in a video monitoring user interface.
- the client device 504 or a component thereof e.g., event review interface module 734, Figure 7) displays the video monitoring user interface (UI) on the display.
- Figure 9C shows a video monitoring UI displayed by the client device 504 with three distinct regions: a first region 903, a second region 905, and a third region 907.
- the first region 903 of the video monitoring UI includes a video feed from a respective camera among the one or more camera 118 associated with the smart home environment 100.
- the video feed is a live feed or playback of the recorded video feed from a previously selected start point.
- an indicator 912 indicates that the video feed being displayed in the first region 903 is a live video feed.
- the electronic device detects (1606) a first user input to zoom in on a respective portion of the first video feed.
- the first user input is a mouse scroll wheel, keyboard shortcuts, or selection of a zoom-in affordance (e.g., elevator bar or other widget) in a web browser accompanied by a dragging gesture to pane the zoomed region.
- a zoom-in affordance e.g., elevator bar or other widget
- the user of the client device 504 is able to drag the handle 919 of the elevator bar in Figure 9B to zoom-in on the video feed.
- the user of the client device 504 may perform a dragging gesture inside of the first region 903 to pane up, down, left, right, or a combination thereof.
- the display is (1608) a touch-screen display, and where the first user input is a pinch-in gesture performed on the first video feed within the video monitoring user interface.
- the first user input is a pinch-in gesture on a touch screen of the electronic device.
- Figure 9R shows the client device 504 detecting a pinch-in gesture with contacts 965A and 965B relative to a respective portion of the video feed in the first region 903 on the touch screen 906.
- the first user input is the pinch-in gesture with contacts 965A and 965B.
- the electronic device In response to detecting the first user input, performs (1610) a software zoom function on the respective portion of the first video feed to display the respective portion of the first video feed in a first resolution.
- the first user input determines a zoom magnification for the software zoom function.
- the width between contacts of a pinch gesture determines the zoom magnification.
- the length of a dragging gesture on an elevator bar associated with zooming determines the zoom magnification.
- Figure 9S shows the client device 504 displaying a zoomed-in portion of the video feed in response to detecting the pinch-in gesture on the touch screen 906 in Figure 9R.
- the zoomed-in portion of the video feed corresponds to a software-based zoom performed locally by the client device 504 on the respective portion of the video feed corresponding to the pinch-in gesture in Figure 9R.
- the electronic device in response to detecting the first user input, displays (1612) a perspective window within the video monitoring user interface indicating a location of the respective portion relative to the first video feed.
- a perspective window is displayed in the video monitoring UI which shows the zoomed region's location relative to the first video feed (e.g., picture-in-picture window).
- Figure 9S shows the client device 504 displaying a perspective box 969 in the first region 903, which indicates the zoomed-in portion 970 relative to the full field of view of the respective camera.
- the electronic device prior to the determining and the sending, detects (1614) a second user input within the video monitoring user interface selecting a video enhancement affordance. In some implementations, the
- the video controls in the first region 903 of the video monitoring UI further includes an enhancement affordance 968 in response to detecting the pinch-in gesture in Figure 9R.
- the enhancement affordance 968 When activated (e.g., with a tap gesture), the enhancement affordance 968 causes the client device 504 to send a zoom command to the respective camera.
- the enhancement affordance is only displayed to users with administrative privileges because it changes the field of view of the respective camera and consequently the recorded video footage.
- Figure 9S shows the client device 504 detecting a contact 967 at a location corresponding to the enhancement affordance 968 on the touch screen 906.
- the electronic device in response to detecting the second user input and prior to performing the sending operation 1620, displays (1616) a warning message indicating that saved video footage will be limited to the respective portion.
- the video server system 508 Prior to selecting the enhancement affordance, the video server system 508 saved the entire field of view of the respective camera shown in the first video feed, not the software zoomed version.
- Figure 9T shows the client device 504 displaying a dialog box 971 in response to detecting selection of the enhancement affordance 968 in Figure 9S.
- the dialog box 971 warns the user of the client device 504 that enhancement of the video feed will cause changes to the recorded video footage and also any created zones of interest.
- the dialog box 971 includes: a cancel affordance 972, which, when activated (e.g., with a tap gesture) causes the client device 504 to cancel of the enhancement operation and consequently cancel sending of the zoom command; and an enhance affordance 973, when activated (e.g., with a tap gesture) causes the client device 504 to send the zoom command to the respective camera.
- the electronic device determines (1618) a current zoom magnification of the software zoom function and coordinates of the respective portion of the first video feed.
- the client device 504 or a component thereof determines the current zoom magnification of the software zoom function and coordinates of the respective portion of the first video feed.
- the coordinates are an offset from the center of the original video feed to the center of the respective portion.
- the electronic device sends (1620) a command to the camera to perform a hardware zoom function on the respective portion according to the current zoom
- the client device 504 or a component thereof causes the command to be sent to the respective camera, where the command includes the current zoom magnification of the software zoom function and coordinates of the respective portion of the first video feed.
- the command is typically relayed through the video server system 508 to the respective camera.
- the client device 504 sends the command directly to the respective camera.
- the command also changes the exposure of the respective camera and the focus point of directional microphones of the respective camera.
- the video server system 508 stores video settings for the respective camera (e.g., tilt, pan, and zoom settings) and the coordinates of the respective portion (i.e., the cropped region).
- the electronic device receives (1622) a second video feed from the camera with a second field of view different from the first field of view, where the second field of view corresponds to the respective portion.
- the second video feed is a cropped version of the first video feed that only includes the respective portion in its field-of-view, but with higher resolution than the local software zoomed version of the respective portion.
- the electronic device displays (1624), on the display, the second video feed in the video monitoring user interface, where the second video feed is displayed in a second resolution that is higher than the first resolution.
- Figure 9U shows the client device 504 displaying the zoomed-in portion of the video feed at a higher resolution as compared to Figure 9S in response to detecting selection of the enhance affordance 973 in Figure 9T.
- a scene change detector associated with the application resets the local, software zoom when the total pixel color difference between a frame from the second video feed and a previous frame from the first video feed exceeds a predefined threshold.
- the user may perform a second software zoom and enhancement zoom operation.
- the video monitoring user interface indicates the current zoom magnification of the software and/or hardware zoom.
- the video monitoring UI in Figure 9S further indicates the current zoom magnification in text (e.g., overlaid on the first region 903).
- the total combined zoom magnification may be limited to a predetermined zoom magnification (e.g., 8x).
- the user may zoom & enhance multiple different regions of the first video feed for concurrent display in the video monitoring interface. For example, each of the regions is displayed in its own sub-region in the first region 903 of the video monitoring interface while the live video feed from the respective camera is displayed in the first region 903.
- the video monitoring user interface includes (1626) an affordance for resetting the camera to display the first video feed after displaying the second video feed.
- the user of the client device 504 is able to reset the zoom configuration to the original video feed.
- the video controls in the first region 903 of the video monitoring UI further include a zoom reset affordance 975, which, when activated (e.g., with a tap gesture) causes the client device 504 reset the zoom magnification of the video feed to its original setting (e.g., as in Figure 9R prior to the pinch-in gesture).
- Figures 16A-16B have been described is merely an example and is not intended to indicate that the described order is the only order in which the operations could be performed.
- One of ordinary skill in the art would recognize various ways to reorder the operations described herein. Additionally, it should be noted that details of other processes described herein with respect to other methods and/or processes described herein (e.g., the process 1000, and the methods 1200, 1300, and 1500) are also applicable in an analogous manner to the method 1600 described above with respect to Figures 16A-16B.
- Figures 17A-17D illustrate a flowchart diagram of a method 1700 of processing data for video monitoring on a computing system (e.g., the camera 118, Figures 5 and 8; a controller device; the video server system 508, Figures 5-6; or a combination thereof) in accordance with some implementations.
- Figures 17A-17D correspond to instructions stored in a computer memory or computer readable storage medium (e.g., the memory 606, 706, or 806).
- the start of a motion event candidate is detected in a live video stream, which then triggers the subsequent processing (e.g., motion track and motion vector generation) and categorization of the motion event candidate.
- a simple spatial motion vector such as a linear motion vector is optionally used to represent the motion event candidate in the event categorization process to improve processing efficiency (e.g., speed and data compactness).
- the method is performed at a computing system having one or more processors and memory.
- the computing system may be the camera 118, the controller device, the combination of the camera 118 and the controller device, the combination of video source 522 ( Figure 5) and the event preparer of the video server system 508, or the combination of the video source 522 and the video server system 508.
- the implementation optionally varies depending on the capabilities of the various sub-systems involved in the data processing pipeline as shown in Figure 11 A.
- the computing system processes (1702) the video stream to detect a start of a first motion event candidate in the video stream.
- the computing system initiates (1704) event recognition processing on a first video segment associated with the start of the first motion event candidate, where initiating the event recognition processing further includes the following operations: determining a motion track of a first object identified in the first video segment; generating a representative motion vector for the first motion event candidate based on the respective motion track of the first object; and sending the representative motion vector for the first motion event candidate to an event categorizer, where the event categorizer assigns a respective motion event category to the first motion event candidate based on the representative motion vector of the first motion event candidate.
- At least one of processing the video stream, determining the motion track, generating the representative motion vector, and sending the representative motion vector to the event categorizer is (1706) performed locally at the source of the video stream.
- the camera 118 may perform one or more of the initial tasks locally before sending the rest of the tasks to the cloud for the server to complete.
- all of the above tasks are performed locally at the camera 118 or the video source 522 comprising the camera 118 and a controller device.
- At least one of processing the video stream, determining the motion track, generating the representative motion vector, and sending the representative motion vector to the categorization server is (1708) performed at a server (e.g., the video server system 508) remote from the source of the video stream (e.g., video source 522).
- a server e.g., the video server system 508 remote from the source of the video stream (e.g., video source 522).
- all of the above tasks are performed at the server, and the video source is only responsible for streaming the video to the server over the one or more networks 162 (e.g., the Internet).
- the computing system includes (1710) at least the source of the video stream (e.g., the video source 522) and a remote server (e.g., the video server system 508), and the source of the video stream dynamically determines whether to locally perform the processing of the video stream, the determining of the motion track, and the generating of the representative motion vector, based on one or more predetermined distributed processing criteria.
- the source of the video stream e.g., the video source 522
- a remote server e.g., the video server system 508
- the source of the video stream dynamically determines whether to locally perform the processing of the video stream, the determining of the motion track, and the generating of the representative motion vector, based on one or more predetermined distributed processing criteria.
- the camera e.g., the camera
- the computing system in response to detecting the start of the first motion event candidate, the computing system (e.g., the video source 522) uploads (1712) the first video segment from the source of the video stream to a remote server (e.g., the video server system 508), where the first video segment begins at a predetermined lead time (e.g., 5 seconds) before the start of the first motion event candidate and lasts a predetermined duration (e.g., 30 seconds).
- the uploading of the first video segment is in addition to the regular video stream uploaded to the video server system 508.
- the computing system when uploading the first video segment from the source of the video stream to the remote server: the computing system (e.g., the video source 522), in response to detecting the start of the first motion event candidate, uploads (1714) the first video segment at a higher quality level as compared to a normal quality level at which video data is uploaded for cloud storage.
- a high resolution video segment is uploaded for motion event candidates detected in the video stream, so that the video segment can be processed in various ways (e.g., zoomed, analyzed, filtered by zones, filtered by object types, etc.) in the future.
- the frame rate of the video segment for detected event candidate is higher that the video data uploaded for cloud storage.
- the computing system in response to detecting the start of the first motion event candidate, extracts (1716) the first video segment from cloud storage (e.g., video data database 1106, Figure 11A) for the video stream, where the first video segment begins at a
- cloud storage e.g., video data database 1106, Figure 11A
- predetermined lead time e.g., 5 seconds
- a predetermined duration e.g., 30 seconds
- the computing system performs (1718) the following operations: obtaining a profile of motion pixel counts for a current frame sequence in the video stream; in response to determining that the obtained profile of motion pixel counts meet a predetermined trigger criterion (e.g., total motion pixel count exceeds a predetermined threshold), determining that the current frame sequence includes a motion event candidate; identifying a beginning time for a portion of the profile meeting the predetermined trigger criterion; and designating the identified beginning time to be the start of the first motion event candidate.
- a predetermined trigger criterion e.g., total motion pixel count exceeds a predetermined threshold
- the profile is a histogram of motion pixel count at each pixel location in the scene depicted in the video stream. More details of cue point detection are provided earlier in Figure 11 A and accompanying descriptions.
- the computing system receives (1720) a respective motion pixel count for each frame of the video stream from a source of the video stream.
- the respective motion pixel count is adjusted (1722) for one or more of changes of camera states during generation of the video stream.
- the adjustment based on camera change e.g., suppressing the motion event candidate altogether if the cue point overlaps with a camera state change
- the changes in camera states include camera events such as IR mode change or AE change, and/or camera system reset.
- the computing system performs (1724) the following operations: generating a raw profile based on the respective motion pixel count for each frame in the current frame sequence; and generating the profile of motion pixel counts by smoothing the raw profile to remove one or more temporary dips in pixel counts in the raw profile. This is illustrated in Figure 1 lB-(b) and accompanying descriptions.
- the computing system determines (1726) the following operations: based on a frame sequence of the first video segment: (1) performing background estimation to obtain a background for the first video segment; (2) performing object segmentation to identify one or more foreground objects in the first video segment by subtracting the obtained background from the frame sequence, the one or more foreground object including the object; and (3) establishing a respective motion track for each of the one or more foreground objects by associating respective motion masks of the foreground object across multiple frames of the frame sequence.
- the motion track generation is described in more detail in Figure 11 A and accompanying descriptions.
- the computing system determines (1728) a duration of the respective motion track for each of the one or more foreground objects, discards (1730) zero or more respective motion tracks and corresponding foreground objects if the durations of the respective zero or more motion tracks are shorter than a predetermined duration (e.g., 8 frames). This is optionally included as part of the false positive suppression process.
- a predetermined duration e.g. 8 frames
- Suppression of super short tracks helps to prune off movements such as leaves in a tree, etc.
- the computing system performs (1732) the following operations: building a histogram of foreground pixels identified in the frame sequence of the first video segment, where the histogram specifies a frame count for each pixel location in a scene of the first video segment; filtering the histogram to remove regions below a predetermined frame count; segmenting the filtered histogram into the one or more motion regions; and selecting one or more dominant motion regions from the one or more motion regions based on a predetermined dominance criterion (e.g., regions containing at least a threshold of frame count/total motion pixel count), where each dominant motion region corresponds to the respective motion track of a corresponding one of the one or more foreground objects.
- a predetermined dominance criterion e.g., regions containing at least a threshold of frame count/total motion pixel count
- the computing system generates a respective event mask for the foreground object corresponding to a first dominant motion region of the one or more dominant regions based on the first dominant motion region.
- the event mask for each object in motion is stored and optionally used to filter the motion event including the object in motion at a later time.
- Figures 17A-17D have been described is merely an example and is not intended to indicate that the described order is the only order in which the operations could be performed.
- One of ordinary skill in the art would recognize various ways to reorder the operations described herein. Additionally, it should be noted that details of other processes described herein with respect to other methods and/or processes described herein are also applicable in an analogous manner to the method 1700 described above with respect to Figures 17A-17D.
- Figures 18A-18D illustrate a flowchart diagram of a method 1800 of performing activity recognition for video monitoring on a video server system (e.g., the video server system 508, Figure 5-6) in accordance with some implementations.
- Figures 18A-18D correspond to instructions stored in a computer memory or computer readable storage medium (e.g., the memory 606).
- this method 1800 mathematical processing of motion vectors (e.g., linear motion vectors) is performed, including clustering and rejection of false positives.
- the method 1800 occurs on the server, the generation of the motion vector may occur locally at the camera or at the server.
- the motion vectors are generated in real-time based on live motion events detected in a live video stream captured by a camera.
- a clustering algorithm (e.g., DBscan) is used in the process.
- This clustering algorithm allows the growth of clusters into any shapes.
- a cluster is promoted as a dense cluster based on its cluster weight, which is in turn based at least partially on the number of motion vectors contained in it. Only dense clusters are recognized as categories of recognized events.
- a user or the server can give a category name to each category of recognized events.
- a cluster is updated when a new vector falls within the range of the cluster. If a cluster has not been updated for a long time, the cluster and its associated event category is optionally deleted (e.g., via a decay factor applied to the cluster weight). In some implementations, if a cluster remains sparse for a long time, the cluster is optionally deleted as noise.
- the server obtains (1802) a respective motion vector for each of a series of motion event candidates in real-time as said each motion event candidate is detected in a live video stream.
- the motion vector may be received from the camera directly, or from an event preparer module of the server.
- the server processes a video segment associated with a detected motion event candidate and generates the motion vector.
- the server determines (1804) a spatial relationship between the respective motion vector of said each motion event candidate to one or more existing clusters established based on a plurality of previously processed motion vectors. This is illustrated in Figures 1 lD-(a)-l lD-(e).
- the existing cluster(s) do not need to be a dense cluster or have corresponding recognized event category associated with it at this point.
- the motion event candidate is associated with a category of unrecognized events.
- the server assigns (1806) the first motion event candidate to at least a first event category associated with the first existing cluster.
- the first event category is (1808) a category for unrecognized events. This occurs when the first event category has not yet been promoted as a dense cluster and given its own category.
- the first event category is (1810) a category for recognized events. This occurs when the first event category has already been promoted as a dense cluster and given its own category.
- the server performs (1812) the following operations: assigning the second motion event candidate to a category for unrecognized events; establishing a new cluster for the second motion event candidate; and associating the new cluster with the category for unrecognized events.
- assigning the second motion event candidate to a category for unrecognized events assigning the second motion event candidate to a category for unrecognized events; establishing a new cluster for the second motion event candidate; and associating the new cluster with the category for unrecognized events.
- the server stores (1814) a respective cluster creation time, a respective current cluster weight, a respective current cluster center, and a respective current cluster radius for each of the one or more existing clusters.
- the server updates (1816) the respective current cluster weight, the respective current cluster center, and the respective current cluster radius for the first existing cluster based on a spatial location of the respective motion vector of the first motion event candidate.
- the server determines (1818) a respective current cluster density for the first existing cluster based on the respective current cluster weight and the respective current cluster radius of the first existing cluster. In accordance with a determination that the respective current cluster density of the first existing cluster meets a predetermined cluster promotion density threshold, the server promotes (1820) the first existing cluster as a dense cluster. In some implementations, promoting the first existing cluster further includes (1822) the following operations: creating a new event category for the first existing cluster; and disassociating the first existing cluster from the category of unrecognized events.
- the server reassigns (1824) all motion vectors in the first existing cluster into the new event category created for the first existing cluster. This describes the retroactive updating of event categories for past motion events, when new categories are created.
- the first existing cluster is
- the server performs (1828) the following operations: deleting the first existing cluster including all motion vectors currently in the first existing cluster; and removing the motion event candidates corresponding to the deleted motion vectors from the category of unrecognized events.
- This describes the pruning of sparse clusters, and motion event candidates in the sparse clusters, for example, as shown in Figure 1 lD-(f).
- the motion events are not deleted from the timeline, and are assigned to a category of rare events.
- the first existing cluster is (1830) associated with a category of recognized events, and in accordance with a determination that the first existing cluster has not been updated for at least a threshold amount of time, the server deletes (1832) the first existing cluster including all motion vectors currently in the first existing cluster. In some implementations, the server further removes (1834) the motion event candidates corresponding to the deleted motion vectors from the category of recognized events, and deletes (1836) the category of recognized events. This describes the retiring of old inactive clusters. For example, if the camera has been moved to a new location, over time, old event categories associated with the previous location are automatically eliminated without manual intervention.
- the respective motion vector for each of the series of motion event candidates includes (1838) a start location and an end location of a respective object in motion detected a respective video segment associated with the motion event candidate.
- the motion vector of this form is extremely compact, reducing processing and transmission overhead.
- the server receives (1840) the respective motion vector for each of the series of motion event candidates in real-time from a camera capturing the live video stream as said each motion event candidate is detected in the live video stream by the camera.
- the representative motion vector is a small piece of data received from the camera, where the camera has processed the captured video data in realtime and identified motion event candidate. The camera sends the motion vector and the corresponding video segment to the server for more sophisticated processing, e.g., event categorization, creating the event mask, etc.
- the server performs (1842) the following operations:
- identifying at least one object in motion in a respective video segment associated with the motion event candidate determining a respective motion track of the at least one object in motion within a predetermined duration; and generating the respective motion vector for the motion event candidate based on the determined respective motion track of the at least one object in motion.
- Figures 18A-18D have been described is merely an example and is not intended to indicate that the described order is the only order in which the operations could be performed.
- One of ordinary skill in the art would recognize various ways to reorder the operations described herein. Additionally, it should be noted that details of other processes described herein with respect to other methods and/or processes described herein are also applicable in an analogous manner to the method 1800 described above with respect to Figures 18A-18D.
- Figures 19A-19C illustrate a flowchart diagram of a method 1900 of facilitating review of a video recording (e.g., performing a retrospective event search based on a newly created zone of interest) on a video server system (e.g., video server system 508, Figures 5-6) in accordance with some implementations.
- Figures 19A-19C correspond to instructions stored in a computer memory or computer readable storage medium (e.g., the memory 606).
- the non-causal (or retrospective) zone search based on newly created zones of interest is based on event masks of the past motion events that have been stored at the server.
- the event filtering based on selected zones of interest can be applied to past motion events, and to motion events that are currently being detected in the live video stream.
- the method of facilitating review of a video recording is performed by a server (e.g., the video server system 508).
- the server identifies (1902) a plurality of motion events from a video recording, wherein each of the motion events corresponds to a respective video segment along a timeline of the video recording and identifies at least one object in motion within a scene depicted in the video recording.
- the server stores (1904) a respective event mask for each of the plurality of motion events identified in the video recording, the respective event mask including an aggregate of motion pixels associated with the at least one object in motion over multiple frames of the motion event.
- each event includes one object in motion, and corresponds to one event mask.
- Each scene may have multiple motion events occurring at the same time, and have multiple objects in motion in it.
- the server receives (1906) a definition of a zone of interest within the scene depicted in the video recording.
- the definition of the zone of interest is provided by a user or is a default zone defined by the server. Receiving the definition of the zone can also happen when a reviewer is reviewing past events, and has selected a particular zone that is already defined as an event filter.
- the server performs (1908) the following operations: determining, for each of the plurality of motion events, whether the respective event mask of the motion event overlaps with the zone of interest by at least a predetermined overlap factor (e.g., a threshold number of overlapping pixels between the respective event mask and the zone of interest); and identifying one or more events of interest from the plurality of motion events, where the respective event mask of each of the identified events of interest is determined to overlap with the zone of interest by at least the predetermined overlap factor.
- a predetermined overlap factor e.g., a threshold number of overlapping pixels between the respective event mask and the zone of interest
- motion events that touched or entered the zone of interest are identified as events of interest.
- the events of interest may be given a colored label or other visual characteristics associated with the zone of interest, and presented to the reviewer as a group. It is worth noting that the zone of interest is created after the events have already occurred and been identified. The fact that the event masks are stored at the time that the motion events were detected and categorized provides an easy way to go back in time and identify motion events that intersect with the newly created zone of interest.
- the server generates (1910) the respective event mask for each of the plurality of motion events, where the generating includes: creating a respective binary motion pixel map for each frame of the respective video segment associated with the motion event; and combining the respective binary motion pixel maps of all frames of the respective video segment to generate the respective event mask for the motion event.
- the event mask is a binary map that is active (e.g., 1) at all pixel locations where the object in motion has reached in at least one frame of the video segment.
- the server receives (1912) a first selection input from the user to select the zone of interest as a first event filter, and visually labels (1914) the identified events of interest with a respective indicator associated with the zone of interest in an event review interface.
- Zone A 924C is selected by the user, and a past event 922V is identified as an event of interest for Zone A, and the event indicator of the past event 922V is visually labeled by an indicator (e.g., a cross mark) associated with Zone A.
- an indicator e.g., a cross mark
- the server receives (1916) a second selection input selecting one or more object features as a second event filter to be combined with the first event filter.
- the server identifies (1918) at least one motion event from the one or more identified events of interest, where the identified at least one motion event includes at least one object in motion satisfying the one or more object features.
- the server visually labels (1920) the identified at least one motion event with a respective indicator associated with both the zone of interest and the one or more object features in the event review interface.
- the one or more object features include features representing a human being, for example, aspect ratio of the object in motion, movement speed of the object in motion, size of the object in motion, shape of the object in motion, etc.
- the user may select to see all events in which a human being entered a particular zone by selecting the zone and the features associated with a human being in an event reviewing interface.
- the user may also create combinations of different filters (e.g., zones and/or object features) to create new event filter types.
- the definition of the zone of interest includes (1922) a plurality of vertices specified in the scene of the video recording.
- the user is allowed to create zones of any shapes and sizes by dragging the vertices (e.g., with the dragging gesture in Figures 9L-9M). The user may also add or delete one or more vertices from the set of vertices currently shown in the zone definition interface.
- the server processes (1924) a live video stream depicting the scene of the video recording to detect a start of a live motion event, generates (1926) a live event mask based on respective motion pixels associated with a respective object in motion identified in the live motion event; and determines (1928), in real-time, whether the live event mask overlaps with the zone of interest by at least the predetermined overlap factor. In accordance with a determination that the live event mask overlaps with the zone of interest by at least the predetermined overlap factor, the server generates (1930) a real-time event alert for the zone of interest.
- the live event mask is generated based on all past frames in the live motion event that has just been detected.
- the live event mask is updated as each new frame is received.
- a real-time alert for the event of interest can be generated and sent to the user.
- the visual indicator for example, a color, associated with the zone of interest can be applied to the event indicator for the live motion event.
- a colored boarder may be applied to the event indicator on the timeline, and/or the pop-up notification containing a sprite of the motion event.
- the server visually labels (1932) the live motion event with a respective indicator associated with the zone of interest in an event review interface.
- Figures 19A-19C have been described is merely an example and is not intended to indicate that the described order is the only order in which the operations could be performed.
- One of ordinary skill in the art would recognize various ways to reorder the operations described herein. Additionally, it should be noted that details of other processes described herein with respect to other methods and/or processes described herein are also applicable in an analogous manner to the method 1900 described above with respect to Figures 19A-19C.
- Figures 20A-20B illustrate a flowchart diagram of a method 2000 of providing context-aware zone monitoring on a video server system (e.g., video server system 508, Figures 5-6) in accordance with some implementations.
- Figures 20A-20B correspond to instructions stored in a computer memory or computer readable storage medium (e.g., the memory 606).
- the system determines whether an object has entered the zone of interest based on the image information within the zone of interest. This is ineffective sometimes when the entire zone of interest is obscured by a moving object, and the details of the motion (e.g., the trajectory and speed of a moving object) are not apparent from merely the image within the zone of interest. For example, such prior art systems are not be able to distinguish a global lighting change from a object moving in front of the camera and consequently obscuring the entire view field of the camera.
- the technique described herein detects motion events without being constrained by the zones (i.e., boundaries) that have been defined, and then determines if a detected event is of interest based on an overlap factor between the zones and the detected motion events. This allows for more meaningful zone monitoring with context information collected outside of the zones of interest.
- the method 2000 of monitoring selected zones in a scene depicted in a video stream is performed by a server (e.g., the video server system 508).
- the server receives (2002) a definition of a zone of interest within the scene depicted in the video steam.
- the server determines (2004), for each motion event detected in the video stream, whether a respective event mask of the motion event overlaps with the zone of interest by at least a predetermined overlap factor (e.g., a threshold number of pixels), and identifies (2006) the motion event as an event of interest associated with the zone of interest in accordance with a determination that the respective event mask of the motion event overlaps with the zone of interest by at least the predetermined overlap factor.
- a predetermined overlap factor e.g., a threshold number of pixels
- the server generates (2008) the respective event mask for the motion event, where the generating includes: creating a respective binary motion pixel map for each frame of a respective video segment associated with the motion event; and combining the respective binary motion pixel maps of all frames of the respective video segment to generate the respective event mask for the motion event.
- the generating includes: creating a respective binary motion pixel map for each frame of a respective video segment associated with the motion event; and combining the respective binary motion pixel maps of all frames of the respective video segment to generate the respective event mask for the motion event.
- the server receives (2010) a first selection input from a user to select the zone of interest as a first event filter.
- the server receives (2012) a second selection input from the user to select one or more object features as a second event filter to be combined with the first event filter.
- the server determines (2014) whether the identified event of interest includes at least one object in motion satisfying the one or more object features.
- the server or a component thereof e.g., the real-time motion event presentation module 632, Figure 6) generates (2016) a real-time alert for the user in accordance with a determination that the identified event of interest includes at least one object in motion satisfying the one or more object features.
- a real-time alert can be generated when an object of interest enters the zone of interest, where the object of interest can be a person matching the specified object features associated with a human being.
- a sub-module e.g., the person identification module 626 of the server provides the object features associated with a human being and determines whether the object that entered the zone of interest is a human being.
- the server visually labels (2016) the identified event of interest with an indicator associated with both the zone of interest and the one or more object features in an event review interface.
- the one or more object features are (2020) features representing a human.
- the definition of the zone of interest includes (2022) a plurality of vertices specified in the scene of the video recording.
- the video stream is (2024) a live video stream
- determining whether the respective event mask of the motion event overlaps with the zone of interest by at least a predetermined overlap factor further includes: processing the live video stream in real-time to detect a start of a live motion event; generating a live event mask based on respective motion pixels associated with a respective object in motion identified in the live motion event; and determining, in real-time, whether the live event mask overlaps with the zone of interest by at least the predetermined overlap factor.
- the server provides (2026) a composite video segment corresponding to the identified event of interest, the composite video segment including a plurality of composite frames each including a high-resolution portion covering the zone of interest, and a low-resolution portion covering regions outside of the zone of interest.
- the high resolution portion can be cropped from the original video stored in the cloud
- the low resolution region can be a stylized abstraction or down-sampled from the original video.
- Figures 20A-20B have been described is merely an example and is not intended to indicate that the described order is the only order in which the operations could be performed.
- One of ordinary skill in the art would recognize various ways to reorder the operations described herein. Additionally, it should be noted that details of other processes described herein with respect to other methods and/or processes described herein are also applicable in an analogous manner to the method 2000 described above with respect to Figures 20A-20B.
- personal information e.g., information about a user's preferences or usage of a smart device.
- certain data may be anonymized in one or more ways before it is stored or used, so that personally identifiable information is removed. For example, a user's identity may be anonymized so that the personally
- user preferences or user interactions are generalized (for example, generalized based on user demographics) rather than associated with a particular user.
- stages that are not order dependent may be reordered and other stages may be combined or broken out. While some reordering or other groupings are specifically mentioned, others will be obvious to those of ordinary skill in the art, so the ordering and groupings presented herein are not an exhaustive list of alternatives. Moreover, it should be recognized that the stages could be implemented in hardware, firmware, software or any combination thereof.
Abstract
Description
Claims
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
EP18153305.0A EP3343525A1 (en) | 2014-07-07 | 2015-07-07 | Method and device for processing motion events |
Applications Claiming Priority (7)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US201462021620P | 2014-07-07 | 2014-07-07 | |
US201462057991P | 2014-09-30 | 2014-09-30 | |
US14/510,030 US9082018B1 (en) | 2014-09-30 | 2014-10-08 | Method and system for retroactively changing a display characteristic of event indicators on an event timeline |
US14/510,040 US9224044B1 (en) | 2014-07-07 | 2014-10-08 | Method and system for video zone monitoring |
US14/724,637 US20160092737A1 (en) | 2014-09-30 | 2015-05-28 | Method and System for Adding Event Indicators to an Event Timeline |
US14/736,162 US10127783B2 (en) | 2014-07-07 | 2015-06-10 | Method and device for processing motion events |
PCT/US2015/039425 WO2016007541A1 (en) | 2014-07-07 | 2015-07-07 | Method and device for processing motion events |
Related Child Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
EP18153305.0A Division EP3343525A1 (en) | 2014-07-07 | 2015-07-07 | Method and device for processing motion events |
Publications (2)
Publication Number | Publication Date |
---|---|
EP3022720A1 true EP3022720A1 (en) | 2016-05-25 |
EP3022720B1 EP3022720B1 (en) | 2018-01-31 |
Family
ID=55017381
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
EP18153305.0A Pending EP3343525A1 (en) | 2014-07-07 | 2015-07-07 | Method and device for processing motion events |
EP15745024.8A Active EP3022720B1 (en) | 2014-07-07 | 2015-07-07 | Method and device for processing motion events |
Family Applications Before (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
EP18153305.0A Pending EP3343525A1 (en) | 2014-07-07 | 2015-07-07 | Method and device for processing motion events |
Country Status (5)
Country | Link |
---|---|
US (3) | US10127783B2 (en) |
EP (2) | EP3343525A1 (en) |
AU (3) | AU2015287997B2 (en) |
CA (1) | CA2954630C (en) |
WO (1) | WO2016007541A1 (en) |
Cited By (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US11550702B1 (en) | 2021-11-04 | 2023-01-10 | T-Mobile Usa, Inc. | Ensuring that computer programs are accessible to users with disabilities, such as for use with mobile phones |
Families Citing this family (41)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10140828B2 (en) * | 2015-06-04 | 2018-11-27 | August Home, Inc. | Intelligent door lock system with camera and motion detector |
US10127783B2 (en) * | 2014-07-07 | 2018-11-13 | Google Llc | Method and device for processing motion events |
US10140827B2 (en) | 2014-07-07 | 2018-11-27 | Google Llc | Method and system for processing motion event notifications |
US9420331B2 (en) | 2014-07-07 | 2016-08-16 | Google Inc. | Method and system for categorizing detected motion events |
US10139897B2 (en) | 2014-11-10 | 2018-11-27 | Novi Security, Inc. | Power-optimized image capture and push |
US10521815B1 (en) | 2015-06-05 | 2019-12-31 | Groupon, Inc. | Apparatus and method for utilizing immediate gratification promotions |
US10929867B1 (en) | 2015-06-05 | 2021-02-23 | Groupon, Inc. | Apparatus and method for utilizing immediate gratification promotions |
US10977678B1 (en) * | 2015-06-05 | 2021-04-13 | Groupon, Inc. | Apparatus and method for utilizing proximity density mapping to assist relevance determinations |
USD773330S1 (en) | 2015-06-09 | 2016-12-06 | Novi Security, Inc. | Sensor housing |
US9361011B1 (en) | 2015-06-14 | 2016-06-07 | Google Inc. | Methods and systems for presenting multiple live video feeds in a user interface |
US10469308B2 (en) * | 2015-10-19 | 2019-11-05 | Noritz Corporation | Communication adapter for collecting information about a system being monitored |
JP6708218B2 (en) * | 2015-12-16 | 2020-06-10 | 日本電気株式会社 | Information processing device, intrusion detection method, and computer program |
US11240542B2 (en) * | 2016-01-14 | 2022-02-01 | Avigilon Corporation | System and method for multiple video playback |
US20170221296A1 (en) | 2016-02-02 | 2017-08-03 | 6d bytes inc. | Automated preparation and dispensation of food and beverage products |
US10839856B2 (en) | 2016-03-09 | 2020-11-17 | Kyle Quinton Beatch | Systems and methods for generating compilations of photo and video data |
US10687167B1 (en) | 2016-03-31 | 2020-06-16 | Groupon, Inc. | Methods and systems for detecting aggregation events |
US10506237B1 (en) | 2016-05-27 | 2019-12-10 | Google Llc | Methods and devices for dynamic adaptation of encoding bitrate for video streaming |
US10957171B2 (en) | 2016-07-11 | 2021-03-23 | Google Llc | Methods and systems for providing event alerts |
JP6918455B2 (en) * | 2016-09-01 | 2021-08-11 | キヤノン株式会社 | Image processing equipment, image processing methods and programs |
US10386999B2 (en) * | 2016-10-26 | 2019-08-20 | Google Llc | Timeline-video relationship presentation for alert events |
US10457198B2 (en) * | 2017-03-27 | 2019-10-29 | Whelen Engineering Company, Inc. | Accessory mounting system |
US10965899B1 (en) * | 2017-04-17 | 2021-03-30 | Alarm.Com Incorporated | System and method for integration of a television into a connected-home monitoring system |
US10200746B1 (en) * | 2017-07-19 | 2019-02-05 | Google Llc | Video integration with home assistant |
US10636173B1 (en) * | 2017-09-28 | 2020-04-28 | Alarm.Com Incorporated | Dynamic calibration of surveillance devices |
US11467711B2 (en) * | 2017-12-21 | 2022-10-11 | Ademco Inc. | Systems and methods for displaying and associating context images with zones of a security system |
CN110324528A (en) * | 2018-03-28 | 2019-10-11 | 富泰华工业（深圳）有限公司 | Photographic device, image processing system and method |
US11142412B2 (en) | 2018-04-04 | 2021-10-12 | 6d bytes inc. | Dispenser |
US20190307262A1 (en) * | 2018-04-04 | 2019-10-10 | 6d bytes inc. | Solid Dispenser |
US10904628B2 (en) * | 2018-05-07 | 2021-01-26 | Apple Inc. | User interfaces for viewing live video feeds and recorded video |
US10846604B2 (en) * | 2018-09-11 | 2020-11-24 | ZineOne, Inc. | Session monitoring for selective intervention |
CN110248147B (en) | 2018-09-25 | 2022-08-23 | 浙江大华技术股份有限公司 | Image display method and device |
GB2578789A (en) * | 2018-11-09 | 2020-05-27 | Sony Corp | A method, apparatus and computer program for image processing |
CN109729287B (en) * | 2018-12-06 | 2021-06-15 | 浙江大华技术股份有限公司 | Method and device for monitoring perimeter area, computing equipment and storage medium |
JP2022533152A (en) * | 2019-05-13 | 2022-07-21 | ホール－イン－ワン・メディア・インコーポレイテッド | Autonomous activity monitoring system and method |
CN112104908A (en) * | 2019-06-18 | 2020-12-18 | 上海哔哩哔哩科技有限公司 | Audio and video file playing method and device, computer equipment and readable storage medium |
US11846749B2 (en) | 2020-01-14 | 2023-12-19 | ZineOne, Inc. | Network weather intelligence system |
US11964247B2 (en) | 2020-03-06 | 2024-04-23 | 6d bytes inc. | Automated blender system |
SE2050465A1 (en) * | 2020-04-23 | 2021-10-24 | Checkin Com Group Ab | Method and system for generating a data collection process in a user device |
CN111291735B (en) * | 2020-04-30 | 2020-08-18 | 华夏天信（北京）智能低碳技术研究院有限公司 | Underground personnel running abnormal behavior detection method based on trajectory analysis |
US11908143B2 (en) * | 2020-06-03 | 2024-02-20 | Apple Inc. | Activity zones for camera video |
US11514717B2 (en) | 2020-06-03 | 2022-11-29 | Apple Inc. | Identifying objects within images from different sources |
Family Cites Families (341)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
GB2183878B (en) * | 1985-10-11 | 1989-09-20 | Matsushita Electric Works Ltd | Abnormality supervising system |
US5237408A (en) * | 1991-08-02 | 1993-08-17 | Presearch Incorporated | Retrofitting digital video surveillance system |
US5627586A (en) | 1992-04-09 | 1997-05-06 | Olympus Optical Co., Ltd. | Moving body detection device of camera |
US7110658B1 (en) | 1993-01-08 | 2006-09-19 | Televentions, Llc | Method and apparatus for eliminating television commercial messages |
US5396284A (en) | 1993-08-20 | 1995-03-07 | Burle Technologies, Inc. | Motion detection system |
US6028626A (en) | 1995-01-03 | 2000-02-22 | Arc Incorporated | Abnormality detection and surveillance system |
US5969755A (en) | 1996-02-05 | 1999-10-19 | Texas Instruments Incorporated | Motion based event detection system and method |
US6046745A (en) * | 1996-03-25 | 2000-04-04 | Hitachi, Ltd. | Three-dimensional model making device and its method |
US5854902A (en) | 1996-10-31 | 1998-12-29 | Sensormatic Electronics Corporation | Video data capture and formatting in intelligent video information management system |
US5956424A (en) | 1996-12-23 | 1999-09-21 | Esco Electronics Corporation | Low false alarm rate detection for a video image processing based security alarm system |
AUPO894497A0 (en) | 1997-09-02 | 1997-09-25 | Xenotech Research Pty Ltd | Image processing method and apparatus |
US6400378B1 (en) | 1997-09-26 | 2002-06-04 | Sony Corporation | Home movie maker |
US6107918A (en) | 1997-11-25 | 2000-08-22 | Micron Electronics, Inc. | Method for personal computer-based home surveillance |
US6697103B1 (en) | 1998-03-19 | 2004-02-24 | Dennis Sunga Fernandez | Integrated network for monitoring remote objects |
KR100303727B1 (en) | 1998-04-28 | 2001-09-24 | 구자홍 | Adaptive display speed control system |
US6816184B1 (en) * | 1998-04-30 | 2004-11-09 | Texas Instruments Incorporated | Method and apparatus for mapping a location from a video image to a map |
US7023469B1 (en) | 1998-04-30 | 2006-04-04 | Texas Instruments Incorporated | Automatic video monitoring system which selectively saves information |
TW381344B (en) | 1998-06-08 | 2000-02-01 | United Microelectronics Corp | Manufacturing method for flash memory |
KR100274397B1 (en) | 1998-06-18 | 2000-12-15 | 구자홍 | Memory operation method of Time-lapse video recorder |
USD450059S1 (en) | 1998-07-31 | 2001-11-06 | Sony Corporation | Computer generated image for a display panel or screen |
US20030025599A1 (en) | 2001-05-11 | 2003-02-06 | Monroe David A. | Method and apparatus for collecting, sending, archiving and retrieving motion video and still images and notification of detected events |
US6970183B1 (en) | 2000-06-14 | 2005-11-29 | E-Watch, Inc. | Multimedia surveillance and monitoring system including network configuration |
US6366296B1 (en) | 1998-09-11 | 2002-04-02 | Xerox Corporation | Media browser using multimodal analysis |
US6647200B1 (en) | 1998-10-29 | 2003-11-11 | Securion 24 Co., Ltd. | Digital recorder, monitoring system, remote monitoring system, monitor image retrieval method, remote image reproduction method, recording medium and computer data signal |
US6748421B1 (en) | 1998-12-23 | 2004-06-08 | Canon Kabushiki Kaisha | Method and system for conveying video messages |
JP3826598B2 (en) | 1999-01-29 | 2006-09-27 | 株式会社日立製作所 | Image monitoring apparatus and recording medium |
US6236395B1 (en) | 1999-02-01 | 2001-05-22 | Sharp Laboratories Of America, Inc. | Audiovisual information management system |
US6330025B1 (en) | 1999-05-10 | 2001-12-11 | Nice Systems Ltd. | Digital video logging system |
US6895557B1 (en) | 1999-07-21 | 2005-05-17 | Ipix Corporation | Web-based media submission tool |
US6476858B1 (en) | 1999-08-12 | 2002-11-05 | Innovation Institute | Video monitoring and security system |
US20070008099A1 (en) | 1999-09-01 | 2007-01-11 | Nettalon Security Systems, Inc. | Method and apparatus for remotely monitoring a site |
US6917288B2 (en) * | 1999-09-01 | 2005-07-12 | Nettalon Security Systems, Inc. | Method and apparatus for remotely monitoring a site |
US7995096B1 (en) * | 1999-09-23 | 2011-08-09 | The Boeing Company | Visual security operations system |
US6424370B1 (en) | 1999-10-08 | 2002-07-23 | Texas Instruments Incorporated | Motion based event detection system and method |
US20020002425A1 (en) * | 1999-11-30 | 2002-01-03 | Dossey James F. | Computer controlled irrigation and environment management system |
GB9929870D0 (en) | 1999-12-18 | 2000-02-09 | Roke Manor Research | Improvements in or relating to security camera systems |
US6774905B2 (en) | 1999-12-23 | 2004-08-10 | Wespot Ab | Image data processing |
JP2001266158A (en) | 2000-01-11 | 2001-09-28 | Canon Inc | Image processor, image processing system, image processing method and storage medium |
US7612796B2 (en) | 2000-01-13 | 2009-11-03 | Countwise, Llc | Video-based system and method for counting persons traversing areas being monitored |
US6665423B1 (en) | 2000-01-27 | 2003-12-16 | Eastman Kodak Company | Method and system for object-oriented motion-based video description |
US6600784B1 (en) | 2000-02-02 | 2003-07-29 | Mitsubishi Electric Research Laboratories, Inc. | Descriptor for spatial distribution of motion activity in compressed video |
US7823066B1 (en) | 2000-03-03 | 2010-10-26 | Tibco Software Inc. | Intelligent console for content-based interactivity |
US20010043721A1 (en) | 2000-03-21 | 2001-11-22 | Sarnoff Corporation | Method and apparatus for performing motion analysis on an image sequence |
JP4944338B2 (en) | 2000-03-31 | 2012-05-30 | ユナイテッド ビデオ プロパティーズ インク | System and method for reducing cut-off in recording a program |
EP1279081B1 (en) | 2000-05-01 | 2012-01-04 | iRobot Corporation | Method and system for remote control of mobile robot |
US7522745B2 (en) | 2000-08-31 | 2009-04-21 | Grasso Donald P | Sensor and imaging system |
US7433493B1 (en) | 2000-09-06 | 2008-10-07 | Hitachi, Ltd. | Abnormal behavior detector |
US6665450B1 (en) | 2000-09-08 | 2003-12-16 | Avid Technology, Inc. | Interpolation of a sequence of images using motion analysis |
US20050146605A1 (en) | 2000-10-24 | 2005-07-07 | Lipton Alan J. | Video surveillance system employing video primitives |
US8564661B2 (en) | 2000-10-24 | 2013-10-22 | Objectvideo, Inc. | Video analytic rule detection system and method |
US20050162515A1 (en) | 2000-10-24 | 2005-07-28 | Objectvideo, Inc. | Video surveillance system |
US20020054211A1 (en) | 2000-11-06 | 2002-05-09 | Edelson Steven D. | Surveillance video camera enhancement system |
US20020089549A1 (en) | 2001-01-09 | 2002-07-11 | Munro James A. | Image having a hierarchical structure |
US7710457B2 (en) | 2001-01-10 | 2010-05-04 | Ip Holdings, Inc. | Motion detector camera having a flash |
US6841780B2 (en) | 2001-01-19 | 2005-01-11 | Honeywell International Inc. | Method and apparatus for detecting objects |
US20020168084A1 (en) | 2001-05-14 | 2002-11-14 | Koninklijke Philips Electronics N.V. | Method and apparatus for assisting visitors in navigating retail and exhibition-like events using image-based crowd analysis |
US20050005308A1 (en) | 2002-01-29 | 2005-01-06 | Gotuit Video, Inc. | Methods and apparatus for recording and replaying sports broadcasts |
US20030053658A1 (en) | 2001-06-29 | 2003-03-20 | Honeywell International Inc. | Surveillance system and methods regarding same |
US7162698B2 (en) | 2001-07-17 | 2007-01-09 | Mcafee, Inc. | Sliding window packet management systems |
JP2003059955A (en) | 2001-08-08 | 2003-02-28 | Matsushita Electric Ind Co Ltd | Apparatus and method for packaging electronic component |
US7369680B2 (en) | 2001-09-27 | 2008-05-06 | Koninklijke Phhilips Electronics N.V. | Method and apparatus for detecting an event based on patterns of behavior |
US6778180B2 (en) | 2001-09-28 | 2004-08-17 | The United States Of America As Represented By The Administrator Of The National Aeronautics And Space Administration | Video image tracking engine |
US7130446B2 (en) | 2001-12-03 | 2006-10-31 | Microsoft Corporation | Automatic detection and tracking of multiple individuals using multiple cues |
US7088773B2 (en) | 2002-01-17 | 2006-08-08 | Sony Corporation | Motion segmentation system with multi-frame hypothesis tracking |
US20040086835A1 (en) * | 2002-04-26 | 2004-05-06 | Otto Eileen Marie | System and method of color-coded fill-in timelines to learn history now |
US8872979B2 (en) | 2002-05-21 | 2014-10-28 | Avaya Inc. | Combined-media scene tracking for audio-video summarization |
US7016415B2 (en) | 2002-07-16 | 2006-03-21 | Broadcom Corporation | Modifying motion control signals based on input video characteristics |
US6879656B2 (en) | 2002-07-23 | 2005-04-12 | General Electric Company | Method and apparatus for deriving motion information from projection data |
US7382896B2 (en) * | 2002-08-13 | 2008-06-03 | Hitachi Kokusai Electric Inc. | Object detection method and apparatus which perform object detection using set parameters |
GB0218982D0 (en) | 2002-08-15 | 2002-09-25 | Roke Manor Research | Video motion anomaly detector |
US8181205B2 (en) | 2002-09-24 | 2012-05-15 | Russ Samuel H | PVR channel and PVR IPG information |
USD491956S1 (en) | 2002-10-17 | 2004-06-22 | Pioneer Digital Technologies, Inc. | Graphical timeline for a display |
USD499740S1 (en) | 2002-10-17 | 2004-12-14 | Pioneer Digital Technologies, Inc. | Minimized graphical timeline for a display |
US20040153504A1 (en) * | 2002-11-21 | 2004-08-05 | Norman Hutchinson | Method and system for enhancing collaboration using computers and networking |
US20040100560A1 (en) | 2002-11-22 | 2004-05-27 | Stavely Donald J. | Tracking digital zoom in a digital video camera |
US20040174434A1 (en) | 2002-12-18 | 2004-09-09 | Walker Jay S. | Systems and methods for suggesting meta-information to a camera user |
US20040123328A1 (en) | 2002-12-20 | 2004-06-24 | Ecamsecure, Inc. | Mobile surveillance vehicle |
US7095786B1 (en) | 2003-01-11 | 2006-08-22 | Neo Magic Corp. | Object tracking using adaptive block-size matching along object boundary and frame-skipping when object motion is low |
US7421727B2 (en) | 2003-02-14 | 2008-09-02 | Canon Kabushiki Kaisha | Motion detecting system, motion detecting method, motion detecting apparatus, and program for implementing the method |
US20040196369A1 (en) | 2003-03-07 | 2004-10-07 | Canon Kabushiki Kaisha | Monitoring system |
US20100002070A1 (en) | 2004-04-30 | 2010-01-07 | Grandeye Ltd. | Method and System of Simultaneously Displaying Multiple Views for Video Surveillance |
US7221331B2 (en) * | 2003-05-05 | 2007-05-22 | Microsoft Corporation | Method and system for auxiliary display of information for a computing device |
US7440634B2 (en) | 2003-06-17 | 2008-10-21 | The Trustees Of Columbia University In The City Of New York | Method for de-blurring images of moving objects |
GB2411229B (en) | 2003-07-22 | 2006-04-12 | Hitachi Int Electric Inc | Object tracking method and object tracing apparatus |
US7280753B2 (en) * | 2003-09-03 | 2007-10-09 | Canon Kabushiki Kaisha | Display apparatus, image processing apparatus, and image processing system |
US7440613B2 (en) | 2003-09-12 | 2008-10-21 | Sony Corporation | Binary mask interpolation |
US7372991B2 (en) | 2003-09-26 | 2008-05-13 | Seiko Epson Corporation | Method and apparatus for summarizing and indexing the contents of an audio-visual presentation |
US20050157949A1 (en) | 2003-09-30 | 2005-07-21 | Seiji Aiso | Generation of still image |
US20050104958A1 (en) | 2003-11-13 | 2005-05-19 | Geoffrey Egnal | Active camera video-based surveillance systems and methods |
US20080303903A1 (en) * | 2003-12-02 | 2008-12-11 | Connexed Technologies Inc. | Networked video surveillance system |
US20050132414A1 (en) * | 2003-12-02 | 2005-06-16 | Connexed, Inc. | Networked video surveillance system |
US9311540B2 (en) | 2003-12-12 | 2016-04-12 | Careview Communications, Inc. | System and method for predicting patient falls |
EP1704710A4 (en) | 2003-12-24 | 2007-09-19 | Walker Digital Llc | Method and apparatus for automatically capturing and managing images |
WO2005084036A1 (en) | 2004-03-01 | 2005-09-09 | Sony Corporation | Motion vector detecting apparatus, motion vector detecting method, and computer program |
JP4424590B2 (en) | 2004-03-05 | 2010-03-03 | 株式会社Ｋｄｄｉ研究所 | Sports video classification device |
US9191228B2 (en) | 2005-03-16 | 2015-11-17 | Icontrol Networks, Inc. | Cross-client sensor user interface in an integrated security network |
US10156959B2 (en) * | 2005-03-16 | 2018-12-18 | Icontrol Networks, Inc. | Cross-client sensor user interface in an integrated security network |
US20070223874A1 (en) | 2004-04-07 | 2007-09-27 | Koninklijke Philips Electronics, N.V. | Video-Audio Synchronization |
US20050246119A1 (en) | 2004-04-16 | 2005-11-03 | Koodali Anurag T | Event occurrence graph |
JP3989523B2 (en) | 2004-04-28 | 2007-10-10 | 中央電子株式会社 | Automatic photographing method and apparatus |
US8427538B2 (en) | 2004-04-30 | 2013-04-23 | Oncam Grandeye | Multiple view and multiple object processing in wide-angle video camera |
US20070035622A1 (en) | 2004-06-01 | 2007-02-15 | Hanna Keith J | Method and apparatus for video surveillance |
WO2005119577A1 (en) | 2004-06-01 | 2005-12-15 | Sarnoff Corporation | Method and apparatus for detecting suspicious activities |
US7631808B2 (en) * | 2004-06-21 | 2009-12-15 | Stoplift, Inc. | Method and apparatus for detecting suspicious activity using video analysis |
US8051087B2 (en) * | 2004-07-04 | 2011-11-01 | Yahoo! Inc. | Customized geographical location indexing |
US7990422B2 (en) | 2004-07-19 | 2011-08-02 | Grandeye, Ltd. | Automatically expanding the zoom capability of a wide-angle video camera |
US7639840B2 (en) | 2004-07-28 | 2009-12-29 | Sarnoff Corporation | Method and apparatus for improved video surveillance through classification of detected objects |
US7457472B2 (en) | 2005-03-31 | 2008-11-25 | Euclid Discoveries, Llc | Apparatus and method for processing video data |
US7629995B2 (en) | 2004-08-06 | 2009-12-08 | Sony Corporation | System and method for correlating camera views |
US8724891B2 (en) * | 2004-08-31 | 2014-05-13 | Ramot At Tel-Aviv University Ltd. | Apparatus and methods for the detection of abnormal motion in a video stream |
US7606425B2 (en) | 2004-09-09 | 2009-10-20 | Honeywell International Inc. | Unsupervised learning of events in a video sequence |
EP1800238A4 (en) | 2004-09-21 | 2012-01-25 | Euclid Discoveries Llc | Apparatus and method for processing video data |
US20060072847A1 (en) | 2004-10-01 | 2006-04-06 | Microsoft Corporation | System for automatic image cropping based on image saliency |
JP4487191B2 (en) | 2004-12-24 | 2010-06-23 | カシオ計算機株式会社 | Image processing apparatus and image processing program |
US8583139B2 (en) | 2004-12-31 | 2013-11-12 | Nokia Corporation | Context diary application for a mobile terminal |
US20060171453A1 (en) * | 2005-01-04 | 2006-08-03 | Rohlfing Thomas R | Video surveillance system |
US7728911B2 (en) | 2005-01-26 | 2010-06-01 | Hewlett-Packard Development Company, L.P. | Positively indicating to user whether signal has been detected on each video input |
DE602006017977D1 (en) | 2005-03-17 | 2010-12-16 | British Telecomm | TRACKING OBJECTS IN A VIDEO SEQUENCE |
US7760908B2 (en) * | 2005-03-31 | 2010-07-20 | Honeywell International Inc. | Event packaged video sequence |
US7801328B2 (en) * | 2005-03-31 | 2010-09-21 | Honeywell International Inc. | Methods for defining, detecting, analyzing, indexing and retrieving events using video image processing |
US7602944B2 (en) | 2005-04-06 | 2009-10-13 | March Networks Corporation | Method and system for counting moving objects in a digital video stream |
US20070002141A1 (en) | 2005-04-19 | 2007-01-04 | Objectvideo, Inc. | Video-based human, non-human, and/or motion verification system and method |
ITRM20050192A1 (en) | 2005-04-20 | 2006-10-21 | Consiglio Nazionale Ricerche | EVENT DETECTION AND CLASSIFICATION SYSTEM DURING MOVEMENT ACTIONS. |
USD555661S1 (en) | 2005-04-27 | 2007-11-20 | Samsung Electronics Co., Ltd. | Mobile phone display panel with menus |
US7996771B2 (en) * | 2005-06-17 | 2011-08-09 | Fuji Xerox Co., Ltd. | Methods and interfaces for event timeline and logs of video streams |
US7613324B2 (en) | 2005-06-24 | 2009-11-03 | ObjectVideo, Inc | Detection of change in posture in video |
WO2007009238A1 (en) | 2005-07-19 | 2007-01-25 | March Networks Corporation | Temporal data previewing system |
USD621413S1 (en) | 2005-08-05 | 2010-08-10 | Google Inc. | Display screen of a communications terminal with teardrop-shaped marker icon |
KR100718088B1 (en) | 2005-08-19 | 2007-05-16 | 삼성전자주식회사 | Security camera |
US20070058040A1 (en) | 2005-09-09 | 2007-03-15 | Objectvideo, Inc. | Video surveillance using spatial-temporal motion analysis |
US8024768B2 (en) | 2005-09-15 | 2011-09-20 | Penthera Partners, Inc. | Broadcasting video content to devices having different video presentation capabilities |
US7876978B2 (en) | 2005-10-13 | 2011-01-25 | Penthera Technologies, Inc. | Regions of interest in video frames |
US7773813B2 (en) | 2005-10-31 | 2010-08-10 | Microsoft Corporation | Capture-intention detection for video content analysis |
US7443304B2 (en) | 2005-12-09 | 2008-10-28 | Honeywell International Inc. | Method and system for monitoring a patient in a premises |
US7421455B2 (en) * | 2006-02-27 | 2008-09-02 | Microsoft Corporation | Video search and services |
US8941733B2 (en) | 2006-02-27 | 2015-01-27 | Robert Bosch Gmbh | Video retrieval system, method and computer program for surveillance of moving objects |
JP4525618B2 (en) | 2006-03-06 | 2010-08-18 | ソニー株式会社 | Video surveillance system and video surveillance program |
US20070255742A1 (en) | 2006-04-28 | 2007-11-01 | Microsoft Corporation | Category Topics |
US20070257986A1 (en) | 2006-05-05 | 2007-11-08 | Ivanov Yuri A | Method for processing queries for surveillance tasks |
US7685519B1 (en) | 2006-07-18 | 2010-03-23 | Intuit Inc. | Process and apparatus for providing a customizable content tooltip |
US20090117883A1 (en) | 2006-07-20 | 2009-05-07 | Dan Coffing | Transaction system for business and social networking |
EP2050067A1 (en) | 2006-08-03 | 2009-04-22 | Alterface S.A. | Method and device for identifying and extracting images of multiple users, and for recognizing user gestures |
US20080122926A1 (en) | 2006-08-14 | 2008-05-29 | Fuji Xerox Co., Ltd. | System and method for process segmentation using motion detection |
JP2008048279A (en) | 2006-08-18 | 2008-02-28 | Toshiba Corp | Video-reproducing device, method, and program |
US20080051648A1 (en) | 2006-08-25 | 2008-02-28 | Suri Jasjit S | Medical image enhancement system |
CN101512596B (en) | 2006-09-14 | 2012-06-13 | 富士通株式会社 | Method and apparatus for processing image |
KR101125960B1 (en) * | 2006-09-29 | 2012-03-22 | 엘지전자 주식회사 | Event display apparatus for mobile terminal and method thereof |
US8363102B1 (en) * | 2006-10-13 | 2013-01-29 | L-3 Communications Mobile-Vision, Inc. | Dynamically load balancing date transmission using one or more access points |
CN101385334B (en) | 2006-12-18 | 2011-09-14 | 索尼株式会社 | Imaging device and method, recording device and method, and reproduction device and method |
US7840031B2 (en) | 2007-01-12 | 2010-11-23 | International Business Machines Corporation | Tracking a range of body movement based on 3D captured image streams of a user |
US20080178069A1 (en) | 2007-01-22 | 2008-07-24 | Stallings Richard W | Content Authoring System and Method |
US8300890B1 (en) | 2007-01-29 | 2012-10-30 | Intellivision Technologies Corporation | Person/object image and screening |
US20080184245A1 (en) | 2007-01-30 | 2008-07-31 | March Networks Corporation | Method and system for task-based video analytics processing |
WO2008098321A1 (en) | 2007-02-15 | 2008-08-21 | Security Agency Sigma Jsc | Mobile system and method for remote control and viewing |
US8494234B1 (en) | 2007-03-07 | 2013-07-23 | MotionDSP, Inc. | Video hashing system and method |
US8295597B1 (en) | 2007-03-14 | 2012-10-23 | Videomining Corporation | Method and system for segmenting people in a physical space based on automatic behavior analysis |
CN101702963A (en) | 2007-03-15 | 2010-05-05 | 诺基亚公司 | System and method for providing improved residual prediction for spatial scalability in video coding |
JP5284599B2 (en) | 2007-03-30 | 2013-09-11 | 株式会社日立国際電気 | Image processing device |
JP2008250908A (en) | 2007-03-30 | 2008-10-16 | Toshiba Corp | Picture discriminating method and device |
US20080244453A1 (en) | 2007-04-01 | 2008-10-02 | Jason Edward Cafer | Iconic event timeline with latitude snapping and method for providing the same |
KR20100017645A (en) | 2007-05-10 | 2010-02-16 | 알고 임베디드 시스템즈 프라이빗 리미티드 | Dynamic motion vector analysis method |
US20090102924A1 (en) | 2007-05-21 | 2009-04-23 | Masten Jr James W | Rapidly Deployable, Remotely Observable Video Monitoring System |
USD597100S1 (en) | 2007-06-08 | 2009-07-28 | Apple Inc. | Icon for a portion of a display screen |
US20090006368A1 (en) * | 2007-06-29 | 2009-01-01 | Microsoft Corporation | Automatic Video Recommendation |
US8411935B2 (en) | 2007-07-11 | 2013-04-02 | Behavioral Recognition Systems, Inc. | Semantic representation module of a machine-learning engine in a video analysis system |
US8619140B2 (en) | 2007-07-30 | 2013-12-31 | International Business Machines Corporation | Automatic adjustment of area monitoring based on camera motion |
IL185124A0 (en) | 2007-08-08 | 2008-11-03 | Wave Group Ltd | A generic omni directional imaging system & method for vision, orientation and maneuver of robots |
US20090083787A1 (en) | 2007-09-20 | 2009-03-26 | Microsoft Corporation | Pivotable Events Timeline |
US8200063B2 (en) | 2007-09-24 | 2012-06-12 | Fuji Xerox Co., Ltd. | System and method for video summarization |
US9197903B2 (en) | 2007-10-17 | 2015-11-24 | Stmicroelectronics S.R.L. | Method and system for determining a macroblock partition for data transcoding |
US8456293B1 (en) | 2007-10-22 | 2013-06-04 | Alarm.Com Incorporated | Providing electronic content based on sensor data |
JP2009124618A (en) | 2007-11-19 | 2009-06-04 | Hitachi Ltd | Camera apparatus, and image processing device |
US8630497B2 (en) | 2007-11-27 | 2014-01-14 | Intelliview Technologies Inc. | Analyzing a segment of video |
US9177209B2 (en) | 2007-12-17 | 2015-11-03 | Sinoeast Concept Limited | Temporal segment based extraction and robust matching of video fingerprints |
US8347326B2 (en) | 2007-12-18 | 2013-01-01 | The Nielsen Company (US) | Identifying key media events and modeling causal relationships between key events and reported feelings |
USD590412S1 (en) | 2007-12-27 | 2009-04-14 | Yahoo! Inc. | Graphical user interface for displaying content selections on a display panel |
CN101981987B (en) * | 2008-01-30 | 2014-12-03 | 谷歌公司 | Notification of mobile device events |
US8102427B2 (en) | 2008-02-14 | 2012-01-24 | Sri International | Camera egomotion estimation from an infra-red image sequence for night vision |
US8515253B2 (en) | 2008-02-15 | 2013-08-20 | Sony Computer Entertainment America Llc | System and method for automated creation of video game highlights |
JP5088164B2 (en) | 2008-02-21 | 2012-12-05 | ソニー株式会社 | Image processing apparatus and method, program, and recording medium |
JP4756660B2 (en) | 2008-03-14 | 2011-08-24 | 株式会社ソニー・コンピュータエンタテインメント | Image processing apparatus and image processing method |
JP5213486B2 (en) | 2008-03-14 | 2013-06-19 | 株式会社ソニー・コンピュータエンタテインメント | Object tracking device and object tracking method |
US9571798B2 (en) | 2008-03-19 | 2017-02-14 | Aleksej Alekseevich GORILOVSKIJ | Device for displaying the situation outside a building with a lift |
US9215781B2 (en) | 2008-04-16 | 2015-12-15 | Avo Usa Holding 2 Corporation | Energy savings and improved security through intelligent lighting systems |
CA2651464C (en) | 2008-04-30 | 2017-10-24 | Crim (Centre De Recherche Informatique De Montreal) | Method and apparatus for caption production |
CN101582063A (en) | 2008-05-13 | 2009-11-18 | 华为技术有限公司 | Video service system, video service device and extraction method for key frame thereof |
US8284990B2 (en) | 2008-05-21 | 2012-10-09 | Honeywell International Inc. | Social network construction based on data association |
US8839387B2 (en) | 2009-01-28 | 2014-09-16 | Headwater Partners I Llc | Roaming services network and overlay networks |
JP4615038B2 (en) | 2008-06-23 | 2011-01-19 | 日立オートモティブシステムズ株式会社 | Image processing device |
US8311283B2 (en) | 2008-07-06 | 2012-11-13 | Automotive Research&Testing Center | Method for detecting lane departure and apparatus thereof |
US7990421B2 (en) | 2008-07-18 | 2011-08-02 | Sony Ericsson Mobile Communications Ab | Arrangement and method relating to an image recording device |
US8200669B1 (en) | 2008-08-21 | 2012-06-12 | Adobe Systems Incorporated | Management of smart tags via hierarchy |
GB2463103A (en) | 2008-09-05 | 2010-03-10 | Skype Ltd | Video telephone call using a television receiver |
US20110173235A1 (en) | 2008-09-15 | 2011-07-14 | Aman James A | Session automated recording together with rules based indexing, analysis and expression of content |
US8284258B1 (en) | 2008-09-18 | 2012-10-09 | Grandeye, Ltd. | Unusual event detection in wide-angle video (based on moving object trajectories) |
USD625323S1 (en) | 2008-10-01 | 2010-10-12 | Nintendo Co., Ltd. | Display with changeable computer-generated icons |
GB0818561D0 (en) | 2008-10-09 | 2008-11-19 | Isis Innovation | Visual tracking of objects in images, and segmentation of images |
US7962365B2 (en) | 2008-10-31 | 2011-06-14 | International Business Machines Corporation | Using detailed process information at a point of sale |
US9357247B2 (en) | 2008-11-24 | 2016-05-31 | Time Warner Cable Enterprises Llc | Apparatus and methods for content delivery and message exchange across multiple content delivery networks |
US8180891B1 (en) | 2008-11-26 | 2012-05-15 | Free Stream Media Corp. | Discovery, access control, and communication with networked services from within a security sandbox |
JP2010136032A (en) | 2008-12-04 | 2010-06-17 | Hitachi Ltd | Video monitoring system |
US9280759B2 (en) | 2008-12-24 | 2016-03-08 | Blackboard Inc. | Method and system for displaying plural notifications from plural sources |
TWI492188B (en) | 2008-12-25 | 2015-07-11 | Univ Nat Chiao Tung | Method for automatic detection and tracking of multiple targets with multiple cameras and system therefor |
WO2010086866A1 (en) * | 2009-02-02 | 2010-08-05 | Eyesight Mobile Technologies Ltd. | System and method for object recognition and tracking in a video stream |
US20100201815A1 (en) | 2009-02-09 | 2010-08-12 | Vitamin D, Inc. | Systems and methods for video monitoring |
US20100205203A1 (en) | 2009-02-09 | 2010-08-12 | Vitamin D, Inc. | Systems and methods for video analysis |
US8467768B2 (en) | 2009-02-17 | 2013-06-18 | Lookout, Inc. | System and method for remotely securing or recovering a mobile device |
US8537219B2 (en) | 2009-03-19 | 2013-09-17 | International Business Machines Corporation | Identifying spatial locations of events within video image data |
US8587653B1 (en) | 2009-04-30 | 2013-11-19 | Verint Systems, Inc. | Modifying the resolution of video before transferring to a display system |
GB0907870D0 (en) | 2009-05-07 | 2009-06-24 | Univ Catholique Louvain | Systems and methods for the autonomous production of videos from multi-sensored data |
US8886489B2 (en) | 2009-05-12 | 2014-11-11 | Georgia Tech Research Corporation | Motion detecting method and device |
US8340654B2 (en) | 2009-05-26 | 2012-12-25 | Lextech Labs Llc | Apparatus and method for video display and control for portable device |
US8819559B2 (en) | 2009-06-18 | 2014-08-26 | Cyberlink Corp. | Systems and methods for sharing multimedia editing projects |
US9380292B2 (en) | 2009-07-31 | 2016-06-28 | 3Dmedia Corporation | Methods, systems, and computer-readable storage media for generating three-dimensional (3D) images of a scene |
US8497914B2 (en) | 2009-08-10 | 2013-07-30 | Wisconsin Alumni Research Foundation | Vision system and method for motion adaptive integration of image frames |
US8305447B1 (en) | 2009-08-27 | 2012-11-06 | Wong Thomas K | Security threat detection system |
JP5523027B2 (en) | 2009-09-02 | 2014-06-18 | キヤノン株式会社 | Information transmitting apparatus and information transmitting method |
US8547327B2 (en) | 2009-10-07 | 2013-10-01 | Qualcomm Incorporated | Proximity object tracker |
US9788017B2 (en) | 2009-10-07 | 2017-10-10 | Robert Laganiere | Video analytics with pre-processing at the source end |
NO332170B1 (en) | 2009-10-14 | 2012-07-16 | Cisco Systems Int Sarl | Camera control device and method |
US10264029B2 (en) * | 2009-10-30 | 2019-04-16 | Time Warner Cable Enterprises Llc | Methods and apparatus for packetized content delivery over a content delivery network |
US8707194B1 (en) | 2009-11-20 | 2014-04-22 | Amazon Technologies, Inc. | System and method for decentralized performance monitoring of host systems |
US8676493B2 (en) | 2009-11-30 | 2014-03-18 | Honeywell International Inc. | Systems and methods for better alarm management |
ES2551099T3 (en) | 2009-12-22 | 2015-11-16 | 9Solutions Oy | Position Tracking System |
US8510677B2 (en) | 2010-01-06 | 2013-08-13 | Apple Inc. | Device, method, and graphical user interface for navigating through a range of values |
US8358359B2 (en) | 2010-01-21 | 2013-01-22 | Microsoft Corporation | Reducing motion-related artifacts in rolling shutter video information |
CN102906763A (en) | 2010-01-28 | 2013-01-30 | 美国路通创新科技公司 | Document imaging system having camera-scanner apparatus and personal computer based processing software |
US8861842B2 (en) | 2010-02-05 | 2014-10-14 | Sri International | Method and apparatus for real-time pedestrian detection for urban driving |
US8811801B2 (en) | 2010-03-25 | 2014-08-19 | Disney Enterprises, Inc. | Continuous freeze-frame video effect system and method |
CN102236899B (en) | 2010-05-07 | 2013-12-04 | 株式会社理光 | Method and device for detecting objects |
JP2011239075A (en) | 2010-05-07 | 2011-11-24 | Sony Corp | Display device, display method and program |
US8736680B1 (en) * | 2010-05-18 | 2014-05-27 | Enforcement Video, Llc | Method and system for split-screen video display |
US20110291831A1 (en) * | 2010-05-26 | 2011-12-01 | Honeywell International Inc. | Time based visual review of multi-polar incidents |
TWI454140B (en) | 2010-06-08 | 2014-09-21 | Univ Nat Taiwan | Method for interacting with a video and simulation game system |
US20120019728A1 (en) | 2010-07-26 | 2012-01-26 | Darnell Janssen Moore | Dynamic Illumination Compensation For Background Subtraction |
US8532336B2 (en) | 2010-08-17 | 2013-09-10 | International Business Machines Corporation | Multi-mode video event indexing |
US9320957B2 (en) | 2010-08-26 | 2016-04-26 | Blast Motion Inc. | Wireless and visual hybrid motion capture system |
US9247212B2 (en) | 2010-08-26 | 2016-01-26 | Blast Motion Inc. | Intelligent motion capture element |
US9076041B2 (en) | 2010-08-26 | 2015-07-07 | Blast Motion Inc. | Motion event recognition and video synchronization system and method |
US20120215878A1 (en) | 2010-09-28 | 2012-08-23 | Adam Kidron | Content delivery platform apparatuses, methods and systems |
KR101753031B1 (en) | 2010-11-15 | 2017-06-30 | 엘지전자 주식회사 | Mobile terminal and Method for setting metadata thereof |
US20120120238A1 (en) | 2010-11-15 | 2012-05-17 | Seraphim Optronics Ltd. | Two layer video motion detection |
US20120173577A1 (en) | 2010-12-30 | 2012-07-05 | Pelco Inc. | Searching recorded video |
US8743204B2 (en) | 2011-01-07 | 2014-06-03 | International Business Machines Corporation | Detecting and monitoring event occurrences using fiber optic sensors |
EP2479684B1 (en) * | 2011-01-21 | 2013-09-25 | NTT DoCoMo, Inc. | Method and evaluation server for evaluating a plurality of videos |
US20120198319A1 (en) | 2011-01-28 | 2012-08-02 | Giovanni Agnoli | Media-Editing Application with Video Segmentation and Caching Capabilities |
US9113130B2 (en) | 2012-02-06 | 2015-08-18 | Legend3D, Inc. | Multi-stage production pipeline system |
WO2012133028A1 (en) | 2011-03-25 | 2012-10-04 | 株式会社ニコン | Electronic apparatus, selection method, acquisition method, electronic device, combination method and combination program |
US8767030B2 (en) | 2011-04-07 | 2014-07-01 | Tara Chand Singhal | System and method for a grooming mirror in a portable electronic device with a user-facing camera |
JP6070544B2 (en) | 2011-04-28 | 2017-02-01 | 株式会社ソシオネクスト | Video display device and video display method |
WO2012150602A1 (en) | 2011-05-03 | 2012-11-08 | Yogesh Chunilal Rathod | A system and method for dynamically monitoring, recording, processing, attaching dynamic, contextual & accessible active links & presenting of physical or digital activities, actions, locations, logs, life stream, behavior & status |
US9928707B2 (en) | 2011-05-16 | 2018-03-27 | Garrett Thermal Systems Limited | Surveillance system |
US8902085B1 (en) | 2011-05-17 | 2014-12-02 | Raytheon Company | Integrated 3D audiovisual threat cueing system |
JP6027098B2 (en) * | 2011-06-01 | 2016-11-16 | コーニンクレッカ フィリップス エヌ ヴェＫｏｎｉｎｋｌｉｊｋｅ Ｐｈｉｌｉｐｓ Ｎ．Ｖ． | Timeline display tool |
US9158455B2 (en) | 2011-07-12 | 2015-10-13 | Apple Inc. | Multifunctional environment for image cropping |
US9402034B2 (en) | 2011-07-29 | 2016-07-26 | Apple Inc. | Adaptive auto exposure adjustment |
US20130039634A1 (en) * | 2011-08-12 | 2013-02-14 | Honeywell International Inc. | System and method of creating an intelligent video clip for improved investigations in video surveillance |
US10129211B2 (en) | 2011-09-15 | 2018-11-13 | Stephan HEATH | Methods and/or systems for an online and/or mobile privacy and/or security encryption technologies used in cloud computing with the combination of data mining and/or encryption of user's personal data and/or location data for marketing of internet posted promotions, social messaging or offers using multiple devices, browsers, operating systems, networks, fiber optic communications, multichannel platforms |
US9124783B2 (en) | 2011-09-30 | 2015-09-01 | Camiolog, Inc. | Method and system for automated labeling at scale of motion-detected events in video surveillance |
US8555364B2 (en) | 2011-09-30 | 2013-10-08 | Time Warner Cable Enterprises Llc | System and method for cloning a wi-fi access point |
US9269243B2 (en) | 2011-10-07 | 2016-02-23 | Siemens Aktiengesellschaft | Method and user interface for forensic video search |
US9143529B2 (en) | 2011-10-11 | 2015-09-22 | Citrix Systems, Inc. | Modifying pre-existing mobile applications to implement enterprise security policies |
US9696897B2 (en) | 2011-10-19 | 2017-07-04 | The Regents Of The University Of California | Image-based measurement tools |
US9025836B2 (en) | 2011-10-28 | 2015-05-05 | Intellectual Ventures Fund 83 Llc | Image recomposition from face detection and facial features |
US9530221B2 (en) | 2012-01-06 | 2016-12-27 | Pelco, Inc. | Context aware moving object detection |
US9530060B2 (en) | 2012-01-17 | 2016-12-27 | Avigilon Fortress Corporation | System and method for building automation using video content analysis with depth sensing |
EP2810429B1 (en) * | 2012-01-30 | 2020-02-19 | SeeScan, Inc. | Adjustable variable resolution inspection systems and methods |
US9113133B2 (en) | 2012-01-31 | 2015-08-18 | Prime Image Delaware, Inc. | Method and system for detecting a vertical cut in a video signal for the purpose of time alteration |
KR20130091596A (en) | 2012-02-08 | 2013-08-19 | 한국전자통신연구원 | Method for human activity prediction form streaming videos |
KR101739025B1 (en) | 2012-03-13 | 2017-05-24 | 한화테크윈 주식회사 | Method for processing image |
US8594488B1 (en) | 2012-03-13 | 2013-11-26 | Google Inc. | Methods and systems for video retargeting using motion saliency |
EP2826020A4 (en) | 2012-03-15 | 2016-06-15 | Behavioral Recognition Sys Inc | Alert volume normalization in a video surveillance system |
US20130279573A1 (en) | 2012-04-18 | 2013-10-24 | Vixs Systems, Inc. | Video processing system with human action detection and methods for use therewith |
US8792677B2 (en) | 2012-04-19 | 2014-07-29 | Intelligence Based Integrated Security Systems, Inc. | Large venue security method |
JP5489144B1 (en) | 2012-04-27 | 2014-05-14 | コニカミノルタ株式会社 | Beam forming method and ultrasonic diagnostic apparatus |
EP2660774B1 (en) | 2012-04-30 | 2021-09-01 | BlackBerry Limited | Image processing method |
US9015812B2 (en) | 2012-05-22 | 2015-04-21 | Hasso-Plattner-Institut Fur Softwaresystemtechnik Gmbh | Transparent control of access invoking real-time analysis of the query history |
US20130342689A1 (en) | 2012-06-25 | 2013-12-26 | Intel Corporation | Video analytics test system |
US9307047B2 (en) * | 2012-08-11 | 2016-04-05 | Scott Lee Chung | System and method for communication of an event through a call for media |
CN103748889A (en) | 2012-08-17 | 2014-04-23 | 弗莱克斯电子有限责任公司 | EPG aggregation from multiple sources |
US8989501B2 (en) | 2012-08-17 | 2015-03-24 | Ge Aviation Systems Llc | Method of selecting an algorithm for use in processing hyperspectral data |
US9070020B2 (en) | 2012-08-21 | 2015-06-30 | International Business Machines Corporation | Determination of train presence and motion state in railway environments |
KR101932535B1 (en) | 2012-08-27 | 2018-12-27 | 한화테크윈 주식회사 | Indoor surveillance system and method |
US9083751B2 (en) | 2012-08-31 | 2015-07-14 | Cisco Technology, Inc. | Method for cloud-based access control policy management |
JP2015534748A (en) | 2012-09-04 | 2015-12-03 | ティヴォ インク | Wireless media stream distribution system |
US20140082497A1 (en) * | 2012-09-17 | 2014-03-20 | Fanhattan Llc | System and method for browsing and accessing live media content |
DE102012217152A1 (en) * | 2012-09-24 | 2014-03-27 | Robert Bosch Gmbh | User interface layout as well as computer program |
US9165535B2 (en) | 2012-09-27 | 2015-10-20 | Google Inc. | System and method for determining a zoom factor of content displayed on a display device |
US20140108558A1 (en) | 2012-10-12 | 2014-04-17 | Citrix Systems, Inc. | Application Management Framework for Secure Data Sharing in an Orchestration Framework for Connected Devices |
US9414038B2 (en) | 2012-10-16 | 2016-08-09 | Amanjyot Singh JOHAR | Creating time lapse video in real-time |
KR101245057B1 (en) | 2012-10-16 | 2013-03-18 | (주)아이아이에스티 | Method and apparatus for sensing a fire |
US9182903B2 (en) * | 2012-10-30 | 2015-11-10 | Google Technology Holdings LLC | Method and apparatus for keyword graphic selection |
US20140137188A1 (en) | 2012-11-14 | 2014-05-15 | Domanicom Corporation | Devices, systems, and methods for simultaneously delivering personalized/ targeted services and advertisements to end users |
US9251121B2 (en) | 2012-11-21 | 2016-02-02 | Honeywell International Inc. | Determining pushback direction |
US20140173692A1 (en) | 2012-12-15 | 2014-06-19 | Sudharshan Srinivasan | Bring your own device system using a mobile accessory device |
EP2768216A4 (en) | 2012-12-25 | 2015-10-28 | Huawei Tech Co Ltd | Video play method, terminal and system |
US9374369B2 (en) | 2012-12-28 | 2016-06-21 | Lookout, Inc. | Multi-factor authentication and comprehensive login system for client-server networks |
US9250954B2 (en) | 2013-01-17 | 2016-02-02 | Xockets, Inc. | Offload processor modules for connection to system memory, and corresponding methods and systems |
US20140245411A1 (en) | 2013-02-22 | 2014-08-28 | Nokia Corporation | Method and apparatus for providing account-less access via an account connector platform |
US9003556B2 (en) | 2013-02-28 | 2015-04-07 | Facebook, Inc. | Techniques for in-app user data authorization |
US9213896B2 (en) | 2013-03-05 | 2015-12-15 | Mitsubishi Electric Research Laboratories, Inc. | Method for detecting and tracking objects in image sequences of scenes acquired by a stationary camera |
US20140313142A1 (en) | 2013-03-07 | 2014-10-23 | Tactus Technology, Inc. | Method for remotely sharing touch |
US9432361B2 (en) | 2013-03-13 | 2016-08-30 | Lookout, Inc. | System and method for changing security behavior of a device based on proximity to another device |
US8874700B2 (en) | 2013-03-21 | 2014-10-28 | Nextbit Systems Inc. | Optimizing storage of data files |
US8982277B2 (en) | 2013-04-25 | 2015-03-17 | Broadcom Corporation | System and method for processing video data |
EP2995079A4 (en) | 2013-05-10 | 2017-08-23 | Robert Bosch GmbH | System and method for object and event identification using multiple cameras |
US8688483B2 (en) | 2013-05-17 | 2014-04-01 | Watts And Associates, Inc. | Systems, computer-implemented methods, and computer medium to determine premiums and indemnities for supplemental crop insurance |
EP2997520A4 (en) | 2013-05-17 | 2017-01-25 | International Electronic Machines Corp. | Operations monitoring in an area |
US9904852B2 (en) | 2013-05-23 | 2018-02-27 | Sri International | Real-time object detection, tracking and occlusion reasoning |
US20140362225A1 (en) * | 2013-06-11 | 2014-12-11 | Honeywell International Inc. | Video Tagging for Dynamic Tracking |
JP6389876B2 (en) * | 2013-06-14 | 2018-09-12 | ティー—データ・システムズ（エス）ピーティーイー・リミテッド | System and method for uploading, displaying and selling news footprints |
US9430045B2 (en) | 2013-07-17 | 2016-08-30 | Lenovo (Singapore) Pte. Ltd. | Special gestures for camera control and image processing operations |
US8941736B1 (en) * | 2013-07-26 | 2015-01-27 | SkyBell Technologies, Inc. | Doorbell communication systems and methods |
US9013575B2 (en) * | 2013-07-26 | 2015-04-21 | SkyBell Technologies, Inc. | Doorbell communication systems and methods |
US8823795B1 (en) * | 2013-07-26 | 2014-09-02 | SkyBell Technologies, Inc. | Doorbell communication systems and methods |
US20150046184A1 (en) | 2013-08-12 | 2015-02-12 | Dental Imaging Technologies Corporation | Managing dental photographs acquired by portable computing devices |
US9015072B2 (en) | 2013-08-19 | 2015-04-21 | Xerox Corporation | Method and apparatus for automated inventory management using depth sensing |
KR20160048199A (en) | 2013-08-29 | 2016-05-03 | 브이아이디 스케일, 인크. | User-adaptive video telephony |
US9693030B2 (en) | 2013-09-09 | 2017-06-27 | Arris Enterprises Llc | Generating alerts based upon detector outputs |
US20150085060A1 (en) | 2013-09-20 | 2015-03-26 | Microsoft Corporation | User experience for conferencing with a touch screen display |
US8958602B1 (en) | 2013-09-27 | 2015-02-17 | The United States Of America As Represented By The Secretary Of The Navy | System for tracking maritime domain targets from full motion video |
EP3060118A4 (en) | 2013-10-24 | 2017-07-19 | Breathevision Ltd. | Motion monitor |
EP3087482B1 (en) | 2013-12-24 | 2019-11-06 | Pelco, Inc. | Method and apparatus for intelligent video pruning |
US20150181088A1 (en) | 2013-12-25 | 2015-06-25 | Geovision Inc. | Ip camera apparatus |
KR102104413B1 (en) | 2014-01-16 | 2020-04-24 | 한화테크윈 주식회사 | Surveillance camera and digital video recorder |
US10186123B2 (en) | 2014-04-01 | 2019-01-22 | Avigilon Fortress Corporation | Complex event recognition in a sensor network |
US9785688B2 (en) * | 2014-05-21 | 2017-10-10 | International Business Machines Corporation | Automated analysis and visualization of complex data |
US9600723B1 (en) | 2014-07-03 | 2017-03-21 | Google Inc. | Systems and methods for attention localization using a first-person point-of-view device |
US10140827B2 (en) * | 2014-07-07 | 2018-11-27 | Google Llc | Method and system for processing motion event notifications |
US10127783B2 (en) * | 2014-07-07 | 2018-11-13 | Google Llc | Method and device for processing motion events |
US9420331B2 (en) | 2014-07-07 | 2016-08-16 | Google Inc. | Method and system for categorizing detected motion events |
US9621798B2 (en) | 2014-07-07 | 2017-04-11 | GM Global Technology Operations LLC | Grid-based image resolution enhancement for video processing module |
US9213903B1 (en) | 2014-07-07 | 2015-12-15 | Google Inc. | Method and system for cluster-based video monitoring and event categorization |
US9449229B1 (en) | 2014-07-07 | 2016-09-20 | Google Inc. | Systems and methods for categorizing motion event candidates |
US9396397B2 (en) | 2014-10-21 | 2016-07-19 | Motorola Solutions, Inc. | Methods and systems for object-recognition and link integration in a composite video stream |
US20160241818A1 (en) | 2015-02-18 | 2016-08-18 | Honeywell International Inc. | Automatic alerts for video surveillance systems |
US9361011B1 (en) * | 2015-06-14 | 2016-06-07 | Google Inc. | Methods and systems for presenting multiple live video feeds in a user interface |
US10506198B2 (en) | 2015-12-04 | 2019-12-10 | Livestream LLC | Video stream encoding system with live crop editing and recording |
US20170162230A1 (en) | 2015-12-04 | 2017-06-08 | Livestream LLC | Interactive digital camera for live crop editing and recording of video streams |
US9674453B1 (en) | 2016-10-26 | 2017-06-06 | Cisco Technology, Inc. | Using local talker position to pan sound relative to video frames at a remote location |
JP6786378B2 (en) | 2016-12-26 | 2020-11-18 | キヤノン株式会社 | Information processing equipment, information processing methods and programs |
-
2015
- 2015-06-10 US US14/736,162 patent/US10127783B2/en active Active
- 2015-07-07 CA CA2954630A patent/CA2954630C/en active Active
- 2015-07-07 EP EP18153305.0A patent/EP3343525A1/en active Pending
- 2015-07-07 EP EP15745024.8A patent/EP3022720B1/en active Active
- 2015-07-07 WO PCT/US2015/039425 patent/WO2016007541A1/en active Application Filing
- 2015-07-07 AU AU2015287997A patent/AU2015287997B2/en active Active
-
2018
- 2018-10-31 US US16/177,066 patent/US20190066473A1/en not_active Abandoned
-
2019
- 2019-11-22 AU AU2019268179A patent/AU2019268179B2/en active Active
-
2020
- 2020-12-30 US US17/138,566 patent/US20210125475A1/en not_active Abandoned
-
2021
- 2021-06-02 AU AU2021203601A patent/AU2021203601B2/en active Active
Non-Patent Citations (1)
Title |
---|
See references of WO2016007541A1 * |
Cited By (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US11550702B1 (en) | 2021-11-04 | 2023-01-10 | T-Mobile Usa, Inc. | Ensuring that computer programs are accessible to users with disabilities, such as for use with mobile phones |
US11860767B2 (en) | 2021-11-04 | 2024-01-02 | T-Mobile Usa, Inc. | Testing computer program accessibility for users with disabilities, such as for use with mobile phones |
Also Published As
Publication number | Publication date |
---|---|
EP3022720B1 (en) | 2018-01-31 |
CA2954630C (en) | 2021-03-16 |
AU2021203601B2 (en) | 2023-03-23 |
WO2016007541A1 (en) | 2016-01-14 |
AU2015287997A1 (en) | 2017-02-02 |
AU2019268179A1 (en) | 2019-12-12 |
CA2954630A1 (en) | 2016-01-14 |
US20210125475A1 (en) | 2021-04-29 |
US20160005280A1 (en) | 2016-01-07 |
AU2021203601A1 (en) | 2021-07-01 |
US20190066473A1 (en) | 2019-02-28 |
AU2015287997B2 (en) | 2019-08-22 |
AU2019268179B2 (en) | 2021-03-04 |
US10127783B2 (en) | 2018-11-13 |
EP3343525A1 (en) | 2018-07-04 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
AU2021203601B2 (en) | Method and device for processing motion events | |
US11062580B2 (en) | Methods and systems for updating an event timeline with event indicators | |
US10180775B2 (en) | Method and system for displaying recorded and live video feeds | |
US9489580B2 (en) | Method and system for cluster-based video monitoring and event categorization |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PUAI | Public reference made under article 153(3) epc to a published international application that has entered the european phase |
Free format text: ORIGINAL CODE: 0009012 |
|
17P | Request for examination filed |
Effective date: 20160218 |
|
AK | Designated contracting states |
Kind code of ref document: A1Designated state(s): AL AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HR HU IE IS IT LI LT LU LV MC MK MT NL NO PL PT RO RS SE SI SK SM TR |
|
AX | Request for extension of the european patent |
Extension state: BA ME |
|
17Q | First examination report despatched |
Effective date: 20170125 |
|
GRAP | Despatch of communication of intention to grant a patent |
Free format text: ORIGINAL CODE: EPIDOSNIGR1 |
|
DAV | Request for validation of the european patent (deleted) | ||
DAX | Request for extension of the european patent (deleted) | ||
INTG | Intention to grant announced |
Effective date: 20170925 |
|
RAP1 | Party data changed (applicant data changed or rights of an application transferred) |
Owner name: GOOGLE LLC |
|
GRAS | Grant fee paid |
Free format text: ORIGINAL CODE: EPIDOSNIGR3 |
|
GRAA | (expected) grant |
Free format text: ORIGINAL CODE: 0009210 |
|
AK | Designated contracting states |
Kind code of ref document: B1Designated state(s): AL AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HR HU IE IS IT LI LT LU LV MC MK MT NL NO PL PT RO RS SE SI SK SM TR |
|
REG | Reference to a national code |
Ref country code: GBRef legal event code: FG4DRef country code: CHRef legal event code: EP |
|
REG | Reference to a national code |
Ref country code: ATRef legal event code: REFRef document number: 968008Country of ref document: ATKind code of ref document: TEffective date: 20180215 |
|
REG | Reference to a national code |
Ref country code: IERef legal event code: FG4D |
|
REG | Reference to a national code |
Ref country code: NLRef legal event code: FP |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R096Ref document number: 602015007868Country of ref document: DE |
|
REG | Reference to a national code |
Ref country code: LTRef legal event code: MG4D |
|
REG | Reference to a national code |
Ref country code: ATRef legal event code: MK05Ref document number: 968008Country of ref document: ATKind code of ref document: TEffective date: 20180131 |
|
REG | Reference to a national code |
Ref country code: FRRef legal event code: PLFPYear of fee payment: 4 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: HRFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180131Ref country code: NOFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180430Ref country code: LTFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180131Ref country code: ESFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180131Ref country code: FIFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180131 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: ATFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180131Ref country code: GRFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180501Ref country code: PLFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180131Ref country code: BGFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180430Ref country code: RSFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180131Ref country code: SEFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180131Ref country code: LVFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180131Ref country code: ISFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180531 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: ROFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180131Ref country code: ALFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180131Ref country code: ITFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180131Ref country code: EEFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180131 |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R097Ref document number: 602015007868Country of ref document: DE |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: SMFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180131Ref country code: DKFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180131Ref country code: CZFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180131Ref country code: SKFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180131 |
|
PLBE | No opposition filed within time limit |
Free format text: ORIGINAL CODE: 0009261 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: NO OPPOSITION FILED WITHIN TIME LIMIT |
|
26N | No opposition filed |
Effective date: 20181102 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: SIFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180131 |
|
REG | Reference to a national code |
Ref country code: CHRef legal event code: PL |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: LUFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20180707Ref country code: MCFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180131 |
|
REG | Reference to a national code |
Ref country code: BERef legal event code: MMEffective date: 20180731 |
|
REG | Reference to a national code |
Ref country code: IERef legal event code: MM4A |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: LIFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20180731Ref country code: CHFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20180731Ref country code: IEFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20180707 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: BEFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20180731 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: MTFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20180707 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: TRFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180131 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: PTFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180131 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: HUFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMIT; INVALID AB INITIOEffective date: 20150707Ref country code: MKFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20180131Ref country code: CYFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180131 |
|
P01 | Opt-out of the competence of the unified patent court (upc) registered |
Effective date: 20230506 |
|
PGFP | Annual fee paid to national office [announced via postgrant information from national office to epo] |
Ref country code: NLPayment date: 20230726Year of fee payment: 9 |
|
PGFP | Annual fee paid to national office [announced via postgrant information from national office to epo] |
Ref country code: GBPayment date: 20230727Year of fee payment: 9 |
|
PGFP | Annual fee paid to national office [announced via postgrant information from national office to epo] |
Ref country code: FRPayment date: 20230725Year of fee payment: 9Ref country code: DEPayment date: 20230727Year of fee payment: 9 |
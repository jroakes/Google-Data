US5509103A - Method of training neural networks used for speech recognition - Google Patents
Method of training neural networks used for speech recognition Download PDFInfo
- Publication number
- US5509103A US5509103A US08/253,893 US25389394A US5509103A US 5509103 A US5509103 A US 5509103A US 25389394 A US25389394 A US 25389394A US 5509103 A US5509103 A US 5509103A
- Authority
- US
- United States
- Prior art keywords
- data block
- neural network
- data
- method recited
- frames
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Lifetime
Links
Images
Classifications
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L15/00—Speech recognition
- G10L15/08—Speech classification or search
- G10L15/16—Speech classification or search using artificial neural networks
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F18/00—Pattern recognition
- G06F18/20—Analysing
- G06F18/24—Classification techniques
- G06F18/245—Classification techniques relating to the decision surface
- G06F18/2453—Classification techniques relating to the decision surface non-linear, e.g. polynomial classifier
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N3/00—Computing arrangements based on biological models
- G06N3/02—Neural networks
- G06N3/04—Architecture, e.g. interconnection topology
- G06N3/045—Combinations of networks
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L15/00—Speech recognition
- G10L15/26—Speech to text systems
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L15/00—Speech recognition
- G10L15/02—Feature extraction for speech recognition; Selection of recognition unit
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L15/00—Speech recognition
- G10L15/06—Creation of reference templates; Training of speech recognition systems, e.g. adaptation to the characteristics of the speaker's voice
- G10L15/063—Training
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L15/00—Speech recognition
- G10L15/08—Speech classification or search
- G10L15/10—Speech classification or search using distance or distortion measures between unknown speech and reference templates
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L15/00—Speech recognition
- G10L15/22—Procedures used during a speech recognition process, e.g. man-machine dialogue
- G10L2015/223—Execution procedure of a spoken command
Definitions
- the present invention is related to the following inventions which are assigned to the same assignee as the present invention:
- This invention relates generally to speech-recognition devices, and, in particular, to a method of training neural networks used in a speech-recognition system which is capable of speaker-independent, isolated word recognition.
- Potential applications for an automated speech-recognition device include a database query technique using voice commands, voice input for quality control in a manufacturing process, a voice-dial cellular phone which would allow a driver to focus on the road while dialing, and a voice-operated prosthetic device for the physically disabled.
- Dynamic time-warping is a technique which uses an optimization principle to minimize the errors between an unknown spoken word and a stored template of a known word. Reported data shows that the DTW technique is very robust and produces good recognition. However, the DTW technique is computationally intensive. Therefore, it is impractical to implement the DTW technique for real-world applications.
- the hidden-Markov modeling technique uses stochastic models for known words and compares the probability that the unknown word was generated by each model.
- the HMM technique will check the sequence (or state) of the word, and find the model that provides the best match.
- the HMM technique has been successfully used in many commercial applications; however, the technique has many drawbacks. These drawbacks include an inability to differentiate acoustically similar words, a susceptibility to noise, and computational intensiveness.
- a time-delay neural network is a type of neural network which addresses the temporal effects of speech by adopting limited neuron connections.
- a TDNN shows slightly better result than the HMM method.
- a TDNN suffers from some serious drawbacks.
- the training time for a TDNN is very lengthy, on the order of several weeks.
- the training algorithm for a TDNN often converges to a local minimum, which is not the optimum solution.
- the optimum solution would be a global minimum.
- each of the neural networks comprising a plurality of neurons
- the method producing a plurality of training examples wherein each of the training examples comprises an input portion and an output portion
- the method comprising the following steps: (a) receiving an example spoken word; (b) performing analog-to-digital conversion of the spoken word, the conversion producing a digitized word; (c) performing cepstral analysis of the digitized word, the analysis producing a sequence of data frames; (d) generating a plurality of data blocks from the sequence of data frames; (e) selecting one of the plurality of data blocks and equating the input portion of one of the plurality of training examples to the selected data block; (f) selecting one of the plurality of neural networks and determining if the selected neural network is to recognize the selected data block; if so, setting the output portion of the one training example to one; if not,
- FIG. 1 shows a contextual block diagram of a speech-recognition system.
- FIG. 2 shows a conceptual diagram of a speech-recognition system which utilizes the present invention.
- FIG. 3 shows a flow diagram of a method of operating the speech-recognition system illustrated in FIG. 2.
- FIG. 4 illustrates data inputs and outputs of a divide-and-conquer algorithm of the present invention.
- FIG. 5 shows a flow diagram of a method of executing a divide-and-conquer algorithm of the present invention.
- FIG. 6 shows a flow diagram of a method of training a neural network to recognize speech in accordance with a preferred embodiment of the present invention.
- FIG. 1 shows a contextual block diagram of a speech-recognition system.
- the system comprises a microphone 1 or equivalent means for receiving audio input in the form of speech input and converting sound into electrical energy, pre-processing circuitry 3 which receives electrical signals from microphone 1 and performs various tasks such as wave-form sampling, analog-to-digital (A/D) conversion, cepstral analysis, etc., and a computer 5 which executes a program for recognizing speech and accordingly generates an output identifying the recognized speech.
- A/D analog-to-digital
- the operation of the system commences when a user speaks into microphone 1.
- the system depicted by FIG. 1 is used for isolated word recognition. Isolated word recognition takes place when a person speaking into the microphone makes a distinct pause between each word.
- microphone 1 When a speaker utters a word, microphone 1 generates a signal which represents the acoustic wave-form of the word. This signal is then fed to pre-processing circuitry 3 for digitization by means of an A/D converter (not shown). The digitized signal is then subjected to cepstral analysis, a method of feature extraction, which is also performed by pre-processing circuitry 3. Computer 5 receives the results of the cepstral analysis and uses these results to determine the identity of the spoken word.
- Pre-processing circuitry 3 may include a combination of hardware and software components in order to perform its tasks.
- the A/D conversion may be performed by a specialized integrated circuit, while the cepstral analysis may be performed by software which is executed on a microprocessor.
- Pre-processing circuitry 3 includes appropriate means for A/D conversion.
- the signal from microphone 1 is an analog signal.
- An A/D converter (not shown) samples the signal from microphone 1 several thousand times per second (e.g. between 8,000 and 14,000 times per second in a preferred embodiment). Each of the samples is then converted to a digital word, wherein the length of the word is between 12 and 32 bits. The digitized signal comprises one or more of these digital words.
- the sampling rate and word length of A/D converters may vary and that the numbers given above do not place any limitations on the sampling rate or word length of the A/D converter which is included in the present invention.
- the cepstral analysis, or feature extraction, which is performed on the digitized signal, results in a representation of the signal which characterizes the relevant features of the spoken speech. It can be regarded as a data reduction procedure that retains vital characteristics of the speech and eliminates undesirable interference from irrelevant characteristics of the digitized signal, thus easing the decision-making process of computer 5.
- the cepstral analysis is performed as follows. First, the digitized samples, which make up the digitized signal, are divided into a sequence of sets. Each set includes samples taken during an interval of time which is of fixed duration. To illustrate, in a preferred embodiment of the present invention the interval of time is 15 milliseconds. If the duration of a spoken word is, for example, 150 milliseconds, then circuitry 3 will produce a sequence of ten sets of digitized samples.
- the prediction coefficients are then converted into cepstrum coefficients using the following recursion formula: ##EQU1## wherein c(n) represents the vector of cepstrum coefficients, a(n) represents the prediction coefficients, 1 ⁇ n ⁇ p, p is equal to the number of cepstrum coefficients, n represents an integer index, and k represents integer index.
- a(k) represents the k th prediction coefficient and c(n-k) represents the (n-k) th cepstrum coefficient.
- the vector of cepstrum coefficients is usually weighted by a sine window of the form
- cepstrum liftering This weighting is commonly referred to cepstrum liftering.
- the effect of this liftering process is to smooth the spectral peaks in the spectrum of the speech sample. It has also been found that cepstrum liftering suppresses the existing variations in the high and low cepstrum coefficients, and thus considerably improves the performance of the speech-recognition system.
- the result of the cepstral analysis is a sequence of smoothed log spectra wherein each spectrum corresponds to a discrete time interval from the period during which the word was spoken.
- pre-processing circuitry 3 For each spectrum, pre-processing circuitry 3 generates a respective data frame which comprises data points from the spectrum. The generation of a data frame per spectrum results in a time-ordered sequence of data frames. This sequence is passed to computer 5.
- each data frame contains twelve data points, wherein each of the data points represents the value of cepstrally-smoothed spectrum at a specific frequency.
- the data points are 32-bit digital words.
- the present invention places no limits on the number of data points per frame or the bit length of the data points; the number of data points contained in a data frame may be twelve or any other appropriate value, while the data point bit length may be 32 bits, 16 bits, or any other value.
- computer 5 may include a partitioning program for manipulating the sequence of data frames, a plurality of neural networks for computing polynomial expansions, and a selector which uses the outputs of the neural networks to classify the spoken word as a known word. Further details of the operation of computer 5 are given below.
- FIG. 2 shows a conceptual diagram of a speech-recognition system which utilizes the present invention.
- the speech-recognition system recognizes isolated spoken words.
- a microphone 1 receives speech input from a person who is speaking, and converts the input into electrical signals. The electrical signals are fed to pre-processing circuitry 3.
- Pre-processing circuitry 3 performs the functions described above regarding FIG. 1. Circuitry 3 performs A/D conversion and cepstral analysis, and circuitry 3 may include a combination of hardware and software components in order to perform its tasks.
- the output of pre-processing circuitry 3 takes the form of a sequence of data frames which represent the spoken word. Each data frame comprises a set of data points (32-bit words) which correspond to a discrete time interval from the period during which the word was spoken.
- the output of circuitry 3 is transmitted to computer 5.
- Computer 5 may be a general-purpose digital computer or a specific-purpose computer.
- Computer 5 comprises suitable hardware and/or software for performing a divide-and-conquer algorithm 11.
- Computer 5 further comprises a plurality of neural networks represented by 1st Neural Network 12, 2nd Neural Network 13, and Nth Neural Network 14.
- the output of each neural network 12, 13, and 14 is fed into a respective accumulator 15, 16, and 17.
- the outputs of accumulators 15-17 are fed into a selector 18, whose output represents the recognized speech word.
- Divide-and-conquer algorithm 11 receives the sequence of data frames from pre-processing circuitry 3, and from the sequence of data frames it generates a plurality of data blocks. In essence, algorithm 11 partitions the sequence of data frames into a set of data blocks, each of which comprises a subset of data frames from the input sequence. The details of the operation of divide-and-conquer algorithm 11 are given below in the section entitled "Divide-and-Conquer Algorithm". In a preferred embodiment, each of four data blocks includes five data frames from the input sequence.
- the first data block comprises the first data frame and every fourth data frame thereafter appearing in the sequence of data frames.
- the second data block comprises the second data frame and every fourth data frame thereafter in the sequence. And so on, successive data frames being allocated to each of the four data blocks, in turn, until each data block contains the same number of data frames. If the number of data frames turns out to be insufficient to provide each block with an identical number of data frames, then the last data frame in the sequence is copied into the remaining data blocks, so that each contains the same number of data frames.
- a means for distributing the data blocks is used to transfer the data blocks from algorithm 11 to the inputs of neural networks 12, 13, and 14. In turn, each data block is transferred simultaneously to neural networks 12, 13, and 14. While FIG. 2 shows only three neural networks in the speech-recognition system, it will be understood by one of ordinary skill that any number of neural network may be used if a particular application requires more or less than three neural networks.
- each neural network comprises a plurality of neurons.
- each of the neural networks may have been previously trained to recognize a specific set of speech phonemes.
- a spoken word comprises one or more speech phonemes.
- Neural networks 12, 13, and 14 act as classifiers that determine which word was spoken, based on the data blocks.
- a classifier makes a decision as to which class an input pattern belongs.
- each class is labeled with a known word, and data blocks are obtained from a predefined set of spoken words (the training set) and used to determine boundaries between the classes, boundaries which maximize the recognition performance for each class.
- a parametric decision method is used to determine whether a spoken word belongs to a certain class.
- the neural networks Upon receiving a data block, the neural networks compute their respective discriminant functions. If the discriminant function computed by a particular neural network is greater than the discriminant function of each of the other networks, then the data block belongs to the particular class corresponding to the neural network.
- each neural network defines a different class; thus, each neural network recognizes a different word.
- neural network 12 may be trained to recognize the word "one”
- neural network 13 may be trained to recognize the word "two”, and so forth. The method of training the neural networks is described below in the section entitled "Neural Network Training”.
- the discriminant functions computed by the neural networks of the present invention are based upon the use of a polynomial expansion and, in a loose sense, the use of an orthogonal function, such as a sine, cosine, exponential/logarithmic, Fourier transformation, Legendre polynomial, non-linear basis function such as a Volterra function or a radial basis function, or the like, or a combination of polynomial expansion and orthogonal functions.
- an orthogonal function such as a sine, cosine, exponential/logarithmic, Fourier transformation, Legendre polynomial, non-linear basis function such as a Volterra function or a radial basis function, or the like, or a combination of polynomial expansion and orthogonal functions.
- Equation 4 expresses a neuron output and the weight and gating functions associated with such neuron.
- the number of terms of the polynomial expansion to be used in a neural network is based upon a number of factors, including the number of available neurons, the number of training examples, etc. It should be understood that the higher order terms of the polynomial expansion usually have less significance than the lower order terms. Therefore, in a preferred embodiment, the lower order terms are chosen whenever possible, based upon the various factors mentioned above. Also, because the unit of measurement associated with the various inputs may vary, the inputs may need to be normalized before they are used.
- Equation 5 is an alternative representation of Equation 4, showing terms up to the third order terms.
- f1(i) is an index function in the range of n+1 to 2n
- f2(i,j) is an index function in the range of 2n+1 to 2n+(n)(n-1)/2
- f3(i) is in the range of 2n+1+(n)(n-1)/2 to 3n+(n)(n-1)/2.
- f4 through f6 are represented in a similar fashion.
- Equation 5 Equation 5.
- Equation 5 can be represented as follows: ##EQU4## wherein the variables have the same meaning as in Equation 4.
- N is any positive integer and represents the Nth neuron in the network.
- a neural network will generate an output for every data block it receives. Since a spoken word may be represented by a sequence of data blocks, each neural network may generate a sequence of outputs. To enhance the classification performance of the speech-recognition system, each sequence of outputs is summed by an accumulator.
- an accumulator is attached to the output of each neural network.
- accumulator 15 is responsive to output from neural network 12
- accumulator 16 is responsive to output from neural network 13
- accumulator 17 is responsive to output from neural network 14.
- the function of an accumulator is to sum the sequence of outputs from a neural network. This creates a sum which corresponds to the neural network, and thus the sum corresponds to a class which is labeled by a known word.
- Accumulator 15 adds each successive output from neural network 12 to an accumulated sum, and accumulators 16 and 17 perform the same function for neural networks 13 and 14, respectively. Each accumulator presents its sum as an output.
- the selector 18 uses the outputs of the accumulators to label the spoken word as a known word.
- Selector 18 receives the sums from the accumulators either sequentially or concurrently. In the former case, selector 18 receives the sums in turn from each of the accumulators, for example, receiving the sum from accumulator 15 first, the sum from accumulator 16 second, and so on; or, in the latter case, selector 18 receives the sums from accumulators 15, 16, and 17 concurrently. After receiving the sums, selector 18 then determines which sum is largest and assigns the corresponding known word label, i.e. the recognized speech word, to the output of the speech-recognition system.
- FIG. 4 of above-identified Related Invention No. 1 which is incorporated by reference, a conceptual diagram of a neural network is shown that can be utilized by an embodiment of the present invention.
- a plurality of network inputs x 1 , x 2 , . . . , x n are fed to input nodes 51, 52, . . . , 54 of the input layer.
- the output of each input node 51, 52, . . . , 54 in the input layer is distributed to each neuron of the hidden layer (of which only neurons 55, 56, and 58 are shown).
- the output of input node 51 is coupled to each of neurons 55, 56, and 58 and to all other neurons (not shown) in the hidden layer.
- the same connections are made regarding the outputs of input nodes 52, 54, and all other input nodes (not shown) in the input layer. In the example shown, only one layer of neurons is required in the hidden layer.
- Each neuron applies a gating function to each of the network inputs to produce corresponding gated inputs. Any given neuron may apply a different gating function to each different network input it receives. For example, neuron 55 applies a gating function g 11 to the network input it receives from input node 51; it applies a gating function g 21 to the network input it receives from input node 52; and so forth.
- the gated inputs are multiplied together by the multiplier of the neuron to form a product, which is then multiplied by a predetermined weight value to produce the neuron output.
- a predetermined weight value For example, in FIG. 4 of Related Invention No. 1 neuron 55, which happens to be responsible for generating the w 0 term of Equation 4 shown herein, multiplies its gated inputs together to form a product (which happens to be 1 because in this case the gating functions g 11 , g 21 , . . . , g n1 are all 0), which is multiplied by a weight w 0 to produce a corresponding output w 0 .
- Neuron 56 which happens to be responsible for generating the w 1 x 1 term of Equation 4 shown herein, multiplies its gated inputs together to form a product (which happens to be x 1 because in this case the gating functions are all 0 except the gating function that is applied to the x 1 output of input node 51), which is multiplied by a weight w 1 to produce a corresponding output x 1 w 1 .
- neuron 58 produces an output W N-1 x 1 g1N x 2 g 2N . . . x n g nN.
- the outputs of neurons 55, 56, . . . , 58 are summed together by a suitable summing means or function, such as summer 60, in the output layer to produce the output y of the neural network.
- FIG. 3 shows a flow of a method of operating the speech-recognition system illustrated in FIG. 2.
- box 20 a spoken word is received from the user by microphone 1 and converted to an electrical signal.
- A/D conversion is performed on the speech signal.
- A/D conversion is performed by pre-processing circuitry 9 of FIG. 2.
- cepstral analysis is performed on the digitized signal resulting from the A/D conversion.
- the cepstral analysis is, in a preferred embodiment, also performed by pre-processing circuitry 9 of FIG. 2.
- the cepstral analysis produces a sequence of data frames which contain the relevant features of the spoken word.
- a divide-and-conquer algorithm is used to generate a plurality of data blocks from the sequence of data frames.
- the divide-and-conquer algorithm is a method of partitioning the sequence of frames into a set of smaller, more manageable data blocks.
- one of the data blocks is broadcast to the neural networks. Upon exiting box 28, the procedure continues to box 30.
- each of the neural networks uses the data block in computing a discriminant function which is based on a polynomial expansion.
- a different discriminant function is computed by each neural network and generated as an output.
- the discriminant function computed by a neural network is determined prior to operating the speech-recognition system by using the method of training the neural network as shown in FIG. 6.
- each neural network is added to a sum, wherein there is one sum generated for each neural network.
- This step generates a plurality of neural network sums, wherein each sum corresponds to a neural network.
- decision box 34 a check is made to determine whether there is another data block to be broadcast to the neural networks. If so, the procedure returns to box 28. If not, the procedure proceeds to box 36.
- the selector determines which neural network sum is the largest, and assigns the known word label which corresponds to the sum as the output of the speech-recognition system.
- FIG. 4 illustrates data inputs and outputs of a divide-and-conquer algorithm of the present invention.
- the divide-and-conquer algorithm is a method of partitioning the sequence of data frames into a set of smaller data blocks.
- the input to the algorithm is the sequence of data frames 38, which, in the example illustrated, comprises data frames 51-70.
- the sequence of data frames 38 contains data which represents the relevant features of a speech sample.
- each data frame contains twelve data points, wherein each of the data points represents the value of a cepstrum coefficient or a function which is based on a cepstrum coefficient.
- the data points are 32-bit digital words. Each data frame corresponds to a discrete time interval from the period during which the speech sample was spoken.
- the present invention places no limits on the number of data points per frame or the bit length of the data points; the number of data points contained in a data frame may be twelve or any other value, while the data point bit length may be 32 bits, 16 bits, or any other value.
- each data point may be used to represent data other than values from a cepstrally-smoothed spectral envelope.
- each data point may represent a spectral amplitude at a specific frequency.
- the divide-and-conquer algorithm 11 receives each frame of the speech sample sequentially and assigns the frame to one of several data blocks. Each data block comprises a subset of data frames from the input sequence of frames. Data blocks 42, 44, 46, and 48 are output by the divide-and-conquer algorithm 11. Although FIG. 4 shows the algorithm generating only four data blocks, the divide-and-conquer algorithm 11 is not limited to generating only four data blocks and may be used to generate either more or less than four blocks.
- FIG. 5 shows a flow diagram of a method of executing a divide-and-conquer algorithm of the present invention.
- the divide-and-conquer algorithm partitions a sequence of data frames into a set of data blocks according to the following steps.
- the number of data blocks to be generated by the algorithm is first calculated.
- the number of data blocks to be generated is calculated in the following manner. First, the number of frames per data block and the number of frames in the sequence are received. Both the number of blocks and the number of frames are integers. Second, the number of frames is divided by the number of frames per block. Next, the result of the division operation is rounded up to the nearest integer, resulting in the number of data blocks to be generated by the divide-and-conquer algorithm. Upon exiting box 75, the procedure continues in box 77.
- the first frame of the sequence of frames is equated to a variable called the current frame.
- the current frame could be represented by either a software variable or, in hardware, as a register or memory device.
- a current block variable is equated to the first block.
- the current block may be a software variable which represents a data block.
- the current block may be one or more registers or memory devices.
- decision box 81 a check is made to determine whether or not there are more frames from the sequence of frames to be processed. If so, the procedure continues to box 83. If not, the procedure jumps to box 91.
- box 83 the next frame from the sequence of frames is received and equated to the current frame variable.
- box 85 the current block variable is equated to the next block, and then the current frame variable is assigned to the current block variable. Upon exiting box 85, the procedure proceeds to decision box 87.
- next block is set equal to the first block, and upon exiting box 89 the procedure returns to decision box 81.
- Box 91 is entered from decision box 81.
- a check is made to determine if the current block variable is equal to the last block. If so, the procedure terminates. If not, the current frame is assigned to each of the remaining data blocks which follow the current block, up to and including the last block, as previously explained above in the description of FIG. 2.
- the speech-recognition system of the present invention has principally two modes of operation: (1) a training mode in which examples of spoken words are used to train the neural networks, and (2) a recognition mode in which unknown spoken words are identified.
- a training mode in which examples of spoken words are used to train the neural networks
- a recognition mode in which unknown spoken words are identified.
- the user must train neural networks 12, 13, and 14 by speaking into microphone 1 all of the words that the system is to recognize.
- the training may be limited to several users speaking each word once. However, those skilled in the art will realize that the training may require any number of different speakers uttering each word more than once.
- the weights of each neuron circuit must be determined. This can be accomplished by the use of an appropriate training algorithm.
- one In implementing a neural network of the present invention, one generally selects the number of neurons or neuron circuits to be equal to or less than the number of training examples presented to the network.
- a training example is defined as one set of given inputs and resulting output(s).
- each word spoken into microphone 1 of FIG. 2 generates at least one training example.
- the training algorithm used for the neural networks is shown in FIG. 6.
- FIG. 6 shows a flow diagram of a method of training a neural network to recognize speech in accordance with a preferred embodiment of the present invention.
- box 93 an example of a known word is spoken into a microphone of the speech-recognition system.
- A/D conversion is performed on the speech signal.
- Cepstral analysis is performed on the digitized signal which is output from the A/D conversion.
- the cepstral analysis produces a sequence of data frames which contain the relevant features of the spoken word.
- Each data frame comprises twelve 32-bit words which represent the results of the cepstral analysis of a time slice of the spoken word. In a preferred embodiment, the duration of the time slice is 15 milliseconds.
- bit length of the words in the data frames may be 32 bits, 16 bits, or any other value.
- number of words per data frame and the duration of the time slice may vary, depending on the intended application of the present invention.
- a divide-and-conquer algorithm (the steps of which are shown in FIG. 5) is used to generate a plurality of blocks from the sequence of data frames.
- one of the blocks generated by the divide-and-conquer algorithm is selected.
- the input portion of a training example is set equal to the select block.
- box 101 if the neural network is being trained to recognize the selected block, then the output portion of the block is set to one, otherwise it is set to zero. Upon exiting box 101 the procedure continues with box 103.
- the training example is saved in memory of computer 5 (FIGS. 1 and 2). This allows a plurality of training examples to be generated and stored.
- decision box 105 a check is made to determine if there is another data block, generated from the current sequence of data frames, to be used in training the neural network. If so, the procedure returns to box 99. If not, the procedure proceeds to decision box 107.
- decision box 107 a determination is made to see if there is another spoken word to be used in the training session. If so, the procedure returns to box 93. If not, the procedure continues to box 109.
- a comparison is made between the number of training examples provided and the number of neurons in the neural network. If the number of neurons is equal to the number of training examples, a matrix-inversion technique may be employed to solve for the value of each weight. If the number of neurons is not equal to the number of training examples, a least-squares estimation technique is employed to solve for the value of each weight. Suitable least-squares estimation techniques include, for example, least-squares, extended least-squares, pseudo-inverse, Kalman filter, maximum-likelihood algorithm, Bayesian estimation, and the like.
- the various embodiments of the speech-recognition system as herein described utilize a divide-and-conquer algorithm to partition speech samples, and a suitable method for training neural networks which operate upon the outputs generated by the divide-and-conquer algorithm, such embodiments are insensitive to differences in speakers and not adversely affected by background noise.
- the various embodiments of the speech-recognition system as described herein include a neural network which does not require repetitive training and which yields a global minimum to each given set of input vectors; thus, the embodiments of the present invention require substantially less training time and are significantly more accurate than known speech-recognition systems.
Abstract
Description
α(n)=1+(L/2) sin (πn/L) Equation (2)
C(n)=c(n) α(n) Equation (3)
Claims (21)
Priority Applications (8)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US08/253,893 US5509103A (en) | 1994-06-03 | 1994-06-03 | Method of training neural networks used for speech recognition |
PCT/US1995/005002 WO1995034035A1 (en) | 1994-06-03 | 1995-04-25 | Method of training neural networks used for speech recognition |
DE19581663T DE19581663T1 (en) | 1994-06-03 | 1995-04-25 | Procedure for training neural networks that are used for speech recognition |
CN95193415A CN1151218A (en) | 1994-06-03 | 1995-04-25 | Method of training neural networks used for speech recognition |
AU24270/95A AU2427095A (en) | 1994-06-03 | 1995-04-25 | Method of training neural networks used for speech recognition |
GB9625250A GB2303237B (en) | 1994-06-03 | 1995-04-25 | Method of training neural networks used for speech recognition |
CA002190631A CA2190631C (en) | 1994-06-03 | 1995-04-25 | Method of training neural networks used for speech recognition |
US08/579,714 US5749072A (en) | 1994-06-03 | 1995-12-28 | Communications device responsive to spoken commands and methods of using same |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US08/253,893 US5509103A (en) | 1994-06-03 | 1994-06-03 | Method of training neural networks used for speech recognition |
Related Child Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US08/579,714 Continuation-In-Part US5749072A (en) | 1994-06-03 | 1995-12-28 | Communications device responsive to spoken commands and methods of using same |
Publications (1)
Publication Number | Publication Date |
---|---|
US5509103A true US5509103A (en) | 1996-04-16 |
Family
ID=22962136
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US08/253,893 Expired - Lifetime US5509103A (en) | 1994-06-03 | 1994-06-03 | Method of training neural networks used for speech recognition |
Country Status (7)
Country | Link |
---|---|
US (1) | US5509103A (en) |
CN (1) | CN1151218A (en) |
AU (1) | AU2427095A (en) |
CA (1) | CA2190631C (en) |
DE (1) | DE19581663T1 (en) |
GB (1) | GB2303237B (en) |
WO (1) | WO1995034035A1 (en) |
Cited By (29)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5621848A (en) * | 1994-06-06 | 1997-04-15 | Motorola, Inc. | Method of partitioning a sequence of data frames |
WO1997024710A1 (en) * | 1995-12-28 | 1997-07-10 | Motorola Inc. | Communications device responsive to spoken commands |
US5715821A (en) * | 1994-12-09 | 1998-02-10 | Biofield Corp. | Neural network method and apparatus for disease, injury and bodily condition screening or sensing |
US5724486A (en) * | 1995-08-21 | 1998-03-03 | Motorola Inc. | Method for structuring an expert system utilizing one or more polynomial processors |
US5745874A (en) * | 1996-03-04 | 1998-04-28 | National Semiconductor Corporation | Preprocessor for automatic speech recognition system |
US5905789A (en) * | 1996-10-07 | 1999-05-18 | Northern Telecom Limited | Call-forwarding system using adaptive model of user behavior |
US5912949A (en) * | 1996-11-05 | 1999-06-15 | Northern Telecom Limited | Voice-dialing system using both spoken names and initials in recognition |
US5917891A (en) * | 1996-10-07 | 1999-06-29 | Northern Telecom, Limited | Voice-dialing system using adaptive model of calling behavior |
US5995924A (en) * | 1997-05-05 | 1999-11-30 | U.S. West, Inc. | Computer-based method and apparatus for classifying statement types based on intonation analysis |
US6131089A (en) * | 1998-05-04 | 2000-10-10 | Motorola, Inc. | Pattern classifier with training system and methods of operation therefor |
US6167117A (en) * | 1996-10-07 | 2000-12-26 | Nortel Networks Limited | Voice-dialing system using model of calling behavior |
US6192353B1 (en) * | 1998-02-09 | 2001-02-20 | Motorola, Inc. | Multiresolutional classifier with training system and method |
US20020077817A1 (en) * | 2000-11-02 | 2002-06-20 | Atal Bishnu Saroop | System and method of pattern recognition in very high-dimensional space |
US20040015357A1 (en) * | 2001-05-08 | 2004-01-22 | Xiaobo Pi | Method and apparatus for rejection of speech recognition results in accordance with confidence level |
US20040172238A1 (en) * | 2003-02-28 | 2004-09-02 | Samsung Electronics Co., Ltd | Method of setting optimum-partitioned classified neural network and method and apparatus for automatic labeling using optimum-partitioned classified neural network |
US20050015251A1 (en) * | 2001-05-08 | 2005-01-20 | Xiaobo Pi | High-order entropy error functions for neural classifiers |
US7369993B1 (en) | 2000-11-02 | 2008-05-06 | At&T Corp. | System and method of pattern recognition in very high-dimensional space |
US20100217589A1 (en) * | 2009-02-20 | 2010-08-26 | Nuance Communications, Inc. | Method for Automated Training of a Plurality of Artificial Neural Networks |
US20150019214A1 (en) * | 2013-07-10 | 2015-01-15 | Tencent Technology (Shenzhen) Company Limited | Method and device for parallel processing in model training |
US9240184B1 (en) * | 2012-11-15 | 2016-01-19 | Google Inc. | Frame-level combination of deep neural network and gaussian mixture models |
US9786270B2 (en) | 2015-07-09 | 2017-10-10 | Google Inc. | Generating acoustic models |
KR20180094024A (en) * | 2016-03-28 | 2018-08-22 | 구글 엘엘씨 | Adaptive Artificial Neural Network Selection Techniques |
US10229672B1 (en) | 2015-12-31 | 2019-03-12 | Google Llc | Training acoustic models using connectionist temporal classification |
US10403291B2 (en) | 2016-07-15 | 2019-09-03 | Google Llc | Improving speaker verification across locations, languages, and/or dialects |
CN110767231A (en) * | 2019-09-19 | 2020-02-07 | 平安科技（深圳）有限公司 | Voice control equipment awakening word identification method and device based on time delay neural network |
US10706840B2 (en) | 2017-08-18 | 2020-07-07 | Google Llc | Encoder-decoder models for sequence to sequence mapping |
CN111723873A (en) * | 2020-06-29 | 2020-09-29 | 南方电网科学研究院有限责任公司 | Power sequence data classification method and device |
CN114038465A (en) * | 2021-04-28 | 2022-02-11 | 北京有竹居网络技术有限公司 | Voice processing method and device and electronic equipment |
US11380315B2 (en) * | 2019-03-09 | 2022-07-05 | Cisco Technology, Inc. | Characterizing accuracy of ensemble models for automatic speech recognition by determining a predetermined number of multiple ASR engines based on their historical performance |
Families Citing this family (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5864807A (en) * | 1997-02-25 | 1999-01-26 | Motorola, Inc. | Method and apparatus for training a speaker recognition system |
FR2881857B1 (en) * | 2005-02-04 | 2008-05-23 | Bernard Angeniol | IT TOOL FOR FORECAST |
CN100446029C (en) * | 2007-02-15 | 2008-12-24 | 杨志军 | Signal processing circuit for intelligent robot visual identifying system |
CN104021373B (en) * | 2014-05-27 | 2017-02-15 | 江苏大学 | Semi-supervised speech feature variable factor decomposition method |
WO2017197330A1 (en) * | 2016-05-13 | 2017-11-16 | Maluuba Inc. | Two-stage training of a spoken dialogue system |
CN108053025B (en) * | 2017-12-08 | 2020-01-24 | 合肥工业大学 | Multi-column neural network medical image analysis method and device |
Citations (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5365592A (en) * | 1990-07-19 | 1994-11-15 | Hughes Aircraft Company | Digital voice detection apparatus and method using transform domain processing |
US5404422A (en) * | 1989-12-28 | 1995-04-04 | Sharp Kabushiki Kaisha | Speech recognition system with neural network |
US5408588A (en) * | 1991-06-06 | 1995-04-18 | Ulug; Mehmet E. | Artificial neural network method and architecture |
US5408586A (en) * | 1990-08-03 | 1995-04-18 | E. I. Du Pont De Nemours & Co., Inc. | Historical database training method for neural networks |
Family Cites Families (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
FR2689292A1 (en) * | 1992-03-27 | 1993-10-01 | Lorraine Laminage | Voice recognition method using neuronal network - involves recognising pronounce words by comparison with words in reference vocabulary using sub-vocabulary for acoustic word reference |
DE69328275T2 (en) * | 1992-06-18 | 2000-09-28 | Seiko Epson Corp | Speech recognition system |
-
1994
- 1994-06-03 US US08/253,893 patent/US5509103A/en not_active Expired - Lifetime
-
1995
- 1995-04-25 DE DE19581663T patent/DE19581663T1/en not_active Ceased
- 1995-04-25 AU AU24270/95A patent/AU2427095A/en not_active Abandoned
- 1995-04-25 CA CA002190631A patent/CA2190631C/en not_active Expired - Fee Related
- 1995-04-25 GB GB9625250A patent/GB2303237B/en not_active Expired - Lifetime
- 1995-04-25 WO PCT/US1995/005002 patent/WO1995034035A1/en active Application Filing
- 1995-04-25 CN CN95193415A patent/CN1151218A/en active Pending
Patent Citations (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5404422A (en) * | 1989-12-28 | 1995-04-04 | Sharp Kabushiki Kaisha | Speech recognition system with neural network |
US5365592A (en) * | 1990-07-19 | 1994-11-15 | Hughes Aircraft Company | Digital voice detection apparatus and method using transform domain processing |
US5408586A (en) * | 1990-08-03 | 1995-04-18 | E. I. Du Pont De Nemours & Co., Inc. | Historical database training method for neural networks |
US5408588A (en) * | 1991-06-06 | 1995-04-18 | Ulug; Mehmet E. | Artificial neural network method and architecture |
Non-Patent Citations (2)
Title |
---|
R. G. Gallager, Information Theory and Reliable Communication, Wiley, New York, 1968, pp. 286 290. * |
R. G. Gallager, Information Theory and Reliable Communication, Wiley, New York, 1968, pp. 286-290. |
Cited By (52)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5749072A (en) * | 1994-06-03 | 1998-05-05 | Motorola Inc. | Communications device responsive to spoken commands and methods of using same |
US5621848A (en) * | 1994-06-06 | 1997-04-15 | Motorola, Inc. | Method of partitioning a sequence of data frames |
US5903863A (en) * | 1994-06-06 | 1999-05-11 | Motorola, Inc. | Method of partitioning a sequence of data frames |
US5715821A (en) * | 1994-12-09 | 1998-02-10 | Biofield Corp. | Neural network method and apparatus for disease, injury and bodily condition screening or sensing |
US5724486A (en) * | 1995-08-21 | 1998-03-03 | Motorola Inc. | Method for structuring an expert system utilizing one or more polynomial processors |
WO1997024710A1 (en) * | 1995-12-28 | 1997-07-10 | Motorola Inc. | Communications device responsive to spoken commands |
US5745874A (en) * | 1996-03-04 | 1998-04-28 | National Semiconductor Corporation | Preprocessor for automatic speech recognition system |
US6167117A (en) * | 1996-10-07 | 2000-12-26 | Nortel Networks Limited | Voice-dialing system using model of calling behavior |
US5917891A (en) * | 1996-10-07 | 1999-06-29 | Northern Telecom, Limited | Voice-dialing system using adaptive model of calling behavior |
US5905789A (en) * | 1996-10-07 | 1999-05-18 | Northern Telecom Limited | Call-forwarding system using adaptive model of user behavior |
US5912949A (en) * | 1996-11-05 | 1999-06-15 | Northern Telecom Limited | Voice-dialing system using both spoken names and initials in recognition |
US5995924A (en) * | 1997-05-05 | 1999-11-30 | U.S. West, Inc. | Computer-based method and apparatus for classifying statement types based on intonation analysis |
US6192353B1 (en) * | 1998-02-09 | 2001-02-20 | Motorola, Inc. | Multiresolutional classifier with training system and method |
US6131089A (en) * | 1998-05-04 | 2000-10-10 | Motorola, Inc. | Pattern classifier with training system and methods of operation therefor |
US7869997B2 (en) | 2000-11-02 | 2011-01-11 | At&T Intellectual Property Ii, L.P. | System and method of pattern recognition in very high dimensional space |
US20020077817A1 (en) * | 2000-11-02 | 2002-06-20 | Atal Bishnu Saroop | System and method of pattern recognition in very high-dimensional space |
US7006969B2 (en) | 2000-11-02 | 2006-02-28 | At&T Corp. | System and method of pattern recognition in very high-dimensional space |
US20060106607A1 (en) * | 2000-11-02 | 2006-05-18 | At&T Corp. | System and method of pattern recognition in very high-dimensional space |
US7216076B2 (en) | 2000-11-02 | 2007-05-08 | At&T Corp. | System and method of pattern recognition in very high-dimensional space |
US7369993B1 (en) | 2000-11-02 | 2008-05-06 | At&T Corp. | System and method of pattern recognition in very high-dimensional space |
US20080183471A1 (en) * | 2000-11-02 | 2008-07-31 | At&T Corp. | System and method of pattern recognition in very high dimensional space |
US20040015357A1 (en) * | 2001-05-08 | 2004-01-22 | Xiaobo Pi | Method and apparatus for rejection of speech recognition results in accordance with confidence level |
US20050015251A1 (en) * | 2001-05-08 | 2005-01-20 | Xiaobo Pi | High-order entropy error functions for neural classifiers |
US7072750B2 (en) | 2001-05-08 | 2006-07-04 | Intel Corporation | Method and apparatus for rejection of speech recognition results in accordance with confidence level |
US7346497B2 (en) * | 2001-05-08 | 2008-03-18 | Intel Corporation | High-order entropy error functions for neural classifiers |
US7444282B2 (en) * | 2003-02-28 | 2008-10-28 | Samsung Electronics Co., Ltd. | Method of setting optimum-partitioned classified neural network and method and apparatus for automatic labeling using optimum-partitioned classified neural network |
US20040172238A1 (en) * | 2003-02-28 | 2004-09-02 | Samsung Electronics Co., Ltd | Method of setting optimum-partitioned classified neural network and method and apparatus for automatic labeling using optimum-partitioned classified neural network |
US20100217589A1 (en) * | 2009-02-20 | 2010-08-26 | Nuance Communications, Inc. | Method for Automated Training of a Plurality of Artificial Neural Networks |
US8554555B2 (en) * | 2009-02-20 | 2013-10-08 | Nuance Communications, Inc. | Method for automated training of a plurality of artificial neural networks |
US9240184B1 (en) * | 2012-11-15 | 2016-01-19 | Google Inc. | Frame-level combination of deep neural network and gaussian mixture models |
US20150019214A1 (en) * | 2013-07-10 | 2015-01-15 | Tencent Technology (Shenzhen) Company Limited | Method and device for parallel processing in model training |
US9508347B2 (en) * | 2013-07-10 | 2016-11-29 | Tencent Technology (Shenzhen) Company Limited | Method and device for parallel processing in model training |
US9786270B2 (en) | 2015-07-09 | 2017-10-10 | Google Inc. | Generating acoustic models |
US11341958B2 (en) | 2015-12-31 | 2022-05-24 | Google Llc | Training acoustic models using connectionist temporal classification |
US10229672B1 (en) | 2015-12-31 | 2019-03-12 | Google Llc | Training acoustic models using connectionist temporal classification |
US11769493B2 (en) | 2015-12-31 | 2023-09-26 | Google Llc | Training acoustic models using connectionist temporal classification |
US10803855B1 (en) | 2015-12-31 | 2020-10-13 | Google Llc | Training acoustic models using connectionist temporal classification |
US11847561B2 (en) | 2016-03-28 | 2023-12-19 | Google Llc | Adaptive artificial neural network selection techniques |
KR20200131914A (en) * | 2016-03-28 | 2020-11-24 | 구글 엘엘씨 | Adaptive artificial neural network selection techniques |
US10878318B2 (en) * | 2016-03-28 | 2020-12-29 | Google Llc | Adaptive artificial neural network selection techniques |
KR20180094024A (en) * | 2016-03-28 | 2018-08-22 | 구글 엘엘씨 | Adaptive Artificial Neural Network Selection Techniques |
US11017784B2 (en) | 2016-07-15 | 2021-05-25 | Google Llc | Speaker verification across locations, languages, and/or dialects |
US11594230B2 (en) | 2016-07-15 | 2023-02-28 | Google Llc | Speaker verification |
US10403291B2 (en) | 2016-07-15 | 2019-09-03 | Google Llc | Improving speaker verification across locations, languages, and/or dialects |
US10706840B2 (en) | 2017-08-18 | 2020-07-07 | Google Llc | Encoder-decoder models for sequence to sequence mapping |
US11776531B2 (en) | 2017-08-18 | 2023-10-03 | Google Llc | Encoder-decoder models for sequence to sequence mapping |
US11380315B2 (en) * | 2019-03-09 | 2022-07-05 | Cisco Technology, Inc. | Characterizing accuracy of ensemble models for automatic speech recognition by determining a predetermined number of multiple ASR engines based on their historical performance |
CN110767231A (en) * | 2019-09-19 | 2020-02-07 | 平安科技（深圳）有限公司 | Voice control equipment awakening word identification method and device based on time delay neural network |
CN111723873A (en) * | 2020-06-29 | 2020-09-29 | 南方电网科学研究院有限责任公司 | Power sequence data classification method and device |
WO2022228067A1 (en) * | 2021-04-28 | 2022-11-03 | 北京有竹居网络技术有限公司 | Speech processing method and apparatus, and electronic device |
CN114038465B (en) * | 2021-04-28 | 2022-08-23 | 北京有竹居网络技术有限公司 | Voice processing method and device and electronic equipment |
CN114038465A (en) * | 2021-04-28 | 2022-02-11 | 北京有竹居网络技术有限公司 | Voice processing method and device and electronic equipment |
Also Published As
Publication number | Publication date |
---|---|
DE19581663T1 (en) | 1997-05-07 |
GB2303237A (en) | 1997-02-12 |
CN1151218A (en) | 1997-06-04 |
GB2303237B (en) | 1997-12-17 |
WO1995034035A1 (en) | 1995-12-14 |
GB9625250D0 (en) | 1997-01-22 |
CA2190631A1 (en) | 1995-12-14 |
AU2427095A (en) | 1996-01-04 |
CA2190631C (en) | 2000-02-22 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US5509103A (en) | Method of training neural networks used for speech recognition | |
US5621848A (en) | Method of partitioning a sequence of data frames | |
US5638486A (en) | Method and system for continuous speech recognition using voting techniques | |
US5596679A (en) | Method and system for identifying spoken sounds in continuous speech by comparing classifier outputs | |
US5594834A (en) | Method and system for recognizing a boundary between sounds in continuous speech | |
US5734793A (en) | System for recognizing spoken sounds from continuous speech and method of using same | |
US6021387A (en) | Speech recognition apparatus for consumer electronic applications | |
US6219642B1 (en) | Quantization using frequency and mean compensated frequency input data for robust speech recognition | |
Qi et al. | Voiced-unvoiced-silence classifications of speech using hybrid features and a network classifier | |
US4783804A (en) | Hidden Markov model speech recognition arrangement | |
US5651094A (en) | Acoustic category mean value calculating apparatus and adaptation apparatus | |
US5832181A (en) | Speech-recognition system utilizing neural networks and method of using same | |
WO1993013519A1 (en) | Composite expert | |
CN109192200A (en) | A kind of audio recognition method | |
Bhardwaj et al. | Deep neural network trained Punjabi children speech recognition system using Kaldi toolkit | |
JP2898568B2 (en) | Voice conversion speech synthesizer | |
Devi et al. | A novel approach for speech feature extraction by cubic-log compression in MFCC | |
Chauhan et al. | Speech recognition and separation system using deep learning | |
US6275799B1 (en) | Reference pattern learning system | |
Jagadeeshwar et al. | ASERNet: Automatic speech emotion recognition system using MFCC-based LPC approach with deep learning CNN | |
Nijhawan et al. | Real time speaker recognition system for hindi words | |
JP3029803B2 (en) | Word model generation device for speech recognition and speech recognition device | |
Mahkonen et al. | Cascade processing for speeding up sliding window sparse classification | |
JPH05241593A (en) | Time-series signal processor | |
JPH0318983A (en) | Pattern collating system |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: MOTOROLA, INC., ILLINOISFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:WANG, SHAY-PING THOMAS;REEL/FRAME:007021/0527Effective date: 19940527 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
FPAY | Fee payment |
Year of fee payment: 8 |
|
FPAY | Fee payment |
Year of fee payment: 12 |
|
AS | Assignment |
Owner name: MOTOROLA MOBILITY, INC, ILLINOISFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MOTOROLA, INC;REEL/FRAME:025673/0558Effective date: 20100731 |
|
AS | Assignment |
Owner name: MOTOROLA MOBILITY LLC, ILLINOISFree format text: CHANGE OF NAME;ASSIGNOR:MOTOROLA MOBILITY, INC.;REEL/FRAME:029216/0282Effective date: 20120622 |
|
AS | Assignment |
Owner name: GOOGLE TECHNOLOGY HOLDINGS LLC, CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MOTOROLA MOBILITY LLC;REEL/FRAME:034474/0001Effective date: 20141028 |
US9110975B1 - Search result inputs using variant generalized queries - Google Patents
Search result inputs using variant generalized queries Download PDFInfo
- Publication number
- US9110975B1 US9110975B1 US11/556,100 US55610006A US9110975B1 US 9110975 B1 US9110975 B1 US 9110975B1 US 55610006 A US55610006 A US 55610006A US 9110975 B1 US9110975 B1 US 9110975B1
- Authority
- US
- United States
- Prior art keywords
- query
- user
- document
- model
- queries
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active, expires
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/30—Information retrieval; Database structures therefor; File system structures therefor of unstructured textual data
- G06F16/33—Querying
- G06F16/332—Query formulation
- G06F16/3325—Reformulation based on results of preceding query
-
- G06F17/30646—
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/951—Indexing; Web crawling techniques
Definitions
- the present disclosure relates to ranking of search results.
- Internet search engines aim to identify documents or other items that are relevant to a user's needs and to present the documents or items in a manner that is most useful to the user. Such activity often involves a fair amount of mind-reading—inferring from various clues what the user wants. Certain clues may be user specific. For example, knowledge that a user is making a request from a mobile device, and knowledge of the location of the device, can result in much better search results for such a user.
- Clues about a user's needs may also be more general. For example, search results can have an elevated importance, or inferred relevance, if a number of other search results link to them. If the linking results are themselves highly relevant, then the linked-to results may have a particularly high relevance.
- Such an approach to determining relevance is premised on the assumption that, if authors of web pages felt that another web site was relevant enough to be linked to, then web searchers would also find the site to be particularly relevant. In short, the web authors “vote up” the relevance of the sites.
- particular inputs may be generated or analyzed to affect the presentation of search results.
- such inputs may increase the relevance that a system will assign to a particular result in a particular situation, thus boosting the score or other indicator of relevance for the result (and perhaps the relevance of the result in the context of a particular query).
- Such an approach may benefit a user by providing them with search results that are more likely to match their needs.
- users can learn more using the internet, can find more relevant information more quickly, and will thus achieve more in their work or elsewhere, and will be more likely to use such a system again.
- a provider of such services may also benefit, by providing more useful services to users, and by thereby inducing more traffic to their search services.
- Such additional traffic may provide an operator with additional revenue, such as in the form of advertising that accompanies the searching and the delivery of search results.
- one aspect of the subject matter described in this specification can be embodied in a method that includes for a first document identified as a search result of a user user-submitted query, generalizing the user-submitted query by forming one or more variants of the user-submitted query to generate one or more other queries, each of the one or more other queries being different from the user-submitted query.
- a generalized quality of result statistic is generated for the first document from respective data associated with each of the other queries, each respective data being indicative of user behavior relative to the first document as a search result for the associated other query.
- the generalized quality of result statistic is provided as the quality of result statistic input to the document ranking process for the first document and the user-submitted query.
- Other embodiments of this aspect include corresponding systems, apparatus, and computer program products.
- the data can be aggregated click data.
- the data associated with each of the other queries can be weighted.
- the quality of result statistic can be modified based on a level of certainty for each of the generated one or more queries.
- a variant of the user-submitted query is formed by performing one or more of: replacing one or more terms in the user-submitted query with synonyms, changing an order of one or more terms in the user-submitted query, or replacing one or more query terms in user-submitted query with stems.
- Particular embodiments of the described subject matter can be implemented to realize one or more of the following advantages.
- User queries can be generalized to other queries in order to take advantage of user behavior data associated with the other queries.
- Patterns of user interaction can be identified that indicate a user has refined a query to obtain a desired document. Based on the patterns of user interaction, user behavior data associated with the refined query can be propagated to earlier queries in the user's session. Data associated with prior queries indicative of user behavior can be combined to create a quality of result statistic that can be input to a document ranking A document's rank can be boosted in a result list for a user query in which there is no model data. User behavior statistics associated with a query having a small amount of aggregated user behavior data can take advantage of the user behavior data associated with a similar query.
- FIG. 1 shows an example information retrieval system in which the relevance of results obtained for submitted search queries can be improved.
- FIG. 2 shows example components of an information retrieval system.
- FIG. 3 shows another example information retrieval system.
- FIG. 4 is an illustration of a semantic network of user queries.
- FIG. 5A is a diagram illustrating the building of a model for use with a search engine.
- FIG. 5B is a diagram illustrating model use.
- FIG. 5C is a flow chart describing a method of using data from a model to improve a document ranking.
- FIG. 5D is diagram illustrating a generalization system for providing input to a ranking.
- FIG. 5E is a flow chart of a method for generalizing a query.
- FIG. 5 E 1 is a diagram of generalization of a query through removal of optional terms.
- FIG. 5 E 2 is a flow chart of a method for optional term generalization.
- FIG. 5F is a diagram illustrating the generalization of a query through the removal of one or more stop words.
- FIG. 5G is flow chart of a method for modifying a model on behalf of a query containing one or more stop words.
- FIG. 5H is a flow chart of a method for stop word query generalization.
- FIG. 5I is a diagram illustrating the generalization of a query through the use of variants.
- FIG. 5J is a flow chart of a method for variant query generalization.
- FIG. 5K is a diagram illustrating partial query matching generalization.
- FIG. 5L is flow chart of a method for partial query matching.
- FIG. 5O is a diagram illustrating a method of identifying related tuples.
- FIG. 5P is a flow chart of a method for identifying related tuples.
- FIG. 6 is a schematic diagram of an example computer system.
- FIG. 1 shows an example system 1000 for improving the relevance of results obtained from submitting search queries as can be implemented in an internet, intranet, or other client/server environment.
- the system 1000 is an example of an information retrieval system in which the systems, components and techniques described below can be implemented. Although several components are illustrated, there may be fewer or more components in the system 1000 . Moreover, the components can be distributed on one or more computing devices connected by one or more networks or other suitable communication mediums.
- a user 1002 can interact with the system 1000 through a client device 1004 ( 1004 a , 1004 b , 1004 c ) or other device.
- the client device 1004 can be a computer terminal within a local area network (LAN) or wide area network (WAN).
- the client device 1004 can include a random access memory (RAM) 1006 (or other memory and/or a storage device) and a processor 1008 .
- the processor 1008 is structured to process instructions within the system 1000 .
- the processor 1008 is a single-threaded processor.
- the processor 1008 is a multi-threaded processor.
- the processor 1008 can include multiple processing cores and is structured to process instructions stored in the RAM 1006 (or other memory and/or a storage device included with the client device 1004 ) to display graphical information for a user interface.
- a user 1002 a can connect to the search engine 1030 within a server system 1014 to submit a query 1015 .
- a client-side query signal 1010 a is sent into a network 1012 and is forwarded to the server system 1014 as a server-side query signal 1010 b .
- Server system 1014 can be one or more server devices in one or more locations.
- a server device 1014 includes a memory device 1016 , which can include the search engine 1030 loaded therein.
- a processor 1018 is structured to process instructions within the device 1014 . These instructions can implement one or more components of the search engine 1030 .
- the processor 1018 can be a single-threaded processor or a multi-threaded processor, and can include multiple processing cores.
- the processor 1018 can process instructions stored in the memory 1016 related to the search engine 1030 and can send information to the client device 1004 , through the network 1012 , to create a graphical presentation in a user interface of the client device 1004 (e.g., a search results web page displayed in a web browser).
- the server-side query signal 1010 b is received by the search engine 1030 .
- the search engine 1030 uses the information within the user query 1015 (e.g. query terms) to find relevant documents.
- the search engine 1030 can include an indexing engine 1020 that actively searches a corpus (e.g., web pages on the Internet) to index the documents found in that corpus, and the index information for the documents in the corpus can be stored in an index database 1022 .
- This index database 1022 can be accessed to identify documents related to the user query 1015 .
- an electronic document (which for brevity will simply be referred to as a document) does not necessarily correspond to a file.
- a document can be stored in a portion of a file that holds other documents, in a single file dedicated to the document in question, or in multiple coordinated files.
- a document can be stored in a memory without having first been stored in file.
- the search engine 1030 can include a ranking engine 1052 to rank the documents related to the user query 1015 .
- the ranking of the documents can be performed using traditional techniques for determining an information retrieval (IR) score for indexed documents in view of a given query.
- IR information retrieval
- the relevance of a particular document with respect to a particular search term or to other provided information may be determined by any appropriate technique. For example, the general level of back-links to a document that contains matches for a search term may be used to infer a document's relevance.
- a document is linked to (e.g., is the target of a hyperlink) by many other relevant documents (e.g., documents that also contain matches for the search terms)
- it can be inferred that the target document is particularly relevant. This inference can be made because the authors of the pointing documents presumably point, for the most part, to other documents that are relevant to their audience.
- the pointing documents are in turn the targets of links from other relevant documents, they can be considered more relevant, and the first document can be considered particularly relevant because it is the target of relevant (or even highly relevant) documents.
- Such a technique may be the determinant of a document's relevance or one of multiple determinants.
- the technique is exemplified in the GOGGLE® PageRank system, which treats a link from one web page to another as an indication of quality for the latter page, so that the page with the most such quality indicators wins.
- Appropriate techniques can also be taken to identify and eliminate attempts to cast false votes so as to artificially drive up the relevance of a page.
- the search engine 1030 can forward the final, ranked result list within a server-side search results signal 1028 a through the network 1012 .
- a client-side search results signal 1028 b can be received by the client device 1004 a where the results can be stored within the RAM 1006 and/or used by the processor 1008 to display the results on an output device for the user 1002 a.
- FIG. 2 shows example components of an information retrieval system. These components can include an indexing engine 2010 , a scoring engine 2020 , a ranking engine 2030 , and a rank modifier engine 2070 .
- the indexing engine 2010 can function as described above for the indexing engine 1020 .
- the scoring engine 2020 can generate scores for document results based on many different features, including content-based features that link a query to document results, and query-independent features that generally indicate the quality of documents results.
- the content-based features can include aspects of document format, such as query matches to title or anchor text in an HTML (Hyper Text Markup Language) page.
- the query-independent features can include aspects of document cross-referencing, such as the PageRank of the document or the domain.
- the ranking engine 2030 can produce a ranking of document results 2040 for display to a user based on IR scores received from the scoring engine 2020 and one or more signals from the rank modifier engine 2070 .
- a tracking component 2050 can be used to record information regarding user behavior such as individual user selections of the results presented in the ranking 2040 .
- the tracking component 2050 can be embedded JavaScript code included in a web page ranking 2040 that identifies user selections (e.g., mouse clicks) of individual document results and also identifies when the user returns to the results page, thus indicating the amount of time the user spent viewing the selected document result.
- the tracking component 2050 can be proxy system through which user selections of the document results are routed, or the tracking component can include pre-installed software at the client (e.g., a toolbar plug-in to the client's operating system).
- the client e.g., a toolbar plug-in to the client's operating system.
- Other implementations are also possible, such as by using a feature of a web browser that allows a tag/directive to be included in a page, which requests the browser to connect back to the server with message(s) regarding link(s) clicked by the user.
- the recorded information can be stored in result selection logs 2060 .
- the recorded information can include log entries that indicate, for each user selection, the query (Q), the document (D), the user's dwell time (T) on the document, the language (L) employed by the user, and the country (C) where the user is likely located (e.g., based on the server used to access the IR system).
- Other information indicative of user behavior can also be recorded, such as user interactions with a presented ranking, including negative information, such as the fact that a document result was presented to a user, but was not clicked, position(s) of click(s) in the user interface, information about the session (e.g., existence and type of previous clicks, and post-click session activity), IR scores of clicked results, IR scores of all results shown before click, the titles and snippets shown to the user before the click, the user's cookie, cookie age, IP (Internet Protocol) address, user agent of the browser, etc.
- negative information such as the fact that a document result was presented to a user, but was not clicked, position(s) of click(s) in the user interface, information about the session (e.g., existence and type of previous clicks, and post-click session activity), IR scores of clicked results, IR scores of all results shown before click, the titles and snippets shown to the user before the click, the user's cookie, cookie age, IP (Internet Protocol) address, user
- the time (T), also known as “click data”, can be measured as the time between the initial click through to the document result until the time the user comes back to the main page and clicks on another document result.
- an assessment is made about the time (T) regarding whether this time indicates a longer view of the document result or a shorter view of the document result, since longer views are generally indicative of quality or relevance for the clicked through result.
- This assessment about the time (T) can further be made in conjunction with various weighting techniques.
- the components shown in FIG. 2 can be combined in various manners and implemented in various system configurations.
- the scoring engine 2020 and the ranking engine 2030 can be merged into a single ranking engine, such as the ranking engine 1052 of FIG. 1 .
- the rank modifier engine 2070 and the ranking engine 2030 can also be merged, and in general, a ranking engine includes any software component that generates a ranking of document results after a query.
- a ranking engine can be included in a client system in addition to (or rather than) in a server system.
- FIG. 3 shows another example information retrieval system.
- a server system 3050 includes an indexing engine 3060 and a scoring/ranking engine 3070 .
- a client system 3000 includes a user interface for presenting a ranking 3010 , a tracking component 3020 , result selection logs 3030 and a ranking/rank modifier engine 3040 .
- the client system 3000 can include a company's enterprise network and personal computers, in which a browser plug-in incorporates the ranking/rank modifier engine 3040 .
- the scoring/ranking engine 3070 can return the search results along with either an initial ranking or the actual IR scores for the results.
- the browser plug-in can then re-rank the results locally based on tracked page selections for the company-specific user base.
- FIG. 4 is an illustration of a semantic network 4000 of user queries.
- Generalization of a query entails identifying one or more other queries that stand for a similar concept or are somehow related to the query.
- Generalizing a user query allows a ranking returned by a search engine in response to a query to be improved based on data indicative of user behavior associated with similar or related queries. This is useful when there is little or no data associated with a user's query.
- Generalization can be illustrated with reference to the semantic network 4000 .
- the network 4000 illustrates relationships between user submitted queries in terms of conceptual distance, where thicker lines represent similar concepts and thinner lines represent distant concepts. For example, query 4002 “Toyota celica” is conceptually close to query 4000 “celica” and to query 4014 “the Toyota celica”. But the query 4002 is conceptually distant from query 4008 “moped”. In various implementations, data from queries that are related or conceptually closer are given more weight than data from other queries in generalization.
- FIG. 5A is a diagram 5100 illustrating the building of a model 5102 for use with a search engine.
- the model 5102 is one or more databases that aggregate information indicative of user behavior on at least a per query and per document basis.
- Model 5102 information can be used as input to a process that ranks documents to enhance the ranking.
- the model 5102 information can be used as input to interactive or non interactive Internet search engines, image search engines, video search engines, book search engines, consumer product search engines, other suitable processes capable of ranking documents, and combinations of these.
- a document is referenced by a universal resource locator (URL); however other types of references are possible.
- a document can be a web page on the word wide web referenced by a URL.
- URL universal resource locator
- a user can submit a query 5106 a “celica”, for example, to a search engine through a graphical user interface 5109 , as might be presented on a personal computer, a mobile telephone, or other device.
- a query includes one or more terms.
- a query of a recipe database can include the terms “fast”, “fiber” and “switch”.
- terms can include special characters, numbers, mathematical expressions, Boolean expressions, slang terms, names, titles, images, sounds, videos, other suitable query terms, and combinations of these.
- query terms can be in more than one language.
- a search engine In response to the user selecting the search button 5122 , for example, a search engine returns a ranking or result list 5108 which is an ordered list of references to documents that satisfy the query 5106 a .
- the result list 5108 includes a set of document references URL A, URL B, URL C 5110 a , and URL D.
- the result list 5108 can contain the text of the URL itself, a short description of the information found within each document, a snapshot of the portion of the document which contains the query, other suitable information, or a combination of these.
- the selected URL can cause the user interface 5109 (e.g., a web browser) to present the associated document 5112 . Once the user has finished viewing the document, the user can navigate back to the result list 5108 .
- the model 5102 can be built as users interact with search engines. For example, a timer can track how long a user views or “dwells” on the document 5112 . The amount of time 5104 is referred to as “click data”. For example, a longer time spent dwelling on a document, termed a “long click”, can indicate that a user found the document to be relevant for their query. A brief period viewing a document, termed a “short click”, can be interpreted as a lack of document relevance.
- the click data 5114 is a count of each click type (e.g., long, medium, short) for a particular query 5106 and document 5110 combination.
- Aggregated click data from model queries for a given document can be used to create a quality of result statistic for that document and can be used to enhance a ranking of that document.
- a quality of result statistic can be a weighted average of the count of long clicks for a given document and query.
- a search engine or other process creates a record 5116 in the model 5102 for documents that are selected by users in response to a query.
- Each record 5116 within the model 5102 (herein referred to as a tuple: ⁇ document, query, data>) is at least a combination of a query 5106 submitted by users, a document reference 5110 selected by users in response to that query, and an aggregation of click data 5114 for all users that select the document reference 5110 in response to the query 5106 .
- the aggregate click data can be viewed as an indication of document relevance.
- model data can be location-specific (e.g. country, state, etc) or language-specific. For example, a country-specific tuple would include the country from where the user query originated from in whereas a language-specific tuple would include the language of the user query. Other extensions of model data are possible.
- FIG. 5B is a diagram 5150 illustrating model use.
- Model data 5102 can be used to reorder the initial result list 5108 to take into account which documents users have found relevant for a given query 5106 .
- a document's ranking in the result list 5108 can potentially be improved or worsened based on the aggregated click data 5114 .
- another user can submit the same query 5106 a “celica” to a user interface 5152 .
- the result list 5154 for the query is reordered to reflect data stored in model 5102 .
- URL C 5110 a now appears higher in the new result list 5154 .
- the same query can generate a different ranking of document references over time.
- a user submits the query 5106 c “Toyota celica” to a user interface 5156 , rather than the query 5106 a “celica”, there is no model 5102 information for this query as of yet. In this case, the search engine would return a document ranking without the benefit of user behavior data. However, if the search engine recognized that the query 5106 c “Toyota celica” is topically the same as the query 5106 a “celica” (or vice versa) this would allow the search engine to take advantage of the user behavior data 5114 a in the model 5102 for the query “celica” 5106 a . This is an example of generalizing a query.
- FIG. 5C is a flow chart describing a method 5200 of using data from a model (e.g., model 5102 ) to improve a document ranking
- a user query is generalized to one or more other queries associated with a document in the document ranking (step 5202 ). For example, for a given document in an initial ranking, there are zero or more tuples associated with that document in a model. If none of the tuples has a query that matches the user query, the user query is generalized so that one or more potential matches of model queries can be found.
- Different generalization techniques can be used alone or in combination; the removal of optional terms, simplification of one or more terms to their stem form, or replacement of one or more terms with a synonym, for instance.
- User behavior data is combined from the matching queries to create a quality of result statistic for the document (step 5204 ).
- the quality of result statistic can be modified based on a level of certainty in the generalization. For example, the statistic might be down-weighted or demoted based on belief in the accuracy of the match.
- the quality of result statistic is then provided as input to enhance a document ranking (step 5206 ).
- FIG. 5D is diagram illustrating a generalization system 5250 for providing input to a ranking
- a user query 5106 is submitted to a ranking component 5252 (e.g., by way of a search engine user interface, as described above).
- the ranking component 5252 generates an initial ranking 5254 of documents 5262 based upon the user query 5106 .
- each document in the initial ranking 5254 has an associated score (e.g., an IR score) determined by the ranking component 5252 that specifies the document's position in the initial ranking 5254 .
- the ranking component 5252 can use any method of determining the score, including ranking methods described above in relation to FIG. 5A .
- the initial ranking 5254 is provided to a rank modifier component 5256 .
- the rank modifier 5256 determines a quality of result statistic for a given document based on model 5102 data for the user query 5106 and the given document. If the user query 5106 does not match a query in the model 5102 for the given document, a query generalizer component 5260 provides one or more generalized forms of the query 5106 to the rank modifier 5256 which the rank modifier 5256 can use to obtain model 5102 data for the document.
- the generalized queries are considered topically similar to the user query 5106 and will potentially match records in the model 5102 for the given document.
- components can be divided into more components or integrated into fewer components. Moreover, components can interact on a single computing device or a plurality of computing devices connected by one or more networks or communication channels.
- FIG. 5E is a flow chart of a method 5300 for generalizing a query.
- a document is selected having an initial ranking (step 5302 ).
- the initial ranking can be based on the processing of a user query 5106 by the ranking component 5252 .
- the selected document could be obtained from an initial ranking 5254 by the rank modifier component 5256 .
- it is determined (e.g., by the rank modifier 5256 ) if there is an exact match between the user query and a tuple for the selected document in a model (step 5304 ). If so, a quality of result statistic is determined based on the model data (step 5306 ) and additional documents can be considered for generalization (step 5302 ). Otherwise, one or more attempts are made to generalize the user query such that there is a match between the generalized user query and one or more tuples for the selected document in a model.
- One generalization technique is to remove one or more so-called “stop words” from the user query.
- stop words are common words that typically carry no inherent meaning by themselves or whose removal does not change the topicality of the query. Examples of stop words are adverbs, conjunctions, and forms of the verb “be”.
- the fewest possible number of stop words are removed from the user query in order to obtain a match with a query associated with the selected document in the model. If there is a match (step 5308 ), the quality of result statistic is determined (step 5306 ) based on data from one or more matching tuples and additional documents can be considered for generalization (step 5302 ). Otherwise, a different generalization technique can be attempted.
- the user query is can also be generalized by removing one or more optional terms from the user query.
- optional terms are terms that do not change the concept of a query if they are removed from the query.
- the optional term “Toyota” is removed from the query 5106 c to create a generalized query 5106 a .
- the fewest possible number of optional terms are removed from the user query in order to obtain a match with a query associated with the selected document. If there is a match (step 5980 ), the quality of result statistic is determined (step 5306 ) based on data from one or more matching tuples and additional documents can be considered for generalization (step 5302 ). Otherwise, a different generalization technique can be attempted.
- a synonym is a term that is topically similar to a term in the user query. For example, “car” is a synonym of “auto”, and “photograph” is a synonym of “picture”.
- a synonym of a query term can be determined using, for instance, the technique described in U.S. patent application Ser. No. 11/096,726, entitled DETERMINING QUERY TERM SYNONYMS WITHIN QUERY CONTEXT, filed Mar. 31, 2005, the contents of which are incorporated herein in their entirety.
- the fewest possible number of terms in the user query are replaced synonyms order to obtain a match with a query associated with the selected document in the model.
- step 5310 If there is a match (step 5310 ), the quality of result statistic is determined (step 5306 ) based on data from one or more matching tuples and additional documents can be considered for generalization (step 5302 ). Otherwise, a different generalization technique can be attempted.
- Another generalization technique is to replace one or more terms in the user query with their stems.
- a stem is a different pluralization or form of speech of a term in the user query.
- the term “matches” contains the stem term “match”.
- the fewest possible number of user query terms are replaced with their stems in order to match a query associated with a document in the model. If there is a match (step 5312 ), the quality of result statistic is determined (step 5306 ) based on data from one or more matching tuples and additional documents can be considered for generalization (step 5302 ). Otherwise, a different generalization technique can be attempted.
- Another generalization technique is to reorder one or more terms in the user query. That is, this technique creates a generalized query that is a permutation of the user query. A permutation is only applicable to a user query comprised of more than one term. For example, the query “discount airfare Orlando” can be rearranged to read “Orlando discount airfare”, “discount Orlando airfare”, etc. If a permutation of the user query matches one or more tuples within the model (step 5314 ), the data from the tuple(s) is used to determine the quality of result statistic (step 5306 ) and additional documents can be considered for generalization (step 5302 ). In various implementations, permutations of other generalized queries can also be attempted. Otherwise, a different generalization technique can be attempted.
- Another generalization technique is to match part of the user query with part of a query associated with the selected document in the model.
- a partial query match occurs when one or more user query terms match a one or more terms of one or more model queries for a selected document. For example, the query “election candidates Seattle Wash.” is a partial query match of the query “mayoral candidates Seattle”, because both queries contain the terms “candidates” and “Seattle”. If any portion of the user query is found to be a match for a portion of one or more model queries (step 5316 ), the data from the one or more matching tuples used to determine the quality of result statistic (step 5306 ) and additional documents can be considered for generalization (step 5302 ).
- step 5302 If none of the generalization techniques produces a matching query, the process can be repeated for other documents (step 5302 ).
- generalizations occur in a particular sequence in this illustration, other sequences are possible including sequences with fewer or more generalization techniques. Moreover, one or more of the generalization techniques can be performed in parallel rather than serially.
- a user query can be generalized in a plurality of ways such that the “best” generalization is determined. For a given user query and document, a plurality of generalizations (including combinations of generalizations) are determined for the user query. The generalized query with the highest score is considered the best match for the user query.
- a plurality of generalizations can be considered by computing a so-called match belief score for each query in a model for a given document.
- the match belief score is based on the types of generalizations required to match a user query to one in the model for the document in question.
- the match belief score is a measure of the similarity between the user query and a query associated with the document in the model. For example, the match belief can be demoted for any generalization required to match the two queries. Therefore, a match that only requires a synonym substitution will be considered better than one that requires a synonym substitution and a stop word removal, for example.
- the more generalizations that are applied the further the match belief score is degraded. After the match belief scores are computed for all queries, the one with the highest score is chosen as the best match for the input query.
- the match belief score can be used to down-weight or demote data associated with the chosen query, the quality of result statistic, or both. For example, if the match belief score is low, these values can be down weighted to reflect a low level of confidence in the matched query, and vice versa.
- TABLE 1 lists queries associated with a document in the model and corresponding match belief scores given the user query “pictures of fall color”.
- a match belief score between 0.0 and 1.0 is determined for each query associated with the document (e.g., 0.0 for no match, 1.0 for an exact match).
- FIG. 5 E 1 is a diagram of generalization of a query through removal of optional terms.
- optional terms are terms whose removal from a query will not change the query's concept.
- the query 5407 “Toyota celica hatchback” has the optional terms “Toyota” and “hatchback”
- the query 5407 can be generalized by removing one or both of the terms.
- Generalized query 5403 “celica hatchback” was created by removing the optional term “Toyota” where as generalized query 5405 “celica” was created by removing both optional terms.
- FIG. 5 E 2 is a flow chart of a method for optional term generalization. If a user query does not match a ⁇ document, query, data> tuple in the model, the query generalizer component 5260 (or another process) is invoked to remove one or more optional terms from the user query (step 5409 ). Next, it is determined whether or not the generalized user query matches a tuple in the model (step 5411 ). In various implementations, as few optional terms as possible are removed from the user query to obtain a match. If no match is found, one or more additional or alternative optional terms can be removed from the user query (step 5409 ). Otherwise, a quality of result statistic is determined based on one or more matching tuple's data (step 5413 ).
- the quality of result statistic can be modified to reflect a level of certainty in the generalized query (step 5417 ).
- a level of certainty can be based on similarity in meaning between the modified query and the user query as determined using a probabilistic model such as a Bayesian belief network or through other techniques. Other techniques for determining a level of certainty are possible.
- FIG. 5F is a diagram 5400 illustrating the generalization of a query through the removal of one or more stop words.
- Stop words are words in a user query that do not add to the topicality of the query. For example, “sailing on the Charles River”, “sailing the Charles River”, and “sailing along the Charles River” all contain the same core meaning. The user is interested in the sport of sailing as it pertains to a particular location, e.g. the Charles River in Boston. Removing the stop words from all three query examples generates a single query, “sailing Charles River”.
- a model contains tuples that each include at least a query, a document selected in response to the query, and data indicative of user behavior.
- document 5404 is associated with queries 5406 , 5408 and 5410 which could be represented as three tuples in a model, each having the same document reference ( 5404 ), a different query ( 5406 , 5408 or 5410 ), and associated user behavior data.
- queries 5406 , 5408 and 5410 could be represented as three tuples in a model, each having the same document reference ( 5404 ), a different query ( 5406 , 5408 or 5410 ), and associated user behavior data.
- the stop word “the” is removed from the user query 5402 to create the generalized query “jack in box”.
- the generalized query matches query 5406 .
- the user behavior data associated with the tuple ⁇ document ( 5404 ), query ( 5406 ), data> can be used to determine a quality of result statistic for document 5404 . If removal of the stop word “the” from the user query 5402 did not create a match, for example, an alternate stop word could be removed instead, such as “in” to create the generalized query 5408 “jack the box”. If this did not create a match, both stop words could be removed to create the generalized query 5410 “jack box”. In this way, stop word generalization attempts to find a match in the model for a query and a document by removing the fewest number of stop words from the user query.
- FIG. 5G is flow chart of a method 5450 for modifying a model on behalf of a query containing one or more stop words.
- a tuple such as: T 1 : ⁇ document 1 ,query 1 ,data 1 >
- T 1 ′ ⁇ document 1 ,query 1 ′,data 1 >.
- the new tuple T 1 ′ has the same document and data as T 1 , but the query 1 ′ is a version of query 1 with all of the stop words removed.
- each time data 1 is modified in T 1 the modification can be automatically propagated to data 1 associated with T 1 ′.
- Preemptively creating versions of tuples without stop words means there will be a match of the non-stop word versions of queries.
- Method 5450 captures this idea. Initially, all stop words are removed from a user query to create a modified user query (step 5452 ), such as query 1 ′ described above.
- the modified user query is stored in the model along with the user query (e.g., query 1 ) for the same document (e.g., document 1 ; step 5454 ).
- User behavior data e.g., data 1
- step 5456 User behavior data associated with the user query is then forwarded to the modified user query in the model for the same document.
- a tuple is created within the model containing the user query, and a second tuple is created containing a modified version of the user query: “motorcycling Black Hills South Dakota”.
- the second query can be reduced to the same modified query “motorcycling Black Hills South Dakota”.
- model data for a query and a non stop word version of the query can be merged in the model if their data is similar. This can provide space savings in the model.
- a technique for doing so is provided by method 5453 .
- Two queries are selected from the model, where one of the queries is a non stop word version of the other (step 5455 ). It is then determined whether the two queries' user behavior data is similar (step 5457 ).
- a metric can be used to determine similarity of the data. For example, the metric can be the normal of a vector of aggregated user behavior data. If the queries have similar data, the queries are merged into a single query (e.g., the non stop word version of the user query; step 5459 ).
- step 5455 This method can be performed on a periodic or as needed basis. In various embodiments, the approach outlined in FIG. 5G can be applied for optional terms as well.
- FIG. 5H is a flow chart of a method 5460 for stop word query generalization.
- the rank modifier 5256 determines a quality of result statistic for a given document based on model 5102 data for the user query and a document. If the user query does not match a ⁇ document, query, data> tuple in the model, the query generalizer component 5260 (or another process) is invoked to remove one or more stop words from the user query (step 5462 ). Next, it is determined whether or not the generalized user query matches a tuple in the model (step 5464 ). In various implementations, as few stop words as possible are removed from the user query to obtain a match.
- a quality of result statistic is determined based on the one or more matching tuple's data (step 5466 ).
- the quality of result statistic can be modified to reflect a level of certainty in the generalized query (step 5305 ).
- FIG. 5I is a diagram 5500 illustrating the generalization of a query through the use of variants.
- Variants can include the permutation (e.g., reordering) of terms in a user query, the substitution of synonyms for one or more terms, the reduction of one or more terms to their stem form, or combinations of these.
- the query generalizer 5260 or another process can produce variant generalizations to match a ⁇ document, query, data> tuples for a given document.
- a user query 5502 containing the terms “car stores” can be generalized to different variant forms.
- the term “stores” in the user query 5502 can be reduced to its stem “store” to produce a variant query 5506 , “car store”.
- the term “car” in the user query 5502 can be substituted for a synonym “auto”, resulting in a variant query 5508 “auto stores”.
- the synonym “auto” can be kept and the term “stores” can be reduced to its stem form, creating a variant query 5510 , “auto store”.
- the user query can be reordered to create a variant query 5512 , “stores car”. Other variants are possible.
- FIG. 5J is a flow chart of a method 5550 for variant query generalization.
- the rank modifier 5256 (or another process) can determine a quality of result statistic for a given document based on user behavior data within the model 5102 for the user query and the document. If the user query does not exactly match a ⁇ document, query, data> tuple in the model, the query generalizer component 5260 (or another process) can be invoked to generate variants of the user query.
- One or more terms in the user query are replaced with synonyms or stem forms, or the order of one or more terms in the user query is changed by a query generalizer 5260 , for example (step 5552 ). Alternatively, combinations of variants can be attempted.
- the method 5550 can, in various implementations, first attempt single variant modifications before generalizing the query further. If no match is found (step 5554 ), additional and/or different variant techniques can be employed to generalize the user query (step 5552 ). The method 5550 can continue to attempt variations of the query until all variant combinations have been exhausted or until a match has been located. Alternatively, the “best” query variant's tuple data is used, where “best” is determined by a function that evaluates the semantic distance or other relationship between the user query and the variant query.
- a quality of result statistic is determined based on the one or more matching tuples' user behavior data (step 5556 ).
- the quality of result statistic is then optionally modified (e.g., demoted or down-weighted) based on a level of certainty in the variant's similarity in meaning to the original query terms (step 5558 ).
- FIG. 5K is a diagram 5600 illustrating partial query matching generalization.
- a partial query match occurs when one or more terms in a user query match one or more terms in one or more queries for a given document in a model. Generalizing a user query in this fashion also allows for one or more terms not in common between the user query and a matching query.
- the user query terms are a subset of the model query terms.
- a user query “tea party” is a subset of a model query “Wonderland tea party”.
- model query terms can be a subset of user query terms.
- a user query “photos of the golden gate bridge” includes all terms found within a model query “golden gate bridge”.
- a subset of the user query can also match a subset of a model query. For example, a user query “lions tigers” and a model query “tigers bears” share the subset of terms “tigers”.
- Other forms of partial query matching are possible.
- the edit distance between a user query and a model query is calculated.
- the edit distance between a user query and a model query can be determined based on Levenshtein distance.
- the edit distance is the minimum number of operations needed to transform one query into the other, where an operation is an insertion, deletion, or substitution of a term.
- the edit distance can be determined at the character or semantic concept level. For example, the query “child's metal wagon” has an edit distance of three from the query “red wagon”, because the terms “child's” and “metal” would have to be dropped, as well as the term “red” added to the first query, so that the two queries would be identical. Edit distance can be used to determine a level of certainty in a model query being a good indicator of relevance for a user query.
- a set of queries 5606 , 5610 , 5612 , 5616 , 5620 , and 5624 are associated with the document 5604 in a model.
- the query 5606 “credit card gold”, is a superset of the user query 5602 “credit card”.
- An edit distance 5608 between the model query 5606 and the user query 5602 of one is calculated by counting the term “gold” which only occurs within the model query 5606 .
- the model query 5612 “credit card platinum gold” is a superset of the user query 5602 “credit card”.
- There is an edit distance 5614 of two between the model query 5612 and the user query 5602 because both the terms “gold” and “platinum” only occur within the model query 5612 .
- a subset of the terms within the model query 5616 “credit rating” matches a subset of the terms within the user query 5602 .
- An edit distance 5618 between the model query 5616 and the user query 5602 is calculated as two, because the term “rating” would need to be both removed from the model query 5616 and replaced with the term “card” for the two queries to match.
- the model query 5620 “card” is a subset of the user query 5602 “credit card”.
- There are no common terms between the model query 5624 “san Francisco chronicle” and the user query 5602 “credit card” therefore the model query 5624 does not qualify as a partial match.
- FIG. 5L is flow chart of a method 5650 for partial query matching.
- an edit distance between a user query and each partial query match for a given document is determined (step 5652 ).
- the edit distances are used to down-weight the user behavior data associated with each partial query match based on the respective edit distance (step 5654 ).
- user behavior data associated with partial query matches are exponentially decayed. However, other techniques for down-weighting user data are possible.
- nq is a partial match model query
- uq is the user query
- ed is a function returning the edit distance between nq and uq
- k is a constant greater than one.
- the function ⁇ is a so-called click fraction which is a weighted average of click data for a given tuple.
- ⁇ is defined as:
- Each down-weighted click fraction represents a relative contribution of a partial query match that covers the entire user query or a subset of the user query.
- a vector T containing an element for each term t in the user query can store the sum of all down-weighted click fractions of partial matches related to t (step 5656 ):
- each value T[t] can be normalized by the sum of all the terms within the user query.
- the final click fraction ⁇ for the document can be calculated as follows:
- a is a constant factor that determines how much the final click fraction is reduced (step 5660 ).
- FIG. 5O is a diagram illustrating a method 5800 of identifying related tuples.
- a user looking for information regarding the Tea House Restaurant in Madison, Minn. can submit a first query “tea house” to a search engine.
- the first query can locate many document references associated a variety of tea retailers and other tea-related items which are ranked higher within a result list than a document reference associated with the local Chinese restaurant.
- the user can then refine the first query to create a more specific query “tea house MN”. In this way, users can increase the odds that the search engine will find the document they are looking for.
- a user session is defined by time as well as an indicator that the user has moved onto to a topically different or unrelated query. For example, if a user's initial query was “Toyota celica” and their subsequent query is “best recipes”, a new session is defined for the query “best recipes” since this query is topically unrelated to the original query. By way of further illustration, if the first query and the second query have query terms in common, it is likely that the two are unrelated.
- a search engine responds with a result list 5804 .
- the user submits a refined query 5806 to the user interface 5808 .
- the result list 5810 contains a document 5810 b that the user finds relevant.
- the user behavior data for refined query and document 5810 b combination is shared with the original query 5802 and document 5810 b combination.
- FIG. 5P is a flow chart of a method 5850 for identifying related tuples.
- a pattern of user interaction in a session is identified indicating that the user refined their original query to locate a desired document (step 5852 ).
- a search engine or other process
- the user behavior data for with the selected document and refined query is propagated to the tuple for the selected document and the original query (step 5854 ).
- the shared data can optionally be down-weighted based on a level of certainty in the refined query (step 5853 ).
- user data associated with the original query and selected document can be propagated to the tuple for the refined query and selected document.
- FIG. 6 is a schematic diagram of an example computer system 6050 .
- the system 6050 can be used for practicing operations described above.
- the system 6050 can include a processor 6018 , a memory 6016 , a storage device 6052 , and input/output devices 6054 .
- Each of the components 6018 , 6016 , 6052 , and 6054 are interconnected using a system bus 6056 .
- the processor 6018 is capable of processing instructions within the system 6050 . These instructions can implement one or more aspects of the systems, components and techniques described above.
- the processor 6018 is a single-threaded processor.
- the processor 6018 is a multi-threaded processor.
- the processor 6018 can include multiple processing cores and is capable of processing instructions stored in the memory 6016 or on the storage device 6052 to display graphical information for a user interface on the input/output device 6054 .
- the memory 6016 is a computer readable medium such as volatile or non volatile that stores information within the system 6050 .
- the memory 6016 can store processes related to the functionality of the search engine 1030 , for example.
- the storage device 6052 is capable of providing persistent storage for the system 6050 .
- the storage device 6052 can include a floppy disk device, a hard disk device, an optical disk device, or a tape device, or other suitable persistent storage mediums.
- the storage device 6052 can store the various databases described above.
- the input/output device 6054 provides input/output operations for the system 6050 .
- the input/output device 6054 can include a keyboard, a pointing device, and a display unit for displaying graphical user interfaces.
- the computer system shown in FIG. 6 is but one example.
- embodiments of the subject matter and the functional operations described in this specification can be implemented in digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them.
- Embodiments of the subject matter described in this specification can be implemented as one or more computer program products, i.e., one or more modules of computer program instructions encoded on a computer readable medium for execution by, or to control the operation of, data processing apparatus.
- the computer readable medium can be a machine-readable storage device, a machine-readable storage substrate, a memory device, a composition of matter effecting a machine-readable propagated signal, or a combination of one or more of them.
- data processing apparatus encompasses all apparatus, devices, and machines for processing data, including by way of example a programmable processor, a computer, or multiple processors or computers.
- the apparatus can include, in addition to hardware, code that creates an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, or a combination of one or more of them.
- a propagated signal is an artificially generated signal, e.g., a machine-generated electrical, optical, or electromagnetic signal, that is generated to encode information for transmission to suitable receiver apparatus.
- a computer program (also known as a program, software, software application, script, or code) can be written in any form of programming language, including compiled or interpreted languages, and it can be deployed in any form, including as a stand alone program or as a module, component, subroutine, or other unit suitable for use in a computing environment.
- a computer program does not necessarily correspond to a file in a file system.
- a program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub programs, or portions of code).
- a computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
- the processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform functions by operating on input data and generating output.
- the processes and logic flows can also be performed by, and apparatus can also be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application specific integrated circuit).
- processors suitable for the execution of a computer program include, by way of example, both general and special purpose microprocessors, and any one or more processors of any kind of digital computer.
- a processor will receive instructions and data from a read only memory or a random access memory or both.
- the essential elements of a computer are a processor for performing instructions and one or more memory devices for storing instructions and data.
- a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto optical disks, or optical disks.
- mass storage devices for storing data, e.g., magnetic, magneto optical disks, or optical disks.
- a computer need not have such devices.
- a computer can be embedded in another device, e.g., a mobile telephone, a personal digital assistant (PDA), a mobile audio player, a Global Positioning System (GPS) receiver, to name just a few.
- Computer readable media suitable for storing computer program instructions and data include all forms of non volatile memory, media and memory devices, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks; magneto optical disks; and CD ROM and DVD-ROM disks.
- the processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
- embodiments of the subject matter described in this specification can be implemented on a computer having a display device, e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor, for displaying information to the user and a keyboard and a pointing device, e.g., a mouse or a trackball, by which the user can provide input to the computer.
- a display device e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor
- keyboard and a pointing device e.g., a mouse or a trackball
- Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form, including acoustic, speech, or tactile input.
- Embodiments of the invention can be implemented in a computing system that includes a back-end component, e.g., as a data server, or that includes a middleware component, e.g., an application server, or that includes a front-end component, e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the invention, or any combination of one or more such back-end, middleware, or front-end components.
- the components of the system can be interconnected by any form or medium of digital data communication, e.g., a communication network. Examples of communication networks include a local area network (“LAN”) and a wide area network (“WAN”), e.g., the Internet.
- LAN local area network
- WAN wide area network
- the computing system can include clients and servers.
- a client and server are generally remote from each other and typically interact through a communication network.
- the relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.
- server environment which is configured to provide electronic search service and employ the ranking systems and techniques described, need not be implemented using traditional back-end or middleware components.
- the server environment can be implemented using a program installed on a personal computing apparatus and used for electronic search of local files, or the server environment can be implemented using a search appliance (such as GOGGLE® in a Box, provided by Google Inc. of Mountain View, Calif.) installed in an enterprise network.
- search appliance such as GOGGLE® in a Box, provided by Google Inc. of Mountain View, Calif.
Abstract
Description
TABLE 1 | |
MODEL QUERY | MATCH BELIEF SCORE |
“pictures of fall color” | Will receive a match belief score of |
1.0 because this is an exact match. | |
“pictures fall color” | Removed one stop word - now the |
match belief score is 0.97. | |
“picture fall color” | Replaced a word with a stem variant |
and removed one stop word; | |
combined generalization penalties by | |
multiplying them: the final match belief | |
score is 0.97 * 0.80 = 0.776. | |
“photos color fall” | Reordered terms + one stop word |
removed + synonym = 0.97 (stop word | |
removal) * 0.6 (for reordering terms) * 0.8 | |
(for using a synonym) = 0.4656. | |
T 1:<document1,query1,data1>
T 1′:<document1,query1′,data1>.
dƒ(nq,uq)=ƒ(nq,uq)×(1+ed(nq,uq))k
Claims (15)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US11/556,100 US9110975B1 (en) | 2006-11-02 | 2006-11-02 | Search result inputs using variant generalized queries |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US11/556,100 US9110975B1 (en) | 2006-11-02 | 2006-11-02 | Search result inputs using variant generalized queries |
Publications (1)
Publication Number | Publication Date |
---|---|
US9110975B1 true US9110975B1 (en) | 2015-08-18 |
Family
ID=53786028
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US11/556,100 Active 2027-04-14 US9110975B1 (en) | 2006-11-02 | 2006-11-02 | Search result inputs using variant generalized queries |
Country Status (1)
Country | Link |
---|---|
US (1) | US9110975B1 (en) |
Cited By (20)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9183499B1 (en) | 2013-04-19 | 2015-11-10 | Google Inc. | Evaluating quality based on neighbor features |
CN105243132A (en) * | 2015-09-30 | 2016-01-13 | 北京奇虎科技有限公司 | Method for controlling search records and electronic device |
CN105243133A (en) * | 2015-09-30 | 2016-01-13 | 北京奇虎科技有限公司 | Searching record display method and electronic device |
US9298833B1 (en) * | 2015-04-02 | 2016-03-29 | Garry Carl Kaufmann | Unfailing self-correcting modified Boolean search engine |
US20160162535A1 (en) * | 2014-12-03 | 2016-06-09 | Verizon Patent And Licensing Inc. | Relational data model variant |
US20160239536A1 (en) * | 2013-11-14 | 2016-08-18 | Clarion Co., Ltd. | Search result evaluation system, navigation system and search result evaluation method |
US20170124087A1 (en) * | 2015-11-02 | 2017-05-04 | International Business Machines Corporation | Rank-based calculation for keyword searches |
CN106682167A (en) * | 2016-12-26 | 2017-05-17 | 努比亚技术有限公司 | User behavior data statistics device and method |
US9747336B1 (en) * | 2014-12-16 | 2017-08-29 | Justin Cutillo | Method and system for creating hyperlinks that cycle multiple search term relevant web sources and self-resolve to a single resource by measuring audience interaction |
WO2017161030A1 (en) | 2016-03-15 | 2017-09-21 | Laboratory Corporation Of America Holdings | Methods of assessing protein interactions between cells |
JP2018501540A (en) * | 2015-12-01 | 2018-01-18 | 華為技術有限公司Ｈｕａｗｅｉ Ｔｅｃｈｎｏｌｏｇｉｅｓ Ｃｏ．，Ｌｔｄ． | Stopword identification method and apparatus |
US20180060325A1 (en) * | 2016-08-26 | 2018-03-01 | Microsoft Technology Licensing, Llc | Rank query results for relevance utilizing external context |
US20200142888A1 (en) * | 2017-04-29 | 2020-05-07 | Google Llc | Generating query variants using a trained generative model |
US10824817B1 (en) | 2019-07-01 | 2020-11-03 | Unified Compliance Framework (Network Frontiers) | Automatic compliance tools for substituting authority document synonyms |
US11120227B1 (en) * | 2019-07-01 | 2021-09-14 | Unified Compliance Framework (Network Frontiers) | Automatic compliance tools |
US11216495B2 (en) | 2012-11-05 | 2022-01-04 | Unified Compliance Framework (Network Frontiers) | Methods and systems for a compliance framework database schema |
US11386270B2 (en) | 2020-08-27 | 2022-07-12 | Unified Compliance Framework (Network Frontiers) | Automatically identifying multi-word expressions |
US11610063B2 (en) | 2019-07-01 | 2023-03-21 | Unified Compliance Framework (Network Frontiers) | Automatic compliance tools |
US11727475B2 (en) * | 2019-12-13 | 2023-08-15 | Shopify Inc. | Systems and methods for recommending 2D image |
US11928531B1 (en) | 2021-07-20 | 2024-03-12 | Unified Compliance Framework (Network Frontiers) | Retrieval interface for content, such as compliance-related content |
Citations (141)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5265065A (en) | 1991-10-08 | 1993-11-23 | West Publishing Company | Method and apparatus for information retrieval from a database by replacing domain specific stemmed phases in a natural language to create a search query |
US6014665A (en) | 1997-08-01 | 2000-01-11 | Culliss; Gary | Method for organizing information |
US6076051A (en) * | 1997-03-07 | 2000-06-13 | Microsoft Corporation | Information retrieval utilizing semantic representation of text |
US6078916A (en) | 1997-08-01 | 2000-06-20 | Culliss; Gary | Method for organizing information |
US6182068B1 (en) | 1997-08-01 | 2001-01-30 | Ask Jeeves, Inc. | Personalized search methods |
US6327590B1 (en) * | 1999-05-05 | 2001-12-04 | Xerox Corporation | System and method for collaborative ranking of search results employing user and group profiles derived from document collection content analysis |
US20020034292A1 (en) | 2000-08-22 | 2002-03-21 | Tuoriniemi Veijo M. | System and a method to match demand and supply based on geographical location derived from a positioning system |
US6363378B1 (en) * | 1998-10-13 | 2002-03-26 | Oracle Corporation | Ranking of query feedback terms in an information retrieval system |
US20020103790A1 (en) | 2001-01-30 | 2002-08-01 | Wang Shirley S. | Utility for cross platform database query |
US20020138478A1 (en) * | 1998-07-31 | 2002-09-26 | Genuity Inc. | Information retrieval system |
US6480843B2 (en) * | 1998-11-03 | 2002-11-12 | Nec Usa, Inc. | Supporting web-query expansion efficiently using multi-granularity indexing and query processing |
US6490575B1 (en) | 1999-12-06 | 2002-12-03 | International Business Machines Corporation | Distributed network search engine |
US20030009399A1 (en) | 2001-03-22 | 2003-01-09 | Boerner Sean T. | Method and system to identify discrete trends in time series |
US20030018707A1 (en) | 2001-07-20 | 2003-01-23 | Flocken Philip Andrew | Server-side filter for corrupt web-browser cookies |
US20030028529A1 (en) | 2001-08-03 | 2003-02-06 | Cheung Dominic Dough-Ming | Search engine account monitoring |
US20030037074A1 (en) | 2001-05-01 | 2003-02-20 | Ibm Corporation | System and method for aggregating ranking results from various sources to improve the results of web searching |
US20030167252A1 (en) | 2002-02-26 | 2003-09-04 | Pliant Technologies, Inc. | Topic identification and use thereof in information retrieval systems |
US20030195877A1 (en) | 1999-12-08 | 2003-10-16 | Ford James L. | Search query processing to provide category-ranked presentation of search results |
US20030220913A1 (en) | 2002-05-24 | 2003-11-27 | International Business Machines Corporation | Techniques for personalized and adaptive search services |
US6671681B1 (en) | 2000-05-31 | 2003-12-30 | International Business Machines Corporation | System and technique for suggesting alternate query expressions based on prior user selections and their query strings |
US20040006740A1 (en) | 2000-09-29 | 2004-01-08 | Uwe Krohn | Information access |
US20040034632A1 (en) | 2002-07-31 | 2004-02-19 | International Business Machines Corporation | Automatic query refinement |
US6701309B1 (en) | 2000-04-21 | 2004-03-02 | Lycos, Inc. | Method and system for collecting related queries |
US20040083205A1 (en) | 2002-10-29 | 2004-04-29 | Steve Yeager | Continuous knowledgebase access improvement systems and methods |
US20040093325A1 (en) | 2002-11-07 | 2004-05-13 | International Business Machines Corporation | System and method for location influenced network search |
US6738764B2 (en) * | 2001-05-08 | 2004-05-18 | Verity, Inc. | Apparatus and method for adaptively ranking search results |
US20040158560A1 (en) | 2003-02-12 | 2004-08-12 | Ji-Rong Wen | Systems and methods for query expansion |
US6792416B2 (en) | 1999-09-21 | 2004-09-14 | International Business Machines Corporation | Managing results of federated searches across heterogeneous datastores with a federated result set cursor object |
US20040186996A1 (en) | 2000-03-29 | 2004-09-23 | Gibbs Benjamin K. | Unique digital signature |
US20040199419A1 (en) * | 2001-11-13 | 2004-10-07 | International Business Machines Corporation | Promoting strategic documents by bias ranking of search results on a web browser |
US20040215607A1 (en) | 2003-04-25 | 2004-10-28 | Travis Robert L. | Method and system fo blending search engine results from disparate sources into one search result |
US20050015366A1 (en) | 2003-07-18 | 2005-01-20 | Carrasco John Joseph M. | Disambiguation of search phrases using interpretation clusters |
US20050021397A1 (en) * | 2003-07-22 | 2005-01-27 | Cui Yingwei Claire | Content-targeted advertising using collected user behavior data |
US20050060311A1 (en) | 2003-09-12 | 2005-03-17 | Simon Tong | Methods and systems for improving a search ranking using related queries |
US20050060310A1 (en) * | 2003-09-12 | 2005-03-17 | Simon Tong | Methods and systems for improving a search ranking using population information |
US20050060290A1 (en) * | 2003-09-15 | 2005-03-17 | International Business Machines Corporation | Automatic query routing and rank configuration for search queries in an information retrieval system |
US20050071741A1 (en) * | 2003-09-30 | 2005-03-31 | Anurag Acharya | Information retrieval based on historical data |
US20050102259A1 (en) * | 2003-11-12 | 2005-05-12 | Yahoo! Inc. | Systems and methods for search query processing using trend analysis |
US20050102282A1 (en) | 2003-11-07 | 2005-05-12 | Greg Linden | Method for personalized search |
US20050125376A1 (en) | 2003-12-08 | 2005-06-09 | Andy Curtis | Methods and systems for providing a response to a query |
US20050160083A1 (en) | 2004-01-16 | 2005-07-21 | Yahoo! Inc. | User-specific vertical search |
US20050198026A1 (en) | 2004-02-03 | 2005-09-08 | Dehlinger Peter J. | Code, system, and method for generating concepts |
US6944612B2 (en) | 2002-11-13 | 2005-09-13 | Xerox Corporation | Structured contextual clustering method and system in a federated search engine |
US20050222987A1 (en) | 2004-04-02 | 2005-10-06 | Vadon Eric R | Automated detection of associations between search criteria and item categories based on collective analysis of user activity data |
US20050240580A1 (en) | 2003-09-30 | 2005-10-27 | Zamir Oren E | Personalization of placed content ordering in search results |
US20050240576A1 (en) | 2003-06-10 | 2005-10-27 | John Piscitello | Named URL entry |
US20050256848A1 (en) * | 2004-05-13 | 2005-11-17 | International Business Machines Corporation | System and method for user rank search |
US20060047643A1 (en) | 2004-08-31 | 2006-03-02 | Chirag Chaman | Method and system for a personalized search engine |
US20060069667A1 (en) | 2004-09-30 | 2006-03-30 | Microsoft Corporation | Content evaluation |
US20060074903A1 (en) * | 2004-09-30 | 2006-04-06 | Microsoft Corporation | System and method for ranking search results using click distance |
US20060089926A1 (en) * | 2004-10-27 | 2006-04-27 | Harris Corporation, Corporation Of The State Of Delaware | Method for re-ranking documents retrieved from a document database |
US20060095421A1 (en) | 2004-10-22 | 2006-05-04 | Canon Kabushiki Kaisha | Method, apparatus, and program for searching for data |
US20060106793A1 (en) | 2003-12-29 | 2006-05-18 | Ping Liang | Internet and computer information retrieval and mining with intelligent conceptual filtering, visualization and automation |
US7085761B2 (en) * | 2002-06-28 | 2006-08-01 | Fujitsu Limited | Program for changing search results rank, recording medium for recording such a program, and content search processing method |
US20060173830A1 (en) | 2003-07-23 | 2006-08-03 | Barry Smyth | Information retrieval |
US20060195443A1 (en) | 2005-02-11 | 2006-08-31 | Franklin Gary L | Information prioritisation system and method |
US20060200476A1 (en) | 2005-03-03 | 2006-09-07 | Microsoft Corporation | Creating, storing and viewing process models |
US20060200556A1 (en) | 2004-12-29 | 2006-09-07 | Scott Brave | Method and apparatus for identifying, extracting, capturing, and leveraging expertise and knowledge |
US7113939B2 (en) | 1999-09-21 | 2006-09-26 | International Business Machines Corporation | Architecture to enable search gateways as part of federated search |
US20060253428A1 (en) * | 2005-05-06 | 2006-11-09 | Microsoft Corporation | Performant relevance improvements in search query results |
US7146361B2 (en) | 2003-05-30 | 2006-12-05 | International Business Machines Corporation | System, method and computer program product for performing unstructured information management and automatic text analysis, including a search operator functioning as a Weighted AND (WAND) |
US20070005575A1 (en) | 2005-06-30 | 2007-01-04 | Microsoft Corporation | Prioritizing search results by client search satisfaction |
US20070005588A1 (en) | 2005-07-01 | 2007-01-04 | Microsoft Corporation | Determining relevance using queries as surrogate content |
US20070038659A1 (en) | 2005-08-15 | 2007-02-15 | Google, Inc. | Scalable user clustering based on set similarity |
US20070061211A1 (en) | 2005-09-14 | 2007-03-15 | Jorey Ramer | Preventing mobile communication facility click fraud |
US20070081197A1 (en) | 2001-06-22 | 2007-04-12 | Nosa Omoigui | System and method for semantic knowledge retrieval, management, capture, sharing, discovery, delivery and presentation |
US20070106659A1 (en) | 2005-03-18 | 2007-05-10 | Yunshan Lu | Search engine that applies feedback from users to improve search results |
US20070112730A1 (en) | 2005-11-07 | 2007-05-17 | Antonino Gulli | Sampling Internet user traffic to improve search results |
US7222127B1 (en) | 2003-11-14 | 2007-05-22 | Google Inc. | Large scale machine learning systems and methods |
US20070130370A1 (en) | 2005-12-06 | 2007-06-07 | Emeka Akaezuwa | Portable search engine |
US20070156677A1 (en) | 1999-07-21 | 2007-07-05 | Alberti Anemometer Llc | Database access system |
US7243102B1 (en) | 2004-07-01 | 2007-07-10 | Microsoft Corporation | Machine directed improvement of ranking algorithms |
US20070192190A1 (en) | 2005-12-06 | 2007-08-16 | Authenticlick | Method and system for scoring quality of traffic to network sites |
US20070208730A1 (en) * | 2006-03-02 | 2007-09-06 | Microsoft Corporation | Mining web search user behavior to enhance web search relevance |
US20070214131A1 (en) * | 2006-03-13 | 2007-09-13 | Microsoft Corporation | Re-ranking search results based on query log |
US20070233653A1 (en) | 2006-03-31 | 2007-10-04 | Microsoft Corporation | Selecting directly bid upon advertisements for display |
US20070260597A1 (en) * | 2006-05-02 | 2007-11-08 | Mark Cramer | Dynamic search engine results employing user behavior |
US20070266439A1 (en) | 2005-11-30 | 2007-11-15 | Harold Kraft | Privacy management and transaction system |
US20070266021A1 (en) | 2006-03-06 | 2007-11-15 | Murali Aravamudan | Methods and systems for selecting and presenting content based on dynamically identifying microgenres associated with the content |
US20070288450A1 (en) | 2006-04-19 | 2007-12-13 | Datta Ruchira S | Query language determination using query terms and interface language |
US20080010143A1 (en) | 2006-06-22 | 2008-01-10 | Rob Kniaz | Secure and extensible pay per action online advertising |
US20080027913A1 (en) | 2006-07-25 | 2008-01-31 | Yahoo! Inc. | System and method of information retrieval engine evaluation using human judgment input |
US20080052219A1 (en) | 2006-03-31 | 2008-02-28 | Combinenet, Inc. | System for and method of expressive auctions of user events |
US20080052273A1 (en) | 2006-08-22 | 2008-02-28 | Fuji Xerox Co., Ltd. | Apparatus and method for term context modeling for information retrieval |
US20080059453A1 (en) | 2006-08-29 | 2008-03-06 | Raphael Laderman | System and method for enhancing the result of a query |
US20080077570A1 (en) | 2004-10-25 | 2008-03-27 | Infovell, Inc. | Full Text Query and Search Systems and Method of Use |
US20080082518A1 (en) | 2006-09-29 | 2008-04-03 | Loftesness David E | Strategy for Providing Query Results Based on Analysis of User Intent |
US20080091650A1 (en) | 2006-10-11 | 2008-04-17 | Marcus Felipe Fontoura | Augmented Search With Error Detection and Replacement |
US20080114750A1 (en) | 2006-11-14 | 2008-05-15 | Microsoft Corporation | Retrieval and ranking of items utilizing similarity |
US20080114624A1 (en) | 2006-11-13 | 2008-05-15 | Microsoft Corporation | Click-fraud protector |
US20080114729A1 (en) | 2006-11-13 | 2008-05-15 | Google Inc. | Computer-implemented interactive, virtual bookshelf system and method |
US7379951B2 (en) * | 2002-05-31 | 2008-05-27 | Microsoft Corporation | Support for real-time queries concerning current state, data and history of a process |
US20080140699A1 (en) | 2005-11-09 | 2008-06-12 | Rosie Jones | System and method for generating substitutable queries |
US20080162475A1 (en) | 2007-01-03 | 2008-07-03 | Meggs Anthony F | Click-fraud detection method |
US20080183660A1 (en) | 2007-01-30 | 2008-07-31 | Google Inc. | Content identification expansion |
US20080189269A1 (en) | 2006-11-07 | 2008-08-07 | Fast Search & Transfer Asa | Relevance-weighted navigation in information access, search and retrieval |
US20080208825A1 (en) | 2003-12-08 | 2008-08-28 | Andy Curtis | Methods and systems for providing a response to a query |
US7426507B1 (en) | 2004-07-26 | 2008-09-16 | Google, Inc. | Automatic taxonomy generation in search results using phrases |
US20080228442A1 (en) | 2007-03-07 | 2008-09-18 | Lisa Ellen Lippincott | Statistical data inspector |
US20080256050A1 (en) | 2007-04-10 | 2008-10-16 | Ruofei Zhang | System and method for modeling user selection feedback in a search result page |
US7451487B2 (en) | 2003-09-08 | 2008-11-11 | Sonicwall, Inc. | Fraudulent message detection |
US20080313247A1 (en) | 2007-06-12 | 2008-12-18 | Brian Galvin | Page Ranking Based on a Behavioral WEB Graph |
US20080313168A1 (en) | 2007-06-18 | 2008-12-18 | Microsoft Corporation | Ranking documents based on a series of document graphs |
US20090012969A1 (en) | 2007-07-02 | 2009-01-08 | Rail Peter D | Systems and processes for evaluating webpages |
US20090055392A1 (en) | 2003-03-31 | 2009-02-26 | Google Inc. | Ordering of search results based on language and/or country of the search results |
US7516146B2 (en) | 2003-05-15 | 2009-04-07 | Microsoft Corporation | Fast adaptive document filtering |
US7526470B1 (en) | 2003-05-28 | 2009-04-28 | Microsoft Corporation | System and method for measuring and improving search result relevance based on user satisfaction |
US7533130B2 (en) | 2006-12-19 | 2009-05-12 | Yahoo! Inc. | User behavior reporting based on pre-aggregated activity data |
US20090157643A1 (en) | 2007-12-12 | 2009-06-18 | Microsoft Corporation | Semi-supervised part-of-speech tagging |
US20090182723A1 (en) | 2008-01-10 | 2009-07-16 | Microsoft Corporation | Ranking search results using author extraction |
US20090287656A1 (en) | 2008-05-13 | 2009-11-19 | Bennett James D | Network search engine utilizing client browser favorites |
US7693818B2 (en) | 2005-11-15 | 2010-04-06 | Microsoft Corporation | UserRank: ranking linked nodes leveraging user logs |
US20100131563A1 (en) | 2008-11-25 | 2010-05-27 | Hongfeng Yin | System and methods for automatic clustering of ranked and categorized search objects |
US7747612B2 (en) | 2005-10-31 | 2010-06-29 | Yahoo! Inc. | Indication of exclusive items in a result set |
US20100205541A1 (en) | 2009-02-11 | 2010-08-12 | Jeffrey A. Rapaport | social network driven indexing system for instantly clustering people with concurrent focus on same topic into on-topic chat rooms and/or for generating on-topic search results tailored to user preferences regarding topic |
US7783632B2 (en) | 2005-11-03 | 2010-08-24 | Microsoft Corporation | Using popularity data for ranking |
US7801885B1 (en) | 2007-01-25 | 2010-09-21 | Neal Akash Verma | Search engine system and method with user feedback on search results |
US20100241472A1 (en) | 2009-03-23 | 2010-09-23 | David Antonio Hernandez | Illness specific diagnostic system |
US7809716B2 (en) | 2006-06-27 | 2010-10-05 | International Business Machines Corporation | Method and apparatus for establishing relationship between documents |
US7818320B2 (en) | 2007-05-31 | 2010-10-19 | Yahoo! Inc. | Enhanced search results based on user feedback relating to search result abstracts |
US7836058B2 (en) | 2008-03-27 | 2010-11-16 | Microsoft Corporation | Web searching |
US7844589B2 (en) | 2003-11-18 | 2010-11-30 | Yahoo! Inc. | Method and apparatus for performing a search |
US7849089B2 (en) | 2005-05-10 | 2010-12-07 | Microsoft Corporation | Method and system for adapting search results to personal information needs |
US7853557B2 (en) | 2002-06-14 | 2010-12-14 | Siebel Systems, Inc. | Method and computer for responding to a query according to the language used |
US7877404B2 (en) | 2008-03-05 | 2011-01-25 | Microsoft Corporation | Query classification based on query click logs |
US7895177B2 (en) | 2007-05-29 | 2011-02-22 | Yahoo! Inc. | Enabling searching of user ratings and reviews using user profile location, and social networks |
US20110064795A1 (en) | 2003-07-25 | 2011-03-17 | Ac Immune Sa | Therapeutic vaccine targeted against P-glycoprotein 170 for inhibiting multidrug resistance in the treatment of cancers |
US7953740B1 (en) * | 2006-02-13 | 2011-05-31 | Amazon Technologies, Inc. | Detection of behavior-based associations between search strings and items |
US7974974B2 (en) | 2008-03-20 | 2011-07-05 | Microsoft Corporation | Techniques to perform relative ranking for search results |
US7987185B1 (en) | 2006-12-29 | 2011-07-26 | Google Inc. | Ranking custom search results |
US8024330B1 (en) | 2004-05-20 | 2011-09-20 | Hector Franco | Collaborative incident alert system for mobile devices |
US8027439B2 (en) | 2006-09-18 | 2011-09-27 | Fair Isaac Corporation | Self-calibrating fraud detection |
US8037043B2 (en) | 2008-09-09 | 2011-10-11 | Microsoft Corporation | Information retrieval system |
US8037042B2 (en) | 2007-05-10 | 2011-10-11 | Microsoft Corporation | Automated analysis of user search behavior |
US8051061B2 (en) | 2007-07-20 | 2011-11-01 | Microsoft Corporation | Cross-lingual query suggestion |
US8065296B1 (en) | 2004-09-29 | 2011-11-22 | Google Inc. | Systems and methods for determining a quality of provided items |
US20110295844A1 (en) | 2010-05-27 | 2011-12-01 | Microsoft Corporation | Enhancing freshness of search results |
US8073263B2 (en) | 2006-07-31 | 2011-12-06 | Ricoh Co., Ltd. | Multi-classifier selection and monitoring for MMR-based image recognition |
US8073772B2 (en) | 1999-11-05 | 2011-12-06 | American Express Travel Related Services Company, Inc. | Systems and methods for processing transactions using multiple budgets |
US8086599B1 (en) | 2006-10-24 | 2011-12-27 | Google Inc. | Method and apparatus for automatically identifying compunds |
US8156111B2 (en) | 2008-11-24 | 2012-04-10 | Yahoo! Inc. | Identifying and expanding implicitly temporally qualified queries |
-
2006
- 2006-11-02 US US11/556,100 patent/US9110975B1/en active Active
Patent Citations (144)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5265065A (en) | 1991-10-08 | 1993-11-23 | West Publishing Company | Method and apparatus for information retrieval from a database by replacing domain specific stemmed phases in a natural language to create a search query |
US6076051A (en) * | 1997-03-07 | 2000-06-13 | Microsoft Corporation | Information retrieval utilizing semantic representation of text |
US6014665A (en) | 1997-08-01 | 2000-01-11 | Culliss; Gary | Method for organizing information |
US6078916A (en) | 1997-08-01 | 2000-06-20 | Culliss; Gary | Method for organizing information |
US6182068B1 (en) | 1997-08-01 | 2001-01-30 | Ask Jeeves, Inc. | Personalized search methods |
US6816850B2 (en) | 1997-08-01 | 2004-11-09 | Ask Jeeves, Inc. | Personalized search methods including combining index entries for catagories of personal data |
US6539377B1 (en) | 1997-08-01 | 2003-03-25 | Ask Jeeves, Inc. | Personalized search methods |
US20020138478A1 (en) * | 1998-07-31 | 2002-09-26 | Genuity Inc. | Information retrieval system |
US6363378B1 (en) * | 1998-10-13 | 2002-03-26 | Oracle Corporation | Ranking of query feedback terms in an information retrieval system |
US6480843B2 (en) * | 1998-11-03 | 2002-11-12 | Nec Usa, Inc. | Supporting web-query expansion efficiently using multi-granularity indexing and query processing |
US6327590B1 (en) * | 1999-05-05 | 2001-12-04 | Xerox Corporation | System and method for collaborative ranking of search results employing user and group profiles derived from document collection content analysis |
US20070156677A1 (en) | 1999-07-21 | 2007-07-05 | Alberti Anemometer Llc | Database access system |
US7113939B2 (en) | 1999-09-21 | 2006-09-26 | International Business Machines Corporation | Architecture to enable search gateways as part of federated search |
US6792416B2 (en) | 1999-09-21 | 2004-09-14 | International Business Machines Corporation | Managing results of federated searches across heterogeneous datastores with a federated result set cursor object |
US8073772B2 (en) | 1999-11-05 | 2011-12-06 | American Express Travel Related Services Company, Inc. | Systems and methods for processing transactions using multiple budgets |
US6490575B1 (en) | 1999-12-06 | 2002-12-03 | International Business Machines Corporation | Distributed network search engine |
US20030195877A1 (en) | 1999-12-08 | 2003-10-16 | Ford James L. | Search query processing to provide category-ranked presentation of search results |
US20040186996A1 (en) | 2000-03-29 | 2004-09-23 | Gibbs Benjamin K. | Unique digital signature |
US6701309B1 (en) | 2000-04-21 | 2004-03-02 | Lycos, Inc. | Method and system for collecting related queries |
US6671681B1 (en) | 2000-05-31 | 2003-12-30 | International Business Machines Corporation | System and technique for suggesting alternate query expressions based on prior user selections and their query strings |
US20020034292A1 (en) | 2000-08-22 | 2002-03-21 | Tuoriniemi Veijo M. | System and a method to match demand and supply based on geographical location derived from a positioning system |
US20040006740A1 (en) | 2000-09-29 | 2004-01-08 | Uwe Krohn | Information access |
US20020103790A1 (en) | 2001-01-30 | 2002-08-01 | Wang Shirley S. | Utility for cross platform database query |
US20030009399A1 (en) | 2001-03-22 | 2003-01-09 | Boerner Sean T. | Method and system to identify discrete trends in time series |
US20030037074A1 (en) | 2001-05-01 | 2003-02-20 | Ibm Corporation | System and method for aggregating ranking results from various sources to improve the results of web searching |
US6738764B2 (en) * | 2001-05-08 | 2004-05-18 | Verity, Inc. | Apparatus and method for adaptively ranking search results |
US20070081197A1 (en) | 2001-06-22 | 2007-04-12 | Nosa Omoigui | System and method for semantic knowledge retrieval, management, capture, sharing, discovery, delivery and presentation |
US20030018707A1 (en) | 2001-07-20 | 2003-01-23 | Flocken Philip Andrew | Server-side filter for corrupt web-browser cookies |
US20030028529A1 (en) | 2001-08-03 | 2003-02-06 | Cheung Dominic Dough-Ming | Search engine account monitoring |
US20040199419A1 (en) * | 2001-11-13 | 2004-10-07 | International Business Machines Corporation | Promoting strategic documents by bias ranking of search results on a web browser |
US20030167252A1 (en) | 2002-02-26 | 2003-09-04 | Pliant Technologies, Inc. | Topic identification and use thereof in information retrieval systems |
US20030220913A1 (en) | 2002-05-24 | 2003-11-27 | International Business Machines Corporation | Techniques for personalized and adaptive search services |
US7379951B2 (en) * | 2002-05-31 | 2008-05-27 | Microsoft Corporation | Support for real-time queries concerning current state, data and history of a process |
US7853557B2 (en) | 2002-06-14 | 2010-12-14 | Siebel Systems, Inc. | Method and computer for responding to a query according to the language used |
US7085761B2 (en) * | 2002-06-28 | 2006-08-01 | Fujitsu Limited | Program for changing search results rank, recording medium for recording such a program, and content search processing method |
US20040034632A1 (en) | 2002-07-31 | 2004-02-19 | International Business Machines Corporation | Automatic query refinement |
US20040083205A1 (en) | 2002-10-29 | 2004-04-29 | Steve Yeager | Continuous knowledgebase access improvement systems and methods |
US20040093325A1 (en) | 2002-11-07 | 2004-05-13 | International Business Machines Corporation | System and method for location influenced network search |
US6944612B2 (en) | 2002-11-13 | 2005-09-13 | Xerox Corporation | Structured contextual clustering method and system in a federated search engine |
US20040158560A1 (en) | 2003-02-12 | 2004-08-12 | Ji-Rong Wen | Systems and methods for query expansion |
US20090055392A1 (en) | 2003-03-31 | 2009-02-26 | Google Inc. | Ordering of search results based on language and/or country of the search results |
US20040215607A1 (en) | 2003-04-25 | 2004-10-28 | Travis Robert L. | Method and system fo blending search engine results from disparate sources into one search result |
US7516146B2 (en) | 2003-05-15 | 2009-04-07 | Microsoft Corporation | Fast adaptive document filtering |
US7526470B1 (en) | 2003-05-28 | 2009-04-28 | Microsoft Corporation | System and method for measuring and improving search result relevance based on user satisfaction |
US7146361B2 (en) | 2003-05-30 | 2006-12-05 | International Business Machines Corporation | System, method and computer program product for performing unstructured information management and automatic text analysis, including a search operator functioning as a Weighted AND (WAND) |
US20050240576A1 (en) | 2003-06-10 | 2005-10-27 | John Piscitello | Named URL entry |
US20050015366A1 (en) | 2003-07-18 | 2005-01-20 | Carrasco John Joseph M. | Disambiguation of search phrases using interpretation clusters |
US20050021397A1 (en) * | 2003-07-22 | 2005-01-27 | Cui Yingwei Claire | Content-targeted advertising using collected user behavior data |
US20060173830A1 (en) | 2003-07-23 | 2006-08-03 | Barry Smyth | Information retrieval |
US20110064795A1 (en) | 2003-07-25 | 2011-03-17 | Ac Immune Sa | Therapeutic vaccine targeted against P-glycoprotein 170 for inhibiting multidrug resistance in the treatment of cancers |
US7451487B2 (en) | 2003-09-08 | 2008-11-11 | Sonicwall, Inc. | Fraudulent message detection |
US20050060310A1 (en) * | 2003-09-12 | 2005-03-17 | Simon Tong | Methods and systems for improving a search ranking using population information |
US20050060311A1 (en) | 2003-09-12 | 2005-03-17 | Simon Tong | Methods and systems for improving a search ranking using related queries |
US20050060290A1 (en) * | 2003-09-15 | 2005-03-17 | International Business Machines Corporation | Automatic query routing and rank configuration for search queries in an information retrieval system |
US20050240580A1 (en) | 2003-09-30 | 2005-10-27 | Zamir Oren E | Personalization of placed content ordering in search results |
US20050071741A1 (en) * | 2003-09-30 | 2005-03-31 | Anurag Acharya | Information retrieval based on historical data |
US20050102282A1 (en) | 2003-11-07 | 2005-05-12 | Greg Linden | Method for personalized search |
US20050102259A1 (en) * | 2003-11-12 | 2005-05-12 | Yahoo! Inc. | Systems and methods for search query processing using trend analysis |
US7231399B1 (en) | 2003-11-14 | 2007-06-12 | Google Inc. | Ranking documents based on large data sets |
US7222127B1 (en) | 2003-11-14 | 2007-05-22 | Google Inc. | Large scale machine learning systems and methods |
US7844589B2 (en) | 2003-11-18 | 2010-11-30 | Yahoo! Inc. | Method and apparatus for performing a search |
US20080208825A1 (en) | 2003-12-08 | 2008-08-28 | Andy Curtis | Methods and systems for providing a response to a query |
US20050125376A1 (en) | 2003-12-08 | 2005-06-09 | Andy Curtis | Methods and systems for providing a response to a query |
US20060106793A1 (en) | 2003-12-29 | 2006-05-18 | Ping Liang | Internet and computer information retrieval and mining with intelligent conceptual filtering, visualization and automation |
US20050160083A1 (en) | 2004-01-16 | 2005-07-21 | Yahoo! Inc. | User-specific vertical search |
US20050198026A1 (en) | 2004-02-03 | 2005-09-08 | Dehlinger Peter J. | Code, system, and method for generating concepts |
US20050222987A1 (en) | 2004-04-02 | 2005-10-06 | Vadon Eric R | Automated detection of associations between search criteria and item categories based on collective analysis of user activity data |
US20050256848A1 (en) * | 2004-05-13 | 2005-11-17 | International Business Machines Corporation | System and method for user rank search |
US8024330B1 (en) | 2004-05-20 | 2011-09-20 | Hector Franco | Collaborative incident alert system for mobile devices |
US7243102B1 (en) | 2004-07-01 | 2007-07-10 | Microsoft Corporation | Machine directed improvement of ranking algorithms |
US7426507B1 (en) | 2004-07-26 | 2008-09-16 | Google, Inc. | Automatic taxonomy generation in search results using phrases |
US20060047643A1 (en) | 2004-08-31 | 2006-03-02 | Chirag Chaman | Method and system for a personalized search engine |
US8065296B1 (en) | 2004-09-29 | 2011-11-22 | Google Inc. | Systems and methods for determining a quality of provided items |
US20060069667A1 (en) | 2004-09-30 | 2006-03-30 | Microsoft Corporation | Content evaluation |
US20060074903A1 (en) * | 2004-09-30 | 2006-04-06 | Microsoft Corporation | System and method for ranking search results using click distance |
US20060095421A1 (en) | 2004-10-22 | 2006-05-04 | Canon Kabushiki Kaisha | Method, apparatus, and program for searching for data |
US20080077570A1 (en) | 2004-10-25 | 2008-03-27 | Infovell, Inc. | Full Text Query and Search Systems and Method of Use |
US20060089926A1 (en) * | 2004-10-27 | 2006-04-27 | Harris Corporation, Corporation Of The State Of Delaware | Method for re-ranking documents retrieved from a document database |
US20060200556A1 (en) | 2004-12-29 | 2006-09-07 | Scott Brave | Method and apparatus for identifying, extracting, capturing, and leveraging expertise and knowledge |
US20060195443A1 (en) | 2005-02-11 | 2006-08-31 | Franklin Gary L | Information prioritisation system and method |
US20060200476A1 (en) | 2005-03-03 | 2006-09-07 | Microsoft Corporation | Creating, storing and viewing process models |
US20070106659A1 (en) | 2005-03-18 | 2007-05-10 | Yunshan Lu | Search engine that applies feedback from users to improve search results |
US20060253428A1 (en) * | 2005-05-06 | 2006-11-09 | Microsoft Corporation | Performant relevance improvements in search query results |
US7849089B2 (en) | 2005-05-10 | 2010-12-07 | Microsoft Corporation | Method and system for adapting search results to personal information needs |
US20070005575A1 (en) | 2005-06-30 | 2007-01-04 | Microsoft Corporation | Prioritizing search results by client search satisfaction |
US20070005588A1 (en) | 2005-07-01 | 2007-01-04 | Microsoft Corporation | Determining relevance using queries as surrogate content |
US20070038659A1 (en) | 2005-08-15 | 2007-02-15 | Google, Inc. | Scalable user clustering based on set similarity |
US20070061211A1 (en) | 2005-09-14 | 2007-03-15 | Jorey Ramer | Preventing mobile communication facility click fraud |
US7747612B2 (en) | 2005-10-31 | 2010-06-29 | Yahoo! Inc. | Indication of exclusive items in a result set |
US7783632B2 (en) | 2005-11-03 | 2010-08-24 | Microsoft Corporation | Using popularity data for ranking |
US20070112730A1 (en) | 2005-11-07 | 2007-05-17 | Antonino Gulli | Sampling Internet user traffic to improve search results |
US20080140699A1 (en) | 2005-11-09 | 2008-06-12 | Rosie Jones | System and method for generating substitutable queries |
US7693818B2 (en) | 2005-11-15 | 2010-04-06 | Microsoft Corporation | UserRank: ranking linked nodes leveraging user logs |
US20070266439A1 (en) | 2005-11-30 | 2007-11-15 | Harold Kraft | Privacy management and transaction system |
US20070130370A1 (en) | 2005-12-06 | 2007-06-07 | Emeka Akaezuwa | Portable search engine |
US20070192190A1 (en) | 2005-12-06 | 2007-08-16 | Authenticlick | Method and system for scoring quality of traffic to network sites |
US7953740B1 (en) * | 2006-02-13 | 2011-05-31 | Amazon Technologies, Inc. | Detection of behavior-based associations between search strings and items |
US20070208730A1 (en) * | 2006-03-02 | 2007-09-06 | Microsoft Corporation | Mining web search user behavior to enhance web search relevance |
US20070266021A1 (en) | 2006-03-06 | 2007-11-15 | Murali Aravamudan | Methods and systems for selecting and presenting content based on dynamically identifying microgenres associated with the content |
US20070214131A1 (en) * | 2006-03-13 | 2007-09-13 | Microsoft Corporation | Re-ranking search results based on query log |
US20070233653A1 (en) | 2006-03-31 | 2007-10-04 | Microsoft Corporation | Selecting directly bid upon advertisements for display |
US20080052219A1 (en) | 2006-03-31 | 2008-02-28 | Combinenet, Inc. | System for and method of expressive auctions of user events |
US20070288450A1 (en) | 2006-04-19 | 2007-12-13 | Datta Ruchira S | Query language determination using query terms and interface language |
US20070260597A1 (en) * | 2006-05-02 | 2007-11-08 | Mark Cramer | Dynamic search engine results employing user behavior |
US20080010143A1 (en) | 2006-06-22 | 2008-01-10 | Rob Kniaz | Secure and extensible pay per action online advertising |
US7809716B2 (en) | 2006-06-27 | 2010-10-05 | International Business Machines Corporation | Method and apparatus for establishing relationship between documents |
US20080027913A1 (en) | 2006-07-25 | 2008-01-31 | Yahoo! Inc. | System and method of information retrieval engine evaluation using human judgment input |
US8073263B2 (en) | 2006-07-31 | 2011-12-06 | Ricoh Co., Ltd. | Multi-classifier selection and monitoring for MMR-based image recognition |
US20080052273A1 (en) | 2006-08-22 | 2008-02-28 | Fuji Xerox Co., Ltd. | Apparatus and method for term context modeling for information retrieval |
US20080059453A1 (en) | 2006-08-29 | 2008-03-06 | Raphael Laderman | System and method for enhancing the result of a query |
US8027439B2 (en) | 2006-09-18 | 2011-09-27 | Fair Isaac Corporation | Self-calibrating fraud detection |
US20080082518A1 (en) | 2006-09-29 | 2008-04-03 | Loftesness David E | Strategy for Providing Query Results Based on Analysis of User Intent |
US20080091650A1 (en) | 2006-10-11 | 2008-04-17 | Marcus Felipe Fontoura | Augmented Search With Error Detection and Replacement |
US8086599B1 (en) | 2006-10-24 | 2011-12-27 | Google Inc. | Method and apparatus for automatically identifying compunds |
US20080189269A1 (en) | 2006-11-07 | 2008-08-07 | Fast Search & Transfer Asa | Relevance-weighted navigation in information access, search and retrieval |
US20080114624A1 (en) | 2006-11-13 | 2008-05-15 | Microsoft Corporation | Click-fraud protector |
US20080114729A1 (en) | 2006-11-13 | 2008-05-15 | Google Inc. | Computer-implemented interactive, virtual bookshelf system and method |
US20080114750A1 (en) | 2006-11-14 | 2008-05-15 | Microsoft Corporation | Retrieval and ranking of items utilizing similarity |
US7533130B2 (en) | 2006-12-19 | 2009-05-12 | Yahoo! Inc. | User behavior reporting based on pre-aggregated activity data |
US7987185B1 (en) | 2006-12-29 | 2011-07-26 | Google Inc. | Ranking custom search results |
US20080162475A1 (en) | 2007-01-03 | 2008-07-03 | Meggs Anthony F | Click-fraud detection method |
US7801885B1 (en) | 2007-01-25 | 2010-09-21 | Neal Akash Verma | Search engine system and method with user feedback on search results |
US20080183660A1 (en) | 2007-01-30 | 2008-07-31 | Google Inc. | Content identification expansion |
US20080228442A1 (en) | 2007-03-07 | 2008-09-18 | Lisa Ellen Lippincott | Statistical data inspector |
US20080256050A1 (en) | 2007-04-10 | 2008-10-16 | Ruofei Zhang | System and method for modeling user selection feedback in a search result page |
US8037042B2 (en) | 2007-05-10 | 2011-10-11 | Microsoft Corporation | Automated analysis of user search behavior |
US7895177B2 (en) | 2007-05-29 | 2011-02-22 | Yahoo! Inc. | Enabling searching of user ratings and reviews using user profile location, and social networks |
US7818320B2 (en) | 2007-05-31 | 2010-10-19 | Yahoo! Inc. | Enhanced search results based on user feedback relating to search result abstracts |
US20080313247A1 (en) | 2007-06-12 | 2008-12-18 | Brian Galvin | Page Ranking Based on a Behavioral WEB Graph |
US20080313168A1 (en) | 2007-06-18 | 2008-12-18 | Microsoft Corporation | Ranking documents based on a series of document graphs |
US20090012969A1 (en) | 2007-07-02 | 2009-01-08 | Rail Peter D | Systems and processes for evaluating webpages |
US8051061B2 (en) | 2007-07-20 | 2011-11-01 | Microsoft Corporation | Cross-lingual query suggestion |
US20090157643A1 (en) | 2007-12-12 | 2009-06-18 | Microsoft Corporation | Semi-supervised part-of-speech tagging |
US20090182723A1 (en) | 2008-01-10 | 2009-07-16 | Microsoft Corporation | Ranking search results using author extraction |
US7877404B2 (en) | 2008-03-05 | 2011-01-25 | Microsoft Corporation | Query classification based on query click logs |
US7974974B2 (en) | 2008-03-20 | 2011-07-05 | Microsoft Corporation | Techniques to perform relative ranking for search results |
US7836058B2 (en) | 2008-03-27 | 2010-11-16 | Microsoft Corporation | Web searching |
US20090287656A1 (en) | 2008-05-13 | 2009-11-19 | Bennett James D | Network search engine utilizing client browser favorites |
US8037043B2 (en) | 2008-09-09 | 2011-10-11 | Microsoft Corporation | Information retrieval system |
US8156111B2 (en) | 2008-11-24 | 2012-04-10 | Yahoo! Inc. | Identifying and expanding implicitly temporally qualified queries |
US20100131563A1 (en) | 2008-11-25 | 2010-05-27 | Hongfeng Yin | System and methods for automatic clustering of ranked and categorized search objects |
US20100205541A1 (en) | 2009-02-11 | 2010-08-12 | Jeffrey A. Rapaport | social network driven indexing system for instantly clustering people with concurrent focus on same topic into on-topic chat rooms and/or for generating on-topic search results tailored to user preferences regarding topic |
US20100241472A1 (en) | 2009-03-23 | 2010-09-23 | David Antonio Hernandez | Illness specific diagnostic system |
US20110295844A1 (en) | 2010-05-27 | 2011-12-01 | Microsoft Corporation | Enhancing freshness of search results |
Non-Patent Citations (52)
Title |
---|
Agichtein, Eugene et al., "Improving Web Search Ranking by Incorporating User Behavior Information", SIGIR '06, Aug. 6-11, 2006, Seattle, WA, pp. 19-26. |
Agichtein, Eugene et al., "Learning User Interaction Models for Predicting Web Search Result Preferences", Proceedings of the 29th Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, Seattle Washington, (2006), pp. 3-10. |
Bar-Llan et al., "Presentation Bias is Significant in Determining User Preference for Search Results-A User Study"; Journal of the American Society for Information Science and Technology, vol. 60, Issue 1 (p. 135-149), Sep. 2008, 15 pages. |
Bar-Llan et al.; "Methods for comparing rankings of search engine results"; Computer Networks: The International Journal of Computer and Telecommunications Networking, Jul. 2006, vol. 50, Issue 10, 19 pages. |
Boldi, et al.; The Query-flow Graph: Model and Applications; CKIM '08, Oct. 26-30, Napa Valley, California, USA, pp. 609-617. |
Boyan, Justin et al., "A Machine Learning Architecture for Optimizing Web Search Engines", School of Computer Science, Carnegie Mellon University, May 10, 1996, to appear in AAAI Workshop in Internet-Based Information Systems, Oregon, 1996, pp. 1-8. |
Burke, Robin, Integrating Knowledge-based and Collaborative-filtering Recommender Systems, AAAI Technical Report WS-99-01, Compilation copyright © 1999, AAAI (www.aaai.org), pp. 69-72. |
Craswell, et al.; "Random Walks on the Click Graph"; Jul. 2007; SIGIR '07, Amsterdam, the Netherlands, 8 pages. |
Cutrell, Edward et al., "Eye tracking MSN Search: Investigating snippet length, target position and task types", Jan. 2007, pp. 1-13. |
Diligenti, et al., Users, Queries and Documents: A Unified Representation for Web Mining, wi-iat, vol. 1, 2009 IEEE/WIC/ACM International Joint Conference on Web Intelligence and Intelligent Agent Technology, 2009, pp. 238-244. |
Google News archive, Jul. 8, 2003, Webmasterworld.com, [online] Retrieved from the Internet http://www.webmasterwolrd.com/forum3/15085.htm [retrieved on Nov. 20, 2009] 3 pages. |
Gr{hacek over (c)}ar, Miha, User Profiling: Collaborative Filtering, SIKDD 2004, Oct. 12-15, 2004, Ljubljana, Slovenia, 4 pages. |
Hofmann, Thomas, Latent Semantic Models for Collaborative Filtering, ACM Transactions on Information Systems, vol. 22, No. 1, Jan. 2004, pp. 89-115. |
Jansen et al., "An Analysis of Web Documents Retrieved and Viewed", School of Information Sciences and Technology, The Pennsylvania State University, the 4th International Conference on Internet Computing, Las Vegas, Nevada, pp. 65-69, Jun. 23-26, 2003, 5 pages. |
Joachims et al., "Search Engines that Learn from Implicit Feedback"; Aug. 2007, IEEE Computer Society. |
Joachims, "Evaluating Search Engines Using Clickthrough Data", Cornell University, Department of Computer Science, Draft, Feb. 19, 2002, 13 pages. |
Joachims, T., Evaluating retrieval performance using clickthrough data. Proceedings of the SIGIR Workshop on Mathematical/Formal Methods in Information Retrieval; Aug. 12-15, 2002; Tampere, Finland, 18 pages. |
Joachims, Thorsten, "Optimizing Search Engines using Clickthrough Data", Proceedings of the Eighth ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, Edmonton, Alberta, Canada (2002), pp. 133-142. |
Kelly, Diane et al., "Implicit Feedback for Inferring User Preference: A Bibliography", SCILS, Rutgers University, New Brunswick, NJ 08901, 11 pages. |
Lemire, Daniel, Scale and Translation Invariant Collaborative Filtering Systems, Published in Information Retrieval, 8(1), pp. 129-150, 2005. |
Linden, Greg et al., Amazon.com Recommendations: Item-to-Item Collaborative Filtering, [online ], http://computer.org/internet/, IEEE Internet Computing, Jan.-Feb. 2003, IEEE Computer Society, pp. 76-80. |
McDonnell, Philip, A., "Time Based Ranking," U.S. Appl. No. 11/870,893, filed Oct. 11, 2007, to be published by the USPTO in a file wrapper, 42 pages. |
Nicole, Kristen, Heeii is StumbleUpon Plus Google Suggestions, [online], Retrieved from the Internet http://mashable.com/2007/05/15/heeii/, 11 pages. |
Radlinski, et al., Query Chains: Learning to Rank from Implicit Feedback, KDD '05, Aug. 21-24, 2005, Chicago, Illinois, USA, 10 pages. |
Schwab, et al., Adaptivity through Unobstrusive Learning, 2002, 16(3), pp. 5-9. |
Stoilova, Lubomira et al., GiveALink: Mining a Semantic Network of Bookmarks for Web Search and Recommendation, LinkKDD '05, Aug. 21, 2005, Chicago, IL, USA, 8 pages. |
U.S. Appl. No. 11/556,086, filed Nov. 2, 2006, in Office Action mailed Jun. 23, 2010, 21 pages. |
U.S. Appl. No. 11/556,143, filed Nov. 2, 2006, in Office Action mailed Apr. 20, 2011, 18 pages. |
U.S. Appl. No. 11/556,143, filed Nov. 2, 2006, in Office Action mailed Jan. 25, 2010, 14 pages. |
U.S. Appl. No. 11/556,143, filed Nov. 2, 2006, in Office Action mailed Jul. 6, 2010, 20 pages. |
U.S. Appl. No. 11/685,095, filed Mar. 12, 2007, in Office Action mailed Apr. 13, 2011, 31 pages. |
U.S. Appl. No. 11/685,095, filed Mar. 12, 2007, in Office Action mailed Feb. 25, 2009, 21 pages. |
U.S. Appl. No. 11/685,095, filed Mar. 12, 2007, in Office Action mailed Feb. 8, 2010, 31 pages. |
U.S. Appl. No. 11/685,095, filed Mar. 12, 2007, in Office Action mailed Sep. 10, 2009, 23 pages. |
U.S. Appl. No. 12/331,872, Le et al. |
U.S. Appl. No. 12/623,276, filed Nov. 20, 2009, Modifying Scoring Data Based on Historical Changes, Kim et al. |
U.S. Appl. No. 12/717,475, filed Mar. 4, 2010, Deriving Site Reputation and Focus From User Feedback Statistics, Thakur, et al. |
U.S. Appl. No. 12/825,461, filed Jun. 29, 2010, Kim et al. |
U.S. Appl. No. 13/310,901, filed Dec. 5, 2011, Kim et al., Refining Search Results. |
U.S. Appl. No. 13/476,875, filed May 21, 2012, Ranking Search Results Based on Similar Queries, Lopatenko et al. |
U.S. Appl. No. 13/608,278, filed Sep. 10, 2012, Kuramochi et al., Collecting Image Search Event Information. |
U.S. Appl. No. 13/617,019, filed Sep. 14, 2012, Tong et al. |
U.S. Appl. No. 13/620,528, filed Sep. 14, 2012, Kim et al., Refining Search Results. |
U.S. Appl. No. 13/898,363, filed May 20, 2013, Tong et al. |
U.S. Appl. No. 13/953,162, filed Jul. 29, 2013, Kim et al. |
U.S. Appl. No. 14/143,622, filed Dec. 30, 2013, Kim et al. |
W3C, URls, URLs and URNs: Classification and Recommendations 1.0, Report from the joint W3C/IETF UR1 Planning Interest Group, Sep. 21, 2001, 8 pages. |
Xiao, et al., Measuring Similarity of Interests for Clustering Web-Users, ADC, 2001, pp. 107-114. |
Xie et al., Web User Clustering from Access Log Using Belief Function, K-CAP '01, Oct. 22-23, 2001, Victoria, British Columbia, Canada, pp. 202-208. |
Yu et al., Selecting Relevant Instances for Efficient and Accurate Collaborative Filtering, CIKM '01, Nov. 5-10, 2001, Atlanta, Georgia, pp. 239-246. |
Zeng et al., Similarity Measure and Instance Selection for Collaborative Filtering, WWW '03, May 20-24, 2003, Budapest, Hungary, pp. 652-658. |
Zeng, et al., "Learning to Cluster Web Search Results", SIGIR '04, Proceedings of the 27th Annual International ACM SIGIR conference on research and development in information retrieval, 2004. |
Cited By (41)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US11216495B2 (en) | 2012-11-05 | 2022-01-04 | Unified Compliance Framework (Network Frontiers) | Methods and systems for a compliance framework database schema |
US9183499B1 (en) | 2013-04-19 | 2015-11-10 | Google Inc. | Evaluating quality based on neighbor features |
US10387413B2 (en) * | 2013-11-14 | 2019-08-20 | Clarion Co., Ltd. | Search result evaluation system, navigation system and search result evaluation method |
US20160239536A1 (en) * | 2013-11-14 | 2016-08-18 | Clarion Co., Ltd. | Search result evaluation system, navigation system and search result evaluation method |
US9626403B2 (en) * | 2014-12-03 | 2017-04-18 | Verizon Patent And Licensing Inc. | Relational data model variant |
US20160162535A1 (en) * | 2014-12-03 | 2016-06-09 | Verizon Patent And Licensing Inc. | Relational data model variant |
US9747336B1 (en) * | 2014-12-16 | 2017-08-29 | Justin Cutillo | Method and system for creating hyperlinks that cycle multiple search term relevant web sources and self-resolve to a single resource by measuring audience interaction |
US9298833B1 (en) * | 2015-04-02 | 2016-03-29 | Garry Carl Kaufmann | Unfailing self-correcting modified Boolean search engine |
WO2016160289A1 (en) * | 2015-04-02 | 2016-10-06 | Kaufmann Garry Carl | Unfailing self-correcting modified boolean search engine |
GB2551905A (en) * | 2015-04-02 | 2018-01-03 | Carl Kaufmann Garry | Unfailing self-correcting modified boolean search engine |
CN105243133B (en) * | 2015-09-30 | 2018-10-23 | 北京奇虎科技有限公司 | A kind of search record display methods and electronic equipment |
CN105243133A (en) * | 2015-09-30 | 2016-01-13 | 北京奇虎科技有限公司 | Searching record display method and electronic device |
CN105243132A (en) * | 2015-09-30 | 2016-01-13 | 北京奇虎科技有限公司 | Method for controlling search records and electronic device |
CN105243132B (en) * | 2015-09-30 | 2018-12-21 | 北京奇虎科技有限公司 | A kind of search record control method and electronic equipment |
US10936603B2 (en) * | 2015-11-02 | 2021-03-02 | International Business Machines Corporation | Rank-based calculation for keyword searches |
US10795898B2 (en) * | 2015-11-02 | 2020-10-06 | International Business Machines Corporation | Rank-based calculation for keyword searches |
US10055464B2 (en) * | 2015-11-02 | 2018-08-21 | International Business Machines Corporation | Rank-based calculation for keyword searches |
US10061818B2 (en) * | 2015-11-02 | 2018-08-28 | International Business Machines Corporation | Rank-based calculation for keyword searches |
US20180322126A1 (en) * | 2015-11-02 | 2018-11-08 | International Business Machines Corporation | Rank-based calculation for keyword searches |
US20170124087A1 (en) * | 2015-11-02 | 2017-05-04 | International Business Machines Corporation | Rank-based calculation for keyword searches |
US20170124081A1 (en) * | 2015-11-02 | 2017-05-04 | International Business Machines Corporation | Rank-based calculation for keyword searches |
US10019492B2 (en) | 2015-12-01 | 2018-07-10 | Huawei Technologies Co., Ltd. | Stop word identification method and apparatus |
JP2018501540A (en) * | 2015-12-01 | 2018-01-18 | 華為技術有限公司Ｈｕａｗｅｉ Ｔｅｃｈｎｏｌｏｇｉｅｓ Ｃｏ．，Ｌｔｄ． | Stopword identification method and apparatus |
WO2017161030A1 (en) | 2016-03-15 | 2017-09-21 | Laboratory Corporation Of America Holdings | Methods of assessing protein interactions between cells |
US20180060325A1 (en) * | 2016-08-26 | 2018-03-01 | Microsoft Technology Licensing, Llc | Rank query results for relevance utilizing external context |
US20200341991A1 (en) * | 2016-08-26 | 2020-10-29 | Microsoft Technology Licensing, Llc | Rank query results for relevance utilizing external context |
US11822560B2 (en) * | 2016-08-26 | 2023-11-21 | Microsoft Technology Licensing, Llc | Rank query results for relevance utilizing external context |
CN109661662A (en) * | 2016-08-26 | 2019-04-19 | 微软技术许可有限责任公司 | Query result is subjected to ranking for correlation using external context |
US10769156B2 (en) * | 2016-08-26 | 2020-09-08 | Microsoft Technology Licensing, Llc | Rank query results for relevance utilizing external context |
CN106682167A (en) * | 2016-12-26 | 2017-05-17 | 努比亚技术有限公司 | User behavior data statistics device and method |
CN106682167B (en) * | 2016-12-26 | 2020-08-14 | 山东昆仲信息科技有限公司 | Statistical device and method for user behavior data |
US20200142888A1 (en) * | 2017-04-29 | 2020-05-07 | Google Llc | Generating query variants using a trained generative model |
US11663201B2 (en) * | 2017-04-29 | 2023-05-30 | Google Llc | Generating query variants using a trained generative model |
US10824817B1 (en) | 2019-07-01 | 2020-11-03 | Unified Compliance Framework (Network Frontiers) | Automatic compliance tools for substituting authority document synonyms |
US11120227B1 (en) * | 2019-07-01 | 2021-09-14 | Unified Compliance Framework (Network Frontiers) | Automatic compliance tools |
US11610063B2 (en) | 2019-07-01 | 2023-03-21 | Unified Compliance Framework (Network Frontiers) | Automatic compliance tools |
US11727475B2 (en) * | 2019-12-13 | 2023-08-15 | Shopify Inc. | Systems and methods for recommending 2D image |
US20230325909A1 (en) * | 2019-12-13 | 2023-10-12 | Shopify Inc. | Systems and methods for recommending 2d image |
US11386270B2 (en) | 2020-08-27 | 2022-07-12 | Unified Compliance Framework (Network Frontiers) | Automatically identifying multi-word expressions |
US11941361B2 (en) | 2020-08-27 | 2024-03-26 | Unified Compliance Framework (Network Frontiers) | Automatically identifying multi-word expressions |
US11928531B1 (en) | 2021-07-20 | 2024-03-12 | Unified Compliance Framework (Network Frontiers) | Retrieval interface for content, such as compliance-related content |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US9110975B1 (en) | Search result inputs using variant generalized queries | |
US8756220B1 (en) | Modifying search result ranking based on corpus search statistics | |
US9390143B2 (en) | Recent interest based relevance scoring | |
US9916366B1 (en) | Query augmentation | |
US8600979B2 (en) | Infinite browse | |
US8868548B2 (en) | Determining user intent from query patterns | |
US9378247B1 (en) | Generating query refinements from user preference data | |
US9697259B1 (en) | Refining search results | |
US9235627B1 (en) | Modifying search result ranking based on implicit user feedback | |
US7617205B2 (en) | Estimating confidence for query revision models | |
US8645367B1 (en) | Predicting data for document attributes based on aggregated data for repeated URL patterns | |
US8615514B1 (en) | Evaluating website properties by partitioning user feedback | |
US9098568B2 (en) | Query suggestions from documents | |
US8898153B1 (en) | Modifying scoring data based on historical changes | |
US20100191758A1 (en) | System and method for improved search relevance using proximity boosting | |
EP2774051A1 (en) | Ranking of entity properties and relationships | |
US8959093B1 (en) | Ranking search results based on anchors | |
EP3485394B1 (en) | Contextual based image search results | |
US20190354604A1 (en) | Method of and system for recommending fresh search query suggestions on search engine | |
US20170075899A1 (en) | Utilizing keystroke logging to determine items for presentation | |
US9424353B2 (en) | Related entities | |
US20130246381A1 (en) | Geo signal search result | |
US9623119B1 (en) | Accentuating search results | |
US8930351B1 (en) | Grouping of users | |
US9703871B1 (en) | Generating query refinements using query components |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:DILIGENTI, MICHELANGELO;KIM, HYUNG-JIN;STETS, ROBERT J.;SIGNING DATES FROM 20061103 TO 20070220;REEL/FRAME:018947/0683 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044334/0466Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 4 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 8TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1552); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 8 |
US20110276558A1 - Server-side match - Google Patents
Server-side match Download PDFInfo
- Publication number
- US20110276558A1 US20110276558A1 US13/179,705 US201113179705A US2011276558A1 US 20110276558 A1 US20110276558 A1 US 20110276558A1 US 201113179705 A US201113179705 A US 201113179705A US 2011276558 A1 US2011276558 A1 US 2011276558A1
- Authority
- US
- United States
- Prior art keywords
- query
- search queries
- text
- queries
- user input
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Abandoned
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/30—Information retrieval; Database structures therefor; File system structures therefor of unstructured textual data
- G06F16/33—Querying
- G06F16/3331—Query processing
- G06F16/3332—Query translation
- G06F16/3335—Syntactic pre-processing, e.g. stopword elimination, stemming
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/24—Querying
- G06F16/245—Query processing
- G06F16/2453—Query optimisation
- G06F16/24534—Query rewriting; Transformation
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/30—Information retrieval; Database structures therefor; File system structures therefor of unstructured textual data
- G06F16/33—Querying
- G06F16/3331—Query processing
- G06F16/3332—Query translation
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/30—Information retrieval; Database structures therefor; File system structures therefor of unstructured textual data
- G06F16/33—Querying
- G06F16/3331—Query processing
- G06F16/334—Query execution
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/951—Indexing; Web crawling techniques
Definitions
- This specification relates to generating text and, more particularly, to generating text based on numerical input.
- Portability generally requires a device small in size, which in turn limits the number of data entry keys and the amount of memory and available processing power.
- ultra portable devices often must be held in one hand or not held at all, so that data entry must be one-handed or no-handed.
- These limitations in the device generally must be compensated for by the user. For example, the user may have to use a limited keyboard such as a telephone keypad, or limited speech recognition capabilities.
- Such constrained devices may force a user to learn special tricks for data entry (such as shorthand writing on a PDA) or may generate data that the user never intended, by making inaccurate guesses at ambiguous data entries.
- PDAs have been programmed to recognize shorthand and longhand writing.
- the recognition accuracy may be poor, and writing on a small mobile device may be difficult for users.
- cell phones can recognize entered letters, even though the presence of three letters on each key can create ambiguities about the intended text, such as by allowing the user to press key combinations, either simultaneously or in sequence (e.g., triple tap).
- methods that include pressing key combinations, such as triple tap may require a user to generate substantially more keystrokes than if the user had access to a keyboard. The increase in keystrokes may slow down a user's interaction with the device and discourage retrieving and entering information using mobile devices.
- This specification describes systems and techniques for converting numeric queries into substantially equivalent textual queries.
- the systems and techniques discussed use search query logs to accurately select a most probably mapping for a numeric-to-text conversion.
- This mapping can occur when a system (e.g., a server-side search system) receives a series of numeric inputs (e.g., from a cell phone keypad) that may correspond to more than one word.
- a search server may receive input 22737, which corresponds to both the words ACRES and CASES, as part of a query.
- the server uses current entries in query logs to create mappings for words from the numeric input. If recent queries indicate that the term ACRES is currently more popular than the term CASES, the mapping may match the entry 22737 to the text ACRES.
- a computer-implemented method for matching text queries to corresponding numerically queries includes receiving a plurality of text queries at a server from a plurality of users, generating a numerically equivalent query for each text query of the plurality of text queries by mapping symbols of the text query to associated numbers using a keypad standard that specifies associations between symbols and numbers, generating a primary mapping between each numerically equivalent query and a text query having a substantially highest frequency of occurrence among text queries associated with the numerically equivalent query, and outputting a primary mapped text query in response to receiving an associated numerically equivalent query transmitted from a user.
- the method can include generating additional mappings between the numerically equivalent query and additional text queries based on the whether a frequency of occurrence for the additional text queries exceeds a predetermined occurrence threshold.
- the method may also include outputting the additional text queries with the primary mapped text query. Additionally, the outputting can include transmitting the primary mapped text query for display to the user.
- a system in a second general aspect, includes means for generating a numerically equivalent query for each of a previously stored text query by mapping symbols of the text query to associated numbers using a keypad standard that specifies associations between numbers and symbols, a frequency calculator to calculate a frequency of occurrence for each stored text query, and a mapper to generate a mapping between the numerically equivalent query and a text query with a substantially highest frequency of occurrence among text queries associated with the numerically equivalent query.
- a method for generating text queries based on numerically equivalent queries input by users includes generating numerically equivalent queries based on text queries by representing each symbol of a text query using a number, mapping a text query having a greatest frequency of occurrence among the text queries corresponding to a numerically equivalent query, and outputting the mapped text query in response to receiving the correspondent numerically equivalent query from a user.
- the system can permit mapping text queries to numerical queries based on the text queries' current frequency of occurrence, which may increase the accuracy of numeric-to-text conversion.
- the system can increase the ease of applying numeric-to-text conversion internationally by accessing a text query corpus of a particular language based on a location of a user submitting a numeric query.
- a system can increase accuracy of numeric-to-text conversion by accessing a particular text query corpus based on a context (e.g., news search context, image search context, etc.) in which a user submits a numeric query.
- a context e.g., news search context, image search context, etc.
- a system may dynamically update text that is mapped to numeric queries based on recently received text queries from users.
- numeric-to-text conversion accuracy can be increased by selecting particular segmented text query corpuses (e.g., segmented by country, language, time, users, group of users, etc.), and defaulting to a superset segment if a selected segmented text query corpus does not include enough data.
- FIG. 1 shows an example system for converting numeric queries to text queries using numeric-to-text query mappings maintained on a server.
- FIG. 2 shows a portion of the system of FIG. 1 in more detail.
- FIG. 3 is a flow chart of an illustrative method for using text-based query logs to generate numeric-to-text query mappings.
- FIG. 4 is a flow chart of an illustrative method for processing numeric queries using numeric-to-text query mappings.
- FIG. 5 is a schematic diagram of a general computer system and an example mobile device.
- FIG. 1 shows an example system that uses search query logs to select the most probably mapping for a numeric-to-text conversion.
- This mapping can occur when the server receives a series of numeric inputs (e.g., from a cellular phone keypad) that may correspond to more than one word. For example, the server can receive the input “22737” as part of a query, however, this numerical series can correspond to both the words “ACRES” and “CASES.”
- the server can use current entries in query logs to create mappings for words from the numeric input. If recent queries indicate that the term “ACRES” is currently more popular than the term “CASES,” the mappings can match the entry “22737” to the text “ACRES.”
- FIG. 1 shows an example system 100 for converting numeric queries to text queries using numeric-to-text query mappings 102 maintained on a server 104 .
- a computing device 106 transmits a numeric query 108 to the server 104 .
- the numeric query 108 can be translated into text using the mappings 102 .
- the text can then be used, for example, in a search which generates results that are returned to the computing device 106 .
- the computing device 106 can be a cellular phone running a web browser 110 .
- the user may input a numeric search query instead of entering a text search query into the cellular phone because entering text using the cellular phone's keypad may require depressing a key multiple times to select a desired letter.
- each key on a cellular phone's keypad can be assigned three or four letters.
- Some keypads indicate such mapping of the letters to the numeric keys by printing the letters on the numeric keys.
- the letters “ABC” can be printed on a cellular phone's “2” key.
- the remaining letters can be mapped to the remaining numeric keys.
- a user can use the triple tap method, where the user presses “222” to enter the letter “C,” “2” to enter the letter “A,” and “777” to enter the letter “R.”
- a user, however, entering a numeric search query may only have to press each key once because a single key can represent any one of the letters assigned to it. For example, a user can select the letter A, B or C by pressing the “2” key of the keypad. Using this method, a user can enter a numeric search “227,” which represents the term “CAR.” Pressing 2+2+7 for the text “CAR” may be more convenient than entering 222+2+777 (for “C”+“A”+“R”). The mappings 102 then can be used to disambiguate what text the numeric query “227” may represent.
- the numeric query 108 can be transmitted over a network, such as the Internet, and received by the server 104 .
- a query processor 112 executing within the server 104 , can process the numeric query 108 .
- the query processor 112 can use information included in the numeric-to-text query mappings 102 . Such information can be stored, for example, in a mappings table 115 .
- the query processor 112 can access a corresponding row (e.g., containing “227”) in the numeric-to-text query mappings 102 to look up an associated text query 118 (e.g., “CAR”) from a mapped text query column 116 .
- the server 104 can then return the associated text query 118 , such as “CAR,” along with search results 120 matching the associated text query.
- an associated text query field 122 of the web browser 110 can display the numeric-to-text translation “CAR” derived from the mappings 102
- a search results field 124 can display web content associated with the search results 120 generated using the translated text.
- the associated text query 118 can be returned and displayed on the computing device 106 without generating the search results 120 .
- the user can confirm the associated text query 118 is the text the user wanted to enter, and the confirmation (or associated text query) can be transmitted to the server 104 to generate the search results 120 .
- the server 104 can transmit multiple associated text queries from which the user can select. The associated text query selected by the user can be used by the server 104 to generate the search results 120 . This is described in more detail below.
- numeric queries 108 can translate into more than one text query, for example “229.”
- the numeric query “229” is ambiguous because it can translate to “BAY,” “CAW,” “CAY,” etc.
- the server 104 disambiguates numerical queries using a frequency ranking that reflects a number of times an associated text query occurs in a stored log of text queries. For example, two of the translations, “BAY” and “CAW,” are represented as rows in the mappings table 115 used for the numeric-to-text query mappings 102 . Both rows have “229” in their numeric query columns 114 .
- the numeric query “229” can be translated as “BAY” or “CAW.”
- the query processor 112 can access a frequency ranking column 126 .
- the frequency ranking 126 for “BAY” is “1,” indicating a higher frequency ranking than that for “CAW,” which has a frequency ranking of “2.”
- the query processor 112 can make a probabilistic determination that the numeric query “229” represents “BAY.”
- numeric queries 108 may not have corresponding entries in the numeric-to-text query mappings 102 .
- the numeric query 108 may be a string of digits which represent a string of uncommon words.
- the query processor 112 can use a numeric-to-text converter 128 and a language model not derived from textual server query logs to formulate a probable corresponding text query.
- the numeric-to-text converter 128 can determine a probable corresponding text query using occurrence information from a language model corpus used in standard voice recognition programs.
- numeric search queries can have more than one search term.
- a numeric search query can include several terms delimited by, for example, an asterisk symbol, which represents a space between the terms.
- the system 100 can be configured to make use of information from text queries it receives over time.
- the system 100 can update the numeric-to-text query mappings 102 using information from text-based search queries.
- the numeric-to-text mappings can also be updated based on the text corpus that is used for searching, for example, web-pages that are crawled and indexed by a search engine.
- the frequency rankings are updated on a periodic or predetermined basis using new textual queries received since the last update of frequency rankings.
- the newly received text queries can be examined and statistical information on the occurrence of query terms can be used to supplement existing statistical models of frequency occurrence for the associated query terms. This may offer an advantage of dynamically updating the ability of the system to accurately disambiguate numeric queries based on recently received text queries.
- the frequency rankings can be generated using a previously collected corpus of text queries, such as historical query logs. The frequency rankings then can be updated using the previously collected corpus as described above.
- FIG. 2 shows a portion of the system 100 of FIG. 1 in more detail.
- FIG. 2 shows additional detail within the server 104 , according to one implementation.
- the system 100 can receive text queries 202 in addition to the numeric queries 108 .
- the system 100 can be implemented, for example, as part of an Internet search provider's general system.
- the system 100 can obtain information about occurrence and concurrence of terms included in submitted text queries.
- the server 104 includes an interface 204 that allows communications in a variety of ways.
- server 104 can be communicatively connected to a network such as the Internet, and thereby communicate with various devices, such as server farms, wireless communication devices, personal computers, and cellular phones.
- the communication flow for any device can be bidirectional so that server 104 can receive information, such as commands, from the devices, and can send information to the devices.
- Requests received from devices can be provided to the query processor 112 , which can interpret a request, associate it with predefined acceptable requests, and pass it on, such as in the form of a command to another component of system 100 to perform a particular action.
- the query processor 112 can cause a search engine 206 to generate search results corresponding to the search request.
- the search engine 206 can use data retrieval and search techniques, such as those used by the Google PageRankTM system.
- the results generated by the search engine 206 can then be provided to the original requester using a response formatter 208 , which carries out formatting on the results.
- the server 104 can update its numeric-to-text query mappings 102 in addition to returning the search results 120 .
- the numeric-to-text query mappings 102 can be updated as text queries 202 are received over time. These updates can occur in real time or on a periodic or predetermined basis.
- the server 104 may receive a text query 202 , such as “HOT CAR,” from the browser 110 executing on a user's cellular phone.
- the query processor 112 can “recognize” the search query “HOT CAR” as a text query, as opposed to a numeric query, because it contains, for example, American Standard Code for Information Interchange (ASCII) representations of one or more letters, as opposed to being composed of ASCII representations of digits.
- ASCII American Standard Code for Information Interchange
- the query mapping module 210 can maintain up-to-date numeric-to-text query mappings 102 based on the text query 202 that the server 104 receives.
- One component of the query mapping module 210 a numeric query generator 212 , can determine an equivalent numeric query corresponding to each text query 202 it receives. The determination can be based on keypad standards, such as those employed to map letters to their corresponding numeric keys on a cellular phone's keypad, and can further be language specific. For example, the letter H is mapped to the numerical equivalent “4” key on a cellular phone using the Mobile 1 keypad standard. The remaining letters and space in the text “HOT CAR” are converted using the Mobile 1 keypad standard.
- keypad standards can be used to convert the incoming text query to a numerical representation, such as the International Standard, the North American Classic, the Australian Classic, and the United Kingdom (UK) Classic.
- the numeric query generator 212 receives a text query 202 containing “HOT CAR,” it can determine using the Mobile 1 keypad standard that the corresponding equivalent numeric query is “468 227.” As shown in FIG. 1 , the query mapping module 210 can update a row in the numeric-to-text query mappings 102 with the value “468 227” in the numeric query column 114 and the value “HOT CAR” in the mapped text query column 116 .
- Such an update may include incrementing a count column (not depicted in the mappings table 115 ) to indicate the receipt of an additional instance of the search query “HOT CAR.” In certain implementations, such count columns may be compared periodically to adjust frequency rankings 126 of entries in the mappings table 115 .
- the description of the mappings table 115 is for the purposes of illustration and is not intended to limit the data structures within which the mapping information can be stored. In other implementations, the mapping information can be stored in various other data structures, e.g., arrays, tree structures, matrices, etc.
- the server 104 can receive numerous additional text queries 202 (e.g., “GOT CAR,” “IOU CAP,” etc.) which have the equivalent numeric query “468 227” as “HOT CAR.”
- the query mapping module 210 can use information from these additional text queries 202 to update the numeric-to-text query mappings 102 .
- the server 104 can receive numeric queries 108 . It can be advantageous to store and maintain information based on text queries 202 to make probabilistic determinations regarding which text queries map to received numeric queries 108 . These determinations can be based on frequencies that particular terms occur in received search queries.
- a text query frequency calculator 216 can maintain and use frequency counts of individual search queries received over time by the server 104 .
- a search query's frequency count can represent the occurrence of the search query, or the occurrence of the terms within the search query when it contains multiple terms.
- the frequency counts can be used to calculate and maintain up-to-date frequency rankings 126 (see FIG. 1 ) in the mappings table 115 .
- mapped text queries 116 “BAY” and “CAW” in the mappings table 115 share the same “229” entry in the numeric query column 114 , but the entries have different frequency rankings 126 .
- the “BAY” entry in the mappings table 115 has a higher frequency ranking of “1.”
- the higher ranking of “1” may be attributed to a greater occurrence rate of “BAY” in search queries over its counterpart “CAW,” which has a frequency ranking of
- recently received text queries or terms within multiple-term text queries can be more heavily weighted in the frequency rankings than text queries or terms received at an earlier time. This can increase a frequency ranking of the recently received text queries or terms above a frequency ranking of earlier received text queries or terms despite a greater occurrence of the earlier received queries or terms relative to the recently received ones.
- the system 100 can disambiguate numeric queries 108 corresponding to the same mapped text queries.
- the query mapping module 210 can include another component, a primary mapper 214 , which will now be described.
- the primary mapper 214 can determine, for a particular numeric query 114 , the “primary” mapped text query 116 associated with it. Designating a “primary” mapped text query can be used to determine the most probable text query 116 for a particular numeric query 108 received by the server 104 . For example, when the mappings table 115 contains more than one row having the same numeric query 114 , such as “229” of FIG. 1 , the primary mapper 214 can designate one of the mapped text queries 116 as the primary mapped text query. In certain implementations, the primary mapper 214 can select a term or search query having the highest frequency ranking 126 , making it the primary mapped text query. In other implementations, the primary mapper 214 may use the frequency rankings 126 in conjunction with additional information (not depicted in the mappings table 115 ), such as assigning a higher ranking to mapped text queries generally received more recently, as described above.
- the primary mapper 214 can automatically designate a mapped text query 116 as a “primary” mapped text query when just one row exists in the mappings table 115 for its corresponding numeric query 114 .
- the numeric query “227” shown in FIG. 1 has only one associated mapped text query 116 “CAR” in the mappings table 115 , so that the primary mapper 214 designates that text query 116 as the primary one.
- the numeric query “228” has two associated mapped text queries 116 “BAY” and “CAW.”
- the primary mapper 214 can determine that the mapped text query 116 “BAY” is the “primary” mapped text query because its frequency ranking is higher (e.g., “1” compared to “2” for the “CAW” entry).
- Having a primary mapped text query for each of the numeric queries 114 in the mappings table 115 can aid in resolving ambiguities for numeric queries 108 received by the server 104 . For example, when the server 104 receives an ambiguous numeric query 108 such as “228,” the server 104 can select “BAY” as the most probable match to the numeric query 108 if “BAY” is the “primary” mapped query.
- the query mapping module 210 can update the mappings table 115 as needed to maintain updated frequency rankings 126 and designations of the primary mapped text query for each numeric query 114 .
- the system 100 can additionally make use of frequencies of text queries processed by the server 104 before the system 100 's installation. For example, it can be advantageous to use information from stored text queries 202 received by the server 104 in a period before the system 100 's installation.
- the query mapping module 210 can analyze query logs 218 representing past queries for use in updating the numeric-to-text query mappings 102 .
- the analysis can determine frequencies of text-only queries processed by the server 104 during a time frame before the system 100 is used to convert numeric queries to text queries.
- the system 100 can analyze the query logs 218 to determine frequencies of past text queries, such as “HOT CAR,” as well as other previous search queries.
- the system 100 can use the text query frequency counter 216 to aid in identifying and removing from consideration individual search queries having frequency counts that fall below a pre-defined threshold. For example, while it may be useful to consider past search queries, such as “HOT CAR,” that have high frequency counts (e.g., several millions), seldom-used past search queries having extremely low frequency counts may be omitted from the table because they may be less likely to be reissued in future numeric queries 108 . By limiting initial numeric-to-text query mappings 102 to higher frequency past text queries, the conversion process can store information in the mappings 102 representing more probabilistic future numeric queries.
- the numeric query generator 212 can generate equivalent numeric queries for each processed text query. For example, for a text query stored in the query logs 218 , such as “HOT CAR,” the numeric query generator 212 can calculate an equivalent numeric query “468 227” using a translation standard as described above, and a row in the mappings table 115 can be created or updated to include information related to the text query.
- frequency counts for the text queries can be maintained substantially simultaneously to the processing of the query 108 . After each of the text queries has been assigned an equivalent numeric query, the primary mapper 214 can use the frequency counts to compute frequency rankings 126 .
- the numeric-to-text query mappings 102 can include columns and rows substantially similar to those included in the mappings table 115 , and they can include additional columns (not shown in FIG. 1 ) that facilitate future maintenance of the numeric-to-text query mappings 102 .
- This maintenance e.g., maintaining the most frequently issued textual query as the primary mapped query for a numerical query
- the query processor 112 can determine if the numeric query 108 is represented by one or more entries in the mappings table 115 .
- the numeric query 108 may be in the mappings table 115 if the associated text query has been processed previously by the server 104 . If so, the query processor 112 can access one or more corresponding rows within the mappings table 115 .
- the response formatter 208 can use information from the corresponding rows to provide a response to the numeric query's originator.
- the query processor 112 can look up the mapped text query 116 “BAT” because its numeric query field 114 matches the numeric query 108 “228.” However, when the mappings table 115 contains two or more rows matching the numeric query 108 , the query processor 112 can resolve the ambiguity by selecting the “primary” mapped text query, which has the highest frequency ranking 126 . For example, if the numeric query 108 is “229,” the query processor 112 can select the “primary” mapped text query “BAY,” because it has a higher frequency ranking than that of “CAW.” The response formatter 208 can transmit the selected text query as the associated text query 118 to the originator of the search query.
- the query processor 112 can use the entire numeric query to look up a mapped text query 116 in the mappings 102 .
- the query processor 112 may divide the numeric query 108 into various combinations of its constituent terms, and process each term separately or in various combinations. For example, a numeric query 108 , such as “468 639 227” (representing the text “HOT NEW CAR”), has three search terms.
- the query processor 112 can divide the numeric query 108 “468 639 227” for processing in various ways.
- the mappings table 115 includes a “HOT CAR” entry, but no entry for “HOT NEW CAR.”
- the query processor 112 can split the query into two components: “468 227” and “639.” In this case, the query processor 112 can use “468 227” to look up the associated mapped text query 116 “HOT CAR”. For the remaining “639” term, the query processor 112 may access the mappings 102 to identify the associated text query “NEW.” The system may generate “NEW” instead of other possibilities, such as “MEW,” using frequency rankings 126 in the mappings table 115 for rows containing mapped text queries 116 “NEW” and “MEW” (not shown in FIG. 1 ). The query processor 112 can combine the two text query terms, and provide them to the search engine 206 to find matching search results 120 .
- the response formatter 208 can transmit a group of text queries 220 in addition to the search results 120 . This can be useful, for example, if more than one mapped text query 116 has a high probability of matching the user's intent. For example, if the numeric query 108 is “229,” the additional text queries 220 can include “CAW” and any other mapped text queries whose numeric query 114 in the mappings table “229.” The user can then select the desired term form the group of text queries.
- the query processor 112 can access user search profiles 222 to affect how a particular user's text query 202 is processed.
- the search profiles 222 can contain information for each user (e.g., where the user opts to be identified based on IP address or cookies) regarding patterns of search queries issued over time. For example, while some users may have issued queries related to automobiles, others may have not issued such queries.
- the type of information contained in the search profiles 222 can be user-specific, while the information maintained in the numeric-to-text query mappings 102 may be based on a compilation of submitted text queries from multiple users. While processing a numeric query 108 for a particular user, the query processor 112 can give partial consideration to the information contained for that user in the search profiles 222 .
- a user who previously searched using terms relating to automobiles may have terms related to automobiles more heavily weighted than other users. For example, if the user submits a numeric query “228,” the system may increase the frequency ranking for the term “CAR” above the term “BAR” because of the user's previous searches relating to automobiles.
- the numeric-to-text converter 128 can determine an associated text query 118 by using the numeric-to-text converter 128 .
- the system may determine more than one associated text query 118 and provide the user with list of possible text translations for user selection.
- the server 104 may include additional components that facilitate processing queries in other ways.
- the query processor 112 includes a DTMF-to-ASCII Converter 230 .
- Dual-tone multi-frequency (DTMF) refers to the signal generated when a digit on a telephone's keypad is pressed.
- the DTMF-to-ASCII converter 230 can process these DTMF signals and create numerical ASCII equivalents that can be used by the search engine 206 in generating corresponding search results 120 .
- a user can press multiple digits on a cellular phone to formulate a search query such as “468 228.”
- the search query received by the server 104 is a series of DTMF tones.
- the DTMF tones can be used to generate numerical equivalents used by the query mapping module to determine corresponding text queries.
- the response formatter 208 can include a text-to-speech converter 232 for synthesizing speech corresponding to the search results 120 .
- the text-to-speech converter 232 can instead create synthesized speech, which verbalizes the search query results (or a portion of the search query results). In this way, a user of a computing device having a limited display, such as a cellular phone, can instead “listen” to the results of a search query.
- the response formatter 208 can use the text-to-speech converter 232 to aid the user in confirming the numeric-to-text translation of the user's numeric query 108 .
- the text-to-speech converter 232 may create a confirmation message such as “Did you mean ‘HOT CAR?’” that may be transmitted to the user's cellular phone.
- the user can confirm by verbalizing confirmation (or rejection) of the text translation when prompted by the server.
- the user can select a control on the computing device (e.g., a key on a cellular phone's keypad) to confirm or reject the text query.
- the server 104 can include the search engine 206 , which in turn can include multiple components.
- the search engine 206 can access an index 224 of web sites instead of searching the web sites themselves each time a search request is made, which can make the searching more efficient.
- the index 224 can be populated using information collected and formatted by a web crawler 226 , which can continuously scan potential information sources for changing information.
- the server 104 also may access system storage 228 as necessary.
- System storage 228 can include one or more storage locations for files needed to operate the system, such as applications, maintenance routines, management and reporting software, etc.
- FIG. 3 is a flow chart of an illustrative method 300 for using text-based query logs to generate numeric-to-text query mappings 102 in FIG. 2 .
- the method 300 can be used during a conversion process coincident with the installation of the system 100 .
- the information from past text-based search queries can be examined to produce information usable by the system 100 in processing numeric search queries.
- the conversion process can pre-populate the numeric-to-text query mappings 102 for use by the server 104 for processing numeric queries 108 .
- Such mappings 102 can allow the server 104 to make more efficient use of information gained from past text queries 202 that occurred prior to the system 100 's installation.
- a stored text query is selected from a query log.
- a set of query logs 218 can store information from past text queries 202 received by the server 104 .
- Such entries can represent search queries comprising the full-text search terms of text queries 202 .
- one such entry in the query logs 218 may represent the text query 202 for “HOT CAR” that may have been received by the server 104 several months prior to the conversion process.
- the exemplary search query “HOT CAR” has two terms (“HOT” and “CAR”), although in general a search query represented by an entry in the query logs 218 can have from one to several search terms.
- the conversion process can use the entire search query, combinations of its multiple search query terms, or both, when it creates numeric equivalents.
- a search query having multiple terms can be split into constituent words for the purposes of processing each as an individual search term.
- search query “HOT CAR” can be split into “HOT” and “CAR” text query terms.
- the conversion process can split a multi-term search query into various combinations of search terms, including single-word search terms.
- a two-term search query such as “HOT CAR” may result in one text query (“HOT CAR”), two text queries (“HOT” and “CAR”), or three text queries (“HOT CAR,” “HOT,” and “CAR”).
- the corresponding text queries can be used to generate numeric queries.
- numerically equivalent queries are generated from text queries of previous steps using a keypad standard. For example, the entire stored text query from step 302 , as well as any text queries that step 304 produced by splitting multiple-term search queries into constituent terms can be processed. For each term in a text query, the conversion process assigns a numeric equivalent query based on a keypad standard. For example, referring to FIG. 2 , the numeric query generator 212 can generate numerically equivalent queries “468” and “227 from the text queries “HOT” and “CAR,” respectively.
- the “H” in “HOT” translates to a “4”
- the “O” translates to a “6”
- the “T” translates to an “8.”
- a two-term text query such as “HOT CAR” can translate to the numerically equivalent query “468 227” using the Mobile 1 keypad standard.
- step 308 a determination can be made whether the query log contains additional stored text entries yet to be processed. For example, referring to FIG. 2 , the system 100 can determine if additional unprocessed entries exist in the query logs 218 . If yes, the conversion process can repeat steps 302 to 306 for additional entries. Otherwise, if there are no more unprocessed text queries, the method can move to step 310 .
- step 310 the system selects a numerically equivalent query previously generated in step 306 .
- the system 100 may select the numerically equivalent query “468 227” representing the stored text query “HOT CAR” in the query logs 218 .
- the numerically equivalent query “468 227” selected here can represent various other stored text queries, such as “IOU CAP,” that are mapped to the same digits “468 227.” Having such a numerically equivalent query that is mapped to multiple stored text queries can create ambiguities, which can be resolved by the system, as described in the next few steps.
- step 312 stored text queries are linked to the corresponding numerically equivalent query selected in step 310 .
- stored text queries such as “HOT CAR,” “IOU CAP,” and potentially many others are “mapped” to the numerically equivalent query “468 227.”
- the mapping is accomplished by storing the entries in a table such as the mappings table 115 in FIG. 1 , in which a separate row is added for each of the stored text queries, such as “HOT CAR” and “IOU CAP.”
- the system can assign the value “468 227” to the numeric query column 114 for each of the newly created rows “HOT CAR” and “IOU CAP.”
- step 314 the system determines the frequency that each of the linked text queries occurs in the query log.
- the conversion process can use the text query frequency calculator 216 to count the frequencies of stored text queries such as “BAY” and “CAW” in the query logs 218 .
- many other stored text queries mapped to the numerically equivalent query “229” may exist, but only “BAY” and “CAW” are listed here.
- step 316 the system maps the most popular stored text query identified in step 312 to the numerically equivalent query selected in step 310 .
- the primary mapper 214 FIG. 2
- the mapper may also take into account the time at which these queries were made, giving higher weight to queries that were made recently.
- the primary mapper 214 can identify “BAY” as the most popular stored text query associated with the numerically equivalent query “229.” The conversion process can achieve this mapping by updating the “BAY” row in mappings table 115 .
- the system maps additional stored text queries identified in step 312 to the numerically equivalent query selected in step 310 .
- the mappings table 115 shows both “BAY” and “CAW” as text queries mapped to the numeric query “229.”
- mappings table 115 can use the frequency ranking column 126 to identify the most popular stored text query (“BAY”) as well as the less popular text queries such as “CAW.”
- BAY has a frequency ranking of 1, identifying it the most popular text query
- CAW has a ranking of 2, identifying it as occurring with the second highest frequency.
- Other additional stored text queries not shown here may have frequency rankings of 3, 4, 5, and so on, depending on their frequencies in the query logs 108 .
- step 320 the system determines if additional numerically equivalent queries remain to be processed. If so, the system selects another numerically equivalent query for processing, as shown in step 310 . Otherwise, the conversion process ends.
- FIG. 4 is a flow chart of an illustrative method 400 for processing numeric queries using numeric-to-text query mappings.
- the server 104 can use the mappings 102 to convert numeric queries 108 it receives from the computing devices 106 into textual queries.
- Processing can start in step 402 when the system receives a numeric input representing a search query composed of numeric terms.
- the server 104 may receive a numeric query 108 such as “468 227” representing “HOT CAR” from a user running a web browser 110 on a computing device 106 , such as a cellular phone.
- the search query here is a numeric query generated using the cellular phone's keypad.
- step 404 the system determines if there is a text query that maps to the entire numeric input received in step 402 .
- the query processor 112 can search the numeric-to-text query mappings 102 for a corresponding entry.
- the query processor 112 can look for a row having “468 227” in its numeric query column 114 . If the query processor 112 finds a matching row, processing can proceed to step 408 . Otherwise, processing can continue to step 406 .
- the system parses the numeric query into separate terms to be processed as separate numeric queries.
- the query processor 112 may receive a query such as “228 227” (e.g., representing “BAT CAR”) for which step 404 determines that no matching entry exists in the numeric-to-text query mappings 102 . Consequently, the processing of step 406 can include parsing the numeric query “228 227” into its constituent terms “228” and “227,” representing “BAT” and “CAR,” respectively. These separate terms can then be processed in the next step.
- the query processor 112 may receive a query such as “468 227” (e.g., representing “HOT CAR”). In this case, the query processor 112 can locate a matching entry in the numeric-to-text query mappings 102 without splitting the numeric query “468 227” into separate terms.
- step 408 the system selects the primary text query that is mapped to the numeric query.
- the selected primary text query may correspond to the entire numeric query or a portion of the numeric query (if the numeric query has been split into two or more terms as described in association with the step 406 ). While performing this step, the system can use the entire numeric query that step 404 determined to have a matching text query, or the system can use a numeric query representing a separate term resulting from step 406 .
- the query processor 112 of FIG. 1 can select the text query “HOT CAR” from the row in mappings table 115 corresponding to the numeric query “468 227” determined to exist in step 404 .
- the query processor 112 can select the text query “BAT” from the row in mappings table 115 corresponding to the numeric query term “228” separated in step 406 .
- a subsequent execution of step 408 can select the text query “CAR” corresponding to the second numeric query term “227” of the numeric query “228 227” representing “BAT CAR.”
- the query processor 112 locates the entry in the mappings table 115 having the highest frequency ranking 126 , such highest ranking 126 designating the entry as the “primary” mapped text query.
- the system selects additional text queries mapped to the numeric query.
- the text queries selected here may be less likely to correspond to the user's intent when launching the numeric query, but these additional queries can be included with the primary mapped text query when results are returned to the user. If the primary mapped text query selected by the query processor 112 later turns out to be incorrect, the user may be able to locate the intended text query from a list of additional text queries mapped to the same numeric query. For example, if the user issues a numeric query “229” intending to search for “CAW,” the query processor 112 may instead return “BAY” if it has the highest frequency ranking in the mappings table 115 .
- the system can return alternate text queries to the user. For example, when selecting additional text queries for the numeric query “229,” the query processor 112 would also select the “CAW” text query, and return it to the user for selection of the intended text query.
- step 412 the system determines if there are terms remaining in the numeric query that are unprocessed. This may occur if processing associated with the step 406 parses a numeric query into its constituent terms, and one or more terms remain to be processed. If additional terms need to be processed, processing can repeat steps 408 and 410 . Otherwise, processing can proceed to the next step.
- the system concatenates the text queries corresponding to the numeric queries and/or associated query terms into a single text query.
- the query processor 112 can concatenate the text query terms “BAT” and “CAR” to form a single text query “BAT CAR” corresponding to an original numeric query 108 such as “228 227” issued from the computing device 106 .
- the system transmits the text query resulting from step 414 to the user for confirmation that the converted text query is correct.
- the server 104 transmits the associated text query 118 , such as “BAT CAR,” to the computing device 106 (e.g., the user's cellular phone).
- a browser 110 running on the computing device 106 can then display the received associated text query 118 in the associated text query field 122 .
- the system can transmit the associated text query back to the user and the user would see “BAT CAR,” which is displayed in the associated text query field 122 .
- an additional field (not shown) can display the user's original numeric query for reference purposes.
- step 418 the system receives input from the user specifying whether the transmitted text query from step 416 is correct. For example, referring to FIG. 1 , if “BAT CAR” displayed in the associated text query field 122 , is the correct text query (e.g., it is the text query intended by the user), the user can input a confirmation (e.g., select a key, such as the pound (#) key). Otherwise, the user can input a rejection (e.g., select the star (*) key). If the entry is rejected, correction of the entry can occur in the next step, which can be skipped if the entry is already correct.
- a confirmation e.g., select a key, such as the pound (#) key
- a rejection e.g., select the star (*) key
- the system receives inputs from the user for correcting the incorrect text query. For example, referring to FIG. 1 , if the user receives an associated text query “BAY” for a numeric query 108 such as “229” intended by the user to represent “CAW,” the user can use controls on the computing device 106 to correct the entry.
- the correction process can involve selecting a different text query from a list of choices of text queries corresponding to the original numeric query.
- the browser 110 may include an additional area for displaying a list of alternate text queries in addition to “BAY.” The area may be adjacent to the associated text query field 122 . From the list of alternate text queries the user can select the intended text query (“CAW”) using other controls on the computing device 106 , such as arrow keys, to navigate through the list and make a selection.
- CAW intended text query
- the system generates search results using the primary mapped text query.
- the response formatter 208 includes search results obtained from the search engine 206 in the response sent to the user.
- the system may automatically generate search results with the associated text query 118 without waiting for user confirmation that the associated text query 118 is correct.
- the system 100 may generate search results when only one text query is mapped to the user's numeric query.
- search results associated with the first text query can be returned.
- the system may have a default action, where search results associated with the primary text query are returned to the user.
- the system transmits additional mapped text queries to the user. For example, in addition to transmitting “BAT CAR” as the text query most likely corresponding to the user's numeric query “228 227,” the system transmits the remaining mapped text queries that have a high frequency of occurrence in previously submitted text search queries, such as “IOU CAR,” to the client device 106 employed by the user.
- the system transmits the search results that were generated by the server 104 in step 422 .
- Such search results may be, for example, included with the associated text query 118 transmitted to the client device 106 .
- the system 100 can transmit search results related to “BAT CAR”.
- the system transmits the search results to the originator of the numeric query.
- the server 104 transmits the search results formatted by the response formatter 208 through the interface 204 as search results 120 to be received by the computing device 106 .
- An application such as a browser 110 , running on the computing device can display the search results 120 in the search results field 124 .
- FIG. 5 is a schematic diagram of a general computer system and an example mobile device.
- Computing device 500 is intended to represent various forms of digital computers, such as laptops, desktops, workstations, personal digital assistants, servers, blade servers, mainframes, and other appropriate computers.
- Computing device 550 is intended to represent various forms of mobile devices, such as personal digital assistants, cellular telephones, smartphones, and other similar computing devices.
- the components shown here, their connections and relationships, and their functions, are meant to be exemplary only, and are not meant to limit implementations of the embodiments described and/or claimed in this document.
- Computing device 500 includes a processor 502 , memory 504 , a storage device 506 , a high-speed interface 508 connecting to memory 504 and high-speed expansion ports 510 , and a low speed interface 512 connecting to low speed bus 514 and storage device 506 .
- Each of the components 502 , 504 , 506 , 508 , 510 , and 512 are interconnected using various busses, and may be mounted on a common motherboard or in other manners as appropriate.
- the processor 502 can process instructions for execution within the computing device 500 , including instructions stored in the memory 504 or on the storage device 506 to display graphical information for a GUI on an external input/output device, such as display 516 coupled to high speed interface 508 .
- multiple processors and/or multiple buses may be used, as appropriate, along with multiple memories and types of memory.
- multiple computing devices 500 may be connected, with each device providing portions of the necessary operations (e.g., as a server bank, a group of blade servers, or a multi-processor system).
- the memory 504 stores information within the computing device 500 .
- the memory 504 is a computer-readable medium.
- the memory 504 is a volatile memory unit or units.
- the memory 504 is a non-volatile memory unit or units.
- the storage device 506 is capable of providing mass storage for the computing device 500 .
- the storage device 506 is a computer-readable medium.
- the storage device 506 may be a floppy disk device, a hard disk device, an optical disk device, or a tape device, a flash memory or other similar solid state memory device, or an array of devices, including devices in a storage area network or other configurations.
- a computer program product is tangibly embodied in an information carrier.
- the computer program product contains instructions that, when executed, perform one or more methods, such as those described above.
- the information carrier is a computer- or machine-readable medium, such as the memory 504 , the storage device 506 , memory on processor 502 , or a propagated signal.
- the high speed controller 508 manages bandwidth-intensive operations for the computing device 500 , while the low speed controller 512 manages lower bandwidth-intensive operations. Such allocation of duties is exemplary only.
- the high-speed controller 508 is coupled to memory 504 , display 516 (e.g., through a graphics processor or accelerator), and to high-speed expansion ports 510 , which may accept various expansion cards (not shown).
- low-speed controller 512 is coupled to storage device 506 and low-speed expansion port 514 .
- the low-speed expansion port which may include various communication ports (e.g., USB, Bluetooth, Ethernet, wireless Ethernet) may be coupled to one or more input/output devices, such as a keyboard, a pointing device, a scanner, or a networking device such as a switch or router, e.g., through a network adapter.
- input/output devices such as a keyboard, a pointing device, a scanner, or a networking device such as a switch or router, e.g., through a network adapter.
- the computing device 500 may be implemented in a number of different forms, as shown in the figure. For example, it may be implemented as a standard server 520 , or multiple times in a group of such servers. It may also be implemented as part of a rack server system 524 . In addition, it may be implemented in a personal computer such as a laptop computer 522 . Alternatively, components from computing device 500 may be combined with other components in a mobile device (not shown), such as device 550 . Each of such devices may contain one or more of computing device 500 , 550 , and an entire system may be made up of multiple computing devices 500 , 550 communicating with each other.
- Computing device 550 includes a processor 552 , memory 564 , an input/output device such as a display 554 , a communication interface 566 , and a transceiver 568 , among other components.
- the device 550 may also be provided with a storage device, such as a microdrive or other device, to provide additional storage.
- a storage device such as a microdrive or other device, to provide additional storage.
- Each of the components 550 , 552 , 564 , 554 , 566 , and 568 are interconnected using various buses, and several of the components may be mounted on a common motherboard or in other manners as appropriate.
- the processor 552 can process instructions for execution within the computing device 550 , including instructions stored in the memory 564 .
- the processor may also include separate analog and digital processors.
- the processor may provide, for example, for coordination of the other components of the device 550 , such as control of user interfaces, applications run by device 550 , and wireless communication by device 550 .
- Processor 552 may communicate with a user through control interface 558 and display interface 556 coupled to a display 554 .
- the display 554 may be, for example, a TFT LCD display or an OLED display, or other appropriate display technology.
- the display interface 556 may comprise appropriate circuitry for driving the display 554 to present graphical and other information to a user.
- the control interface 558 may receive commands from a user and convert them for submission to the processor 552 .
- an external interface 562 may be provide in communication with processor 552 , so as to enable near area communication of device 550 with other devices. External interface 562 may provide, for example, for wired communication (e.g., via a docking procedure) or for wireless communication (e.g., via Bluetooth or other such technologies).
- the memory 564 stores information within the computing device 550 .
- the memory 564 is a computer-readable medium.
- the memory 564 is a volatile memory unit or units.
- the memory 564 is a non-volatile memory unit or units.
- Expansion memory 574 may also be provided and connected to device 550 through expansion interface 572 , which may include, for example, a SIMM card interface. Such expansion memory 574 may provide extra storage space for device 550 , or may also store applications or other information for device 550 .
- expansion memory 574 may include instructions to carry out or supplement the processes described above, and may include secure information also.
- expansion memory 574 may be provide as a security module for device 550 , and may be programmed with instructions that permit secure use of device 550 .
- secure applications may be provided via the SIMM cards, along with additional information, such as placing identifying information on the SIMM card in a non-hackable manner.
- the memory may include for example, flash memory and/or MRAM memory, as discussed below.
- a computer program product is tangibly embodied in an information carrier.
- the computer program product contains instructions that, when executed, perform one or more methods, such as those described above.
- the information carrier is a computer- or machine-readable medium, such as the memory 564 , expansion memory 574 , memory on processor 552 , or a propagated signal.
- Device 550 may communicate wirelessly through communication interface 566 , which may include digital signal processing circuitry where necessary. Communication interface 566 may provide for communications under various modes or protocols, such as GSM voice calls, SMS, EMS, or MMS messaging, CDMA, TDMA, PDC, WCDMA, CDMA2000, or GPRS, among others. Such communication may occur, for example, through radio-frequency transceiver 568 . In addition, short-range communication may occur, such as using a Bluetooth, WiFi, or other such transceiver (not shown). In addition, GPS receiver module 570 may provide additional wireless data to device 550 , which may be used as appropriate by applications running on device 550 .
- GPS receiver module 570 may provide additional wireless data to device 550 , which may be used as appropriate by applications running on device 550 .
- Device 550 may also communication audibly using audio codec 560 , which may receive spoken information from a user and convert it to usable digital information. Audio codex 560 may likewise generate audible sound for a user, such as through a speaker, e.g., in a handset of device 550 . Such sound may include sound from voice telephone calls, may include recorded sound (e.g., voice messages, music files, etc.) and may also include sound generated by applications operating on device 550 .
- Audio codec 560 may receive spoken information from a user and convert it to usable digital information. Audio codex 560 may likewise generate audible sound for a user, such as through a speaker, e.g., in a handset of device 550 . Such sound may include sound from voice telephone calls, may include recorded sound (e.g., voice messages, music files, etc.) and may also include sound generated by applications operating on device 550 .
- the computing device 550 may be implemented in a number of different forms, as shown in the figure. For example, it may be implemented as a cellular telephone 580 . It may also be implemented as part of a smartphone 582 , personal digital assistant, or other similar mobile device.
- implementations of the systems and techniques described here can be realized in digital electronic circuitry, integrated circuitry, specially designed ASICs (application specific integrated circuits), computer hardware, firmware, software, and/or combinations thereof.
- ASICs application specific integrated circuits
- These various implementations can include implementation in one or more computer programs that are executable and/or interpretable on a programmable system including at least one programmable processor, which may be special or general purpose, coupled to receive data and instructions from, and to transmit data and instructions to, a storage system, at least one input device, and at least one output device.
- the systems and techniques described here can be implemented on a computer having a display device (e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor) for displaying information to the user and a keyboard and a pointing device (e.g., a mouse or a trackball) by which the user can provide input to the computer.
- a display device e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor
- a keyboard and a pointing device e.g., a mouse or a trackball
- Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback (e.g., visual feedback, auditory feedback, or tactile feedback); and input from the user can be received in any form, including acoustic, speech, or tactile input.
- the systems and techniques described here can be implemented in a computing system that includes a back-end component (e.g., as a data server), or that includes a middleware component (e.g., an application server), or that includes a front-end component (e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the systems and techniques described here), or any combination of such back-end, middleware, or front-end components.
- the components of the system can be interconnected by any form or medium of digital data communication (e.g., a communication network). Examples of communication networks include a local area network (“LAN”), a wide area network (“WAN”), and the Internet.
- LAN local area network
- WAN wide area network
- the Internet the global information network
- the computing system can include clients and servers.
- a client and server are generally remote from each other and typically interact through a communication network.
- the relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.
Abstract
Systems and techniques for converting numeric queries into substantially equivalent textual queries are described. In general, the systems and techniques discussed use search query logs to accurately select a most probably mapping for a numeric-to-text conversion. This mapping can occur when a system (e.g., a server-side search system) receives a series of numeric inputs (e.g., from a cell phone keypad) that may correspond to more than one word. For example, a search server may receive input 22737, which corresponds to both the words ACRES and CASES, as part of a query. The server uses current entries in query logs to create mappings for words from the numeric input. If recent queries indicate that the term ACRES is currently more popular than the term CASES, the mapping may match the entry 22737 to the text ACRES.
Description
- This specification relates to generating text and, more particularly, to generating text based on numerical input.
- As computers and computer networks become more and more able to access a wide variety of information, people are demanding more ways to obtain that information. Specifically, people now expect to have access, on the road, in the home, or in the office, to information previously available only from a permanently connected personal computer hooked to an appropriately provisioned network. They want stock quotes and weather reports from their cell phones, e-mail from their personal digital assistants (PDAs), up-to-date documents from their palm tops, and timely, accurate search results from all their devices. They also want all of this information when traveling, whether locally, domestically, or internationally, in an easy-to-use, portable device.
- Portability generally requires a device small in size, which in turn limits the number of data entry keys and the amount of memory and available processing power. In addition, ultra portable devices often must be held in one hand or not held at all, so that data entry must be one-handed or no-handed. These limitations in the device generally must be compensated for by the user. For example, the user may have to use a limited keyboard such as a telephone keypad, or limited speech recognition capabilities. Such constrained devices may force a user to learn special tricks for data entry (such as shorthand writing on a PDA) or may generate data that the user never intended, by making inaccurate guesses at ambiguous data entries.
- Some attempts to solve these problems have been made. For example, PDAs have been programmed to recognize shorthand and longhand writing. However, the recognition accuracy may be poor, and writing on a small mobile device may be difficult for users. Also, cell phones can recognize entered letters, even though the presence of three letters on each key can create ambiguities about the intended text, such as by allowing the user to press key combinations, either simultaneously or in sequence (e.g., triple tap). However, methods that include pressing key combinations, such as triple tap, may require a user to generate substantially more keystrokes than if the user had access to a keyboard. The increase in keystrokes may slow down a user's interaction with the device and discourage retrieving and entering information using mobile devices.
- This specification describes systems and techniques for converting numeric queries into substantially equivalent textual queries. In general, the systems and techniques discussed use search query logs to accurately select a most probably mapping for a numeric-to-text conversion. This mapping can occur when a system (e.g., a server-side search system) receives a series of numeric inputs (e.g., from a cell phone keypad) that may correspond to more than one word. For example, a search server may receive input 22737, which corresponds to both the words ACRES and CASES, as part of a query. The server uses current entries in query logs to create mappings for words from the numeric input. If recent queries indicate that the term ACRES is currently more popular than the term CASES, the mapping may match the entry 22737 to the text ACRES.
- In a first general aspect, a computer-implemented method for matching text queries to corresponding numerically queries is described. The method includes receiving a plurality of text queries at a server from a plurality of users, generating a numerically equivalent query for each text query of the plurality of text queries by mapping symbols of the text query to associated numbers using a keypad standard that specifies associations between symbols and numbers, generating a primary mapping between each numerically equivalent query and a text query having a substantially highest frequency of occurrence among text queries associated with the numerically equivalent query, and outputting a primary mapped text query in response to receiving an associated numerically equivalent query transmitted from a user.
- In certain embodiments, the method can include generating additional mappings between the numerically equivalent query and additional text queries based on the whether a frequency of occurrence for the additional text queries exceeds a predetermined occurrence threshold. The method may also include outputting the additional text queries with the primary mapped text query. Additionally, the outputting can include transmitting the primary mapped text query for display to the user.
- In a second general aspect, a system is described. The system includes means for generating a numerically equivalent query for each of a previously stored text query by mapping symbols of the text query to associated numbers using a keypad standard that specifies associations between numbers and symbols, a frequency calculator to calculate a frequency of occurrence for each stored text query, and a mapper to generate a mapping between the numerically equivalent query and a text query with a substantially highest frequency of occurrence among text queries associated with the numerically equivalent query.
- In a third general aspect, a method for generating text queries based on numerically equivalent queries input by users is described. The method includes generating numerically equivalent queries based on text queries by representing each symbol of a text query using a number, mapping a text query having a greatest frequency of occurrence among the text queries corresponding to a numerically equivalent query, and outputting the mapped text query in response to receiving the correspondent numerically equivalent query from a user.
- The systems and techniques described here may provide one or more of the following advantages. First, the system can permit mapping text queries to numerical queries based on the text queries' current frequency of occurrence, which may increase the accuracy of numeric-to-text conversion. Second, the system can increase the ease of applying numeric-to-text conversion internationally by accessing a text query corpus of a particular language based on a location of a user submitting a numeric query. Third, a system can increase accuracy of numeric-to-text conversion by accessing a particular text query corpus based on a context (e.g., news search context, image search context, etc.) in which a user submits a numeric query. Fourth, a system may dynamically update text that is mapped to numeric queries based on recently received text queries from users. Fifth, numeric-to-text conversion accuracy can be increased by selecting particular segmented text query corpuses (e.g., segmented by country, language, time, users, group of users, etc.), and defaulting to a superset segment if a selected segmented text query corpus does not include enough data.
- The details of one or more embodiments of the text-to-conversion feature are set forth in the accompanying drawings and the description below. Other features and advantages of the text-to-conversion feature will be apparent from the description and drawings, and from the claims.
-
FIG. 1 shows an example system for converting numeric queries to text queries using numeric-to-text query mappings maintained on a server. -
FIG. 2 shows a portion of the system ofFIG. 1 in more detail. -
FIG. 3 is a flow chart of an illustrative method for using text-based query logs to generate numeric-to-text query mappings. -
FIG. 4 is a flow chart of an illustrative method for processing numeric queries using numeric-to-text query mappings. -
FIG. 5 is a schematic diagram of a general computer system and an example mobile device. - Like reference symbols in the various drawings indicate like elements.
-
FIG. 1 shows an example system that uses search query logs to select the most probably mapping for a numeric-to-text conversion. This mapping can occur when the server receives a series of numeric inputs (e.g., from a cellular phone keypad) that may correspond to more than one word. For example, the server can receive the input “22737” as part of a query, however, this numerical series can correspond to both the words “ACRES” and “CASES.” The server can use current entries in query logs to create mappings for words from the numeric input. If recent queries indicate that the term “ACRES” is currently more popular than the term “CASES,” the mappings can match the entry “22737” to the text “ACRES.” - More specifically,
FIG. 1 shows anexample system 100 for converting numeric queries to text queries using numeric-to-text query mappings 102 maintained on aserver 104. In one implementation, acomputing device 106 transmits anumeric query 108 to theserver 104. Thenumeric query 108 can be translated into text using themappings 102. The text can then be used, for example, in a search which generates results that are returned to thecomputing device 106. - The
computing device 106 can be a cellular phone running aweb browser 110. The user may input a numeric search query instead of entering a text search query into the cellular phone because entering text using the cellular phone's keypad may require depressing a key multiple times to select a desired letter. For example, each key on a cellular phone's keypad can be assigned three or four letters. Some keypads indicate such mapping of the letters to the numeric keys by printing the letters on the numeric keys. For example, the letters “ABC” can be printed on a cellular phone's “2” key. Similarly, the remaining letters can be mapped to the remaining numeric keys. To enter the text query “CAR,” for example, a user can use the triple tap method, where the user presses “222” to enter the letter “C,” “2” to enter the letter “A,” and “777” to enter the letter “R.” - A user, however, entering a numeric search query may only have to press each key once because a single key can represent any one of the letters assigned to it. For example, a user can select the letter A, B or C by pressing the “2” key of the keypad. Using this method, a user can enter a numeric search “227,” which represents the term “CAR.” Pressing 2+2+7 for the text “CAR” may be more convenient than entering 222+2+777 (for “C”+“A”+“R”). The
mappings 102 then can be used to disambiguate what text the numeric query “227” may represent. - The
numeric query 108 can be transmitted over a network, such as the Internet, and received by theserver 104. Aquery processor 112, executing within theserver 104, can process thenumeric query 108. To aid in processing numeric queries, thequery processor 112 can use information included in the numeric-to-text query mappings 102. Such information can be stored, for example, in a mappings table 115. - If a text search query corresponding to the
numeric query 108 has previously been processed by theserver 104, thequery processor 112 can access a corresponding row (e.g., containing “227”) in the numeric-to-text query mappings 102 to look up an associated text query 118 (e.g., “CAR”) from a mappedtext query column 116. Theserver 104 can then return the associatedtext query 118, such as “CAR,” along withsearch results 120 matching the associated text query. - Having entered the three digits “227” as the original
numeric query 108, the user of thecomputing device 106 can see the results of a search generated using the text “CAR” in theweb browser 110. In certain implementations, an associatedtext query field 122 of theweb browser 110 can display the numeric-to-text translation “CAR” derived from themappings 102, and a search resultsfield 124 can display web content associated with the search results 120 generated using the translated text. - In other implementations, the associated
text query 118 can be returned and displayed on thecomputing device 106 without generating the search results 120. The user can confirm the associatedtext query 118 is the text the user wanted to enter, and the confirmation (or associated text query) can be transmitted to theserver 104 to generate the search results 120. Additionally, theserver 104 can transmit multiple associated text queries from which the user can select. The associated text query selected by the user can be used by theserver 104 to generate the search results 120. This is described in more detail below. - Some
numeric queries 108 can translate into more than one text query, for example “229.” The numeric query “229” is ambiguous because it can translate to “BAY,” “CAW,” “CAY,” etc. In one implementation, theserver 104 disambiguates numerical queries using a frequency ranking that reflects a number of times an associated text query occurs in a stored log of text queries. For example, two of the translations, “BAY” and “CAW,” are represented as rows in the mappings table 115 used for the numeric-to-text query mappings 102. Both rows have “229” in theirnumeric query columns 114. Using themappings 102, the numeric query “229” can be translated as “BAY” or “CAW.” To facilitate selection of the most probable associated text query, thequery processor 112 can access afrequency ranking column 126. Thefrequency ranking 126 for “BAY” is “1,” indicating a higher frequency ranking than that for “CAW,” which has a frequency ranking of “2.” In this case, thequery processor 112 can make a probabilistic determination that the numeric query “229” represents “BAY.” - Some
numeric queries 108 may not have corresponding entries in the numeric-to-text query mappings 102. For example, thenumeric query 108 may be a string of digits which represent a string of uncommon words. If thequery processor 112 has no past text queries on which to base its processing, thequery processor 112 can use a numeric-to-text converter 128 and a language model not derived from textual server query logs to formulate a probable corresponding text query. For example, the numeric-to-text converter 128 can determine a probable corresponding text query using occurrence information from a language model corpus used in standard voice recognition programs. - In certain implementations, numeric search queries can have more than one search term. For example, a numeric search query can include several terms delimited by, for example, an asterisk symbol, which represents a space between the terms.
- In other implementations, the
system 100 can be configured to make use of information from text queries it receives over time. Thesystem 100 can update the numeric-to-text query mappings 102 using information from text-based search queries. The numeric-to-text mappings can also be updated based on the text corpus that is used for searching, for example, web-pages that are crawled and indexed by a search engine. In certain implementations, the frequency rankings are updated on a periodic or predetermined basis using new textual queries received since the last update of frequency rankings. The newly received text queries can be examined and statistical information on the occurrence of query terms can be used to supplement existing statistical models of frequency occurrence for the associated query terms. This may offer an advantage of dynamically updating the ability of the system to accurately disambiguate numeric queries based on recently received text queries. - In other implementations, the frequency rankings can be generated using a previously collected corpus of text queries, such as historical query logs. The frequency rankings then can be updated using the previously collected corpus as described above.
-
FIG. 2 shows a portion of thesystem 100 ofFIG. 1 in more detail. For example,FIG. 2 shows additional detail within theserver 104, according to one implementation. Thesystem 100 can receive text queries 202 in addition to thenumeric queries 108. Thesystem 100 can be implemented, for example, as part of an Internet search provider's general system. Thesystem 100 can obtain information about occurrence and concurrence of terms included in submitted text queries. - The
server 104 includes aninterface 204 that allows communications in a variety of ways. For example,server 104 can be communicatively connected to a network such as the Internet, and thereby communicate with various devices, such as server farms, wireless communication devices, personal computers, and cellular phones. The communication flow for any device can be bidirectional so thatserver 104 can receive information, such as commands, from the devices, and can send information to the devices. - Requests received from devices can be provided to the
query processor 112, which can interpret a request, associate it with predefined acceptable requests, and pass it on, such as in the form of a command to another component ofsystem 100 to perform a particular action. For example, where the request includes a search query, thequery processor 112 can cause asearch engine 206 to generate search results corresponding to the search request. Thesearch engine 206 can use data retrieval and search techniques, such as those used by the Google PageRank™ system. The results generated by thesearch engine 206 can then be provided to the original requester using aresponse formatter 208, which carries out formatting on the results. - When the type of search query received by the
server 104 is atext query 202, theserver 104 can update its numeric-to-text query mappings 102 in addition to returning the search results 120. In particular, the numeric-to-text query mappings 102 can be updated as text queries 202 are received over time. These updates can occur in real time or on a periodic or predetermined basis. For example, theserver 104 may receive atext query 202, such as “HOT CAR,” from thebrowser 110 executing on a user's cellular phone. Thequery processor 112 can “recognize” the search query “HOT CAR” as a text query, as opposed to a numeric query, because it contains, for example, American Standard Code for Information Interchange (ASCII) representations of one or more letters, as opposed to being composed of ASCII representations of digits. - The
query mapping module 210 can maintain up-to-date numeric-to-text query mappings 102 based on thetext query 202 that theserver 104 receives. One component of thequery mapping module 210, anumeric query generator 212, can determine an equivalent numeric query corresponding to eachtext query 202 it receives. The determination can be based on keypad standards, such as those employed to map letters to their corresponding numeric keys on a cellular phone's keypad, and can further be language specific. For example, the letter H is mapped to the numerical equivalent “4” key on a cellular phone using theMobile 1 keypad standard. The remaining letters and space in the text “HOT CAR” are converted using theMobile 1 keypad standard. - In other implementations, other keypad standards can be used to convert the incoming text query to a numerical representation, such as the International Standard, the North American Classic, the Australian Classic, and the United Kingdom (UK) Classic.
- Using these and previously discussed considerations, if the
numeric query generator 212 receives atext query 202 containing “HOT CAR,” it can determine using theMobile 1 keypad standard that the corresponding equivalent numeric query is “468 227.” As shown inFIG. 1 , thequery mapping module 210 can update a row in the numeric-to-text query mappings 102 with the value “468 227” in thenumeric query column 114 and the value “HOT CAR” in the mappedtext query column 116. Such an update may include incrementing a count column (not depicted in the mappings table 115) to indicate the receipt of an additional instance of the search query “HOT CAR.” In certain implementations, such count columns may be compared periodically to adjustfrequency rankings 126 of entries in the mappings table 115. Of course, the description of the mappings table 115 is for the purposes of illustration and is not intended to limit the data structures within which the mapping information can be stored. In other implementations, the mapping information can be stored in various other data structures, e.g., arrays, tree structures, matrices, etc. - Over time, the
server 104 can receive numerous additional text queries 202 (e.g., “GOT CAR,” “IOU CAP,” etc.) which have the equivalent numeric query “468 227” as “HOT CAR.” Thequery mapping module 210 can use information from these additional text queries 202 to update the numeric-to-text query mappings 102. - As described in association with
FIG. 1 , theserver 104 can receivenumeric queries 108. It can be advantageous to store and maintain information based on text queries 202 to make probabilistic determinations regarding which text queries map to receivednumeric queries 108. These determinations can be based on frequencies that particular terms occur in received search queries. - A text
query frequency calculator 216 can maintain and use frequency counts of individual search queries received over time by theserver 104. A search query's frequency count can represent the occurrence of the search query, or the occurrence of the terms within the search query when it contains multiple terms. The frequency counts can be used to calculate and maintain up-to-date frequency rankings 126 (seeFIG. 1 ) in the mappings table 115. For example, mapped text queries 116 “BAY” and “CAW” in the mappings table 115 share the same “229” entry in thenumeric query column 114, but the entries havedifferent frequency rankings 126. In particular, the “BAY” entry in the mappings table 115 has a higher frequency ranking of “1.” In this case, the higher ranking of “1” may be attributed to a greater occurrence rate of “BAY” in search queries over its counterpart “CAW,” which has a frequency ranking of - In certain implementations, recently received text queries or terms within multiple-term text queries can be more heavily weighted in the frequency rankings than text queries or terms received at an earlier time. This can increase a frequency ranking of the recently received text queries or terms above a frequency ranking of earlier received text queries or terms despite a greater occurrence of the earlier received queries or terms relative to the recently received ones.
- Using a text
query frequency calculator 216 to maintain frequency rankings of search queries received over time by theserver 104, thesystem 100 can disambiguatenumeric queries 108 corresponding to the same mapped text queries. To aid in determining (and maintaining over time) the primary text query associated with each particular numeric query, thequery mapping module 210 can include another component, aprimary mapper 214, which will now be described. - The
primary mapper 214 can determine, for a particularnumeric query 114, the “primary” mappedtext query 116 associated with it. Designating a “primary” mapped text query can be used to determine the mostprobable text query 116 for a particularnumeric query 108 received by theserver 104. For example, when the mappings table 115 contains more than one row having the samenumeric query 114, such as “229” ofFIG. 1 , theprimary mapper 214 can designate one of the mapped text queries 116 as the primary mapped text query. In certain implementations, theprimary mapper 214 can select a term or search query having the highest frequency ranking 126, making it the primary mapped text query. In other implementations, theprimary mapper 214 may use thefrequency rankings 126 in conjunction with additional information (not depicted in the mappings table 115), such as assigning a higher ranking to mapped text queries generally received more recently, as described above. - The
primary mapper 214 can automatically designate a mappedtext query 116 as a “primary” mapped text query when just one row exists in the mappings table 115 for its correspondingnumeric query 114. For example, the numeric query “227” shown inFIG. 1 has only one associated mappedtext query 116 “CAR” in the mappings table 115, so that theprimary mapper 214 designates thattext query 116 as the primary one. However, the numeric query “228” has two associated mapped text queries 116 “BAY” and “CAW.” In this case, theprimary mapper 214 can determine that the mappedtext query 116 “BAY” is the “primary” mapped text query because its frequency ranking is higher (e.g., “1” compared to “2” for the “CAW” entry). Having a primary mapped text query for each of thenumeric queries 114 in the mappings table 115 can aid in resolving ambiguities fornumeric queries 108 received by theserver 104. For example, when theserver 104 receives an ambiguousnumeric query 108 such as “228,” theserver 104 can select “BAY” as the most probable match to thenumeric query 108 if “BAY” is the “primary” mapped query. - As the
server 104 receives additional text queries 202 over time, thequery mapping module 210 can update the mappings table 115 as needed to maintain updatedfrequency rankings 126 and designations of the primary mapped text query for eachnumeric query 114. In certain implementations, thesystem 100 can additionally make use of frequencies of text queries processed by theserver 104 before thesystem 100's installation. For example, it can be advantageous to use information from stored text queries 202 received by theserver 104 in a period before thesystem 100's installation. - In certain implementations, during a conversion process coinciding with installation of the
system 100, thequery mapping module 210 can analyzequery logs 218 representing past queries for use in updating the numeric-to-text query mappings 102. The analysis can determine frequencies of text-only queries processed by theserver 104 during a time frame before thesystem 100 is used to convert numeric queries to text queries. For example, thesystem 100 can analyze the query logs 218 to determine frequencies of past text queries, such as “HOT CAR,” as well as other previous search queries. - In certain implementations, during the conversion process, the
system 100 can use the textquery frequency counter 216 to aid in identifying and removing from consideration individual search queries having frequency counts that fall below a pre-defined threshold. For example, while it may be useful to consider past search queries, such as “HOT CAR,” that have high frequency counts (e.g., several millions), seldom-used past search queries having extremely low frequency counts may be omitted from the table because they may be less likely to be reissued in futurenumeric queries 108. By limiting initial numeric-to-text query mappings 102 to higher frequency past text queries, the conversion process can store information in themappings 102 representing more probabilistic future numeric queries. - During the conversion process, as information regarding past text queries is processed from the query logs 218, the
numeric query generator 212 can generate equivalent numeric queries for each processed text query. For example, for a text query stored in the query logs 218, such as “HOT CAR,” thenumeric query generator 212 can calculate an equivalent numeric query “468 227” using a translation standard as described above, and a row in the mappings table 115 can be created or updated to include information related to the text query. - In certain implementations, frequency counts for the text queries can be maintained substantially simultaneously to the processing of the
query 108. After each of the text queries has been assigned an equivalent numeric query, theprimary mapper 214 can use the frequency counts to computefrequency rankings 126. - As a result of the conversion process, the numeric-to-
text query mappings 102 can include columns and rows substantially similar to those included in the mappings table 115, and they can include additional columns (not shown inFIG. 1 ) that facilitate future maintenance of the numeric-to-text query mappings 102. This maintenance (e.g., maintaining the most frequently issued textual query as the primary mapped query for a numerical query) can occur, for example, as theserver 104 processes additional text queries over time, or as theserver 104 processesnumeric queries 108. - When the
server 104 receives anumeric query 108 for processing, thequery processor 112 can determine if thenumeric query 108 is represented by one or more entries in the mappings table 115. For example, thenumeric query 108 may be in the mappings table 115 if the associated text query has been processed previously by theserver 104. If so, thequery processor 112 can access one or more corresponding rows within the mappings table 115. Theresponse formatter 208 can use information from the corresponding rows to provide a response to the numeric query's originator. - For example, if the
numeric query 108 is “228,” thequery processor 112 can look up the mappedtext query 116 “BAT” because itsnumeric query field 114 matches thenumeric query 108 “228.” However, when the mappings table 115 contains two or more rows matching thenumeric query 108, thequery processor 112 can resolve the ambiguity by selecting the “primary” mapped text query, which has the highest frequency ranking 126. For example, if thenumeric query 108 is “229,” thequery processor 112 can select the “primary” mapped text query “BAY,” because it has a higher frequency ranking than that of “CAW.” Theresponse formatter 208 can transmit the selected text query as the associatedtext query 118 to the originator of the search query. - When the
server 104 receives anumeric query 108 having multiple search terms, thequery processor 112 can use the entire numeric query to look up a mappedtext query 116 in themappings 102. In certain implementations, thequery processor 112 may divide thenumeric query 108 into various combinations of its constituent terms, and process each term separately or in various combinations. For example, anumeric query 108, such as “468 639 227” (representing the text “HOT NEW CAR”), has three search terms. Thequery processor 112 can divide thenumeric query 108 “468 639 227” for processing in various ways. In one example, the mappings table 115 includes a “HOT CAR” entry, but no entry for “HOT NEW CAR.” To process “468 639 227” in this example, thequery processor 112 can split the query into two components: “468 227” and “639.” In this case, thequery processor 112 can use “468 227” to look up the associated mappedtext query 116 “HOT CAR”. For the remaining “639” term, thequery processor 112 may access themappings 102 to identify the associated text query “NEW.” The system may generate “NEW” instead of other possibilities, such as “MEW,” usingfrequency rankings 126 in the mappings table 115 for rows containing mapped text queries 116 “NEW” and “MEW” (not shown inFIG. 1 ). Thequery processor 112 can combine the two text query terms, and provide them to thesearch engine 206 to find matching search results 120. - In certain implementations, if the
numeric query 108 is ambiguous, theresponse formatter 208 can transmit a group of text queries 220 in addition to the search results 120. This can be useful, for example, if more than one mappedtext query 116 has a high probability of matching the user's intent. For example, if thenumeric query 108 is “229,” the additional text queries 220 can include “CAW” and any other mapped text queries whosenumeric query 114 in the mappings table “229.” The user can then select the desired term form the group of text queries. - In other implementations, the
query processor 112 can accessuser search profiles 222 to affect how a particular user'stext query 202 is processed. The search profiles 222 can contain information for each user (e.g., where the user opts to be identified based on IP address or cookies) regarding patterns of search queries issued over time. For example, while some users may have issued queries related to automobiles, others may have not issued such queries. The type of information contained in the search profiles 222 can be user-specific, while the information maintained in the numeric-to-text query mappings 102 may be based on a compilation of submitted text queries from multiple users. While processing anumeric query 108 for a particular user, thequery processor 112 can give partial consideration to the information contained for that user in the search profiles 222. By doing this, a user who previously searched using terms relating to automobiles may have terms related to automobiles more heavily weighted than other users. For example, if the user submits a numeric query “228,” the system may increase the frequency ranking for the term “CAR” above the term “BAR” because of the user's previous searches relating to automobiles. - When the
server 104 receives anumeric query 108 that is not represented in the numeric-to-text query mappings 102, the numeric-to-text converter 128 can determine an associatedtext query 118 by using the numeric-to-text converter 128. In certain implementations, the system may determine more than one associatedtext query 118 and provide the user with list of possible text translations for user selection. - The
server 104 may include additional components that facilitate processing queries in other ways. In certain implementations, thequery processor 112 includes a DTMF-to-ASCII Converter 230. Dual-tone multi-frequency (DTMF) refers to the signal generated when a digit on a telephone's keypad is pressed. The DTMF-to-ASCII converter 230 can process these DTMF signals and create numerical ASCII equivalents that can be used by thesearch engine 206 in generating corresponding search results 120. For example, a user can press multiple digits on a cellular phone to formulate a search query such as “468 228.” Here, the search query received by theserver 104 is a series of DTMF tones. The DTMF tones can be used to generate numerical equivalents used by the query mapping module to determine corresponding text queries. - In certain implementations, the
response formatter 208 can include a text-to-speech converter 232 for synthesizing speech corresponding to the search results 120. For example, referring toFIG. 2 , instead of theresponse formatter 208 formattingtextual search results 120 in response to anumeric query 108, the text-to-speech converter 232 can instead create synthesized speech, which verbalizes the search query results (or a portion of the search query results). In this way, a user of a computing device having a limited display, such as a cellular phone, can instead “listen” to the results of a search query. - In other implementations, the
response formatter 208 can use the text-to-speech converter 232 to aid the user in confirming the numeric-to-text translation of the user'snumeric query 108. For example, if thenumeric query 108 is “468 228,” the text-to-speech converter 232 may create a confirmation message such as “Did you mean ‘HOT CAR?’” that may be transmitted to the user's cellular phone. - In certain implementations, the user can confirm by verbalizing confirmation (or rejection) of the text translation when prompted by the server. In other implementations, the user can select a control on the computing device (e.g., a key on a cellular phone's keypad) to confirm or reject the text query.
- The
server 104 can include thesearch engine 206, which in turn can include multiple components. Thesearch engine 206 can access anindex 224 of web sites instead of searching the web sites themselves each time a search request is made, which can make the searching more efficient. Theindex 224 can be populated using information collected and formatted by aweb crawler 226, which can continuously scan potential information sources for changing information. - The
server 104 also may accesssystem storage 228 as necessary.System storage 228 can include one or more storage locations for files needed to operate the system, such as applications, maintenance routines, management and reporting software, etc. -
FIG. 3 is a flow chart of an illustrative method 300 for using text-based query logs to generate numeric-to-text query mappings 102 inFIG. 2 . The method 300 can be used during a conversion process coincident with the installation of thesystem 100. During such a conversion process, the information from past text-based search queries can be examined to produce information usable by thesystem 100 in processing numeric search queries. For example, referring toFIG. 2 , the conversion process can pre-populate the numeric-to-text query mappings 102 for use by theserver 104 for processingnumeric queries 108.Such mappings 102 can allow theserver 104 to make more efficient use of information gained from past text queries 202 that occurred prior to thesystem 100's installation. - Processing can start in
step 302 when a stored text query is selected from a query log. For example, referring toFIG. 2 , a set of query logs 218 can store information from past text queries 202 received by theserver 104. Such entries can represent search queries comprising the full-text search terms of text queries 202. For example, one such entry in the query logs 218 may represent thetext query 202 for “HOT CAR” that may have been received by theserver 104 several months prior to the conversion process. The exemplary search query “HOT CAR” has two terms (“HOT” and “CAR”), although in general a search query represented by an entry in the query logs 218 can have from one to several search terms. - Upon examination of the search query “HOT CAR,” the conversion process can use the entire search query, combinations of its multiple search query terms, or both, when it creates numeric equivalents. In
optional step 304, a search query having multiple terms can be split into constituent words for the purposes of processing each as an individual search term. For example, search query “HOT CAR” can be split into “HOT” and “CAR” text query terms. In certain implementations, the conversion process can split a multi-term search query into various combinations of search terms, including single-word search terms. As a result ofsteps - In
step 306, numerically equivalent queries are generated from text queries of previous steps using a keypad standard. For example, the entire stored text query fromstep 302, as well as any text queries that step 304 produced by splitting multiple-term search queries into constituent terms can be processed. For each term in a text query, the conversion process assigns a numeric equivalent query based on a keypad standard. For example, referring toFIG. 2 , thenumeric query generator 212 can generate numerically equivalent queries “468” and “227 from the text queries “HOT” and “CAR,” respectively. In particular, using theMobile 1 keypad standard, the “H” in “HOT” translates to a “4,” the “O” translates to a “6,” and the “T” translates to an “8.” Similarly, a two-term text query such as “HOT CAR” can translate to the numerically equivalent query “468 227” using theMobile 1 keypad standard. Although examples here show the use of spaces to separate numeric query terms, other implementations may use different symbols or methods to separate the terms. - In
step 308, a determination can be made whether the query log contains additional stored text entries yet to be processed. For example, referring toFIG. 2 , thesystem 100 can determine if additional unprocessed entries exist in the query logs 218. If yes, the conversion process can repeatsteps 302 to 306 for additional entries. Otherwise, if there are no more unprocessed text queries, the method can move to step 310. - In
step 310, the system selects a numerically equivalent query previously generated instep 306. For example, thesystem 100 may select the numerically equivalent query “468 227” representing the stored text query “HOT CAR” in the query logs 218. However, the numerically equivalent query “468 227” selected here can represent various other stored text queries, such as “IOU CAP,” that are mapped to the same digits “468 227.” Having such a numerically equivalent query that is mapped to multiple stored text queries can create ambiguities, which can be resolved by the system, as described in the next few steps. - In
step 312, stored text queries are linked to the corresponding numerically equivalent query selected instep 310. For example, stored text queries such as “HOT CAR,” “IOU CAP,” and potentially many others are “mapped” to the numerically equivalent query “468 227.” - In one implementation, the mapping is accomplished by storing the entries in a table such as the mappings table 115 in
FIG. 1 , in which a separate row is added for each of the stored text queries, such as “HOT CAR” and “IOU CAP.” In addition, the system can assign the value “468 227” to thenumeric query column 114 for each of the newly created rows “HOT CAR” and “IOU CAP.” - In
step 314, the system determines the frequency that each of the linked text queries occurs in the query log. For example, referring toFIG. 2 , the conversion process can use the textquery frequency calculator 216 to count the frequencies of stored text queries such as “BAY” and “CAW” in the query logs 218. In this example, many other stored text queries mapped to the numerically equivalent query “229” may exist, but only “BAY” and “CAW” are listed here. - In
step 316, the system maps the most popular stored text query identified instep 312 to the numerically equivalent query selected instep 310. For example, if the numerically equivalent query is “229,” the primary mapper 214 (FIG. 2 ) can compare the frequencies of the corresponding stored text queries “BAY” and “CAW.” In certain implementations, when comparing the frequencies of the two queries, the mapper may also take into account the time at which these queries were made, giving higher weight to queries that were made recently. In particular, if the frequency for “BAY” exceeds that of “CAW,” theprimary mapper 214 can identify “BAY” as the most popular stored text query associated with the numerically equivalent query “229.” The conversion process can achieve this mapping by updating the “BAY” row in mappings table 115. - In
optional step 318, the system maps additional stored text queries identified instep 312 to the numerically equivalent query selected instep 310. For example, referring toFIG. 2 , the mappings table 115 shows both “BAY” and “CAW” as text queries mapped to the numeric query “229.” However, mappings table 115 can use thefrequency ranking column 126 to identify the most popular stored text query (“BAY”) as well as the less popular text queries such as “CAW.” In particular, “BAY” has a frequency ranking of 1, identifying it the most popular text query, and “CAW” has a ranking of 2, identifying it as occurring with the second highest frequency. Other additional stored text queries not shown here may have frequency rankings of 3, 4, 5, and so on, depending on their frequencies in the query logs 108. - In
step 320, the system determines if additional numerically equivalent queries remain to be processed. If so, the system selects another numerically equivalent query for processing, as shown instep 310. Otherwise, the conversion process ends. -
FIG. 4 is a flow chart of anillustrative method 400 for processing numeric queries using numeric-to-text query mappings. For example, referring toFIG. 1 , theserver 104 can use themappings 102 to convertnumeric queries 108 it receives from thecomputing devices 106 into textual queries. - Processing can start in
step 402 when the system receives a numeric input representing a search query composed of numeric terms. For example, referring toFIG. 1 , theserver 104 may receive anumeric query 108 such as “468 227” representing “HOT CAR” from a user running aweb browser 110 on acomputing device 106, such as a cellular phone. The search query here is a numeric query generated using the cellular phone's keypad. - In
step 404, the system determines if there is a text query that maps to the entire numeric input received instep 402. For example, referring toFIG. 1 , upon receipt of anumeric query 108 such as “468 227,” thequery processor 112 can search the numeric-to-text query mappings 102 for a corresponding entry. In particular, thequery processor 112 can look for a row having “468 227” in itsnumeric query column 114. If thequery processor 112 finds a matching row, processing can proceed to step 408. Otherwise, processing can continue to step 406. - In
optional step 406, the system parses the numeric query into separate terms to be processed as separate numeric queries. For example, referring toFIG. 1 , thequery processor 112 may receive a query such as “228 227” (e.g., representing “BAT CAR”) for which step 404 determines that no matching entry exists in the numeric-to-text query mappings 102. Consequently, the processing ofstep 406 can include parsing the numeric query “228 227” into its constituent terms “228” and “227,” representing “BAT” and “CAR,” respectively. These separate terms can then be processed in the next step. In another example, thequery processor 112 may receive a query such as “468 227” (e.g., representing “HOT CAR”). In this case, thequery processor 112 can locate a matching entry in the numeric-to-text query mappings 102 without splitting the numeric query “468 227” into separate terms. - In
step 408, the system selects the primary text query that is mapped to the numeric query. The selected primary text query may correspond to the entire numeric query or a portion of the numeric query (if the numeric query has been split into two or more terms as described in association with the step 406). While performing this step, the system can use the entire numeric query that step 404 determined to have a matching text query, or the system can use a numeric query representing a separate term resulting fromstep 406. For example, thequery processor 112 ofFIG. 1 can select the text query “HOT CAR” from the row in mappings table 115 corresponding to the numeric query “468 227” determined to exist instep 404. In another example, thequery processor 112 can select the text query “BAT” from the row in mappings table 115 corresponding to the numeric query term “228” separated instep 406. In the latter case, a subsequent execution ofstep 408 can select the text query “CAR” corresponding to the second numeric query term “227” of the numeric query “228 227” representing “BAT CAR.” In each case, thequery processor 112 locates the entry in the mappings table 115 having the highest frequency ranking 126, suchhighest ranking 126 designating the entry as the “primary” mapped text query. - In
optional step 410, the system selects additional text queries mapped to the numeric query. The text queries selected here may be less likely to correspond to the user's intent when launching the numeric query, but these additional queries can be included with the primary mapped text query when results are returned to the user. If the primary mapped text query selected by thequery processor 112 later turns out to be incorrect, the user may be able to locate the intended text query from a list of additional text queries mapped to the same numeric query. For example, if the user issues a numeric query “229” intending to search for “CAW,” thequery processor 112 may instead return “BAY” if it has the highest frequency ranking in the mappings table 115. By executingoptional step 410, the system can return alternate text queries to the user. For example, when selecting additional text queries for the numeric query “229,” thequery processor 112 would also select the “CAW” text query, and return it to the user for selection of the intended text query. - In
step 412, the system determines if there are terms remaining in the numeric query that are unprocessed. This may occur if processing associated with thestep 406 parses a numeric query into its constituent terms, and one or more terms remain to be processed. If additional terms need to be processed, processing can repeatsteps - In
optional step 414, if the numeric query was split for processing, the system concatenates the text queries corresponding to the numeric queries and/or associated query terms into a single text query. For example, referring toFIG. 1 , thequery processor 112 can concatenate the text query terms “BAT” and “CAR” to form a single text query “BAT CAR” corresponding to an originalnumeric query 108 such as “228 227” issued from thecomputing device 106. - In optional step 416, the system transmits the text query resulting from
step 414 to the user for confirmation that the converted text query is correct. For example, referring toFIG. 1 , in response to a numeric query “228 227,” theserver 104 transmits the associatedtext query 118, such as “BAT CAR,” to the computing device 106 (e.g., the user's cellular phone). Abrowser 110 running on thecomputing device 106 can then display the received associatedtext query 118 in the associatedtext query field 122. In particular, after a user enters a numeric search query “228 227” using the cellular phone's numeric keypad, the system can transmit the associated text query back to the user and the user would see “BAT CAR,” which is displayed in the associatedtext query field 122. In certain implementations, an additional field (not shown) can display the user's original numeric query for reference purposes. - In
step 418, the system receives input from the user specifying whether the transmitted text query from step 416 is correct. For example, referring toFIG. 1 , if “BAT CAR” displayed in the associatedtext query field 122, is the correct text query (e.g., it is the text query intended by the user), the user can input a confirmation (e.g., select a key, such as the pound (#) key). Otherwise, the user can input a rejection (e.g., select the star (*) key). If the entry is rejected, correction of the entry can occur in the next step, which can be skipped if the entry is already correct. - In
optional step 420, the system receives inputs from the user for correcting the incorrect text query. For example, referring toFIG. 1 , if the user receives an associated text query “BAY” for anumeric query 108 such as “229” intended by the user to represent “CAW,” the user can use controls on thecomputing device 106 to correct the entry. In certain implementations, the correction process can involve selecting a different text query from a list of choices of text queries corresponding to the original numeric query. For example, thebrowser 110 may include an additional area for displaying a list of alternate text queries in addition to “BAY.” The area may be adjacent to the associatedtext query field 122. From the list of alternate text queries the user can select the intended text query (“CAW”) using other controls on thecomputing device 106, such as arrow keys, to navigate through the list and make a selection. - In
optional step 422, the system generates search results using the primary mapped text query. For example, referring toFIG. 2 , theresponse formatter 208 includes search results obtained from thesearch engine 206 in the response sent to the user. In certain implementations, the system may automatically generate search results with the associatedtext query 118 without waiting for user confirmation that the associatedtext query 118 is correct. For example, thesystem 100 may generate search results when only one text query is mapped to the user's numeric query. In another example, if frequency information for a first text query exceeds frequency information for a second text query by a predetermined amount—which signifies the first text query is much more likely to be the intended text than the second text query—search results associated with the first text query can be returned. Alternatively, the system may have a default action, where search results associated with the primary text query are returned to the user. - In
step 424, the system transmits additional mapped text queries to the user. For example, in addition to transmitting “BAT CAR” as the text query most likely corresponding to the user's numeric query “228 227,” the system transmits the remaining mapped text queries that have a high frequency of occurrence in previously submitted text search queries, such as “IOU CAR,” to theclient device 106 employed by the user. - In
optional step 426, the system transmits the search results that were generated by theserver 104 instep 422. Such search results may be, for example, included with the associatedtext query 118 transmitted to theclient device 106. For example, in response to a numeric query such as “228 227,” thesystem 100 can transmit search results related to “BAT CAR”. - In
step 428, the system transmits the search results to the originator of the numeric query. For example, referring toFIGS. 1 and 2 , theserver 104 transmits the search results formatted by theresponse formatter 208 through theinterface 204 assearch results 120 to be received by thecomputing device 106. An application, such as abrowser 110, running on the computing device can display the search results 120 in the search resultsfield 124. -
FIG. 5 is a schematic diagram of a general computer system and an example mobile device. Computing device 500 is intended to represent various forms of digital computers, such as laptops, desktops, workstations, personal digital assistants, servers, blade servers, mainframes, and other appropriate computers.Computing device 550 is intended to represent various forms of mobile devices, such as personal digital assistants, cellular telephones, smartphones, and other similar computing devices. The components shown here, their connections and relationships, and their functions, are meant to be exemplary only, and are not meant to limit implementations of the embodiments described and/or claimed in this document. - Computing device 500 includes a
processor 502,memory 504, astorage device 506, a high-speed interface 508 connecting tomemory 504 and high-speed expansion ports 510, and alow speed interface 512 connecting tolow speed bus 514 andstorage device 506. Each of thecomponents processor 502 can process instructions for execution within the computing device 500, including instructions stored in thememory 504 or on thestorage device 506 to display graphical information for a GUI on an external input/output device, such asdisplay 516 coupled tohigh speed interface 508. In other implementations, multiple processors and/or multiple buses may be used, as appropriate, along with multiple memories and types of memory. Also, multiple computing devices 500 may be connected, with each device providing portions of the necessary operations (e.g., as a server bank, a group of blade servers, or a multi-processor system). - The
memory 504 stores information within the computing device 500. In one implementation, thememory 504 is a computer-readable medium. In one implementation, thememory 504 is a volatile memory unit or units. In another implementation, thememory 504 is a non-volatile memory unit or units. - The
storage device 506 is capable of providing mass storage for the computing device 500. In one implementation, thestorage device 506 is a computer-readable medium. In various different implementations, thestorage device 506 may be a floppy disk device, a hard disk device, an optical disk device, or a tape device, a flash memory or other similar solid state memory device, or an array of devices, including devices in a storage area network or other configurations. In one implementation, a computer program product is tangibly embodied in an information carrier. The computer program product contains instructions that, when executed, perform one or more methods, such as those described above. The information carrier is a computer- or machine-readable medium, such as thememory 504, thestorage device 506, memory onprocessor 502, or a propagated signal. - The
high speed controller 508 manages bandwidth-intensive operations for the computing device 500, while thelow speed controller 512 manages lower bandwidth-intensive operations. Such allocation of duties is exemplary only. In one implementation, the high-speed controller 508 is coupled tomemory 504, display 516 (e.g., through a graphics processor or accelerator), and to high-speed expansion ports 510, which may accept various expansion cards (not shown). In the implementation, low-speed controller 512 is coupled tostorage device 506 and low-speed expansion port 514. The low-speed expansion port, which may include various communication ports (e.g., USB, Bluetooth, Ethernet, wireless Ethernet) may be coupled to one or more input/output devices, such as a keyboard, a pointing device, a scanner, or a networking device such as a switch or router, e.g., through a network adapter. - The computing device 500 may be implemented in a number of different forms, as shown in the figure. For example, it may be implemented as a
standard server 520, or multiple times in a group of such servers. It may also be implemented as part of a rack server system 524. In addition, it may be implemented in a personal computer such as alaptop computer 522. Alternatively, components from computing device 500 may be combined with other components in a mobile device (not shown), such asdevice 550. Each of such devices may contain one or more ofcomputing device 500, 550, and an entire system may be made up ofmultiple computing devices 500, 550 communicating with each other. -
Computing device 550 includes aprocessor 552,memory 564, an input/output device such as adisplay 554, acommunication interface 566, and atransceiver 568, among other components. Thedevice 550 may also be provided with a storage device, such as a microdrive or other device, to provide additional storage. Each of thecomponents - The
processor 552 can process instructions for execution within thecomputing device 550, including instructions stored in thememory 564. The processor may also include separate analog and digital processors. The processor may provide, for example, for coordination of the other components of thedevice 550, such as control of user interfaces, applications run bydevice 550, and wireless communication bydevice 550. -
Processor 552 may communicate with a user throughcontrol interface 558 anddisplay interface 556 coupled to adisplay 554. Thedisplay 554 may be, for example, a TFT LCD display or an OLED display, or other appropriate display technology. Thedisplay interface 556 may comprise appropriate circuitry for driving thedisplay 554 to present graphical and other information to a user. Thecontrol interface 558 may receive commands from a user and convert them for submission to theprocessor 552. In addition, anexternal interface 562 may be provide in communication withprocessor 552, so as to enable near area communication ofdevice 550 with other devices.External interface 562 may provide, for example, for wired communication (e.g., via a docking procedure) or for wireless communication (e.g., via Bluetooth or other such technologies). - The
memory 564 stores information within thecomputing device 550. In one implementation, thememory 564 is a computer-readable medium. In one implementation, thememory 564 is a volatile memory unit or units. In another implementation, thememory 564 is a non-volatile memory unit or units.Expansion memory 574 may also be provided and connected todevice 550 throughexpansion interface 572, which may include, for example, a SIMM card interface.Such expansion memory 574 may provide extra storage space fordevice 550, or may also store applications or other information fordevice 550. Specifically,expansion memory 574 may include instructions to carry out or supplement the processes described above, and may include secure information also. Thus, for example,expansion memory 574 may be provide as a security module fordevice 550, and may be programmed with instructions that permit secure use ofdevice 550. In addition, secure applications may be provided via the SIMM cards, along with additional information, such as placing identifying information on the SIMM card in a non-hackable manner. - The memory may include for example, flash memory and/or MRAM memory, as discussed below. In one implementation, a computer program product is tangibly embodied in an information carrier. The computer program product contains instructions that, when executed, perform one or more methods, such as those described above. The information carrier is a computer- or machine-readable medium, such as the
memory 564,expansion memory 574, memory onprocessor 552, or a propagated signal. -
Device 550 may communicate wirelessly throughcommunication interface 566, which may include digital signal processing circuitry where necessary.Communication interface 566 may provide for communications under various modes or protocols, such as GSM voice calls, SMS, EMS, or MMS messaging, CDMA, TDMA, PDC, WCDMA, CDMA2000, or GPRS, among others. Such communication may occur, for example, through radio-frequency transceiver 568. In addition, short-range communication may occur, such as using a Bluetooth, WiFi, or other such transceiver (not shown). In addition,GPS receiver module 570 may provide additional wireless data todevice 550, which may be used as appropriate by applications running ondevice 550. -
Device 550 may also communication audibly usingaudio codec 560, which may receive spoken information from a user and convert it to usable digital information.Audio codex 560 may likewise generate audible sound for a user, such as through a speaker, e.g., in a handset ofdevice 550. Such sound may include sound from voice telephone calls, may include recorded sound (e.g., voice messages, music files, etc.) and may also include sound generated by applications operating ondevice 550. - The
computing device 550 may be implemented in a number of different forms, as shown in the figure. For example, it may be implemented as acellular telephone 580. It may also be implemented as part of asmartphone 582, personal digital assistant, or other similar mobile device. - Various implementations of the systems and techniques described here can be realized in digital electronic circuitry, integrated circuitry, specially designed ASICs (application specific integrated circuits), computer hardware, firmware, software, and/or combinations thereof. These various implementations can include implementation in one or more computer programs that are executable and/or interpretable on a programmable system including at least one programmable processor, which may be special or general purpose, coupled to receive data and instructions from, and to transmit data and instructions to, a storage system, at least one input device, and at least one output device.
- These computer programs (also known as programs, software, software applications or code) include machine instructions for a programmable processor, and can be implemented in a high-level procedural and/or object-oriented programming language, and/or in assembly/machine language. As used herein, the terms “machine-readable medium” “computer-readable medium” refers to any computer program product, apparatus and/or device (e.g., magnetic discs, optical disks, memory, Programmable Logic Devices (PLDs)) used to provide machine instructions and/or data to a programmable processor, including a machine-readable medium that receives machine instructions as a machine-readable signal. The term “machine-readable signal” refers to any signal used to provide machine instructions and/or data to a programmable processor.
- To provide for interaction with a user, the systems and techniques described here can be implemented on a computer having a display device (e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor) for displaying information to the user and a keyboard and a pointing device (e.g., a mouse or a trackball) by which the user can provide input to the computer. Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback (e.g., visual feedback, auditory feedback, or tactile feedback); and input from the user can be received in any form, including acoustic, speech, or tactile input.
- The systems and techniques described here can be implemented in a computing system that includes a back-end component (e.g., as a data server), or that includes a middleware component (e.g., an application server), or that includes a front-end component (e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the systems and techniques described here), or any combination of such back-end, middleware, or front-end components. The components of the system can be interconnected by any form or medium of digital data communication (e.g., a communication network). Examples of communication networks include a local area network (“LAN”), a wide area network (“WAN”), and the Internet.
- The computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.
- A number of embodiments have been described. Nevertheless, it will be understood that various modifications may be made without departing from the spirit and scope of the embodiments. For example, various forms of the flows shown above may be used, with steps re-ordered, added, or removed. Also, although several applications of the payment systems and methods have been described, it should be recognized that numerous other applications are contemplated. Accordingly, other embodiments are within the scope of the following claims.
Claims (29)
1.-23. (canceled)
24. A method implemented by a server system of one or more data processing devices, the method comprising:
receiving, at the server system, information characterizing ambiguous user input at a remote device, the ambiguous user input representing a search query;
mapping, by the server system, two or more textual search queries to the ambiguous user input;
determining, by the server system, that a first of the textual search queries is a most probable resolution of the ambiguous user input;
generating, by the server system, a first set of search results responsive to the first of the textual search queries without waiting for user confirmation that the first of the textual search queries is the correct resolution of the ambiguous user input; and
transmitting, by the server system, the first set of search results to the remote device from which the ambiguous user input originated.
25. The method according to claim 24 , further comprising transmitting the first of the textual search queries to the remote device after the generation of the first set of search results.
26. The method according to claim 24 , wherein mapping the two or more textual search queries to the ambiguous user input comprises accessing a mapping table that associates the two or more textual search queries with the ambiguous user input.
27. The method according to claim 24 , further comprising transmitting additional of the two or more textual search queries to the remote device after the generation of the first set of search results.
28. The method according to claim 27 , wherein the additional of the two or more textual search queries are textual search queries that have a relatively high frequency of occurrence in a collection of previously submitted text search queries.
29. The method according to claim 24 , wherein determining that the first of the textual search queries is the most probable resolution comprises determining that the first of the textual search queries has a highest frequency of occurrence in collection of text search queries previously submitted to a search engine programmed to access an index of web sites from amongst the two or more textual search queries mapped to the ambiguous user input.
30. The method according to claim 24 , wherein:
the method further comprises determining, by the server system, that a frequency of occurrence of the first of the textual search queries in a collection of text search queries previously submitted to a search engine programmed to access an index of web sites exceeds a frequency of occurrence of a second of the textual search queries in the collection of previously-submitted text search queries by a predetermined amount; and
the generation of the first set of search results is responsive to the determination that the predetermined amount is exceeded.
31. The method according to claim 24 , wherein the ambiguous user input comprises ambiguous numeric keypad input at a remote handheld device.
32. The method according to claim 24 , wherein the first of the textual search queries corresponds to a portion of the ambiguous user input.
33. A system implemented by one or more data processing devices, the system comprising:
a search engine programmed to access an index of web sites in response to receipt of a search query to identify web sites including information responsive to the search query; and
a search query processor programmed to perform operations, the operations comprising:
receiving information characterizing ambiguous user input at a remote device, the ambiguous user input representing a search query,
mapping two or more textual search queries to the ambiguous user input,
determining that a first of the textual search queries is a most probable resolution of the ambiguous user input,
submitting the first of the textual search queries to the search engine without waiting for user confirmation that the first of the textual search queries is the correct resolution of the ambiguous user input,
a response formatter programmed to perform operations, the operations comprising:
receiving a first set of search results generated by the search engine in response to the submission of the first of the textual search queries by the search query processor, and
formatting the first set of search results for transmission to the remote device from which the ambiguous user input originated.
34. The system according to claim 33 , further comprising a query log storing information characterizing from past text queries received by the search engine.
35. The system according to claim 34 , wherein the system is programmed to determine a frequency at which each of a collection of text queries appears in the query log.
36. The system according to claim 33 , wherein:
the system further comprises a mapping table, wherein the mapping table includes two or more possible textual search query resolutions of the ambiguous user input; and
mapping the two or more textual search queries to the ambiguous user input comprises accessing the mapping table to identify the two or more possible textual search query resolutions.
37. The system according to claim 33 , wherein the response formatter is further programmed to format the first of the textual search queries for transmission to the remote device after receiving the first set of search results.
38. The system according to claim 33 , wherein the response formatter is further programmed to format additional of the two or more textual search queries for transmission to the remote device after receiving the first set of search results.
39. The system according to claim 33 , wherein determining that the first of the textual search queries is the most probable resolution comprises determining that the first of the textual search queries has a highest frequency of occurrence in collection of text search queries previously submitted to a search engine programmed to access an index of web sites from amongst the two or more textual search queries mapped to the ambiguous user input.
40. The system according to claim 33 , wherein:
the search query processor is further programmed to determine that a frequency of occurrence of the first of the textual search queries in a collection of text search queries previously submitted to a search engine programmed to access an index of web sites exceeds a frequency of occurrence of a second of the textual search queries in the collection of previously-submitted text search queries by a predetermined amount; and
the submission of the first of the textual search queries is responsive to the determination that the predetermined amount is exceeded.
41. The system according to claim 33 , wherein the ambiguous user input comprises ambiguous numeric keypad input at a remote handheld device.
42. The system according to claim 33 , wherein the first of the textual search queries corresponds to a portion of the ambiguous user input.
43. A computer-readable medium containing instructions that if executed by a computing system cause the computing system to perform a method for resolving ambiguous user input, the method comprising:
receiving information characterizing ambiguous user input at a remote device, the ambiguous user input representing a search query;
mapping two or more textual search queries to the ambiguous user input;
determining that a first of the textual search queries is a most probable resolution of the ambiguous user input;
generating a first set of search results responsive to the first of the textual search queries without waiting for user confirmation that the first of the textual search queries is the correct resolution of the ambiguous user input; and
transmitting the first set of search results to the remote device from which the ambiguous user input originated.
44. The computer-readable medium of claim 43 , wherein the method further comprises transmitting the first of the textual search queries to the remote device after the generation of the first set of search results.
45. The computer-readable medium of claim 43 , wherein the method further comprises transmitting the first of the textual search queries to the remote device after the generation of the first set of search results.
46. The computer-readable medium of claim 43 , wherein mapping the two or more textual search queries to the ambiguous user input comprises accessing a mapping table that associates the two or more textual search queries with the ambiguous user input.
47. The computer-readable medium of claim 46 , wherein the additional of the two or more textual search queries are textual search queries that have a relatively high frequency of occurrence in a collection of previously submitted text search queries.
48. The computer-readable medium of claim 43 , wherein determining that the first of the textual search queries is the most probable resolution comprises determining that the first of the textual search queries has a highest frequency of occurrence in collection of text search queries previously submitted to a search engine programmed to access an index of web sites from amongst the two or more textual search queries mapped to the ambiguous user input.
49. The computer-readable medium of claim 43 , wherein:
the method further comprises determining, by the server system, that a frequency of occurrence of the first of the textual search queries in a collection of text search queries previously submitted to a search engine programmed to access an index of web sites exceeds a frequency of occurrence of a second of the textual search queries in the collection of previously-submitted text search queries by a predetermined amount; and
the generation of the first set of search results is responsive to the determination that the predetermined amount is exceeded.
50. The computer-readable medium of claim 43 , wherein the ambiguous user input comprises ambiguous numeric keypad input at a remote handheld device.
51. The computer-readable medium of claim 43 , wherein the first of the textual search queries corresponds to a portion of the ambiguous user input.
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/179,705 US20110276558A1 (en) | 2006-10-25 | 2011-07-11 | Server-side match |
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US11/552,751 US7979425B2 (en) | 2006-10-25 | 2006-10-25 | Server-side match |
US13/179,705 US20110276558A1 (en) | 2006-10-25 | 2011-07-11 | Server-side match |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US11/552,751 Continuation US7979425B2 (en) | 2006-10-25 | 2006-10-25 | Server-side match |
Publications (1)
Publication Number | Publication Date |
---|---|
US20110276558A1 true US20110276558A1 (en) | 2011-11-10 |
Family
ID=39324943
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US11/552,751 Active US7979425B2 (en) | 2006-10-25 | 2006-10-25 | Server-side match |
US13/179,705 Abandoned US20110276558A1 (en) | 2006-10-25 | 2011-07-11 | Server-side match |
Family Applications Before (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US11/552,751 Active US7979425B2 (en) | 2006-10-25 | 2006-10-25 | Server-side match |
Country Status (3)
Country | Link |
---|---|
US (2) | US7979425B2 (en) |
CN (2) | CN101563689A (en) |
WO (1) | WO2008052119A1 (en) |
Cited By (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20090069000A1 (en) * | 2007-07-27 | 2009-03-12 | Hewlett-Packard Devleopment Company, L.P. | Method of Enabling the Downloading of Content |
WO2014085013A1 (en) * | 2012-11-27 | 2014-06-05 | Kikin, Inc. | System and method for providing instant contextual translation |
US20150278359A1 (en) * | 2014-03-28 | 2015-10-01 | Baidu Online Network Technology (Beijing) Co., Ltd. | Method and apparatus for generating a recommendation page |
Families Citing this family (46)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8706747B2 (en) * | 2000-07-06 | 2014-04-22 | Google Inc. | Systems and methods for searching using queries written in a different character-set and/or language from the target pages |
US8972444B2 (en) * | 2004-06-25 | 2015-03-03 | Google Inc. | Nonstandard locality-based text entry |
US8392453B2 (en) * | 2004-06-25 | 2013-03-05 | Google Inc. | Nonstandard text entry |
US20060080085A1 (en) * | 2004-09-15 | 2006-04-13 | Teet Kalmus | System and method for making information queries and for sending and mediating information |
US8060357B2 (en) * | 2006-01-27 | 2011-11-15 | Xerox Corporation | Linguistic user interface |
US7979425B2 (en) | 2006-10-25 | 2011-07-12 | Google Inc. | Server-side match |
US8661029B1 (en) | 2006-11-02 | 2014-02-25 | Google Inc. | Modifying search result ranking based on implicit user feedback |
US8635203B2 (en) * | 2006-11-16 | 2014-01-21 | Yahoo! Inc. | Systems and methods using query patterns to disambiguate query intent |
US9092510B1 (en) | 2007-04-30 | 2015-07-28 | Google Inc. | Modifying search result ranking based on a temporal element of user feedback |
US8909655B1 (en) | 2007-10-11 | 2014-12-09 | Google Inc. | Time based ranking |
US20100114887A1 (en) * | 2008-10-17 | 2010-05-06 | Google Inc. | Textual Disambiguation Using Social Connections |
US8156111B2 (en) * | 2008-11-24 | 2012-04-10 | Yahoo! Inc. | Identifying and expanding implicitly temporally qualified queries |
US8572110B2 (en) * | 2008-12-04 | 2013-10-29 | Microsoft Corporation | Textual search for numerical properties |
US8396865B1 (en) | 2008-12-10 | 2013-03-12 | Google Inc. | Sharing search engine relevance data between corpora |
US9009146B1 (en) | 2009-04-08 | 2015-04-14 | Google Inc. | Ranking search results based on similar queries |
US8447760B1 (en) | 2009-07-20 | 2013-05-21 | Google Inc. | Generating a related set of documents for an initial set of documents |
US8498974B1 (en) | 2009-08-31 | 2013-07-30 | Google Inc. | Refining search results |
US8972391B1 (en) | 2009-10-02 | 2015-03-03 | Google Inc. | Recent interest based relevance scoring |
US8886641B2 (en) * | 2009-10-15 | 2014-11-11 | Yahoo! Inc. | Incorporating recency in network search using machine learning |
US8874555B1 (en) | 2009-11-20 | 2014-10-28 | Google Inc. | Modifying scoring data based on historical changes |
US8924379B1 (en) * | 2010-03-05 | 2014-12-30 | Google Inc. | Temporal-based score adjustments |
US8959093B1 (en) | 2010-03-15 | 2015-02-17 | Google Inc. | Ranking search results based on anchors |
US8595207B2 (en) * | 2010-06-14 | 2013-11-26 | Salesforce.Com | Methods and systems for dynamically suggesting answers to questions submitted to a portal of an online service |
US9623119B1 (en) | 2010-06-29 | 2017-04-18 | Google Inc. | Accentuating search results |
US8832083B1 (en) | 2010-07-23 | 2014-09-09 | Google Inc. | Combining user feedback |
JP5567967B2 (en) * | 2010-09-30 | 2014-08-06 | インターナショナル・ビジネス・マシーンズ・コーポレーション | Cache control method, system and program in database |
US9002867B1 (en) | 2010-12-30 | 2015-04-07 | Google Inc. | Modifying ranking data based on document changes |
EP2683141A1 (en) * | 2012-07-05 | 2014-01-08 | BlackBerry Limited | Phoneword dialing in a mobile communication device having a full keyboard |
US8634812B1 (en) | 2012-07-05 | 2014-01-21 | Blackberry Limited | Phoneword dialing in a mobile communication device having a full keyboard |
US9430550B2 (en) | 2012-09-28 | 2016-08-30 | Oracle International Corporation | Clustering a table in a relational database management system |
US9507825B2 (en) | 2012-09-28 | 2016-11-29 | Oracle International Corporation | Techniques for partition pruning based on aggregated zone map information |
US8996544B2 (en) | 2012-09-28 | 2015-03-31 | Oracle International Corporation | Pruning disk blocks of a clustered table in a relational database management system |
US10146756B2 (en) | 2013-03-13 | 2018-12-04 | Microsoft Technology Licensing, Llc | Perspective annotation for numerical representations |
US10642837B2 (en) | 2013-03-15 | 2020-05-05 | Oracle International Corporation | Relocating derived cache during data rebalance to maintain application performance |
US10089357B2 (en) | 2014-09-26 | 2018-10-02 | Oracle International Corporation | System and method for generating partition-based splits in a massively parallel or distributed database environment |
US10380114B2 (en) | 2014-09-26 | 2019-08-13 | Oracle International Corporation | System and method for generating rowid range-based splits in a massively parallel or distributed database environment |
US10089377B2 (en) | 2014-09-26 | 2018-10-02 | Oracle International Corporation | System and method for data transfer from JDBC to a data warehouse layer in a massively parallel or distributed database environment |
US10078684B2 (en) * | 2014-09-26 | 2018-09-18 | Oracle International Corporation | System and method for query processing with table-level predicate pushdown in a massively parallel or distributed database environment |
US10528596B2 (en) | 2014-09-26 | 2020-01-07 | Oracle International Corporation | System and method for consistent reads between tasks in a massively parallel or distributed database environment |
US10394818B2 (en) | 2014-09-26 | 2019-08-27 | Oracle International Corporation | System and method for dynamic database split generation in a massively parallel or distributed database environment |
US10387421B2 (en) | 2014-09-26 | 2019-08-20 | Oracle International Corporation | System and method for generating size-based splits in a massively parallel or distributed database environment |
US10180973B2 (en) | 2014-09-26 | 2019-01-15 | Oracle International Corporation | System and method for efficient connection management in a massively parallel or distributed database environment |
CN106030570B (en) * | 2014-12-23 | 2020-09-29 | 微软技术许可有限责任公司 | Visualizing relationships between data sets |
US10455034B2 (en) * | 2017-06-28 | 2019-10-22 | Facebook, Inc. | Analyzing tracking requests generated by client devices interacting with a website |
US11086876B2 (en) | 2017-09-29 | 2021-08-10 | Oracle International Corporation | Storing derived summaries on persistent memory of a storage device |
US10581991B1 (en) | 2018-01-29 | 2020-03-03 | Facebook, Inc. | Analyzing tracking requests generated by client devices based on metadata describing web page of a third party website |
Family Cites Families (105)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US736668A (en) * | 1903-05-15 | 1903-08-18 | Union Match Company | Box-filling machine. |
US4674112A (en) | 1985-09-06 | 1987-06-16 | Board Of Regents, The University Of Texas System | Character pattern recognition and communications apparatus |
US4754474A (en) | 1985-10-21 | 1988-06-28 | Feinson Roy W | Interpretive tone telecommunication method and apparatus |
EP0444358B1 (en) | 1990-02-27 | 1998-08-19 | Oracle Corporation | Dynamic optimization of a single relation access |
KR950008022B1 (en) | 1991-06-19 | 1995-07-24 | 가부시끼가이샤 히다찌세이사꾸쇼 | Charactor processing method and apparatus therefor |
RU2039376C1 (en) | 1991-11-01 | 1995-07-09 | Сергей Станиславович Ковалевский | Device for information search |
US5337347A (en) | 1992-06-25 | 1994-08-09 | International Business Machines Corporation | Method and system for progressive database search termination and dynamic information presentation utilizing telephone keypad input |
GB2272091B (en) | 1992-10-30 | 1996-10-23 | Canon Europa Nv | Apparatus for use in aligning bilingual corpora |
JP3919237B2 (en) | 1994-05-20 | 2007-05-23 | キヤノン株式会社 | Image recording / reproducing apparatus, image reproducing apparatus, and method thereof |
WO1996010795A1 (en) | 1994-10-03 | 1996-04-11 | Helfgott & Karas, P.C. | A database accessing system |
US5758145A (en) | 1995-02-24 | 1998-05-26 | International Business Machines Corporation | Method and apparatus for generating dynamic and hybrid sparse indices for workfiles used in SQL queries |
US6070140A (en) | 1995-06-05 | 2000-05-30 | Tran; Bao Q. | Speech recognizer |
EP0834139A4 (en) | 1995-06-07 | 1998-08-05 | Int Language Engineering Corp | Machine assisted translation tools |
US5701469A (en) | 1995-06-07 | 1997-12-23 | Microsoft Corporation | Method and system for generating accurate search results using a content-index |
US5818437A (en) | 1995-07-26 | 1998-10-06 | Tegic Communications, Inc. | Reduced keyboard disambiguating computer |
WO1997005541A1 (en) | 1995-07-26 | 1997-02-13 | King Martin T | Reduced keyboard disambiguating system |
US5634053A (en) | 1995-08-29 | 1997-05-27 | Hughes Aircraft Company | Federated information management (FIM) system and method for providing data site filtering and translation for heterogeneous databases |
US5845273A (en) | 1996-06-27 | 1998-12-01 | Microsoft Corporation | Method and apparatus for integrating multiple indexed files |
US5953073A (en) | 1996-07-29 | 1999-09-14 | International Business Machines Corp. | Method for relating indexing information associated with at least two indexing schemes to facilitate the play-back of user-specified digital video data and a video client incorporating the same |
US5745894A (en) | 1996-08-09 | 1998-04-28 | Digital Equipment Corporation | Method for generating and searching a range-based index of word-locations |
US5953541A (en) | 1997-01-24 | 1999-09-14 | Tegic Communications, Inc. | Disambiguating system for disambiguating ambiguous input sequences by displaying objects associated with the generated input sequences in the order of decreasing frequency of use |
US6278992B1 (en) | 1997-03-19 | 2001-08-21 | John Andrew Curtis | Search engine using indexing method for storing and retrieving data |
JP3143079B2 (en) | 1997-05-30 | 2001-03-07 | 松下電器産業株式会社 | Dictionary index creation device and document search device |
CN1204812A (en) * | 1997-07-09 | 1999-01-13 | 日本电气株式会社 | Multistage intelligent string comparison method |
US6055528A (en) | 1997-07-25 | 2000-04-25 | Claritech Corporation | Method for cross-linguistic document retrieval |
JP2965010B2 (en) | 1997-08-30 | 1999-10-18 | 日本電気株式会社 | Related information search method and apparatus, and machine-readable recording medium recording program |
PT1018069E (en) | 1997-09-25 | 2002-12-31 | Tegic Communications Inc | REDUCED KEYBOARD AMBIGUITY RESOLUTION SYSTEM |
US6026411A (en) | 1997-11-06 | 2000-02-15 | International Business Machines Corporation | Method, apparatus, and computer program product for generating an image index and for internet searching and querying by image colors |
US6377965B1 (en) | 1997-11-07 | 2002-04-23 | Microsoft Corporation | Automatic word completion system for partially entered data |
US5945928A (en) | 1998-01-20 | 1999-08-31 | Tegic Communication, Inc. | Reduced keyboard disambiguating system for the Korean language |
KR100313462B1 (en) | 1998-01-23 | 2001-12-31 | 윤종용 | A method of displaying searched information in distance order in web search engine |
US6421675B1 (en) | 1998-03-16 | 2002-07-16 | S. L. I. Systems, Inc. | Search engine |
GB2337611A (en) | 1998-05-20 | 1999-11-24 | Sharp Kk | Multilingual document retrieval system |
US6144958A (en) * | 1998-07-15 | 2000-11-07 | Amazon.Com, Inc. | System and method for correcting spelling errors in search queries |
US6226635B1 (en) | 1998-08-14 | 2001-05-01 | Microsoft Corporation | Layered query management |
US6370518B1 (en) | 1998-10-05 | 2002-04-09 | Openwave Systems Inc. | Method and apparatus for displaying a record from a structured database with minimum keystrokes |
GB2347247A (en) | 1999-02-22 | 2000-08-30 | Nokia Mobile Phones Ltd | Communication terminal with predictive editor |
US20020038308A1 (en) | 1999-05-27 | 2002-03-28 | Michael Cappi | System and method for creating a virtual data warehouse |
US6421662B1 (en) | 1999-06-04 | 2002-07-16 | Oracle Corporation | Generating and implementing indexes based on criteria set forth in queries |
US6598039B1 (en) | 1999-06-08 | 2003-07-22 | Albert-Inc. S.A. | Natural language interface for searching database |
CN1176432C (en) | 1999-07-28 | 2004-11-17 | 国际商业机器公司 | Method and system for providing national language inquiry service |
US6453315B1 (en) | 1999-09-22 | 2002-09-17 | Applied Semantics, Inc. | Meaning-based information organization and retrieval |
US6353820B1 (en) | 1999-09-29 | 2002-03-05 | Bull Hn Information Systems Inc. | Method and system for using dynamically generated code to perform index record retrieval in certain circumstances in a relational database manager |
US6484179B1 (en) | 1999-10-25 | 2002-11-19 | Oracle Corporation | Storing multidimensional data in a relational database management system |
CN1274237A (en) * | 2000-01-27 | 2000-11-22 | 深圳华强通讯有限公司 | Bidirectional wireless text-image inquiry and schedule system and method |
US6675165B1 (en) | 2000-02-28 | 2004-01-06 | Barpoint.Com, Inc. | Method for linking a billboard or signage to information on a global computer network through manual information input or a global positioning system |
US7120574B2 (en) | 2000-04-03 | 2006-10-10 | Invention Machine Corporation | Synonym extension of search queries with validation |
US7177798B2 (en) | 2000-04-07 | 2007-02-13 | Rensselaer Polytechnic Institute | Natural language interface using constrained intermediate dictionary of results |
US6714905B1 (en) | 2000-05-02 | 2004-03-30 | Iphrase.Com, Inc. | Parsing ambiguous grammar |
JP2001325252A (en) | 2000-05-12 | 2001-11-22 | Sony Corp | Portable terminal, information input method therefor, dictionary retrieval device and method and medium |
US6456234B1 (en) | 2000-06-07 | 2002-09-24 | William J. Johnson | System and method for proactive content delivery by situation location |
US6529903B2 (en) | 2000-07-06 | 2003-03-04 | Google, Inc. | Methods and apparatus for using a modified index to provide search results in response to an ambiguous search query |
US8706747B2 (en) * | 2000-07-06 | 2014-04-22 | Google Inc. | Systems and methods for searching using queries written in a different character-set and/or language from the target pages |
WO2002009302A1 (en) * | 2000-07-25 | 2002-01-31 | Cypus | Communication terminal capable for searching internet domain name, system and method for searching internet domain name using the same |
US6968179B1 (en) | 2000-07-27 | 2005-11-22 | Microsoft Corporation | Place specific buddy list services |
US20020021311A1 (en) | 2000-08-14 | 2002-02-21 | Approximatch Ltd. | Data entry using a reduced keyboard |
US20030217052A1 (en) * | 2000-08-24 | 2003-11-20 | Celebros Ltd. | Search engine method and apparatus |
US7027987B1 (en) | 2001-02-07 | 2006-04-11 | Google Inc. | Voice interface for a search engine |
GB0103053D0 (en) | 2001-02-07 | 2001-03-21 | Nokia Mobile Phones Ltd | A communication terminal having a predictive text editor application |
KR20020084739A (en) * | 2001-05-02 | 2002-11-11 | 이재원 | Method and apparatus for wireless internet search and connection using numeric inputs |
GB0111012D0 (en) | 2001-05-04 | 2001-06-27 | Nokia Corp | A communication terminal having a predictive text editor application |
US6947770B2 (en) | 2001-06-22 | 2005-09-20 | Ericsson, Inc. | Convenient dialing of names and numbers from a phone without alpha keypad |
US20030035519A1 (en) | 2001-08-15 | 2003-02-20 | Warmus James L. | Methods and apparatus for accessing web content from a wireless telephone |
US20030054830A1 (en) | 2001-09-04 | 2003-03-20 | Zi Corporation | Navigation system for mobile communication devices |
US6944609B2 (en) | 2001-10-18 | 2005-09-13 | Lycos, Inc. | Search results using editor feedback |
US7149550B2 (en) | 2001-11-27 | 2006-12-12 | Nokia Corporation | Communication terminal having a text editor application with a word completion feature |
US7283992B2 (en) | 2001-11-30 | 2007-10-16 | Microsoft Corporation | Media agent to suggest contextually related media content |
CN1428720A (en) * | 2001-12-28 | 2003-07-09 | 戴远明 | Method for converting numeric string into ordered information |
US7565367B2 (en) | 2002-01-15 | 2009-07-21 | Iac Search & Media, Inc. | Enhanced popularity ranking |
US6952691B2 (en) | 2002-02-01 | 2005-10-04 | International Business Machines Corporation | Method and system for searching a multi-lingual database |
US7103854B2 (en) | 2002-06-27 | 2006-09-05 | Tele Atlas North America, Inc. | System and method for associating text and graphical views of map information |
CN100350356C (en) | 2002-07-01 | 2007-11-21 | 索尼爱立信移动通讯股份有限公司 | Entering text into an electronic communications device |
EP2259197B1 (en) | 2002-07-23 | 2018-07-18 | BlackBerry Limited | System and method of using a custom word list |
US20040163032A1 (en) | 2002-12-17 | 2004-08-19 | Jin Guo | Ambiguity resolution for predictive text entry |
GB2396529B (en) | 2002-12-20 | 2005-08-10 | Motorola Inc | Location-based mobile service provision |
AU2002361224A1 (en) | 2002-12-27 | 2004-07-22 | Nokia Corporation | Predictive text entry and data compression method for a mobile communication terminal |
FI116168B (en) | 2003-03-03 | 2005-09-30 | Flextronics Odm Luxembourg Sa | Input of data |
US7729913B1 (en) | 2003-03-18 | 2010-06-01 | A9.Com, Inc. | Generation and selection of voice recognition grammars for conducting database searches |
KR100563787B1 (en) | 2003-04-03 | 2006-03-30 | 주식회사 시티기술단 | Retaining wall structure composed of retaining-wall panel unit prestressed under interconnecting high intensity reinforcing rod installed in the panel unit with couplers so as to resist section strength and constructing method thereof |
US7395203B2 (en) | 2003-07-30 | 2008-07-01 | Tegic Communications, Inc. | System and method for disambiguating phonetic input |
US8200865B2 (en) | 2003-09-11 | 2012-06-12 | Eatoni Ergonomics, Inc. | Efficient method and apparatus for text entry based on trigger sequences |
GB2433002A (en) | 2003-09-25 | 2007-06-06 | Canon Europa Nv | Processing of Text Data involving an Ambiguous Keyboard and Method thereof. |
US7240049B2 (en) * | 2003-11-12 | 2007-07-03 | Yahoo! Inc. | Systems and methods for search query processing using trend analysis |
US20050114312A1 (en) * | 2003-11-26 | 2005-05-26 | Microsoft Corporation | Efficient string searches using numeric keypad |
US20050188330A1 (en) | 2004-02-20 | 2005-08-25 | Griffin Jason T. | Predictive text input system for a mobile communication device |
US7293019B2 (en) | 2004-03-02 | 2007-11-06 | Microsoft Corporation | Principles and methods for personalizing newsfeeds via an analysis of information novelty and dynamics |
US8676830B2 (en) * | 2004-03-04 | 2014-03-18 | Yahoo! Inc. | Keyword recommendation for internet search engines |
US7218249B2 (en) | 2004-06-08 | 2007-05-15 | Siemens Communications, Inc. | Hand-held communication device having navigation key-based predictive text entry |
US8595687B2 (en) | 2004-06-23 | 2013-11-26 | Broadcom Corporation | Method and system for providing text information in an application framework for a wireless device |
US8972444B2 (en) | 2004-06-25 | 2015-03-03 | Google Inc. | Nonstandard locality-based text entry |
US8392453B2 (en) | 2004-06-25 | 2013-03-05 | Google Inc. | Nonstandard text entry |
US7412441B2 (en) * | 2005-05-31 | 2008-08-12 | Microsoft Corporation | Predictive phonetic data search |
US7788266B2 (en) * | 2005-08-26 | 2010-08-31 | Veveo, Inc. | Method and system for processing ambiguous, multi-term search queries |
US7779011B2 (en) | 2005-08-26 | 2010-08-17 | Veveo, Inc. | Method and system for dynamically processing ambiguous, reduced text search queries and highlighting results thereof |
US7737999B2 (en) | 2005-08-26 | 2010-06-15 | Veveo, Inc. | User interface for visual cooperation between text input and display device |
US20070061211A1 (en) | 2005-09-14 | 2007-03-15 | Jorey Ramer | Preventing mobile communication facility click fraud |
US9471925B2 (en) | 2005-09-14 | 2016-10-18 | Millennial Media Llc | Increasing mobile interactivity |
US7647228B2 (en) | 2005-11-03 | 2010-01-12 | Apptera, Inc. | Method and apparatus for speech processing incorporating user intent |
US7644054B2 (en) | 2005-11-23 | 2010-01-05 | Veveo, Inc. | System and method for finding desired results by incremental search using an ambiguous keypad with the input containing orthographic and typographic errors |
US20070195063A1 (en) * | 2006-02-21 | 2007-08-23 | Wagner Paul T | Alphanumeric data processing in a telephone |
US7657526B2 (en) | 2006-03-06 | 2010-02-02 | Veveo, Inc. | Methods and systems for selecting and presenting content based on activity level spikes associated with the content |
EP2016513A4 (en) | 2006-04-20 | 2010-03-03 | Veveo Inc | User interface methods and systems for selecting and presenting content based on user navigation and selection actions associated with the content |
US7536384B2 (en) | 2006-09-14 | 2009-05-19 | Veveo, Inc. | Methods and systems for dynamically rearranging search results into hierarchically organized concept clusters |
US7979425B2 (en) | 2006-10-25 | 2011-07-12 | Google Inc. | Server-side match |
KR20100041145A (en) * | 2008-10-13 | 2010-04-22 | 삼성전자주식회사 | Dialing and telephone number storing method of a portable terminal having a qwerty keypad |
-
2006
- 2006-10-25 US US11/552,751 patent/US7979425B2/en active Active
-
2007
- 2007-10-25 CN CNA2007800469915A patent/CN101563689A/en active Pending
- 2007-10-25 WO PCT/US2007/082534 patent/WO2008052119A1/en active Application Filing
- 2007-10-25 CN CN201611175508.0A patent/CN106959994B/en active Active
-
2011
- 2011-07-11 US US13/179,705 patent/US20110276558A1/en not_active Abandoned
Cited By (5)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20090069000A1 (en) * | 2007-07-27 | 2009-03-12 | Hewlett-Packard Devleopment Company, L.P. | Method of Enabling the Downloading of Content |
US8403222B2 (en) * | 2007-07-27 | 2013-03-26 | Hewlett-Packard Development Company, L.P. | Method of enabling the downloading of content |
WO2014085013A1 (en) * | 2012-11-27 | 2014-06-05 | Kikin, Inc. | System and method for providing instant contextual translation |
US20150278359A1 (en) * | 2014-03-28 | 2015-10-01 | Baidu Online Network Technology (Beijing) Co., Ltd. | Method and apparatus for generating a recommendation page |
US10140368B2 (en) * | 2014-03-28 | 2018-11-27 | Baidu Online Network Technology (Beijing) Co., Ltd. | Method and apparatus for generating a recommendation page |
Also Published As
Publication number | Publication date |
---|---|
US7979425B2 (en) | 2011-07-12 |
WO2008052119A1 (en) | 2008-05-02 |
CN106959994A (en) | 2017-07-18 |
CN101563689A (en) | 2009-10-21 |
US20080104043A1 (en) | 2008-05-01 |
CN106959994B (en) | 2020-09-29 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US7979425B2 (en) | Server-side match | |
US10534802B2 (en) | Nonstandard locality-based text entry | |
US8392453B2 (en) | Nonstandard text entry | |
RU2589873C2 (en) | Input processing method and apparatus | |
US20100005086A1 (en) | Resource locator suggestions from input character sequence | |
US20070164782A1 (en) | Multi-word word wheeling | |
CN106205613A (en) | A kind of navigation audio recognition method and system | |
TW200947241A (en) | Database indexing algorithm and method and system for database searching using the same | |
CN1755669A (en) | Name input processing method and system | |
CN1679023A (en) | Method and system of creating and using chinese language data and user-corrected data | |
US20080319737A1 (en) | Method and apparatus for connecting a cellular telephone user to the internet | |
US20040143568A1 (en) | Search method implemented with a search system | |
CN101488136A (en) | Work form word searching system and method based on computer network |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:GARG, ASHUTOSH;DATAR, MAYUR;REEL/FRAME:027094/0599Effective date: 20061024 |
|
STCB | Information on status: application discontinuation |
Free format text: ABANDONED -- FAILURE TO RESPOND TO AN OFFICE ACTION |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044142/0357Effective date: 20170929 |
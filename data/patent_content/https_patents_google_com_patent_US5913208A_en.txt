US5913208A - Identifying duplicate documents from search results without comparing document content - Google Patents
Identifying duplicate documents from search results without comparing document content Download PDFInfo
- Publication number
- US5913208A US5913208A US08/677,059 US67705996A US5913208A US 5913208 A US5913208 A US 5913208A US 67705996 A US67705996 A US 67705996A US 5913208 A US5913208 A US 5913208A
- Authority
- US
- United States
- Prior art keywords
- hit
- attributes
- list
- documents
- document
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Lifetime
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/30—Information retrieval; Database structures therefor; File system structures therefor of unstructured textual data
- G06F16/33—Querying
- G06F16/338—Presentation of query results
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/951—Indexing; Web crawling techniques
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/953—Querying, e.g. by the use of web search engines
- G06F16/9538—Presentation of query results
-
- Y—GENERAL TAGGING OF NEW TECHNOLOGICAL DEVELOPMENTS; GENERAL TAGGING OF CROSS-SECTIONAL TECHNOLOGIES SPANNING OVER SEVERAL SECTIONS OF THE IPC; TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10—TECHNICAL SUBJECTS COVERED BY FORMER USPC
- Y10S—TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10S707/00—Data processing: database and file management or data structures
- Y10S707/953—Organization of data
- Y10S707/959—Network
-
- Y—GENERAL TAGGING OF NEW TECHNOLOGICAL DEVELOPMENTS; GENERAL TAGGING OF CROSS-SECTIONAL TECHNOLOGIES SPANNING OVER SEVERAL SECTIONS OF THE IPC; TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10—TECHNICAL SUBJECTS COVERED BY FORMER USPC
- Y10S—TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10S707/00—Data processing: database and file management or data structures
- Y10S707/99931—Database or file accessing
- Y10S707/99933—Query processing, i.e. searching
-
- Y—GENERAL TAGGING OF NEW TECHNOLOGICAL DEVELOPMENTS; GENERAL TAGGING OF CROSS-SECTIONAL TECHNOLOGIES SPANNING OVER SEVERAL SECTIONS OF THE IPC; TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10—TECHNICAL SUBJECTS COVERED BY FORMER USPC
- Y10S—TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10S707/00—Data processing: database and file management or data structures
- Y10S707/99931—Database or file accessing
- Y10S707/99933—Query processing, i.e. searching
- Y10S707/99935—Query augmenting and refining, e.g. inexact access
Definitions
- This invention relates to the field of searching large document databases, particularly in a networking environment. More specifically, the invention relates to a system and method for identifying duplicate documents from search results without comparing content within the document.
- a large document database is a collection of many documents (e.g., reports, articles, memos, books) stored electronically as files on one or more computers. Users access the database to locate documents of interest and retrieve those documents for further processing. Finding documents of interest by inspecting every document in the database is impractical. Instead, a search system is used to locate relevant documents.
- a search system allows a user to express an information need in the form of a query. The system's search engine processes the query and returns to the user a hit-list of relevant documents. The user then selects interesting documents from the hit-list and retrieves those documents.
- IR information retrieval
- An IR system identifies relevant documents by matching the information need described by the query with the information content of the documents in the database.
- a query can be constructed in a variety of ways. Free-text queries contain natural language sentences or phrases. Structured queries consist of terms combined with operators (e.g., Boolean, proximity). Example queries are entire documents that serve as examples of the desired information.
- the information content of the documents is identified at indexing time when the search system processes the documents to build an index.
- One index commonly used by IR systems is an inverted file.
- An inverted file contains an inverted list for every term used in the document database.
- a term is any word or vocabulary item identified in a document during indexing.
- An inverted list identifies the documents that contain the corresponding term.
- a document entry in an inverted list may additionally contain a term weight (e.g., the number of times the term occurs in the document) and/or the location of each occurrence of the term in the document (e.g., paragraph, sentence, word offset).
- the actual content of the index depends on a similarity algorithm used by a search engine.
- the search engine obtains information from the index based on the query, processes the information according to its similarity algorithm, and generates a hit-list.
- the hit-list identifies the documents deemed relevant to the query.
- Each entry on the hit-list uniquely identifies the corresponding document and may be supplemented with one or more of the document's attributes.
- Document attributes include items such as title, author, creation date, length, location, etc. These are identified at indexing time and stored in a document catalog.
- a relevance score for each document and rank the hit-list in decreasing order of relevance.
- the relevance score may be viewed as another document attribute, although it is calculated at query processing time and applicable only to the current query.
- a computer comprises a Central Processing Unit (CPU), main memory, disk storage, and software (e.g., a personal computer (PC) like the IBM ThinkPad).
- a networking environment consists of two or more computers connected by a local or wide area network (e.g., Ethernet, Token Ring, and the Internet.) (See for example, U.S. Pat. No. 5,371,852 to Attanasio et al. issued on Dec. 6, 1994 which is herein incorporated by reference in its entirety.)
- a user accesses the document database using a client application on the user's computer.
- the client application communicates with a search server (the document database search system) on either the user's computer (e.g. a client) or another computer (e.g. a server) on the network.
- a search server the document database search system
- the search server needs to access just the database index, which may be located on the same computer as the search server or yet another computer on the network.
- the actual documents in the database may be located on any computer on the network.
- a Web environment such as the World Wide Web, is a networking environment where Web servers and browsers (e.g., Netscape and WebExplorer) are used. Users can make documents publicly available in a Web environment by registering the documents with a Web server. Other users in the Web environment can then retrieve these documents using a Web browser.
- the collection of documents retrievable in a Web networking environment can be viewed as a large document database.
- Web wanderers also called robots, spiders, crawlers, or worms (e.g., WebCrawler, WWWWorm), to gather the available documents and submit them to the search system indexer.
- Web wanderers make use of hypertext links stored in documents.
- a hypertext link is a reference to another document stored in the Web. All of the documents are gathered by identifying a few key starting points, retrieving those documents for indexing, retrieving and indexing all documents referenced by the documents just indexed (via hypertext links), and continuing recursively until all documents reachable from the starting points have been retrieved and indexed.
- the graph of documents in a Web environment is typically well connected, such that nearly all of the available documents can be found when appropriate starting points are chosen.
- the index can then be used, as described above, to search for documents in the Web.
- the index may be located independently of the documents, the client, and even the search server.
- a hit-list, generated as the result of searching the index, will typically identify the locations of the relevant documents on the Web, e.g. with hypertext links can be attributes, and the user will retrieve those documents directly with their Web browser.
- Duplicate/redundant documents on the hit-list are confusing for the user, take up additional display space, and cause some relevant documents not to be displayed to the user. For example, relevant documents with a score below a cutoff may not be displayed if there are many duplicate documents with scores higher than the cutoff taking up space on the display.
- An object of this invention is a system and method that identifies duplicate documents from search results without comparing content within the documents.
- An object of this invention is a system and method that identifies duplicate documents from search results without comparing content within the documents in order to save the cost of accessing and analyzing the document content.
- An object of this invention is a system and method that identifies duplicate documents from search results without comparing content within the documents in a networking environment.
- the present invention is a system of and method executed on one or more computers that has one or more memory storage devices containing a document collection of one or more documents.
- the system also has one or more indexes that each include an inverted file with one or more terms. Each of the terms is associated with one or more document identifiers.
- the index further includes a document catalog that associates each of the document identifiers with one or more attributes, either intrinsic or non intrinsic.
- a search engine process executes on the system and processes a query with one or more query elements.
- the search engine process produces a hit list having one or more hit list entries.
- Each hit list entry, with one or more hit list attributes is associated with one of the documents that is determined by the search engine to be relevant to the query.
- Each of the hit list attributes is selected or derived from the attributes in the document catalog.
- a formatter processor selects one or more of the hit list attributes, identified by a hit list attribute selector. The formatter processor then compares the selected attributes of two or more entries on the hit list to determine whether or not documents associated with these entries are duplicate instances of one another. The determination can be made without examining the content of the document associated with the entries.
- FIG. 1 is a block diagram of the computing environment in which the present invention is used in a non limiting preferred embodiment.
- FIG. 2 is a block diagram of an index comprising an inverted file (FIG. 2A) and a document catalog (FIG. 2B) having intrinsic and optionally non intrinsic attributes of each document used in a non limiting preferred embodiment.
- FIG. 3 is a block diagram of a query (FIG. 3A) and a hit-list (FIG. 3B) that might result from processing the query.
- FIG. 4 is a flow chart of one preferred embodiment of a process for determining which documents on a hit-list are duplicated.
- FIG. 5 is a flow chart of an alternative preferred embodiment of a process for determining which documents on a hit-list are duplicated.
- FIG. 6 is a block diagram of a filename-string data structure used by the present invention in a non limiting preferred embodiment.
- FIG. 7 shows a typical hit-list before being processed by the present invention.
- FIG. 8 shows a possible result of applying the present invention to the hit-list shown in FIG. 7 in a non limiting preferred embodiment.
- FIG. 9 shows an alternative possible result of applying the present invention to the hit-list shown in FIG. 7 in a non limiting preferred embodiment.
- FIG. 10 shows another alternative possible result of applying the present invention to the hit-list shown in FIG. 7 in a non limiting preferred embodiment.
- FIG. 1 is a block diagram of the computing environment in which the present invention is used in a non limiting preferred embodiment. The figure shows some of the possible hardware, software, and networking configurations that make up the computing environment.
- the computing environment or system 100 comprises one or more general purpose computers 170, 175, 180, 185, 190, and 195 interconnected by a network 105.
- general purpose computers include the IBM Aptiva personal computer, the IBM RISC System/6000 workstation, and the IBM POWERparallel SP2. (These are Trademarks of the IBM Corporation.)
- the network 105 may be a local area network (LAN), a wide area network (WAN), or the Internet.
- the computers in this environment may support the Web information exchange protocol (HTTP) and be part of a local Web or the World Wide Web (WWW).
- Some computers (e.g., 195) may occasionally or always be disconnected 196 from the network and operate as stand-alone computers.
- Documents 140 are items such as books, articles, or reports that contain text, images, or any other multimedia object and/or information.
- One or more documents are stored on one or more computers in the environment, and multiple instances of the same document may exist in the environment.
- a query (see FIG. 3A) is submitted for processing to a search engine 120 running on a computer in the environment.
- the search engine makes use of an index 130 (see FIG. 2) to identify documents that are relevant to the query.
- An index is created at indexing time by the search engine for a particular set of documents in the environment, called a document collection 141.
- a document collection 141 may comprise documents located anywhere in the computing environment, e.g., spread across two or more computer memories.
- the process of using an index to identify documents relevant to a query is called information retrieval, and is well known in the prior art.
- the relevant documents are returned by the search engine in the form of a hit-list (see FIG. 3B).
- a formatter 110 which embodies the present invention, is used to identify hit-list entries for duplicate instances of the same document and make any of a number possible modifications to the hit-list to distinguish these duplicates.
- the formatter process 110 of identifying duplicates is described in detail in FIGS. 4 and 5.
- Documents 140 and/or indexes 130 on one computer may be accessed over the network by another computer using the Web protocol, a networked file system protocol (e.g., NFS, AFS), or some other protocol.
- Services on one computer e.g., search engine 120, formatter 110
- RPC remote procedure call
- the stand-alone system 195 has documents 140 and an index 130 stored locally.
- the stand-alone system 195 also has a search engine 120 and a formatter 110 installed locally. When the system is used, a query is input to the workstation 195 and processed by the local search engine 120 using the index 130. The results from the search engine are formatted by the local formatter 110 and output by the workstation 195.
- a second configuration is 185, a workstation with documents and indexes connected to a network 105.
- This configuration is similar to the stand-alone workstation 195, except that 185 is always connected to the network 105 and the local formatter 110 is optional.
- the local index 130 may be derived from local documents 140 or remote documents accessed via the network 105, and created by either a local search engine 120 or a remote search engine accessed via the network 105.
- queries When queries are input at the workstation 185, they may be processed locally at 185 using the local search engine 120, local index 130, and local formatter 110.
- the local search engine 120 may access a remote index 130 (e.g. on system 175) via the network 105.
- the workstation 185 may access a remote search engine 120 via the network 105, and the results may be formatted by either the local formatter 110 or a remote formatter accessed via the network 105.
- Computer 175 is similar to computer 185 with the exception that there are no local documents 140.
- the local index 130 is derived from documents 140 accessed via the network 105. Otherwise, as in computer 185, the index 130, search engine 120, and formatter 110 may be accessed locally or remotely via the network 105 when processing queries.
- Another possible configuration is computer 180, a workstation with documents only.
- the documents 140 stored locally at computer 180 may be accessed by remote search engines 120 via the network 105.
- the search engine 120, index 130, and formatter 110 When queries are entered at computer 180, the search engine 120, index 130, and formatter 110 must all be accessed remotely via the network 105.
- Another possible configuration is computer 190, a client station with no local documents 140, index 130, or search engine 120.
- the search engine 120, and index 130 must all be accessed remotely via the network 105.
- the formatter 110 may be accessed locally or remotely via the network 105.
- Another possible configuration is computer 170, a typical web server. Queries are entered at another workstation (e.g., 175, 180, 185, or possibly 195) or a client station (e.g., 190) and sent for processing to the web server 170 via the network 105.
- the web server 170 uses a remote search engine 120 and index 130 (accessed via the network 105) to process the query.
- the results are optionally formatted (using a local or a remote formatter 110) and returned to the workstation or client station from which the query was originally sent.
- FIG. 2 is a block diagram of an index 130, which comprises an inverted file 200 (FIG. 2A) and a document catalog 250 (FIG. 2B) having intrinsic and optionally non intrinsic attributes of each document used in a non limiting preferred embodiment.
- An inverted file 200 (FIG. 2A) contains an inverted list 210 for every unique term 207 in the documents (see 140, FIG. 1) indexed.
- An inverted list 210 contains an inverted list entry 212 for every document in which the corresponding term appears.
- An inverted list entry 212 contains, at a minimum, a document identifier 215 that identifies the corresponding document.
- An inverted list entry 212 may also contain other information, such as a term weight and the location of each occurrence of the term in the document.
- the terms 207 in an inverted file 200 are typically organized in a dictionary 205, which allows the inverted list 212 for a particular term 207 to be accessed.
- the document catalog 250 (FIG. 2B) contains an entry 290 for every document (see 140, FIG. 1) indexed. The entry for a particular document is accessed by looking up the document identifier 215 in the catalog.
- a document catalog entry stores the attributes 260 of the corresponding document. The attributes 260 are classified as intrinsic (275) or non-intrinsic (265).
- Intrinsic attributes 275 are properties of the document that are established at the time the document is created and that are invariant with a location and replication of the document. Intrinsic attributes 275 include properties such as title 280 and size 285.
- One or more of the intrinsic attributes can be a score that is a function of one or more other intrinsic attributes.
- Some of these other intrinsic attribute can be intrinsic attributes based on content of the document.
- these other intrinsic attributes can include attributes like the following: document length, title, concepts, author, date of publication, and abstract.
- the function can include any one of the following: probabilistic measures, cosine similarity measures, or other measures known in the art.
- the other intrinsic attributes are those intrinsic attributes on the hit-list.
- One or more of these intrinsic attributes can be a score that is a function of one or more other intrinsic attributes and one or more query elements of a query that is used to generate the hit-list.
- Examples of these functions include probabilistic measures and/or cosine similarity measures that incorporate one or more intrinsic attributes and one or more query elements to produce a numeric or logical value.
- the function may also operate on one or more properties that are not intrinsic attributes of the document but that are the same for every document of the hit-list because the properties are properties of the entire collection of documents and are determined at a time of query.
- Examples of these attributes include query term frequency distribution, size of the collect of documents 141, number of terms 205 used, and other attributes that may be used in the index 130.
- Non-intrinsic attributes 265 are properties of the document that vary with respect to one or more document instance.
- Non-intrinsic attributes 265 include properties such as location 220.
- An example of a location 220 is a World Wide Web (WWW) Uniform Resource Locator (URL) (e.g., "http://www.farmers.com/brown/news/624.html”).
- a URL consists of an access method 221 (e.g., "http://”), a server 222 (e.g., "www.farmers.com”), a path 223 (e.g., "/brown/news/”), and a filename component 224 (e.g., "624.html”).
- the filename component is the last component in a networking environment.
- the inverted file 200 and document catalog 250 together comprise the index 130.
- the index 130 is created at indexing time by the search engine (see 120 in FIG. 1).
- the search engine 120 uses the index to process a query (see FIG. 3A) and produce a hit-list (see FIG. 3B).
- the search engine accesses the inverted file 200 and decides which documents to place in the hit-list.
- the document's identifier 215 is obtained from the inverted file 200 and used to locate the document's entry 290 in the document catalog 250. Certain attributes are obtained from the entry 290 and added to the hit-list (see FIG. 3B).
- FIG. 3 is a block diagram of a typical query (FIG. 3A) and a typical hit-list (FIG. 3B) resulting from processing the query.
- a query 300 is an expression of an information need and consists of query elements 310.
- the query elements are "effects", “of”, “acid”, “rain”, “on”, “cucumber”, and "farming."
- a query 300 is processed by a search engine (see 120, FIG. 1) using one of a number of possible information retrieval algorithms known in the prior art.
- a hit-list 350 The result of processing a query 300 is a hit-list 350.
- One hit-list 350 that might result from processing the query in FIG. 3A is shown in FIG. 3B.
- a hit-list 350 consists of hit-list entries 355, one for each document 140 that is identified by the information retrieval algorithm as relevant to the query.
- a hit-list entry 355 contains one or more hit list attributes 360, some of which are obtained from the document catalog entry 290 for the corresponding document.
- the hit list attributes 360 are classified as intrinsic 370 or non-intrinsic 380. (See FIG. 2 for further details on intrinsic and non-intrinsic attributes. Note, however, that the sets of hit list attributes 360, 370, and 380 are distinct from the sets of attributes 260, 265, and 275.)
- Non-intrinsic attributes 380 include items such as location 220 (see FIG. 2B). Location is obtained directly from the document catalog entry 290.
- Intrinsic attributes 370 include items such as relevance score 375, title 280, and size 285. Title 280 and size 285 are obtained directly from the document catalog entry 290.
- the relevance score 375 for a particular document is calculated by the information retrieval algorithm as a function of the query, the contents of the document, and the contents of the indexed document collection that contains the document.
- the query and document collection are constant for all entries in the hit-list, so within a given hit-list, differences in relevance score result solely from differences in document content. Since document content is intrinsic to the document, the relevance score on a hit-list is intrinsic to the document.
- the hit-list 350 contains a novel entry 365, called a hit list attribute selector, which is used by the formatter 130 as described below in FIGS. 4 and 5.
- Each hit-list entry (except 365) also contains an additional novel field 390, a duplicate identifier field 390, which is used by the formatter 110 for marking duplicates as described below in FIGS. 4 and 5.
- the hit list attribute selector 365 typically is a record of selector flags, e.g. 366. Each selector flag 366 designates whether or not a particular hit list attribute 360 is selected by the processes described below (FIGS. 4 and 5).
- each hit list entry 355. There is typically one duplicate identifier field 390, for each hit list entry 355.
- the entry number 377 of each duplicate entry 355 is cross referenced in the duplicate identifier field 390 of the other duplicate.
- FIG. 4 is a flowchart showing the method steps of the one preferred embodiment of the present invention.
- the formatter 110 takes hit-list 350, as depicted in FIG. 7, and can produce either a hit-list with duplicates deleted (FIG. 8) or coalesced (FIG. 9). See below.
- the process begins in step 405 with the selection of intrinsic attributes 370 and optionally non-intrinsic attributes such as location 220 for later comparison.
- This selection can be done at any of a number of times: it can be hard wired into the program which implements process 400, it can be supplied as a run-time parameter when the program is invoked, it can be done by the program based on user profiles or it can be selected by the user at the time he/she initiates the process by making a query.
- the selection causes fields to be set to 1 or 0 in the attribute-active flags structure 365.
- step 410 a list of all possible unordered permutations of distinct pairs of hit-list elements 355 is generated. Each pair will be processed in turn in subsequent steps.
- step 415 it is determined if there is another pair of elements, denoted 355a and 355b, for comparison. If no, branch 416 is taken; if yes, branch 417 is taken.
- step 420 a list of intrinsic attributes 370a for which the attribute-active flag 365 is set to 1 is generated. Each attribute will be processed in turn in subsequent steps.
- step 425 it is determined if there is another attribute 370a for processing. If so, branch 427 is taken; otherwise it has been established that all intrinsic attributes selected in 405 are equal in the two hit-list elements 355a and 355b, and branch 426 is taken.
- step 430 it is determined if the values of attribute 370a in the two elements 355a and 355b are equal. If they are not, branch 431 is taken, and it is noted in step 455 that the two elements 355a and 355b cannot be duplicates. Step 455 will normally be the null operation. If in step 430 the elements 355a and 355b are equal, branch 432 is taken.
- step 405 If any non-intrinsic attributes have been selected in step 405, then sub-process 435 is executed; otherwise branch 426 leads directly to step 460.
- the first step in subprocess 435 is step 440, in which a list of non-intrinsic attributes 370a for which the attribute-active flag 365 is set to 1 is generated. Each attribute will be processed in turn in subsequent steps.
- step 445 it is determined if there is another attribute 370a for processing. If so, branch 447 is taken; otherwise it has been established that all non-intrinsic attributes selected in 405 are equal in the two hit-list elements 355a and 355b, and branch 446 is taken.
- step 450 it is determined if the comparison test appropriate to the attribute selected is passed. If the attribute is location, then the comparison test is as follows.
- the location attribute has a filename component 224 which is the portion of the location string 220 to the right of the right-most ⁇ / ⁇ (forward-slash), in usual URL notation.
- the filename components of the two hit-list elements under consideration will be denoted 224a and 224b.
- test 450 is passed. If the test 450 is failed, then branch 451 is taken, since the elements 355a and 355b cannot be considered duplicates. If the test 450 is passed, then branch 452 is taken.
- step 460 elements 355a and 355b are tagged as being duplicates of each other in field 390 of hit-list 350.
- step 465 the information in the hit list 350 is displayed on a user interface to the user. For example, see displays in FIGS. 7-10.
- the hit list entries 355 are identified as duplicates in the duplicate identifier field 390, these displays can be created by well known techniques. For example, the resulting display will either be as in FIG. 8, with all but one of the hit-list elements tagged as duplicates deleted.
- the duplicates are coalesced, i.e., all common attributes of the duplicates are displayed once and the differing attributes of each duplicate (like the location) are also displayed with the common attributes.
- An optional variation has all but one duplicate initially suppressed from view, but the user is given a button to press next to each hit-list item that has duplicates. Pressing this button causes the duplicates, identified in the duplicate identifier field 390, to be displayed, preferably in the coalesced style. This is depicted in FIG. 10.
- FIG. 5 is a flowchart showing the method steps of an alternative preferred process executed by the present invention.
- the process 500 is identical to process 400, except for the following steps.
- the ranking score and the document title are selected intrinsic attributes, marked so in the attribute-active flags structure 365.
- the document location is a selected non-intrinsic attribute marked in structure 365.
- the selection (or not) of other attributes is optional.
- the hit-list 350 is sorted with respect to all attributes selected in step 505, e.g., the attributes are used as sort keys.
- the primary sort is rank
- secondary is document title
- Next sort key is the filename component of document location, followed finally by any and all other selected non-intrinsic attributes.
- the sorted hit-list will be denoted 350a.
- step 515 a list of all consecutive pairs of hit-list elements 355 in the sorted hit-list 350a is generated. Each pair will be processed in turn in subsequent steps.
- FIG. 6 depicts an optional equivalence structure 600 used for comparison in step 450.
- This structure lists attributes that are considered equivalent, even though they may not have the same character string.
- this equivalence structure 600 is used to identify values for the filename attribute 224 which are defined as being equivalent. Therefore, the entries 610 in the equivalence structure 600 contain the filename-strings 610 indicating the location of documents 140 that are defined as equivalent. This is useful because not only are documents with identical filename strings 224 equivalent, but often documents 140 with different filename strings 224 are also known to be equivalent.
- These equivalent filename strings 224 are listed as equivalent in the equivalence structure 600.
- These names are those which typical Web-servers 170 conventionally assume are implied (e.g. index, home, and welcome) when URLs are issued with null filename components 224. The actual values used will depend on the conventions in force at the time of implementation. The most common such names are those shown in FIG. 6.
- FIG. 7 shows a display of a typical hit-list before the present invention.
- This hit-list exhibits two duplicates of the first article "Heavy Rains Flood Farms in Mid-West", and one duplicate of the next article "Cucumber Farming Handbook".
- the display is generated by step 465 of the algorithms described in FIGS. 4 and 5.
- the title attribute 280, score attribute 375, size attribute 285, and location attribute 220 from the hit-list data structure 350 are formatted and displayed on the user interface using well known techniques.
- FIG. 8 shows the displayed result of applying the present invention to the hit-list shown in FIG. 7, with the decision made to delete duplicates. This decision is made in step 465 of the algorithms described in FIGS. 4 and 5.
- the hit-list entry 355 in the hit-list data structure 350 is formatted for display, if the duplicate identifier field 390 for the current hit-list entry indicates that this entry is a duplicate of the previously displayed hit-list entry, then the current hit-list entry is not displayed. Otherwise, the hit-list entry is formatted and displayed as in FIG. 7.
- FIG. 9 shows the result of applying the present invention to the hit-list shown in FIG. 7, with the decision made to coalesce duplicates. This decision is made in step 465 of the algorithms described in FIGS. 4 and 5.
- the hit-list entry 355 in the hit-list data structure 350 is formatted for display, if the duplicate identifier field 390 for the current hit-list entry indicates that this entry is a duplicate of the previously displayed hit-list entry, then only the location attribute 220 for the current hit-list entry is displayed. Otherwise, the hit-list entry is formatted and displayed as in FIG. 7.
- FIG. 10 shows the result of applying the present invention to the hit-list shown in FIG. 7, with the decision made to suppress duplicates from view, but to supply a button which if clicked will allow the duplicates to be shown in coalesced mode.
- This Figure shows the state of the display after the button has been clicked for the first article "Heavy Rains Flood Farms in Mid-West”.
- This formatting takes place in step 465 of the algorithms described in FIGS. 4 and 5.
- the initial formatting and display is done as for FIG. 8, except that a button is additionally displayed for hit-list entries that have duplicates. When this button is pressed, the display format for the current hit-list entry is changed to the display format shown in FIG. 9.
Abstract
Description
Claims (35)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US08/677,059 US5913208A (en) | 1996-07-09 | 1996-07-09 | Identifying duplicate documents from search results without comparing document content |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US08/677,059 US5913208A (en) | 1996-07-09 | 1996-07-09 | Identifying duplicate documents from search results without comparing document content |
Publications (1)
Publication Number | Publication Date |
---|---|
US5913208A true US5913208A (en) | 1999-06-15 |
Family
ID=24717145
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US08/677,059 Expired - Lifetime US5913208A (en) | 1996-07-09 | 1996-07-09 | Identifying duplicate documents from search results without comparing document content |
Country Status (1)
Country | Link |
---|---|
US (1) | US5913208A (en) |
Cited By (94)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6055530A (en) * | 1997-03-03 | 2000-04-25 | Kabushiki Kaisha Toshiba | Document information management system, method and memory |
US6169997B1 (en) * | 1998-04-29 | 2001-01-02 | Ncr Corporation | Method and apparatus for forming subject (context) map and presenting Internet data according to the subject map |
US6182067B1 (en) * | 1997-06-02 | 2001-01-30 | Knowledge Horizons Pty Ltd. | Methods and systems for knowledge management |
US6185614B1 (en) * | 1998-05-26 | 2001-02-06 | International Business Machines Corp. | Method and system for collecting user profile information over the world-wide web in the presence of dynamic content using document comparators |
WO2001031508A1 (en) * | 1999-10-27 | 2001-05-03 | Cochran Nancy P | Search system having user-interface for searching online information |
US6304872B1 (en) * | 1998-08-13 | 2001-10-16 | Tornado Technology Co. Ltd. | Search system for providing fulltext search over web pages of world wide web servers |
WO2001095140A2 (en) * | 2000-06-07 | 2001-12-13 | Hewlett-Packard Company | A system and related methods for dynamically selecting publication content |
GB2365569A (en) * | 2000-01-28 | 2002-02-20 | Ibm | Similarity text search based on conceptual indexing |
WO2002021325A1 (en) * | 2000-09-04 | 2002-03-14 | Web Wombat Pty Ltd | Method and system for searching stored information on one or more computers |
WO2002041161A1 (en) * | 2000-11-15 | 2002-05-23 | Justsystem Corporation | Method and apparatus for efficient identification of duplicate and near-duplicate documents and text spans using high-discriminability text fragments |
US6401118B1 (en) * | 1998-06-30 | 2002-06-04 | Online Monitoring Services | Method and computer program product for an online monitoring search engine |
US6487553B1 (en) * | 2000-01-05 | 2002-11-26 | International Business Machines Corporation | Method for reducing search results by manually or automatically excluding previously presented search results |
US20030004985A1 (en) * | 2001-06-29 | 2003-01-02 | Hitachi, Ltd. | Method and apparatus for classifying document information |
US20030018617A1 (en) * | 2001-07-18 | 2003-01-23 | Holger Schwedes | Information retrieval using enhanced document vectors |
US6526440B1 (en) * | 2001-01-30 | 2003-02-25 | Google, Inc. | Ranking search results by reranking the results based on local inter-connectivity |
US6547829B1 (en) * | 1999-06-30 | 2003-04-15 | Microsoft Corporation | Method and system for detecting duplicate documents in web crawls |
US6564210B1 (en) * | 2000-03-27 | 2003-05-13 | Virtual Self Ltd. | System and method for searching databases employing user profiles |
US6584468B1 (en) | 2000-09-29 | 2003-06-24 | Ninesigma, Inc. | Method and apparatus to retrieve information from a network |
US20030167299A1 (en) * | 2001-03-20 | 2003-09-04 | Jurgen Heymann | Automatically selecting application services for communicating data |
US20030172066A1 (en) * | 2002-01-22 | 2003-09-11 | International Business Machines Corporation | System and method for detecting duplicate and similar documents |
US6625594B1 (en) | 2000-01-18 | 2003-09-23 | With1Click, Inc. | System and method for searching a global communication system using a sub-root domain name agent |
US20030220913A1 (en) * | 2002-05-24 | 2003-11-27 | International Business Machines Corporation | Techniques for personalized and adaptive search services |
US20040002946A1 (en) * | 2002-06-28 | 2004-01-01 | Fujitsu Limited | Program, method and system for searching content, and operator questioning processing system |
US20040010493A1 (en) * | 1997-11-19 | 2004-01-15 | Ns Solutions Corporation | Database system and a method of data retrieval from the system |
US6704722B2 (en) * | 1999-11-17 | 2004-03-09 | Xerox Corporation | Systems and methods for performing crawl searches and index searches |
US6782380B1 (en) * | 2000-04-14 | 2004-08-24 | David Victor Thede | Method and system for indexing and searching contents of extensible mark-up language (XML) documents |
WO2005022402A1 (en) * | 2003-08-29 | 2005-03-10 | Vortaloptics, Inc. | Method, device and software for querying and presenting search results |
US6876997B1 (en) * | 2000-05-22 | 2005-04-05 | Overture Services, Inc. | Method and apparatus for indentifying related searches in a database search system |
US20050091275A1 (en) * | 2003-10-24 | 2005-04-28 | Burges Christopher J.C. | Audio duplicate detector |
KR100503148B1 (en) * | 2002-04-17 | 2005-07-25 | 정보통신연구진흥원 | System for processing web documents based style and content information and method thereof |
US6952730B1 (en) * | 2000-06-30 | 2005-10-04 | Hewlett-Packard Development Company, L.P. | System and method for efficient filtering of data set addresses in a web crawler |
US20050268165A1 (en) * | 2004-05-21 | 2005-12-01 | Christopher Betts | Method and system for automated testing of web services |
US20050267890A1 (en) * | 2004-05-17 | 2005-12-01 | Atsushi Itoh | Data control system capable of present current image of writer with data |
US6973457B1 (en) | 2002-05-10 | 2005-12-06 | Oracle International Corporation | Method and system for scrollable cursors |
US20060041597A1 (en) * | 2004-08-23 | 2006-02-23 | West Services, Inc. | Information retrieval systems with duplicate document detection and presentation functions |
US20060143096A1 (en) * | 1999-05-28 | 2006-06-29 | Overture Services, Inc. | System and method for influencing a position on a search result list generated by a computer network search engine |
US20060155739A1 (en) * | 2005-01-12 | 2006-07-13 | International Business Machines Corporation | A Generic Architecture for Indexing Document Groups in an Inverted Text Index |
US7089331B1 (en) * | 1998-05-29 | 2006-08-08 | Oracle International Corporation | Method and mechanism for reducing client-side memory footprint of transmitted data |
US7103590B1 (en) | 2001-08-24 | 2006-09-05 | Oracle International Corporation | Method and system for pipelined database table functions |
US20060200461A1 (en) * | 2005-03-01 | 2006-09-07 | Lucas Marshall D | Process for identifying weighted contextural relationships between unrelated documents |
US7127670B2 (en) | 1999-08-23 | 2006-10-24 | Mary M. Bendik | Document management systems and methods |
US20060248066A1 (en) * | 2005-04-28 | 2006-11-02 | Microsoft Corporation | System and method for optimizing search results through equivalent results collapsing |
US7137065B1 (en) * | 2000-02-24 | 2006-11-14 | International Business Machines Corporation | System and method for classifying electronically posted documents |
US20070016545A1 (en) * | 2005-07-14 | 2007-01-18 | International Business Machines Corporation | Detection of missing content in a searchable repository |
US20070038665A1 (en) * | 2005-08-12 | 2007-02-15 | Nhn Corporation | Local computer search system and method of using the same |
US20070050346A1 (en) * | 2001-07-31 | 2007-03-01 | Aol Llc | Enabling a Search for Both Local and Remote Electronic Content |
US20070112884A1 (en) * | 2005-11-04 | 2007-05-17 | Sun Microsystems, Inc. | Automatic intent log testing |
US20070266306A1 (en) * | 2000-06-29 | 2007-11-15 | Egocentricity Ltd. | Site finding |
US20080027926A1 (en) * | 2006-07-31 | 2008-01-31 | Qian Diao | Document summarization method and apparatus |
US20080059420A1 (en) * | 2006-08-22 | 2008-03-06 | International Business Machines Corporation | System and Method for Providing a Trustworthy Inverted Index to Enable Searching of Records |
US7363329B1 (en) | 2007-11-13 | 2008-04-22 | International Business Machines Corporation | Method for duplicate detection on web-scale data in supercomputing environments |
US20080114730A1 (en) * | 2006-11-14 | 2008-05-15 | Microsoft Corporation | Batching document identifiers for result trimming |
US7389284B1 (en) | 2000-02-29 | 2008-06-17 | Oracle International Corporation | Method and mechanism for efficient processing of remote-mapped queries |
US7440964B2 (en) | 2003-08-29 | 2008-10-21 | Vortaloptics, Inc. | Method, device and software for querying and presenting search results |
US20080288509A1 (en) * | 2007-05-16 | 2008-11-20 | Google Inc. | Duplicate content search |
US20090063448A1 (en) * | 2007-08-29 | 2009-03-05 | Microsoft Corporation | Aggregated Search Results for Local and Remote Services |
US20090193001A1 (en) * | 2000-03-24 | 2009-07-30 | Numoda Technologies, Inc. | Visualization of data relationships between components of a project |
US7610351B1 (en) | 2002-05-10 | 2009-10-27 | Oracle International Corporation | Method and mechanism for pipelined prefetching |
US7653870B1 (en) * | 1998-12-08 | 2010-01-26 | Idearc Media Corp. | System and method of dynamically generating index information |
US7661062B1 (en) * | 1999-09-20 | 2010-02-09 | Business Objects Americas | System and method of analyzing an HTML document for changes such that the changed areas can be displayed with the original formatting intact |
US20100131484A1 (en) * | 2003-08-29 | 2010-05-27 | Gosse David B | Method, device and software for querying and presenting search results |
US7734627B1 (en) * | 2003-06-17 | 2010-06-08 | Google Inc. | Document similarity detection |
US20100169325A1 (en) * | 2008-12-31 | 2010-07-01 | International Business Machines Corporation | Search results display for weighted multi-term searches |
US20110128391A1 (en) * | 2006-10-20 | 2011-06-02 | Canon Kabushiki Kaisha | Data reproducing apparatus, content management method, program, and storage medium |
US8027976B1 (en) * | 2005-08-23 | 2011-09-27 | Oracle International Corporation | Enterprise content search through searchable links |
US8099407B2 (en) | 2004-03-31 | 2012-01-17 | Google Inc. | Methods and systems for processing media files |
US8161053B1 (en) * | 2004-03-31 | 2012-04-17 | Google Inc. | Methods and systems for eliminating duplicate events |
US20120150929A1 (en) * | 2010-12-08 | 2012-06-14 | Samsung Electronics Co., Ltd. | Apparatus and method for managing a plurality of albums |
US8275839B2 (en) | 2004-03-31 | 2012-09-25 | Google Inc. | Methods and systems for processing email messages |
US8346777B1 (en) | 2004-03-31 | 2013-01-01 | Google Inc. | Systems and methods for selectively storing event data |
US8386728B1 (en) | 2004-03-31 | 2013-02-26 | Google Inc. | Methods and systems for prioritizing a crawl |
US20130086083A1 (en) * | 2011-09-30 | 2013-04-04 | Microsoft Corporation | Transferring ranking signals from equivalent pages |
US8463770B1 (en) * | 2008-07-09 | 2013-06-11 | Amazon Technologies, Inc. | System and method for conditioning search results |
US20130159275A1 (en) * | 2011-12-14 | 2013-06-20 | Hon Hai Precision Industry Co., Ltd. | Information searching system and method |
EP2619689A2 (en) * | 2010-10-27 | 2013-07-31 | Apple Inc. | Methods for indexing and searching based on language locale |
US20130304577A1 (en) * | 2012-05-09 | 2013-11-14 | Google Inc. | Advertising systems and methods |
US8631076B1 (en) | 2004-03-31 | 2014-01-14 | Google Inc. | Methods and systems for associating instant messenger events |
US20140078544A1 (en) * | 2012-09-14 | 2014-03-20 | Tetsuro Motoyama | Repository-Based Print Services |
US8768932B1 (en) * | 2007-05-14 | 2014-07-01 | Google Inc. | Method and apparatus for ranking search results |
US8812515B1 (en) | 2004-03-31 | 2014-08-19 | Google Inc. | Processing contact information |
US20140324807A1 (en) * | 2000-02-02 | 2014-10-30 | Ebay Inc. | Automatic update of searches |
CN104133888A (en) * | 2014-07-30 | 2014-11-05 | 宇龙计算机通信科技(深圳)有限公司 | Multi-system data processing method, device and terminal |
US8954420B1 (en) | 2003-12-31 | 2015-02-10 | Google Inc. | Methods and systems for improving a search ranking using article information |
US20150161267A1 (en) * | 2012-09-12 | 2015-06-11 | Google Inc. | Deduplication in Search Results |
US20150254342A1 (en) * | 2011-05-30 | 2015-09-10 | Lei Yu | Video dna (vdna) method and system for multi-dimensional content matching |
US20150262221A1 (en) * | 2012-05-16 | 2015-09-17 | Google Inc. | Linking offline actions with online activities |
US20150370880A1 (en) * | 2014-06-20 | 2015-12-24 | International Business Machines Corporation | Identifying items on a second website already browsed at a first website |
US9262446B1 (en) | 2005-12-29 | 2016-02-16 | Google Inc. | Dynamically ranking entries in a personal data book |
US9361388B1 (en) * | 2015-07-07 | 2016-06-07 | Yext, Inc. | Suppressing duplicate listings on multiple search engine web sites from a single source system given that a publisher selects a different listing as a synchronized listing |
CN108205578A (en) * | 2016-12-20 | 2018-06-26 | 北大方正集团有限公司 | Index generation method and device |
US10579442B2 (en) | 2012-12-14 | 2020-03-03 | Microsoft Technology Licensing, Llc | Inversion-of-control component service models for virtual environments |
US10762156B2 (en) | 2015-07-07 | 2020-09-01 | Yext, Inc. | Suppressing duplicate listings on multiple search engine web sites from a single source system triggered by a user |
US11151103B1 (en) * | 2013-04-26 | 2021-10-19 | Veritas Technologies Llc | Method for providing an indication of the exact search hit within a large universe of contextual information |
US11392631B2 (en) * | 2014-07-29 | 2022-07-19 | Groupon, Inc. | System and method for programmatic generation of attribute descriptors |
Citations (14)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4811217A (en) * | 1985-03-29 | 1989-03-07 | Japan Association For International Chemical Information | Method of storing and searching chemical structure data |
US5371852A (en) * | 1992-10-14 | 1994-12-06 | International Business Machines Corporation | Method and apparatus for making a cluster of computers appear as a single host on a network |
US5483650A (en) * | 1991-11-12 | 1996-01-09 | Xerox Corporation | Method of constant interaction-time clustering applied to document browsing |
US5524240A (en) * | 1994-05-24 | 1996-06-04 | Panasonic Technologies, Inc. | Method and apparatus for storage and retrieval of handwritten information |
EP0722145A1 (en) * | 1995-01-12 | 1996-07-17 | International Business Machines Corporation | Information retrieval system and method of operation |
US5550976A (en) * | 1992-12-08 | 1996-08-27 | Sun Hydraulics Corporation | Decentralized distributed asynchronous object oriented system and method for electronic data management, storage, and communication |
EP0747839A1 (en) * | 1995-06-07 | 1996-12-11 | Tandem Computers Incorporated | Database management system with improved indexed accessing |
US5608904A (en) * | 1995-02-13 | 1997-03-04 | Hewlett-Packard Company | Method and apparatus for processing and optimizing queries having joins between structured data and text data |
US5619692A (en) * | 1995-02-17 | 1997-04-08 | International Business Machines Corporation | Semantic optimization of query order requirements using order detection by normalization in a query compiler system |
US5634051A (en) * | 1993-10-28 | 1997-05-27 | Teltech Resource Network Corporation | Information management system |
US5659729A (en) * | 1996-02-01 | 1997-08-19 | Sun Microsystems, Inc. | Method and system for implementing hypertext scroll attributes |
EP0813158A2 (en) * | 1996-06-14 | 1997-12-17 | Excite, Inc. | System and method for accelerated query evaluation of very large full-text databases |
US5701469A (en) * | 1995-06-07 | 1997-12-23 | Microsoft Corporation | Method and system for generating accurate search results using a content-index |
US5704060A (en) * | 1995-05-22 | 1997-12-30 | Del Monte; Michael G. | Text storage and retrieval system and method |
-
1996
- 1996-07-09 US US08/677,059 patent/US5913208A/en not_active Expired - Lifetime
Patent Citations (14)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4811217A (en) * | 1985-03-29 | 1989-03-07 | Japan Association For International Chemical Information | Method of storing and searching chemical structure data |
US5483650A (en) * | 1991-11-12 | 1996-01-09 | Xerox Corporation | Method of constant interaction-time clustering applied to document browsing |
US5371852A (en) * | 1992-10-14 | 1994-12-06 | International Business Machines Corporation | Method and apparatus for making a cluster of computers appear as a single host on a network |
US5550976A (en) * | 1992-12-08 | 1996-08-27 | Sun Hydraulics Corporation | Decentralized distributed asynchronous object oriented system and method for electronic data management, storage, and communication |
US5634051A (en) * | 1993-10-28 | 1997-05-27 | Teltech Resource Network Corporation | Information management system |
US5524240A (en) * | 1994-05-24 | 1996-06-04 | Panasonic Technologies, Inc. | Method and apparatus for storage and retrieval of handwritten information |
EP0722145A1 (en) * | 1995-01-12 | 1996-07-17 | International Business Machines Corporation | Information retrieval system and method of operation |
US5608904A (en) * | 1995-02-13 | 1997-03-04 | Hewlett-Packard Company | Method and apparatus for processing and optimizing queries having joins between structured data and text data |
US5619692A (en) * | 1995-02-17 | 1997-04-08 | International Business Machines Corporation | Semantic optimization of query order requirements using order detection by normalization in a query compiler system |
US5704060A (en) * | 1995-05-22 | 1997-12-30 | Del Monte; Michael G. | Text storage and retrieval system and method |
EP0747839A1 (en) * | 1995-06-07 | 1996-12-11 | Tandem Computers Incorporated | Database management system with improved indexed accessing |
US5701469A (en) * | 1995-06-07 | 1997-12-23 | Microsoft Corporation | Method and system for generating accurate search results using a content-index |
US5659729A (en) * | 1996-02-01 | 1997-08-19 | Sun Microsystems, Inc. | Method and system for implementing hypertext scroll attributes |
EP0813158A2 (en) * | 1996-06-14 | 1997-12-17 | Excite, Inc. | System and method for accelerated query evaluation of very large full-text databases |
Non-Patent Citations (12)
Title |
---|
"Introduction to Data Structures and Algorithms Related to Information Retrieval", R.A. Baeza-Yates, Universidad de Chili, Casilla 2777, Santiago, Chile, pp. 13-27 (Chapter 2 of Information Retrieval Data Structures and Algorithms, Prentice Hall, Englewood Cliffs, NJ 07632). |
"Introduction to Information Storage and Retrieval Systems", W.B. Frakes, Software Engineering Guild, Stering, VA, 22170, pp. 1-12 (Chapter 1 of Information Retrieval Data Structures and Algorithms, Prentice Hall, Englewood Cliffs, NJ 07632). |
Abdelguerfi et al. "Computational Complexity of Sorting and Joining Relations with Duplicates" IEEE Transactions on Knowledge and Data Engineering, vol. 3, No. 4, Dec. 1991, pp. 496-503. |
Abdelguerfi et al. Computational Complexity of Sorting and Joining Relations with Duplicates IEEE Transactions on Knowledge and Data Engineering, vol. 3, No. 4, Dec. 1991, pp. 496 503. * |
Doermann et al., "The Detection of Duplicates in Document Image Databases" IEEE Databases, 1997, pp. 314-318. |
Doermann et al., The Detection of Duplicates in Document Image Databases IEEE Databases, 1997, pp. 314 318. * |
Ed Bott "Using Windows 95" pp. 26-28, 1995. |
Ed Bott Using Windows 95 pp. 26 28, 1995. * |
Introduction to Data Structures and Algorithms Related to Information Retrieval , R.A. Baeza Yates, Universidad de Chili, Casilla 2777, Santiago, Chile, pp. 13 27 (Chapter 2 of Information Retrieval Data Structures and Algorithms, Prentice Hall, Englewood Cliffs, NJ 07632). * |
Introduction to Information Storage and Retrieval Systems , W.B. Frakes, Software Engineering Guild, Stering, VA, 22170, pp. 1 12 (Chapter 1 of Information Retrieval Data Structures and Algorithms, Prentice Hall, Englewood Cliffs, NJ 07632). * |
Miller "Detecting Duplicates: A Searcher's Dream Come True" Online, Jul. 1990, pp. 27-34. |
Miller Detecting Duplicates: A Searcher s Dream Come True Online, Jul. 1990, pp. 27 34. * |
Cited By (174)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6055530A (en) * | 1997-03-03 | 2000-04-25 | Kabushiki Kaisha Toshiba | Document information management system, method and memory |
US6182067B1 (en) * | 1997-06-02 | 2001-01-30 | Knowledge Horizons Pty Ltd. | Methods and systems for knowledge management |
US20040010493A1 (en) * | 1997-11-19 | 2004-01-15 | Ns Solutions Corporation | Database system and a method of data retrieval from the system |
US7933920B2 (en) * | 1997-11-19 | 2011-04-26 | Ns Solutions Corporation | Database system and a method of data retrieval from the system |
US6169997B1 (en) * | 1998-04-29 | 2001-01-02 | Ncr Corporation | Method and apparatus for forming subject (context) map and presenting Internet data according to the subject map |
US6185614B1 (en) * | 1998-05-26 | 2001-02-06 | International Business Machines Corp. | Method and system for collecting user profile information over the world-wide web in the presence of dynamic content using document comparators |
US7089331B1 (en) * | 1998-05-29 | 2006-08-08 | Oracle International Corporation | Method and mechanism for reducing client-side memory footprint of transmitted data |
US9244938B2 (en) | 1998-05-29 | 2016-01-26 | Oracle International Corporation | Method and mechanism for reducing client-side memory footprint of transmitted data |
US20060195615A1 (en) * | 1998-05-29 | 2006-08-31 | Oracle International Corporation | Method and mechanism for reducing client-side memory footprint of transmitted data |
US8825805B2 (en) | 1998-05-29 | 2014-09-02 | Oracle International Corporation | Method and mechanism for reducing client-side memory footprint of transmitted data |
US6401118B1 (en) * | 1998-06-30 | 2002-06-04 | Online Monitoring Services | Method and computer program product for an online monitoring search engine |
US6304872B1 (en) * | 1998-08-13 | 2001-10-16 | Tornado Technology Co. Ltd. | Search system for providing fulltext search over web pages of world wide web servers |
US7653870B1 (en) * | 1998-12-08 | 2010-01-26 | Idearc Media Corp. | System and method of dynamically generating index information |
US20110022623A1 (en) * | 1999-05-28 | 2011-01-27 | Yahoo! Inc. | System and method for influencing a position on a search result list generated by a computer network search engine |
US20060143096A1 (en) * | 1999-05-28 | 2006-06-29 | Overture Services, Inc. | System and method for influencing a position on a search result list generated by a computer network search engine |
US7363300B2 (en) | 1999-05-28 | 2008-04-22 | Overture Services, Inc. | System and method for influencing a position on a search result list generated by a computer network search engine |
US7092901B2 (en) | 1999-05-28 | 2006-08-15 | Overture Services, Inc. | System and method for influencing a position on a search result list generated by a computer network search engine |
US7783540B2 (en) | 1999-05-28 | 2010-08-24 | Yahoo! Inc. | System and method for influencing a position on a search result list generated by a computer network search engine |
US8527533B2 (en) | 1999-05-28 | 2013-09-03 | Yahoo! Inc. | Keyword suggestion system for a computer network search engine |
US20060212447A1 (en) * | 1999-05-28 | 2006-09-21 | Overture Services, Inc. | System and method for influencing a position on a search result list generated by a computer network search engine |
US6547829B1 (en) * | 1999-06-30 | 2003-04-15 | Microsoft Corporation | Method and system for detecting duplicate documents in web crawls |
US7127670B2 (en) | 1999-08-23 | 2006-10-24 | Mary M. Bendik | Document management systems and methods |
US9576269B2 (en) | 1999-08-23 | 2017-02-21 | Resource Consortium Limited | Document management systems and methods |
US7810027B2 (en) | 1999-08-23 | 2010-10-05 | Bendik Mary M | Document management systems and methods |
US20110041054A1 (en) * | 1999-08-23 | 2011-02-17 | Bendik Mary M | Document management systems and methods |
US7661062B1 (en) * | 1999-09-20 | 2010-02-09 | Business Objects Americas | System and method of analyzing an HTML document for changes such that the changed areas can be displayed with the original formatting intact |
US6345273B1 (en) * | 1999-10-27 | 2002-02-05 | Nancy P. Cochran | Search system having user-interface for searching online information |
WO2001031508A1 (en) * | 1999-10-27 | 2001-05-03 | Cochran Nancy P | Search system having user-interface for searching online information |
US6704722B2 (en) * | 1999-11-17 | 2004-03-09 | Xerox Corporation | Systems and methods for performing crawl searches and index searches |
US6487553B1 (en) * | 2000-01-05 | 2002-11-26 | International Business Machines Corporation | Method for reducing search results by manually or automatically excluding previously presented search results |
US6625594B1 (en) | 2000-01-18 | 2003-09-23 | With1Click, Inc. | System and method for searching a global communication system using a sub-root domain name agent |
US6542889B1 (en) | 2000-01-28 | 2003-04-01 | International Business Machines Corporation | Methods and apparatus for similarity text search based on conceptual indexing |
GB2365569A (en) * | 2000-01-28 | 2002-02-20 | Ibm | Similarity text search based on conceptual indexing |
GB2365569B (en) * | 2000-01-28 | 2004-04-07 | Ibm | Methods and apparatus for similarity text search based on conceptual indexing |
US9449097B2 (en) | 2000-02-02 | 2016-09-20 | Ebay Inc. | System to conduct search updates at determined frequency |
US9367621B2 (en) * | 2000-02-02 | 2016-06-14 | Ebay Inc. | Automatic update of searches |
US20140324807A1 (en) * | 2000-02-02 | 2014-10-30 | Ebay Inc. | Automatic update of searches |
US8276065B2 (en) | 2000-02-24 | 2012-09-25 | International Business Machines Corporation | System and method for classifying electronically posted documents |
US7137065B1 (en) * | 2000-02-24 | 2006-11-14 | International Business Machines Corporation | System and method for classifying electronically posted documents |
US20070022374A1 (en) * | 2000-02-24 | 2007-01-25 | International Business Machines Corporation | System and method for classifying electronically posted documents |
US7389284B1 (en) | 2000-02-29 | 2008-06-17 | Oracle International Corporation | Method and mechanism for efficient processing of remote-mapped queries |
US20090193001A1 (en) * | 2000-03-24 | 2009-07-30 | Numoda Technologies, Inc. | Visualization of data relationships between components of a project |
US8543603B2 (en) * | 2000-03-24 | 2013-09-24 | Numoda Technologies, Inc. | Visualization of data relationships between components of a project |
US6564210B1 (en) * | 2000-03-27 | 2003-05-13 | Virtual Self Ltd. | System and method for searching databases employing user profiles |
US6782380B1 (en) * | 2000-04-14 | 2004-08-24 | David Victor Thede | Method and system for indexing and searching contents of extensible mark-up language (XML) documents |
US20080010313A1 (en) * | 2000-04-14 | 2008-01-10 | Thede David V | method and system for indexing and searching contents of extensible markup language (xml) documents |
US7289986B2 (en) | 2000-04-14 | 2007-10-30 | David Victor Thede | Method and system for indexing and searching contents of extensible markup language (XML) documents |
US20050004935A1 (en) * | 2000-04-14 | 2005-01-06 | Dtsearch Corp. | Method and system for indexing and searching contents of extensible markup language (XML) documents |
US6876997B1 (en) * | 2000-05-22 | 2005-04-05 | Overture Services, Inc. | Method and apparatus for indentifying related searches in a database search system |
WO2001095140A3 (en) * | 2000-06-07 | 2003-08-21 | Hewlett Packard Co | A system and related methods for dynamically selecting publication content |
WO2001095140A2 (en) * | 2000-06-07 | 2001-12-13 | Hewlett-Packard Company | A system and related methods for dynamically selecting publication content |
US20070266306A1 (en) * | 2000-06-29 | 2007-11-15 | Egocentricity Ltd. | Site finding |
US6952730B1 (en) * | 2000-06-30 | 2005-10-04 | Hewlett-Packard Development Company, L.P. | System and method for efficient filtering of data set addresses in a web crawler |
WO2002021325A1 (en) * | 2000-09-04 | 2002-03-14 | Web Wombat Pty Ltd | Method and system for searching stored information on one or more computers |
US6584468B1 (en) | 2000-09-29 | 2003-06-24 | Ninesigma, Inc. | Method and apparatus to retrieve information from a network |
US6978419B1 (en) | 2000-11-15 | 2005-12-20 | Justsystem Corporation | Method and apparatus for efficient identification of duplicate and near-duplicate documents and text spans using high-discriminability text fragments |
WO2002041161A1 (en) * | 2000-11-15 | 2002-05-23 | Justsystem Corporation | Method and apparatus for efficient identification of duplicate and near-duplicate documents and text spans using high-discriminability text fragments |
US6526440B1 (en) * | 2001-01-30 | 2003-02-25 | Google, Inc. | Ranking search results by reranking the results based on local inter-connectivity |
US6725259B1 (en) | 2001-01-30 | 2004-04-20 | Google Inc. | Ranking search results by reranking the results based on local inter-connectivity |
US20030167299A1 (en) * | 2001-03-20 | 2003-09-04 | Jurgen Heymann | Automatically selecting application services for communicating data |
US7296052B2 (en) * | 2001-03-20 | 2007-11-13 | Sap Ag | Automatically selecting application services for communicating data |
US20030004985A1 (en) * | 2001-06-29 | 2003-01-02 | Hitachi, Ltd. | Method and apparatus for classifying document information |
US20060143155A1 (en) * | 2001-06-29 | 2006-06-29 | Hitachi, Ltd. | Method and apparatus for classifying document information |
WO2003009173A3 (en) * | 2001-07-18 | 2003-12-18 | Sap Ag | Information retrieval using enhanced document vectors |
WO2003009173A2 (en) * | 2001-07-18 | 2003-01-30 | Sap Aktiengesellschaft | Information retrieval using enhanced document vectors |
US20030018617A1 (en) * | 2001-07-18 | 2003-01-23 | Holger Schwedes | Information retrieval using enhanced document vectors |
US20070050346A1 (en) * | 2001-07-31 | 2007-03-01 | Aol Llc | Enabling a Search for Both Local and Remote Electronic Content |
US9069852B2 (en) * | 2001-07-31 | 2015-06-30 | Facebook, Inc. | Enabling a search for both local and remote electronic content |
US7103590B1 (en) | 2001-08-24 | 2006-09-05 | Oracle International Corporation | Method and system for pipelined database table functions |
US20030172066A1 (en) * | 2002-01-22 | 2003-09-11 | International Business Machines Corporation | System and method for detecting duplicate and similar documents |
US7139756B2 (en) | 2002-01-22 | 2006-11-21 | International Business Machines Corporation | System and method for detecting duplicate and similar documents |
KR100503148B1 (en) * | 2002-04-17 | 2005-07-25 | 정보통신연구진흥원 | System for processing web documents based style and content information and method thereof |
US6973457B1 (en) | 2002-05-10 | 2005-12-06 | Oracle International Corporation | Method and system for scrollable cursors |
US7610351B1 (en) | 2002-05-10 | 2009-10-27 | Oracle International Corporation | Method and mechanism for pipelined prefetching |
US8626735B2 (en) | 2002-05-24 | 2014-01-07 | International Business Machines Corporation | Techniques for personalized and adaptive search services |
US8224857B2 (en) | 2002-05-24 | 2012-07-17 | International Business Machines Corporation | Techniques for personalized and adaptive search services |
US20080270393A1 (en) * | 2002-05-24 | 2008-10-30 | International Business Machines Corporation | Techniques for personalized and adaptive search services |
US8626743B2 (en) | 2002-05-24 | 2014-01-07 | International Business Machines Corporation | Techniques for personalized and adaptive search services |
US20030220913A1 (en) * | 2002-05-24 | 2003-11-27 | International Business Machines Corporation | Techniques for personalized and adaptive search services |
US20040002946A1 (en) * | 2002-06-28 | 2004-01-01 | Fujitsu Limited | Program, method and system for searching content, and operator questioning processing system |
US7065519B2 (en) * | 2002-06-28 | 2006-06-20 | Fujitsu Limited | Program, method and system for searching content, and operator questioning processing system |
US8209339B1 (en) | 2003-06-17 | 2012-06-26 | Google Inc. | Document similarity detection |
US8650199B1 (en) | 2003-06-17 | 2014-02-11 | Google Inc. | Document similarity detection |
US7734627B1 (en) * | 2003-06-17 | 2010-06-08 | Google Inc. | Document similarity detection |
AU2004269436A8 (en) * | 2003-08-29 | 2010-10-21 | Vortaloptics, Inc. | Method, device and software for querying and presenting search results |
CN1894689B (en) * | 2003-08-29 | 2010-11-03 | 伏泰劳普蒂克斯有限公司 | Method, device and software for querying and presenting search results |
US8321400B2 (en) | 2003-08-29 | 2012-11-27 | Vortaloptics, Inc. | Method, device and software for querying and presenting search results |
US20100131484A1 (en) * | 2003-08-29 | 2010-05-27 | Gosse David B | Method, device and software for querying and presenting search results |
US7603342B2 (en) | 2003-08-29 | 2009-10-13 | Vortaloptics, Inc. | Method, device and software for querying and presenting search results |
GB2424100A (en) * | 2003-08-29 | 2006-09-13 | Vortaloptics Inc | Method, device and software for querying and presenting search results |
US7440964B2 (en) | 2003-08-29 | 2008-10-21 | Vortaloptics, Inc. | Method, device and software for querying and presenting search results |
WO2005022402A1 (en) * | 2003-08-29 | 2005-03-10 | Vortaloptics, Inc. | Method, device and software for querying and presenting search results |
AU2004269436B2 (en) * | 2003-08-29 | 2010-10-28 | Vortaloptics, Inc. | Method, device and software for querying and presenting search results |
US20050091275A1 (en) * | 2003-10-24 | 2005-04-28 | Burges Christopher J.C. | Audio duplicate detector |
US7421305B2 (en) | 2003-10-24 | 2008-09-02 | Microsoft Corporation | Audio duplicate detector |
US8954420B1 (en) | 2003-12-31 | 2015-02-10 | Google Inc. | Methods and systems for improving a search ranking using article information |
US10423679B2 (en) | 2003-12-31 | 2019-09-24 | Google Llc | Methods and systems for improving a search ranking using article information |
US10180980B2 (en) | 2004-03-31 | 2019-01-15 | Google Llc | Methods and systems for eliminating duplicate events |
US9189553B2 (en) | 2004-03-31 | 2015-11-17 | Google Inc. | Methods and systems for prioritizing a crawl |
US8386728B1 (en) | 2004-03-31 | 2013-02-26 | Google Inc. | Methods and systems for prioritizing a crawl |
US8346777B1 (en) | 2004-03-31 | 2013-01-01 | Google Inc. | Systems and methods for selectively storing event data |
US8812515B1 (en) | 2004-03-31 | 2014-08-19 | Google Inc. | Processing contact information |
US9311408B2 (en) | 2004-03-31 | 2016-04-12 | Google, Inc. | Methods and systems for processing media files |
US8275839B2 (en) | 2004-03-31 | 2012-09-25 | Google Inc. | Methods and systems for processing email messages |
US8099407B2 (en) | 2004-03-31 | 2012-01-17 | Google Inc. | Methods and systems for processing media files |
US9836544B2 (en) | 2004-03-31 | 2017-12-05 | Google Inc. | Methods and systems for prioritizing a crawl |
US8161053B1 (en) * | 2004-03-31 | 2012-04-17 | Google Inc. | Methods and systems for eliminating duplicate events |
US8631076B1 (en) | 2004-03-31 | 2014-01-14 | Google Inc. | Methods and systems for associating instant messenger events |
US20050267890A1 (en) * | 2004-05-17 | 2005-12-01 | Atsushi Itoh | Data control system capable of present current image of writer with data |
US7984033B2 (en) * | 2004-05-17 | 2011-07-19 | Ricoh Company, Ltd. | Data control system capable of present current image of writer with data |
US20050268165A1 (en) * | 2004-05-21 | 2005-12-01 | Christopher Betts | Method and system for automated testing of web services |
US7809695B2 (en) * | 2004-08-23 | 2010-10-05 | Thomson Reuters Global Resources | Information retrieval systems with duplicate document detection and presentation functions |
US20060041597A1 (en) * | 2004-08-23 | 2006-02-23 | West Services, Inc. | Information retrieval systems with duplicate document detection and presentation functions |
US8131726B2 (en) * | 2005-01-12 | 2012-03-06 | International Business Machines Corporation | Generic architecture for indexing document groups in an inverted text index |
US20060155739A1 (en) * | 2005-01-12 | 2006-07-13 | International Business Machines Corporation | A Generic Architecture for Indexing Document Groups in an Inverted Text Index |
US20090171951A1 (en) * | 2005-03-01 | 2009-07-02 | Lucas Marshall D | Process for identifying weighted contextural relationships between unrelated documents |
US20060200461A1 (en) * | 2005-03-01 | 2006-09-07 | Lucas Marshall D | Process for identifying weighted contextural relationships between unrelated documents |
US20060248066A1 (en) * | 2005-04-28 | 2006-11-02 | Microsoft Corporation | System and method for optimizing search results through equivalent results collapsing |
US20070016545A1 (en) * | 2005-07-14 | 2007-01-18 | International Business Machines Corporation | Detection of missing content in a searchable repository |
US20070038665A1 (en) * | 2005-08-12 | 2007-02-15 | Nhn Corporation | Local computer search system and method of using the same |
US8027976B1 (en) * | 2005-08-23 | 2011-09-27 | Oracle International Corporation | Enterprise content search through searchable links |
US7490096B2 (en) * | 2005-11-04 | 2009-02-10 | Sun Microsystems, Inc. | Automatic intent log testing |
US20070112884A1 (en) * | 2005-11-04 | 2007-05-17 | Sun Microsystems, Inc. | Automatic intent log testing |
US9262446B1 (en) | 2005-12-29 | 2016-02-16 | Google Inc. | Dynamically ranking entries in a personal data book |
US20080027926A1 (en) * | 2006-07-31 | 2008-01-31 | Qian Diao | Document summarization method and apparatus |
US7765215B2 (en) * | 2006-08-22 | 2010-07-27 | International Business Machines Corporation | System and method for providing a trustworthy inverted index to enable searching of records |
US20080059420A1 (en) * | 2006-08-22 | 2008-03-06 | International Business Machines Corporation | System and Method for Providing a Trustworthy Inverted Index to Enable Searching of Records |
US20120206623A1 (en) * | 2006-10-20 | 2012-08-16 | Canon Kabushiki Kaisha | Data reproducing apparatus, content management method, program, and storage medium |
US8352654B2 (en) * | 2006-10-20 | 2013-01-08 | Canon Kabushiki Kaisha | Data reproducing apparatus, content management method, program, and storage medium |
US8499109B2 (en) * | 2006-10-20 | 2013-07-30 | Canon Kabushiki Kaisha | Data reproducing apparatus, content management method, program, and storage medium |
US8185677B2 (en) * | 2006-10-20 | 2012-05-22 | Canon Kabushiki Kaisha | Data reproducing apparatus, content management method, program, and storage medium |
US8806097B2 (en) * | 2006-10-20 | 2014-08-12 | Canon Kabushiki Kaisha | Data reproducing apparatus, content management method, program, and storage medium |
US20130107079A1 (en) * | 2006-10-20 | 2013-05-02 | Canon Kabushiki Kaisha | Data reproducing apparatus, content management method, program, and storage medium |
US20110128391A1 (en) * | 2006-10-20 | 2011-06-02 | Canon Kabushiki Kaisha | Data reproducing apparatus, content management method, program, and storage medium |
US20080114730A1 (en) * | 2006-11-14 | 2008-05-15 | Microsoft Corporation | Batching document identifiers for result trimming |
US7636712B2 (en) * | 2006-11-14 | 2009-12-22 | Microsoft Corporation | Batching document identifiers for result trimming |
US8768932B1 (en) * | 2007-05-14 | 2014-07-01 | Google Inc. | Method and apparatus for ranking search results |
US20080288509A1 (en) * | 2007-05-16 | 2008-11-20 | Google Inc. | Duplicate content search |
US20090063448A1 (en) * | 2007-08-29 | 2009-03-05 | Microsoft Corporation | Aggregated Search Results for Local and Remote Services |
US7389310B1 (en) | 2007-11-13 | 2008-06-17 | International Business Machines Corporation | Supercomputing environment for duplicate detection on web-scale data |
US7363329B1 (en) | 2007-11-13 | 2008-04-22 | International Business Machines Corporation | Method for duplicate detection on web-scale data in supercomputing environments |
US8463770B1 (en) * | 2008-07-09 | 2013-06-11 | Amazon Technologies, Inc. | System and method for conditioning search results |
US9111010B2 (en) * | 2008-12-31 | 2015-08-18 | International Business Machines Corporation | Search results display for weighted multi-term searches |
US20100169325A1 (en) * | 2008-12-31 | 2010-07-01 | International Business Machines Corporation | Search results display for weighted multi-term searches |
EP2619689A2 (en) * | 2010-10-27 | 2013-07-31 | Apple Inc. | Methods for indexing and searching based on language locale |
US20120150929A1 (en) * | 2010-12-08 | 2012-06-14 | Samsung Electronics Co., Ltd. | Apparatus and method for managing a plurality of albums |
CN102541872A (en) * | 2010-12-08 | 2012-07-04 | 三星电子（中国）研发中心 | System and method for managing a plurality of albums |
US20150254342A1 (en) * | 2011-05-30 | 2015-09-10 | Lei Yu | Video dna (vdna) method and system for multi-dimensional content matching |
US20130086083A1 (en) * | 2011-09-30 | 2013-04-04 | Microsoft Corporation | Transferring ranking signals from equivalent pages |
US20130159275A1 (en) * | 2011-12-14 | 2013-06-20 | Hon Hai Precision Industry Co., Ltd. | Information searching system and method |
US20130304577A1 (en) * | 2012-05-09 | 2013-11-14 | Google Inc. | Advertising systems and methods |
US20150262221A1 (en) * | 2012-05-16 | 2015-09-17 | Google Inc. | Linking offline actions with online activities |
US20150161267A1 (en) * | 2012-09-12 | 2015-06-11 | Google Inc. | Deduplication in Search Results |
US10007731B2 (en) * | 2012-09-12 | 2018-06-26 | Google Llc | Deduplication in search results |
US9715360B2 (en) | 2012-09-14 | 2017-07-25 | Ricoh Company, Ltd. | Repository-based print services |
US9329823B2 (en) | 2012-09-14 | 2016-05-03 | Ricoh Company, Ltd. | Repository-based print services |
US9001362B2 (en) * | 2012-09-14 | 2015-04-07 | Ricoh Company, Ltd. | Repository-based print services |
US20140078544A1 (en) * | 2012-09-14 | 2014-03-20 | Tetsuro Motoyama | Repository-Based Print Services |
US10579442B2 (en) | 2012-12-14 | 2020-03-03 | Microsoft Technology Licensing, Llc | Inversion-of-control component service models for virtual environments |
US11151103B1 (en) * | 2013-04-26 | 2021-10-19 | Veritas Technologies Llc | Method for providing an indication of the exact search hit within a large universe of contextual information |
US20150370880A1 (en) * | 2014-06-20 | 2015-12-24 | International Business Machines Corporation | Identifying items on a second website already browsed at a first website |
US11392631B2 (en) * | 2014-07-29 | 2022-07-19 | Groupon, Inc. | System and method for programmatic generation of attribute descriptors |
CN104133888A (en) * | 2014-07-30 | 2014-11-05 | 宇龙计算机通信科技(深圳)有限公司 | Multi-system data processing method, device and terminal |
US9361388B1 (en) * | 2015-07-07 | 2016-06-07 | Yext, Inc. | Suppressing duplicate listings on multiple search engine web sites from a single source system given that a publisher selects a different listing as a synchronized listing |
US10216807B2 (en) * | 2015-07-07 | 2019-02-26 | Yext, Inc. | Suppressing duplicate listings on multiple search engine web sites from a single source system given that a publisher selects a different listing as a synchronized listing |
US20170052961A1 (en) * | 2015-07-07 | 2017-02-23 | Yext, Inc. | Suppressing duplicate listings on multiple search engine web sites from a single source system given that a publisher selects a different listing as a synchronized listing |
US9443025B1 (en) * | 2015-07-07 | 2016-09-13 | Yext, Inc. | Suppressing duplicate listings on multiple search engine web sites from a single source system given a known synchronized listing |
US10762156B2 (en) | 2015-07-07 | 2020-09-01 | Yext, Inc. | Suppressing duplicate listings on multiple search engine web sites from a single source system triggered by a user |
US11074263B2 (en) * | 2015-07-07 | 2021-07-27 | Yext, Inc. | Suppressing duplicate listings on a search provider system |
US20210311956A1 (en) * | 2015-07-07 | 2021-10-07 | Yext, Inc. | Suppressing duplicate listings on a search provider system using api-based communications |
US9519721B1 (en) * | 2015-07-07 | 2016-12-13 | Yext, Inc. | Suppressing duplicate listings on multiple search engine web sites from a single source system given that a publisher selects a different listing as a synchronized listing |
US11775603B2 (en) | 2015-07-07 | 2023-10-03 | Yext, Inc. | Suppressing a duplicate listing from search results generated by a provider system |
US11775537B2 (en) * | 2015-07-07 | 2023-10-03 | Yext, Inc. | Suppressing duplicate listings on a search provider system using API-based communications |
CN108205578A (en) * | 2016-12-20 | 2018-06-26 | 北大方正集团有限公司 | Index generation method and device |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US5913208A (en) | Identifying duplicate documents from search results without comparing document content | |
US7139756B2 (en) | System and method for detecting duplicate and similar documents | |
US6615209B1 (en) | Detecting query-specific duplicate documents | |
US8682891B2 (en) | Automatic object reference identification and linking in a browseable fact repository | |
US5920859A (en) | Hypertext document retrieval system and method | |
US6560600B1 (en) | Method and apparatus for ranking Web page search results | |
US8452799B2 (en) | Query rewriting with entity detection | |
US6976053B1 (en) | Method for using agents to create a computer index corresponding to the contents of networked computers | |
US6418433B1 (en) | System and method for focussed web crawling | |
US6484161B1 (en) | Method and system for performing online data queries in a distributed computer system | |
JP4785838B2 (en) | Web server for multi-version web documents | |
US6374241B1 (en) | Data merging techniques | |
US6578056B1 (en) | Efficient data transfer mechanism for synchronization of multi-media databases | |
US6321220B1 (en) | Method and apparatus for preventing topic drift in queries in hyperlinked environments | |
US6601061B1 (en) | Scalable information search and retrieval including use of special purpose searching resources | |
US5941944A (en) | Method for providing a substitute for a requested inaccessible object by identifying substantially similar objects using weights corresponding to object features | |
US6643640B1 (en) | Method for performing a data query | |
Bergmark | Collection synthesis | |
KR19980701598A (en) | METHODS AND / OR SYSTEMS FOR ACESSING INFORMATIOM | |
AU6509800A (en) | Indexing a network with agents | |
US7024405B2 (en) | Method and apparatus for improved internet searching | |
JPH11191114A (en) | Meta retrieving method, image retrieving method, meta retrieval engine and image retrieval engine | |
Henzinger | Web information retrieval-an algorithmic perspective | |
WO1997049048A1 (en) | Hypertext document retrieval system and method | |
US20030018617A1 (en) | Information retrieval using enhanced document vectors |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: IBM CORPORATION, NEW YORKFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:BROWN, ERIC W.;PRAGER, JOHN M.;REEL/FRAME:008114/0805Effective date: 19960708 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
FEPP | Fee payment procedure |
Free format text: PAYOR NUMBER ASSIGNED (ORIGINAL EVENT CODE: ASPN); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
FPAY | Fee payment |
Year of fee payment: 8 |
|
REMI | Maintenance fee reminder mailed | ||
FPAY | Fee payment |
Year of fee payment: 12 |
|
SULP | Surcharge for late payment |
Year of fee payment: 11 |
|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:INTERNATIONAL BUSINESS MACHINES CORPORATION;REEL/FRAME:026664/0866Effective date: 20110503 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044127/0735Effective date: 20170929 |
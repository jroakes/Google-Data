EP3673395A1 - Systems and methods for authenticated parameterized application installation and launch - Google Patents
Systems and methods for authenticated parameterized application installation and launchInfo
- Publication number
- EP3673395A1 EP3673395A1 EP18804868.0A EP18804868A EP3673395A1 EP 3673395 A1 EP3673395 A1 EP 3673395A1 EP 18804868 A EP18804868 A EP 18804868A EP 3673395 A1 EP3673395 A1 EP 3673395A1
- Authority
- EP
- European Patent Office
- Prior art keywords
- application
- parameter
- user
- identification
- server
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Granted
Links
- 238000009434 installation Methods 0.000 title claims abstract description 74
- 238000000034 method Methods 0.000 title claims abstract description 48
- 230000003993 interaction Effects 0.000 claims description 13
- 238000004891 communication Methods 0.000 claims description 8
- 238000001514 detection method Methods 0.000 claims description 4
- 230000015654 memory Effects 0.000 description 15
- 238000004590 computer program Methods 0.000 description 10
- 238000010586 diagram Methods 0.000 description 7
- 238000012545 processing Methods 0.000 description 7
- 238000013475 authorization Methods 0.000 description 6
- 230000008569 process Effects 0.000 description 6
- 230000005540 biological transmission Effects 0.000 description 4
- 230000001413 cellular effect Effects 0.000 description 4
- 230000003287 optical effect Effects 0.000 description 4
- 238000012790 confirmation Methods 0.000 description 3
- 235000014510 cooky Nutrition 0.000 description 3
- 230000000644 propagated effect Effects 0.000 description 3
- 230000004044 response Effects 0.000 description 3
- 238000013515 script Methods 0.000 description 3
- 230000001953 sensory effect Effects 0.000 description 3
- 239000000835 fiber Substances 0.000 description 2
- 238000000926 separation method Methods 0.000 description 2
- 238000012546 transfer Methods 0.000 description 2
- 230000000007 visual effect Effects 0.000 description 2
- 238000013500 data storage Methods 0.000 description 1
- 230000000694 effects Effects 0.000 description 1
- 230000001815 facial effect Effects 0.000 description 1
- 230000006870 function Effects 0.000 description 1
- 239000004973 liquid crystal related substance Substances 0.000 description 1
- 238000007726 management method Methods 0.000 description 1
- 230000002207 retinal effect Effects 0.000 description 1
- 239000004065 semiconductor Substances 0.000 description 1
- 239000000758 substrate Substances 0.000 description 1
- 239000010409 thin film Substances 0.000 description 1
- 238000012800 visualization Methods 0.000 description 1
- 230000003442 weekly effect Effects 0.000 description 1
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F21/00—Security arrangements for protecting computers, components thereof, programs or data against unauthorised activity
- G06F21/30—Authentication, i.e. establishing the identity or authorisation of security principals
- G06F21/31—User authentication
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F21/00—Security arrangements for protecting computers, components thereof, programs or data against unauthorised activity
- G06F21/30—Authentication, i.e. establishing the identity or authorisation of security principals
- G06F21/44—Program or device authentication
- G06F21/445—Program or device authentication by mutual authentication, e.g. between devices or programs
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F21/00—Security arrangements for protecting computers, components thereof, programs or data against unauthorised activity
- G06F21/10—Protecting distributed programs or content, e.g. vending or licensing of copyrighted material ; Digital rights management [DRM]
- G06F21/12—Protecting executable software
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F21/00—Security arrangements for protecting computers, components thereof, programs or data against unauthorised activity
- G06F21/10—Protecting distributed programs or content, e.g. vending or licensing of copyrighted material ; Digital rights management [DRM]
- G06F21/12—Protecting executable software
- G06F21/121—Restricting unauthorised execution of programs
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F8/00—Arrangements for software engineering
- G06F8/60—Software deployment
- G06F8/61—Installation
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F9/00—Arrangements for program control, e.g. control units
- G06F9/06—Arrangements for program control, e.g. control units using stored programs, i.e. using an internal store of processing equipment to receive or retain programs
- G06F9/44—Arrangements for executing specific programs
- G06F9/445—Program loading or initiating
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/01—Protocols
- H04L67/06—Protocols specially adapted for file transfer, e.g. file transfer protocol [FTP]
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/01—Protocols
- H04L67/10—Protocols in which an application is distributed across nodes in the network
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L9/00—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols
- H04L9/32—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols including means for verifying the identity or authority of a user of the system or for message authentication, e.g. authorization, entity authentication, data integrity or data verification, non-repudiation, key authentication or verification of credentials
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F2221/00—Indexing scheme relating to security arrangements for protecting computers, components thereof, programs or data against unauthorised activity
- G06F2221/03—Indexing scheme relating to G06F21/50, monitoring users, programs or devices to maintain the integrity of platforms
- G06F2221/033—Test or assess software
Definitions
- Applications may be installed on computing devices via application servers or application stores, which allow users to search for, download, and install applications.
- Application publishers may wish to authenticate users in order to, for example, customize applications or provide custom content for particular users (or groups of users).
- One way to authenticate users is to provide links to the application, the links comprising customized parameters that are passed to the application store when the link is followed.
- a link provided to system administrators may comprise different custom parameters to a link provided to users, thereby allowing an application to be customized differently for the administrators and the users, or different content may be provided within the application to administrators and users.
- many application stores or application servers prevent passing customized parameters, such as parameters provided via content which links to the application, to applications after installation. Customization of the application or provision of content specific to the user (or group of users) may be difficult, if not impossible, and may require further interaction between the user and the publisher after installation of the application.
- a client device may provide authentication credentials of a user to an authentication server, which may store an association between the user and a content item linking to an application and identifying a parameter for use by the application.
- the client device may download and install the application via an application server or application store.
- the application may re-provide the authentication credentials to the authentication server, which may retrieve the association, and provide the parameter for use by the application.
- the application server or application store may continue to discard referrer information or parameters for the application, but the application may still receive and utilize the parameters without further user intervention.
- FIG. 1 A is an illustration of a content item including a parameter for use by an application, according to some implementations
- FIG. 1B is a signal flow diagram illustrating an implementation of application installation in which parameters are lost
- FIG. 1C is a signal flow diagram illustrating parameterized application installation and launch, according to some implementations.
- FIG. 2 is a block diagram illustrating implementations of computing devices for use with parameterized application installation and launch.
- FIG. 3 is a flow chart illustrating an implementation of a method for parameterized application installation and launch.
- Applications may be installed on computing devices via application servers or application stores, which allow users to search for, download, and install applications.
- Application publishers may wish to customize applications or provide customized content to specific users or groups of users, for example for security reasons. However, many application stores or application servers prevent passing customized parameters, such as parameters provided via links, to applications after installation. Customization of the application or provision of content specific to the user (or group of users) may be difficult, if not impossible, and may require further interaction between the user and the publisher after installation of the application.
- FIG. 1A is an illustration of a content item 102 including a parameter for use by an application, according to some implementations.
- the content item 102 may be presented within an application 100, such as a web browser, mobile game, desktop application, or any other such application, which may be referred to variously as a first application, host application, browser application, game application, referring application, or by any other such term.
- the content item 102 may comprise a graphic, text, video, animation, or other media, and may be directed to (e.g. intended for) one or more users who subsequently install and launch the associated application, referred to variously as a new application, client application, second application, referred application, or by any other such term.
- a content item 102 may include an offer to install an application.
- the content item 102 may be associated with or comprise an application identifier and application parameter to be provided to the new application upon installation.
- the content item 102 may comprise a link or address for an application via an application server or application store, such as a uniform resource locator (URL) or uniform resource identifier (URI). Selecting the link may cause the client device to load the corresponding URL or URI within another application, such as an App Store application, which may allow the user to download and install the new application.
- an application server or application store such as a uniform resource locator (URL) or uniform resource identifier (URI).
- URL uniform resource locator
- URI uniform resource identifier
- Selecting the link may cause the client device to load the corresponding URL or URI within another application, such as an App Store application, which may allow the user to download and install the new application.
- an App Store application such as an App Store application.
- the application parameter may be provided via a referrer tag or similar metadata.
- application servers, application stores, or App Store applications may remove parameters from requests or remove referrer tags or otherwise prevent passing parameters from the referring content item 102 to the new application, thereby making it difficult or impossible to authenticate the user and to provide a customized application or custom content within the application.
- FIG. 1B is a signal flow diagram illustrating an implementation of application installation in which parameters are lost.
- a first application 100 such as a web browser or game executed by a client device may display a content item comprising a link to a second application and a parameter to be utilized by the application.
- the application 100 may provide a request comprising the new application and parameter to an App Store 104.
- the App Store 104 may comprise an application on the client device or a web page or network application provided by a server.
- the App Store 104 may process the request by removing the parameter or referrer tag at step 122 and requesting the second application from an application server 106 or content delivery network at step 124.
- the request for the second application may comprise a request transmitted over a network, such as an HTTP or FTP request from an App Store application on the client device for the application.
- the application server 106 may respond with the new application at step 126, and installed by the App Store application or an operating system of the client device at step 128.
- Installation may include decompressing a compressed application, installing or modifying system libraries, or performing other such functions.
- the new application 108 may be automatically launched upon installation, in many implementations, or may be manually launched by a user of the client device.
- a user may need to manually re-enter the parameter at step 130 in order for the new application 108 to utilize the parameter.
- a content item 102 may include an alphanumeric code, and the user may need to manually enter the alphanumeric code.
- such methods may be insecure, as users may share unlock codes with each other, allowing a user to whom the content item was not provided by the publisher to nonetheless obtain the version of the application or the customized content intended for a different user or group of users.
- a client device may provide authentication credentials of a user to an authentication server, which may store an association between the user and a content item and identifying a parameter for use by the application.
- the client device may download and install the application via an application server or application store.
- the application may re-provide the authentication credentials to the authentication server, which may retrieve the association, and provide the parameter for use by the application.
- the application server or application store may continue to discard referrer information or parameters for the application, but the application may still receive and utilize the parameters without further user intervention.
- FIG. 1C is a signal flow diagram illustrating parameterized application installation and launch, according to some implementations.
- the first application 100 may provide authentication credentials of the user to an authentication server 110 at step 150.
- Providing the authentication credentials may comprise displaying a login prompt to the user in some implementations, or may comprise utilizing login information or authentication information already used by the application 100 (e.g. an authentication token obtained during an earlier authentication process).
- the user may be prompted to register a new account, and authentication credentials may be created for the user and/or device.
- the authentication server may store an association between the authentication credentials and the content item 102 or a parameter of the content item to be provided to the new application.
- the stored association may include additional details, such as a device identifier, cryptographic key or shared secret, or an expiration date upon which the association may be discarded.
- the application 100 may provide a request to an App Store 104 comprising an identifier of the application (and potentially including the parameter or referrer tag).
- the App Store 104 may remove the parameter at step 122’, request the new application at step 124’ from the application server 106, receive the transmission of the new application at step 126’, and install the new application 128’.
- the new application 108 may re-provide the authentication credentials to the authentication server 110.
- Re-providing the authentication credentials may include displaying a login prompt to the user in some implementations, or may comprise retrieving login information or authentication information from the first application 100.
- the new application 108 may provide an authentication token received by the first application 100.
- the authentication server 110 may retrieve the corresponding parameter of the content item at step 154, and may transmit the parameter to the new application at step 108.
- the parameter may be provided via any suitable means, such as an HTTP request/response, a remote procedure call, or other such method.
- the parameter may be encrypted for transmission via a shared secret associated with the authorization credentials.
- the new application 108 may utilize the parameter, e.g. to download further data for the new application from a publisher or content delivery network, etc.
- FIG. 2 is a block diagram illustrating implementations of computing devices for use with parameterized application installation and launch.
- client device(s) 250 may be referred to variously as a client, device, client device, computing device, user device, or any other such term, and may comprise any type and form of computing device, including a desktop computer, laptop computer, portable computer, tablet computer, wearable computer, embedded computer, smart television, console, Internet of Things (IoT) device or smart appliance, or any other type and form of computing device.
- IoT Internet of Things
- client device 250 includes a processor 200 and a memory 206.
- Memory 206 may store machine instructions that, when executed by processor 200 cause processor 200 to perform one or more of the operations described herein.
- Processor 200 may include a microprocessor, ASIC, FPGA, etc., or combinations thereof. In many implementations, processor 200 may be a multi-core processor or an array of processors.
- Memory 206 may include, but is not limited to, electronic, optical, magnetic, or any other storage devices capable of providing processor 200 with program instructions. Memory 206 may include a floppy disk, CD-ROM, DVD, magnetic disk, memory chip, ROM, RAM, EEPROM, EPROM, flash memory, optical media, or any other suitable memory from which processor 200 can read instructions.
- the instructions may include code from any suitable computer programming language such as, but not limited to, C, C++, C#, Java, JavaScript, Perl, HTML, XML, Python and Visual Basic.
- Client device 250 may include one or more network interfaces 202.
- a network interface 202 may include any type and form of interface, including Ethernet including 10 Base T, 100 Base T, or 1000 Base T (“Gigabit”); any of the varieties of 802.11 wireless, such as 802.11 a, 802. l lb, 802. l lg, 802.11h, or 802. l lac; cellular, including CDMA, LTE, 3G, or 4G cellular; Bluetooth or other short range wireless connections; or any combination of these or other interfaces for communicating with a network.
- client device 250 may include a plurality of network interfaces 202 of different types, allowing for connections to a variety of networks, e.g. such as the Internet via different sub-networks.
- Client device 250 may include one or more user interface devices 204.
- a user interface device 204 may be any electronic device that conveys data to a user by generating sensory information (e.g., a visualization on a display, one or more sounds, tactile feedback, etc.) and/or converts received sensory information from a user into electronic signals (e.g., a keyboard, a mouse, a pointing device, a touch screen display, a microphone, etc.).
- the one or more user interface devices may be internal to the housing of client device 250, such as a built-in display, touch screen, microphone, etc., or external to the housing of client device 250, such as a monitor connected to client device 250, a speaker connected to client device 250, etc., according to various implementations.
- Client device 250 may include in memory 206 an application 100 or may execute an application 100 with a processor 200.
- Application 100 may be an application, applet, script, service, daemon, routine, or other executable logic for receiving content and displaying or otherwise outputting content via an output interface 204 of the client device (e.g. display, speaker, etc.).
- application 100 may be a web browser, mail client, video player, music player, video game, or any other such application.
- Application 100 may include functionality for displaying content received via network interface 202 and/or generated locally by processor 200.
- application 100 may be a media player or include an embedded media player, such as a plug in or native media player within a web browser.
- Client 250 may execute an installation application 104.
- Installation application 104 may comprise an application, service, daemon, routine, or other executable logic for retrieving and installing applications.
- installation application 104 may comprise an App Store application, a browser, or other such application.
- installation application 104 and application 100 may be the same application.
- installation application 104 may comprise a network application or software-as-a-service application provided by an application server and rendered within a browser of client device 250. As discussed above, in many
- installation application 104 may receive a URI or URL or other identifier of an application to be installed, and may receive a parameter to be passed to the application on installation; however, the installation application 104 may remove, disregard, or otherwise not provide the parameter to the new application after installation.
- the parameter may be provided via authentication server 110 as discussed above.
- client device 250 may retrieve and install a new application 108, sometimes referred to as a received application, second application, installed application, or by other such terms.
- the new application 108 may be referred to as a second application, installed application, retrieved application, downloaded application, or by any other such term, and may be retrieved from an application server 106 by installation application 104 and installed.
- installing the application may include decompressing or decrypting the application, installing libraries of the application into an operating system of the device, or otherwise installing one or more portions of the application for execution.
- the new application 108 may be executed upon installation, while in other implementations, the new application 108 may be executed responsive to a selection by the user to execute the application after installation.
- Client device 250 may include or be identified with a device identifier 208.
- Device identifier 208 may be an alphanumeric string, data string, serial number, media access control (MAC) address, internet protocol (IP) address, username or account name, globally unique identifier (GUID), cookie, random or pseudorandom number, or any other type and form of identifier, including combinations of these or other identifiers.
- MAC media access control
- IP internet protocol
- GUID globally unique identifier
- cookie random or pseudorandom number, or any other type and form of identifier, including combinations of these or other identifiers.
- the device identifier 208 may be fixed to the device or preconfigured in the device, such as a manufacturer serial number or MAC address, while in other words
- the device identifier 208 may be dynamically set by a content provider, streaming server, application 100, or other entity, such as a cookie or username.
- a unique or new device identifier 208 may be set for each communication to a content provider or authentication server 110, while in other implementations, the device identifier 208 may not be changed, or may be changed periodically (e.g. hourly, daily, weekly, etc.) or at other intervals (e.g. on restart of the client device, login to an internet service, etc.).
- a device identifier 208 may be associated with one or more other device identifiers 208 (e.g., a device identifier for a mobile device, a device identifier for a home computer, etc.).
- a device identifier 208 may be generated and/or transmitted to the device 250 by an authentication server.
- client 250 may request a device identifier from an authentication server 110, and may transmit the device identifier to the authentication server 110 in association with requests for content or application parameters.
- Client device 250 may include user credentials 210
- User credentials 210 may be any type and form of identifier or credentials, including a user name, password, account name, account identifier, pass phrase, biometric data such as a fingerprint, facial scan data, retinal information, or voiceprint, or any other type and form of user-specific information.
- the client device 250 may receive user credentials in response to display of a login prompt by application 100 and/or new application 108
- client device 250 may store user credentials temporarily, e.g. during execution of an application or for a predetermined time period. For example, in one such implementation, a user may execute application 100 and provide credentials to the application, which may be stored in memory 206 of the device.
- user credentials 210 may be encrypted, hashed, or otherwise obfuscated to protect user privacy and security.
- user credentials may be provided to an authentication server 110 via an authentication process: the user credentials, or a hash of the user credentials, may be provided to authentication server 110, which may match the hash or credentials to those in a database of the server; upon identifying a match, the authentication server may determine the user or device is authorized or authentic, and may respond with an authorization token or other data indicating that the device is authorized. The device may utilize the authentication token with third party servers, applications, or other entities.
- a client device 250 may communicate with an application server 106 and an authentication server 110 via one or more networks.
- the networks may comprise any type and form of network, including local area networks (LANs), wide area networks (WANs) such as the Internet, satellite networks, cable networks, broadband networks, fiber optic networks, microwave networks, cellular networks, wireless networks, or any combination of these or other such networks.
- the networks may be the same type of network or different types, and may include a plurality of additional devices (not illustrated), including gateways, modems, firewalls, routers, switches, etc.
- the networks may also include any number of computing devices (e.g., computer, servers, routers, network switches, etc.) that are configured to receive and/or transmit data within the network.
- the network may further include any number of hardwired and/or wireless connections.
- a client device 250 may communicate wirelessly (e.g., via WiFi, cellular, radio, etc.) with a transceiver that is hardwired (e.g., via a fiber optic cable, a CAT5 cable, etc.) to other computing devices in the network.
- a network may be a virtual network, such as a virtual network between a plurality of virtual machines executed by a single physical machine, or an abstract network such as an offline transfer of data via physically movable media (e.g. a Sneakemet, transferring data via tape media, CD-ROM, flash media, external hard drives, floppy disks, etc.).
- intermediary server 106 may include one or more processors 200, memories or storage devices 206, network interfaces 202, and user interfaces 204.
- a server 106 may not include a user interface 204, but may communicate with clients 250 or content providers with user interfaces 204 via a network.
- memory 206 may store one or more applications for execution by processor 200 of the server, including FTP servers, web servers, mail servers, file sharing servers, peer to peer servers, or other such applications for delivering content or redirection commands to allow clients to access content at a content provider.
- Application server 106 may comprise any type and form of computing device, including desktop computers, servers, workstations, laptop computers, portable computers, embedded computers, or any other type and form of computing device.
- application server 106 may comprise one or more virtual machines executed by one or more physical computing devices, and may be configured as a server farm, cluster, or cloud of devices.
- Application server 106 may include application storage 212 storing one or more applications 108 for retrieval and installation by client devices 250.
- Applications 108 may be identified via a URI or URL or other application identifier as discussed above, and may be compressed, encrypted, or otherwise packaged for download and installation.
- applications 108 may comprise application installers for given applications, including instructions for installing various application libraries, packages, and other executables of the application.
- application server 106 may be unable to or configured not to provide parameters to a new application 108 upon installation on a client device 250.
- such parameters may be removed by an installation application 104 of the client device; while in other implementations, such parameters may be removed or disregarded by application server 106.
- Authentication server 110 may include one or more computing devices connected to network and configured for performing authentication with a client 250, and for storing and providing application parameters for use by new applications 108.
- Authentication server 110 may be referred to variously as a content provider, server, web server, data server, publisher, service provider, or by other similar terms.
- authentication server 110 may include a plurality of computing devices configured as a server farm or cloud, and may include routers, load balancers, network address translators, firewalls, or other such devices.
- Authentication servers 110 may be computer servers (e.g., FTP servers, file sharing servers, web servers, etc.) or combinations of servers (e.g., data centers, cloud computing platforms, etc.).
- Authentication servers 110 may also be content providers, and provide any type and form of content, including text, images, video, audio, multimedia, or other data, or any combination of these.
- an authentication server 110 may be an application server 106.
- an installation application 104 may remove application parameters as discussed above, such that the authentication server 110 must receive the parameters from application 100 or an identification of a corresponding presentation of a content item 102 in order to provide the parameters to new application 108 upon installation.
- Authentication server 110 may include one or more processors 200, network interfaces 202, I/O interfaces 204, and/or memory devices 206 as shown.
- authentication server 110 may comprise a plurality of computing devices, including virtual machines executed by physical devices.
- an authentication server 110 may comprise a plurality of virtual machines executed by one or more physical computing devices, each such virtual machine executing a content server (e.g. web server, file server, streaming media server, etc.) and in communication with one or more storage devices, such as network storage devices, RAID storage devices, or other such devices.
- Authentication server 110 may comprise or execute an authentication engine 212.
- Authentication engine 212 may comprise an application, server, service, daemon, routine, or other executable logic for receiving authentication credentials from a client device 250, and for storing and/or retrieving parameters associated with the user credentials and content items, e.g. in a credential-parameter database 214.
- Credential-parameter database 214 may comprise any type and form of data storage, including a database, flat file, relational database, array, or other structure capable of associating a device identifier 208 or user identifier with a content item 102, parameter for use by an application, or other corresponding identifier.
- credential-parameter database 214 may be further associated with an application to use the parameter, e.g. application 108.
- credential-parameter database 214 may be indexed by application, which may speed up search and retrieval of user credentials and parameters upon receipt of a request from the application.
- Credential-parameter database 214 may thus store application identifiers, content item identifiers, user or device identifiers, parameters for use by applications, or a combination of these identifiers or data.
- each entry or association may be further associated with an expiration time or duration. Upon expiration of the duration or expiration time, the corresponding association or entry may be removed, thereby further improving security by allowing associations to‘time out’ or expire.
- FIG. 3 is a flow chart illustrating an implementation of a method for parameterized application installation and launch.
- a client device 250 may display a content item.
- the content item may be displayed in a first application, such as a web browser, game, or other such application, e.g. as a banner ad, pop-up ad, interstitial ad, pre-roll or post-roll ad, link, graphic, or other such item.
- the content item may comprise a link to or address of a second application, such as a URL or URI corresponding to the second application at an application store or application server, and a parameter to be utilized by the second application upon installation.
- the parameter may be stored within the URI or URL (e.g. as a parameter-value pair of a URL) or in metadata, such as a referrer tag.
- the first application may determine whether a user of the client device has interacted with the content item (e.g. clicking on the item, selecting the item via a touch interface, etc.). If not, steps 300-302 may be repeated, e.g. with different or the same content item. If an interaction is detected, then at step 304, the first application or an operating system of the device may display a login prompt for the user. The user may enter user credentials such as a user name, account name, password, biometric data, or other such information. In some implementations, the first application or operating system may have previously displayed a prompt or authenticated the user; in such implementations, step 304 may be skipped. At step 306, the credentials may be transmitted to an authentication server 110.
- the credentials may be transmitted to an authentication server 110.
- the credentials may be encrypted, hashed, or otherwise obfuscated to protect user privacy and enhance security.
- the transmission may include a device identifier, user identifier, account identifier, application identifier (e.g. of the first application and/or of the application to be installed), an identification of the content item, an identification of the parameter and/or the parameter value, or any other such information.
- the authentication server 110 may determine if the credentials are valid (e.g. whether the credentials match account credentials or device credentials in a credential or account database of the authentication server). If the credentials do not match, then the credentials may be rejected at step 310.
- the client device 250 may instead provide a new account registration interface via which the user may create an account to be registered with the authentication server 110. Once registered, the account may be confirmed as discussed above (or step 308 may be skipped).
- the authentication server 110 may store an association between the user or device credentials and the content item and/or the parameter. In some embodiments
- an association between the content item and the parameter may already be stored by the authentication server or otherwise available to the content server (e.g. from a content provider or publisher server). For example, an association between a first content item linking to an application and first parameters may be stored, and an association between a second content item linking to the application and second parameters may be stored.
- the authentication server need only store an identification of which content item was provided to a device or user in order to determine the corresponding parameter.
- the parameter need not be provided by the client device, but rather merely the identification of the content item.
- the parameter value may be provided to the authentication server for storage.
- the authentication server may provide an authorization confirmation or authentication token to the client device.
- the authentication token or confirmation may comprise a cookie, cryptographic key, or other type of identifier.
- the client device 250 may download and install the new application.
- the client device may execute an installation application or App Store application to interface with an application server or content delivery system to retrieve the application.
- the application may be compressed or encrypted, and the installation application may decompress and/or decrypt and install the application.
- the new application may be executed or launched.
- the new application may be launched automatically as soon as installation is complete, while in other implementations, the user may manually launch the application.
- the application may comprise any type and form of application, including a game, utility or office application, media application, social network application, or any other type and form of application.
- the new application or operating system may display a login prompt, similar to that at step 304, to receive user or device credentials.
- the new application may retrieve credentials from the first application or an operating system of the client device (e.g. stored when the user previously provided credentials) or may retrieve an authorization token provided to the device (e.g. at step 314 or at a previous instance of authentication).
- the new application may transmit the credentials or authorization token to the authentication server.
- the authentication server may confirm that the credentials are valid, similar to step 308. If the credentials are not valid, the authentication server may reject the credentials at step 310. If the credentials are valid, at step 326, the authentication server may retrieve the stored association of the credentials and the content item and/or parameter for the application. In some implementations, the authentication server may look up the stored association via the user or device credentials and/or the application type or an application identifier provided with the credentials; and may identify the corresponding content item or parameter. In a further implementation, once identifying the content item, the authentication server may separately look up the parameter (e.g. in a content item-parameter storage, by retrieving the parameter from a publisher or content delivery network, etc.).
- the authentication server may separately look up the parameter (e.g. in a content item-parameter storage, by retrieving the parameter from a publisher or content delivery network, etc.).
- the authentication server may provide an authorization confirmation, as at step 314, and/or the retrieved parameter.
- the parameter may be data for use by the application (e.g. increment token counter by n, or a similar command), or may be an unlock code used by the application.
- the parameter may be utilized by the application to provide the customized application or customized content.
- the present disclosure is directed to a method for parameterized application installation and launch.
- the method includes receiving, by a device, a content item comprising an identification of an application and a parameter for use by the application.
- the method also includes detecting, by the device, an interaction by a user with the content item.
- the method also includes transmitting, by the device, authentication credentials of the user and an identification of the content item to an authentication server, the authentication server storing the identification of the content item in association with the user.
- the method also includes installing the application, by the device, responsive to detection of the interaction by the user with the content item, the application executed upon completion of installation.
- the method includes retransmitting, by the device, the authentication credentials of the user to the authentication server, responsive to execution of the application.
- the method also includes receiving, by the device from the authentication server, an identification of the parameter for use by the application, the parameter retrieved responsive to the storage of the identification of the content item in association with the user and the retransmission of the authentication credentials of the user.
- the method also includes utilizing the received parameter within the application, by the device, responsive to receipt of the identification of the parameter.
- the parameter for use by the application is not stored locally while installing the application. In some implementations, the parameter for use by the application is not accessible by the application prior to receipt of the identification of the parameter from the authentication server.
- transmitting the identification of the content item includes transmitting the identification of the parameter for use by the application.
- the identification of the application and the parameter for use by the application are included in a resource identifier; and the method includes downloading the application, by the device via an installation application, at an address corresponding to the resource identifier, the installation application removing the parameter for use by the application from the resource identifier prior to installation of the application.
- transmitting authentication credentials of the user includes displaying a prompt for authentication credentials; and receiving authentication credentials from the user.
- retransmitting the authentication credentials includes redisplaying the prompt for authentication credentials; and re-receiving authentication credentials from the user.
- the present application is directed to a method for
- the method includes providing, by a server to a device, a content item comprising an identification of an application and a parameter for use by the application.
- the method includes receiving, by the server from the device, authentication credentials of a user of the device and an identification of the content item.
- the method includes storing, by the server, the identification of the content item in association with the user.
- the method includes subsequently receiving, by the server from the application of the device, the authentication credentials of the user, the application executed by the device responsive to completion of installation of the application.
- the method includes retrieving, by the server, the identification of the content item and the parameter for use by the application based on receipt of the authentication credentials of the user.
- the method includes transmitting the parameter, by the server to the device, the application of the device utilizing the received parameter.
- the parameter for use by the application is not stored by the device while installing the application. In some implementations, the parameter for use by the application is not accessible by the application prior to receipt of the identification of the parameter from the authentication server. In some implementations, receiving the identification of the content item includes receiving the identification of the parameter for use by the application. In some implementations, receiving the identification of the content item includes redirecting the device, by the server, to an application installation server. In a further implementation, redirecting the device to the application installation server further comprises providing a resource identifier corresponding to the application, the resource identifier not including the parameter for use by the application. In another further implementation, redirecting the device to the application installation server includes providing a resource identifier corresponding to the application including the parameter for use by the application, the application installation server removing the parameter upon receipt of a request for the application from the device.
- the present application is directed to a system for
- the system may comprise one or more devices configured to carry out the methods of the aspects described above.
- the system may include a device comprising a network interface in communication with an authentication server and an application server.
- the device executes a first application configured to: receive a content item comprising an identification of a second application and a parameter for use by the second application; detect an interaction by a user with the content item; and transmit authentication credentials of the user and an identification of the content item to the authentication server, the authentication server storing the identification of the content item in association with the user.
- the device is configured to retrieve and install the second application from the application server, responsive to detection of the interaction by the user with the content item, the second application executed upon completion of installation.
- the second application is configured to: retransmit the authentication credentials of the user to the authentication server, responsive to execution of the second application; receive, from the authentication server, an identification of the parameter for use by the second application, the parameter retrieved responsive to the storage of the identification of the content item in association with the user and the retransmission of the authentication credentials of the user; and utilize the received parameter within the second application, responsive to receipt of the identification of the parameter.
- the parameter for use by the second application is not stored locally while installing the second application. In some implementations, the parameter for use by the second application is not accessible by the second application prior to receipt of the identification of the parameter from the authentication server.
- the first application is further configured to transmit the identification of the parameter for use by the second application.
- the identification of the application and the parameter for use by the application are included in a resource identifier; and the device is further configured to retrieve and install the second application via an installation application, at an address corresponding to the resource identifier, the installation application removing the parameter for use by the second application from the resource identifier prior to installation of the second application.
- the second application is further configured to display a prompt for authentication credentials; and receive the authentication credentials from the user.
- Implementations of the subject matter and the operations described in this specification can be implemented in digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them.
- Implementations of the subject matter described in this specification can be implemented as one or more computer programs, i.e., one or more modules of computer program instructions, encoded on one or more computer storage medium for execution by, or to control the operation of, data processing apparatus.
- the program instructions can be encoded on an artificially-generated propagated signal, e.g., a machine-generated electrical, optical, or electromagnetic signal, that is generated to encode information for transmission to suitable receiver apparatus for execution by a data processing apparatus.
- a computer storage medium can be, or be included in, a computer-readable storage device, a computer-readable storage substrate, a random or serial access memory array or device, or a combination of one or more of them.
- a computer storage medium is not a propagated signal, a computer storage medium can be a source or destination of computer program instructions encoded in an artificially-generated propagated signal.
- the computer storage medium can also be, or be included in, one or more separate components or media (e.g., multiple CDs, disks, or other storage devices). Accordingly, the computer storage medium may be tangible.
- client or“server” include all kinds of apparatus, devices, and machines for processing data, such as a programmable processor, a computer, a system on a chip, or multiple ones, or combinations, of the foregoing.
- the apparatus can include special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC
- the apparatus can also include, in addition to hardware, code that creates an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, a cross-platform runtime environment, a virtual machine, or a combination of one or more of them.
- the apparatus and execution environment can realize various different computing model infrastructures, such as web services, distributed computing and grid computing infrastructures.
- a computer program (also known as a program, software, software application, script, or code) can be written in any form of programming language, including compiled or interpreted languages, declarative or procedural languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, object, or other unit suitable for use in a computing environment.
- a computer program may, but need not, correspond to a file in a file system.
- a program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub-programs, or portions of code).
- a computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
- the processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform actions by operating on input data and generating output.
- the processes and logic flows can also be performed by, and apparatus can also be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application specific integrated circuit).
- processors suitable for the execution of a computer program include both general and special purpose microprocessors, and any one or more processors of any kind of digital computer.
- a processor will receive instructions and data from a read-only memory or a random access memory or both.
- the essential elements of a computer are a processor for performing actions in accordance with instructions and one or more memory devices for storing instructions and data.
- a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks.
- mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks.
- a computer need not have such devices.
- a computer can be embedded in another device, e.g., a mobile telephone, a personal digital assistant (PDA), a mobile audio or video player, a game console, a Global Positioning System (GPS) receiver, or a portable storage device (e.g., a universal serial bus (USB) flash drive), to name just a few.
- Devices suitable for storing computer program instructions and data include all forms of non-volatile memory, media and memory devices, including semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks; magneto-optical disks; and CD-ROM and DVD-ROM disks.
- the processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
- implementations of the subject matter described in this specification can be implemented on a computer having a display device, e.g., a CRT (cathode ray tube), LCD (liquid crystal display), OLED (organic light emitting diode), TFT (thin-film transistor), plasma, other flexible configuration, or any other monitor for displaying information to the user and a keyboard, a pointing device, e.g., a mouse, trackball, etc., or a touch screen, touch pad, etc., by which the user can provide input to the computer.
- a display device e.g., a CRT (cathode ray tube), LCD (liquid crystal display), OLED (organic light emitting diode), TFT (thin-film transistor), plasma, other flexible configuration, or any other monitor for displaying information to the user and a keyboard, a pointing device, e.g., a mouse, trackball, etc., or a touch screen, touch pad, etc., by which the user can provide input to the computer
- a computer can interact with a user by sending documents to and receiving documents from a device that is used by the user; by sending webpages to a web browser on a user’s client device in response to requests received from the web browser.
- Implementations of the subject mater described in this specification can be implemented in a computing system that includes a back-end component, e.g., as a data server, or that includes a middleware component, e.g., an application server, or that includes a front-end component, e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject mater described in this specification, or any combination of one or more such back-end, middleware, or front-end components.
- the components of the system can be interconnected by any form or medium of digital data communication, e.g., a communication network.
- Communication networks may include a local area network (“LAN”) and a wide area network (“WAN”), an inter-network (e.g., the Internet), and peer-to-peer networks (e.g., ad hoc peer-to-peer networks).
- the users may be provided with an opportunity to control whether programs or features that may collect personal information (e.g., information about a user's social network, social actions or activities, a user's preferences, or a user's location), or to control whether or how to receive content from a content server or other data processing system that may be more relevant to the user.
- personal information e.g., information about a user's social network, social actions or activities, a user's preferences, or a user's location
- certain data may be anonymized in one or more ways before it is stored or used, so that personally identifiable information is removed when generating parameters.
- a user's identity may be anonymized so that no personally identifiable information can be determined for the user, or a user's geographic location may be generalized where location information is obtained (such as to a city, postal code, or state level), so that a particular location of a user cannot be determined.
- location information such as to a city, postal code, or state level
- the user may have control over how information is collected about him or her and used by the content server.
- the custom content referred to herein may take any form.
- the custom content may include an incentive for installing the application, such as coupons or tokens or the like.
Abstract
Description
Claims
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
PCT/US2018/058975 WO2020091809A1 (en) | 2018-11-02 | 2018-11-02 | Systems and methods for authenticated parameterized application installation and launch |
Publications (2)
Publication Number | Publication Date |
---|---|
EP3673395A1 true EP3673395A1 (en) | 2020-07-01 |
EP3673395B1 EP3673395B1 (en) | 2021-06-23 |
Family
ID=64362744
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
EP18804868.0A Active EP3673395B1 (en) | 2018-11-02 | 2018-11-02 | Systems and methods for authenticated parameterized application installation and launch |
Country Status (6)
Country | Link |
---|---|
US (1) | US11544357B2 (en) |
EP (1) | EP3673395B1 (en) |
JP (1) | JP6914436B2 (en) |
KR (1) | KR102362108B1 (en) |
CN (1) | CN111406257B (en) |
WO (1) | WO2020091809A1 (en) |
Families Citing this family (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
JP6956233B1 (en) * | 2020-07-08 | 2021-11-02 | Tis株式会社 | Information processing equipment, information processing methods, and information processing programs |
US11526339B1 (en) * | 2020-08-11 | 2022-12-13 | NortonLifeLock Inc. | Systems and methods for improving application installation |
JP7297275B1 (en) | 2022-12-06 | 2023-06-26 | 株式会社and DC3 | Content processing method and program |
Family Cites Families (18)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5148222A (en) * | 1990-08-22 | 1992-09-15 | Spectrum Sciences B.V. | Liquid developer system |
JP2003216872A (en) * | 2001-11-19 | 2003-07-31 | Ricoh Co Ltd | Method and program for providing rental software |
JP2003256213A (en) * | 2002-03-06 | 2003-09-10 | Nippon Telegr & Teleph Corp <Ntt> | Application starting method and system, application starting program, and storage medium stored with application starting program |
US7080404B2 (en) * | 2002-04-01 | 2006-07-18 | Microsoft Corporation | Automatic re-authentication |
US8613108B1 (en) * | 2009-03-26 | 2013-12-17 | Adobe Systems Incorporated | Method and apparatus for location-based digital rights management |
FR2962571B1 (en) * | 2010-07-08 | 2012-08-17 | Inside Contactless | METHOD FOR PERFORMING A SECURE APPLICATION IN AN NFC DEVICE |
AU2012203903B2 (en) * | 2011-07-12 | 2015-03-12 | Apple Inc. | System and method for linking pre-installed software to a user account on an online store |
US9148429B2 (en) * | 2012-04-23 | 2015-09-29 | Google Inc. | Controlling access by web applications to resources on servers |
EP3188437B1 (en) * | 2012-06-13 | 2019-06-12 | Huawei Device Co., Ltd. | Method and system for implementing information sharing |
US9098687B2 (en) * | 2013-05-03 | 2015-08-04 | Citrix Systems, Inc. | User and device authentication in enterprise systems |
JP6201885B2 (en) * | 2014-05-13 | 2017-09-27 | 株式会社セガゲームス | Server apparatus and server program |
US20150379559A1 (en) * | 2014-06-30 | 2015-12-31 | Google Inc. | Application installation conversion and identification |
US10425392B2 (en) | 2015-08-05 | 2019-09-24 | Facebook, Inc. | Managing a device cloud |
US9886256B2 (en) * | 2015-09-10 | 2018-02-06 | Green Almond Limited | Application download and link correlation |
US10397191B2 (en) * | 2015-12-01 | 2019-08-27 | Adobe Inc. | Passing content securely from web browsers to computer applications |
US10785327B2 (en) * | 2016-06-02 | 2020-09-22 | Google Llc | Client device application interaction monitoring |
US10542069B2 (en) * | 2016-07-13 | 2020-01-21 | Mobisave Llc | System and method for providing a customized resource |
AU2017101431B4 (en) | 2016-10-26 | 2018-05-17 | Apple Inc. | User interfaces for browsing content from multiple content applications on an electronic device |
-
2018
- 2018-11-02 JP JP2020518457A patent/JP6914436B2/en active Active
- 2018-11-02 WO PCT/US2018/058975 patent/WO2020091809A1/en unknown
- 2018-11-02 KR KR1020207009095A patent/KR102362108B1/en active IP Right Grant
- 2018-11-02 US US16/756,332 patent/US11544357B2/en active Active
- 2018-11-02 CN CN201880064019.9A patent/CN111406257B/en active Active
- 2018-11-02 EP EP18804868.0A patent/EP3673395B1/en active Active
Also Published As
Publication number | Publication date |
---|---|
KR20200051670A (en) | 2020-05-13 |
KR102362108B1 (en) | 2022-02-14 |
WO2020091809A1 (en) | 2020-05-07 |
JP6914436B2 (en) | 2021-08-04 |
US20210216614A1 (en) | 2021-07-15 |
EP3673395B1 (en) | 2021-06-23 |
JP2021503637A (en) | 2021-02-12 |
CN111406257A (en) | 2020-07-10 |
US11544357B2 (en) | 2023-01-03 |
CN111406257B (en) | 2023-10-31 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US10931683B2 (en) | Automatic token-based secure content streaming method and apparatus | |
US9875363B2 (en) | Use of generic (browser) encryption API to do key exchange (for media files and player) | |
US9378345B2 (en) | Authentication using device ID | |
CN100581103C (en) | Securely processing of client credentials used for WEB-based access to resources | |
US20230188507A1 (en) | Domain specific browser identifiers as replacement of browser cookies | |
US20200184078A1 (en) | Secure boot of remote servers | |
US11544357B2 (en) | Systems and methods for authentication | |
US20230219006A1 (en) | Systems and methods for providing multi-part persistent content | |
US8892647B1 (en) | System and method for associating a cookie with a device identifier | |
US20170149777A1 (en) | Systems and method for cross-channel device binding | |
CN112166586A (en) | Self-authenticating domain-specific browser identifier |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: UNKNOWN |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: THE INTERNATIONAL PUBLICATION HAS BEEN MADE |
|
PUAI | Public reference made under article 153(3) epc to a published international application that has entered the european phase |
Free format text: ORIGINAL CODE: 0009012 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: REQUEST FOR EXAMINATION WAS MADE |
|
17P | Request for examination filed |
Effective date: 20200326 |
|
AK | Designated contracting states |
Kind code of ref document: A1Designated state(s): AL AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HR HU IE IS IT LI LT LU LV MC MK MT NL NO PL PT RO RS SE SI SK SM TR |
|
AX | Request for extension of the european patent |
Extension state: BA ME |
|
RAP1 | Party data changed (applicant data changed or rights of an application transferred) |
Owner name: GOOGLE LLC |
|
RIN1 | Information on inventor provided before grant (corrected) |
Inventor name: DUKELLIS, JOHNInventor name: TOKSOZ, TUNA |
|
GRAP | Despatch of communication of intention to grant a patent |
Free format text: ORIGINAL CODE: EPIDOSNIGR1 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: GRANT OF PATENT IS INTENDED |
|
DAV | Request for validation of the european patent (deleted) | ||
DAX | Request for extension of the european patent (deleted) | ||
INTG | Intention to grant announced |
Effective date: 20210415 |
|
GRAS | Grant fee paid |
Free format text: ORIGINAL CODE: EPIDOSNIGR3 |
|
GRAA | (expected) grant |
Free format text: ORIGINAL CODE: 0009210 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: THE PATENT HAS BEEN GRANTED |
|
AK | Designated contracting states |
Kind code of ref document: B1Designated state(s): AL AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HR HU IE IS IT LI LT LU LV MC MK MT NL NO PL PT RO RS SE SI SK SM TR |
|
REG | Reference to a national code |
Ref country code: GBRef legal event code: FG4D |
|
REG | Reference to a national code |
Ref country code: CHRef legal event code: EP |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R096Ref document number: 602018019112Country of ref document: DERef country code: ATRef legal event code: REFRef document number: 1404913Country of ref document: ATKind code of ref document: TEffective date: 20210715 |
|
REG | Reference to a national code |
Ref country code: IERef legal event code: FG4D |
|
REG | Reference to a national code |
Ref country code: LTRef legal event code: MG9D |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: BGFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20210923Ref country code: FIFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20210623Ref country code: LTFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20210623Ref country code: HRFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20210623 |
|
REG | Reference to a national code |
Ref country code: ATRef legal event code: MK05Ref document number: 1404913Country of ref document: ATKind code of ref document: TEffective date: 20210623 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: GRFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20210924Ref country code: LVFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20210623Ref country code: NOFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20210923Ref country code: SEFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20210623Ref country code: RSFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20210623 |
|
REG | Reference to a national code |
Ref country code: NLRef legal event code: MPEffective date: 20210623 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: EEFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20210623Ref country code: ESFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20210623Ref country code: SKFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20210623Ref country code: ROFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20210623Ref country code: NLFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20210623Ref country code: PTFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20211025Ref country code: SMFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20210623Ref country code: CZFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20210623Ref country code: ATFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20210623 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: PLFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20210623 |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R097Ref document number: 602018019112Country of ref document: DE |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: DKFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20210623 |
|
PLBE | No opposition filed within time limit |
Free format text: ORIGINAL CODE: 0009261 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: NO OPPOSITION FILED WITHIN TIME LIMIT |
|
26N | No opposition filed |
Effective date: 20220324 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: ALFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20210623 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: MCFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20210623 |
|
REG | Reference to a national code |
Ref country code: CHRef legal event code: PL |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: LUFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20211102Ref country code: ITFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20210623Ref country code: BEFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20211130 |
|
REG | Reference to a national code |
Ref country code: BERef legal event code: MMEffective date: 20211130 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: IEFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20211102 |
|
P01 | Opt-out of the competence of the unified patent court (upc) registered |
Effective date: 20230510 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: CYFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20210623 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: LIFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20220630Ref country code: HUFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMIT; INVALID AB INITIOEffective date: 20181102Ref country code: CHFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20220630 |
|
PGFP | Annual fee paid to national office [announced via postgrant information from national office to epo] |
Ref country code: GBPayment date: 20231127Year of fee payment: 6 |
|
PGFP | Annual fee paid to national office [announced via postgrant information from national office to epo] |
Ref country code: FRPayment date: 20231127Year of fee payment: 6Ref country code: DEPayment date: 20231129Year of fee payment: 6 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: MKFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20210623 |
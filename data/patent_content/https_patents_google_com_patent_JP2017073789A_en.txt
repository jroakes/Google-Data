JP2017073789A - Privacy preserving knowledge/factor possession tests for persistent authentication - Google Patents
Privacy preserving knowledge/factor possession tests for persistent authentication Download PDFInfo
- Publication number
- JP2017073789A JP2017073789A JP2016211833A JP2016211833A JP2017073789A JP 2017073789 A JP2017073789 A JP 2017073789A JP 2016211833 A JP2016211833 A JP 2016211833A JP 2016211833 A JP2016211833 A JP 2016211833A JP 2017073789 A JP2017073789 A JP 2017073789A
- Authority
- JP
- Japan
- Prior art keywords
- authentication
- hash
- server
- user
- authentication hash
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Granted
Links
- 230000002085 persistent effect Effects 0.000 title description 4
- 238000012360 testing method Methods 0.000 title description 2
- 238000000034 method Methods 0.000 claims abstract description 38
- 230000004044 response Effects 0.000 claims description 22
- 238000004422 calculation algorithm Methods 0.000 claims description 16
- 230000008569 process Effects 0.000 claims description 13
- 238000012790 confirmation Methods 0.000 claims 1
- 238000011084 recovery Methods 0.000 description 24
- 230000006870 function Effects 0.000 description 13
- 238000010586 diagram Methods 0.000 description 8
- 150000003839 salts Chemical class 0.000 description 7
- 238000004891 communication Methods 0.000 description 6
- 238000012545 processing Methods 0.000 description 6
- 230000007246 mechanism Effects 0.000 description 5
- 230000003287 optical effect Effects 0.000 description 4
- 239000007787 solid Substances 0.000 description 3
- 230000009471 action Effects 0.000 description 2
- 230000001413 cellular effect Effects 0.000 description 2
- 238000013461 design Methods 0.000 description 2
- 230000002688 persistence Effects 0.000 description 2
- 238000012549 training Methods 0.000 description 2
- 241001465754 Metazoa Species 0.000 description 1
- 101100217298 Mus musculus Aspm gene Proteins 0.000 description 1
- 230000006399 behavior Effects 0.000 description 1
- 230000005540 biological transmission Effects 0.000 description 1
- 238000004364 calculation method Methods 0.000 description 1
- 230000008859 change Effects 0.000 description 1
- 230000000694 effects Effects 0.000 description 1
- 238000005516 engineering process Methods 0.000 description 1
- 230000003993 interaction Effects 0.000 description 1
- 238000002372 labelling Methods 0.000 description 1
- 238000005259 measurement Methods 0.000 description 1
- 239000002184 metal Substances 0.000 description 1
- 239000013307 optical fiber Substances 0.000 description 1
- 230000008520 organization Effects 0.000 description 1
- 230000000717 retained effect Effects 0.000 description 1
- 230000002441 reversible effect Effects 0.000 description 1
- 230000011273 social behavior Effects 0.000 description 1
- 238000012795 verification Methods 0.000 description 1
- 230000000007 visual effect Effects 0.000 description 1
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F21/00—Security arrangements for protecting computers, components thereof, programs or data against unauthorised activity
- G06F21/30—Authentication, i.e. establishing the identity or authorisation of security principals
- G06F21/31—User authentication
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F21/00—Security arrangements for protecting computers, components thereof, programs or data against unauthorised activity
- G06F21/30—Authentication, i.e. establishing the identity or authorisation of security principals
- G06F21/31—User authentication
- G06F21/40—User authentication by quorum, i.e. whereby two or more security principals are required
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F21/00—Security arrangements for protecting computers, components thereof, programs or data against unauthorised activity
- G06F21/30—Authentication, i.e. establishing the identity or authorisation of security principals
- G06F21/44—Program or device authentication
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L63/00—Network architectures or network communication protocols for network security
- H04L63/04—Network architectures or network communication protocols for network security for providing a confidential data exchange among entities communicating through data packet networks
- H04L63/0407—Network architectures or network communication protocols for network security for providing a confidential data exchange among entities communicating through data packet networks wherein the identity of one or more communicating identities is hidden
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L63/00—Network architectures or network communication protocols for network security
- H04L63/08—Network architectures or network communication protocols for network security for authentication of entities
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L9/00—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols
- H04L9/32—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols including means for verifying the identity or authority of a user of the system or for message authentication, e.g. authorization, entity authentication, data integrity or data verification, non-repudiation, key authentication or verification of credentials
- H04L9/3218—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols including means for verifying the identity or authority of a user of the system or for message authentication, e.g. authorization, entity authentication, data integrity or data verification, non-repudiation, key authentication or verification of credentials using proof of knowledge, e.g. Fiat-Shamir, GQ, Schnorr, ornon-interactive zero-knowledge proofs
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F2221/00—Indexing scheme relating to security arrangements for protecting computers, components thereof, programs or data against unauthorised activity
- G06F2221/21—Indexing scheme relating to G06F21/00 and subgroups addressing additional information or applications relating to security arrangements for protecting computers, components thereof, programs or data against unauthorised activity
- G06F2221/2103—Challenge-response
Abstract
Description
背景
１．技術分野
例示的な実施形態の局面は、永続的認証のためのプライバシー保護検査に関し、より特定的には、プライベートな質問に対する回答がサーバ側で暴露されないように、認証ハッシュまたは他の一方向性の反転しにくい関数を生成し、生成された認証ハッシュに基づいて認証するための装置、方法、およびシステムに関する。
Background 1. TECHNICAL FIELD Aspects of exemplary embodiments relate to privacy protection checks for persistent authentication, and more specifically, authentication hashes or other unidirectionalities so that answers to private questions are not exposed on the server side. The present invention relates to an apparatus, a method, and a system for generating a function that is difficult to reverse, and authenticating based on the generated authentication hash.
２．関連技術
アクセスのための、およびアカウントの回復のためのユーザの認証プロセス中のさまざまな状況において、ユーザが自分の身元を証明しなければならない場合がある。認証、または認証のための代替的方法（たとえば、故障許容／回復）を容易にするために、ユーザは、因子（ファクター：factor）（たとえば、ユーザの生活および趣味に特有の質問への回答）を、アクセスを保持するサーバ（たとえば、アカウントプロバイダ）に登録する。回答を含む、ユーザによる登録は、プライベートなユーザ情報をサーバに暴露するおそれがある。悪意のある第三者による、サーバへの不正アクセスは、プライベートなユーザ情報をその悪意のある第三者に暴露するおそれがある。たとえば、その第三者（たとえば、サーバ組織のインサイダー、もしくはアウトサイダーまたはフィッシング攻撃者）は、同様の回答を必要とし得る他のまたは同じアカウントプロバイダで登録された回答を利用して、そのユーザになりすますおそれがある。
2. Related Art In various situations during a user's authentication process for access and for account recovery, the user may have to prove their identity. To facilitate authentication, or alternative methods for authentication (eg, fault tolerance / recovery), the user can use a factor (eg, answer questions specific to the user's life and hobbies). Are registered with a server (eg, an account provider) that retains access. Registration by the user, including answers, may expose private user information to the server. Unauthorized access to the server by a malicious third party can expose private user information to the malicious third party. For example, the third party (for example, an insider of a server organization, or an outsider or phishing attacker) impersonates the user using answers registered with other or the same account provider that may require similar answers There is a fear.
認証のために、ユーザが質問に回答すること（または、生体計測情報、システム外部に格納された所有された情報といった他のプライベートな因子を提供すること）を可能にしつつ、プライバシー上の理由により、ユーザからの情報を検証するサーバに個人情報を保持させないようにするという要望が存在する。 For privacy reasons, allowing users to answer questions (or provide other private factors such as biometric information, proprietary information stored outside the system) for authentication There is a desire to prevent a server that verifies information from a user from holding personal information.
概要
本願の局面は、プロセッサを伴う装置であって、プロセッサは、複数の質問への複数の応答から複数のハッシュを生成し、認証ハッシュを、複数のハッシュの多項式補間と、複数の質問のうちの選択されたグループに基づいて認証ハッシュを形成するための、複数のハッシュのうちの１つ以上の選択との少なくとも一方から生成し、認証ハッシュを用いて認証するように構成されている、装置を含み得る。
Overview An aspect of the present application is an apparatus that includes a processor, wherein the processor generates a plurality of hashes from a plurality of responses to a plurality of questions, generates an authentication hash, a polynomial interpolation of the plurality of hashes, and a plurality of questions. An apparatus configured to generate from at least one of a plurality of hashes and to authenticate using an authentication hash to form an authentication hash based on a selected group of Can be included.
本願の局面はさらに、プロセスを実行するための命令を格納する、コンピュータ読取可能記憶媒体を含む。命令は、複数の質問への複数の応答から複数のハッシュを生成することと、認証ハッシュを、複数のハッシュの多項式補間と、複数の質問のうちの選択されたグループに基づいて認証ハッシュを形成するための、複数のハッシュのうちの１つ以上の選択との少なくとも一方から生成することと、認証ハッシュを用いて認証することとを伴い得る。 Aspects of the present application further include a computer readable storage medium that stores instructions for performing the process. The instruction generates multiple hashes from multiple responses to multiple questions, forms an authentication hash based on the authentication hash, polynomial interpolation of multiple hashes, and a selected group of multiple questions To generate from at least one of one or more selections of a plurality of hashes and to authenticate using an authentication hash.
本願の局面はさらに、プロセッサを含み得るサーバであって、プロセッサは、複数の質問を送信し、送信された複数の質問に応答した認証ハッシュが秘密認証ハッシュと整合する場合には、アクセスを許可し、認証ハッシュが秘密認証ハッシュと整合しない場合には、アクセスを拒否するように構成されており、認証ハッシュは、複数のハッシュの多項式
補間と、複数の質問のうちの選択されたグループに基づいて認証ハッシュを形成するための、複数のハッシュのうちの１つ以上の選択との少なくとも一方から生成される。
An aspect of the present application may further include a server that may include a processor that transmits multiple queries and grants access if an authentication hash in response to the transmitted multiple queries matches a secret authentication hash. If the authentication hash does not match the secret authentication hash, it is configured to deny access, and the authentication hash is based on polynomial interpolation of multiple hashes and a selected group of multiple questions. Are generated from at least one of a plurality of hashes selected to form an authentication hash.
詳細な説明
ここに説明される主題は、例示的な実現化例によって教示される。明確にするために、および主題を不明瞭にしないようにするために、さまざまな詳細が省略されている。以下に示す例は、プライバシー保護を有するキャンペーンパフォーマンスの測定を実現するための構造および機能に向けられている。例示的な実現化例の局面は、たとえば、電子商取引、情報共有、プライバシー保護方法、符号化および暗号化手法、トランザクションシステム、個人情報共有、および、セキュアなコンピューティングに関し得る。しかしながら、例示的な実現化例はそれらに限定されておらず、この発明の概念の範囲から逸脱することなく他の分野に適用されてもよい。
DETAILED DESCRIPTION The subject matter described herein is taught by an example implementation. Various details have been omitted for clarity and to avoid obscuring the subject matter. The examples shown below are directed to structures and functions for realizing measurement of campaign performance with privacy protection. Aspects of exemplary implementations may relate to, for example, electronic commerce, information sharing, privacy protection methods, encoding and encryption techniques, transaction systems, personal information sharing, and secure computing. However, the exemplary implementations are not so limited and may be applied to other fields without departing from the scope of the inventive concept.
ここに説明される例示的な実現化例は、サーバ（またはサーバの情報を有する誰か）がプライベートな回答を推定できるようにする情報をサーバ側で暴露しない、ユーザのプライベートな因子に基づいた認証に向けられている。例示的な実現化例では、ユーザは認証因子を用いて質問票に回答し、回答は一方向性のやり方で変換され、変換された回答はサーバ側に提供される。これは、ユーザのプライバシーを保護しつつ、サーバがサーバに情報を登録した元のユーザを認証できるようにする。 The exemplary implementation described herein provides authentication based on a user's private factor that does not reveal information on the server side that allows the server (or someone with server information) to infer a private answer. Is directed to. In an exemplary implementation, a user responds to a questionnaire using an authentication factor, the answers are transformed in a unidirectional manner, and the transformed answers are provided to the server side. This allows the server to authenticate the original user who registered the information with the server while protecting the user's privacy.
例示的な実現化例は、十分なエントロピー（たとえば文字列）を有する複数の因子が、ユーザ装置上で一方向性（たとえば暗号学的ハッシュ）関数の下でともに変換されるようにすること、および、変換された値を登録時にサーバに送信することに向けられている。認証セッションで、ユーザは再度回答を求められ、それらの回答は上述のものと同様のやり方で装置によって変換され、サーバに送信される。サーバは次に、一方向性で変換された回答を、登録された情報と比較する。以下の説明は、例示的な実現化例で使用される機構を概説する、より詳細なプログラム／プロトコルに向けられている。 An exemplary implementation is to allow multiple factors with sufficient entropy (eg, a string) to be transformed together under a one-way (eg, cryptographic hash) function on the user device, And it is directed to sending the converted value to the server at the time of registration. In the authentication session, the user is again asked for answers, which are converted by the device and sent to the server in a manner similar to that described above. The server then compares the unidirectionally converted answer with the registered information. The following description is directed to a more detailed program / protocol that outlines the mechanisms used in an exemplary implementation.
例示的な実現化例についてのプロトコルエンティティは、ユーザ、ユーザ装置、およびサーバを含んでいてもよい。明確にするために、プロトコルパラメータはｎ、ｔ、ｒおよびｍとして表わされ、それらについて以下に説明する。 The protocol entities for the example implementation may include users, user equipment, and servers. For clarity, the protocol parameters are represented as n, t, r, and m, which are described below.
例示的なプロトコル環境では、以下に説明されるような、考慮すべきいくつかの局面がある。 In an exemplary protocol environment, there are several aspects to consider, as described below.
プライベートな登録情報：ユーザは、個人情報のｎ個のラベル付き文字列を有する。こ
れは、ユーザが知っていて思い出しそうな何か、または、ユーザが所持または所有する因子であり得る。例示的な実現化例では、初期登録は、たとえば、ユーザに関連付けられた装置（たとえば、ユーザの電話、および代替的電子メールなどのユーザに関連付けられたアカウント、または友人のアカウント）に送信された受領通知をユーザが受信し、応答した後で、有効になり得る。
Private registration information: The user has n labeled character strings of personal information. This can be something the user knows and seems to recall, or a factor that the user possesses or owns. In an exemplary implementation, the initial registration was sent, for example, to a device associated with the user (eg, an account associated with the user, such as the user's phone, and alternative email, or a friend's account) It can become valid after the user receives and responds to the receipt notification.
プライベートでないラベリング：文字列のラベル、フォーマット、おそらくはヒント、および順序は、プライベートではない。 Non-private labeling: String labels, formats, and possibly hints, and order are not private.
永続性：いかなる時も、ユーザは、少なくともｎ−ｔ個の文字列を知っている。すなわち、ユーザはｎ個の文字列を登録したかもしれないが、それらのすべてを常に思い出すとは仮定できず、それらのうちのｔ個を忘れるかもしれない。このため、ユーザは、文字列のうちのｎ−ｔ個についての何らかのしきい値を知っていることが必要とされる。なお、必要とされるレベルは、認証セッションごとにサーバによって調整可能である。 Persistence: At any time, the user knows at least nt strings. That is, the user may have registered n strings, but cannot assume that he will always remember all of them, and may forget t of them. For this reason, the user is required to know some threshold value for n−t of character strings. The required level can be adjusted by the server for each authentication session.
ユーザ装置：ユーザは、データのセキュアな入力、計算、データの消去、データの保存、およびデータの出力が可能な装置へのアクセスを有する。装置は、ユーザの制御下にある（たとえば、それはフィッシング不可である）。これは、ウェブに接続されていないスマートフォンまたはソフトウェア要素であり得る。 User device: The user has access to a device that can securely input data, calculate, erase data, store data, and output data. The device is under user control (eg, it is not phishing). This can be a smartphone or software element that is not connected to the web.
装置の部分的完全性：装置は正確に動作する（特に、要求された場合、データは永続的に消去される）が、失われる／盗まれるかもしれない。 Partial integrity of the device: The device works correctly (especially if requested, data is permanently erased), but may be lost / stolen.
サーバの完全性：サーバは正確に動作し、データを決して失わない。なぜなら、サーバはユーザを認証することに関与しているためである。また、サーバで長期間格納されたデータは、攻撃者らがユーザになりすますことを可能にするデータを含んでいない。 Server integrity: The server works correctly and never loses data. This is because the server is involved in authenticating the user. Also, data stored on the server for a long time does not include data that allows attackers to impersonate users.
セットアップ：セットアップ中、装置およびサーバは、情報をセキュアに交換できる。
例示的なプロトコル環境はまた、以下のようないくつかの要件を含み得る。
Setup: During setup, devices and servers can exchange information securely.
An exemplary protocol environment may also include several requirements such as:
プライバシー：プライベートな文字列のうちのｒ個について知っていると仮定すると、サーバ上、装置上の情報、またはサーバと装置との間で交換された情報は、残りのｎ−ｒ個の文字列のうちのいずれかを暴露するのに、または、残りのｎ−ｒ個の文字列のうちのいずれかを最初よりも良好に推測するのに実質的に不十分であるはずである。 Privacy: Assuming you know about r of the private strings, the information on the server, on the device, or information exchanged between the server and the device is the remaining nr strings Should be substantially insufficient to expose any of the above, or to guess any of the remaining nr strings better than the first.
真正性：いかなる時も、ユーザは、ユーザが入力文字列のうちの少なくともｎ−ｔ個（ｎ−ｔはｒよりもはるかに大きい）を知っているということを（装置を用いて）サーバに証明することができる。この真正性動作は動作の好結果を決定し、サーバは、さまざまな認証セッションにおいて、必要とされるしきい値ｎ−ｔをおそらく動的に変化させてもよい。 Authenticity: At any time, the user knows (using the device) that the user knows at least nt of the input string (where nt is much greater than r). Can prove. This authenticity action determines the success of the action, and the server may possibly dynamically change the required threshold nt in various authentication sessions.
セキュリティ：サーバ上、ユーザによって使用されていない装置上の情報、またはサーバと装置との間で交換された情報は、最初に登録した元のユーザでないかもしれないユーザを認証するために使用するのに実質的に不十分であるはずである。 Security: Information on the server, information on the device not used by the user, or information exchanged between the server and the device is used to authenticate a user who may not be the original user who originally registered Should be substantially insufficient.
例示的なプロトコル環境は、さまざまなプロトコルを採用してもよい。たとえば、さまざまな因子をセットアップするために、因子登録が行なわれてもよい。因子登録は、ランダム化、作表、回答および生成を伴っていてもよい。 An exemplary protocol environment may employ various protocols. For example, factor registration may be performed to set up various factors. Factor registration may involve randomization, tabulation, response and generation.
因子登録のランダム化局面では、装置およびサーバは、乱数発生器または他の方法を用
いて、ランダム性を共同で生成してもよい。例示的な一実現化例では、サーバは、長いランダム（秘密でない）ソルト（salt）Ｒｓを装置に提供する。ユーザは、長いランダム（秘密でない）ソルトＲｕを生成し、ＲｓおよびＲｕを装置に入力してもよい。装置は、長いランダム（秘密でない）ソルトＲｄを生成し、３つのランダムソルトすべてを単一のランダムソルトＲへと連結する（ソルトＲは、さらなるインタラクションにおいてサーバによって採用されるべき因子であってもよい）。
In the randomization aspect of factor registration, the device and server may jointly generate randomness using a random number generator or other method. In one exemplary implementation, the server provides the device with a long random (non-secret) salt Rs. The user may generate a long random (non-secret) salt Ru and enter Rs and Ru into the device. The device generates a long random (non-secret) salt Rd and concatenates all three random salts into a single random salt R (even if the salt R is a factor to be adopted by the server in further interaction). Good).
因子登録の作表局面では、ラベル提供が行なわれてもよい。サーバはユーザに、１組の文字列ラベルと、各文字列のそれぞれの可能なフォーマットと、ユーザによって採用されるべき１組の基準「ヒント」とを提供する。ラベルとは、ユーザがある文字列において所与のフォーマットで値を提供する、変数である。ユーザは、質問票を規定するために、提供された順序付けられた一組のラベルからｎ個のラベルを選択してもよい。例示的な実現化例では、質問票におけるいくつかの要素は必ずしも「知っている何か」というタイプのものではないかもしれず、他のタイプの情報（たとえば、生体計測、カスタマイズされた質問など）が同様に使用可能である。 Labels may be provided during the tabulation phase of factor registration. The server provides the user with a set of string labels, each possible format for each string, and a set of criteria “hints” to be adopted by the user. A label is a variable that provides a value in a given format in a string. The user may select n labels from the ordered set of labels provided to define the questionnaire. In an exemplary implementation, some elements in the questionnaire may not necessarily be of the “something you know” type, but other types of information (eg, biometrics, customized questions, etc.) Can be used as well.
因子登録の回答局面では、ユーザは、質問票の回答をｎ個の文字列として提供する。ユーザは、プロセスの一環として回答を繰り返すよう、システムによって訓練され得る（たとえば、ユーザは２度質問され、システムは回答のユーザ記憶を増加させるための手法を採用するなど）。回答は装置に移動され得る。 In the answer phase of factor registration, the user provides the answer to the questionnaire as n character strings. The user can be trained by the system to repeat the answer as part of the process (eg, the user is queried twice, the system employs a technique for increasing the user memory of the answer, etc.). The answer can be moved to the device.
質問票は、所望の実現化例に依存して、秘密のままにしておいたり、または、オープンである（たとえば、サーバがそれに対する直接的な回答を知っている）他の方法と混合されることができる。たとえば、質問票は、（たとえば、唯一の方法であるというよりはむしろ、識別についてのクレームの機能を高めるように）他の認証方法と組合せて使用することができる。たとえば、この組合せは、他の方法の失敗時、他の方法を用いた何らかの最初の成功後、他の方法が使用される前、ユーザがすでに認証されているもののさらに高感度のアクセス／行動を要求する場合のみ、使用可能である。 Questionnaires can be kept secret or mixed with other methods that are open (eg, the server knows the direct answer to it), depending on the desired implementation be able to. For example, questionnaires can be used in combination with other authentication methods (eg, to enhance the capabilities of claims about identification rather than being the only method). For example, this combination can provide more sensitive access / behavior for other methods that fail, after some initial success with other methods, but before the other methods are used, even though the user has already been authenticated. It can be used only when requested.
因子登録の因子生成局面では、システムは、回答に基づいて、およびアルゴリズムを利用することによって、思い出すべき因子を生成する。アルゴリズムを初期化するために、装置にはｎ個のユーザ秘密ｕ＿１、…、ｕ＿ｎが与えられ、ｕ＿ｉ＝質問ｑ＿ｉおよび回答ａ＿ｉである。装置はｎ個の秘密ｓ＿１、…、ｓ＿ｎを生成し、それらは、ｑ＿ｉのハッシングまたは一方向性関数である。ｓ＿ｉ＝ＨＡＳＨ（ａ＿ｉ，Ｒ）。装置は、ｉ＝１、ｎについての点（ｑ＿ｉ，ｓ＿ｉ）から、平面におけるすべての点を通過するｎ−１次の多項式Ｐを、補間によって有限体上に生成することができる。ｑ＿ｉおよびｓ＿ｉの各々は有限体において解釈され、たとえばハッシュは、サイズが２５６ビットの素数を法として、その素数によって規定された有限体における要素として解釈された、２５６ビットの文字列であってもよく、ハッシングを介して生成されたｑ＿１およびｓ＿ｉは、有限体にＸおよびＹ座標を有するデカルト平面に位置する点として見ることができる、ランダムに見える点にマッピングされるであろう。有限体、素数、および多項式補間は、当業者にとって基本的な概念である。秘密ｓは、０での多項式の値であり（すなわち、Ｐ（０）＝ｓ）、シリアルナンバーとともにサーバで登録することができる。加えて、点（１，Ｐ（１））、（２，Ｐ（２））、…（ｋ，Ｐ（ｋ））といった、多項式上の追加のｋ＝２ｔ個の点が、これらは補間で元々使用された点ではないと仮定して送信され、サーバで登録される。これは、将来の認証においてユーザが間違っていること、または、ｎ個の文字列から可能なｔを省略することを可能にするｉである。多項式Ｐは（ｎ個の点によって生成されたため）ｎ−１次を有しており、点（ｏ，Ｐ（０））である秘密と追加されたｋ個の点との登録は、ｋ＋１がｎよりも小さくなるべきであり、このｋ＋１個の点の知識はサーバに多項式の特性を与えない。たとえば、将来１５個の回答しか必要としないというしきい
値を保有しつつ、ユーザが回答すべき２０個の因子について尋ねられる場合、秘密に加えて１０個の点がサーバに送信される。ユーザが将来認証される（例示的な一実現化例として以下に説明する）と、ユーザは因子を再度送信し、追加された１０個の点は多項式の表現に追加され、これらの点を含むノイズのある補間がユーザによって試みられ得る。攻撃者がなりすましを試みる場合、攻撃者の知識は常に１０個の点よりも少ないであろう。なぜなら、因子は、因子についてのユーザ知識および所有を表わすように注意深く選択されたためである。このため、サーバによって送信された点、およびなりすましを試みる者の知識は、多項式Ｐを復元するために利用可能な点を補間できないであろう。
In the factor generation aspect of factor registration, the system generates factors to remember based on answers and by using algorithms. In order to initialize the algorithm, the device is given n user secrets u_1,..., U_n, u_i = question q_i and answer a_i. The device generates n secrets s_1,..., S_n, which is a hashing or one-way function of q_i. s_i = HASH (a_i, R). From the point (q_i, s_i) for i = 1, n, the apparatus can generate an n−1 order polynomial P passing through all points in the plane on the finite field by interpolation. Each of q_i and s_i is interpreted in a finite field. For example, a hash is a 256-bit string interpreted as an element in a finite field defined by a prime number modulo a 256-bit prime number. Well, q_1 and s_i generated through hashing will be mapped to randomly appearing points that can be seen as points located in a Cartesian plane with X and Y coordinates in a finite field. Finite fields, prime numbers, and polynomial interpolation are basic concepts for those skilled in the art. The secret s is a polynomial value at 0 (ie, P (0) = s) and can be registered with the server along with the serial number. In addition, additional k = 2t points on the polynomial, such as points (1, P (1)), (2, P (2)),... (K, P (k)), which are interpolated Sent on the assumption that it was not originally used, and registered at the server. This is an i that allows the user to be wrong in future authentications or omit possible t from n strings. The polynomial P has n−1 orders (since it was generated by n points), and the registration of the secret that is the point (o, P (0)) and the added k points is k + 1 Should be less than n, this knowledge of k + 1 points does not give the server the properties of a polynomial. For example, if the user is asked about 20 factors to answer while holding a threshold that only 15 answers will be needed in the future, 10 points in addition to the secret are sent to the server. When the user is authenticated in the future (described below as an illustrative implementation), the user retransmits the factor, and the 10 added points are added to the polynomial representation and include these points. Noisy interpolation can be attempted by the user. If an attacker attempts to impersonate, the attacker's knowledge will always be less than 10 points. This is because the factors have been carefully selected to represent user knowledge and ownership of the factors. For this reason, the points sent by the server and the knowledge of those attempting to impersonate will not be able to interpolate the points available to restore the polynomial P.
別の例示的な実現化例では、ｓ自体ではなくＨＡＳＨ（ｓ）がローカルに維持される。所望の実現化例に依存して、他の情報が装置によって削除または維持されてもよく、もしくは、ｋ個の点がサーバで維持されてもよい。たとえば、他の情報を消去すると、ユーザは、認証時に情報を再度入力しなければならず、一方、情報を維持することは、装置の所有を証明する際に使用可能である。ＨＡＳＨは、任意の一方向性関数、暗号学的ハッシュアルゴリズム、もしくは、暗号文書でのべき乗剰余について知られているような、ある有限体または別の代数構造上の発生器を有するべき乗であってもよい。ｓではなくＨＡＳＨ（ｓ）をサーバで保持することは、サーバに侵入する攻撃者らがｓ自体を学習することを防止する。 In another exemplary implementation, HASH (s) is maintained locally rather than s itself. Depending on the desired implementation, other information may be deleted or maintained by the device, or k points may be maintained at the server. For example, if other information is erased, the user must re-enter the information upon authentication, while maintaining the information can be used in proving ownership of the device. HASH is a power that has a generator on one finite field or another algebraic structure, as is known for any one-way function, cryptographic hash algorithm, or power residue in a cipher document. Also good. Holding HASH (s) instead of s at the server prevents attackers entering the server from learning s itself.
例示的な一実現化例では、認証セッションが、以下に説明されるように採用されてもよい。認証セッションは、因子のさまざまな使用モードを含んでいてもよい。第１のモードでは、装置は利用可能であり、ユーザは装置へのアクセスを有しており、秘密ｓは削除されなかった。第１のモードで、装置は次に、ハッシュのシリアルナンバーをサーバに通知し、セキュアプロトコルを使用することによって秘密についての知識を証明する。 In one exemplary implementation, an authentication session may be employed as described below. An authentication session may include various modes of use of factors. In the first mode, the device is available, the user has access to the device, and the secret s has not been deleted. In the first mode, the device then informs the server of the hash serial number and proves knowledge of the secret by using a secure protocol.
第２の使用モードでは、サーバ、ユーザ、および装置（または別の装置）が協力し合って、ハッシュのうちの１つを生成する。サーバはユーザに、ｎ個のラベル（質問）とそれらのフォーマットとを送信する。次に、サーバは装置に、ｎ個のラベルとソルトＲとを送信する。ユーザは装置に回答ａ＿ｉを入力する。サーバは、ｋ個の追加点（１，Ｐ（１））、…（ｋ，Ｐ（ｋ））も送信する。ノイズのある補間アルゴリズム（たとえば、バーレカンプ・ウェルチ（Berlekamp Welch）、グルスワミ・スーダン（Guruswami−Sudan）な
ど）を使用して、装置は多項式を計算し、回答のしきい値が正しい場合（たとえば、上述の２０個中１５個の例でのような２／３、半分など）、ノイズのある補間アルゴリズムはｓを生成する。装置がＨＡＳＨ（ｓ）を有する場合、生成されたｓは、正しいかどうかチェックを受けることができ、また、ユーザに新しい回答を求めてもよい（たとえば、正しくない場合、初期化などについて）。結果として生じるｓはサーバに送信され、サーバはユーザを認証し、またはそれに代えて、ユーザの装置は、サーバに送信されるＨＡＳＨ（ｓ）に基づいてｓの所有を証明し、この目的を達成するために、当該技術分野で公知のゼロ知識プロトコルまたはチャレンジ応答プロトコルを利用することができる。
In the second usage mode, the server, user, and device (or another device) cooperate to generate one of the hashes. The server sends n labels (questions) and their formats to the user. Next, the server sends n labels and salt R to the device. The user inputs an answer a_i to the device. The server also sends k additional points (1, P (1)), ... (k, P (k)). Using a noisy interpolation algorithm (eg Berlekamp Welch, Guruswami-Sudan, etc.), the device calculates the polynomial and the answer threshold is correct (eg A noisy interpolation algorithm produces s (2/3, half, etc. as in 15 of 20 examples). If the device has HASH (s), the generated s can be checked for correctness and the user may be asked for a new answer (eg, if not correct, for initialization, etc.). The resulting s is sent to the server and the server authenticates the user, or alternatively, the user's device proves ownership of s based on HASH (s) sent to the server and achieves this purpose To do so, a zero knowledge protocol or challenge response protocol known in the art can be utilized.
ノイズのある補間アルゴリズムについての点のうちの１つが（たとえば、サーバまたはローカルソフトウェアによって付与された）ランダマイザである場合には、結果として生じる因子はランダム化される（すなわち、ユーザの回答から独立している）。たとえば、まず、バーレカンプ・ウェルチのノイズのある補間アルゴリズムからの２／３という範囲が、サーバにいくつかの点を付与させることによって調整可能であると仮定する。より高いしきい値が所望される場合には、サーバは（多項式上にない）エラー点を付与することができる。したがって、所望のしきい値がたとえば１８個中１６個（１６／１８）の点であり、バーレカンプ・ウェルチのノイズのある補間アルゴリズムが採用されている場合、２４個中１６個（１６／２４）の点が正しくなるように、サーバまたは装置のいずれかによって６つのエラーが導入でき、それによりバーレカンプ・ウェルチのしきい値を満たす
。別の例では、実現されたしきい値が、回答の半分のみが正しいことを必要とする場合には、サーバまたは装置によって「良好な多項式点」が導入できる。たとえば、１８個中１０個（１０／１８）（質問の半分以上が正しい）が十分であると考えられる場合、結果が１６／２４になるように６個の良好な点を導入でき、それは２／３というバーレカンプ・ウェルチのしきい値を満たす。必要とされるしきい値の調整は、認証セッションごとに変わり得る。
If one of the points for the noisy interpolation algorithm is a randomizer (eg, granted by a server or local software), the resulting factor is randomized (ie, independent of the user's answer). ing). For example, suppose first that the 2/3 range from the Berlekamp Welch noisy interpolation algorithm can be adjusted by letting the server give some points. If a higher threshold is desired, the server can give an error point (not on the polynomial). Thus, if the desired threshold is, for example, 16 out of 18 (16/18) points and a noisy interpolation algorithm of Balecamp Welch is employed, 16 out of 24 (16/24) 6 errors can be introduced by either the server or the device so that the points are correct, thereby meeting the Balecamp Welch threshold. In another example, a “good polynomial point” can be introduced by a server or device if the realized threshold requires that only half of the answers are correct. For example, if 10 out of 18 (10/18) (more than half of the questions are correct) is considered sufficient, 6 good points can be introduced so that the result is 16/24, which is 2 The Balecamp Welch threshold of / 3 is met. The required threshold adjustment may vary from authentication session to authentication session.
選択された情報は非常にプライベートなものであるため、ユーザは、情報のほとんどすべてを思い出せるはずである。複雑性は、有限体における多項式の評価の複雑性である。 Since the selected information is very private, the user should be able to remember almost all of the information. Complexity is the complexity of evaluating polynomials in a finite field.
文字列は非常にプライベートなものであり得、必要とされる場合にユーザがそれらのほとんどを思い出せることを確実にする秘密情報を伴い得る。例は、所望の実現化例に依存して、兄弟、子供、配偶者、両親、祖父母、友人の名前、自分および親類のアドレス、アカウント名および／または番号、雇い主などの名前を含む。文字列についての選択基準は、必要とされる場合にユーザが回答を再作成できるようなものであるべきである。データの量および可変性は、十分な文字列が攻撃者に決して知られず、そのため、サーバからの追加点を有していても、攻撃者は良好な補間点を生成できず、多項式が攻撃者にとって秘密のままである、といったものであるべきである。 The strings can be very private and can be accompanied by secret information that ensures that the user can remember most of them when needed. Examples include names such as siblings, children, spouses, parents, grandparents, friend names, self and relative addresses, account names and / or numbers, employers, etc., depending on the desired implementation. The selection criteria for the string should be such that the user can recreate the answer if needed. The amount and variability of the data is such that enough strings are never known to the attacker, so even if they have additional points from the server, the attacker cannot generate a good interpolation point and the polynomial is It should be a secret for you.
例示的な実現化例では、いくつかのセキュリティレベルも導入可能である。たとえば、文字列のラベル、フォーマット化および順序は、それら自体が、基本的で思い出しやすいいくつかの文字列（たとえば、ユーザのパスワード）によって保護されてもよい。 In the exemplary implementation, several security levels can also be introduced. For example, string labels, formatting and ordering may themselves be protected by some string that is basic and easy to remember (eg, a user's password).
アカウント回復および乗取り犯によって乗取られたアカウントの解除の目的のために、回復プロセスのために使用され、以下の特性を有する認証因子が採用されるべきである。 For the purposes of account recovery and cancellation of accounts taken over by hijackers, an authentication factor used for the recovery process and having the following characteristics should be employed.
永続的である：ユーザにとって常に利用可能である。ユーザは、因子を含む物理的対象を失っても、または（たとえば乗取りによって）自分のアカウントを失っても、それを失うことができない（もしくは、それを再作成することができる）。 Persistent: always available to the user. A user cannot lose (or can recreate it) if he loses a physical object containing the factor or loses his account (eg, by takeover).
偽造不可である：アカウントまたは個人ユーザ情報へのアクセスが与えられた場合でも、実質的に推測できない。ランダム攻撃者らおよびユーザの仲間双方に対して、偽造不可であるべきである。 Cannot be counterfeited: even if access is given to account or personal user information, it is virtually impossible to guess. It should not be counterfeitable against both random attackers and fellow users.
プライベートである：アカウントプロバイダまたは攻撃者に個人データを暴露しない。
可用性を有する：特殊用途装置を用いない汎用ソフトウェアシステムにおいて実現可能である。
Private: Do not expose personal data to account providers or attackers.
Has availability: can be implemented in a general-purpose software system that does not use special purpose devices.
因子を選択するための検討事項がいくつかある。たとえば、永続的因子が「ユーザが有する何か」である場合、ユーザはその因子を失うかもしれず、または、その因子は攻撃者の手に渡るかもしれない。永続的因子が「ユーザが知っている何か」である場合、その因子は、チェックするシステムにとってプライベートなものではないかもしれず、ユーザはその因子を忘れるかもしれない。永続的因子が「ユーザの状態である何か」である場合、その因子は人間の何らかの特徴認識（生体計測装置など）を必要とし、容易には利用できないかもしれず、また、個人情報をプロバイダに暴露するかもしれない。 There are several considerations for selecting factors. For example, if the permanent factor is “something the user has”, the user may lose that factor, or the factor may be in the hands of the attacker. If the permanent factor is “something the user knows”, the factor may not be private to the checking system, and the user may forget the factor. If the permanent factor is "something that is the user's condition", the factor may require some human feature recognition (such as a biometric device) and may not be readily available, and it may provide personal information to the provider. May be exposed.
例示的な実現化例では、永続的因子はユーザの知識（「知っている何か」）に基づいて利用されており、また、ユーザが所有する何かに基づいていてもよい。そのような要件は、既存の状況の多くでは、満たすことが困難かもしれない。したがって、例示的な実現化例は、ユーザが多くの基本的質問を確実に思い出せると仮定し、回答を暗号演算と関わら
せて、ユーザの知識に基づいた解決策を伴い得る。
In an exemplary implementation, the persistence factor is utilized based on the user's knowledge (“something you know”) and may be based on something the user owns. Such requirements may be difficult to meet in many existing situations. Thus, an exemplary implementation may involve a solution based on the user's knowledge, assuming that the user can reliably recall many basic questions, and relating the answers to cryptographic operations.
自分および他人の知識：例示的な実現化例は「ユーザの知識」に基づくものとして提示されているが、その知識は、受託者および他のソースからリアルタイムで取得可能であり、知識の蓄積は、ユーザの個人的な知識および受託者へのユーザアクセスを表わし得る。受託者は、ユーザについての知識の一部を表わし、必要とされる因子をユーザが生成することを助けることができる。 Self and others' knowledge: An example implementation is presented as being based on "user knowledge", but that knowledge can be obtained in real time from trustees and other sources, May represent the user's personal knowledge and user access to the trustee. The trustee represents a piece of knowledge about the user and can help the user generate the required factors.
例示的な実現化例は、アカウントへのアクセスの緊急回復のための基本的プロセスを伴い得るが、プライバシーと真正性とのバランスを取って有用性を考慮に入れる一般的な認証方法としても実現可能である（たとえば、因子が必要とされる場合にユーザを訓練するユーザトレーニングおよびユーザインターフェイス）。 An example implementation may involve a basic process for emergency recovery of account access, but also as a general authentication method that balances privacy and authenticity and considers usefulness Possible (eg, user training and user interface to train a user when factors are needed).
ユーザがインターネットアカウントプロバイダから有するアカウントは、ユーザが自分の電子メール、電子支払い、個人のコンテンツなどをアカウントに保持するにつれて、重要性が高まっている。これらのアカウントは主要な個人リソースであり、攻撃者らの影響を受けやすい。例示的な実現化例は、ユーザは常に利用可能であるが攻撃者は決して利用できない永続的認証因子をユーザが有する場合に、ユーザが、乗取り犯には不可能なやり方でアカウントを保有し、再クレームすることができるようなシステムおよび方法に向けられている。そのような因子を近似することは、回復プロセスを緩和し得る。 Accounts that users have from Internet account providers are becoming increasingly important as they keep their emails, electronic payments, personal content, etc. in their accounts. These accounts are a major personal resource and are susceptible to attackers. An exemplary implementation is that if a user has a permanent authentication factor that is always available to the user but never available to an attacker, the user holds an account in a manner that is impossible for a hijacker. Is directed to such a system and method that can be reclaimed. Approximating such factors can mitigate the recovery process.
関連技術では、電子メールアカウントなどのアカウントが乗取られると、攻撃者はアカウントの状態を有し、ユーザである悪意のないアカウント保持者による回復がより困難になるようにアカウントを操作できる、ということは事実である。攻撃者はまた、アカウントに格納されたすべてのデータから学習することができる。例示的な実現化例はしたがって、アカウントへのアクセスを有することから推論できない機構を利用する。同様に、それらの機構は、アカウントが利用できない場合（たとえば、乗取られた場合）にそれらが失われない、といったものであるべきである。回復が次に、永続的因子の保持者によって支配される。 According to related technology, if an account such as an email account is taken over, the attacker has the account state and can manipulate the account so that it is more difficult for a non-malicious account holder to recover. That is true. The attacker can also learn from all the data stored in the account. The exemplary implementation therefore utilizes a mechanism that cannot be inferred from having access to an account. Similarly, those mechanisms should be such that they are not lost if accounts are not available (eg, hijacked). Recovery is then dominated by holders of permanent factors.
例示的な実現化例は、ユーザの知識、または、必要とされる場合にユーザが再作成できる知識の高エントロピーソースを採用する。この目的のために、兄弟、子供、配偶者、両親、祖父母、友人の名前、自分および親類のアドレス、アカウント名および／または番号、雇い主の名前などの、非常にプライベートな大量のユーザ情報が利用される。この情報は、必要とされる場合にユーザが回答を再作成できるようなものであるべきであり、データの量および可変性は、十分なビットが攻撃者に決して知られないようなものである。同様に、生体計測読取りまたは銀行サーバなどの受託者へのアクセスといった他の因子も、攻撃者に知られずに、組合わされると仮定される。 An exemplary implementation employs a high entropy source of user knowledge or knowledge that the user can recreate when needed. A large amount of very private user information is used for this purpose, such as siblings, children, spouses, parents, grandparents, friend names, self and relative addresses, account names and / or numbers, employer names, etc. Is done. This information should be such that the user can recreate the answer when needed, and the amount and variability of the data is such that enough bits are never known to the attacker . Similarly, other factors such as biometric reading or access to a trustee such as a bank server are assumed to be combined without the attacker knowing.
別の例示的な実現化例では、因子は、生成のための、および因子をチェックするための入力、処理および出力を有するプロセスによって生成可能である。このプロセスは、各々役割を有する、ユーザー入力、システム入力、および暗号演算を伴い得る。 In another exemplary implementation, the factors can be generated by a process having inputs, processing, and outputs for generation and for checking the factors. This process may involve user input, system input, and cryptographic operations, each having a role.
入力は、ユーザが尋ねられるＱ１、Ｑ２、Ｑ３などの質問と、Ａ１、Ａ２、Ａ３などの回答との組といった、知識の高エントロピーソースを伴い得る。回答Ａｉは、ユーザが思い出せるようなものであるべきである（質問は何度も尋ねられ、ユーザはそれにより、質問に回答するように訓練され得る）。そのような質問の選択は、生活の質問、（さまざまな分野における）趣味の質問、個人履歴の質問などを伴い得る。さらに、質問の数は、所望のエントロピーを生成できるほど十分に多いものであるべきである。所望の実現化例に依存して、ユーザが携帯装置または１枚の紙の上に保持する、または、ユーザにメールさ
れてインターネットアカウントの外部で保持されるランダム値Ｒ１、Ｒ２など、および／または、ユーザのローカルシステムが保持する追加されたランダム値、および秘密Ｓも採用可能である。
The input may involve a high entropy source of knowledge, such as a set of questions, such as Q1, Q2, Q3, which are asked by the user, and answers, such as A1, A2, A3. The answer Ai should be something that the user can remember (the question can be asked many times and the user can thereby be trained to answer the question). Such question selection may involve life questions, hobby questions (in various fields), personal history questions, and the like. Furthermore, the number of questions should be large enough to produce the desired entropy. Depending on the desired implementation, random values R1, R2, etc. that the user holds on the mobile device or a piece of paper, or is mailed to the user and held outside the Internet account, and / or The added random value held by the user's local system and the secret S can also be employed.
処理は、要因生成を伴い得る。質問への入力である回答Ａ１、Ａ２、…Ａｎが（繰り返すことで）グループへと体系化され、たとえば、Ｇ１＝Ａ１、Ａ３、Ａ５、Ｇ２＝Ａ１、Ａ３、Ａ６、Ａ７となると仮定する。１つのグループは、ユーザが全部回答するるよう期待されている、１組の連結された回答を表わす。ｍ個のグループがあり、各グループが十分に高いエントロピーを有すると仮定する。所望の実現化例に依存して、ランダム値Ｒ１、…、Ｒｍおよび秘密Ｓも追加（連結）されてもよく、たとえばＳが各グループに、ＲｉがＧｉに追加され、そのためＧ１＝Ｓ、Ｒ１、Ａ１、Ａ３、Ａ５となる。 Processing can involve factor generation. Assume that the answers A1, A2,... An that are inputs to the question are organized into groups (by repeating), eg G1 = A1, A3, A5, G2 = A1, A3, A6, A7. A group represents a set of linked answers that the user is expected to answer all. Suppose there are m groups and each group has a sufficiently high entropy. Depending on the desired implementation, random values R1,..., Rm and a secret S may also be added (concatenated), for example, S is added to each group and Ri is added to Gi, so G1 = S, R1 , A1, A3, A5.
各Ｇｉは、暗号学的ハッシュ関数（たとえばＳｈａ１など）Ｈを用いてハッシュされる。たとえば、Ｈ１＝Ｈ（Ｈ（Ｈ（Ｈ（Ｈ（Ｒ），Ｓ１）Ａ１）Ａ３）Ａ５）である。演算を遅くするための追加のハッシングも行なわれてもよい。Ｈ＿ｉは指標（インディケータ）と呼ばれる。 Each Gi is hashed using a cryptographic hash function (e.g., Sha1) H. For example, H1 = H (H (H (H (H (R), S1) A1) A3) A5). Additional hashing may be performed to slow down the operation. H_i is called an indicator.
各グループは、それ自体の指標Ｈｉ：Ｈ１、Ｈ２、…、Ｈｍを有する。ランダマイザと呼ばれるランダム値Ｒｉは、ユーザーシステムに保持され（たとえば、サーバによってアクセスできず、または、Ｓの下で符号化されてサーバに送信される）、Ｓは、システム外部（たとえば、紙の上、または回復用に保持された別の装置内、または受託者など、他の場所にはない）に保持されたユーザの秘密である。Ｅ＿Ｓ（Ｒｉ）＝Ｘｉとし、ＸｉはＨｉで使用されたＲｉの符号化であり、Ｓはシードと呼ばれるとする。Ｈｉ，Ｘｉ ｉ＝１、…、ｍがサーバに送信される。指標Ｈｉは次に、クライアント側で、および自分の装置内で消去される。 Each group has its own index Hi: H1, H2, ..., Hm. A random value Ri, called a randomizer, is maintained in the user system (eg, not accessible by the server, or encoded under S and sent to the server), and S is external to the system (eg, on paper) Or in another device held for recovery or not elsewhere, such as a trustee). Let E_S (Ri) = Xi, where Xi is the Ri encoding used in Hi and S is called the seed. Hi, Xi i = 1,..., M are transmitted to the server. The indicator Hi is then erased on the client side and in his device.
シードであるＳは、アカウントストレージ外部のユーザのメモリ（たとえば、装置または紙の上）で保持される。Ｈｉはサーバに送信されて回復検証のために保持され、ローカルコピーが消去される。サーバはさらに、侵入する攻撃者らが指標を学習することを防止するために、指標を一方向性関数でハッシュしてもよい。 The seed S is held in the user's memory (eg, on the device or paper) outside the account storage. Hi is sent to the server and retained for recovery verification, and the local copy is erased. The server may further hash the index with a one-way function to prevent intruders from learning the index.
上述の例示的な実現化例から、サーバはしたがって回答についての情報を何も受信せず、十分なエントロピーを有するハッシュ値のみを受信する。ユーザは、１つのグループと整合するのに十分な質問に回答できるはずである。攻撃者は、１つのグループをカバーする回答さえ推測できないはずであり、Ｓへのアクセスを有さない。 From the example implementation described above, the server therefore receives no information about the answer, only a hash value with sufficient entropy. The user should be able to answer enough questions to match one group. The attacker would not be able to guess even answers covering one group and has no access to S.
因子は次に、認証のために使用可能である。認証プロセスまたはアカウント回復プロセスで、永続的因子を使用する試みが行なわれる。サーバは、グループのうちの１つについての質問を提示し、ユーザはグループを選択し、質問に回答し、そのＳおよびその装置を順に入力し、その秘密Ｓを使用してＸｉからＲｉを回復させる。Ｈｉは、回答グループ「Ｇｉ現在」（Gi-current：Ｇｉについての候補）を生成するユーザの現在の回答に基づいて最初から演算され、生成されたＨｉはサーバに送信される。ユーザは、回答から全指標を演算してもよく、また、これに代えて、指標における回答のうちのいくつか（例におけるＡ５など）はクリアな状態で送信可能であり、例における部分的に評価された指標Ｈ（Ｈ（Ｈ（Ｈ（Ｒ），Ｓ１）Ａ１）Ａ３）が送信可能であり、ユーザは指標演算を完了することができる（したがって、回復時のみ、いくつかの回答は隠され、いくつかの回答はオープンである）。 The factor can then be used for authentication. An attempt is made to use a permanent factor in the authentication or account recovery process. The server presents a question about one of the groups, the user selects the group, answers the question, enters its S and its devices in turn, and recovers Ri from Xi using its secret S Let Hi is calculated from the beginning based on the current answer of the user who generates the answer group “Gi present” (Gi-current: candidate for Gi), and the generated Hi is transmitted to the server. The user may calculate all indicators from the answers, and alternatively, some of the answers in the indicators (such as A5 in the example) can be sent in a clear state, partially in the example The evaluated index H (H (H (H (R), S1) A1) A3) can be transmitted and the user can complete the index calculation (thus only some responses are hidden only during recovery). And some answers are open).
サーバは、次にハッシュされる演算された生成されたＨｉを、格納されたハッシュされたＨｉと比較する。整合がある場合、ユーザは認証される。整合がない場合（たとえば、
生成されたＨｉがさまざまなグループに対して失敗した場合）、クレームした者は不合格となり、元のユーザとして認識されない。なお、代替的な例示的な一実現化例では、ユーザは、ハッシュされたバージョンＨＡＳＨ（Ｈｉ）に対してＨｉの所有を証明するプロトコルに関与していてもよい。
The server compares the computed generated Hi that is then hashed with the stored hashed Hi. If there is a match, the user is authenticated. If there is no match (for example,
If the generated Hi fails for various groups), the claimant fails and is not recognized as the original user. Note that in an alternative exemplary implementation, the user may be involved in a protocol that proves ownership of the Hi against the hashed version HASH (Hi).
回答は、ユーザについての個人情報を必要とするかもしれないが、情報はすべて、ユーザコンピュータまたはユーザ装置にとってローカルであり、プライバシーの目的のためにサーバは情報にアクセスできず、サーバであるふりをするフィッシング第三者も情報にアクセスできない。回答は消去されるため、それらはクエリー時に再構成される。さらに、部分情報を与えることができる。たとえば、部分入れ子ハッシングが計算され、Ａ５がクリアな状態で与えられ、サーバはハッシングを完了する。 The answer may require personal information about the user, but all information is local to the user computer or user device, and for privacy purposes the server cannot access the information and pretends to be the server. Phishing third parties who do not have access to information. Since answers are erased, they are reconstructed at query time. Furthermore, partial information can be given. For example, a partial nested hashing is calculated, given A5 in a clear state, and the server completes the hashing.
結合関数としてのＨ（Ｒ）＊Ｈ（Ａ１）＊Ｈ（Ａ３）＊Ｈ（Ａ５）（すなわち、十分に大きい体における個々の値のハッシュの乗算）といった一実現化例については、部分積が提供可能であり、回答のうちのいくつかはオープンであってもよく、サーバは積を完了できる。位置が固定された検査については、Ｈ（Ｒ）＊Ｈ（１，Ａ１）＊Ｈ（２，Ａ３）＊Ｈ（３，Ａ５）が提供可能であり、質問票の位置ｊでの回答Ａｉが位置ｊに関連付けられるようになっている。積は、大きい素数の順序体（large prime order field）上で行な
うことができる。
For one implementation, such as H (R) * H (A1) * H (A3) * H (A5) (ie, multiplication of individual values in a sufficiently large field) as a combined function, the partial product is And some of the answers may be open, and the server can complete the product. For examinations with fixed positions, H (R) * H (1, A1) * H (2, A3) * H (3, A5) can be provided, and the answer Ai at position j of the questionnaire is It is related to the position j. The product can be performed on a large prime order field.
情報は、攻撃者が回答を生成する可能性が実質的に小さくなるように、サーバの状態が与えられた個々の体を隠すのに十分なエントロピーを有するべきである。ユーザはさらに、因子が正しいサーバに与えられることを確実にする必要がある。回答のうちのいくつかをオープンにする（リアルタイム攻撃）因子または複数の因子を学習しようとすること（オフライン攻撃）が可能であり、実現化例において考慮されるべきである。 The information should have enough entropy to hide the individual bodies given the state of the server so that the likelihood of an attacker generating an answer is substantially reduced. The user further needs to ensure that the factors are given to the correct server. Factors that make some of the answers open (real-time attack) or trying to learn multiple factors (off-line attack) are possible and should be considered in the implementation.
また、値がサーバでコミットされる（記録される）前に、高度に記憶された１組の回答を使用すべきであり、ユーザトレーニングが実施されるべきであり、これを支援するであろう。因子が永続的であることを確実にするために、思い出しにくい回答が書留められてもよい。例示的な実現化例は、汎用ソフトウェアシステムが特殊装置／リーダなどなしで採用できるといったものであってもよい。 Also, before a value is committed (recorded) at the server, a highly memorized set of answers should be used and user training should be performed and will assist this . Answers that are difficult to remember may be written down to ensure that the factor is permanent. An exemplary implementation may be one in which a general purpose software system can be employed without a special device / reader or the like.
例示的な実現化例は、回答が、思い出されるのではなく、外部機関からユーザによって得られるシステムまたはプロセスを伴い得る。これらの機関は、ユーザが回答を検索できるようにするために認証に依拠しており、そのため実現化例は、上述の永続的因子を用いて暗黙の「社会的回復」を構築可能である。因子は、まず以前の検査に合格し、次に因子に埋め込まれた知識を更新することによって、徐々に構築可能である。さらに、永続的因子は、必要とされる場合に使用されるように制限されてもよく、他の因子によってサポートされてもよく、アカウントの回復またはアカウントプロセスの再クレームにおける１つの追加の決定的因子として含まれてもよい。なお、ユーザおよび受託者からの回答は、タイピング、音声、生体計測読取り、カメラなどの任意の入力方法を採用して得ることができる。 An exemplary implementation may involve a system or process in which answers are not recalled but are obtained by a user from an external institution. These institutions rely on authentication to allow users to search for answers, so an implementation can build an implicit “social recovery” using the above-mentioned persistent factors. Factors can be built gradually by first passing previous tests and then updating the knowledge embedded in the factor. In addition, the permanent factor may be limited to be used when needed, may be supported by other factors, and is one additional definitive in account recovery or account process reclaim. It may be included as a factor. In addition, the reply from a user and a trustee can employ | adopt arbitrary input methods, such as typing, an audio | voice, biometric reading, and a camera.
上述の例示的な実現化例はそれにより、ユーザがパスワードをユーザが入力する知識と置換することを可能にする。パスワードとは異なり、ユーザは、ユーザについてのいくつかの知識（それらの大部分）をたいがい知っていると思われる。パスワードの使用は、（秘密鍵のような）パスワード符号化情報のローカル復号のために利用可能である。この新しい考えを延長することが、そのような目的のためのパスワード・ドロップイン置換に使用されてもよく、それは「装置」が単なるローカル演算である別の設計の事項である。「ローカル演算」はモバイル装置上で行なわれてもよく、回答が盗まれていないことをユー
ザに保証するために、最終結果が、無線、ＵＳＢまたは物理的接続などのローカル通信方法を介して、コンピュータまたはサーバに送信されてもよい。
The exemplary implementation described above thereby allows the user to replace the password with the knowledge that the user enters. Unlike passwords, users are likely to know some knowledge (most of them) about the user. The use of a password can be used for local decryption of password encoded information (such as a secret key). Extending this new idea may be used in password drop-in replacement for such purposes, which is another design matter where the “device” is just a local operation. "Local computation" may be performed on the mobile device and the final result is sent via a local communication method such as wireless, USB or physical connection to ensure that the answer is not stolen. It may be sent to a computer or server.
例示的な実現化例はまた、識別の他の手段が失われたとしても、ユーザが常に再構成できる永続的因子を伴い得る。これは、ユーザをアカウント乗取り犯と区別でき、アカウントをクレームバック（claim back）するためにユーザによって使用可能である（たとえば、質問票に基づいてクレームバックし、露出を最小限にする方法が実施される）。 An exemplary implementation may also involve a permanent factor that the user can always reconfigure even if other means of identification are lost. This can distinguish the user from account takeovers and can be used by the user to claim back the account (for example, a way to claim back based on a questionnaire and minimize exposure). Implemented).
図１（ａ）は、例示的な一実現化例に従った、装置についてのフロー図を示す。１００で、装置は、複数の質問への、ユーザによって提供された複数の応答から、複数のハッシュを生成する。提供された質問は、サーバから、または装置からであってもよく、上述のようなユーザについての個人情報に関与する質問票を利用する。 FIG. 1 (a) shows a flow diagram for an apparatus according to one exemplary implementation. At 100, the device generates a plurality of hashes from a plurality of responses provided by a user to a plurality of questions. The provided questions may be from a server or from a device, and utilize a questionnaire relating to personal information about the user as described above.
１０１で、装置は、複数のハッシュから認証ハッシュを生成できる。これは、認証ハッシュを生成するために複数のハッシュの多項式補間を行なうことにより、および／または、複数の質問のうちの選択されたグループに基づいて認証ハッシュを形成するために複数のハッシュのうちの１つ以上を選択することにより、実現することができる。上述の例示的な実現化例で説明されたように、ユーザは、回答すべき質問のグループを選択でき、回答はそれにより、認証ハッシュを生成するためにハッシュ可能であり、または、装置は、提供された回答の部分集合（たとえば、２つ以上）を選択し、その部分集合に基づいて認証ハッシュを生成することができる。上述の例示的な実現化例で説明されたように、秘密認証ハッシュも装置に格納でき、要件が満たされる（たとえば、質問への正しい回答のしきい値を満たす、質問の部分集合に正しく回答する、認証ハッシュが秘密認証ハッシュと整合する、など）と、セキュアプロトコルによってサーバに転送され得る。 At 101, the device can generate an authentication hash from multiple hashes. This can be done by performing polynomial interpolation of the plurality of hashes to generate an authentication hash and / or of the plurality of hashes to form an authentication hash based on a selected group of the plurality of questions. This can be realized by selecting one or more of the following. As described in the exemplary implementation above, the user can select a group of questions to answer, and the answers can thereby be hashed to generate an authentication hash, or the device can A subset (eg, two or more) of the provided answers can be selected and an authentication hash can be generated based on the subset. As described in the example implementation above, the secret authentication hash can also be stored on the device and the requirements are met (eg, answer correctly to a subset of questions that meet the threshold of correct answer to the question) The authentication hash matches the secret authentication hash, etc.) and can be transferred to the server by a secure protocol.
装置はまた、上述のように、認証ハッシュを補間するために多項式補間を使用することで、複数のハッシュの多項式補間から認証ハッシュを生成してもよい。多項式補間アルゴリズムおよびノイズのある補間アルゴリズムといった実現化例が、採用可能である。サーバでの追加点を用いた、多項式補間のための１つ以上のエラー点、および／または多項式補間のための１つ以上の正しい点の導入を通して、しきい値を調節し、多項式補間に適用することができる。１０２で、装置は次にサーバに、生成された認証ハッシュを用いて認証することを試みる。 The apparatus may also generate an authentication hash from polynomial interpolation of multiple hashes, as described above, using polynomial interpolation to interpolate the authentication hash. Implementations such as polynomial interpolation algorithms and noisy interpolation algorithms can be employed. Adjust thresholds and apply to polynomial interpolation through the introduction of one or more error points for polynomial interpolation and / or one or more correct points for polynomial interpolation using additional points at the server can do. At 102, the device then attempts to authenticate to the server using the generated authentication hash.
図１（ｂ）は、例示的な一実現化例に従った、回復プロセスのためのフロー図を示す。上述の例示的な実現化例で説明されたように、１０３で、装置は複数の質問を受信し、それらの中からユーザは、アカウントへのアクセスを回復するために回答すべき部分集合を選択してもよい。１０４で、提供された回答は、ユーザ装置の外部にある秘密シードから生成された乱数の使用に基づいて、認証ハッシュに変換される。１０５で、認証ハッシュはサーバに転送される。 FIG. 1 (b) shows a flow diagram for the recovery process, according to one exemplary implementation. As described in the exemplary implementation above, at 103, the device receives a plurality of questions, from which the user selects a subset to answer to regain access to the account. May be. At 104, the provided answer is converted to an authentication hash based on the use of a random number generated from a secret seed external to the user device. At 105, the authentication hash is transferred to the server.
図２（ａ）は、例示的な一実現化例に従った、サーバについてのフロー図を示す。２００で、サーバは、複数の個人的な質問を装置に送信してもよい。２０１で、サーバは、送信された複数の質問に応答して、装置から認証ハッシュを受信する。２０２で、サーバは次に、送信された複数の質問に応答した認証ハッシュがサーバに格納された秘密認証ハッシュと整合する場合には（ＹＥＳ）、アクセスを許可する（２０４）と決定してもよく、認証ハッシュが秘密認証ハッシュと整合しない場合には（ＮＯ）、アクセスを拒否する（２０３）と決定してもよい。認証ハッシュは、複数のハッシュの多項式補間、および、複数の質問のうちの選択されたグループに基づいて認証ハッシュを形成するための、複数のハッシュのうちの１つ以上の選択から生成されてもよい。実現化例に依存して、サーバは、秘密認証ハッシュおよびしきい値に基づいて、ノイズのある補間アルゴリズムで使用す
るための１つ以上のエラー点および１つ以上の正しい点を送信してもよい。サーバはまた、ハッシュが格納された秘密ハッシュと整合するかどうか判断するために、受信された認証ハッシュのハッシングを行なってもよい。
FIG. 2 (a) shows a flow diagram for the server, according to one exemplary implementation. At 200, the server may send a plurality of personal questions to the device. At 201, the server receives an authentication hash from the device in response to the transmitted plurality of questions. At 202, the server may then decide to allow access (204) if the authentication hash in response to the sent multiple queries matches the secret authentication hash stored in the server (YES). If the authentication hash does not match the secret authentication hash (NO), it may be determined that access is denied (203). The authentication hash may be generated from polynomial interpolation of the plurality of hashes and selection of one or more of the plurality of hashes to form an authentication hash based on the selected group of the plurality of questions. Good. Depending on the implementation, the server may send one or more error points and one or more correct points for use in a noisy interpolation algorithm based on the secret authentication hash and threshold. Good. The server may also perform hashing of the received authentication hash to determine if the hash matches the stored secret hash.
別の例では、サーバは、送信された質問のうちの選択されたグループに基づいて、複数の秘密認証ハッシュから秘密認証ハッシュを選択してもよく、複数の秘密認証ハッシュの各々は、複数の質問のうちの少なくとも２つに関連付けられている。送信された質問のうちの選択されたグループは、装置で、またはサーバによって選択されてもよい。これはたとえば、上述のような回復プロセスで実現可能である。 In another example, the server may select a secret authentication hash from a plurality of secret authentication hashes based on a selected group of transmitted questions, each of the plurality of secret authentication hashes Associated with at least two of the questions. The selected group of submitted questions may be selected at the device or by the server. This can be achieved, for example, by a recovery process as described above.
図２（ｂ）は、例示的な一実現化例に従った、サーバからの回復プロセスのためのフロー図を示す。２０５で、サーバは、複数の個人的な質問を装置に送信してもよい。２０６で、サーバは、送信された複数の質問に応答して、装置から認証ハッシュを受信する。認証ハッシュは潜在的に、上述の例示的な実現化例で説明されたような指標のうちの１つである。２０７で、サーバは次に、認証ハッシュがサーバに格納された指標のうちの１つと整合する場合には（ＹＥＳ）、ユーザーアカウントを回復するプロセスを開始する（２０９）と決定してもよく、認証ハッシュが格納された指標のどれとも整合しない場合には（ＮＯ）、アクセスを拒否する（２０８）と決定してもよい。 FIG. 2 (b) shows a flow diagram for the recovery process from the server, according to one exemplary implementation. At 205, the server may send a plurality of personal questions to the device. At 206, the server receives an authentication hash from the device in response to the transmitted plurality of questions. The authentication hash is potentially one of the indicators as described in the example implementation above. At 207, the server may then decide to start (209) the process of recovering the user account if the authentication hash matches one of the indicators stored on the server (YES), If the authentication hash does not match any of the stored indices (NO), it may be determined that access is denied (208).
例示的な処理環境
図３は、いくつかの例示的な実現化例で使用するのに好適な例示的なコンピューティング装置を有する、例示的なコンピューティング環境を示す。コンピューティング環境３００におけるコンピューティング装置３０５は、１つ以上の処理部、コア、またはプロセッサ３１０、メモリ３１５（たとえば、ＲＡＭ、ＲＯＭなど）、内部ストレージ３２０（たとえば、磁気、光学、固体ストレージ、および／または有機）、および／またはＩ／Ｏインターフェイス３２５を含んでいてもよく、それらのいずれも、情報を通信するための通信機構またはバス３３０上に結合可能であり、または、コンピューティング装置３０５に埋込み可能である。
Exemplary Processing Environment FIG. 3 illustrates an exemplary computing environment having an exemplary computing device suitable for use in some exemplary implementations. Computing device 305 in
コンピューティング装置３０５は、入力／ユーザインターフェイス３２５および出力装置／インターフェイス３４０に通信可能に結合可能である。入力／ユーザインターフェイス３２５および出力装置／インターフェイス３４０のいずれか一方または双方は、有線または無線インターフェイスであってもよく、取り外し可能であってもよい。入力／ユーザインターフェイス３２５は、入力を提供するために使用可能な、物理的なまたは仮想の任意の装置、コンポーネント、センサ、またはインターフェイス（たとえば、ボタン、タッチスクリーン・インターフェイス、キーボード、ポインティング／カーソル制御装置、マイク、カメラ、点字、運動センサ、光学式読取り装置など）を含んでいてもよい。出力装置／インターフェイス３４０は、ディスプレイ、テレビ、モニタ、プリンタ、スピーカ、点字などを含んでいてもよい。いくつかの例示的な実現化例では、入力／ユーザインターフェイス３２５および出力装置／インターフェイス３４０は、コンピューティング装置３０５に埋込可能であり、または物理的に結合可能である。他の例示的な実現化例では、他のコンピューティング装置は、コンピューティング装置６０５のために、入力／ユーザインターフェイス３２５および出力装置／インターフェイス３４０として機能し、またはそれらの機能を提供してもよい。
Computing device 305 can be communicatively coupled to input /
コンピューティング装置３０５の例は、高度モバイル装置（たとえば、スマートフォン、車両および他のマシンにおける装置、人間および動物によって運ばれる装置など）、モバイル装置（たとえば、タブレット、ノートブック、ラップトップ、パーソナルコンピュータ、ポータブルテレビ、ラジオなど）、および移動性のために設計されていない装置（たとえば、デスクトップコンピュータ、他のコンピュータ、情報キオスク、１つ以上のプ
ロセッサが埋め込まれた、および／または結合されたテレビ、ラジオ、サーバなど）を含み得るが、それらに限定されない。
Examples of computing device 305 include advanced mobile devices (eg, devices in smartphones, vehicles and other machines, devices carried by humans and animals), mobile devices (eg, tablets, notebooks, laptops, personal computers, Portable televisions, radios, etc.) and devices not designed for mobility (eg, desktop computers, other computers, information kiosks, one or more embedded and / or combined televisions, radios) , Server, etc.), but is not limited thereto.
コンピューティング装置３０５は、同じまたは異なる構成の１つ以上のコンピューティング装置を含む、任意の数のネットワーク化されたコンポーネント、装置、およびシステムと通信するために、（たとえばＩ／Ｏインターフェイス３２５を介して）外部ストレージ３４５およびネットワーク３５０に通信可能に結合可能である。コンピューティング装置３０５または任意の接続されたコンピューティング装置は、サーバ、クライアント、シンサーバ、汎用マシン、特殊用途マシン、または別のラベルとして機能し、それらのサービスを提供し、またはそのように呼ばれてもよい。
The computing device 305 can communicate with any number of networked components, devices, and systems (eg, via the I / O interface 325), including one or more computing devices of the same or different configuration. Communicatively coupled to
Ｉ／Ｏインターフェイス３２５は、少なくとも、コンピューティング環境３００におけるすべての接続されたコンポーネント、装置、およびネットワークとの間で情報を通信するために、任意の通信またはＩ／Ｏプロトコルもしくは規格（たとえば、イーサネット（登録商標）、８０２．１１ｘ、ユニバーサル・システム・バス、ＷｉＭａｘ、モデム、セルラー・ネットワーク・プロトコルなど）を用いる有線および／または無線インターフェイスを含み得るが、それらに限定されない。ネットワーク３５０は、任意のネットワーク、またはネットワークの組合せであってもよい（たとえば、インターネット、ローカルエリアネットワーク、ワイドエリアネットワーク、電話ネットワーク、セルラーネットワーク、衛星ネットワークなど）。
The I /
コンピューティング装置３０５は、信号媒体および記憶媒体を含む、コンピュータ使用可能媒体またはコンピュータ読取可能媒体を用いて、使用および／または通信できる。信号媒体は、伝送媒体（たとえば、金属ケーブル、光ファイバー）、信号、搬送波などを含む。記憶媒体は、磁気媒体（たとえば、ディスクおよびテープ）、光学媒体（たとえば、ＣＤ ＲＯＭ、デジタルビデオティスク、ブルーレイディスク）、固体媒体（たとえば、ＲＡＭ、ＲＯＭ、フラッシュメモリ、固体ストレージ）、および他の不揮発性ストレージまたはメモリを含む。 The computing device 305 can be used and / or communicated using computer usable or computer readable media including signal media and storage media. Signal media includes transmission media (eg, metal cables, optical fibers), signals, carrier waves, and the like. Storage media include magnetic media (eg, disks and tapes), optical media (eg, CD ROM, digital video disc, Blu-ray disc), solid media (eg, RAM, ROM, flash memory, solid state storage), and other Includes non-volatile storage or memory.
コンピューティング装置３０５は、いくつかの例示的なコンピューティング環境において、手法、方法、アプリケーション、プロセス、またはコンピュータ実行可能命令を実現するために使用可能である。コンピュータ実行可能命令は、一時的媒体から検索可能であり、また、非一時的媒体に格納されてそこから検索されることが可能である。実行可能命令は、任意のプログラミング言語、スクリプト言語、およびマシン語（たとえば、Ｃ、Ｃ＋＋、Ｃ＃、Ｊａｖａ（登録商標）、ビジュアル・ベーシック、パイソン、パール、ＪａｖａＳｃｒｉｐｔ（登録商標）など）のうちの１つ以上から生じ得る。 The computing device 305 can be used to implement techniques, methods, applications, processes, or computer-executable instructions in some exemplary computing environments. Computer-executable instructions can be retrieved from a temporary medium or stored on a non-transitory medium and retrieved therefrom. Executable instructions can be any programming language, script language, and machine language (eg, C, C ++, C #, Java®, Visual Basic, Python, Pearl, JavaScript®, etc.) Can result from one or more.
プロセッサ３１０は、自然または仮想環境において、任意のオペレーティングシステム（ＯＳ）（図示せず）の下で実行可能である。１つ以上のアプリケーションを配備することができ、それは、論理ユニット３６０と、アプリケーション・プログラミング・インターフェイス（ＡＰＩ）ユニット３６５と、入力ユニット３７０と、出力ユニット３７５と、認証ユニット３８０と、回復ユニット３８５と、乱数発生器ユニット３９０と、異なるユニットが互いに、ＯＳと、および他のアプリケーション（図示せず）と通信するためのユニット間通信機構３９５とを含む。たとえば、装置またはサーバとしての実現化例に依存して、認証ユニット３８０、回復ユニット３８５、および乱数発生器ユニット３９０は、図１（ａ）、図１（ｂ）、図２（ａ）および図２（ｂ）に示すような１つ以上のプロセスを実現してもよい。回復ユニット３８５はまた、図１（ｂ）および図２（ｂ）の上述の例示的な実現化例で説明されたような回復プロセスを実現してもよい。説明されたユニットおよび要素は、設計、機能、構成、または実現化例の点で変更可能であり、提供された説明に限定されない。
The
いくつかの例示的な実現化例では、情報または実行命令がＡＰＩユニット３６５によって受信されると、それは、１つ以上の他のユニット（たとえば、論理ユニット３６０、入力ユニット３７０、出力ユニット３７５、認証ユニット３８０、回復ユニット３８５、および乱数発生器ユニット３９０）に通信されてもよい。たとえば、乱数発生器ユニット３９０は、ハッシュを生成するかまたは提出用の質問を選択し、ＡＰＩユニット３６５を使用して認証ユニット３８０および回復ユニット３８５と通信し、上述の例示的な実現化例で説明されているように乱数を提供するために使用されてもよい。認証ユニット３８０は、認証ハッシュを格納された秘密認証ハッシュと比較するために、ＡＰＩユニット３６５を介して回復ユニット３８５と相互作用してもよい。
In some exemplary implementations, when information or execution instructions are received by the API unit 365, it may be transmitted to one or more other units (eg, a logical unit 360, an
場合によっては、論理ユニット３６０は、上述のいくつかの例示的な実現化例において、ユニット間の情報フローを制御して、ＡＰＩユニット３６５、入力ユニット３７０、出力ユニット３７５、認証ユニット３８０、回復ユニット３８５、および乱数発生器ユニット３９０によって提供されるサービスを指示するように構成されてもよい。たとえば、１つ以上のプロセスまたは実現化例のフローは、論理ユニット３６０のみによって、またはＡＰＩユニット３６５とともに制御されてもよい。
In some cases, the logical unit 360 controls the information flow between units in some exemplary implementations described above to provide an API unit 365, an
例示的な処理環境
図４は、いくつかの例示的な実施形態が実現され得る例示的なオンライン環境を示す。環境４００は装置４０５〜４４５を含み、各々は、たとえばネットワーク４５０を介して、少なくとも１つの他の装置に通信可能に接続されている。いくつかの装置は、（たとえば、装置４２５を介して）１つ以上の記憶装置４３０および４４５に通信可能に接続されてもよい。
Exemplary Processing Environment FIG. 4 illustrates an exemplary online environment in which some exemplary embodiments may be implemented. Environment 400 includes devices 405-445, each of which is communicatively connected to at least one other device, eg, via
１つ以上の装置４０５〜４５０の一例は、以下に図６で説明するコンピューティング装置６０５であってもよい。装置４０５〜４５０は、コンピュータ４２５（たとえば、個人用または業務用）、車両４２０に関連付けられた装置、モバイル装置４１０（たとえば、スマートフォン）、テレビ４１５、モバイルコンピュータ４０５、サーバコンピュータ４５０、コンピューティング装置４３５〜４４０、記憶装置４３０、４４５を含み得るが、それらに限定されない。装置４０５〜４５０のうちのいずれも、環境４００において図示された１つ以上の装置、および／または環境４００において図示されていない装置からの１つ以上のサービスにアクセスしてもよく、および／または、そのような装置に１つ以上のサービスを提供してもよい。装置間のアクセスは、有線、無線で行なわれてもよく、ユーザ音声やカメラ画像のようなマルチメディア通信によるものであってもよい。
An example of the one or more devices 405-450 may be a computing device 605 described below in FIG. The devices 405-450 are a computer 425 (eg, personal or business), a device associated with the
ユーザは、ネットワーク４５０を介して例示的な実現化例を実現するために、上に説明されたように装置を制御してもよい。例示的な実現化例に関連付けられた情報は、たとえば記憶装置４３０または４４５にそれぞれ格納されてもよい。
A user may control the device as described above to implement an exemplary implementation via
ここに説明されたシステムが、ユーザについての個人情報を収集する、または個人情報を利用し得る状況では、ユーザには、プログラムまたは機能がユーザ情報（たとえば、ユーザの社会的ネットワーク、社会的行動または活動、職業、ユーザの好み、またはユーザの現在位置についての情報）を収集するかどうかを制御する機会、もしくは、ユーザにより関連し得るコンテンツサーバからコンテンツを受信するかどうか、および／またはどのように受信するかを制御する機会が提供されてもよい。加えて、或るデータは、個人を識別可能な情報が除去されるように、格納または使用される前に１つ以上のやり方で処理されてもよい。たとえば、ユーザについて、個人を識別可能な情報がまったく判断できないように、ユーザの身元が処理されてもよく、または、（市、郵便番号、または国家レベルなどまで）位置情報が得られる場合、ユーザの特定の位置が判断できないように、ユーザ
の地理的な位置が一般化されてもよい。このため、ユーザは、ユーザについて情報がどのように収集され、コンテンツサーバによってどのように使用されるか、に対する制御を有していてもよい。
In situations where the system described herein collects or utilizes personal information about a user, the user may have a program or function for user information (eg, a user's social network, social behavior or The opportunity to control whether to collect information about activities, occupations, user preferences, or the user's current location, or whether to receive content from content servers that may be more relevant to the user, and / or how An opportunity to control what to receive may be provided. In addition, certain data may be processed in one or more ways before being stored or used so that personally identifiable information is removed. For example, the user's identity may be processed so that no personally identifiable information can be determined about the user, or if location information is obtained (up to the city, postal code, or country level, etc.) The geographical location of the user may be generalized so that no particular location can be determined. Thus, the user may have control over how information is collected about the user and how it is used by the content server.
いくつかの例示的な実現化例を示し、説明してきたが、これらの例示的な実現化例は、ここに説明された主題を、この分野の当業者に伝えるために提供されている。ここに説明された主題は、説明された例示的な実現化例に限定されることなく、さまざまな形で実現され得る、ということが理解されるべきである。ここに説明された主題は、それらの具体的に定義または説明された事項がなくても、もしくは、説明されていない他のまたは異なる要素または事項があっても、実践可能である。これらの例示的な実現化例において、添付された請求項およびそれらの均等物で定義されるような、ここに説明された主題から逸脱することなく、変更を行なってもよい、ということは、この分野の当業者によって理解されるであろう。 Although several example implementations have been shown and described, these example implementations are provided to convey the subject matter described herein to those skilled in the art. It should be understood that the subject matter described herein can be implemented in a variety of forms without being limited to the illustrated example implementation. The subject matter described herein is practicable without those specifically defined or described items, or with other or different elements or items not described. In these exemplary implementations, changes may be made without departing from the subject matter described herein, as defined in the appended claims and their equivalents, It will be understood by those skilled in the art.
コンピューティング装置３０５は、入力／ユーザインターフェイス３３５および出力装置／インターフェイス３４０に通信可能に結合可能である。入力／ユーザインターフェイス３３５および出力装置／インターフェイス３４０のいずれか一方または双方は、有線または無線インターフェイスであってもよく、取り外し可能であってもよい。入力／ユーザインターフェイス３３５は、入力を提供するために使用可能な、物理的なまたは仮想の任意の装置、コンポーネント、センサ、またはインターフェイス（たとえば、ボタン、タッチスクリーン・インターフェイス、キーボード、ポインティング／カーソル制御装置、マイク、カメラ、点字、運動センサ、光学式読取り装置など）を含んでいてもよい。出力装置／インターフェイス３４０は、ディスプレイ、テレビ、モニタ、プリンタ、スピーカ、点字などを含んでいてもよい。いくつかの例示的な実現化例では、入力／ユーザインターフェイス３３５および出力装置／インターフェイス３４０は、コンピューティング装置３０５に埋込可能であり、または物理的に結合可能である。他の例示的な実現化例では、他のコンピューティング装置は、コンピューティング装置３０５のために、入力／ユーザインターフェイス３３５および出力装置／インターフェイス３４０として機能し、またはそれらの機能を提供してもよい。
Computing device 305 can be communicatively coupled to input / user interface 3 3 5 and output device / interface 340. Either or both of the input / user interface 3 3 5 and the output device / interface 340 may be a wired or wireless interface and may be removable. Input / user interface 3 3 5 is any physical or virtual device, component, sensor, or interface (eg, button, touch screen interface, keyboard, pointing / cursor) that can be used to provide input. Control device, microphone, camera, Braille, motion sensor, optical reader, etc.). The output device / interface 340 may include a display, a television, a monitor, a printer, a speaker, Braille, and the like. In some exemplary implementations, the input / user interface 3 3 5 and the output device / interface 340 can be embedded in the computing device 305 or physically coupled. In other exemplary implementations, other computing devices function as or provide the input / user interface 3 3 5 and output device / interface 340 for the computing device 3 05. May be.
１つ以上の装置４０５〜４４５の一例は、図３で説明するコンピューティング装置であってもよい。装置４０５〜４４５は、コンピュータ４２５（たとえば、個人用または業務用）、車両４２０に関連付けられた装置、モバイル装置４１０（たとえば、スマートフォン）、テレビ４１５、モバイルコンピュータ４０５、サーバコンピュータ４５０、コンピューティング装置４３５〜４４０、記憶装置４３０、４４５を含み得るが、それらに限定されない。装置４０５〜４４５のうちのいずれも、環境４００において図示された１つ以上の装置、および／または環境４００において図示されていない装置からの１つ以上のサービスにアクセスしてもよく、および／または、そのような装置に１つ以上のサービスを提供してもよい。装置間のアクセスは、有線、無線で行なわれてもよく、ユーザ音声やカメラ画像のようなマルチメディア通信によるものであってもよい。
An example of one or more devices 405-4 45 may be a computing equipment described in FIG. Device 405-4 45, the computer 425 (e.g., for personal or business), devices associated with the
Claims (21)
複数の質問への複数の応答から複数のハッシュを生成し、
認証ハッシュを、
複数のハッシュの多項式補間および複数のハッシュに対する代数演算と、
複数の質問のうちの選択されたグループに基づいて認証ハッシュを形成するための、複数のハッシュのうちの１つ以上の選択と、
の少なくとも一方から生成し、
認証ハッシュを用いて認証するように構成されている、装置。 An apparatus comprising a processor, the processor comprising:
Generate multiple hashes from multiple responses to multiple questions,
Authentication hash
Polynomial interpolation of multiple hashes and algebraic operations on multiple hashes,
Selecting one or more of the plurality of hashes to form an authentication hash based on a selected group of the plurality of questions;
From at least one of the
A device configured to authenticate using an authentication hash.
プロセッサは、複数の応答のうちの少なくとも２つから、複数のハッシュの各々を生成するように構成されている、請求項１に記載の装置。 The processor is configured to generate an authentication hash from the selection based on selecting one of the plurality of hashes as the authentication hash;
The apparatus of claim 1, wherein the processor is configured to generate each of the plurality of hashes from at least two of the plurality of responses.
プロセッサは、秘密認証ハッシュと認証ハッシュとの比較を通して、認証ハッシュを用いて認証するように構成されており、さらに、
認証ハッシュが秘密認証ハッシュと整合する場合には、秘密認証ハッシュを認証に使用し、
認証ハッシュが秘密認証ハッシュと整合しない場合には、認証を拒否するように構成されている、請求項１に記載の装置。 Further comprising memory configured to store a secret authentication hash;
The processor is configured to authenticate with the authentication hash through a comparison of the secret authentication hash and the authentication hash, and
If the authentication hash matches the secret authentication hash, use the secret authentication hash for authentication,
The apparatus of claim 1, wherein the apparatus is configured to reject authentication if the authentication hash does not match the secret authentication hash.
複数の質問への複数の応答から複数のハッシュを生成することと、
認証ハッシュを、
複数のハッシュの多項式補間および複数のハッシュに対する代数演算と、
複数の質問のうちの選択されたグループに基づいて認証ハッシュを形成するための、複数のハッシュのうちの１つ以上の選択と、
の少なくとも一方から生成することと、
認証ハッシュを用いて認証することとを含む、コンピュータ読取可能記憶媒体。 A computer readable storage medium storing instructions for executing a process, wherein the instructions are:
Generating multiple hashes from multiple responses to multiple questions,
Authentication hash
Polynomial interpolation of multiple hashes and algebraic operations on multiple hashes,
Selecting one or more of the plurality of hashes to form an authentication hash based on a selected group of the plurality of questions;
Generating from at least one of
Authenticating with an authentication hash.
秘密認証ハッシュを認証ハッシュと比較することと、
認証ハッシュが秘密認証ハッシュと整合する場合には、秘密認証ハッシュを認証に使用することと、
認証ハッシュが秘密認証ハッシュと整合しない場合には、認証を拒否することとを含む、請求項８に記載のコンピュータ読取可能記憶媒体。 Authenticating with an authentication hash
Comparing the secret authentication hash with the authentication hash;
If the authentication hash matches the secret authentication hash, use the secret authentication hash for authentication;
9. The computer readable storage medium of claim 8, comprising rejecting authentication if the authentication hash does not match the secret authentication hash.
複数のハッシュから認証ハッシュを生成することは、複数の質問のうちの選択されたグループに基づいて、複数のハッシュのうちの１つを認証ハッシュとして選択することを含む、請求項７に記載のコンピュータ読取可能記憶媒体。 Each of the plurality of hashes is generated from at least two of the plurality of responses;
8. The method of claim 7, wherein generating an authentication hash from the plurality of hashes includes selecting one of the plurality of hashes as an authentication hash based on a selected group of the plurality of questions. Computer readable storage medium.
複数の質問を送信し、
送信された複数の質問に応答した認証ハッシュが秘密認証ハッシュと整合する場合には、アクセスを許可し、
認証ハッシュが秘密認証ハッシュと整合しない場合には、アクセスを拒否するように構成されており、
認証ハッシュは、
複数のハッシュの多項式補間および複数のハッシュに対する代数演算と、
複数の質問のうちの選択されたグループに基づいて認証ハッシュを形成するための、複数のハッシュのうちの１つ以上の選択と、
の少なくとも一方から生成される、サーバ。 A server comprising a processor, the processor comprising:
Submit multiple questions,
If the authentication hash in response to multiple submitted questions matches the secret authentication hash, grant access,
If the authentication hash does not match the secret authentication hash, it is configured to deny access,
The authentication hash is
Polynomial interpolation of multiple hashes and algebraic operations on multiple hashes,
Selecting one or more of the plurality of hashes to form an authentication hash based on a selected group of the plurality of questions;
Server generated from at least one of
複数の秘密認証ハッシュの各々は、複数の質問のうちの少なくとも２つに関連付けられている、請求項１３に記載のサーバ。 The processor is configured to select a secret authentication hash from a plurality of secret authentication hashes based on a selected group of transmitted questions;
The server of claim 13, wherein each of the plurality of secret authentication hashes is associated with at least two of the plurality of questions.
複数の質問への応答を受信するように構成されており、応答は、応答ハッシュと、複数の質問のうちの１つまたは部分集合への回答とを含み、プロセッサはさらに、
応答ハッシュおよび回答から認証ハッシュを構築するように構成されている、請求項１３に記載のサーバ。 The processor further
A response to the plurality of questions is received, the response including a response hash and an answer to one or a subset of the plurality of questions, the processor further comprising:
The server of claim 13, configured to construct an authentication hash from the response hash and the answer.
複数の質問への複数の回答を受信するステップを含み、質問は、ユーザの１つ以上の因子に関連付けられており、前記方法はさらに、
複数の回答から認証秘密ハッシュを生成するステップと、
認証セッションに基づいて、サーバでユーザ装置を認証するステップとを含み、認証秘密ハッシュはユーザ装置によって再現され、前記方法はさらに、
認証セッションの成功した結果に基づいて、サーバでアクセスを許可または拒否するステップを含み、成功した結果は、ユーザ装置が認証秘密ハッシュを所有していることに基づいている、方法。 A method for a user device to register for authentication with a server and for further authentication with a server, comprising:
Receiving a plurality of answers to the plurality of questions, wherein the questions are associated with one or more factors of the user, the method further comprising:
Generating an authentication secret hash from multiple answers;
Authenticating the user device with a server based on the authentication session, wherein the authentication secret hash is reproduced by the user device, the method further comprising:
A method comprising allowing or denying access at a server based on a successful result of an authentication session, the successful result being based on the user device possessing an authentication secret hash.
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/844,619 US8949960B2 (en) | 2013-03-15 | 2013-03-15 | Privacy preserving knowledge and factor possession tests for persistent authentication |
US13/844,619 | 2013-03-15 |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
JP2016500901A Division JP6352381B2 (en) | 2013-03-15 | 2014-03-07 | Knowledge / factor ownership inspection to protect privacy for permanent authentication |
Publications (3)
Publication Number | Publication Date |
---|---|
JP2017073789A true JP2017073789A (en) | 2017-04-13 |
JP2017073789A5 JP2017073789A5 (en) | 2017-12-07 |
JP6494584B2 JP6494584B2 (en) | 2019-04-03 |
Family
ID=51535030
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
JP2016500901A Active JP6352381B2 (en) | 2013-03-15 | 2014-03-07 | Knowledge / factor ownership inspection to protect privacy for permanent authentication |
JP2016211833A Active JP6494584B2 (en) | 2013-03-15 | 2016-10-28 | Authentication method, program for causing computer to execute authentication method, and apparatus |
Family Applications Before (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
JP2016500901A Active JP6352381B2 (en) | 2013-03-15 | 2014-03-07 | Knowledge / factor ownership inspection to protect privacy for permanent authentication |
Country Status (8)
Country | Link |
---|---|
US (1) | US8949960B2 (en) |
EP (1) | EP2973162B1 (en) |
JP (2) | JP6352381B2 (en) |
KR (1) | KR102257943B1 (en) |
CN (1) | CN105210071B (en) |
AU (1) | AU2014237590B2 (en) |
BR (1) | BR112015023183B1 (en) |
WO (1) | WO2014150064A1 (en) |
Families Citing this family (5)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
AU2015234221B2 (en) * | 2014-03-16 | 2017-02-16 | Haventec Pty Ltd | Persistent authentication system incorporating one time pass codes |
CN105337928B (en) * | 2014-06-24 | 2019-09-13 | 阿里巴巴集团控股有限公司 | Method for identifying ID, safety protection problem generation method and device |
CN107070871B (en) * | 2017-01-12 | 2020-04-24 | 阿里巴巴集团控股有限公司 | Identity verification method and device |
WO2020246402A1 (en) * | 2019-06-05 | 2020-12-10 | ソニー株式会社 | Identity verification program, identity verification method, user terminal, and user authentication program |
CN112487485B (en) * | 2020-05-09 | 2022-12-27 | 支付宝(杭州)信息技术有限公司 | Personal data processing method and device based on zero-knowledge proof and electronic equipment |
Citations (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20070094497A1 (en) * | 2005-10-21 | 2007-04-26 | Avaya Technology Corp. | Secure authentication with voiced responses from a telecommunications terminal |
JP2008203720A (en) * | 2007-02-22 | 2008-09-04 | Kddi Corp | Threshold secret sharing apparatus, threshold secret sharing method, secret information restoring method and program |
US20090300364A1 (en) * | 2008-05-29 | 2009-12-03 | James Paul Schneider | Username based authentication security |
JP2011035941A (en) * | 2003-07-28 | 2011-02-17 | Sony Corp | Information processing device and method, and program |
Family Cites Families (15)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6760752B1 (en) | 1999-06-28 | 2004-07-06 | Zix Corporation | Secure transmission system |
US20060085647A1 (en) * | 2000-03-24 | 2006-04-20 | Neff C A | Detecting compromised ballots |
US7228417B2 (en) | 2002-02-26 | 2007-06-05 | America Online, Inc. | Simple secure login with multiple-authentication providers |
US7725730B2 (en) | 2002-08-09 | 2010-05-25 | Emc Corporation | Cryptographic methods and apparatus for secure authentication |
US7461399B2 (en) | 2004-07-30 | 2008-12-02 | Rsa Security Inc. | PIN recovery in a smart card |
US20070162961A1 (en) | 2005-02-25 | 2007-07-12 | Kelvin Tarrance | Identification authentication methods and systems |
JP4697583B2 (en) | 2005-03-02 | 2011-06-08 | 琢晃 伊藤 | Personal authentication system that avoids leakage of personal information |
US7739733B2 (en) | 2005-11-02 | 2010-06-15 | Emc Corporation | Storing digital secrets in a vault |
EP2016701A4 (en) | 2006-04-25 | 2012-04-25 | Stephen Laurence Boren | Dynamic distributed key system and method for identity management, authentication servers, data security and preventing man-in-the-middle attacks |
EP2122900A4 (en) * | 2007-01-22 | 2014-07-23 | Spyrus Inc | Portable data encryption device with configurable security functionality and method for file encryption |
CN101145911B (en) | 2007-10-30 | 2010-05-19 | 江汉大学 | Identity authentication method with privacy protection and password retrieval function |
JP6220110B2 (en) * | 2008-09-26 | 2017-10-25 | コーニンクレッカ フィリップス エヌ ヴェＫｏｎｉｎｋｌｉｊｋｅ Ｐｈｉｌｉｐｓ Ｎ．Ｖ． | Device and user authentication |
US8527758B2 (en) * | 2009-12-09 | 2013-09-03 | Ebay Inc. | Systems and methods for facilitating user identity verification over a network |
US8842827B2 (en) * | 2010-07-16 | 2014-09-23 | Intryca, Inc. | Mobile phone aided operations system and method |
JP4820928B1 (en) | 2011-07-08 | 2011-11-24 | 株式会社野村総合研究所 | Authentication system and authentication method |
-
2013
- 2013-03-15 US US13/844,619 patent/US8949960B2/en active Active
-
2014
- 2014-03-07 EP EP14769429.3A patent/EP2973162B1/en active Active
- 2014-03-07 WO PCT/US2014/022075 patent/WO2014150064A1/en active Application Filing
- 2014-03-07 CN CN201480027980.2A patent/CN105210071B/en active Active
- 2014-03-07 KR KR1020157029514A patent/KR102257943B1/en active IP Right Grant
- 2014-03-07 BR BR112015023183-7A patent/BR112015023183B1/en active IP Right Grant
- 2014-03-07 AU AU2014237590A patent/AU2014237590B2/en active Active
- 2014-03-07 JP JP2016500901A patent/JP6352381B2/en active Active
-
2016
- 2016-10-28 JP JP2016211833A patent/JP6494584B2/en active Active
Patent Citations (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
JP2011035941A (en) * | 2003-07-28 | 2011-02-17 | Sony Corp | Information processing device and method, and program |
US20070094497A1 (en) * | 2005-10-21 | 2007-04-26 | Avaya Technology Corp. | Secure authentication with voiced responses from a telecommunications terminal |
JP2008203720A (en) * | 2007-02-22 | 2008-09-04 | Kddi Corp | Threshold secret sharing apparatus, threshold secret sharing method, secret information restoring method and program |
US20090300364A1 (en) * | 2008-05-29 | 2009-12-03 | James Paul Schneider | Username based authentication security |
Non-Patent Citations (4)
Title |
---|
YUKO TAMURA, ET AL.: "Update of Access Structure in Shamir's (k,n) Threshold Scheme", １９９９年暗号と情報セキュリティシンポジウム予稿集, vol. Volume I of II, JPN7009000002, 26 January 1999 (1999-01-26), JP, pages ｐｐ．４６９−４７４ * |
井上 勝文 ほか: "データセットの違いが物体認識に与える影響の解析 −特徴ベクトルの一致検索を用いた認識手法の場合−", 電気学会論文誌Ｃ 電子・情報・システム部門誌, vol. Ｖｏｌ．１３１ Ｎｏ．１１, JPN6019003145, 1 November 2011 (2011-11-01), JP, pages ｐｐ．１９１５−１９２４ * |
島崎 憲明 ほか: "（ｋ，ｎ）しきい値法における多数決を用いた不正検出方式とその性能評価", 電子情報通信学会技術研究報告, vol. Ｖｏｌ．１１２ Ｎｏ．４６０, JPN6019003148, 28 February 2013 (2013-02-28), JP, pages ｐｐ．１８１−１８８ * |
平野 亮 ほか: "パスワード運用管理に関する考察および提案とその開発", 電子情報通信学会技術研究報告, vol. Ｖｏｌ．１１１、Ｎｏ．２８５, JPN6016007251, 7 November 2011 (2011-11-07), JP, pages ｐｐ．１２９−１３４ * |
Also Published As
Publication number | Publication date |
---|---|
EP2973162A4 (en) | 2016-09-07 |
BR112015023183A8 (en) | 2018-01-02 |
KR102257943B1 (en) | 2021-05-28 |
US8949960B2 (en) | 2015-02-03 |
CN105210071B (en) | 2018-06-01 |
EP2973162B1 (en) | 2018-06-06 |
WO2014150064A1 (en) | 2014-09-25 |
CN105210071A (en) | 2015-12-30 |
US20140282942A1 (en) | 2014-09-18 |
JP6352381B2 (en) | 2018-07-04 |
JP6494584B2 (en) | 2019-04-03 |
KR20150132467A (en) | 2015-11-25 |
JP2016512931A (en) | 2016-05-09 |
AU2014237590B2 (en) | 2019-02-28 |
BR112015023183A2 (en) | 2017-07-18 |
AU2014237590A1 (en) | 2015-09-10 |
BR112015023183B1 (en) | 2022-04-05 |
EP2973162A1 (en) | 2016-01-20 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US11233637B2 (en) | System and method for validating an entity | |
US10735407B2 (en) | System and method for temporary password management | |
US11271926B2 (en) | System and method for temporary password management | |
US11388174B2 (en) | System and method for securing a communication channel | |
US9740849B2 (en) | Registration and authentication of computing devices using a digital skeleton key | |
JP6494584B2 (en) | Authentication method, program for causing computer to execute authentication method, and apparatus | |
US11128457B2 (en) | Cryptographic key generation using external entropy generation | |
CN116318617B (en) | Medical rescue material charity donation method based on RFID and blockchain | |
Nakouri et al. | A new biometric-based security framework for cloud storage | |
JP7250960B2 (en) | User authentication and signature device using user biometrics, and method thereof | |
JP6087480B1 (en) | Authentication device, authentication system, and authentication program | |
US11741215B1 (en) | Recipient credentialing leveraging private keys on keystores read by provisioned devices | |
Abdulmalik et al. | Secure two-factor mutual authentication scheme using shared image in medical healthcare environment | |
US20240121098A1 (en) | Scalable Authentication System with Synthesized Signed Challenge | |
Maqbali | Strengthening Password-Based Authentication | |
Jubur | On the Security and Usability of New Paradigms of Web Authentication | |
WO2021028705A1 (en) | Recovery of secret data in a distributed system |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
A521 | Request for written amendment filed |
Free format text: JAPANESE INTERMEDIATE CODE: A523Effective date: 20170307 |
|
A621 | Written request for application examination |
Free format text: JAPANESE INTERMEDIATE CODE: A621Effective date: 20170307 |
|
A521 | Request for written amendment filed |
Free format text: JAPANESE INTERMEDIATE CODE: A523Effective date: 20171020 |
|
A131 | Notification of reasons for refusal |
Free format text: JAPANESE INTERMEDIATE CODE: A131Effective date: 20180515 |
|
A521 | Request for written amendment filed |
Free format text: JAPANESE INTERMEDIATE CODE: A523Effective date: 20180815 |
|
TRDD | Decision of grant or rejection written | ||
A01 | Written decision to grant a patent or to grant a registration (utility model) |
Free format text: JAPANESE INTERMEDIATE CODE: A01Effective date: 20190205 |
|
A61 | First payment of annual fees (during grant procedure) |
Free format text: JAPANESE INTERMEDIATE CODE: A61Effective date: 20190305 |
|
R150 | Certificate of patent or registration of utility model |
Ref document number: 6494584Country of ref document: JPFree format text: JAPANESE INTERMEDIATE CODE: R150 |
|
RD02 | Notification of acceptance of power of attorney |
Free format text: JAPANESE INTERMEDIATE CODE: R3D02 |
|
R250 | Receipt of annual fees |
Free format text: JAPANESE INTERMEDIATE CODE: R250 |
|
R250 | Receipt of annual fees |
Free format text: JAPANESE INTERMEDIATE CODE: R250 |
|
R250 | Receipt of annual fees |
Free format text: JAPANESE INTERMEDIATE CODE: R250 |
US7716205B1 - System for user driven ranking of web pages - Google Patents
System for user driven ranking of web pages Download PDFInfo
- Publication number
- US7716205B1 US7716205B1 US12/608,966 US60896609A US7716205B1 US 7716205 B1 US7716205 B1 US 7716205B1 US 60896609 A US60896609 A US 60896609A US 7716205 B1 US7716205 B1 US 7716205B1
- Authority
- US
- United States
- Prior art keywords
- page
- web
- link
- web pages
- selections
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Fee Related
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/951—Indexing; Web crawling techniques
Definitions
- the present invention generally relates to the analysis of links between World Wide Web (Web) pages and the use of data concerning user actions to calculate numerical rankings of the pages.
- Web World Wide Web
- PageRankTM is currently the most widely deployed and influential algorithm for the ranking of Web pages and is the basis for the Internet search engine used by GoogleTM. More particularly, and as described in U.S. Pat. No. 6,285,999, PageRank is a link analysis algorithm that assigns numerical weights to each element of a set of hyperlinked documents (e.g., Web pages) in order to measure each document's relative importance within the set of documents. The assigned weight is called the PageRank of a document D, and is denoted PR(D).
- PageRank is one of the key values determining the order in which the result links should be displayed by computing a numerical value for each Web page. Other factors also influence relative order of results returned in response to a query, including the appearance of query keywords in the title of a Web page, headings, frequency of occurrences in the Web page, keyword appearances in the anchor text of the links on pages pointing to a given page, and other factors.
- the result links are then presented in a list in order of descending PageRank value.
- PageRank, PR, of a Web page, pg i is defined as follows:
- Pages pg j denote Web pages pointing to page pg i , in other words pages containing links to page pg i .
- N is the total number of Web pages and d is a damping factor, which for PageRank is the probability that a random surfer will continue clicking on links on Web pages.
- PageRank can be viewed as the probability that a random surfer will land on a particular page by following links on Web pages and choosing a link on a current page at random.
- Such random surfer can be modeled as a Markov chain or Markov process.
- a random surfer can land on pages with no outgoing links, in which case the surfing cannot continue, or get stuck in a set of Web pages that form a cycle.
- the random surfer can choose to jump on a random Web page with probability 1 - d , where d is the damping factor, instead of following links.
- the random jumping and the damping factor are required to ensure the convergence of the process of computation of PageRank values.
- linked documents are ranked by observing link selections for referred documents from referring documents and counting such selections.
- the counts for each of the link selections are stored at various computer systems, including but not limited to a distributed network, an individual computer, a centralized network of computers connected through a local network, or a hybrid system consisting of combinations of the foregoing, and processed (e.g., using a discrete probability distribution defined by the counts of the link selections) to obtain page ranks for the referred documents.
- the link selections may be observed by a browser extension running on individual ones of the computer systems of the distributed network.
- counts of the link selections may be stored at locations within a distributed network determined by a distributed hash table or another such arrangement of nodes in a network with a logarithmic network diameter where the time to find any node is a logarithmic function of the size of the network.
- counts of the linked sections may be stored on a centralized system that includes a collection of computers connected through a local network or a hybrid system comprised of a combination of distributed and centralized systems. Search request results may be displayed in a ranked order as determined by the page ranks.
- FIG. 1 illustrates an example of a computer system which may store and execute a computer-implemented process for monitoring user selections of links on a Web page in accordance with an embodiment of the present invention.
- FIG. 2 illustrates an architectural view of the computer system shown in FIG. 1 .
- FIG. 3 illustrates an example of a process for counting link selections from referring pages in accordance with an embodiment of the present invention.
- FIG. 4 illustrates an example of a distributed system within which embodiments of the present invention may be implemented
- the random surfer model for page ranking ignores the reality that not all Web pages are equal. That is, some Web pages are clearly more popular than others. Hence, links associated with such pages are more likely to be traversed by actual Web surfers and, accordingly, should be accorded more weight than links which are unlikely to be selected by Web surfers. Accordingly, the present inventor has developed a new procedure for ranking Web pages which takes into account the actions of an actual Web surfer. The process and system implementing same are described below.
- the coefficient 1/L(pg j ), which is multiplied by PR(pg j ) in computing the rank value of a particular page, can be viewed as the probability that a random surfer will select (e.g., click on) a particular link on page pg j .
- the same value, 1/L(pg j ) is used in computing PageRank values for all pages to which page pg, points. Because the same value is used for outgoing links to pages, the random surfer model of PageRank assumes that all outgoing links have equal probability of being followed. In other words, a random surfer will click on a link on a particular page with equal probability.
- the present invention recognizes that the probabilities of following links on a particular page pg, do riot have to be equal. Accordingly, in computing rank values, we replace the single coefficient 1/L(pg j ), which is constant for pg j , with a set of probabilities p ij . Probability p ij is the probability that a surfer will click the link to the page p i on the page p j .
- the rank a Web page is computed as follows:
- PR ⁇ ( pg i ) 1 - d N + d ⁇ ⁇ j ⁇ ⁇ PR ⁇ ( pg j ) ⁇ P ij .
- the set of probabilities p ij for a given page, pg j represent a discrete probability distribution satisfying the following constraints:
- the counter is implemented in a distributed network organized as a distributed hash table. In other instances, the counters can be stored in a centralized system of computers connected through a local network or a hybrid combination of distributed and centralized systems.
- the probabilities p ij are intended to measure actual probabilities of users following links on pages, as determined by actual link selections from a set of users, instead of assuming an uniform probability.
- the links selections are counted by a computer-implemented process running on a user's computer system. An example of such a computer system is shown in FIG. 1 .
- Computer system 100 upon which the link selection monitoring software may be installed, includes a bus 102 or other communication mechanism for communicating information, and a processor 104 coupled with the bus 102 for processing information.
- Computer system 100 also includes a main memory 106 , such as a RAM or other dynamic storage device, coupled to the bus 102 for storing information and instructions (such as instructions comprising the link selection monitoring software when the program is running) to be executed by processor 104 .
- Main memory 106 also may be used for storing temporary variables or other intermediate information during execution of instructions to be executed by processor 104 .
- Computer system 100 further includes a ROM 108 or other static storage device coupled to the bus 102 for storing static information and instructions for the processor 104 .
- a storage device 110 such as a hard disk, is provided and coupled to the bus 102 for storing information and instructions (such as instructions comprising the link selection monitoring software).
- Computer system 100 may be coupled via the bus 102 to a display 112 for displaying information to a computer user.
- An input device 114 is coupled to the bus 102 for communicating information and command selections to the processor 104 .
- cursor control device 116 is Another type of user input device, such as a mouse, a trackball, or cursor direction keys for communicating direction information and command selections to processor 304 and for controlling cursor movement on the display 112 .
- Computer system 100 also includes a communication interface 118 coupled to the bus 102 .
- Communication interface 108 provides for two-way, wired and/or wireless data communication to/from computer system 100 , for example, via a local area network (LAN).
- LAN local area network
- Communication interface 118 sends and receives electrical, electromagnetic or optical signals which carry digital data streams representing various types of information.
- two or more computer systems 100 may be networked together in a conventional manner with each using a respective communication interface 118 .
- Network link 120 typically provides data communication through one or more networks to other data devices.
- network link 120 may provide a connection through LAN 122 to a host computer 124 or to data equipment operated by an Internet service provider (ISP) 126 .
- ISP 126 in turn provides data communication services through the Internet 128 , which, in turn, may provide connectivity to multiple remote computer systems 130 a - 130 n (any or all of which may be similar to computer system 100 .
- LAN 122 and Internet 128 both use electrical, electromagnetic or optical signals which carry digital data streams.
- Computer system 100 can send messages and receive data through the network(s), network link 120 and communication interface 118 .
- FIG. 2 illustrates the same computer system 100 , this time from an architectural standpoint.
- the computer system includes a hardware layer 202 , which is abstracted by an operating system 204 . Any conventional operating system may be used.
- the operating system may be stored in storage device 110 and read into memory 106 when executing.
- Running on top of the operating system are the programs which make up the application layer 206 , including a Web browser 208 .
- the link monitoring software can be implemented in form of a browser extension or plug-in 210 , or in other cases may be a separate program in application layer 206 .
- Browser plug-ins and extensions are computer implemented processes integrated into a browser environment and which are capable of performing miscellaneous actions in response to user actions within the browser.
- FIG. 3 illustrates a process 300 that highlights the operations of the link selection monitoring software.
- an HTTP request is initiated by the browser ( 304 ).
- the request includes the URL of the page which is being requested (the requested page), i.e., the URL of the link on which the user clicked.
- it includes the URL of the page which the user was looking at (the requesting page) and on which the requested link exists.
- the URL of the requesting page is specified in the “Referer” field of the HTTP request initiated by the browser.
- a request for the link to page pg i on page pg j will have the HTTP Referer field of the header set to the URL of page pg, and the requested URL will be the URL of page pg i .
- such a request causes an increase in the count of selections for the link to page pg i on page pg j ( 308 ).
- This process repeats for each link selection from each page being browsed by the user ( 310 ). That is, the browser extension software on the user's computer system observes the user's link selections and initiates actions for updates of counts of such selections on the referer pages.
- the counters of link selections v ij are distributed in a peer-to-peer network, comprising a distributed file system.
- a peer-to-peer network comprising a distributed file system.
- FIG. 4 Such a system 400 , is illustrated in FIG. 4 .
- Each computer 402 a - 402 n is communicatively coupled via one or more networks 404 (such as the Internet) and can be responsible for handling counters for a set of pages.
- the name space of URLs for all pages is divided among computers 402 a - 402 n using a distributed hash table (DHT) and each respective counter for a given URL is stored at a location determined by the DHT.
- DHT distributed hash table
- the counters of link selections can be stored in a centralized system of computers connected through a local network or a hybrid combination of distributed and centralized systems.
- the counts of the link selections may be stored at locations determined by arrangement of nodes in a network with a logarithmic network diameter where the time to find any node in the network is a logarithmic function of a size of the network.
- a hash table is a function that uniformly and, often uniquely, maps strings to a range of numbers. The number to which a hash function maps a given string is called the key for that string.
- a DHT then is a means for partitioning the space of all possible keys among a set of computers connected through a network.
- One or more of the computer systems 402 a - 402 n may be configured with the link selection monitoring software and each may be configured to perform the data storage and synchronization processes associated with the DHT-based distributed file system (DHTFS), for example through the use of appropriately coded computer-readable instructions stored on computer-readable media and executed by computer processors associated with each computer system.
- the DHTFS stores content across the address space defined by the storage devices of computer systems 402 a - 402 n using the DHT keys as partitions for that address space. In practice, the number of individual computer systems that make up distributed system 400 may be very large.
- the file system used by distributed system 400 relies on the mappings provided by a DHT to partition the storage of content items within the distributed system so that content items (the count values for the link selections observed by the link selection monitoring software) are stored at individual ones of computer systems 402 a - 402 n , but are accessible to all such computer systems.
- the storage and retrieval of content items are facilitated through two principal kinds of messages:
- the computers in the distributed network compute rank values of all pages by performing a distributed computation and communicating values of probabilities p ij as well as values for intermediate computations.
- the individual computers monitoring HTTP requests send information about the observed link selections to a common server, a collection of servers connected through a local network, or a hybrid system consisting of a combination of distributed and centralized systems.
- the server, or servers use information received from the individual computers to compute probabilities p ij and compute the rank values as described above.
- the rank of each page associated with a result for the request can be read (e.g., using a gel operation) and the URLs for such pages listed in an order determined by such ranks.
- Such organization may be accomplished at each browser, or at a central server or servers before the results are passed to an individual computer system's browser.
- various embodiments of the present invention may be implemented with the aid of computer-implemented processes or methods (i.e., computer programs or routines) or on any programmable or dedicated hardware implementing digital logic.
- Such processes may be rendered in any computer language including, without limitation, a object oriented programming language, assembly language, markup languages, and the like, as well as object-oriented environments such as the Common Object Request Broker Architecture (CORBA), JavaTM and the like, or on any programmable logic hardware like CPLD, FPGA and the like.
- CORBA Common Object Request Broker Architecture
- JavaTM JavaTM
- CPLD programmable logic hardware
- Such apparatus may be specially constructed for the required purposes, or may be appropriately programmed, or selectively activated or reconfigured by a computer-readable instructions stored in or on computer-readable storage media (such as, but not limited to, any type of disk including floppy disks, optical disks, hard disks, CD-ROMs, and magnetic-optical disks, or read-only memories (ROMs), random access memories (RAMs), erasable ROMs (EPROMs), electrically erasable ROMs (EEPROMs), magnetic or optical cards, or any type of media suitable for storing computer-readable instructions) to perform the operations.
- ROMs read-only memories
- RAMs random access memories
- EPROMs erasable ROMs
- EEPROMs electrically erasable ROMs
- magnetic or optical cards or any type of media suitable for storing computer-readable instructions
Abstract
Description
Pages pgj denote Web pages pointing to page pgi, in other words pages containing links to page pgi. N is the total number of Web pages and d is a damping factor, which for PageRank is the probability that a random surfer will continue clicking on links on Web pages.
The set of probabilities pij for a given page, pgj, represent a discrete probability distribution satisfying the following constraints:
Thus, we define probabilities pij as:
and
0≦vij≦Vj,
0≦p ij =v ij /V j≦1
-
- DHT.put(key,value)
- DHT.get(key)
The DHT put message is used for storing an arbitrary sequence of bytes value under the key key. The DHT gel message returns the last value stored in the DHT under a given key. Thus, each increase in count for a counter vij can be encoded as a DHT put request to the hash corresponding to the URL of page pj. For instance, such a DHT put could be encoded as
- DHT.get(key)
- DHT.put(hash(IRL(pgj),“INC(URL(pgi),1”)
The second argument encodes a message to increment the counter for pgi. This increment request is automatically routed by the DHT to the computer responsible for handling counters for page pgj. Creation of replicas of the stored data and synchronization among them is handled by the underlying distributed file system as more fully discussed in a co-pending U.S. patent application Ser. No. 12/608,932 entitled, “DHT-BASED DISTRIBUTED FILE SYSTEM FOR SIMULTANEOUS USE BY MILLIONS OF FREQUENTLY DISCONNECTED, WORLD-WIDE USERS”, filed on even date herewith, assigned to the assignee of the present invention and incorporated herein by reference in its entirety.
- DHT.put(key,value)
Claims (4)
Priority Applications (5)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US12/608,966 US7716205B1 (en) | 2009-10-29 | 2009-10-29 | System for user driven ranking of web pages |
US12/759,231 US7873623B1 (en) | 2009-10-29 | 2010-04-13 | System for user driven ranking of web pages |
PCT/US2010/030915 WO2011053377A1 (en) | 2009-10-29 | 2010-04-13 | System for user driven ranking of web pages |
US12/941,913 US20110106793A1 (en) | 2009-10-29 | 2010-11-08 | System for User Driven Ranking of Web Pages |
US13/267,840 US20120226685A1 (en) | 2009-10-29 | 2011-10-06 | System for User Driven Ranking of Web Pages |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US12/608,966 US7716205B1 (en) | 2009-10-29 | 2009-10-29 | System for user driven ranking of web pages |
Related Child Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US12/759,231 Continuation US7873623B1 (en) | 2009-10-29 | 2010-04-13 | System for user driven ranking of web pages |
Publications (1)
Publication Number | Publication Date |
---|---|
US7716205B1 true US7716205B1 (en) | 2010-05-11 |
Family
ID=42139436
Family Applications (4)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US12/608,966 Expired - Fee Related US7716205B1 (en) | 2009-10-29 | 2009-10-29 | System for user driven ranking of web pages |
US12/759,231 Expired - Fee Related US7873623B1 (en) | 2009-10-29 | 2010-04-13 | System for user driven ranking of web pages |
US12/941,913 Abandoned US20110106793A1 (en) | 2009-10-29 | 2010-11-08 | System for User Driven Ranking of Web Pages |
US13/267,840 Abandoned US20120226685A1 (en) | 2009-10-29 | 2011-10-06 | System for User Driven Ranking of Web Pages |
Family Applications After (3)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US12/759,231 Expired - Fee Related US7873623B1 (en) | 2009-10-29 | 2010-04-13 | System for user driven ranking of web pages |
US12/941,913 Abandoned US20110106793A1 (en) | 2009-10-29 | 2010-11-08 | System for User Driven Ranking of Web Pages |
US13/267,840 Abandoned US20120226685A1 (en) | 2009-10-29 | 2011-10-06 | System for User Driven Ranking of Web Pages |
Country Status (2)
Country | Link |
---|---|
US (4) | US7716205B1 (en) |
WO (1) | WO2011053377A1 (en) |
Cited By (5)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20080189439A1 (en) * | 2007-02-01 | 2008-08-07 | Microsoft Corporation | Synchronization framework for occasionally connected applications |
EP2856352A4 (en) * | 2012-05-25 | 2016-03-09 | Google Inc | System and method for providing noted items |
US9614932B2 (en) | 2013-03-14 | 2017-04-04 | Microsoft Technology Licensing, Llc | Managing and implementing web application data snapshots |
US10503791B2 (en) | 2017-09-04 | 2019-12-10 | Borislav Agapiev | System for creating a reasoning graph and for ranking of its nodes |
US11443008B2 (en) | 2018-06-11 | 2022-09-13 | International Business Machines Corporation | Advanced web page content management |
Families Citing this family (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
KR101640051B1 (en) * | 2009-10-30 | 2016-07-15 | 라쿠텐 인코포레이티드 | Characteristic content determination device, characteristic content determination method, recording medium, content generation device, and related content insertion device |
US10614134B2 (en) | 2009-10-30 | 2020-04-07 | Rakuten, Inc. | Characteristic content determination device, characteristic content determination method, and recording medium |
US20110270841A1 (en) * | 2010-04-28 | 2011-11-03 | Cisco Technology, Inc. | Distributed Tag-Based Correlation Engine |
US8478719B2 (en) * | 2011-03-17 | 2013-07-02 | Remote Media LLC | System and method for media file synchronization |
US9619539B2 (en) * | 2012-09-28 | 2017-04-11 | Vmware, Inc. | Automated document replication in a distributed computing system |
CN105183873A (en) * | 2015-09-18 | 2015-12-23 | 北京博雅立方科技有限公司 | Malicious clicking behavior detection method and device |
Citations (17)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
WO2001016807A1 (en) | 1999-08-31 | 2001-03-08 | Mindcrossing, Inc. | An internet search system for tracking and ranking selected records from a previous search |
US20020062323A1 (en) | 2000-11-20 | 2002-05-23 | Yozan Inc | Browser apparatus, server apparatus, computer-readable medium, search system and search method |
US6421675B1 (en) * | 1998-03-16 | 2002-07-16 | S. L. I. Systems, Inc. | Search engine |
US6546388B1 (en) * | 2000-01-14 | 2003-04-08 | International Business Machines Corporation | Metadata search results ranking system |
US20060064411A1 (en) | 2004-09-22 | 2006-03-23 | William Gross | Search engine using user intent |
US20070033275A1 (en) | 2003-03-07 | 2007-02-08 | Nokia Corporation | Method and a device for frequency counting |
US20070106659A1 (en) | 2005-03-18 | 2007-05-10 | Yunshan Lu | Search engine that applies feedback from users to improve search results |
US20070244857A1 (en) | 2006-04-17 | 2007-10-18 | Gilbert Yu | Generating an index for a network search engine |
US20080154879A1 (en) | 2006-12-22 | 2008-06-26 | Yahoo! Inc. | Method and apparatus for creating user-generated document feedback to improve search relevancy |
US20080256050A1 (en) | 2007-04-10 | 2008-10-16 | Ruofei Zhang | System and method for modeling user selection feedback in a search result page |
US7444358B2 (en) | 2004-08-19 | 2008-10-28 | Claria Corporation | Method and apparatus for responding to end-user request for information-collecting |
US20090030876A1 (en) | 2004-01-19 | 2009-01-29 | Nigel Hamilton | Method and system for recording search trails across one or more search engines in a communications network |
US20090182834A1 (en) * | 2008-01-15 | 2009-07-16 | Thomas Zettler | Device and Method for Providing Data |
US7565363B2 (en) | 1999-04-01 | 2009-07-21 | Anwar Mohammed S | Search engine with user activity memory |
US20090193007A1 (en) | 2008-01-28 | 2009-07-30 | Andrea Filippo Mastalli | Systems and methods for ranking search engine results |
US20090252071A1 (en) * | 2008-04-02 | 2009-10-08 | Nokia Corporation | Method and deevice for network messaging |
US20100010987A1 (en) * | 2008-07-01 | 2010-01-14 | Barry Smyth | Searching system having a server which automatically generates search data sets for shared searching |
Family Cites Families (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7356530B2 (en) * | 2001-01-10 | 2008-04-08 | Looksmart, Ltd. | Systems and methods of retrieving relevant information |
US20040030741A1 (en) * | 2001-04-02 | 2004-02-12 | Wolton Richard Ernest | Method and apparatus for search, visual navigation, analysis and retrieval of information from networks with remote notification and content delivery |
US7594011B2 (en) * | 2004-02-10 | 2009-09-22 | Narus, Inc. | Network traffic monitoring for search popularity analysis |
US20060195443A1 (en) * | 2005-02-11 | 2006-08-31 | Franklin Gary L | Information prioritisation system and method |
US7995588B2 (en) * | 2006-01-27 | 2011-08-09 | Vuze Llc | Systems and methods for distributing data within an internet having a plurality of nodes |
US8301728B2 (en) * | 2006-07-21 | 2012-10-30 | Yahoo! Inc. | Technique for providing a reliable trust indicator to a webpage |
-
2009
- 2009-10-29 US US12/608,966 patent/US7716205B1/en not_active Expired - Fee Related
-
2010
- 2010-04-13 US US12/759,231 patent/US7873623B1/en not_active Expired - Fee Related
- 2010-04-13 WO PCT/US2010/030915 patent/WO2011053377A1/en active Application Filing
- 2010-11-08 US US12/941,913 patent/US20110106793A1/en not_active Abandoned
-
2011
- 2011-10-06 US US13/267,840 patent/US20120226685A1/en not_active Abandoned
Patent Citations (18)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6421675B1 (en) * | 1998-03-16 | 2002-07-16 | S. L. I. Systems, Inc. | Search engine |
US7565363B2 (en) | 1999-04-01 | 2009-07-21 | Anwar Mohammed S | Search engine with user activity memory |
WO2001016807A1 (en) | 1999-08-31 | 2001-03-08 | Mindcrossing, Inc. | An internet search system for tracking and ranking selected records from a previous search |
US6546388B1 (en) * | 2000-01-14 | 2003-04-08 | International Business Machines Corporation | Metadata search results ranking system |
US6718324B2 (en) | 2000-01-14 | 2004-04-06 | International Business Machines Corporation | Metadata search results ranking system |
US20020062323A1 (en) | 2000-11-20 | 2002-05-23 | Yozan Inc | Browser apparatus, server apparatus, computer-readable medium, search system and search method |
US20070033275A1 (en) | 2003-03-07 | 2007-02-08 | Nokia Corporation | Method and a device for frequency counting |
US20090030876A1 (en) | 2004-01-19 | 2009-01-29 | Nigel Hamilton | Method and system for recording search trails across one or more search engines in a communications network |
US7444358B2 (en) | 2004-08-19 | 2008-10-28 | Claria Corporation | Method and apparatus for responding to end-user request for information-collecting |
US20060064411A1 (en) | 2004-09-22 | 2006-03-23 | William Gross | Search engine using user intent |
US20070106659A1 (en) | 2005-03-18 | 2007-05-10 | Yunshan Lu | Search engine that applies feedback from users to improve search results |
US20070244857A1 (en) | 2006-04-17 | 2007-10-18 | Gilbert Yu | Generating an index for a network search engine |
US20080154879A1 (en) | 2006-12-22 | 2008-06-26 | Yahoo! Inc. | Method and apparatus for creating user-generated document feedback to improve search relevancy |
US20080256050A1 (en) | 2007-04-10 | 2008-10-16 | Ruofei Zhang | System and method for modeling user selection feedback in a search result page |
US20090182834A1 (en) * | 2008-01-15 | 2009-07-16 | Thomas Zettler | Device and Method for Providing Data |
US20090193007A1 (en) | 2008-01-28 | 2009-07-30 | Andrea Filippo Mastalli | Systems and methods for ranking search engine results |
US20090252071A1 (en) * | 2008-04-02 | 2009-10-08 | Nokia Corporation | Method and deevice for network messaging |
US20100010987A1 (en) * | 2008-07-01 | 2010-01-14 | Barry Smyth | Searching system having a server which automatically generates search data sets for shared searching |
Non-Patent Citations (5)
Title |
---|
Abhishek Kumar; Shashidhar Merugu; Jun (Jim) Xu; Xingxing Yu, Ulysses: A Robust, Low-Diameter, Low-Latency Peer-to-Peer Network, Proceedings of the 11th IEEE International Conference on Network Protocols, p. 258, 2003. |
Benjamin Piwowarski, Predictive user click models based on click-through history, Conference on Information and Knowledge Management archive, Proceedings of the sixteenth ACM conference on Conference on information and knowledge management, SESSION: Web retrieval I (IR), Lisbon, Portugal, pp. 175-182, 2007, ACM New York, NY, USA. |
Taly Sharon, Henry Lieberman & Ted Selker, A zero-input interface for leveraging group experience in web browsing, International Conference on Intelligent User Interfaces archive, Proceedings of the 8th international conference on Intelligent user interfaces, Miami, Florida, USA, Poster Session, pp. 290-292, 2003. |
Title: Koorde: A simple degree-optional distributed hash table Author: Kasshoek et al. Date: 2003 Publisher: IRIS Project Http://project-iris.net Pertinent pp. 6. * |
Wang, Q. & Yiu-Kai, NG, An ontology-based binary-categorization approach for recognizing multiple-record Web documents using a probabilistic retrieval model, Information Retrieval, vol. 6, No. 3-4, p. 295-332, Sep.-Dec. 2003, Kluwer Academic Publishers, USA. |
Cited By (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20080189439A1 (en) * | 2007-02-01 | 2008-08-07 | Microsoft Corporation | Synchronization framework for occasionally connected applications |
US7899917B2 (en) * | 2007-02-01 | 2011-03-01 | Microsoft Corporation | Synchronization framework for occasionally connected applications |
EP2856352A4 (en) * | 2012-05-25 | 2016-03-09 | Google Inc | System and method for providing noted items |
US9614932B2 (en) | 2013-03-14 | 2017-04-04 | Microsoft Technology Licensing, Llc | Managing and implementing web application data snapshots |
US10503791B2 (en) | 2017-09-04 | 2019-12-10 | Borislav Agapiev | System for creating a reasoning graph and for ranking of its nodes |
US11443008B2 (en) | 2018-06-11 | 2022-09-13 | International Business Machines Corporation | Advanced web page content management |
Also Published As
Publication number | Publication date |
---|---|
US7873623B1 (en) | 2011-01-18 |
US20120226685A1 (en) | 2012-09-06 |
WO2011053377A1 (en) | 2011-05-05 |
US20110106793A1 (en) | 2011-05-05 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US7716205B1 (en) | System for user driven ranking of web pages | |
Menczer et al. | Topical web crawlers: Evaluating adaptive algorithms | |
AU2005200231B2 (en) | Decision-theoretic web-crawling and predicting web-page change | |
Pant et al. | Crawling the web. | |
US7779001B2 (en) | Web page ranking with hierarchical considerations | |
US7908234B2 (en) | Systems and methods of predicting resource usefulness using universal resource locators including counting the number of times URL features occur in training data | |
JP4965086B2 (en) | Method and system for ranking objects based on relationships within and between types | |
Paranjape et al. | Improving website hyperlink structure using server logs | |
Novak | A survey of focused web crawling algorithms | |
US20080313115A1 (en) | Behavioral Profiling Using a Behavioral WEB Graph and Use of the Behavioral WEB Graph in Prediction | |
US20050060297A1 (en) | Systems and methods for ranking documents based upon structurally interrelated information | |
US7376643B2 (en) | Method and system for determining similarity of objects based on heterogeneous relationships | |
WO2009051809A1 (en) | Ranking and providing search results based in part on a number of click-through features | |
EP2329411A2 (en) | Document length as a static relevance feature for ranking search results | |
CN101855631A (en) | Navigational ranking for focused crawling | |
Doran et al. | A classification framework for web robots | |
Yan et al. | Research on PageRank and hyperlink-induced topic search in web structure mining | |
US10127314B2 (en) | Systems and methods for optimizing search engine performance | |
Shaila et al. | Intelligent Rule-Based Deep Web Crawler | |
Selamat et al. | Architecture for a parallel focused crawler for clickstream analysis | |
Kumar et al. | Review of link structure based ranking algorithms and hanging pages | |
Jiang et al. | Applying associative relationship on the clickthrough data to improve web search | |
Papadimitriou et al. | Simulation in Web data management | |
Ali | Self Ranking and Evaluation Approach for Focused Crawler Based on Multi-Agent System. | |
US7792854B2 (en) | Query dependent link-based ranking |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: WOWD, INC.,CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:AGAPIEV, BORISLAV;REEL/FRAME:023445/0491Effective date: 20090922 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:WOWD, INC.;REEL/FRAME:027008/0060Effective date: 20110623 |
|
CC | Certificate of correction | ||
FPAY | Fee payment |
Year of fee payment: 4 |
|
FEPP | Fee payment procedure |
Free format text: PAT HOLDER NO LONGER CLAIMS SMALL ENTITY STATUS, ENTITY STATUS SET TO UNDISCOUNTED (ORIGINAL EVENT CODE: STOL); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044101/0610Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 8TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1552)Year of fee payment: 8 |
|
LAPS | Lapse for failure to pay maintenance fees |
Free format text: PATENT EXPIRED FOR FAILURE TO PAY MAINTENANCE FEES (ORIGINAL EVENT CODE: EXP.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
FEPP | Fee payment procedure |
Free format text: MAINTENANCE FEE REMINDER MAILED (ORIGINAL EVENT CODE: REM.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
STCH | Information on status: patent discontinuation |
Free format text: PATENT EXPIRED DUE TO NONPAYMENT OF MAINTENANCE FEES UNDER 37 CFR 1.362 |
|
FP | Lapsed due to failure to pay maintenance fee |
Effective date: 20220511 |
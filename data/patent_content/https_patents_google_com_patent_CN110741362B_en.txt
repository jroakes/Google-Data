CN110741362B - Coordination of overlapping processing of audio queries - Google Patents
Coordination of overlapping processing of audio queries Download PDFInfo
- Publication number
- CN110741362B CN110741362B CN201980002176.1A CN201980002176A CN110741362B CN 110741362 B CN110741362 B CN 110741362B CN 201980002176 A CN201980002176 A CN 201980002176A CN 110741362 B CN110741362 B CN 110741362B
- Authority
- CN
- China
- Prior art keywords
- digital assistant
- response
- component
- query
- processing system
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active
Links
- 238000012545 processing Methods 0.000 title claims abstract description 350
- 230000004044 response Effects 0.000 claims abstract description 365
- 238000000034 method Methods 0.000 claims description 113
- 230000005236 sound signal Effects 0.000 claims description 65
- 230000008569 process Effects 0.000 claims description 49
- 230000006870 function Effects 0.000 claims description 44
- 230000009471 action Effects 0.000 description 65
- 238000004891 communication Methods 0.000 description 19
- 238000004590 computer program Methods 0.000 description 12
- 230000005540 biological transmission Effects 0.000 description 11
- 239000003795 chemical substances by application Substances 0.000 description 11
- 230000036961 partial effect Effects 0.000 description 7
- 238000013515 script Methods 0.000 description 7
- 238000007726 management method Methods 0.000 description 6
- 230000003993 interaction Effects 0.000 description 5
- 230000000007 visual effect Effects 0.000 description 5
- 230000000670 limiting effect Effects 0.000 description 4
- 238000009877 rendering Methods 0.000 description 4
- 238000013475 authorization Methods 0.000 description 3
- 230000008859 change Effects 0.000 description 3
- 238000005516 engineering process Methods 0.000 description 3
- 230000003287 optical effect Effects 0.000 description 3
- 230000000644 propagated effect Effects 0.000 description 3
- 238000013500 data storage Methods 0.000 description 2
- 238000010586 diagram Methods 0.000 description 2
- 230000033001 locomotion Effects 0.000 description 2
- 238000001303 quality assessment method Methods 0.000 description 2
- 230000002829 reductive effect Effects 0.000 description 2
- 238000000926 separation method Methods 0.000 description 2
- 230000003068 static effect Effects 0.000 description 2
- 230000001360 synchronised effect Effects 0.000 description 2
- 238000012546 transfer Methods 0.000 description 2
- IRLPACMLTUPBCL-KQYNXXCUSA-N 5'-adenylyl sulfate Chemical compound C1=NC=2C(N)=NC=NC=2N1[C@@H]1O[C@H](COP(O)(=O)OS(O)(=O)=O)[C@@H](O)[C@H]1O IRLPACMLTUPBCL-KQYNXXCUSA-N 0.000 description 1
- 241001611138 Isma Species 0.000 description 1
- 230000008901 benefit Effects 0.000 description 1
- 238000004364 calculation method Methods 0.000 description 1
- 230000008878 coupling Effects 0.000 description 1
- 238000010168 coupling process Methods 0.000 description 1
- 238000005859 coupling reaction Methods 0.000 description 1
- 230000000694 effects Effects 0.000 description 1
- 230000010354 integration Effects 0.000 description 1
- 230000002452 interceptive effect Effects 0.000 description 1
- 239000004973 liquid crystal related substance Substances 0.000 description 1
- 230000007257 malfunction Effects 0.000 description 1
- 239000003550 marker Substances 0.000 description 1
- 239000011159 matrix material Substances 0.000 description 1
- 238000010295 mobile communication Methods 0.000 description 1
- 230000002093 peripheral effect Effects 0.000 description 1
- 238000012805 post-processing Methods 0.000 description 1
- 239000004065 semiconductor Substances 0.000 description 1
- 239000007787 solid Substances 0.000 description 1
- 239000000758 substrate Substances 0.000 description 1
Abstract
Coordinated processing of audio queries is provided. The system receives a query. The system provides the query to the first digital assistant component and the second digital assistant component for processing. The system receives a first response to the query from the first digital assistant component and a second response to the query from the second digital assistant component. The first digital assistant component may be authorized to access a database to which the second digital assistant component is prohibited from accessing. The system determines to select a second response to the query from the second digital assistant component based on the ranking decision function. The system provides a second response from the second digital assistant to the computing device in response to the selection.
Description
Cross Reference to Related Applications
The present application claims the benefit of priority from U.S. patent application Ser. No.62/666,681, entitled "COORDINATION OF OVERLAPPING PROCESSING OF AUDIO QUERIES," filed on 5/3 of 2018, which is incorporated herein by reference in its entirety.
Background
Excessive network transmission of network traffic data between computing devices on a packet or other basis may prevent the computing devices from properly processing, completing operations related to, or responding to the network traffic data. Excessive network transmission of network traffic data can also complicate data routing or reduce the quality of the response if the responding computing device meets or exceeds its processing capabilities, which can lead to inefficient bandwidth utilization. A portion of the excess network transmission may include transmitting a request that is not a valid request.
Disclosure of Invention
At least one aspect relates to a system for coordinating overlapping processing (overlapping processing) of audio queries. The system may include a data processing system. The data processing system may include at least one processor and memory. The data processing system may receive, via the interface, one or more data packets including an audio signal detected by a sensor of the computing device. The data processing system may generate a query based on the audio signals received via the one or more data packets. The data processing system may transmit the query to a plurality of digital assistant components. The data processing system can receive a first response to the query from a first digital assistant component of the plurality of digital assistant components. The data processing system can receive a second response to the query from a second digital assistant component of the plurality of digital assistant components. The first digital assistant component may be authorized to access a database to which the second digital assistant component is prohibited from accessing. The data processing system may determine to select a second response from the second digital assistant component instead of the first response from the first digital assistant component based on the ranking decision function. The data processing system can provide a second response from the second digital assistant component to the computing device in response to the selection.
Optionally, the data processing system may be configured to select the second response from the second digital assistant component based on a pre-configured preference established for the second digital assistant component. Optionally, the data processing system may be configured to select the second response from the second digital assistant component based on a confidence score of the second response from the second digital assistant component. Alternatively, the data processing system may be configured to determine that the first digital assistant component is a preferred digital assistant. The data processing system may be configured to determine that the first response from the first digital assistant component is marked as a standby response. The data processing system may be configured to override (override) the first digital assistant component in response to determining that the first response from the first digital assistant component is marked as a standby response. The data processing system may be configured to select a second response from the second digital assistant component. The data processing system may be configured to maintain the first digital assistant component as a preferred digital assistant. Alternatively, the data processing system may be configured to: determining a signal for the query; and selecting a ranking decision function from a plurality of ranking decision functions based on the signal. Alternatively, the data processing system may be configured to: determining a signal for the query; and selecting a response from the second digital assistant component based on the signal. Optionally, the data processing system may be configured to select the second response based on the first response being an audio-only response based on the ranking decision function. Optionally, the data processing system may be configured to select the second response based on the ranking decision function based on the second digital assistant component accessing data stored in a memory of the computing device. Alternatively, the first response may include one of: calendar information or media content. Alternatively, the first digital assistant component may be configured to execute independently of the second digital assistant component to generate the first response. Optionally, the data processing system may be configured to transmit the query to each of the plurality of digital assistants via an independent branch, such that the plurality of digital assistants process the query in an overlapping manner. Alternatively, the first digital assistant component may be established by a different administrator than the second digital assistant component. Alternatively, the data processing system may be configured to: one or more data packets from the computing device are received via a streaming voice server configured to convert the audio to text. Optionally, the data processing system may be configured to receive a second response from the second digital assistant component before receiving the first response from the first digital assistant component. The data processing system may be configured to determine that the second digital assistant component is not a preferred digital assistant component. The data processing system may be configured to determine that the first digital assistant is a preferred digital assistant. The data processing system may be configured to wait for a first response from the first digital assistant component in response to determining that the second digital assistant component is not the preferred digital assistant and that the first digital assistant is the preferred digital assistant. The data processing system may be configured to determine, after receiving the first response from the first digital assistant component, that the first response is marked as a standby response. The data processing system may be configured to select the second response based on determining that the second digital assistant component is not the preferred digital assistant and that the first response is marked as a standby response.
At least one aspect relates to a method of coordinating overlapping processing of audio queries. The method may be performed by a data processing system that includes at least one processor and memory. The method may include: the data processing system receives one or more data packets comprising an audio signal detected by a sensor of the computing device. The method may include: the data processing system generates a query based on audio signals received via one or more data packets. The method may include: the data processing system transmits the query to a plurality of digital assistant components. The method may include: the data processing system receives a first response to the query from a first digital assistant component of the plurality of digital assistant components. The method may include: the data processing system receives a second response to the query from a second digital assistant component of the plurality of digital assistant components. The first digital assistant component may be authorized to access a database to which the second digital assistant component is prohibited from accessing. The method may include: the data processing system determines to select a second response from the second digital assistant component instead of the first response from the first digital assistant component based on the ranking decision function. The method may include: the data processing system provides a second response from the second digital assistant component to the computing device in response to the selection.
Optionally, the method may include: a second response from the second digital assistant component is selected based on the confidence score of the second response from the second digital assistant component. Optionally, the method may include: it is determined that the first digital assistant component is a preferred digital assistant. The method may include: it is determined that the first response from the first digital assistant component is marked as a standby response. The method may include: the first digital assistant component is overridden in response to determining that the first response from the first digital assistant component is marked as a standby response. The method may include: a second response from the second digital assistant component is selected. The method may include: the first digital assistant component is maintained as a preferred digital assistant. Optionally, the method may include: based on the ranking decision function, a determination is made to select a first response based on the first digital assistant component accessing data stored in a memory of the computing device. Optionally, the method may include: the query is transmitted to each of the plurality of digital assistants via an independent branch such that the plurality of digital assistants process the query in an overlapping manner. Optionally, the method may include: a second response from the second digital assistant component is received before the first response from the first digital assistant component is received. The method may include: it is determined that the second digital assistant component is not the preferred digital assistant component. The method may include: it is determined that the first digital assistant is a preferred digital assistant. The method may include: in response to determining that the second digital assistant component is not a preferred digital assistant and that the first digital assistant is a preferred digital assistant, waiting for a first response from the first digital assistant component. The method may include: upon receiving the first response from the first digital assistant component, it is determined that the first response is marked as a standby response. The method may include: the second response is selected based on determining that the second digital assistant component is not the preferred digital assistant and the first response is marked as a standby response.
At least one aspect relates to a computer program product configured to cause: the method of the above aspect is performed by a data processing system comprising a processor and a memory, when executed on the data processing system. The computer program product may be embodied in or provided on a tangible, non-transitory computer readable medium.
These and other aspects and embodiments are discussed in detail below. The foregoing information and the following detailed description include illustrative examples of various aspects and embodiments and provide an overview or framework for understanding the nature and character of the claimed aspects and embodiments. The accompanying drawings provide a description and a further understanding of various aspects and embodiments, and are incorporated in and constitute a part of this specification.
Drawings
The figures are not intended to be drawn to scale. Like reference numbers and designations in the various drawings indicate like elements. For purposes of brevity, not every component may be labeled in every drawing. In the figure:
FIG. 1 illustrates an example system for coordinating overlapping processing of audio queries.
FIG. 2 illustrates example operations of a system for coordinating overlapping processing of audio queries.
FIG. 3 illustrates a flow chart of an overlapping process of coordinating audio queries using the example system shown in FIG. 1 or FIG. 2.
Fig. 4 illustrates a method of coordinating overlapping processing of audio queries using the example system shown in fig. 1 or 2.
FIG. 5 is a block diagram illustrating the general architecture of a computer system that may be used to implement the elements of the systems and methods described and illustrated herein, including: for example, the system depicted in fig. 1 and 2, the flow depicted in fig. 3, or the method depicted in fig. 4.
Detailed Description
The following is a detailed description of various concepts related to methods, apparatuses, and systems for coordinating parallel processing of audio queries between a plurality of devices, such as a data processing system, a display device, and a client device, and implementations of methods, apparatuses, and systems for coordinating parallel processing of audio queries between a plurality of devices. The various concepts introduced above and discussed in more detail below may be implemented in any of a number of ways.
The audio query may be processed by a plurality of digital assistant components. Different digital assistant components may generate different results of the audio query based on processing techniques used by the respective components or based on database access controls established for the different digital assistant components. In addition, different digital assistant components can process and return results at different times. Thus, coordinating the processing of audio queries can be challenging where different digital assistant components can process the audio queries in parallel or in an overlapping manner.
The system and method of the present technology provide coordination of overlapping processing of audio queries. For example, the computing device may receive an audio query detected by a microphone of the computing device. The computing device or its interface may forward the audio query to the first digital assistant agent for processing. The interface may forward the audio query to the second digital assistant agent for processing. The first digital assistant may generate at least one first result and the second digital assistant may generate a second result. The second digital assistant may generate a confidence score for the second result. In response to the confidence score, the second digital assistant may override the first digital assistant and determine to return a second result. The second digital assistant may determine that the first result is not yet available and override the first digital assistant to provide the second result.
For example, a plurality of digital assistant components (e.g., digital assistants, digital assistant agents, or voice agents) may be configured to process, parse, service, or respond to audio queries entered by a user via a computing device (e.g., a networked television, a networked speaker, or other networked computing device). The system and method of the present technical solution provides a framework for arbitrating and prioritizing among responding digital assistant agents. For example, after a voice query is transcribed into text by a pre-processor component, the query may be passed to a first digital assistant (e.g., a third party cloud configured with third party digital assistant components) to process the query, while a second digital assistant may process the query in parallel or in an overlapping manner.
One of the digital assistant component or the separate coordinator component or the response handler component can determine which voice agent to use to provide the response or which response to use. The coordination component may be configured with rules, policies, or quality assessment techniques to determine which digital assistant component to use. The second digital assistant component may determine to override the first digital assistant component. The second digital assistant component may determine to override the first digital assistant based on a confidence score, a quality assessment technique, a signal generated by parsing the query, a database for providing results, or a domain associated with the query.
For example, a first digital assistant may be configured to process and respond to audio queries related to media field queries such as "play movie_a on streaming_service_a" ("play movie_a on stream_service_a"), while a second digital assistant component may be configured to process and respond to search field queries such as "when is my next appointment" ("what time i were next to date"). If the search query signal is ambiguous or belongs to multiple categories, the coordinator component can score or rank the responses from the multiple digital assistant components and select a response from one of the digital assistant components. For example, the coordinator component can score or rank the responses or queries based on confidence or other factors.
Thus, the system and method of the present technology may reduce latency by allowing the first digital assistant component and the second digital assistant component to operate in parallel or in an overlapping manner rather than serially. By selecting the results from the digital assistant that completed the process first, latency can be further reduced. By selecting a response or result from one of the digital aids using a ranking decision function, reliability may be improved. The system and method of the present technical solution may reduce the dependency on the third party cloud functions of the preferred domain, which may result in more robust performance. For example, if a response from the second digital assistant component is available and indicates that the query belongs to a domain preferred by the second digital assistant or an administrator thereof, the second digital assistant component may provide the response without even waiting for the first digital assistant component to return the response, thereby reducing latency or delay in the event that the first digital assistant is slow or experiences an exception, error, malfunction, excessive processing load, or other processing problem. The systems and methods of the present technology can provide a method for fine tuning results for confidence scores from a first digital assistant component or a second digital assistant component. The first digital assistant component may report the confidence score of its result using the "spare" result. If the second digital assistant component has a low confidence score relative to the threshold or confidence score of the first digital assistant component, the system may decide to return a "standby" result from the first digital assistant component. If the first digital assistant component indicates that it has no answer, the second digital assistant component can provide results regardless of the domain or signal associated with the query.
The system and method of the present disclosure may provide a way to allow a third party television with its own digital assistant agent to integrate with the digital assistant agent provided by the data processing system. The system and method may include registering a device model to specify generic metadata, any speech bias phrases, and device functions such as a browser for the type of device such as a third-party voice proxy endpoint with which a digital assistant component of the data processing system may interact. The system and method may include providing domains in a model to specify which query domain, such as a media query, is preferred to be served. The system and method may include: integrated with a digital assistant software development kit ("SDK") application programming interface ("API") that is enhanced for visual effects on televisions. The systems and methods may include integration with a digital assistant SDK out of box experience ("OOBE") process to guide a user to log into a device. The device binding scheme supporting the OOBE and authentication may be secure.
The model registration API may allow a manufacturer of a television or other computing device to specify its cloud natural language understanding ("NLU") endpoint and other federation-specific metadata. The system may provide contextual speech bias phrases registered with the device model for automatic speech recognition of the data processing system to correctly recognize common queries spoken on the device. The system may trigger the third party cloud NLU in parallel with constructing the candidate results of the data processing system to achieve the optimal latency. The system may provide a ranking layer that takes into account ranking protocols or policies to enable domain-based querying. The system may provide a new process flow to allow responses from the digital assistant components without requiring login. The system may prevent content selection of queries in the event that a response is provided by a third-party digital assistant and perform post-processing to clear such queries from other logs. Since multiple agents may be used on a platform, the system may provide a flow of functionality for the agents. The system may provide an extensible visual solution to render HTML5 on third party devices so that any device with a browser may display visual results and may support interactive elements such as suggestion clicks or links.
FIG. 1 illustrates an example system 100 for coordinating parallel processing of audio queries among a plurality of devices. The system 100 may include at least one data processing system 102, at least one first digital assistant server 106, one or more client devices 104, one or more display devices 108, and a network 110. The display device 108 may be coupled to the client device 104 via a wired or wireless connection (e.g., through the network 110, short-range communication, or pairing). The client device 104 may be part of the display device 108 or otherwise integrated into the display device. At least one data processing system 102, one or more client devices 104, and one or more display devices 108 may be communicatively coupled to one another via a network 110.
Data processing system 102 may include an interface 122. The data processing system 102 may include a second digital assistant application 120. The data processing system 102 can include a Natural Language Processor (NLP) component 124 to parse audio-based input. Data processing system 102 can include interface management component 128 to detect and manage interfaces for other devices in system 100. The data processing system 102 can include an audio signal generator component 130 to generate an audio-based signal. The data processing system 102 may include a direct action Application Programming Interface (API) 126 to implement requests parsed from the audio-based input. The data processing system 102 can include an audio signal generator component 130 to select a response to an audio-based input signal. Data processing system 102 may include a data store 140. The data processing system 102 can include a search coordinator component 132, a content indexer component 134, a ranking engine 136, and a response handler component 138.NLP component 124, interface management component 128, audio signal generator component 130, data store 140, direct action API 126, interface management component 128, search coordinator component 132, content indexer component 134, ranking engine 136, and response handler component 138 can form digital assistant application 120.
The functionality of the data processing system 102, such as the digital assistant application 120, may be included or otherwise accessed from one or more client devices 104 and one or more display devices 108. The functionality of the data processing system 102 may correspond to the functionality or interface of a digital assistant application 120 executing on the client device 104 or the display device 108. The client device 104 and the display device 108 may each include and execute separate instances of one or more components of the digital assistant application 120. Client device 104 and display device 108 may otherwise access the functionality of components of digital assistant application 120 on remote data processing system 102 via network 110. For example, display device 108 may include the functionality of NLP component 124 and may access the remaining components of digital assistant application 120 to data processing system 102 via network 110. The data processing system 102, client device 104, and display device 108 may include and execute separate instances of the components of the digital assistant application 120. The digital assistant application 120, which is accessible or executable on both the client device 104 and the display device 108, may have different functionalities. The client device 104 or the display device 108 may execute a second digital assistant application 120 that interfaces with the data processing system 102. The data processing system 102 may interface with a first digital assistant server 106.
Client device 104 and display device 108 may each include at least one logic device, such as a computing device having a processor, to communicate with each other to communicate with data processing system 102 over network 110. Client device 104 and display device 108 may each include an instance of any of the components described with respect to data processing system 102. Client device 104 may include a desktop computer, laptop computer, tablet computer, personal digital assistant, smart phone, mobile device, portable computer, thin client computer, virtual server, speaker-based digital assistant, or other computing device. The display device 108 may include a smart television, a hybrid television, a connected television, a set-top box connected to a television, a digital video recorder, a monitor, a screen, or other computing device having display functionality. The client device 104 may be communicatively coupled with a display device 108. For example, once paired, the client device 104 may be used as a remote control to control various functionalities at the display device 108. The client device 104 may be part of the display device 108 or integrated with the display device 108.
The components of system 100 may communicate over a network 110. The network 110 may include: for example, a point-to-point network, a broadcast network, a wide area network, a local area network, a telecommunications network, a data communication network, a computer network, an ATM (asynchronous transfer mode) network, a SONET (synchronous optical network) network, an SDH (synchronous digital hierarchy) network, an NFC (near field communication) network, a Local Area Network (LAN), a wireless network, or a wired network, and combinations thereof. Network 110 may include wireless links such as infrared channels or satellite bands. The topology of the network 110 may include a bus, star, or ring network topology. Network 110 may include a mobile telephone network using any one or more protocols for communicating between mobile devices, including: advanced mobile phone protocol (AMPS), time Division Multiple Access (TDMA), code Division Multiple Access (CDMA), global system for mobile communications (GSM), general Packet Radio Service (GPRS), or Universal Mobile Telecommunications System (UMTS). Different types of data may be transmitted through different protocols, or the same type of data may be transmitted through different protocols.
The network 110 may include a short range communication link (e.g., ranging up to 30 meters) established between the client device 104 and the display device 108 using bluetooth, bluetooth low energy, dedicated Short Range Communication (DSRC), or Near Field Communication (NFC) protocols. Using such protocols, data processing system 102 can establish a communication link with one or more client devices 104 via interface 122. Data processing system 102 may establish a communication link with one or more display devices 108 via interface 122. A short-range communication link may be established between the client device 104 and the display device 108 via a pairing protocol.
Client device 104 may include sensor 152, speaker 150, interface 122, and transducer 154. The display device 108 may include a sensor 152, a speaker 150, an interface 122, and a transducer 154. The client device 104 and the display device 108 may include at least one sensor 152, at least one transducer 154, at least one audio driver, and at least one speaker 150. The sensor 152 may include a microphone or an audio input sensor. The sensor 152 may include at least one of the following: a GPS sensor, a proximity sensor, an ambient light sensor, a temperature sensor, a motion sensor, an accelerometer, or a gyroscope. The sensor may comprise an occupancy or weight sensor. The transducer 154 may convert the audio input into an electronic signal. The audio driver may include scripts or programs that are executed by one or more processors of the client device 104 or the display device 108 to control the speaker 150. The speaker 150 may render audio signals by converting electrical signals into audible waves. The client device 104 and the display device 108 may each include peripheral devices such as a keyboard, pointing device, monitor and headphones (either built-in or stand-alone), and other devices.
Both the client device 104 and the display device 108 may execute instances of the multimedia content application 160. The multimedia content application 160 may be associated with a particular first digital assistant server 106. The multimedia content application 160 may include scripts or programs installed on the client device 104 or the display device 108. The multimedia content application 160 may include a script or program that may be executed by another application, such as a web browser, installed on the client device 104 or the display device 108. The multimedia content application 160 may include an Application Programming Interface (API) that may allow other applications (e.g., digital assistant application 120) at the client device 104 or display device 108 to interface with the multimedia content application 160. The multimedia content application 160 may play, stream, download, or otherwise access the multimedia content. The multimedia content may correspond to one or more audiovisual content files in any format, such as MP3, ACC, OPUS, RTMP, RTP, MP4, FLV, webM, ASF, ISMA, HEVC, h.264, VP8, VP9, HLS, HDS, SMIL, and the like. The one or more audiovisual content files may include audio and/or visual content for playback at the client device 104 or the display device 108. Upon loading one or more audiovisual content files, the multimedia content application 160 may play or stream the multimedia content on the client device 104 or the display device 108.
The multimedia content application 160 may perform an authentication process with the first digital assistant server 106. The authentication process may include identifying an account identifier and an access code on the client device 104 or the display device 108 by entering or retrieving from storage. Upon receipt, the multimedia content application 160 may send the account identifier and the access code to the first digital assistant server 106. The first digital assistant server 106 may then compare the access code of its own stored account identifier with the access code received from the client device 104 or the display device 108. In response to determining a match between the two access codes, the first digital assistant server 106 may send a successful authentication indicator to the client device 104 or the display device 108.
In response to receiving the successful authentication indicator, the multimedia content application 160 can retrieve a catalog of multimedia content that is available for use by the first digital assistant server 106 of the account identifier. The multimedia content application 160 may display a catalog of available multimedia content in a graphical user interface, with each element corresponding to each available multimedia content. Upon interacting with one of the elements of the graphical user interface, the multimedia content application 160 may send a request for the selected multimedia content to the first digital assistant server 106. The first digital assistant server 106 may identify and provide one or more audio-visual content files corresponding to the selected multimedia content. The multimedia content application 160 may then store, play, or stream one or more audiovisual content files corresponding to the selected multimedia content at the client device 104 or the display device 108. Additional details regarding the functionality of the first digital assistant server 106 and the multimedia content application 160 are explained herein in the context of the system 100.
An application, script, program or other component associated with data processing system 102 can be installed on client device 104 or display device 108. The application may cause the client device 104 or the display device 108 to communicate the input audio signals (and other data) to the interface 122 of the data processing system 102. The application may cause the client device 104 and the display device 108 to drive components of the client device 104 and the display device 108 to render the output audio signal.
The client device 104 and the display device 108 may be associated with an end user who inputs a voice query (via the sensor 152) as an input audio signal into either the client device 104 or the display device 108 and receives audio output in the form of computer-generated voice that may be provided from the data processing system 102. In response to the input audio signal, the client device 104 and the display device 108 may receive an action data structure to perform a predetermined function or action. Interface 122 may receive data messages or provide data messages to a direct action API 126 of data processing system 102 and enable communication between components of system 100. The client device 104 and the display device 108 may include user interfaces that enable a user to interact with the components of the system 100.
Data processing system 102 may include at least one server having at least one processor. For example, data processing system 102 may include multiple servers located in at least one data center or server farm. The data processing system 102 may determine a request and a trigger key associated with the request from the audio input signal. Based on the request and the trigger key, data processing system 102 may generate or select response data. The response data may be audio-based or text-based. For example, the response data may include one or more audio files that, when rendered, provide audio output or sound waves. The data in the response data may be referred to as content items. In addition to audio content, the response data may also include other content (e.g., text, video, or image content). The response data may include various types of content such as calendar information, messages, weather information, news information, or ticketing information.
Data processing system 102 may include multiple servers grouped logically and facilitate distributed computing techniques. The logical group of servers may be referred to as a data center, a server farm, or a machine farm. The servers may be geographically dispersed. The data center or machine farm may be managed as a single entity or the machine farm may include multiple machine farms. The servers in each machine farm may be heterogeneous: one or more of the servers or machines may operate in accordance with one or more types of operating system platforms. Data processing system 102 may include, for example, servers and associated storage systems stored in one or more high-density rack systems in a data center located in an enterprise data center. In this manner, data processing system 102 with integrated servers may improve system manageability, data security, physical security of the system, and system performance by locating the servers and high-performance storage systems on a localized high-performance network. Centralizing and coupling all or some of the data processing system 102 components, including servers and storage systems, with the advanced system management tool allows for more efficient use of server resources, thereby saving power and processing requirements and reducing bandwidth usage. Each of the components of data processing system 102 may include at least one processing unit, server, virtual server, circuit, engine, agent, device, or other logic device, such as a programmable logic array configured to communicate with data store 140 and other computing devices.
Data processing system 102 may include a data store 140. The data store 140 may include one or more local or distributed databases and may include a database management system. The data store 140 may comprise a computer data store or memory and may store one or more application identifiers 142, one or more entity metadata 144, one or more ranking policies 146, and at least one reference address 148. Each application identifier 142 may be an alphanumeric value corresponding to the multimedia content application 160 to be executed on the client device 104 or the display device 108. Each entity metadata 144 may correspond to an entity. Each reference address 148 may identify or reference. Details of the use and functionality of the one or more application identifiers 142, the one or more entity metadata 144, the one or more ranking policies 146, and the reference address 148 are provided below.
The data store 140 may include a computer data store or memory and may store one or more parameters, one or more policies, response data and templates, and other data. The parameters, policies, and templates may include information such as rules regarding voice-based sessions between client devices 104, data processing system 102, and display devices 108. The parameters, policies, and templates may include information for another digital assistant application 120 received from another source (e.g., data processing system 102, client device 104, and display device 108) via interface 122. For example, parameters, policies, and templates stored in the data store 140 of the digital assistant application 120 hosted on the client device 104 or the display device 108 may include parameters, policies, and templates from the data store 140 of the digital assistant application 120 accessible via the client device 104 and the display device 108, and vice versa. In this way, the parameters, policies, and templates of the different digital assistant applications 120 may be shared and used with each other. The response data may include content items of audio output or associated metadata and input audio messages that may be part of one or more communication sessions with the client device 104 and the display device 108.
NLP component 124 may receive an input audio signal. The data processing system 102 may receive an input audio signal included in a data packet (e.g., via the transducer 154 or the sensor 152) from the client device 104 or the display device 108. The data packet may include a device identifier associated with the client device 104 or the display device 108. The data packet may include an application identifier of the multimedia content application 160 executable at the client device 104 or the display device 108. The functionality of NLP component 124 may be split between data processing system 102, client device 104, and display device 108. For example, the NLP component 124 executing on the client device 104 or the display device 108 may packetize the input audio signal detected at the sensor 152 into data packets and may send the data packets to the data processing system 102 for further processing at the NLP component 124 executing at the data processing system 102.
NLP component 124 can convert an input audio signal to recognized text by comparing the input audio signal to a stored, representative set of audio waveforms and selecting the closest match. A representative waveform may be generated over a large set of input audio signals. Once the input audio signal is converted to recognized text, the NLP component 124 can match the text to words that are associated with the action or output audio signal, for example, via a learning phase.
NLP component 124 can identify at least one request from the input audio signal. The request may indicate an intent or topic of the input audio signal. The request may indicate the type of action that may be taken. For example, the NLP component 124 may parse the input audio signal to identify at least one request for playing the multimedia content (e.g., "Okay, play Bat Movie from" ("good, bat movie playing 2015"). The request may include at least one word, phrase, root or partial word or derivative indicating an action to be taken. The request may include a trigger key, such as "okay" ("good") or "go" ("go"). NLP component 124 can detect trigger keywords in a request. In response to detecting the trigger key, the NLP component 124 can identify intent, subject matter, and type of action to be taken in accordance with the input audio signal.
NLP component 126 can identify at least one entity from the request. The at least one entity may correspond to at least one word, phrase, root or partial word or derivative in the request. At least one entity may include a descriptor of the multimedia content, such as a title, author, issuer, original release date, language, genre, length of time, and other associated keywords (e.g., actor names). For example, entities of the "Bat Movie I" ("Bat Movie I") Movie released in 2005 may include: title "Bat Movie I" ("Bat Movie I"), author "ms.director" ("Director lady"), original release date "June 15,2005" ("6 th 15 th 2005"), language "englist" ("English"), genre "Action" ("Action piece"), duration "140 minutes"), and other information. The NLP component 126 can determine that at least one word, phrase, root or partial word or derivative in the request corresponds to at least one entity. To perform this determination, NLP component 126 can access a semantic knowledge graph. The semantic knowledge graph may specify a set of words, phrases, roots or partial words or derivatives related to the at least one entity. The semantic knowledge graph may include nodes connected to each other via edges. A node may be associated with a word, phrase, root or part of a word or derivative and may be marked as related or unrelated to at least one entity. Each edge connecting two nodes may represent a relationship between the two nodes. Continuing with the previous example, a node of "Bat Movie" in the semantic knowledge graph may be labeled as being related to an entity and may have an edge to an indicated two-term relationship labeled as "Bat Movie I" (Bat Movie I "), also labeled as a node related to an entity. Using the semantic knowledge graph, NLP component 126 can determine that at least one word, phrase, root or partial word or derivative in the request corresponds to the at least one entity.
The NLP component 124 can determine whether at least one request corresponds to a query for multimedia content based on an entity. In response to identifying that at least one word, phrase, root or partial word or derivative in the request corresponds to at least one entity, NLP component 124 may determine that the at least one request corresponds to a query for multimedia content. In response to identifying that none of the words, phrases, roots, or partial words or derivatives in the request corresponds to at least one entity, NLP component 124 may determine that the at least one request does not correspond to a query for multimedia content. As described in detail below, the determination that at least one request corresponds to a query for multimedia content may trigger the functionality of the search coordinator component 132, the content indexer component 134, the ranking 136, and the response handler component 138.
The audio signal generator component 130 can obtain information from the data store 140, where the information can be stored as part of the response data. The audio signal generator component 130 can query the data store 140 to select or otherwise identify a response phrase or content item, for example, from the response data. The audio signal generator component 130 can generate or otherwise obtain an output signal comprising the content item. The data processing system 102 can execute the audio signal generator component 130 to generate or create an output signal corresponding to a content item or request. For example, once the request is satisfied, the audio signal generator component 130 can generate an audio output signal that includes the phrase "The action was completed" ("action completed").
Interface 122 may be a data interface or a network interface that enables components of system 100 to communicate with each other. Interface 122 of data processing system 102 may provide or transmit one or more data packets including action data structures, audio signals, or other data to client device 104 or display device 108 via network 110. For example, the data processing system 102 can provide output signals from the data store 140 or from the audio signal generator component 130 to the client device 104. Data processing system 102 may instruct client device 104 or display device 108 to perform the functions indicated in the action data structure via a data packet transmission. The output signals may be acquired, generated, converted to one or more data packets (or other communication protocols), or transmitted as one or more data packets (or other communication protocols) from the data processing system 102 (or other computing device) to the client device 104 or the display device 108.
The direct action API 126 of the data processing system 102 may generate an action data structure, for example, based on the request. The action data structure may include data or instructions for performing specified actions to satisfy the request. In some implementations, the action data structure can be a JSON-format data structure or an XML-format data structure.
Depending on the action specified in the request, the direct action API 126 may execute code or a dialog script that identifies parameters needed to fulfill the request. An action data structure may be generated in response to the request. The action data structure may be included in a message transmitted to the client device 104 or the display device 108 or received by the client device 104 or the display device 108. The direct action API 126 may package the request into an action data structure for transmission to the display device 108. The direct action API 126 may access the device identifier from the response data to determine which client device 104 or display device 108 is associated with the user that generated the request. Upon receipt of the action data structure, the display device 108 may process the action data structure and may perform the indicated action. The direct action API 126 may package the request into an action data structure for execution by the client device 104 or the display device 108. Upon receiving the action data structure, the client device 104 may process the action data structure using the digital assistant application 120 or one or more applications running on the client device 104.
The action data structure may include information for completing the request. For example, the action data structure may be an XML or JSON formatted data structure that includes attributes for completing or otherwise satisfying the request. The attributes may include a location of the display device 108, a location of the client device 104, an authorization level of a user associated with the client device 104, a device identifier, an interface identifier, a vehicle status, or a request status. In some implementations, the request state includes one or more attributes that should be satisfied prior to implementing the action. For example, for a request "Ok, CHANGE THE song" ("good, change song"), the request status may have an attribute { request: [ authorized, passenger ] }, which may indicate that the request should be an explicitly authorized user.
The direct action API 126 may retrieve templates from the data store 140 to determine which fields or attributes to include in the action data structure. The direct action API 126 may determine the necessary parameters and may package the information into an action data structure. The direct action API 126 may retrieve content from the data store 140 to obtain information about attributes of the data structure.
The direct action API 126 may populate the fields with data from the input audio signal. The direct action API 126 may populate the fields with data from the client device 104 or the display device 108 or from another source. When the fields are filled, the direct action API 126 may prompt the user for additional information. The templates may be standardized for different types of actions, responding to messages, and performing functions within the client device 104 or the display device 108. The action data structure may be initially generated by a direct action API 126 executed by remote data processing system 102. Remote data processing system 102 can transmit the action data structure to client device 104 or display device 108, and client device 104 or display device 108 can add fields and attributes to the action data structure.
The direct action API 126 may obtain response data (or parameters or policies) from the data store 140 and data accepted from the client device 104 or the display device 108 with the end user's consent. The response data (or parameters or policies) may be included in the action data structure. When the content included in the action data structure includes end user data for authentication, the data may pass through a hash function before being stored in the data store 140.
The data processing system 102 can include a search coordinator component 132, interface with the search coordinator component 132, or otherwise communicate with the search coordinator component 132. The search coordinator component 132 can generate a query command to send to the client device 104 or the display device 108. Generating the query command by the search coordinator component 132 can correspond to a query for multimedia content in response to determining that the request corresponds to a query for multimedia content. The query command may include an entity identified from the response. The query command may include instructions for the client device 104 or the display device 108 to process the query command. The instructions may instruct which multimedia content application 160 on the client device 104 or the display device 108 will perform the search for the entity. To generate the instructions, the search coordinator component 132 can access the data store 140 to identify one or more application identifiers 142 to be included in the query command. The data store 140 can identify one or more application identifiers 142 by a device identifier associated with the client device 104 or the display device 108. Each application identifier 142 may be tagged by the frequency used by the client device 104 or the display device 108. The search coordinator component 132 can insert one or more application identifiers 142 in the initial data packet into the instructions of the query command. The search coordinator component 132 can identify a subset of the application identifiers 142 of the client device 104 and the display device 108 based on the frequencies used by the client device 104 and the display device 108. For example, the search coordinator component 132 may identify: the display device 108 uses the multimedia content applications 160"a" and "B" more frequently than the multimedia content applications 160"c", "D", and "E". In this example, the search coordinator component 132 can select an application identifier 142 corresponding to the multimedia content application 160 to insert into the query command. Each application identifier 142 of the query command may indicate which multimedia content application 160 on the client device 104 or display device 108 is to perform a search for an entity. After generating the query command, the search coordinator 132 may transmit the query command to the client device 104 or the display device 108.
Receipt of the query command may cause the client device 104 or the display device 108 to perform a search for an entity to the multimedia content application 160. In response to receiving the query command, the client device 104 or the display device 108 may parse the query command to identify the entity. The client device 104 or the display device 108 may parse the query command to identify one or more application identifiers 142. The client device 104 or the display device 108 may identify the multimedia content application 160 corresponding to the one or more application identifiers 142 of the query command. The client device 104 or the display device 108 may initiate execution of the multimedia content application 160 identified from the one or more application identifiers 142 of the query command. To perform the search, the client device 104 or the display device 108 may provide at least one entity in the query command to each multimedia content application 160 via an application programming interface of the multimedia content application 160. Once the entities are provided, each multimedia content application 160 may send a query request to the associated first digital assistant server 106.
In parallel with generating and sending query commands to the client device 104 or the display device 108, the search coordinator component 132 can generate a query request to send to the first digital assistant server 106. The generation of the query request by the search coordinator component 132 can be in response to determining that the request corresponds to a query for multimedia content. The generation of the query request by the search coordinator component 132 may be in response to a call by the content indexer component 134, as described below. The query request may include an entity identified from the response. The query request may include instructions for the first digital assistant server 106 to process the query request. The search coordinator 132 may identify from one or more application identifiers 142 of the client device 104 or the display device 108 which multimedia content providers to send the query request. After generating the query request, the search coordinator 132 may transmit the query request to the first digital assistant server 106.
Receiving a query request from the client device 104, the display device 108, or the search coordinator component 132 may cause the first digital assistant server 106 to perform a search for an entity. Because the client device 104 or the display device 108 may have initialized the multimedia content application 160 to send the query request, the query request from the client device 104 or the display device 108 may be received after the query request from the search coordinator component 132. The first digital assistant server 106 may access the content data store 162 in response to the query request. The content data store 162 may include one or more entity metadata 144 and one or more ranking policies 146. Each entity metadata 144 may correspond to an entity. Each entity metadata 144 on the data store 162 may include one or more entries for multimedia content corresponding to an entity, such as title, author, issuer, original release date, language, genre, length of time, and other associated keywords. For example, one entity metadata 144 may correspond to "Bat Movie I" ("Bat Movie I"), while another entity metadata 144 may correspond to "Bat Movie II" ("Bat Movie II"). Each entity metadata 144 may be associated with a reference address 148 (e.g., a uniform resource locator). The reference address 148 may include a hostname, a file path name, and a query parameter. The hostname may correspond to the first digital assistant server 106. The file pathname may correspond to one or more audiovisual files of the multimedia content corresponding to the entity. The query parameters may include attribute-value pairs. The query parameters may be dynamically generated by the first digital assistant server 106 and may vary with the client device 104, the display device 108, or the search coordinator component 132.
Based on the entity from the query request, the first digital assistant server 106 may identify a reference address 148 corresponding to the entity. The first digital assistant server 106 may traverse the content data store 162. For each entity metadata 144, the first digital assistant server 106 may compare the entity to the entity metadata 144. For example, the first digital assistant server 106 may compare the entity "Bat Movie" with any of the entries of entity metadata 144, such as titles. The first digital assistant server 106 may determine whether one or more entries of the entity metadata 144 match an entity from the query request. The first digital assistant server 106 may determine that there is no match between the entity and the entity metadata 144. In response to determining that there is no match, the first digital assistant server 106 may continue traversing the content data store 162. The first digital assistant server 106 may determine that there are no more entity metadata 144 to traverse. In response to determining that there are no more entity metadata 144 to traverse, first digital assistant server 106 may determine that there are no entities in content data store 162. The first digital assistant server 106 may transmit a null response. The null response may indicate that the first digital assistant server 106 does not have multimedia content corresponding to the entity.
Instead, the first digital assistant server 106 may determine that there is a match between the entity and the entity metadata 144. In response to the determination of a match, the first digital assistant server 106 may determine that the entity is present in the content data store 162. The first digital assistant server 106 may identify a reference address 148 corresponding to entity metadata 144 that matches the entity. The first digital assistant server 106 may generate a search response. The search response may indicate that the first digital assistant server 106 does have multimedia content corresponding to the entity. The search response may include a reference address 148 corresponding to the multimedia content of the entity.
The first digital assistant server 106 may continue traversing the content data store 162 to identify other matches between the entity of the query request and the entity metadata 144. With other matches, the first digital assistant server 106 can repeatedly identify the reference address 148 corresponding to the entity metadata 144 that matches the entity, and can include the reference address 148 in the search response. The first digital assistant server 106 may determine that there are no more entity metadata 144 to traverse. In response to determining that there are no more entity metadata 144 to traverse, the first digital assistant server 106 may send a response to the client device 104, the display device 108, or the search coordinator component 132 that sent the query search.
The data processing system 102 can include a content indexer component 134, interface with the content indexer component 134, or otherwise communicate with the content indexer component 134. The content indexer component 134 can access the data store 140 of the data processing system 102 or the first digital assistant server 106 to identify a reference address 148 corresponding to the entity. The content indexer component 134 can access the data store 140 prior to accessing the first digital assistant server 106 to identify the reference address 148. The content indexer component 134 can traverse the data store 140. In addition to the application identifier 142, the data store 140 may include one or more entity metadata 144 and one or more ranking policies 146. Entity metadata 144 and ranking policies 146 on data store 140 may be maintained separately and independently from entity metadata 144 and ranking policies 146 on content data store 162. Entity metadata 144 and ranking policies 146 on data store 140 may be from previous search responses of multimedia content providers. The content indexer component 134 can maintain a timer to track the time elapsed for each entity metadata 144 and associated reference address 148 stored at the data store 140.
The content indexer component 134 can traverse the content data store 140. For each entity metadata 144, the content indexer component 134 can compare the entity to the entity metadata 144. For example, the content indexer component 134 can compare the entity "Bat Movie" to any of the entries of entity metadata 144 such as titles. The content indexer component 134 can determine if one or more entries of entity metadata 144 match an entity from the query request. The content indexer component 134 can determine that there is no match between the entity and the entity metadata 144. In response to determining that there is no match, the content indexer component 134 can continue traversing the content data store 140. The content indexer component 134 can determine that there are no more entity metadata 144 to traverse. In response to determining that there are no more entity metadata 144 to traverse, the content indexer component 134 can determine that there are no entities in the content data store 140. In response to a determination that no entity exists in the content data store 140, the content indexer component 134 can invoke the search coordinator component 132 to send a query request to the first digital assistant server 106 to retrieve the reference address 148.
Instead, the content indexer component 134 can determine that there is a match between the entity and the entity metadata 144. In response to determining the match, the content indexer component 134 can determine that the entity exists in the content data store 140. The content indexer component 134 can identify a reference address 148 corresponding to entity metadata 144 that matches the entity. Content indexer component 134 can store reference addresses 148 corresponding to the entities.
The content indexer component 134 can identify the time elapsed for the identified reference address 148. The content indexer component 134 can compare the elapsed time to a preset expiration time. Since the first digital assistant server 106 may periodically update or change the catalog of available multimedia content, the preset expiration time may be in the range of 1 hour to 1 month. The preset expiration time may correspond to an amount of time that the reference address 148 is valid for an entity at the first digital assistant server 106. The content indexer component 134 can determine that the elapsed time is less than a preset expiration time. In response to determining that the elapsed time is less than the preset expiration time, the content indexer component 134 can store a reference address 148 corresponding to the entity. The content indexer component 134 can terminate access to the first digital assistant server 106 for searching for the reference address corresponding to the entity.
On the other hand, the content indexer component 134 can determine that the elapsed time is greater than or equal to a preset expiration time. In response to determining that the elapsed time is greater than or equal to the preset expiration time, the content indexer component 134 can be from the reference address 148 of the replacement data store 140. To update the data store 140, the content indexer component 134 can invoke the search coordinator component 132 to send a query request to the first digital assistant server 106 to retrieve the reference address 148. The content indexer component 134 can receive a search response from the first digital assistant server 106. The search response may include the new reference address 148 of the entity. In response to receiving the reference address 148 from the first digital assistant server 106, the content indexer component 134 can save the reference address 148 onto the data store 140 and can associate the newly saved reference address 148 with entity metadata 144 that matches the entity. The content indexer component 134 can receive the null response from the first digital assistant server 106. In response to receiving the null response, content indexer component 134 can remove reference address 148 from data store 140.
The content indexer component 134 can continue traversing the content data store 140 to identify other matches between the entity of the query request and the entity metadata 144. With other matches, the content indexer component 134 can repeatedly identify the reference address 148 corresponding to the entity metadata 144 that matches the entity and can include the reference address 148 in the search response. The content indexer component 134 can determine that there are no more entity metadata 144 to traverse. In response to determining that there are no more entity metadata 144 to traverse, the content indexer component 134 can terminate searches for other ranking policies 146 in the data store 140. After traversing, the content indexer component 134 can invoke the search coordinator component 132 to send a query request to the first digital assistant server 106 to retrieve the reference address 148. The invocation of the search coordinator component 132 may be independent of the comparison of the elapsed time with the preset expiration time described above.
After invoking the search coordinator component 132 to send the query request, the content indexer component 134 can receive a search response from the first digital assistant server 106. Receiving the search response from the first digital assistant server 106 may indicate that the first digital assistant server 106 may access the entity. The search response may include a reference address 148 corresponding to the entity. Content indexer component 134 can parse the search response to identify reference address 148. In response to identifying a match between an entity and entity metadata 144 on data store 140, content indexer component 134 can compare reference address 148 from database 140 to reference address 148 from first digital assistant server 106. The content indexer component 134 can determine that the reference address 148 from the data store 140 is different from the reference address 148 from the first digital assistant server 106. The differences in the ranking policies 146 may indicate that the first digital assistant server 106 has updated the reference address 148 of the entity. In response to determining that the ranking policies 146 are different, the content indexer component 134 can replace the reference address 148 stored in the data store 140 with the reference address 148 from the first digital assistant server 106. The content indexer component 134 can determine that the reference address 148 from the data store 140 is the same as the reference address 148 from the first digital assistant server 106. In response to determining that the ranking policies 146 are the same, the content indexer component 134 can continue to invoke the response handler component 138 to send the query results to the client device 104 or the display device 108, as described below.
The content indexer component 134 can receive the null response from the first digital assistant server 106. Receiving a null response from the first digital assistant server 106 may indicate that the first digital assistant server 106 no longer has the entity. For example, the first digital assistant server 106 may have updated a catalog of available multimedia content to remove the entity. In response to receiving the null response and identifying a match between the entity and entity metadata 144 on data store 140, content indexer component 134 can remove reference address 148 from data store 140. The content indexer component 134 can continue to invoke the response handler component 138 to send the query results to the client device 104 or the display device 108 as described below. In some cases, the content indexer component 134 may not receive a response from the first digital assistant server 106 within a predetermined amount of time after sending the query response, for example, due to a problem with the network 110 or an interruption at the first digital assistant server 106. In this case, the content indexer component 134 can maintain ranking policies 146 in the data store 140.
The data processing system 102 can include a ranking engine component 136, interface with the ranking engine component 136, or otherwise communicate with the ranking engine component 136. The ranking engine component 136 can use one or more ranking policies 146 stored in the data store 140. The ranking engine component 136 can use ranking decision functions, such as the ranking decision functions or boxes depicted in fig. 2 and 3. The ranking decision function may be based on confidence scores, latency, completion times, labels, priorities, preconfigured preferences, protocols, or other factors. For example, the second digital assistant 120 may take precedence over the first digital assistant.
The ranking engine component 136 can process or parse a query from the client device 104 or the display device 108 to identify or generate one or more signals for the query. The ranking engine component 136 may select a decision function from a plurality of decision functions stored in the data store 140. The decision function may be referred to or stored as a policy 146. The decision function (or policy 146) may vary based on the signal of the query. For example, a query for media content may generate a signal indicating that a first digital assistant is to be selected for the result. Queries for search results from a database accessible to data processing system 102 may generate signals that prioritize results from a second digital assistant.
The ranking decision function may consider the confidence score. For example, the first digital assistant or the second digital assistant may return a confidence score along with the result. For example, if the second digital assistant first returns results and provides a high confidence score (e.g., greater than 0.8, total 1), the data processing system 102 may not wait for any results to come from the first digital assistant and continue to transmit results from the second digital assistant-overriding the first digital assistant.
The data processing system 102 can include a response handler component 138, interface with the response handler component 138, or otherwise communicate with the response handler component 138. In response to identifying the reference address 148 corresponding to the entity in the request, the response handler component 138 can transmit or provide the reference address 148 to the client device 104 or the display device 108. The response handler component 138 can generate instructions for rendering the content selection interface at the client device 104 or the display device 108. The content selection interface may include one or more selection elements and placeholder elements (sometimes collectively referred to as "display cards"). The one or more selection elements may correspond to a reference address 148 of an entity included in the request of the client device 104 or the display device 108. The search performed by the multimedia content application 160 may not have been completed before the response handler component 138 sends the reference address 148 to the client device 104 or the display device 108. Thus, the content selection interface may initially not include results from searches performed by the multimedia content application 160 executing on the client device 104 or the display device 108. The response handler component 138 may provide instructions for rendering the content selection interface to the client device 104 or the display device 108 along with the reference address 148.
After presenting the content selection interface on the client device 104 or the display device 108, interaction with the placeholder element may cause the client device 104 or the display device 108 to determine whether the search performed by the multimedia content application 160 is complete. The client device 104 or the display device 108 may determine that the search performed by the multimedia content application 160 is complete. In response to determining that the search has been completed, the client device 104 or the display device 108 may modify the content selection interaction to include additional selection elements. Each additional selection element may correspond to a reference address 148 found during a search performed by the multimedia content application 160 executing on the client device 104 or the display device 108. Interaction with the selection element of the content selection element may cause the client device 104 or the display device 108 to launch the multimedia content application 160 (or another application running on the client device 104 or the display device 108) to play one or more audiovisual files corresponding to the reference address 148 of the associated selection element.
On the other hand, the client device 104 or the display device 108 may determine that the search performed by the multimedia content application 160 has not been completed. In response to determining that the search has not been completed, the client device 104 or the display device 108 may wait a predetermined amount of time. During the predetermined amount of time, the client device 104 or the display device 108 may determine that the search performed by the multimedia content application 160 is completed. In response to determining that the search has been completed, the client device 104 or the display device 108 may modify the content selection interaction to include additional selection elements. The client device 104 or the display device 108 may determine that the predetermined amount of time has elapsed and that the search has not been completed. In response to determining that the predetermined amount of time has elapsed and that the search has not been completed, the client device 104 or the display device 108 may modify the content selection interface to remove the placeholder element.
FIG. 2 illustrates example operations of a system for coordinating overlapping processing of audio queries. The system 200 may include one or more components or functionalities depicted in fig. 1 or 5. System 200 may include data processing system 102. The system 200 may include a first digital assistant server 106, interface with the first digital assistant server 106, or otherwise communicate with the first digital assistant server 106, or utilize the first digital assistant server 106. The system 200 may include a second digital assistant server 120, interface with the second digital assistant server 120, or otherwise communicate with the second digital assistant server 120, or utilize the second digital assistant server 120. The first digital assistant server 106 (which may be referred to as a first digital assistant, a first digital assistant component, or a first digital assistant application) may execute independently of the second digital assistant application 120 (which may be referred to as a second digital assistant, a second digital assistant component, or a second digital assistant application). One of the first digital assistant or the second digital assistant may be referred to as a local digital assistant and the other of the first digital assistant or the second digital assistant may be referred to as a remote digital assistant. For example, the first digital assistant server 106 may be referred to as a remote digital assistant and the second digital assistant application 120 may be referred to as a local digital assistant. In some cases, the first digital assistant server 106 may be referred to as a local digital assistant and the second digital assistant application 120 may be referred to as a remote digital assistant.
In ACT 202, the client device 104 (which may include the display device 108, may be integrated with the display device 108, or otherwise communicatively coupled with the display device 108) may receive an input audio signal. Client device 104 may be referred to as a computing device or a client computing device. The client device 104 may receive an audio signal from a user. The audio signal may include voice input provided by a user of the client device 104. The voice input may include a request, query, command, instruction, or response. The microphone (e.g., sensor 152 or transducer 154) of the client device 104 may detect or receive audio input.
In ACT 222, the client device 104 may transmit or provide audio input or data corresponding to the audio input to a server. The client device 104 may transmit the audio input or data corresponding to the audio input to the streaming voice server ("S3") 204 or the data processing system 102. The client device 104 may convert the audio input received in act 202 into a format configured for transmission to a server. The client device 104 may, for example, pre-process the audio input and convert the audio input to a digital format configured for transmission over a data network. The client device 104 may transmit the audio input or data corresponding to the audio input in response to identifying the request in the audio input. In audio input, the request may include a keyword, hotword, wake word, token, or other indication that indicates to the client device 104 that the user has a request for content or an action to be performed by the client device 104 or one or more servers. The client device 104 may transmit the audio input or data corresponding to the audio input in response to the authorization or authentication.
The client device 104 may transmit the input audio signal as a request to the streaming voice server 204. The request may include a request to convert audio, speech, or voice to text or some other format that facilitates downstream transmission or processing of the audio input. S3 server 204 may transcribe the voice into text. In ACT 224, S3 server 204 may send the transcribed result back to client device 104. In some cases, S3 server 204 may transmit the transcribed results to data processing system 102 for further processing. In some cases, the S3 server may transmit the transcribed results to the device repository 220 for storage.
In ACT 226, S3 server 204 may transmit the transcribed result to data processing system 102. The transcribed result may include data packets having a query corresponding to the input audio signal received in ACT 202. S3 server 204 may forward the text query to data processing system 102. In some cases, the client device 204 may convert the audio input into data packets and transmit the data packets to the data processing system 102 without transmitting the audio input to the S3 server 204.
The data processing system 102 may receive one or more data packets corresponding to an audio signal detected by the client device 104 via the interface. Data processing system 102 may receive one or more data packets from client device 104 or S3 server 204. The one or more data packets may include a text query, or the data processing system 102 may process the one or more data packets to identify the query. For example, the data processing system 102 may generate a query based on received data packets corresponding to the audio signal.
Data processing system 102 may transmit the query to one or more digital assistants for processing. Data processing system 102 may provide queries to one or more digital assistants for processing. Data processing system 102 can process queries using one or more digital assistants executed or managed by data processing system 102. Data processing system 102 may provide queries to one or more digital assistants external to data processing system 102. If the digital assistant is geographically remote from the data processing system 102, the digital assistant may be external to the data processing system 102 or may be managed or managed by a different entity than the data processing system 102. If the digital assistant is a different type of digital assistant, the digital assistant may be referred to as being external to the data processing system 102.
Data processing system 102 can transmit, provide, or otherwise communicate or transfer queries to a plurality of digital assistant components for processing. One or more of the plurality of digital aids may process the query and generate a response to the query. The data processing system 102 may include an internal digital assistant, such as a second digital assistant application 120. The second digital assistant application 120 may process the query to generate a response to the query. The data processing system 102 (or interface 122) may transmit the query to the second digital assistant application 120 for processing. Data processing system 102 (or interface 122) may transmit a query to a first digital assistant server 106 external to data processing system 102 for processing. The data processing system 102 (e.g., via the interface 122 or the second digital assistant application 120) may transmit the query to multiple digital assistants simultaneously for processing simultaneously or in an overlapping manner. For example, the second digital assistant application 120 may receive the query and transmit the query to the first digital assistant server 106 to generate a response to the query. The second digital assistant application 120 may transmit the query to the first digital assistant server 106 before the second digital assistant application 120 processes the query or generates a response to the query, thereby reducing the latency or delay caused by the second digital assistant application 120. In some cases, to further reduce latency or delay, the interface 122 may transmit the query to the second digital assistant application 120 and the first digital assistant server 106 simultaneously for simultaneous or overlapping processing.
The data processing system 102 (e.g., via the interface 122) may transmit the query to the first digital assistant server 106 before transmitting the query to the second digital assistant application 120 of the data processing system 102. The data processing system 102 may transmit the query to the first digital assistant server 106 after transmitting the query to the second digital assistant application 120. The data processing system 102 may transmit the query to the first digital assistant server 106 after the second digital assistant application 120 receives the query. The data processing system 102 can utilize an Application Programming Interface (API) to transmit or publish a query or an original query received by the data processing system 102 from the client device 104 to the first digital assistant server 106. In some cases, the data processing system 102 can provide, transmit, relay, or forward the original query received from the client device 104 to the first digital assistant server 106. In some cases, the data processing system 102 may process or modify the original query prior to transmitting the original query to the first digital assistant server 106.
The data processing system 102 may use the second digital assistant to process or parse the text query and generate second digital assistant candidate results 204. The text query may be passed to the first digital assistant server 106 at 208, and the first digital assistant server 106 may execute in a cloud server system. The first digital assistant server 106 may be separate from the data processing system 102 executing the second digital assistant. The data processing system may transmit the query to each of the plurality of digital assistants via an independent branch to cause the plurality of digital assistants to process the query in an overlapping manner. Independent branches may refer to logical branches in a logical flow or separate processing threads in which separate digital assistants do not communicate with each other when processing queries separately to generate responses. Individual digital assistants may process queries individually to generate results in an overlapping manner. The first digital assistant candidate 206 may be provided to the data processing system 102 in response 212. The first digital assistant server 106 may be established by an administrator different from the administrator establishing the second digital assistant application 120. For example, a different company, entity, or manufacturer may have been responsible for designing and constructing the first digital assistant server 106 than the second digital assistant application 120. The first digital assistant server 106 and the second digital assistant application 120 may execute independently of each other to generate a response or result to the query.
The first and second digital assistants may access different types of information or data. The first digital assistant server 106 may be authorized to access a database or data source that the second digital application 120 may not be authorized to access or be prohibited from accessing. For example, the first digital assistant server 106 may access a multimedia repository that stores movies or songs. Access to the multimedia store may include authorization through credentials or subscriptions. The first digital assistant 106 may access the authentication information via subscription information associated with the client device 104 or a user profile of the client device 104, but these credentials may not be passed to the second digital assistant application 120 or used by the second digital assistant application 120.
Data processing system 102 may receive query results. Data processing system 102 may receive candidate results for a query from one or more digital assistants. The data processing system 102 may receive the second digital assistant candidate 210. In ACT 212, the data processing system 102 may receive a first digital assistant candidate result 206. The first digital assistant candidate result 206 and the second digital assistant candidate result 210 may have formats similar to each other or different formats. The first digital assistant candidate result 206 and the second digital assistant candidate result 210 may be from different sources and may be generated using different techniques, functions, parameters, selection criteria, or processes.
The results from the first or second digital assistant component may include content items, references, links, images, text, video, audio, or other types of results that are responsive to or based on queries from the input audio signals received by the client device 104. The results may include data from various sources. The results may include streaming data. The results may include references or links to streaming content such as streaming audio or video. The results may include suggestions responsive to the query. The results may include deep links of the content. The results may include authentication or credential information configured to authorize the client device 104 to access content contained or identified in the results.
At 214, data processing system 102 may perform a ranking decision to select candidate result 204 or 206. The second digital assistant application 120 may perform the ranking decision. The ranking engine component 136 of the data processing system 102 or the second digital assistant application 120 can execute the ranking decisions. For example, the ranking engine component 136 can receive candidate results or indications of candidate results available from a plurality of digital assistant components. The ranking engine component 136 can wait to execute the ranking decision until the ranking engine component 136 has received an indication that results have been received from all of the digital assistant components to which the data processing system 102 sent the query.
The data processing system 102 (e.g., via the ranking engine component 136) can determine a response or result to select from one of the first digital assistant application server 106 (e.g., the first digital assistant component) or the second digital assistant application 120 (e.g., the second digital assistant component) based on the ranking decision function. The data processing system 102 may determine to select the second digital assistant candidate 210 or the first digital assistant candidate 206. The data processing system 102 may determine to select one of the results from one of the second digital assistant candidate result 210 or the first digital assistant candidate result 206. For example, the data processing system 102 may determine to select a response or result from the second digital assistant component instead of the response or result from the first digital assistant component.
The data processing system 102 may utilize various ranking decision functions or techniques to select results or responses, some examples of which are described in the following paragraphs. The data processing system 102 may select a ranking decision function or technique based on a signal associated with the input audio signal or a query corresponding to the input audio signal. The data processing system 102 may select a digital assistant or response based on a signal associated with the input audio signal or a query corresponding to the input audio signal. The signal may indicate whether the query is for a media type, an internet search query, a news request, a weather request, a video request, a movie request, a music request, or other types of requests. The data processing system 102 may select a response or result based on information associated with the digital assistant providing the result, based on information associated with the result itself, based on information associated with the client device 104, based on information associated with a profile of a user associated with the client device 104, based on a type of the result, based on a data source used to provide the result, based on a data source to which the result is linked or directed, based on a data size of the result, or other factors.
Data processing system 102 may select a result or response based on the preconfigured preferences. Preconfigured preferences may be stored or configured on client device 104, data processing system 102, or first digital assistant server 106. For example, the second digital assistant application 120 may be at least partially executing on the client device 104. The second digital assistant application 120 may include an interface located on the client device 104. The second digital assistant application 120 may be associated with an administrator, manufacturer, or provider of the client device 104. The second digital assistant application 120 may be preconfigured to be a preferred digital assistant. The preferred digital assistant as client device 104 may cause data processing system 102 to prioritize results from second digital assistant candidate result 210 over results from first digital assistant candidate result 206. The data processing system 102 can rank the results from the second digital assistant 120 higher than the results from the first digital assistant 106. The data processing system 102 may weight the results from the second digital assistant application 120 more heavily than the results from the first digital assistant server 106. By ranking, weighting, or otherwise prioritizing results from the second digital assistant application 120, the data processing system 102 is more likely to select results from the second digital assistant 120 than results from the first digital assistant server 106. Configuration information associated with preferences, ranks, weights, or other determined priorities may be stored in database 140 (e.g., policy 146 data structure) or on client device 104 or other data storage device.
Data processing system 102 can select a response or result based on information about or associated with the response or result itself. For example, data processing system 102 may determine, based on the ranking decision function, to select the response based on the response containing audio only, video and audio only, video only, text only, image only, or other multimedia content. Data processing system 102 can select the first response based on, for example, an attribute or characteristic associated with the second response. For example, data processing system 102 can select a first response that can include video in response to the second response including only audio.
Data processing system 102 may select a result, response, or digital assistant based on a data source for the result or digital assistant. For example, the data processing system 102 may determine to select a second response from the second digital assistant component based on the ranking decision function determining to access data stored in the memory of the client device 104 based on the second digital assistant component. Because the data is stored on the client device 104 that presents or renders the data, the system 102 may make this determination to reduce network bandwidth usage or latency or data storage.
Data processing system 102 may select a response or result based on information associated with how the result was selected. For example, a selection technique or process for selecting a result may output a confidence score for the result. The confidence score may reflect, indicate, or convey a level of confidence associated with whether the result is accurate, reliable, or responsive to the query. For example, a result may have a high confidence score (e.g., 0.7, 0.8, 0.9, or 1) associated with the result, while another result may have a low confidence score (e.g., 0.4, 0.3, 0.2, or less). The confidence score may indicate a likelihood that the result is a match of the query or is responsive to the query. The confidence score may indicate a likelihood that the user of the client device 104 will interact with the result or a content item corresponding to the result. Thus, the data processing system 102 may select a response or result from the second digital assistant candidate results 210, for example, based on the confidence score of the response from the second digital assistant component.
The result may have a low or high confidence score based on one or more factors. For example, the digital assistant component can access a limited or predetermined set of data or data sources. Based on limited access to the data sources, the digital assistant components may be limited in terms of results. Thus, the digital assistant component can determine that the best match results from the restricted set of data sources may still be associated with a low confidence score.
At decision block 216, the data processing system 102 (or ranking engine component 136) may determine whether the results from the second digital assistant are preferred. If the data processing system 102 determines that the result from the second digital assistant is preferred at decision block 216, the data processing system proceeds to the HTML adapter 218. The HTML adapter 218 may convert the results from the second digital assistant, which may be encoded in HTML, into a format compatible with the S3 server 204. The HTML adapter 218 of the data processing system 102 can forward the converted results from the second digital assistant candidate result 210 to the S3 server.
However, if the data processing system 102 determines in decision block 216 that the results from the second digital assistant are not preferred, the data processing system 102 may continue to the S3 server 204 and provide a response 212 from the first digital assistant server 106.
The data processing system 102 (e.g., ranking engine component 136) can be configured with various logic, rules, heuristics, or other functionality to select a response. For example, data processing system 102 can determine that the first digital assistant component is a preferred digital assistant. The data processing system 102 may determine that the first digital assistant is a preferred digital assistant based on the type of query, configuration information, profile information, predetermined information, or other factors. The data processing system 102 may receive a first response from a first digital assistant configured as a preferred digital assistant. The first response from the first digital assistant may be associated with a tag. The first digital assistant may assign, attach, provide, or otherwise indicate the marker to the first response. The flag may indicate that the first response is a standby response. The alternate response may refer to an alternate response that would be used without other responses. When a response is entered into the selection process being performed by ranking engine component 136, the alternate response may indicate that the priority, weight, or ranking of the first response is reduced. The first digital assistant or data processing system 102 can determine to mark the first response as a backup response based on a confidence score associated with the first response or other factors associated with the first response. For example, the first digital assistant component may determine that the quality associated with the data file associated with the first response is of low quality or has a quality below a threshold. Quality may refer to or include video quality, image quality, or audio quality. Quality may refer to or include data stream rate. Quality may refer to the delay in transmitting a data file or establishing a connection with a data source. Quality may refer to a substantial quality of the response, such as a rating or comment associated with the result. Quality may refer to the relevance of the results to the query or to a profile associated with the client device 104. The first digital assistant component may determine that the confidence score associated with the first response is low or below a threshold.
In response to determining that the quality or confidence score associated with the result is low or below a threshold, the first digital assistant component may flag the response as a backup response. That is, although the first digital assistant component (e.g., the first digital assistant server 106) is configured as a preferred digital assistant, the first digital assistant component may flag the response generated or provided by the first digital assistant component as a standby response. Upon receiving the results from the first digital assistant server 106 as the preferred digital assistant, the data processing system 102 (e.g., the ranking engine component 136) can override the first digital assistant component. For example, data processing system 102 can be configured to select a response from a preferred digital assistant component. But because the result from the preferred digital assistant component is marked as a standby response, data processing system 102 can determine not to select a response from the first digital assistant component, thereby overriding the first digital assistant component. Instead, the data processing system 102 can select a response from a second digital assistant component 120 that may not be a preferred digital assistant component to provide to the client device 104.
When overriding the first digital assistant component by selecting a response from the second digital assistant even though the first digital assistant is the preferred digital assistant component, the data processing system 102 may still maintain the first digital assistant component as the preferred digital assistant. For example, data processing system 102 may override the first digital assistant component for a response marked as a standby response and not for other responses not marked as standby responses.
The data processing system 102 may provide one or more selected results or one or more results from a selected digital assistant to the client device 104. Data processing system 102 may provide the results to client device 104 via another device or server. The data processing system 102 may pre-process or otherwise manipulate or modify the results before providing the results to the client device 104. Data processing system 102 may provide results to a device or server remote from data processing system 102 for processing before providing the results to a client device. For example, data processing system 102 may provide the results to S3 server 204. The S3 server 204 may convert the response received from the HTML adapter 218 or the first digital assistant server 106 to audio and provide the audio response to the client device 104 or the display device 108 for rendering or rendering. S3 server 204 may save the response in device store 220 for further processing or as a data log for further processing.
In some cases, data processing system 102 may provide the selected response or result to client device 104. The client device 104 may be configured to present the response via an output interface of the client device 104. The client device 104 may be configured to convert results or responses from one format to another for presentation via an output interface of the client device 104. For example, the client device 104 itself may be configured with text-to-speech functionality to convert text or HTML content to audio output or visual output.
FIG. 3 illustrates a flow chart of an overlapping process for coordinating audio queries using the example system illustrated in FIG. 1 or FIG. 2. The process 300 may be performed by the data processing system 102, the first digital assistant server 106, the client device 104, one or more processors, or the computing device 500. In 302, a data processing system may run a first digital assistant in a first branch and a second digital assistant in a second branch. The two digital assistants may be run in parallel or in an overlapping fashion. Overlapping processing may refer to two digital assistants running simultaneously for at least a portion of the amount of time. Overlapping processes may refer to running at least partially in parallel or at least partially simultaneously. One of the digital aids may start running first or stop running first. Processing on separate digital assistants may occur in parallel (e.g., simultaneously). The first digital assistant may be running on a third party server. The second digital assistant may be running on a data processing system. The first digital assistant may be administered by a third party different from the entity administering the second digital assistant.
At 304, the data processing system may execute a decision block to determine whether results from the second digital assistant are available. If the results from the second digital assistant are not available, then in act 306 the data processing system may return to decision block 304 and check again to see if the results are available. The data processing system may return to decision block 304 to repeatedly check whether the results from the second digital assistant are available. In some cases, the data processing system may timeout if the results from the second digital assistant are not available for a predetermined amount of time (e.g., 10 seconds, 30 seconds, 60 seconds, or longer).
If the data processing system determines in block 304 that results from the second digital assistant are available (act 308), the data processing system may proceed to decision block 310 to determine if results from the second digital assistant are preferred. If the result from the second digital assistant is preferred, the data processing system may continue to block 312 where the data processing system may select a response from the second digital assistant.
However, if the data processing system determines in block 310 that the results from the second digital assistant are not preferred, the data processing system may continue to block 314 and await a response from the first digital assistant. When the data processing system receives the results from the first digital assistant, the data processing system may proceed to decision block 316, where the data processing system may determine whether the response from the first digital assistant is marked as a standby response. The standby response may indicate that the response is used as a standby or last means only. If there is a low confidence score (e.g., less than a threshold, such as 0.2, 0.3, 0.4, or less) that the response is accurate, reliable, or correct, the response may be marked or tagged as a backup response.
If the data processing system determines that the response from the first digital assistant server is marked as a standby response at decision block 316, the data processing system may continue to select a response from the second digital assistant at block 312. For example, if the response from the first digital server is marked as standby, the data processing system may override the first digital assistant response and continue to use the second digital assistant even if the first digital assistant is a preferred digital assistant.
However, if the first digital assistant response is not marked as standby, as determined by the data processing system at decision block 316, the data processing system 102 may continue to block 318 and select the first digital assistant response.
In some cases, in block 304, the data processing system may determine that the results from the second digital assistant component are available or ready before the results from the first digital assistant component. In block 310, the data processing system may determine that the second digital assistant component is not the preferred digital assistant component. The data processing system may make this determination based on configuration information, instructions, directives, or other data. The data processing system determines that the first digital assistant is a preferred digital assistant. For example, a configuration, instruction, or other data file may indicate which of a plurality of digital assistants is the preferred digital assistant. By determining that the first digital assistant is the preferred digital assistant in block 310, the data processing system may determine that the second digital assistant is not the preferred digital assistant in block 310.
The data processing system may take one or more actions in response to determining that the second digital assistant component is not the preferred digital assistant component or in response to determining that the first digital assistant is the preferred digital assistant. For example, in block 314, in response to determining that the second digital assistant component is not a preferred digital assistant and that the first digital assistant is a preferred digital assistant, the data processing system may wait for a first response from the first digital assistant component. Thus, although the data processing system has received a response from the second digital assistant before receiving any response from the first digital assistant, the data processing system may wait for the first response from the first digital assistant since the first digital assistant is the preferred digital assistant.
The data processing system may receive a response from the first digital assistant. After first receiving a response from the first digital assistant, the data processing system may receive a response from the first digital assistant after waiting for the response. In block 316, the data processing system may determine that the first response is marked as a standby response upon receiving the first response from the first digital assistant component. For example, although the first digital assistant is configured as a preferred digital assistant, the first digital assistant may assign the response generated by the first digital assistant as a standby response. In block 312, the data processing system may select the second response based on determining that the second digital assistant component is not the preferred digital assistant and that the first response is marked as a standby response. Although the data processing system may prioritize responses from the first digital assistant, and even though the data processing system has received responses from the second digital assistant, the data processing system may have waited for responses from the first digital assistant, the data processing system may eventually decide to select a response from the second digital assistant because the response from the first digital assistant is marked as a spare response. The response from the second digital assistant may not have been marked as ready-to-use. If the responses from the first digital assistant are both marked as standby responses, the data processing system may select a response from a preferred digital assistant, such as the first digital assistant in this example. Thus, the data processing system may rank the responses from the preferred digital assistant higher and select the response from the preferred digital assistant unless the response from the preferred digital provider is marked as a standby response and the response from the non-preferred digital assistant is not marked as a standby.
Fig. 4 illustrates a method of coordinating parallel processing of audio queries between multiple devices using the example systems illustrated in fig. 1 or 3. For example, method 400 may be performed by data processing system 102. In 405, the data processing system may receive an audio signal from a client device. The client device may detect the audio signal using a sensor such as a microphone or transducer. The audio signal may include voice or speech from a user of the client device. The audio signal may include wake words, keywords, hotwords, or trigger words to alert the client device to take an action in response to at least a portion of the audio signal.
In act 410, the audio signal may be converted to text to generate a query. For example, the client device itself may convert the detected audio signal into speech, or the client device may transmit the audio signal to a streaming voice server to convert the audio into text. The client device may pre-process or convert the audio signal to another format to facilitate data transmission over the network. For example, the client device may convert an analog audio input signal into a digital audio signal that facilitates transmission of the audio signal over the network as a payload in a data packet. The data processing system or streaming voice server may convert the audio signal to text after receiving the data packets.
The data processing system may identify a query in text corresponding to the audio signal. The query may include: such as a request for content. The query may include a request for data or information. The query may include a request to perform an action, such as a digital or electronic action, on the data processing system or client device or other device.
In ACT 415, the data processing system may transmit the query to the first digital assistant server for processing. The data processing system may transmit the query to a second digital assistant server for processing. The data processing system may transmit the query to the plurality of digital assistants through separate branches. A branch may refer to a processing thread. The data processing system may transmit the query to multiple digital assistants simultaneously for processing.
In ACT 420, the data processing system may use ranking decision logic to override the response of the first digital assistant and select the response of the second digital assistant. The data processing system may select ranking decision logic based on the signals in the query. For example, the signal may refer to or indicate a type of query, such as a movie query, a news query, a music query, an audio reading query, a weather query, or a television program query. The data processing system may identify a signal indicative of the type of query and then select the corresponding ranking decision logic to select the preferred digital assistant. For example, if the query is a movie query, the data processing system may set the first digital assistant as the preferred digital assistant. However, for example, if the signal indicates that the query is a search query, the data processing system may set the second digital assistant to be the preferred digital assistant.
The data processing system may select a ranking decision function from a plurality of ranking decision function pools. The data processing system may select a ranking decision function based on the signal of the query. For example, the data processing system may select a first ranking decision function for a movie query, a second ranking decision function for a music query, or a third ranking decision function for a news query. For example, the first ranking decision function may assign the first digital assistant as the preferred digital assistant and set a first threshold for the confidence score of the response. The second ranking decision may assign the second digital assistant as the preferred digital assistant and set a second threshold confidence score for the response. The first and second thresholds may be set or adjusted based on factors associated with responses to the respective queries. For example, there may be a lower confidence score threshold for weather queries, but a higher confidence score threshold for navigation-related queries or movie-related queries.
For example, a first digital assistant may be configured to process and respond to audio queries related to media domain queries such as "play movie_a on streaming_service_a" ("play movie_a on stream_service_a"), while a second digital assistant component may be configured to process and respond to search domain queries such as "when is my next appointment" ("what time i were next to date"). If the query signal of the query is ambiguous or belongs to multiple categories, the data processing system may rank the responses from the multiple digital assistant components and select a response from one of the digital assistant components. For example, the data processing system may score or rank the responses or queries based on confidence levels, quality scores, or other factors.
Thus, the data processing system may use ranking decision logic or functions to select one of the digital aids from which to select a response. In ACT 425, the data processing system may provide the selected response from the selected digital assistant to the client device for presentation. For example, the data processing system may provide a response to the query generated by the second digital assistant to the client device for presentation.
Fig. 5 is a block diagram of an example computer system 500. The computer system or computing device 500 may include or be used to implement the system 100 or components thereof, such as the data processing system 102, the client device 104, the first digital assistant server 106, and the display device 108. Computing system 500 includes a bus 505 or other communication component for communicating information, and a processor 510 or processing circuit coupled to bus 505 for processing information. Computing system 500 may include one or more processors 510 or processing circuits coupled to a bus to process information. Computing system 500 also includes a main memory 515, such as a Random Access Memory (RAM) or other dynamic storage device, coupled to bus 505 for storing information and instructions to be executed by processor 510. Main memory 515 may be data store 140 or may include data store 140. Main memory 515 may also be used for storing location information, temporary variables, or other intermediate information during execution of instructions by processor 510. Computing system 500 may further include a Read Only Memory (ROM) 520 or other static storage device coupled to bus 505 for storing static information and instructions for processor 510. A storage device 525, such as a solid state device, magnetic disk, or optical disk, may be coupled to bus 505 for persistently storing information and instructions. The storage 525 may comprise the data store 140 or be part of the data store 140.
The computing system 500 may be coupled via bus 505 to a display 535, such as a liquid crystal display or an active matrix display, for displaying information to a user. An input device 530, such as a keyboard including alphanumeric and other keys, may be coupled to bus 505 for communicating information and command selections to processor 510. The input device 530 may include a touch screen display 535. Input device 530 may include a cursor control, such as a mouse, a trackball, or cursor direction keys for communicating direction information and command selections to processor 510 and for controlling cursor movement on display 535. For example, the display 535 may be part of the data processing system 102, the client device 104, the display device 108, or other components in fig. 1.
The processes, systems, and methods described herein may be implemented by computing system 500 in response to processor 510 executing an arrangement of instructions contained in main memory 515. Such instructions may be read into main memory 515 from another computer-readable medium, such as storage device 525. Execution of the arrangement of instructions contained in main memory 515 causes computing system 500 to perform the illustrative processes described herein. One or more processors in a multi-processing arrangement may be employed to execute the instructions contained in main memory 515. Hardwired circuitry may be used in place of or in combination with software instructions in combination with the systems and methods described herein. The systems and methods described herein are not limited to any specific combination of hardware circuitry and software.
Although an example computing system has been described in FIG. 5, the subject matter comprising the operations described in this specification may be implemented in other types of digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them.
Where the system discussed herein gathers personal information about a user or may utilize personal information, the user may be provided with the following opportunities: whether or not the control program or feature gathers user information (e.g., information about the user's social network, social actions, or activities; the user's preferences; or the user's location) or whether or how to receive content from a content server or other data processing system that may be more relevant to the user. In addition, some data may be anonymized in one or more ways prior to storing or using the data, such that personal identification information may be removed when generating the parameters. For example, the identity of the user may be anonymized such that personal identity information of the user cannot be determined, or the geographic location from which location information may be obtained by the user may be generalized (such as to a city, zip code, or state county level), such that a particular location of the user cannot be determined. Thus, the user may control how his or her information is collected and/or used by the content server.
The subject matter and operations described in this specification can be implemented in digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them. The subject matter described in this specification can be implemented as one or more computer programs, e.g., one or more circuits encoded on one or more computer storage media for execution by, or to control the operation of, data processing apparatus. Alternatively or additionally, the program instructions may be encoded on a manually-generated propagated signal, e.g., a machine-generated electrical, optical, or electromagnetic signal, that is generated to encode information for transmission to suitable receiver apparatus for execution by data processing apparatus. The computer storage medium may be or be included in a computer readable storage device, a computer readable storage substrate, a random or serial access memory array or device, or a combination of one or more of them. When the computer storage medium is not a propagated signal, the computer storage medium may be a source or destination of computer program instructions encoded in an artificially generated propagated signal. The computer storage medium may also be or be included in one or more separate components or multimedia (e.g., multiple CDs, disks, or other storage devices). The operations described in this specification may be implemented as operations performed by a data processing apparatus on data stored in one or more computer readable storage devices or received from other sources.
The terms "data processing system," "computing device," "component," or "data processing apparatus" include various devices, apparatuses, and machines for processing data, including: such as a programmable processor, a computer, a system on a chip, or a combination or plurality of the foregoing. The device may comprise a dedicated logic circuit, for example an FPGA (field programmable gate array) or an ASIC (application specific integrated circuit). In addition to hardware, the device may include code that creates an execution environment for the computer program under discussion, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, a cross-platform runtime environment, a virtual machine, or a combination of one or more of them. Devices and execution environments may implement a variety of different computing model infrastructures, such as web services, distributed computing, and grid computing infrastructures. The components of system 100 may include or share one or more data processing apparatuses, systems, computing devices, or processors.
A computer program (also known as a program, software application, app, script, or code) can be written in any form of programming language, including compiled or interpreted languages, declarative languages, or procedural languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, object, or other unit suitable for use in a computing environment. The computer program may correspond to a file in a file system. A computer program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), or in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub-programs, or portions of code). A computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
The processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs (e.g., components of data processing system 102, client device 104, first digital assistant server 106, and display device 108) to perform actions by operating on input data and generating output. Means suitable for storing computer program instructions and data include all forms of non-volatile memory, multimedia and memory devices, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices, magnetic disks, e.g., internal hard disks or removable disks, magneto-optical disks, CD-ROM disks, and DVD-ROM disks.
The subject matter described herein may be implemented in a computing system that includes a back-end component, e.g., as a data processor; or include middleware components, such as application servers; or a client computer including a front-end component, such as a graphical user interface or web browser through which a user may interact with embodiments of the subject matter described in this specification; or a combination of such back-end, middleware, or front-end components. The components of the system may be interconnected by any form or medium of digital data communication, e.g., a communication network. Examples of communication networks include: local area networks ("LANs") and Wide Area Networks (WANs), the internet (e.g., the internet), and peer-to-peer networks (e.g., ad hoc peer-to-peer networks).
A computing system, such as system 100 or system 500, may include clients and servers. The client and server are generally remote from each other and typically interact through a communication network (e.g., network 110). The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other. In some implementations, the server transmits data (e.g., data packets representing the content items) to the client device (e.g., to display data to and receive user input from a user interacting with the client device). Data generated at the client device (e.g., results of user interactions) may be received from the client device at the server (e.g., received by the data processing system 102 from the client device 104 or the display device 108).
Although operations are depicted in the drawings in a particular order, such operations need not be performed in the particular order shown or in sequential order, and not all illustrated operations need be performed. The acts described herein may be performed in a different order.
The separation of individual system components does not require separation in all embodiments, and the described program components can be included in a single hardware or software product. For example, NLP component 124 and direct action API 126 may be a single component, app, or program, or a portion of a logic device having one or more processing circuits or one or more servers of data processing system 102.
Having now described some illustrative embodiments, it should be apparent that the foregoing description, which has been presented by way of example, is intended to be illustrative and not limiting. In particular, while many of the examples presented herein relate to specific combinations of method acts or system elements, these acts and these elements may be combined in other ways to achieve the same objectives. Acts, elements and features discussed in connection with one embodiment are not intended to be excluded from a similar role in other embodiments.
The phraseology and terminology used herein is for the purpose of description and should not be regarded as limiting. The use of "including," comprising, "having," "containing," "involving," and variations thereof herein, is meant to encompass the items listed thereafter and equivalents thereof as well as additional items and alternative embodiments that include exclusively the items listed thereafter. In one embodiment, the systems and methods described herein include one, each combination of more than one or all of the described elements, acts, or components.
Any reference to an embodiment, element, or act of a system and method recited in the singular and proceeded with the word "a" or "an" may also encompass embodiments comprising plural of these elements, and any reference to any embodiment, element, or act of the word "may also encompass embodiments comprising only a single element. Singular or plural references are not intended to limit the presently disclosed systems or methods, their components, acts, or elements to a single or multiple configurations. Reference to any action or element based on any information, action, or element may include embodiments in which the action or element is based at least in part on any information, action, or element.
Any embodiment disclosed herein may be combined with any other embodiment or example, and references to "an embodiment," "certain embodiments," "one embodiment," etc., are not necessarily mutually exclusive, and are intended to indicate that a particular feature, structure, or characteristic described in connection with the embodiment may be included in at least one embodiment or example. As used herein, such terms do not necessarily all refer to the same embodiment. Any embodiment may be combined with any other embodiment, including or exclusively, in any manner consistent with aspects and embodiments disclosed herein.
Reference to "or" may be construed as inclusive such that any term describing "or" may indicate any one of, a single, more than one, and all of the described terms. Reference to "at least one of a 'and B' may include only 'a', only 'B', and 'a' and 'B'. Such references, used in conjunction with "comprising" or other open terms, may include other items.
Where technical features in the figures, detailed description, or any claims are followed by reference signs, the reference signs have been included to increase the intelligibility of the figures, detailed description, and claims. Accordingly, the absence of reference numerals or their absence has no limiting effect on the scope of any claim element.
The systems and methods described herein may be embodied in other specific forms without departing from the characteristics thereof. The foregoing embodiments are illustrative and not limiting of the systems and methods described. The scope of the systems and methods described herein are, therefore, indicated by the appended claims rather than by the foregoing description, and all changes which come within the meaning and range of equivalency of the claims are therefore intended to be embraced therein.
Claims (16)
1. A system for coordinating overlapping processing of audio queries, comprising:
A data processing system comprising at least one processor and memory, the data processing system configured to:
receiving, via the interface, one or more data packets corresponding to an audio signal detected by a sensor of the computing device;
generating a query based on the audio signals received via the one or more data packets;
Transmitting the query to a plurality of digital assistant components, including transmitting the query using an application programming interface to a first digital assistant component executing on a remote server and managed by a first entity, and transmitting the query to a second digital assistant component executing on the computing device and managed by a second entity, wherein the first entity is different from the second entity;
receive a first response to the query from the first digital assistant component of the plurality of digital assistant components;
Receiving a second response to the query from the second digital assistant component of the plurality of digital assistant components, wherein the first digital assistant component is authorized to access a database to which the second digital assistant component is prohibited from accessing, and wherein the first digital assistant component and the second digital assistant component are configured to process the query at least in part in parallel;
Determining to select the second response from the second digital assistant component instead of the first response from the first digital assistant component based on a ranking decision function and a domain to which the query belongs, wherein determining to select the second response comprises:
determining that the first digital assistant component is a preferred digital assistant;
Determining that the first response from the first digital assistant component is marked as a standby response;
overriding the first digital assistant component in response to determining that the first response from the first digital assistant component is marked as the standby response;
selecting the second response from the second digital assistant component; and
Maintaining the first digital assistant component as the preferred digital assistant and, in response to the selection, providing the second response from the second digital assistant component to the computing device.
2. The system of claim 1, wherein:
The data processing system is configured to select the second response from the second digital assistant component based on pre-configured preferences established for the second digital assistant component.
3. The system of claim 1, wherein:
the data processing system is configured to select the second response from the second digital assistant component based on a confidence score of the second response from the second digital assistant component.
4. The system of claim 1, wherein the data processing system is configured to:
Determining a signal of the query; and
The ranking decision function is selected from a plurality of ranking decision functions based on the signal.
5. The system of claim 1, wherein the data processing system is configured to:
Determining a signal of the query; and
A response from the second digital assistant component is selected based on the signal.
6. The system of claim 1, wherein,
The data processing system is configured to determine, based on the ranking decision function, to select the second response based on at least one of:
The first response is an audio-only response; and/or
The second digital assistant component accesses data stored in a memory of the computing device.
7. The system of claim 1, wherein the first response comprises one of: calendar information or media content.
8. The system of claim 1, wherein the first digital assistant component executes independently of the second digital assistant component to generate the first response.
9. The system of claim 1, wherein,
The data processing system is configured to transmit the query to each of the plurality of digital assistants via an independent branch to cause the plurality of digital assistants to process the query in an overlapping manner.
10. The system of claim 1, wherein the data processing system is configured to:
The one or more data packets from the computing device are received via a streaming voice server configured to convert audio to text.
11. A system for coordinating overlapping processing of audio queries, comprising:
A data processing system comprising at least one processor and memory, the data processing system configured to:
receiving, via the interface, one or more data packets corresponding to an audio signal detected by a sensor of the computing device;
generating a query based on the audio signals received via the one or more data packets;
Transmitting the query to a plurality of digital assistant components, including transmitting the query using an application programming interface to a first digital assistant component executing on a remote server and managed by a first entity, and transmitting the query to a second digital assistant component executing on the computing device and managed by a second entity, wherein the first entity is different from the second entity;
receive a first response to the query from the first digital assistant component of the plurality of digital assistant components;
Receiving a second response to the query from the second digital assistant component of the plurality of digital assistant components, wherein the first digital assistant component is authorized to access a database to which the second digital assistant component is prohibited from accessing, and wherein the first digital assistant component and the second digital assistant component are configured to process the query at least in part in parallel;
Determining to select the second response from the second digital assistant component instead of the first response from the first digital assistant component based on a ranking decision function and a domain to which the query belongs, wherein determining to select the second response comprises:
Receiving the second response from the second digital assistant component prior to receiving the first response from the first digital assistant component;
determining that the second digital assistant component is not a preferred digital assistant component;
Determining that the first digital assistant is the preferred digital assistant;
responsive to determining that the second digital assistant component is not a preferred digital assistant and that the first digital assistant is the preferred digital assistant, waiting for the first response from the first digital assistant component;
upon receiving the first response from the first digital assistant component, determining that the first response is marked as a standby response; and
Based on determining that the second digital assistant component is not the preferred digital assistant and that the first response is marked as the alternate response, selecting the second response, and
In response to the selection, the second response from the second digital assistant component is provided to the computing device.
12. A method of coordinating overlapping processing of audio queries, comprising:
Receiving, by a data processing system including a processor and a memory, one or more data packets corresponding to an audio signal detected by a sensor of a computing device;
Generating, by the data processing system, a query based on the audio signals received via the one or more data packets;
Transmitting, by the data processing system, the query to a plurality of digital assistant components, including transmitting the query using an application programming interface to a first digital assistant component executing on a remote server and managed by a first entity, and transmitting the query to a second digital assistant component executing on the computing device and managed by a second entity, wherein the first entity is different from the second entity;
receiving, by the data processing system, a first response to the query from the first digital assistant component of the plurality of digital assistant components;
Receiving, by the data processing system, a second response to the query from the second digital assistant component of the plurality of digital assistant components, wherein the first digital assistant component is authorized to access a database to which the second digital assistant component is prohibited from accessing, and wherein the first digital assistant component and the second digital assistant component are configured to process the query at least in part in parallel;
Determining, by the data processing system, to select the second response from the second digital assistant component instead of the first response from the first digital assistant component based on a ranking decision function, wherein determining to select the second response comprises:
determining that the first digital assistant component is a preferred digital assistant;
Determining that the first response from the first digital assistant component is marked as a standby response;
overriding the first digital assistant component in response to determining that the first response from the first digital assistant component is marked as the standby response;
selecting the second response from the second digital assistant component; and
Maintaining the first digital assistant component as the preferred digital assistant and providing, by the data processing system, the second response from the second digital assistant component to the computing device in response to the selection.
13. The method of claim 12, comprising:
The second response from the second digital assistant component is selected based on a confidence score of the second response from the second digital assistant component.
14. The method of claim 12, comprising:
Based on the ranking decision function, it is determined to select the first response based on the first digital assistant component accessing data stored in a memory of the computing device.
15. A method of coordinating overlapping processing of audio queries, comprising:
Receiving, by a data processing system including a processor and a memory, one or more data packets corresponding to an audio signal detected by a sensor of a computing device;
Generating, by the data processing system, a query based on the audio signals received via the one or more data packets;
Transmitting, by the data processing system, the query to a plurality of digital assistant components, including transmitting the query using an application programming interface to a first digital assistant component executing on a remote server and managed by a first entity, and transmitting the query to a second digital assistant component executing on the computing device and managed by a second entity, wherein the first entity is different from the second entity;
receiving, by the data processing system, a first response to the query from the first digital assistant component of the plurality of digital assistant components;
Receiving, by the data processing system, a second response to the query from the second digital assistant component of the plurality of digital assistant components, wherein the first digital assistant component is authorized to access a database to which the second digital assistant component is prohibited from accessing, and wherein the first digital assistant component and the second digital assistant component are configured to process the query at least in part in parallel;
Determining, by the data processing system, to select the second response from the second digital assistant component instead of the first response from the first digital assistant component based on a ranking decision function, wherein determining to select the second response comprises:
Receiving the second response from the second digital assistant component prior to receiving the first response from the first digital assistant component;
determining that the second digital assistant component is not a preferred digital assistant component;
Determining that the first digital assistant is the preferred digital assistant;
responsive to determining that the second digital assistant component is not a preferred digital assistant and that the first digital assistant is the preferred digital assistant, waiting for the first response from the first digital assistant component;
upon receiving the first response from the first digital assistant component, determining that the first response is marked as a standby response; and
Based on determining that the second digital assistant component is not the preferred digital assistant and that the first response is marked as the alternate response, selecting the second response, and
Providing, by the data processing system, the second response from the second digital assistant component to the computing device in response to the selection.
16. A non-transitory computer readable storage medium storing instructions which, when executed on a data processing system comprising a processor and a memory, cause the data processing system to perform the method of any of claims 12 to 15.
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US201862666681P | 2018-05-03 | 2018-05-03 | |
US62/666,681 | 2018-05-03 | ||
PCT/US2019/026321 WO2019212697A1 (en) | 2018-05-03 | 2019-04-08 | Coordination of overlapping processing of audio queries |
Publications (2)
Publication Number | Publication Date |
---|---|
CN110741362A CN110741362A (en) | 2020-01-31 |
CN110741362B true CN110741362B (en) | 2024-05-14 |
Family
ID=
Citations (16)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6484155B1 (en) * | 1998-07-21 | 2002-11-19 | Sentar, Inc. | Knowledge management system for performing dynamic distributed problem solving |
CN1473324A (en) * | 2001-07-27 | 2004-02-04 | ���ṫ˾ | Program, speech interaction apparatus, and method |
CN1514995A (en) * | 2002-04-04 | 2004-07-21 | �ձ�������ʽ���� | Speech recognition conversation selection device, speech recogntion conversation system, speech recognition conversation selection method, and program |
JP2008090545A (en) * | 2006-09-29 | 2008-04-17 | Toshiba Corp | Voice interaction device and method |
CN102137085A (en) * | 2010-01-22 | 2011-07-27 | 谷歌公司 | Multi-dimensional disambiguation of voice commands |
CN103229120A (en) * | 2010-09-28 | 2013-07-31 | 国际商业机器公司 | Providing answers to questions using hypothesis pruning |
WO2014020835A1 (en) * | 2012-07-31 | 2014-02-06 | 日本電気株式会社 | Agent control system, method, and program |
JP2014182307A (en) * | 2013-03-19 | 2014-09-29 | Sharp Corp | Voice recognition system and speech system |
CN105683961A (en) * | 2013-11-06 | 2016-06-15 | 华为技术有限公司 | Method and system for managing data for performing write back on what-if analysis |
CN106057205A (en) * | 2016-05-06 | 2016-10-26 | 北京云迹科技有限公司 | Intelligent robot automatic voice interaction method |
CN106446141A (en) * | 2016-09-21 | 2017-02-22 | 北京光年无限科技有限公司 | Interaction data processing method for intelligent robot system and robot system |
JP2017107078A (en) * | 2015-12-10 | 2017-06-15 | パナソニック インテレクチュアル プロパティ コーポレーション オブ アメリカＰａｎａｓｏｎｉｃ Ｉｎｔｅｌｌｅｃｔｕａｌ Ｐｒｏｐｅｒｔｙ Ｃｏｒｐｏｒａｔｉｏｎ ｏｆ Ａｍｅｒｉｃａ | Voice interactive method, voice interactive device, and voice interactive program |
CN107315561A (en) * | 2017-06-30 | 2017-11-03 | 联想(北京)有限公司 | A kind of data processing method and electronic equipment |
CN107562789A (en) * | 2017-07-28 | 2018-01-09 | 深圳前海微众银行股份有限公司 | Knowledge base problem update method, customer service robot and readable storage medium storing program for executing |
JP2018045190A (en) * | 2016-09-16 | 2018-03-22 | トヨタ自動車株式会社 | Voice interaction system and voice interaction method |
CN107895577A (en) * | 2016-10-03 | 2018-04-10 | 谷歌公司 | Initiated using the task of long-tail voice command |
Patent Citations (16)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6484155B1 (en) * | 1998-07-21 | 2002-11-19 | Sentar, Inc. | Knowledge management system for performing dynamic distributed problem solving |
CN1473324A (en) * | 2001-07-27 | 2004-02-04 | ���ṫ˾ | Program, speech interaction apparatus, and method |
CN1514995A (en) * | 2002-04-04 | 2004-07-21 | �ձ�������ʽ���� | Speech recognition conversation selection device, speech recogntion conversation system, speech recognition conversation selection method, and program |
JP2008090545A (en) * | 2006-09-29 | 2008-04-17 | Toshiba Corp | Voice interaction device and method |
CN102137085A (en) * | 2010-01-22 | 2011-07-27 | 谷歌公司 | Multi-dimensional disambiguation of voice commands |
CN103229120A (en) * | 2010-09-28 | 2013-07-31 | 国际商业机器公司 | Providing answers to questions using hypothesis pruning |
WO2014020835A1 (en) * | 2012-07-31 | 2014-02-06 | 日本電気株式会社 | Agent control system, method, and program |
JP2014182307A (en) * | 2013-03-19 | 2014-09-29 | Sharp Corp | Voice recognition system and speech system |
CN105683961A (en) * | 2013-11-06 | 2016-06-15 | 华为技术有限公司 | Method and system for managing data for performing write back on what-if analysis |
JP2017107078A (en) * | 2015-12-10 | 2017-06-15 | パナソニック インテレクチュアル プロパティ コーポレーション オブ アメリカＰａｎａｓｏｎｉｃ Ｉｎｔｅｌｌｅｃｔｕａｌ Ｐｒｏｐｅｒｔｙ Ｃｏｒｐｏｒａｔｉｏｎ ｏｆ Ａｍｅｒｉｃａ | Voice interactive method, voice interactive device, and voice interactive program |
CN106057205A (en) * | 2016-05-06 | 2016-10-26 | 北京云迹科技有限公司 | Intelligent robot automatic voice interaction method |
JP2018045190A (en) * | 2016-09-16 | 2018-03-22 | トヨタ自動車株式会社 | Voice interaction system and voice interaction method |
CN106446141A (en) * | 2016-09-21 | 2017-02-22 | 北京光年无限科技有限公司 | Interaction data processing method for intelligent robot system and robot system |
CN107895577A (en) * | 2016-10-03 | 2018-04-10 | 谷歌公司 | Initiated using the task of long-tail voice command |
CN107315561A (en) * | 2017-06-30 | 2017-11-03 | 联想(北京)有限公司 | A kind of data processing method and electronic equipment |
CN107562789A (en) * | 2017-07-28 | 2018-01-09 | 深圳前海微众银行股份有限公司 | Knowledge base problem update method, customer service robot and readable storage medium storing program for executing |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
CN113571058B (en) | Voice action discoverability system | |
US10909971B2 (en) | Detection of potential exfiltration of audio data from digital assistant applications | |
US10541997B2 (en) | Authentication of packetized audio signals | |
JP7439186B2 (en) | Coordinating overlapping audio queries | |
US11841893B2 (en) | Coordination of parallel processing of audio queries across multiple devices | |
US11664025B2 (en) | Activation of remote devices in a networked system | |
US20220027124A1 (en) | Verifying operational statuses of agents interfacing with digital assistant applications | |
US20200257853A1 (en) | Verifying operational statuses of agents interfacing with digital assistant applications | |
CN110741362B (en) | Coordination of overlapping processing of audio queries | |
JP2024063034A (en) | Coordination of overlapping audio queries |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
GR01 | Patent grant |
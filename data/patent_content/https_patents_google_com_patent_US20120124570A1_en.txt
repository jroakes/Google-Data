US20120124570A1 - Method and system for facilitating the providing of software updates to mobile devices - Google Patents
Method and system for facilitating the providing of software updates to mobile devices Download PDFInfo
- Publication number
- US20120124570A1 US20120124570A1 US12/947,413 US94741310A US2012124570A1 US 20120124570 A1 US20120124570 A1 US 20120124570A1 US 94741310 A US94741310 A US 94741310A US 2012124570 A1 US2012124570 A1 US 2012124570A1
- Authority
- US
- United States
- Prior art keywords
- mobile devices
- software update
- information
- server
- mobile device
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Abandoned
Links
- 238000000034 method Methods 0.000 title claims abstract description 54
- 238000004891 communication Methods 0.000 claims description 83
- 238000012545 processing Methods 0.000 claims description 8
- 230000001419 dependent effect Effects 0.000 claims 1
- 230000008569 process Effects 0.000 description 18
- 230000005540 biological transmission Effects 0.000 description 12
- 238000009434 installation Methods 0.000 description 12
- 230000000694 effects Effects 0.000 description 7
- 238000005516 engineering process Methods 0.000 description 6
- 230000001771 impaired effect Effects 0.000 description 6
- 238000012913 prioritisation Methods 0.000 description 5
- 230000000007 visual effect Effects 0.000 description 5
- 230000001413 cellular effect Effects 0.000 description 4
- 238000010586 diagram Methods 0.000 description 4
- 230000006399 behavior Effects 0.000 description 3
- 230000003247 decreasing effect Effects 0.000 description 3
- 230000006870 function Effects 0.000 description 3
- 239000000969 carrier Substances 0.000 description 2
- 230000008867 communication pathway Effects 0.000 description 2
- 238000011161 development Methods 0.000 description 2
- 230000003993 interaction Effects 0.000 description 2
- 230000000737 periodic effect Effects 0.000 description 2
- 238000012552 review Methods 0.000 description 2
- 230000000153 supplemental effect Effects 0.000 description 2
- 238000012546 transfer Methods 0.000 description 2
- IRLPACMLTUPBCL-KQYNXXCUSA-N 5'-adenylyl sulfate Chemical compound C1=NC=2C(N)=NC=NC=2N1[C@@H]1O[C@H](COP(O)(=O)OS(O)(=O)=O)[C@@H](O)[C@H]1O IRLPACMLTUPBCL-KQYNXXCUSA-N 0.000 description 1
- RYGMFSIKBFXOCR-UHFFFAOYSA-N Copper Chemical compound [Cu] RYGMFSIKBFXOCR-UHFFFAOYSA-N 0.000 description 1
- 230000009471 action Effects 0.000 description 1
- 230000003213 activating effect Effects 0.000 description 1
- 230000002776 aggregation Effects 0.000 description 1
- 238000004220 aggregation Methods 0.000 description 1
- 230000009286 beneficial effect Effects 0.000 description 1
- 230000008901 benefit Effects 0.000 description 1
- 229910052802 copper Inorganic materials 0.000 description 1
- 239000010949 copper Substances 0.000 description 1
- 230000006735 deficit Effects 0.000 description 1
- 230000003111 delayed effect Effects 0.000 description 1
- 239000000835 fiber Substances 0.000 description 1
- 230000006872 improvement Effects 0.000 description 1
- 239000004973 liquid crystal related substance Substances 0.000 description 1
- 230000007246 mechanism Effects 0.000 description 1
- 230000006386 memory function Effects 0.000 description 1
- 238000012986 modification Methods 0.000 description 1
- 230000004048 modification Effects 0.000 description 1
- 238000003032 molecular docking Methods 0.000 description 1
- 230000006855 networking Effects 0.000 description 1
- 230000003287 optical effect Effects 0.000 description 1
- 238000003825 pressing Methods 0.000 description 1
- 238000011160 research Methods 0.000 description 1
- 230000004044 response Effects 0.000 description 1
- 230000000717 retained effect Effects 0.000 description 1
- 230000003068 static effect Effects 0.000 description 1
- 239000013589 supplement Substances 0.000 description 1
- 238000002604 ultrasonography Methods 0.000 description 1
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F8/00—Arrangements for software engineering
- G06F8/60—Software deployment
- G06F8/65—Updates
Definitions
- the present invention relates to communications involving mobile devices and, more particularly, to communications with mobile devices by which the mobile devices are provided with updates to software implemented on the mobile devices.
- Mobile devices such as cell phones, personal digital assistants (PDAs), and smart phones operate by way of a variety of software programs (understood herein to be synonymous with the term software applications) implemented thereon.
- software programs understood herein to be synonymous with the term software applications.
- a given mobile device is already performing other activities when the wireless carrier attempts to commence a software update, the performing of the software update will need to be deferred and reattempted at a later time when the mobile device is not busy.
- a given software update be commonly applied to multiple (e.g., many thousands of) mobile devices as part of a network-wide rollout of the update, in practice it can often take a long period of time (e.g., two days) for a wireless carrier to successfully apply the update in relation to all of the mobile devices for which that update is intended, as the carrier must often reattempt the application of the update on numerous occasions with respect to the many mobile devices.
- the present invention relates to a method of facilitating updating of software programming on a plurality of mobile devices.
- the method includes receiving at a server, from the mobile devices, first information regarding usage of at least one feature at the mobile devices.
- the method also includes recognizing at the server that a software update is available, and determining an ordering of at least some of the mobile devices, the ordering taking into account the first information.
- the method further includes sending the software update for receipt by each of the at least some mobile devices so that the software update can be implemented thereon, where the sending proceeds at least partly based upon the ordering.
- the present invention relates to a system for facilitating updating of software programming on a plurality of mobile devices.
- the system includes a first server having a processing device and at least one memory device, where the server operates to communicate with the mobile devices.
- the first server particularly is configured to operate so that, upon receiving a plurality of information portions respectively provided from the plurality of mobile devices indicative of operational behavior of the mobile devices, and further receiving software update information including a first software update, the first server develops a priority listing of at least some of the mobile devices, and subsequently sends the first software update to the at least some mobile devices in a manner based at least in part upon the priority listing.
- the present invention relates to a method of facilitating updating of software programming on a plurality of mobile devices.
- the method includes receiving at a server first information from the mobile devices, the first information regarding operational behavior of the mobile devices, and storing on the at least one memory device of the server second information pertaining to a first software update to be implemented on at least one of the mobile devices.
- the method additionally includes processing the first and second information to determine an ordering of at least some of the mobile devices of the plurality of mobile devices, and sending, based at least in part upon the ordering, the software update for receipt by each of the at least some mobile devices so that the software update can be implemented thereon.
- FIG. 1 shows in schematic form an example communications system involving a plurality of mobile devices in communication with potential sources of software update information (among other types of information), by way of an intermediary server;
- FIG. 2 is a block diagram showing example components of one of the mobile devices of FIG. 1 ;
- FIG. 3 is a block diagram showing example components of the intermediary server of FIG. 1 ;
- FIG. 4 is a flow chart showing various example steps of operation of some of the components of the system of FIG. 1 , by which a software update can be implemented on the mobile devices, in at least some embodiments.
- the communications system 100 includes in this embodiment three mobile devices 102 , particularly including first, second, and third mobile devices 103 , 113 , and 123 , respectively.
- each of the mobile devices 102 is in (or is capable of) communication via a respective communication link 105 with a server, which in the present embodiment is a web server 104 (e.g., a server that supports internet protocols or otherwise is capable of interaction with the internet or World Wide Web).
- the mobile devices 102 are respectively representative of communication devices operated by persons (or users) or possibly by other entities (e.g., other computers) desiring or requiring communication capabilities.
- the mobile devices 102 can be any of cellular telephones, personal digital assistants (PDAs), smart phones, other handheld or portable electronic devices, headsets, MP3 players, battery-powered devices, wearable devices, radios, navigation devices, laptop or notebook computers, netbooks, pagers, PMPs (personal media players), DVRs (digital video recorders), gaming devices, cameras, netbooks, e-readers, e-books, tablet devices, navigation devices with video capable screens, multimedia docking stations, or other mobile devices.
- PDAs personal digital assistants
- smart phones other handheld or portable electronic devices
- headsets MP3 players
- battery-powered devices wearable devices
- radios navigation devices
- laptop or notebook computers netbooks, pagers, PMPs (personal media players), DVRs (digital video recorders), gaming devices, cameras, netbooks, e-readers, e-books, tablet devices, navigation devices with video capable screens, multimedia docking stations, or other mobile devices.
- PMPs personal media players
- DVRs digital video recorders
- the communications system 100 in the present embodiment additionally includes three additional servers 106 , particularly including first, second, and third additional servers 109 , 119 , and 129 , respectively. As shown, each of the additional servers 106 is in communication with (or capable of communication with) the intermediary web server 104 via a respective communication link 108 .
- the additional servers 106 in the present embodiment are intended to represent any of a variety of servers (or, indeed, other types of computer systems) that are capable of providing various types of information for receipt by the mobile devices 102 and/or receiving various types of information provided by the mobile devices.
- communications between one or more of the additional servers 106 and one or more of the mobile devices 102 occurs via the web server 104 operating as an intermediary therebetween.
- the web server 104 particularly provides various functionality that enhances the process of implementing software updates on one or more of the mobile devices 102 . Notwithstanding the presence of the web server 104 , as represented by an additional communication link 111 , it is still possible that one or more of the mobile devices 102 will communicate directly with one or more of the additional servers 106 directly, that is, without intermediation by the web server 104 .
- the first additional server 109 (if not two or all three of the additional servers 106 ) is capable of supplying information regarding one or more software updates to be implemented upon one or more of the mobile devices 102 .
- the first additional server 109 can be considered, for example, a server associated with a manufacturer of one or more of the mobile devices 102 from which software updates are provided on a continual (or nearly continual), periodic (e.g., annual or semiannual), or occasional basis.
- the first additional server 109 supplying information regarding software update(s) to be implemented upon one or more of the mobile devices 102 can be a server associated with a wireless carrier, or a server associated with the author of a software program already resident on the mobile device that the software update(s) are intended to upgrade.
- the additional servers 106 can further provide, in addition to software updates themselves, indications as to which of several available software updates already provided to the mobile devices 102 (or at least to the web server 104 ) should be executed or otherwise implemented at given times, indications as to which mobile devices (or types of mobile devices) the software updates pertain to, and/or indications that one or more software update(s) are now available for implementation.
- one or more of the additional servers 106 are servers hosting content provider websites (CPWs), which can be understood to generally encompass any of a variety of types of websites including, for example, social networking websites (SNWs), business-to-business websites, business-to-consumer websites, news feeds, video broadcast or other broadcast sources, music and photograph websites, or other sources of media content.
- CPWs content provider websites
- CPWs can include FacebookTM, MySpaceTM, hi5TM, LinkedInTM, and TwitterTM, youtube.com, hulu.com, as well as sources of RSS or other news feeds, photograph services such as PicasaTM or PhotobucketTM, and music services such as LastFMTM.
- FIG. 1 shows the web server 104 to be potentially in communication with multiple (e.g., three) of the additional servers 106 as well as three of the mobile devices 102 , this illustration is merely one example.
- any arbitrary number of mobile devices ranging from one mobile device to many hundreds or thousands (or more) of mobile devices, can be in communication with the web server 104 and can be intended recipients of a given software update or software update(s).
- any arbitrary number of additional servers (or other computer systems or terminals or information sources) can provide software updates intended for implementation on any such arbitrary number of mobile devices, and/or can otherwise be in communication with such arbitrary number of mobile devices.
- the web server 104 itself can be the source of one or more software update(s) such that the web server fulfills two roles, namely, operating as a source of software update(s) and also operating as an intermediary between one or more of the additional servers 106 and one or more of the mobile devices 102 .
- the first additional server 109 can be a computer system affiliated with a manufacturer of the mobile devices 102 that is providing software updates
- the web server 104 itself can be a computer system affiliated with such a manufacturer that serves this purpose.
- the communication links 105 , 108 , 111 can be part of a single network or multiple networks, and each link can include one or more wired and/or wireless communication pathways, for example, landline (e.g., fiber optic, copper) wiring, microwave communication, radio channel, and/or wireless path, etc.
- landline e.g., fiber optic, copper
- microwave communication radio channel
- wireless path etc.
- the communication links 105 , 108 , 111 involve internet, intranet, and/or World Wide Web communication pathways (which themselves can employ numerous intermediary hardware and/or software devices including, for example, numerous routers, etc.).
- a variety of communication protocols and methodologies can be used to conduct the communications via the communication links 105 , 108 , 111 between the mobile devices 102 , web server 104 , and additional servers 106 , including for example, transmission control protocol/internet protocol (TCP/IP), extensible messaging and presence protocol (XMPP), file transfer protocol (FTP), etc.
- TCP/IP transmission control protocol/internet protocol
- XMPP extensible messaging and presence protocol
- FTP file transfer protocol
- other types of communication links for facilitating the communication of signals between the plurality of mobile devices 102 and the additional servers 106 can be utilized as well.
- the communication links (network) 105 and 108 and server 104 are each discussed as being web-based, in other embodiments, these links (network) and server can assume various non-web-based forms.
- the web server 104 particularly operates to communicate software update(s) to one or more of the mobile devices 102 , where the software update(s) are provided to the web server from one or more of the additional servers 106 (e.g., the first additional server 109 ) and/or originate at the web server itself.
- various other types of communications between the mobile devices 102 and additional servers 106 are passed through, processed and/or monitored by the web server 104 .
- Such communications can include, for example, communications involving the uploading and downloading of files (e.g., photos, music, videos, text entries, etc.), blog postings, and messaging (e.g., Short Message Service (SMS), Multimedia Messaging Service (MMS), and Instant Messaging (IM)).
- SMS Short Message Service
- MMS Multimedia Messaging Service
- IM Instant Messaging
- streaming video and/or audio information can be communicated from the additional servers 106 to the mobile devices 102 .
- the internal components 200 include one or more wireless transceivers 202 , a processor 204 (e.g., a microprocessor, microcomputer, application-specific integrated circuit, etc.), a memory portion 206 , one or more output devices 208 , and one or more input devices 210 .
- a user interface is present that comprises one or more of the output devices 208 , such as a display, and one or more of the input devices 210 , such as a keypad or touch sensor.
- the internal components 200 can further include a component interface 212 to provide a direct connection to auxiliary components or accessories for additional or enhanced functionality.
- the internal components 200 preferably also include a power supply 214 , such as a battery, for providing power to the other internal components while enabling the mobile device to be portable.
- the internal components 200 additionally include one or more sensors 228 . All of the internal components 200 can be coupled to one another, and in communication with one another, by way of one or more internal communication links 232 (e.g., an internal bus).
- Each of the wireless transceivers 202 utilizes a wireless technology for communication, which can include for example (but are not limited to) cellular-based communication technologies such as analog communications (using AMPS), digital communications (using CDMA, TDMA, GSM, iDEN, GPRS, EDGE, etc.), and next generation communications (using UMTS, WCDMA, LTE, IEEE 802.16, etc.) or variants thereof, or peer-to-peer or ad hoc communication technologies such as HomeRF (radio frequency), Bluetooth or IEEE 802.11(a, b, g or n), or other wireless communication technologies such as infrared technology.
- cellular-based communication technologies such as analog communications (using AMPS), digital communications (using CDMA, TDMA, GSM, iDEN, GPRS, EDGE, etc.), and next generation communications (using UMTS, WCDMA, LTE, IEEE 802.16, etc.) or variants thereof, or peer-to-peer or ad hoc communication technologies such as Home
- the wireless transceivers 202 include a cellular transceiver 203 and a wireless local area network (WLAN) transceiver 205 , although in other embodiments only one of these types of wireless transceivers (and possibly neither of these types of wireless transceivers, and/or additional types of wireless transceivers) is present.
- WLAN wireless local area network
- the first mobile device 103 is capable of communicating with the web server 104 (e.g., by way of its respective communication link 105 ) and thus capable of communicating indirectly with each of the additional servers 106 . Further by virtue of the use of the wireless transceivers 202 , the first mobile device 103 also is capable of communicating directly with the additional servers 106 (such as the first additional server 109 ) by way of direct communication link(s) such as the communication link 111 .
- Operation of the wireless transceivers 202 in conjunction with others of the internal components 200 of the first mobile device 103 can take a variety of forms.
- operation of the wireless transceivers 202 can proceed in a manner in which, upon reception of wireless signals, the internal components 200 detect communication signals and the transceivers 202 demodulate the communication signals to recover incoming information, such as voice and/or data, transmitted by the wireless signals.
- the processor 204 After receiving the incoming information from the transceivers 202 , formats the incoming information for the one or more output devices 208 .
- the processor 204 formats outgoing information, which can but need not be activated by the input devices 210 , and conveys the outgoing information to one or more of the wireless transceivers 202 for modulation so as to provide modulated communication signals to be transmitted.
- the wireless transceivers 202 convey the modulated communication signals by way of wireless (as well as possibly wired) communication links such as the communication links 105 , 111 to other devices such as the web server 104 and one or more of the additional servers 106 (as well as possibly to other devices such as a cell tower, access point, or another server or any of a variety of remote devices).
- the input and output devices 208 , 210 of the internal components 200 can include a variety of visual, audio and/or mechanical outputs.
- the output device(s) 208 can include one or more visual output devices 216 such as a liquid crystal display and/or light emitting diode indicator, one or more audio output devices 218 such as a speaker, alarm, and/or buzzer, and/or one or more mechanical output devices 220 such as a vibrating mechanism.
- the visual output devices 216 among other things can also include a video screen.
- the input device(s) 210 can include one or more visual input devices 222 such as an optical sensor (for example, a camera lens and photosensor), one or more audio input devices 224 such as a microphone, and/or one or more mechanical input devices 226 such as a flip sensor, keyboard, keypad, selection button, navigation cluster, touch pad, capacitive sensor, motion sensor, and/or switch.
- Operations that can actuate one or more of the input devices 210 can include not only the physical pressing/actuation of buttons or other actuators, but can also include, for example, opening the mobile device, unlocking the device, moving the device to actuate a motion, moving the device to actuate a location positioning system, and operating the device.
- the internal components 200 also can include one or more of various types of sensors 228 .
- the sensors 228 can include, for example, proximity sensors (e.g., a light detecting sensor, an ultrasound transceiver or an infrared transceiver), touch sensors, altitude sensors, and one or more location circuits/components that can include, for example, a Global Positioning System (GPS) receiver, a triangulation receiver, an accelerometer, a tilt sensor, a gyroscope, or any other information collecting device that can identify a current location or user-device interface of the mobile device 102 . While the sensors 228 for the purposes of FIG.
- GPS Global Positioning System
- the input devices 210 are considered to be distinct from the input devices 210 , in other embodiments it is possible that one or more of the input devices can also be considered to constitute one or more of the sensors (and vice-versa). Additionally, while in the present embodiment the input devices 210 are shown to be distinct from the output devices 208 , it should be recognized that in some embodiments one or more devices serve both as input device(s) and output device(s). For example, in embodiments where a touchscreen is employed, the touchscreen can be considered to constitute both a visual output device and a mechanical input device.
- the memory portion 206 of the internal components 200 can encompass one or more memory devices of any of a variety of forms (e.g., read-only memory, random access memory, static random access memory, dynamic random access memory, etc.), and can be used by the processor 204 to store and retrieve data.
- the memory portion 206 can be integrated with the processor 204 in a single device (e.g., a processing device including memory or processor-in-memory (PIM)), albeit such a single device will still typically have distinct portions/sections that perform the different processing and memory functions and that can be considered separate devices.
- the data that is stored by the memory portion 206 can include, but need not be limited to, operating systems, programs (applications), and informational data.
- Each operating system includes executable code that controls basic functions of the mobile device, such as interaction among the various components included among the internal components 200 , communication with external devices via the wireless transceivers 202 and/or the component interface 212 , and storage and retrieval of programs and data, to and from the memory portion 206 .
- each program includes executable code that utilizes an operating system to provide more specific functionality, such as file system service and handling of protected and unprotected data stored in the memory portion 206 .
- an operating system to provide more specific functionality
- the programs include applications (or simply “apps”) governing optional or specialized functionality, which can be provided in some cases by third party vendors unrelated to the mobile device manufacturer.
- the operating system (or portions thereof) of a mobile device may be updated by way of one or more software updates provided to the mobile device, typically it is the one or more programs stored in the memory of the mobile device that are updated by way of software updates provided to the mobile device.
- software updates provided to a mobile device result in the addition of entirely new programs being added to (stored on) the mobile device.
- informational data this is non-executable code or information that can be referenced and/or manipulated by an operating system or program for performing functions of the mobile device.
- informational data can include any of a variety of types of information that is uploaded to, downloaded from, or otherwise accessed at the web server 104 or one or more of the additional servers 106 with respect to which the mobile device is in communication. Although not typically the case, in some circumstances it is possible that informational data is received or modified when a software update is implemented on the mobile device.
- the web server 104 includes a memory portion 302 , a processor portion 304 in communication with that memory portion, and first and second input/output (I/O) interfaces 306 and 308 , respectively, for interfacing the communication links 105 and 108 , respectively, with the processor portion 304 .
- the web server 104 can also be understood to serve as an aggregation server insofar as the web server keeps track of and aggregates (and stores in the memory portion 302 ) a variety of information that relates to communications and other activity of the mobile devices 102 .
- the web server 104 can also store in the memory portion 302 one or more software updates that are to be provided to one or more of the mobile devices 102 .
- one or more of the software update(s) particularly are received by the web server 104 from the first additional server 109 , albeit in other embodiments software update(s) can be received from the others of the additional servers or other sources (or originate at the web server itself).
- the processor portion 304 further includes a front end portion 310 and a back end portion 312 .
- the back end portion 312 communicates with the additional servers 106 such as the first additional server 109 (shown in dashed lines) via the respective communication links 108 (one of which is shown) and the second I/O interface 308 .
- the back end portion 312 can be referred to as a “Social Network Processor”.
- the front end portion 310 communicates with the mobile devices 102 such as the first mobile device 103 (also shown in dashed lines) via the respective communication links 105 (again one of which is shown) and the first I/O interface 306 .
- the front end portion 310 can be in communication with any arbitrary number of mobile devices and that the back end portion 312 can be in communication with any arbitrary number of additional servers, depending upon the embodiment.
- the back end portion 312 supports pull communications with the additional servers 106 such as the first additional server 109 .
- the pull communications can for example be implemented using Representation State Transfer (REST) architecture, of the type typical to the web.
- REST Representation State Transfer
- the back end portion 312 is configured to generate requests for information to be provided to the back end portion from the additional servers 106 (such as the first additional server 109 ) at times/circumstances determined by the web server 104 , in response to which the additional servers search for and provide back to the web server requested data.
- the front end portion 310 supports push communications in conjunction with the mobile devices 102 such as the first mobile device 103 .
- push channel(s) can be established with respect to the various mobile devices 102 .
- push channel(s) will be established and utilized to communicate software updates to one or more of the mobile devices 102 .
- pull channels can be established between the web server 104 and the additional servers 106 by which the web server obtains relevant software updates from the additional servers, in the present embodiment such pull channels are not used for this purpose, but rather the timing of the providing of software updates to the web server from the additional servers is determined by the additional servers themselves.
- the server 104 discussed with reference FIGS. 1 and 3 can take various forms depending upon the implementation or embodiment. In at least some circumstances, the server 104 discussed with reference to FIGS. 1 and 3 can be considered a cloud. Further, although FIGS. 1 and 3 show the single server 104 , it should be understood that in other embodiments there can be more than one intermediating device constituting a cloud (or implemented in place of the server 104 ) including, for example, a collection of multiple servers that are in communication with one another and that, in at least some embodiments, support Internet technologies for communication between computer systems and/or other entities.
- a flow chart 400 shows an example operational process of at least some portions of the system 100 of FIG. 1 , and particularly illustrates an example operational process by which a software update or upgrade is provided to multiple mobile devices such as the mobile devices 102 by the web server 104 in a manner that takes into account historic behavior of the mobile devices so as to result in a more timely and efficient implementation of the software update than might otherwise occur.
- the process represented by the flowchart 400 begins at a start step 401 followed by a step 410 , at which users (e.g., persons) make use of the mobile devices 102 in any of a variety of matters.
- users e.g., persons
- such usage can involve online activity of the mobile devices 102 involving the receipt or transmission of wireless signals, such as engaging in telephone (e.g., voice or video) calls, browsing activity, engaging in data sessions, communicating data such as email or text messages, online gaming, streaming (e.g., video or audio) media consumption, navigating, etc.
- the usage of the mobile devices 102 can include offline activities that do not require communication by the respective mobile device with any external entities, such as offline gaming, local media consumption (for example, listening to a video or audio recording that is already stored on the mobile device), managing contacts, taking photographs using an on-board camera, reading content stored on the mobile device, or writing content onto the mobile device without transmitting that content outside of the mobile device.
- offline gaming for example, listening to a video or audio recording that is already stored on the mobile device
- managing contacts for example, listening to a video or audio recording that is already stored on the mobile device
- reading content stored on the mobile device for example, listening to a video or audio recording that is already stored on the mobile device
- managing contacts for example, listening to a video or audio recording that is already stored on the mobile device
- reading content stored on the mobile device for example, listening to a video or audio recording that is already stored on the mobile device
- writing content onto the mobile device without transmitting that content outside of the mobile device.
- such activity can involve the offline review or creation of word processing documents,
- the mobile devices 102 communicate with the web server 104 and provides to the web server generic (that is, non-specific) details of the usage of the mobile devices.
- FIG. 4 shows the step 420 as occurring subsequent to the step 410 , it will be understood that the actual uploading of information from the mobile devices 102 to the web server 104 can occur at a variety of times and in a variety of manners including, for example, ongoing or continual uploading of information as the mobile devices are used, periodic uploading of information at different times as the mobile devices are used, or either after a given amount of usage has occurred or after all usage has occurred.
- information regarding the usage of one mobile device will be uploaded before usage of others of the mobile devices (e.g., the mobile devices 113 , 123 ) has even occurred (and thus before uploading of any information regarding that usage).
- the uploaded information can be stored in the memory portion 302 of the web server 104 .
- the information that is uploaded to the web server 104 at the step 420 in the present embodiment is kept non-specific for various reasons, for example, a desire to avoid communicating to the web server certain types of information that may be considered by some individuals to be personal or private, a desire to avoid communicating to the web server certain information that by convention or practice is typically retained at a mobile device, and/or a desire to avoid communicating excessive amounts of information to the web server. Nevertheless, a variety of types of information can be provided at the step 420 depending upon the embodiment or circumstance. Also, the types of information that are withheld by the mobile devices 102 and not provided to the web server 104 can also vary depending upon the embodiment or circumstance.
- the information provided to the web server 104 in the step 420 can include information as to the amount of time (e.g., one hour per day) that a user on average utilizes the first mobile device 103 to browse websites and/or information regarding the typical or average time of the day when browsing occurs.
- the first mobile device 103 does not provide to the web server 104 at the step 420 information regarding the particular websites that were the subject of the browsing by the user.
- the mobile device 103 can provide to the web server 104 information regarding the time or amount of time that the user of the mobile device streams media (e.g., because a user prefers to watch a particular television program every week at the same time).
- the mobile device 103 does not provide to the web server 104 details of the particular content reviewed by the user.
- the first mobile device 103 can send information to the web server 104 indicating when a user of the mobile device tends to make phone calls and approximately on average how long the phone calls last. In such case, however, the mobile device 103 does not share with the web server 104 any information indicative of the people with whom the user was connected by way of the mobile device 103 (e.g., no phone number information).
- the first mobile device 103 can provide an indication to the web server 104 that the mobile device is generally idle between 1 pm and 6 pm (which might be indicative of the fact that the user works third shift).
- the mobile device 103 can provide to the web server 104 information that a media player of the mobile device is active from midnight to 1 am. Again, in such circumstance, a mobile device 103 would refrain from indicating more specific information about the use of the media player, such as information regarding the content that was played using the media player.
- the web server Based upon the various information provided from the mobile devices 102 to the web server 104 , the web server is able to store within its memory portion 302 the information and develop a history of usage patterns of the mobile devices 103 , for example, in terms of the features or functions that the users of the mobile devices are activating, how often such features are active, and/or the times of day that those features tend to be active. Thus, the web server 104 is able to take this information into account in terms of how it operates to cause installation or implementation of software update(s) 110 in relation to the mobile devices 102 .
- steps 430 - 499 illustrate in further detail one example manner in which the web server 104 takes such information into account in determining how to proceed with installing or implementing software update(s) onto the mobile devices 102 .
- the web server 104 begins the process of determining how to proceed with installing/implementing (and ultimately installing/implementing) a software update when the web server receives software update information including such a software update, e.g., when the web server receives the software update 110 of FIG. 1 and stores that information in the memory portion 302 .
- the software update 110 is provided from the first additional server 109 , which is associated with the manufacturer of the mobile devices 102 (although, as already discussed, the software update can also come from any of a variety of other sources as well, such as a wireless carrier or author(s) of applications to which the software update pertains).
- the web server 104 In determining how to proceed with installing/implementing the software update 110 , the web server 104 among other things first can take into account information pertaining to the software update itself, which can be provided along with the actual software update programming as supplemental software update information (the software update 110 can be considered to include both the actual software update programming and such supplemental software update information).
- the software update 110 is pertinent to particular mobile devices or types of mobile devices rather than all devices that might potentially be in communication with the web server 104 .
- the software update 110 can include information indicating the mobile device or types of mobile devices that should receive the software update (albeit for purposes of the present example, it will be assumed that all of the mobile devices 102 in communication with the web server 104 would be suited for the software update 110 ).
- the software update 110 can include information regarding which problems are to be fixed by installation of the software update, information regarding requirements as to whether one or more previous software updates need to have been installed prior to the installation of the present update, or information regarding what type of network (or network characteristics) should be present in order for the software update to be properly implemented.
- the software update 110 particularly includes information regarding what operational features, use cases, or performance characteristics of the mobile devices 102 (and/or software programs resident thereon) will be (or are likely to be) improved by implementing the software update on the mobile devices 102 .
- the software update 110 also includes information regarding what mobile device operational features, use cases, or performance characteristics will be (or are likely to be) impaired due to implementation of the software update on the mobile devices 102 .
- the software update 110 additionally includes information (e.g., a flag) indicative of whether installation of the software update is mandatory or optional.
- this information regarding operational improvement and impairment resulting from implementation of the software update 110 , and the mandatory/optional nature of the software update, is particularly utilized by the web server 104 in determining how to install/implement the software update in relation to the mobile devices 102 .
- the web server 104 utilizes the information regarding the software update 110 received at the step 430 to make a list of all of the mobile devices 102 to which the new software update 110 pertains (this can also be thought of as a list of users that have devices that are candidates to receive the software update). Assuming more than one mobile device is eligible (e.g., all three of the mobile devices 102 ), then the list in particular is a priority list, where the web server 104 assigns priority levels for each of the eligible mobile devices 102 .
- the manner of prioritization can vary depending upon the embodiment or circumstance.
- the web server 104 assigns a priority level of two (2) to each respective one of the mobile devices 102 for which implementation of the software update 110 is mandatory, and assigns a priority level of one (1) to each respective one of the mobile devices for which implementation of the software update is optional.
- the priority list can take the form shown as a block 540 in FIG. 4 , which shows each of the first mobile device 103 and the second mobile device 113 as having a priority level of two (2) indicating that the software update is mandatory for those mobile devices, while the third mobile device 123 has a priority level of one (1) indicating that the software update is optional for that mobile device.
- the web server 104 further determines, for each of the eligible mobile devices 102 , whether that respective mobile device (or the user of that mobile device) regularly or typically uses a feature that will be (or is likely to be) improved by the software update 110 . This can be determined based upon the details of usage that were uploaded at the step 420 . That is, the web server 104 can check the history recorded in the memory portion 302 reflective of the details of usage of each of the mobile devices 102 and compare the typically used features to the features that the software update 110 will (or is likely to) improve as indicated of the step 430 .
- the priority level of that mobile device is increased by one (1) prior to the process advancing to a step 460 .
- the priority level for that mobile device is increased to three (3).
- the web server 104 does not adjust the priority level of that mobile device and rather the process advances directly from the step 450 to the step 460 .
- the web server 104 determines whether that respective mobile device regularly uses a feature that will be (or is likely to be) impaired or degraded by the software 110 update. To make this determination, the web server 104 again consults the information stored in the memory portion 302 that was obtained at the step 420 , and compares the features typically used by each of the mobile devices 102 with the features that the software update 110 will (or is likely to) impair or degrade.
- step 460 If at the step 460 it is determined that one or more of the feature(s) that will be (or are likely to be) impaired by the software update 110 are one or more of the features that are typically used by a given one of the mobile devices 102 such as the first mobile device 103 , then the process advances to a step 461 , at which the priority level of that respective mobile device is reduced by one (1). Upon completion of the step 461 , or if at the step 460 it is determined that the one or more feature(s) that will be (or are likely to be) impaired by the software update 110 are not among the features that are typically used by the given mobile device, then the process advances to a subsequent step 470 .
- steps 450 - 461 it should be further noted that these steps are intended to be performed in relation to each respective eligible one of the mobile devices 102 .
- the steps 450 - 461 can each be performed on multiple occasions with respect to each mobile device.
- the steps 451 and/or 461 can be performed in relation to certain of the mobile device(s) if determined to be applicable at the steps 450 and 460 when performed in relation to those device(s)
- the steps 451 and 461 need not be performed in relation to every one of the eligible mobile device(s) if those steps are not pertinent to those device(s).
- the priority levels associated with the different eligible ones of the mobile devices 102 may have changed. For example, as shown in FIG. 4 , after the performing of the steps 450 - 451 with respect to each of the mobile devices 102 , assuming that the first mobile device 103 regularly utilizes a feature that is to be improved by the software update 110 but the second and third mobile devices 113 , 123 do not, then the priority listing can have changed from that shown in the block 540 to that shown in a block 550 (where the priority level of the first mobile device in particular is shown to have increased by one (1)).
- the priority listing can have changed from that shown in the block 550 to that shown in a block 560 (where the priority levels of each of the first and third mobile devices are shown to have decreased by one (1)).
- the web server 104 reviews the priority levels (as adjusted by way of the steps 450 - 461 ) of the mobile devices 102 on the list of eligible mobile devices and removes from that list all of the mobile devices that have a priority level of zero (0).
- a given one of the mobile devices can attain a priority level of zero in regards to the implementation of the software update 110 if several conditions are met, namely, that (a) the software update 110 is optional rather than mandatory as determined at the step 440 , (b) the software update will not (or is not likely to) improve a regularly-used feature (or feature(s)) of the mobile device as determined at the step 450 , and (c) the software update will (or is likely to) impair a regularly-used feature (or feature(s)) of the mobile device as determined at the step 460 such that the priority level of the mobile device is further adjusted downward at the step 461 .
- the web server 104 at an additional step 480 further considers information (again as uploaded at the step 420 ) regarding the frequency of usage of those of the mobile devices 102 that are still listed as eligible, and adjusts the priority levels of those mobile devices in a manner that is reflective of the frequency usage information. It will be understood that it is desirable to adjust priority levels based upon frequency of usage because, by making such adjustments, it is possible to then (as discussed further below) implement the software update 110 across the mobile devices on the network in a manner that favors those of the mobile devices that are more heavily used and thereby will receive more benefit from the software updates.
- the manner of adjusting priority levels based upon frequency usage information can vary depending upon the embodiment. For example, in some embodiments, priority levels of the mobile devices 102 are simply increased by amounts corresponding to their respective frequency of usage levels, with those of the mobile devices having higher-frequency usage levels receiving greater increases in their priority levels than those of the mobile devices having lower-frequency usage levels. Also, in some embodiments, the frequencies of multiple different types of mobile device usage can be taken into account in determining priority level. In some such embodiments, the frequency of usage information regarding multiple different types of usage of a mobile device can all be taken into account (and weighed relative to one another) in determining the mobile device's overall frequency of usage. In other embodiments, each different type of frequency of usage information can separately be used as a basis for making an adjustment to the priority level of the mobile device.
- the priority level of a mobile device can be adjusted to reflect each of the mobile device's data communication levels, voice communication levels, and text messaging levels. Further for example, if the mobile device uses greater than 100 Megabytes per month in terms of data communications, and also uses at least 2000 minutes per month for voice communications, the priority level of the mobile device can be increased to three (3). However, if the mobile device uses only at least 2000 minutes per month for voice communications but conducts no data communications, then the priority level of the mobile device can be increased to two (2). Further, if the mobile device sends 1000 short messaging service (SMS) transmissions per month, the priority level of the mobile device can also be increased by one (1) for that reason.
- SMS short messaging service
- the priority level assignments of the various eligible units of the mobile devices 102 have been set. For example, due to the performing of the steps 470 and 480 , the priority listing shown in the block 560 can have been modified to that shown in a block 570 .
- the priority listing as a result of the step 470 no longer includes any listing of the third mobile device 123 since that mobile device had attained a priority level of zero (0) following the step 461 , and also the priority listing shows the second mobile device 113 to have an increase priority level of three (3) assuming that, at the step 480 , it was determine that the second mobile device had a higher frequency of usage level than the first mobile device 103 .
- the web server 104 Given the setting of the priority levels for each of the remaining eligible ones of the mobile devices 102 (namely, the first and second mobile devices 103 and 113 ), following the step 480 at a step 490 the web server 104 then sorts the remaining eligible mobile devices so as to be ordered in accordance with their respective priority levels, e.g., from the mobile device with the highest priority level to the mobile device with the lowest priority level. For example, assuming the previous block 570 as a starting point, the sorting process performed at the step 490 would result in a final priority list shown in a block 580 in which the second mobile device 113 (with its higher priority level of three (3)) is ranked higher than the first mobile device 103 (with its lower priority level of two (2)).
- the web server 104 begins scheduling the eligible mobile devices 102 for updating.
- the scheduling takes into account not only the priority levels assigned to the different ones of the mobile devices 102 , but also takes into account historical usage information (again as was received at the step 420 ) as to when each of the mobile devices is typically used, so as to avoid scheduling installation of the software update 110 on a given one of the mobile devices at time(s) when that mobile device is typically using the network (e.g., the respective communication link 105 ) for other purposes.
- usage information can trump the prioritization.
- the web server 104 can schedule the sending of the software update 110 to the first mobile device 103 at a time earlier than the sending of the software update to the second mobile device 113 if the web server 104 determines that the overall process of transmitting the software update should occur at midnight on a given day and yet usage information regarding the second mobile device 113 shows that it is typically unable to receive such a software update transmission at midnight.
- the web server 104 transmits the software update 110 to, and thereby causes execution (installation) of the software update on, the various eligible ones of the mobile devices 102 in accordance with the established schedule.
- the transmission of the software update 110 to the eligible ones of the mobile devices 102 occurs by way of one or more push channels formed via the communication links 105 , and achieved using the front end portion 310 of the web server 104 .
- the process ends at an end step 500 .
- the software update 110 can be transmitted to the mobile devices 102 at particular time(s) determined by the schedule established at the step 495 , and then installed at other later time(s) determined by the respective mobile device(s) independently (or also possibly partly in accordance with the schedule established at the step 495 ).
- Such a two-part installation procedure can be particularly advantageous to the extent that it allows the software update process to proceed even when certain circumstances arise that might otherwise impede the updating process.
- a given software update can be sent to a mobile device (e.g., the first mobile device 103 ) at a time when the mobile device is being operated in an “off-line” capacity, or in some other capacity not involving communications over the wireless network by which the software update is to be transmitted to the mobile devices (e.g., operated to display a movie being streamed over Wi-Fi).
- a mobile device e.g., the first mobile device 103
- the mobile devices e.g., operated to display a movie being streamed over Wi-Fi
- network transmission quality varies with location, e.g., a user typically charges a mobile device at a location with poor network service.
- a software update it is possible for a software update to be transmitted at a time other than while the mobile device is being charged (e.g., at a time when there is good transmission quality but the mobile device is not otherwise being utilized to conduct communications via the network), and then for the software update to be installed while the mobile device is being charged and otherwise not being used.
- the present invention can encompass numerous other embodiments besides those particularly discussed above.
- the arrangement of steps shown in the flow chart 400 of FIG. 4 can vary depending upon the embodiment (e.g., the step 480 in which priority level is adjusted to reflect frequency of usage information could precede the steps 450 - 470 ).
- one or more of the steps of the process represented by the flow chart 400 need not be present, and/or one or more other steps can be added to the process.
- the web server 104 can prioritize implementation of a given software update based upon the type of mobile device (e.g., cellular telephones can be prioritized higher than personal digital assistants).
- the particular comparisons or other operations performed by the web server 104 in performing prioritization can take a variety of other forms.
- priority levels are described above as being increased at the step 451 and decreased at the step 461 , respectively, in other embodiments the priority levels can be increased when it is determined that a feature will be impaired by a software update and decreased when it is determined that a feature will be enhanced by a software update.
- a priority level of zero is discussed above as being grounds for removal of a mobile device from a priority list, in other embodiments the satisfaction of other priority levels or thresholds serves as a basis for removal or inclusion.
- similar actions can be taken to communicate backup information or other types of information (including other types of information to be pushed) to mobile devices as well.
- the above-discussed procedures are advantageous in that the procedures in at least some embodiments can allow for software updates (and other information) to be provided to and implemented on mobile devices not only with minimal interruption (or no interruption) to mobile device users but also in an entirely or substantially automatic manner with no user inputs or permissions required. Nevertheless, in other embodiments the process can be configured to require and/or take into account particular user inputs and/or permissions.
- the web server 104 can send an inquiry to the given mobile device in an attempt to obtain permission from the mobile device user to go ahead with the software update notwithstanding the past history of usage.
Abstract
Description
- N/A
- N/A
- The present invention relates to communications involving mobile devices and, more particularly, to communications with mobile devices by which the mobile devices are provided with updates to software implemented on the mobile devices.
- Mobile devices such as cell phones, personal digital assistants (PDAs), and smart phones operate by way of a variety of software programs (understood herein to be synonymous with the term software applications) implemented thereon. Given the number and complexity of the software programs implemented on mobile devices, as well as the ongoing development of new and/or improved programs to be run on mobile devices, there is often a desire that one or more of the existing software program(s) implemented on a given mobile device be updated to accommodate modifications of a variety of types or to supplement the existing program(s) with additional programs.
- Commonly, software updates are provided to mobile devices by way of the wireless carriers operating the wireless networks with which those mobile devices are in communication (the wireless carriers can thus also be referred to as mobile telecommunication network operators). While software updates can be successfully communicated to mobile devices in this manner, this conventional manner of providing software updates is often inefficient. To begin with, various software updates can often take anywhere from one to ten minutes to complete. While the software updating is occurring, the mobile device is precluded from performing (or beginning to perform) a variety of other activities, and particularly precluded from engaging in operations involving communications via the same network over which software update(s) are being received.
- Further, to the extent that a given mobile device is already performing other activities when the wireless carrier attempts to commence a software update, the performing of the software update will need to be deferred and reattempted at a later time when the mobile device is not busy. Because it typically is desired that a given software update be commonly applied to multiple (e.g., many thousands of) mobile devices as part of a network-wide rollout of the update, in practice it can often take a long period of time (e.g., two days) for a wireless carrier to successfully apply the update in relation to all of the mobile devices for which that update is intended, as the carrier must often reattempt the application of the update on numerous occasions with respect to the many mobile devices.
- In view of the above, it would therefore be advantageous if improved systems and/or improved methods for providing (or facilitating the providing of) software update(s) to one or more mobile device(s) can be developed.
- In at least one embodiment, the present invention relates to a method of facilitating updating of software programming on a plurality of mobile devices. The method includes receiving at a server, from the mobile devices, first information regarding usage of at least one feature at the mobile devices. The method also includes recognizing at the server that a software update is available, and determining an ordering of at least some of the mobile devices, the ordering taking into account the first information. The method further includes sending the software update for receipt by each of the at least some mobile devices so that the software update can be implemented thereon, where the sending proceeds at least partly based upon the ordering.
- Additionally, in at least one embodiment, the present invention relates to a system for facilitating updating of software programming on a plurality of mobile devices. The system includes a first server having a processing device and at least one memory device, where the server operates to communicate with the mobile devices. The first server particularly is configured to operate so that, upon receiving a plurality of information portions respectively provided from the plurality of mobile devices indicative of operational behavior of the mobile devices, and further receiving software update information including a first software update, the first server develops a priority listing of at least some of the mobile devices, and subsequently sends the first software update to the at least some mobile devices in a manner based at least in part upon the priority listing.
- Further, in at least one embodiment, the present invention relates to a method of facilitating updating of software programming on a plurality of mobile devices. The method includes receiving at a server first information from the mobile devices, the first information regarding operational behavior of the mobile devices, and storing on the at least one memory device of the server second information pertaining to a first software update to be implemented on at least one of the mobile devices. The method additionally includes processing the first and second information to determine an ordering of at least some of the mobile devices of the plurality of mobile devices, and sending, based at least in part upon the ordering, the software update for receipt by each of the at least some mobile devices so that the software update can be implemented thereon.
-
FIG. 1 shows in schematic form an example communications system involving a plurality of mobile devices in communication with potential sources of software update information (among other types of information), by way of an intermediary server; -
FIG. 2 is a block diagram showing example components of one of the mobile devices ofFIG. 1 ; -
FIG. 3 is a block diagram showing example components of the intermediary server ofFIG. 1 ; and -
FIG. 4 is a flow chart showing various example steps of operation of some of the components of the system ofFIG. 1 , by which a software update can be implemented on the mobile devices, in at least some embodiments. - Referring to
FIG. 1 , a block diagram of anexample communications system 100 is shown in a simplified schematic form. As shown, thecommunications system 100 includes in this embodiment threemobile devices 102, particularly including first, second, and thirdmobile devices mobile devices 102 is in (or is capable of) communication via arespective communication link 105 with a server, which in the present embodiment is a web server 104 (e.g., a server that supports internet protocols or otherwise is capable of interaction with the internet or World Wide Web). Themobile devices 102 are respectively representative of communication devices operated by persons (or users) or possibly by other entities (e.g., other computers) desiring or requiring communication capabilities. In some embodiments, for example, themobile devices 102 can be any of cellular telephones, personal digital assistants (PDAs), smart phones, other handheld or portable electronic devices, headsets, MP3 players, battery-powered devices, wearable devices, radios, navigation devices, laptop or notebook computers, netbooks, pagers, PMPs (personal media players), DVRs (digital video recorders), gaming devices, cameras, netbooks, e-readers, e-books, tablet devices, navigation devices with video capable screens, multimedia docking stations, or other mobile devices. - The
communications system 100 in the present embodiment additionally includes threeadditional servers 106, particularly including first, second, and thirdadditional servers additional servers 106 is in communication with (or capable of communication with) theintermediary web server 104 via arespective communication link 108. Theadditional servers 106 in the present embodiment are intended to represent any of a variety of servers (or, indeed, other types of computer systems) that are capable of providing various types of information for receipt by themobile devices 102 and/or receiving various types of information provided by the mobile devices. - As represented by way of the
communication links additional servers 106 and one or more of themobile devices 102 occurs via theweb server 104 operating as an intermediary therebetween. As will be discussed in further detail below, theweb server 104 particularly provides various functionality that enhances the process of implementing software updates on one or more of themobile devices 102. Notwithstanding the presence of theweb server 104, as represented by anadditional communication link 111, it is still possible that one or more of themobile devices 102 will communicate directly with one or more of theadditional servers 106 directly, that is, without intermediation by theweb server 104. - In the present embodiment, more particularly, it can be assumed that at least the first additional server 109 (if not two or all three of the additional servers 106) is capable of supplying information regarding one or more software updates to be implemented upon one or more of the
mobile devices 102. The firstadditional server 109 can be considered, for example, a server associated with a manufacturer of one or more of themobile devices 102 from which software updates are provided on a continual (or nearly continual), periodic (e.g., annual or semiannual), or occasional basis. Alternatively, the firstadditional server 109 supplying information regarding software update(s) to be implemented upon one or more of themobile devices 102 can be a server associated with a wireless carrier, or a server associated with the author of a software program already resident on the mobile device that the software update(s) are intended to upgrade. - It should be added that the
additional servers 106 can further provide, in addition to software updates themselves, indications as to which of several available software updates already provided to the mobile devices 102 (or at least to the web server 104) should be executed or otherwise implemented at given times, indications as to which mobile devices (or types of mobile devices) the software updates pertain to, and/or indications that one or more software update(s) are now available for implementation. - Although embodiments of the present invention are particularly directed toward the providing of software updates to mobile devices, not all of the
additional servers 106 shown inFIG. 1 need to be sources of such software updates. Rather, in at least some embodiments, one or more of the additional servers 106 (e.g., the second and thirdadditional servers 119, 129) instead provide and/or receive other types of information. For example, in some embodiments, one or more of theadditional servers 106 are servers hosting content provider websites (CPWs), which can be understood to generally encompass any of a variety of types of websites including, for example, social networking websites (SNWs), business-to-business websites, business-to-consumer websites, news feeds, video broadcast or other broadcast sources, music and photograph websites, or other sources of media content. Further for example, such CPWs can include Facebook™, MySpace™, hi5™, LinkedIn™, and Twitter™, youtube.com, hulu.com, as well as sources of RSS or other news feeds, photograph services such as Picasa™ or Photobucket™, and music services such as LastFM™. - Further, although
FIG. 1 shows theweb server 104 to be potentially in communication with multiple (e.g., three) of theadditional servers 106 as well as three of themobile devices 102, this illustration is merely one example. In other embodiments, any arbitrary number of mobile devices, ranging from one mobile device to many hundreds or thousands (or more) of mobile devices, can be in communication with theweb server 104 and can be intended recipients of a given software update or software update(s). Also, in some of the embodiments, any arbitrary number of additional servers (or other computer systems or terminals or information sources) can provide software updates intended for implementation on any such arbitrary number of mobile devices, and/or can otherwise be in communication with such arbitrary number of mobile devices. Further it should be understood that, in some embodiments, it is possible that certain software update(s) will be provided from one of the additional servers 106 (such as the first additional server 109) while other software update(s) will be provided from others of the additional servers (such as theadditional servers 119, 129). - Additionally, in some embodiments the
web server 104 itself can be the source of one or more software update(s) such that the web server fulfills two roles, namely, operating as a source of software update(s) and also operating as an intermediary between one or more of theadditional servers 106 and one or more of themobile devices 102. For example, just as the firstadditional server 109 can be a computer system affiliated with a manufacturer of themobile devices 102 that is providing software updates, likewise theweb server 104 itself can be a computer system affiliated with such a manufacturer that serves this purpose. - Depending upon the embodiment, the
communication links communication links communication links mobile devices 102,web server 104, andadditional servers 106, including for example, transmission control protocol/internet protocol (TCP/IP), extensible messaging and presence protocol (XMPP), file transfer protocol (FTP), etc. In other embodiments, other types of communication links for facilitating the communication of signals between the plurality ofmobile devices 102 and theadditional servers 106 can be utilized as well. In particular, although in the present embodiment the communication links (network) 105 and 108 andserver 104 are each discussed as being web-based, in other embodiments, these links (network) and server can assume various non-web-based forms. - As already mentioned and as discussed in further detail below, the
web server 104 particularly operates to communicate software update(s) to one or more of themobile devices 102, where the software update(s) are provided to the web server from one or more of the additional servers 106 (e.g., the first additional server 109) and/or originate at the web server itself. Further, various other types of communications between themobile devices 102 andadditional servers 106 are passed through, processed and/or monitored by theweb server 104. Such communications can include, for example, communications involving the uploading and downloading of files (e.g., photos, music, videos, text entries, etc.), blog postings, and messaging (e.g., Short Message Service (SMS), Multimedia Messaging Service (MMS), and Instant Messaging (IM)). Also, in some embodiments, streaming video and/or audio information can be communicated from theadditional servers 106 to themobile devices 102. - Referring to
FIG. 2 , there is provided a block diagram illustrating exampleinternal components 200 of the firstmobile device 103 ofFIG. 1 , in accordance with the present embodiment. It should be understood that it is possibly the case, albeit not necessarily the case, that these internal components are also present in one or more of the other ones of themobile devices 102 ofFIG. 1 , and not just the firstmobile device 103. As shown inFIG. 2 , theinternal components 200 include one or morewireless transceivers 202, a processor 204 (e.g., a microprocessor, microcomputer, application-specific integrated circuit, etc.), amemory portion 206, one ormore output devices 208, and one ormore input devices 210. In at least some embodiments, a user interface is present that comprises one or more of theoutput devices 208, such as a display, and one or more of theinput devices 210, such as a keypad or touch sensor. - The
internal components 200 can further include acomponent interface 212 to provide a direct connection to auxiliary components or accessories for additional or enhanced functionality. Theinternal components 200 preferably also include apower supply 214, such as a battery, for providing power to the other internal components while enabling the mobile device to be portable. Further, theinternal components 200 additionally include one ormore sensors 228. All of theinternal components 200 can be coupled to one another, and in communication with one another, by way of one or more internal communication links 232 (e.g., an internal bus). - Each of the
wireless transceivers 202 utilizes a wireless technology for communication, which can include for example (but are not limited to) cellular-based communication technologies such as analog communications (using AMPS), digital communications (using CDMA, TDMA, GSM, iDEN, GPRS, EDGE, etc.), and next generation communications (using UMTS, WCDMA, LTE, IEEE 802.16, etc.) or variants thereof, or peer-to-peer or ad hoc communication technologies such as HomeRF (radio frequency), Bluetooth or IEEE 802.11(a, b, g or n), or other wireless communication technologies such as infrared technology. In the present embodiment, thewireless transceivers 202 include acellular transceiver 203 and a wireless local area network (WLAN)transceiver 205, although in other embodiments only one of these types of wireless transceivers (and possibly neither of these types of wireless transceivers, and/or additional types of wireless transceivers) is present. - By virtue of the use of the
wireless transceivers 202, the firstmobile device 103 is capable of communicating with the web server 104 (e.g., by way of its respective communication link 105) and thus capable of communicating indirectly with each of theadditional servers 106. Further by virtue of the use of thewireless transceivers 202, the firstmobile device 103 also is capable of communicating directly with the additional servers 106 (such as the first additional server 109) by way of direct communication link(s) such as thecommunication link 111. - Operation of the
wireless transceivers 202 in conjunction with others of theinternal components 200 of the firstmobile device 103 can take a variety of forms. For example, operation of thewireless transceivers 202 can proceed in a manner in which, upon reception of wireless signals, theinternal components 200 detect communication signals and thetransceivers 202 demodulate the communication signals to recover incoming information, such as voice and/or data, transmitted by the wireless signals. After receiving the incoming information from thetransceivers 202, theprocessor 204 formats the incoming information for the one ormore output devices 208. Likewise, for transmission of wireless signals, theprocessor 204 formats outgoing information, which can but need not be activated by theinput devices 210, and conveys the outgoing information to one or more of thewireless transceivers 202 for modulation so as to provide modulated communication signals to be transmitted. Thewireless transceivers 202 convey the modulated communication signals by way of wireless (as well as possibly wired) communication links such as the communication links 105, 111 to other devices such as theweb server 104 and one or more of the additional servers 106 (as well as possibly to other devices such as a cell tower, access point, or another server or any of a variety of remote devices). - Depending upon the embodiment, the input and
output devices internal components 200 can include a variety of visual, audio and/or mechanical outputs. For example, the output device(s) 208 can include one or morevisual output devices 216 such as a liquid crystal display and/or light emitting diode indicator, one or moreaudio output devices 218 such as a speaker, alarm, and/or buzzer, and/or one or more mechanical output devices 220 such as a vibrating mechanism. Thevisual output devices 216 among other things can also include a video screen. Likewise, by example, the input device(s) 210 can include one or morevisual input devices 222 such as an optical sensor (for example, a camera lens and photosensor), one or moreaudio input devices 224 such as a microphone, and/or one or moremechanical input devices 226 such as a flip sensor, keyboard, keypad, selection button, navigation cluster, touch pad, capacitive sensor, motion sensor, and/or switch. Operations that can actuate one or more of theinput devices 210 can include not only the physical pressing/actuation of buttons or other actuators, but can also include, for example, opening the mobile device, unlocking the device, moving the device to actuate a motion, moving the device to actuate a location positioning system, and operating the device. - As mentioned above, the
internal components 200 also can include one or more of various types ofsensors 228. Thesensors 228 can include, for example, proximity sensors (e.g., a light detecting sensor, an ultrasound transceiver or an infrared transceiver), touch sensors, altitude sensors, and one or more location circuits/components that can include, for example, a Global Positioning System (GPS) receiver, a triangulation receiver, an accelerometer, a tilt sensor, a gyroscope, or any other information collecting device that can identify a current location or user-device interface of themobile device 102. While thesensors 228 for the purposes ofFIG. 2 are considered to be distinct from theinput devices 210, in other embodiments it is possible that one or more of the input devices can also be considered to constitute one or more of the sensors (and vice-versa). Additionally, while in the present embodiment theinput devices 210 are shown to be distinct from theoutput devices 208, it should be recognized that in some embodiments one or more devices serve both as input device(s) and output device(s). For example, in embodiments where a touchscreen is employed, the touchscreen can be considered to constitute both a visual output device and a mechanical input device. - The
memory portion 206 of theinternal components 200 can encompass one or more memory devices of any of a variety of forms (e.g., read-only memory, random access memory, static random access memory, dynamic random access memory, etc.), and can be used by theprocessor 204 to store and retrieve data. In some embodiments, thememory portion 206 can be integrated with theprocessor 204 in a single device (e.g., a processing device including memory or processor-in-memory (PIM)), albeit such a single device will still typically have distinct portions/sections that perform the different processing and memory functions and that can be considered separate devices. The data that is stored by thememory portion 206 can include, but need not be limited to, operating systems, programs (applications), and informational data. Each operating system includes executable code that controls basic functions of the mobile device, such as interaction among the various components included among theinternal components 200, communication with external devices via thewireless transceivers 202 and/or thecomponent interface 212, and storage and retrieval of programs and data, to and from thememory portion 206. - As for programs, each program includes executable code that utilizes an operating system to provide more specific functionality, such as file system service and handling of protected and unprotected data stored in the
memory portion 206. Although many such programs govern standard or required functionality of the mobile device, in many cases the programs include applications (or simply “apps”) governing optional or specialized functionality, which can be provided in some cases by third party vendors unrelated to the mobile device manufacturer. Although it is possible in some embodiments for the operating system (or portions thereof) of a mobile device to be updated by way of one or more software updates provided to the mobile device, typically it is the one or more programs stored in the memory of the mobile device that are updated by way of software updates provided to the mobile device. In some cases, software updates provided to a mobile device result in the addition of entirely new programs being added to (stored on) the mobile device. - Finally, with respect to informational data, this is non-executable code or information that can be referenced and/or manipulated by an operating system or program for performing functions of the mobile device. Among other things, informational data can include any of a variety of types of information that is uploaded to, downloaded from, or otherwise accessed at the
web server 104 or one or more of theadditional servers 106 with respect to which the mobile device is in communication. Although not typically the case, in some circumstances it is possible that informational data is received or modified when a software update is implemented on the mobile device. - Referring next to
FIG. 3 , example components of theweb server 104 ofFIG. 1 are shown in more detail. As shown, theweb server 104 includes amemory portion 302, aprocessor portion 304 in communication with that memory portion, and first and second input/output (I/O) interfaces 306 and 308, respectively, for interfacing thecommunication links processor portion 304. In at least some embodiments including the present embodiment, theweb server 104 can also be understood to serve as an aggregation server insofar as the web server keeps track of and aggregates (and stores in the memory portion 302) a variety of information that relates to communications and other activity of themobile devices 102. Further as discussed below, theweb server 104 can also store in thememory portion 302 one or more software updates that are to be provided to one or more of themobile devices 102. In the present embodiment, one or more of the software update(s) particularly are received by theweb server 104 from the firstadditional server 109, albeit in other embodiments software update(s) can be received from the others of the additional servers or other sources (or originate at the web server itself). - As additionally shown in
FIG. 3 , theprocessor portion 304 further includes afront end portion 310 and aback end portion 312. Theback end portion 312 communicates with theadditional servers 106 such as the first additional server 109 (shown in dashed lines) via the respective communication links 108 (one of which is shown) and the second I/O interface 308. In some embodiments, particularly where theadditional servers 106 are SNWs, theback end portion 312 can be referred to as a “Social Network Processor”. Additionally, thefront end portion 310 communicates with themobile devices 102 such as the first mobile device 103 (also shown in dashed lines) via the respective communication links 105 (again one of which is shown) and the first I/O interface 306. In view of the above discussion, it should be understood that thefront end portion 310 can be in communication with any arbitrary number of mobile devices and that theback end portion 312 can be in communication with any arbitrary number of additional servers, depending upon the embodiment. - In at least some embodiments the
back end portion 312 supports pull communications with theadditional servers 106 such as the firstadditional server 109. The pull communications can for example be implemented using Representation State Transfer (REST) architecture, of the type typical to the web. Assuming this to be the case, theback end portion 312 is configured to generate requests for information to be provided to the back end portion from the additional servers 106 (such as the first additional server 109) at times/circumstances determined by theweb server 104, in response to which the additional servers search for and provide back to the web server requested data. Also, in at least some embodiments thefront end portion 310 supports push communications in conjunction with themobile devices 102 such as the firstmobile device 103. In this regard, it should be understood that an arbitrary number of push channels can be established with respect to the variousmobile devices 102. In the present embodiment, it is also envisioned that in at least some circumstances push channel(s) will be established and utilized to communicate software updates to one or more of themobile devices 102. By comparison, although it is possible that pull channels can be established between theweb server 104 and theadditional servers 106 by which the web server obtains relevant software updates from the additional servers, in the present embodiment such pull channels are not used for this purpose, but rather the timing of the providing of software updates to the web server from the additional servers is determined by the additional servers themselves. - The
server 104 discussed with referenceFIGS. 1 and 3 can take various forms depending upon the implementation or embodiment. In at least some circumstances, theserver 104 discussed with reference toFIGS. 1 and 3 can be considered a cloud. Further, althoughFIGS. 1 and 3 show thesingle server 104, it should be understood that in other embodiments there can be more than one intermediating device constituting a cloud (or implemented in place of the server 104) including, for example, a collection of multiple servers that are in communication with one another and that, in at least some embodiments, support Internet technologies for communication between computer systems and/or other entities. - Turning now to
FIG. 4 , aflow chart 400 shows an example operational process of at least some portions of thesystem 100 ofFIG. 1 , and particularly illustrates an example operational process by which a software update or upgrade is provided to multiple mobile devices such as themobile devices 102 by theweb server 104 in a manner that takes into account historic behavior of the mobile devices so as to result in a more timely and efficient implementation of the software update than might otherwise occur. - As shown, the process represented by the
flowchart 400 begins at astart step 401 followed by astep 410, at which users (e.g., persons) make use of themobile devices 102 in any of a variety of matters. For example, such usage can involve online activity of themobile devices 102 involving the receipt or transmission of wireless signals, such as engaging in telephone (e.g., voice or video) calls, browsing activity, engaging in data sessions, communicating data such as email or text messages, online gaming, streaming (e.g., video or audio) media consumption, navigating, etc. Alternatively, or in addition, the usage of themobile devices 102 can include offline activities that do not require communication by the respective mobile device with any external entities, such as offline gaming, local media consumption (for example, listening to a video or audio recording that is already stored on the mobile device), managing contacts, taking photographs using an on-board camera, reading content stored on the mobile device, or writing content onto the mobile device without transmitting that content outside of the mobile device. With respect to reading and writing content, such activity can involve the offline review or creation of word processing documents, Powerpoint slide shows, email message, or other documents, for example. - As represented by
additional step 420, after the users make use of the mobile devices in thestep 410, themobile devices 102 communicate with theweb server 104 and provides to the web server generic (that is, non-specific) details of the usage of the mobile devices. AlthoughFIG. 4 shows thestep 420 as occurring subsequent to thestep 410, it will be understood that the actual uploading of information from themobile devices 102 to theweb server 104 can occur at a variety of times and in a variety of manners including, for example, ongoing or continual uploading of information as the mobile devices are used, periodic uploading of information at different times as the mobile devices are used, or either after a given amount of usage has occurred or after all usage has occurred. In some embodiments, information regarding the usage of one mobile device (e.g., the first mobile device 103) will be uploaded before usage of others of the mobile devices (e.g., themobile devices 113, 123) has even occurred (and thus before uploading of any information regarding that usage). The uploaded information can be stored in thememory portion 302 of theweb server 104. - The information that is uploaded to the
web server 104 at thestep 420 in the present embodiment is kept non-specific for various reasons, for example, a desire to avoid communicating to the web server certain types of information that may be considered by some individuals to be personal or private, a desire to avoid communicating to the web server certain information that by convention or practice is typically retained at a mobile device, and/or a desire to avoid communicating excessive amounts of information to the web server. Nevertheless, a variety of types of information can be provided at thestep 420 depending upon the embodiment or circumstance. Also, the types of information that are withheld by themobile devices 102 and not provided to theweb server 104 can also vary depending upon the embodiment or circumstance. - For example, in one embodiment, the information provided to the
web server 104 in thestep 420 can include information as to the amount of time (e.g., one hour per day) that a user on average utilizes the firstmobile device 103 to browse websites and/or information regarding the typical or average time of the day when browsing occurs. However, the firstmobile device 103 does not provide to theweb server 104 at thestep 420 information regarding the particular websites that were the subject of the browsing by the user. Also, in another embodiment, themobile device 103 can provide to theweb server 104 information regarding the time or amount of time that the user of the mobile device streams media (e.g., because a user prefers to watch a particular television program every week at the same time). However, in such case, themobile device 103 does not provide to theweb server 104 details of the particular content reviewed by the user. - Further for example, in another embodiment the first
mobile device 103 can send information to theweb server 104 indicating when a user of the mobile device tends to make phone calls and approximately on average how long the phone calls last. In such case, however, themobile device 103 does not share with theweb server 104 any information indicative of the people with whom the user was connected by way of the mobile device 103 (e.g., no phone number information). In yet another example, the firstmobile device 103 can provide an indication to theweb server 104 that the mobile device is generally idle between 1 pm and 6 pm (which might be indicative of the fact that the user works third shift). Also, for example, themobile device 103 can provide to theweb server 104 information that a media player of the mobile device is active from midnight to 1 am. Again, in such circumstance, amobile device 103 would refrain from indicating more specific information about the use of the media player, such as information regarding the content that was played using the media player. - Based upon the various information provided from the
mobile devices 102 to theweb server 104, the web server is able to store within itsmemory portion 302 the information and develop a history of usage patterns of themobile devices 103, for example, in terms of the features or functions that the users of the mobile devices are activating, how often such features are active, and/or the times of day that those features tend to be active. Thus, theweb server 104 is able to take this information into account in terms of how it operates to cause installation or implementation of software update(s) 110 in relation to themobile devices 102. Although the information can be taken into account in a variety of ways depending upon the embodiment, steps 430-499 illustrate in further detail one example manner in which theweb server 104 takes such information into account in determining how to proceed with installing or implementing software update(s) onto themobile devices 102. - Referring particularly to a
step 430 in this regard, in the present example theweb server 104 begins the process of determining how to proceed with installing/implementing (and ultimately installing/implementing) a software update when the web server receives software update information including such a software update, e.g., when the web server receives thesoftware update 110 ofFIG. 1 and stores that information in thememory portion 302. In the present embodiment thesoftware update 110 is provided from the firstadditional server 109, which is associated with the manufacturer of the mobile devices 102 (although, as already discussed, the software update can also come from any of a variety of other sources as well, such as a wireless carrier or author(s) of applications to which the software update pertains). - In determining how to proceed with installing/implementing the
software update 110, theweb server 104 among other things first can take into account information pertaining to the software update itself, which can be provided along with the actual software update programming as supplemental software update information (thesoftware update 110 can be considered to include both the actual software update programming and such supplemental software update information). For example, typically, thesoftware update 110 is pertinent to particular mobile devices or types of mobile devices rather than all devices that might potentially be in communication with theweb server 104. Thus, thesoftware update 110 can include information indicating the mobile device or types of mobile devices that should receive the software update (albeit for purposes of the present example, it will be assumed that all of themobile devices 102 in communication with theweb server 104 would be suited for the software update 110). Also, thesoftware update 110 can include information regarding which problems are to be fixed by installation of the software update, information regarding requirements as to whether one or more previous software updates need to have been installed prior to the installation of the present update, or information regarding what type of network (or network characteristics) should be present in order for the software update to be properly implemented. - As shown in the
step 430, in the present embodiment thesoftware update 110 particularly includes information regarding what operational features, use cases, or performance characteristics of the mobile devices 102 (and/or software programs resident thereon) will be (or are likely to be) improved by implementing the software update on themobile devices 102. Correspondingly, thesoftware update 110 also includes information regarding what mobile device operational features, use cases, or performance characteristics will be (or are likely to be) impaired due to implementation of the software update on themobile devices 102. Further, thesoftware update 110 additionally includes information (e.g., a flag) indicative of whether installation of the software update is mandatory or optional. As discussed further below, in the present embodiment, this information regarding operational improvement and impairment resulting from implementation of thesoftware update 110, and the mandatory/optional nature of the software update, is particularly utilized by theweb server 104 in determining how to install/implement the software update in relation to themobile devices 102. - Next, at a
step 440, theweb server 104 utilizes the information regarding thesoftware update 110 received at thestep 430 to make a list of all of themobile devices 102 to which thenew software update 110 pertains (this can also be thought of as a list of users that have devices that are candidates to receive the software update). Assuming more than one mobile device is eligible (e.g., all three of the mobile devices 102), then the list in particular is a priority list, where theweb server 104 assigns priority levels for each of the eligiblemobile devices 102. The manner of prioritization can vary depending upon the embodiment or circumstance. - In the present embodiment, for example, the
web server 104 assigns a priority level of two (2) to each respective one of themobile devices 102 for which implementation of thesoftware update 110 is mandatory, and assigns a priority level of one (1) to each respective one of the mobile devices for which implementation of the software update is optional. For example, the priority list can take the form shown as ablock 540 inFIG. 4 , which shows each of the firstmobile device 103 and the secondmobile device 113 as having a priority level of two (2) indicating that the software update is mandatory for those mobile devices, while the thirdmobile device 123 has a priority level of one (1) indicating that the software update is optional for that mobile device. - Next, at a
step 450, theweb server 104 further determines, for each of the eligiblemobile devices 102, whether that respective mobile device (or the user of that mobile device) regularly or typically uses a feature that will be (or is likely to be) improved by thesoftware update 110. This can be determined based upon the details of usage that were uploaded at thestep 420. That is, theweb server 104 can check the history recorded in thememory portion 302 reflective of the details of usage of each of themobile devices 102 and compare the typically used features to the features that thesoftware update 110 will (or is likely to) improve as indicated of thestep 430. - As further shown, if a given one of the
mobile devices 102 such as the firstmobile device 103 typically uses a feature that will be improved by thesoftware update 110, then at astep 451 the priority level of that mobile device is increased by one (1) prior to the process advancing to astep 460. Thus, if the firstmobile device 103 was originally assigned a priority level of two (2), then upon execution of thestep 451, the priority level for that mobile device is increased to three (3). Alternatively, if the feature that is improved by thesoftware update 110 is not among the features regularly used at the firstmobile device 103, then theweb server 104 does not adjust the priority level of that mobile device and rather the process advances directly from thestep 450 to thestep 460. - Further, at the
step 460, for each of the eligiblemobile devices 102, theweb server 104 also determines whether that respective mobile device regularly uses a feature that will be (or is likely to be) impaired or degraded by thesoftware 110 update. To make this determination, theweb server 104 again consults the information stored in thememory portion 302 that was obtained at thestep 420, and compares the features typically used by each of themobile devices 102 with the features that thesoftware update 110 will (or is likely to) impair or degrade. If at thestep 460 it is determined that one or more of the feature(s) that will be (or are likely to be) impaired by thesoftware update 110 are one or more of the features that are typically used by a given one of themobile devices 102 such as the firstmobile device 103, then the process advances to astep 461, at which the priority level of that respective mobile device is reduced by one (1). Upon completion of thestep 461, or if at thestep 460 it is determined that the one or more feature(s) that will be (or are likely to be) impaired by thesoftware update 110 are not among the features that are typically used by the given mobile device, then the process advances to asubsequent step 470. - In regards to the steps 450-461, it should be further noted that these steps are intended to be performed in relation to each respective eligible one of the
mobile devices 102. Thus, notwithstanding the particular manner of illustration of these steps inFIG. 4 , in practice where more than one eligible mobile device is present, the steps 450-461 can each be performed on multiple occasions with respect to each mobile device. Also, while thesteps 451 and/or 461 can be performed in relation to certain of the mobile device(s) if determined to be applicable at thesteps steps - As a result of the performing of the steps 450-461, the priority levels associated with the different eligible ones of the
mobile devices 102 may have changed. For example, as shown inFIG. 4 , after the performing of the steps 450-451 with respect to each of themobile devices 102, assuming that the firstmobile device 103 regularly utilizes a feature that is to be improved by thesoftware update 110 but the second and thirdmobile devices block 540 to that shown in a block 550 (where the priority level of the first mobile device in particular is shown to have increased by one (1)). Further for example, after the performing of the steps 460-461 with respect to each of themobile devices 102, assuming that each of the first and thirdmobile devices software update 110 but the secondmobile device 113 does not, then the priority listing can have changed from that shown in theblock 550 to that shown in a block 560 (where the priority levels of each of the first and third mobile devices are shown to have decreased by one (1)). - Referring next to the
subsequent step 470, theweb server 104 reviews the priority levels (as adjusted by way of the steps 450-461) of themobile devices 102 on the list of eligible mobile devices and removes from that list all of the mobile devices that have a priority level of zero (0). From the above discussion, it will be apparent that a given one of the mobile devices can attain a priority level of zero in regards to the implementation of thesoftware update 110 if several conditions are met, namely, that (a) thesoftware update 110 is optional rather than mandatory as determined at thestep 440, (b) the software update will not (or is not likely to) improve a regularly-used feature (or feature(s)) of the mobile device as determined at thestep 450, and (c) the software update will (or is likely to) impair a regularly-used feature (or feature(s)) of the mobile device as determined at thestep 460 such that the priority level of the mobile device is further adjusted downward at thestep 461. It should be evident that, if all of these three conditions are met with respect to the given one of themobile devices 102, then it makes sense to avoid installing thesoftware update 110 onto that mobile device, since fulfillment of all of these conditions indicates that the software update is not necessary and potentially does more harm than good in terms of improving those aspects of the performance of that mobile device that are of the greatest interest to the user of that mobile device. - Upon completion of the
step 470, theweb server 104 at anadditional step 480 further considers information (again as uploaded at the step 420) regarding the frequency of usage of those of themobile devices 102 that are still listed as eligible, and adjusts the priority levels of those mobile devices in a manner that is reflective of the frequency usage information. It will be understood that it is desirable to adjust priority levels based upon frequency of usage because, by making such adjustments, it is possible to then (as discussed further below) implement thesoftware update 110 across the mobile devices on the network in a manner that favors those of the mobile devices that are more heavily used and thereby will receive more benefit from the software updates. - The manner of adjusting priority levels based upon frequency usage information can vary depending upon the embodiment. For example, in some embodiments, priority levels of the
mobile devices 102 are simply increased by amounts corresponding to their respective frequency of usage levels, with those of the mobile devices having higher-frequency usage levels receiving greater increases in their priority levels than those of the mobile devices having lower-frequency usage levels. Also, in some embodiments, the frequencies of multiple different types of mobile device usage can be taken into account in determining priority level. In some such embodiments, the frequency of usage information regarding multiple different types of usage of a mobile device can all be taken into account (and weighed relative to one another) in determining the mobile device's overall frequency of usage. In other embodiments, each different type of frequency of usage information can separately be used as a basis for making an adjustment to the priority level of the mobile device. - For example, the priority level of a mobile device can be adjusted to reflect each of the mobile device's data communication levels, voice communication levels, and text messaging levels. Further for example, if the mobile device uses greater than 100 Megabytes per month in terms of data communications, and also uses at least 2000 minutes per month for voice communications, the priority level of the mobile device can be increased to three (3). However, if the mobile device uses only at least 2000 minutes per month for voice communications but conducts no data communications, then the priority level of the mobile device can be increased to two (2). Further, if the mobile device sends 1000 short messaging service (SMS) transmissions per month, the priority level of the mobile device can also be increased by one (1) for that reason. Again notwithstanding these examples, the particular changes in priority level that are provided to reflect frequency of usage can vary depending upon the embodiment or circumstance.
- Regardless of the particular frequency of usage information taken into account, and the manner in which frequency of usage information is taken into account, upon completion of the
step 480 the priority level assignments of the various eligible units of themobile devices 102 have been set. For example, due to the performing of thesteps block 560 can have been modified to that shown in ablock 570. As shown in theblock 570 more particularly, the priority listing as a result of thestep 470 no longer includes any listing of the thirdmobile device 123 since that mobile device had attained a priority level of zero (0) following thestep 461, and also the priority listing shows the secondmobile device 113 to have an increase priority level of three (3) assuming that, at thestep 480, it was determine that the second mobile device had a higher frequency of usage level than the firstmobile device 103. - Given the setting of the priority levels for each of the remaining eligible ones of the mobile devices 102 (namely, the first and second
mobile devices 103 and 113), following thestep 480 at astep 490 theweb server 104 then sorts the remaining eligible mobile devices so as to be ordered in accordance with their respective priority levels, e.g., from the mobile device with the highest priority level to the mobile device with the lowest priority level. For example, assuming theprevious block 570 as a starting point, the sorting process performed at thestep 490 would result in a final priority list shown in a block 580 in which the second mobile device 113 (with its higher priority level of three (3)) is ranked higher than the first mobile device 103 (with its lower priority level of two (2)). - Subsequently, at a
step 495 theweb server 104 begins scheduling the eligiblemobile devices 102 for updating. In the present embodiment, the scheduling takes into account not only the priority levels assigned to the different ones of themobile devices 102, but also takes into account historical usage information (again as was received at the step 420) as to when each of the mobile devices is typically used, so as to avoid scheduling installation of thesoftware update 110 on a given one of the mobile devices at time(s) when that mobile device is typically using the network (e.g., the respective communication link 105) for other purposes. In at least some cases, notwithstanding a particular prioritization of the mobile devices as arrived at by way of the steps prior to thestep 490, usage information can trump the prioritization. - For example, even if the second
mobile device 113 has a higher prioritization than the firstmobile device 103 as shown in the block 580, theweb server 104 can schedule the sending of thesoftware update 110 to the firstmobile device 103 at a time earlier than the sending of the software update to the secondmobile device 113 if theweb server 104 determines that the overall process of transmitting the software update should occur at midnight on a given day and yet usage information regarding the secondmobile device 113 shows that it is typically unable to receive such a software update transmission at midnight. - After the scheduling operation at the
step 495 has been performed, then at astep 499 theweb server 104 transmits thesoftware update 110 to, and thereby causes execution (installation) of the software update on, the various eligible ones of themobile devices 102 in accordance with the established schedule. In the present embodiment (although not necessarily the case in all embodiments), the transmission of thesoftware update 110 to the eligible ones of themobile devices 102 occurs by way of one or more push channels formed via the communication links 105, and achieved using thefront end portion 310 of theweb server 104. Subsequent to the sending (and consequent implementation) of thesoftware update 110 at thestep 499, the process ends at anend step 500. - Further with respect to the sending of the
software update 110 at thestep 499, it can further be noted that, although in some embodiments it is possible thatsoftware update 110 will be installed on each of themobile devices 102 immediately upon the transmission of the software update to the respective mobile devices, this need not always be the case. Rather, in other embodiments, thesoftware update 110 can be transmitted to themobile devices 102 at particular time(s) determined by the schedule established at thestep 495, and then installed at other later time(s) determined by the respective mobile device(s) independently (or also possibly partly in accordance with the schedule established at the step 495). Such a two-part installation procedure can be particularly advantageous to the extent that it allows the software update process to proceed even when certain circumstances arise that might otherwise impede the updating process. - For example in this regard, a given software update can be sent to a mobile device (e.g., the first mobile device 103) at a time when the mobile device is being operated in an “off-line” capacity, or in some other capacity not involving communications over the wireless network by which the software update is to be transmitted to the mobile devices (e.g., operated to display a movie being streamed over Wi-Fi). In such circumstance, it would be appropriate for the transmission of the software update to occur, given that the transmission via the network would not interrupt any other operations. Additionally, in such circumstance, it would also be appropriate for installation to be delayed until the off-line (or other) operation of the mobile device ceased or was reduced sufficiently to allow the installation of the software update to proceed uninhibited (e.g., unimpeded by other demands upon the
processor 204 of the mobile device). Subsequently, at the time of installation, network communication is no longer needed to conduct the installation of the software update but rather the process can be completed independently by the mobile device itself without further involvement by theweb server 104. - Additionally for example, it is sometimes the case that network transmission quality varies with location, e.g., a user typically charges a mobile device at a location with poor network service. Given a two-part installation procedure as discussed above, it is possible for a software update to be transmitted at a time other than while the mobile device is being charged (e.g., at a time when there is good transmission quality but the mobile device is not otherwise being utilized to conduct communications via the network), and then for the software update to be installed while the mobile device is being charged and otherwise not being used.
- Notwithstanding the above description, it is envisioned that the present invention can encompass numerous other embodiments besides those particularly discussed above. For example, the arrangement of steps shown in the
flow chart 400 ofFIG. 4 can vary depending upon the embodiment (e.g., thestep 480 in which priority level is adjusted to reflect frequency of usage information could precede the steps 450-470). Also for example, in some alternate embodiments, one or more of the steps of the process represented by theflow chart 400 need not be present, and/or one or more other steps can be added to the process. For example, in additional alternate embodiments, theweb server 104 can prioritize implementation of a given software update based upon the type of mobile device (e.g., cellular telephones can be prioritized higher than personal digital assistants). - Also, notwithstanding the description provided above, the particular comparisons or other operations performed by the
web server 104 in performing prioritization can take a variety of other forms. For example, while priority levels are described above as being increased at thestep 451 and decreased at thestep 461, respectively, in other embodiments the priority levels can be increased when it is determined that a feature will be impaired by a software update and decreased when it is determined that a feature will be enhanced by a software update. Also for example, while a priority level of zero is discussed above as being grounds for removal of a mobile device from a priority list, in other embodiments the satisfaction of other priority levels or thresholds serves as a basis for removal or inclusion. Further, even though the above description particularly concerns the transmission of software updates, similar actions can be taken to communicate backup information or other types of information (including other types of information to be pushed) to mobile devices as well. - It should be noted that the above-discussed procedures are advantageous in that the procedures in at least some embodiments can allow for software updates (and other information) to be provided to and implemented on mobile devices not only with minimal interruption (or no interruption) to mobile device users but also in an entirely or substantially automatic manner with no user inputs or permissions required. Nevertheless, in other embodiments the process can be configured to require and/or take into account particular user inputs and/or permissions. For example, in some such alternate embodiments, if the
web server 104 determines that a particular time would be particularly beneficial for implementing a software update but that particular time appears to coincide with a time that a given mobile device is typically used in a manner that would preclude receipt of the software update, theweb server 104 can send an inquiry to the given mobile device in an attempt to obtain permission from the mobile device user to go ahead with the software update notwithstanding the past history of usage. - Additionally, while the above-discussed embodiments particularly involve the implementation of software updates on mobile devices, in other embodiments the same or similar techniques can be utilized to implement software updates on other electronic devices instead of, or in addition to, mobile devices.
- Thus, it is specifically intended that the present invention not be limited to the embodiments and illustrations contained herein, but include modified forms of those embodiments including portions of the embodiments and combinations of elements of different embodiments as come within the scope of the following claims.
Claims (20)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US12/947,413 US20120124570A1 (en) | 2010-11-16 | 2010-11-16 | Method and system for facilitating the providing of software updates to mobile devices |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US12/947,413 US20120124570A1 (en) | 2010-11-16 | 2010-11-16 | Method and system for facilitating the providing of software updates to mobile devices |
Publications (1)
Publication Number | Publication Date |
---|---|
US20120124570A1 true US20120124570A1 (en) | 2012-05-17 |
Family
ID=46049035
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US12/947,413 Abandoned US20120124570A1 (en) | 2010-11-16 | 2010-11-16 | Method and system for facilitating the providing of software updates to mobile devices |
Country Status (1)
Country | Link |
---|---|
US (1) | US20120124570A1 (en) |
Cited By (19)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20080148268A1 (en) * | 2006-12-15 | 2008-06-19 | Canon Kabushiki Kaisha | Data processing apparatus, data processing system, method therefor, and program |
US20120309375A1 (en) * | 2011-06-03 | 2012-12-06 | At&T Mobility Ii Llc | Automatic Control Of Rate Of Notifications For UMTS And Other Simultaneous Voice/Data Networks |
US20140032732A1 (en) * | 2012-07-27 | 2014-01-30 | Ingersoll-Rand Company | System for account setup and/or device installation |
US20140058999A1 (en) * | 2012-08-27 | 2014-02-27 | Dongwook SEO | Mobile terminal and control method thereof |
US20140068588A1 (en) * | 2012-09-06 | 2014-03-06 | Box, Inc. | Force upgrade of a mobile application via a server side configuration file |
US20150012921A1 (en) * | 2013-07-08 | 2015-01-08 | Jvl Ventures, Llc | Systems, methods, and computer program products for processing sets of instructions for mobile devices |
US20150128122A1 (en) * | 2013-07-05 | 2015-05-07 | Tencent Technology (Shenzhen) Company Limited | Systems and Methods for Updating Software |
US9128796B2 (en) * | 2012-08-31 | 2015-09-08 | Cellco Partnership | Enabling a wireless device to act as a relay for upgrading an accessory coupled to the wireless device |
US20150371656A1 (en) * | 2014-06-19 | 2015-12-24 | Yang Gao | Acoustic Echo Preprocessing for Speech Enhancement |
US9400643B2 (en) * | 2014-03-03 | 2016-07-26 | Google Inc. | Methods and systems for updating components on a computing device |
US20170265019A1 (en) * | 2011-04-29 | 2017-09-14 | Google Technology Holdings LLC | Method and System for Vicarious Downloading or Uploading of Information |
US20180041588A1 (en) * | 2014-09-26 | 2018-02-08 | Oracle International Corporation | Efficient means to test server generated applications on mobile device |
US10051462B2 (en) * | 2016-12-16 | 2018-08-14 | T-Mobile Usa, Inc. | Hybrid transport for installed service updates |
US10235157B2 (en) | 2016-12-29 | 2019-03-19 | Arris Enterprises Llc | Method and system for analytics-based updating of networked devices |
US10290133B2 (en) | 2014-09-26 | 2019-05-14 | Oracle International Corporation | High fidelity interactive screenshots for mobile applications |
US10437581B1 (en) * | 2018-04-20 | 2019-10-08 | At&T Mobility Ii Llc | Internet of things platform for handling firmware transfer on machine-to-machine devices |
US20220137948A1 (en) * | 2020-10-30 | 2022-05-05 | Ayla Networks, Inc. | Edge-based intelligence for over the air update |
US20230315422A1 (en) * | 2022-03-30 | 2023-10-05 | Confluent, Inc. | Automated upgrade in distributed computing environments |
US11983522B2 (en) * | 2020-10-30 | 2024-05-14 | Ayla Networks, Inc. | Edge-based intelligence for over the air update |
Citations (26)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5896566A (en) * | 1995-07-28 | 1999-04-20 | Motorola, Inc. | Method for indicating availability of updated software to portable wireless communication units |
US6401239B1 (en) * | 1999-03-22 | 2002-06-04 | B.I.S. Advanced Software Systems Ltd. | System and method for quick downloading of electronic files |
US20020140966A1 (en) * | 2001-04-02 | 2002-10-03 | Meade William K. | Systems and methods for managing software updates for printing systems |
US20030005101A1 (en) * | 2001-07-02 | 2003-01-02 | Falzon Edward George | Network administration management utility |
US20030182626A1 (en) * | 2002-03-22 | 2003-09-25 | Eran Davidov | On-demand creation of MIDlets |
US20030204841A1 (en) * | 2002-04-30 | 2003-10-30 | Toshiba Tec Kabushiki Kaisha | Program management apparatus, program management system, and program management method |
US20040123283A1 (en) * | 2002-12-20 | 2004-06-24 | Brown Mark S. | Automated updates of software and systems |
US20050125489A1 (en) * | 2003-11-26 | 2005-06-09 | Hanes David H. | System and method for determining messages on a server as relating to at least one functional component of a client system |
US20070234337A1 (en) * | 2006-03-31 | 2007-10-04 | Prowess Consulting, Llc | System and method for sanitizing a computer program |
US7376945B1 (en) * | 2003-12-02 | 2008-05-20 | Cisco Technology, Inc. | Software change modeling for network devices |
US20080201705A1 (en) * | 2007-02-15 | 2008-08-21 | Sun Microsystems, Inc. | Apparatus and method for generating a software dependency map |
US20090077547A1 (en) * | 2007-09-19 | 2009-03-19 | Kakinoki Masaya | Disk array apparatus |
US20090228577A1 (en) * | 2006-09-06 | 2009-09-10 | Network Box Corporation Limited | Push update system |
US20090240791A1 (en) * | 2008-03-19 | 2009-09-24 | Fujitsu Limited | Update management method and update management unit |
US20090249321A1 (en) * | 2008-03-25 | 2009-10-01 | Mandyam Giridhar D | Apparatus and methods for widget update scheduling |
US20090271778A1 (en) * | 2008-03-25 | 2009-10-29 | Mandyam Giridhar D | Apparatus and methods for transport optimization for widget content delivery |
US20090320013A1 (en) * | 2008-06-18 | 2009-12-24 | Canon Kabushiki Kaisha | Image forming apparatus |
US20100005502A1 (en) * | 2008-07-01 | 2010-01-07 | Canon Kabushiki Kaisha | Digital broadcast receiving apparatus and control method and program for the same |
US20100011352A1 (en) * | 2008-07-11 | 2010-01-14 | International Business Machines Corporation | Matching Plugins to Users |
US7676448B2 (en) * | 2004-03-12 | 2010-03-09 | Microsoft Corporation | Controlling installation update behaviors on a client computer |
US7685598B1 (en) * | 2003-12-23 | 2010-03-23 | The Weather Channel, Inc. | Desktop application framework |
US7779402B2 (en) * | 2006-08-22 | 2010-08-17 | International Business Machines Corporation | System and method for fine grain method update of an application to provide continuous availability |
US7979515B2 (en) * | 2008-04-10 | 2011-07-12 | Hitachi, Ltd. | Distribution management method, a distribution management system and a distribution management server |
US20110289496A1 (en) * | 2010-05-18 | 2011-11-24 | North End Technologies, Inc. | Method & apparatus for load balancing software update across a plurality of publish/subscribe capable client devices |
US8156076B2 (en) * | 2007-07-11 | 2012-04-10 | Hitachi, Ltd. | Terminal and data distribution system |
US20120129503A1 (en) * | 2010-11-19 | 2012-05-24 | MobileIron, Inc. | Management of Mobile Applications |
-
2010
- 2010-11-16 US US12/947,413 patent/US20120124570A1/en not_active Abandoned
Patent Citations (28)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5896566A (en) * | 1995-07-28 | 1999-04-20 | Motorola, Inc. | Method for indicating availability of updated software to portable wireless communication units |
US6401239B1 (en) * | 1999-03-22 | 2002-06-04 | B.I.S. Advanced Software Systems Ltd. | System and method for quick downloading of electronic files |
US20020140966A1 (en) * | 2001-04-02 | 2002-10-03 | Meade William K. | Systems and methods for managing software updates for printing systems |
US20030005101A1 (en) * | 2001-07-02 | 2003-01-02 | Falzon Edward George | Network administration management utility |
US20030182626A1 (en) * | 2002-03-22 | 2003-09-25 | Eran Davidov | On-demand creation of MIDlets |
US20030204841A1 (en) * | 2002-04-30 | 2003-10-30 | Toshiba Tec Kabushiki Kaisha | Program management apparatus, program management system, and program management method |
US20040123283A1 (en) * | 2002-12-20 | 2004-06-24 | Brown Mark S. | Automated updates of software and systems |
US20050125489A1 (en) * | 2003-11-26 | 2005-06-09 | Hanes David H. | System and method for determining messages on a server as relating to at least one functional component of a client system |
US7376945B1 (en) * | 2003-12-02 | 2008-05-20 | Cisco Technology, Inc. | Software change modeling for network devices |
US7685598B1 (en) * | 2003-12-23 | 2010-03-23 | The Weather Channel, Inc. | Desktop application framework |
US7676448B2 (en) * | 2004-03-12 | 2010-03-09 | Microsoft Corporation | Controlling installation update behaviors on a client computer |
US20070234337A1 (en) * | 2006-03-31 | 2007-10-04 | Prowess Consulting, Llc | System and method for sanitizing a computer program |
US7779402B2 (en) * | 2006-08-22 | 2010-08-17 | International Business Machines Corporation | System and method for fine grain method update of an application to provide continuous availability |
US20090228577A1 (en) * | 2006-09-06 | 2009-09-10 | Network Box Corporation Limited | Push update system |
US20080201705A1 (en) * | 2007-02-15 | 2008-08-21 | Sun Microsystems, Inc. | Apparatus and method for generating a software dependency map |
US8156076B2 (en) * | 2007-07-11 | 2012-04-10 | Hitachi, Ltd. | Terminal and data distribution system |
US20090077547A1 (en) * | 2007-09-19 | 2009-03-19 | Kakinoki Masaya | Disk array apparatus |
US20090240791A1 (en) * | 2008-03-19 | 2009-09-24 | Fujitsu Limited | Update management method and update management unit |
US20090249321A1 (en) * | 2008-03-25 | 2009-10-01 | Mandyam Giridhar D | Apparatus and methods for widget update scheduling |
US20090271778A1 (en) * | 2008-03-25 | 2009-10-29 | Mandyam Giridhar D | Apparatus and methods for transport optimization for widget content delivery |
US7979515B2 (en) * | 2008-04-10 | 2011-07-12 | Hitachi, Ltd. | Distribution management method, a distribution management system and a distribution management server |
US20090320013A1 (en) * | 2008-06-18 | 2009-12-24 | Canon Kabushiki Kaisha | Image forming apparatus |
US20100005502A1 (en) * | 2008-07-01 | 2010-01-07 | Canon Kabushiki Kaisha | Digital broadcast receiving apparatus and control method and program for the same |
US20100011352A1 (en) * | 2008-07-11 | 2010-01-14 | International Business Machines Corporation | Matching Plugins to Users |
US20110289496A1 (en) * | 2010-05-18 | 2011-11-24 | North End Technologies, Inc. | Method & apparatus for load balancing software update across a plurality of publish/subscribe capable client devices |
US20120129503A1 (en) * | 2010-11-19 | 2012-05-24 | MobileIron, Inc. | Management of Mobile Applications |
US8359016B2 (en) * | 2010-11-19 | 2013-01-22 | Mobile Iron, Inc. | Management of mobile applications |
US20130132941A1 (en) * | 2010-11-19 | 2013-05-23 | Mobile Iron, Inc. | Management of mobile applications |
Cited By (31)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20080148268A1 (en) * | 2006-12-15 | 2008-06-19 | Canon Kabushiki Kaisha | Data processing apparatus, data processing system, method therefor, and program |
US10212566B2 (en) * | 2011-04-29 | 2019-02-19 | Google Technology Holdings LLC | Method and system for vicarious downloading or uploading of information |
US20170265019A1 (en) * | 2011-04-29 | 2017-09-14 | Google Technology Holdings LLC | Method and System for Vicarious Downloading or Uploading of Information |
US20120309375A1 (en) * | 2011-06-03 | 2012-12-06 | At&T Mobility Ii Llc | Automatic Control Of Rate Of Notifications For UMTS And Other Simultaneous Voice/Data Networks |
US8504004B2 (en) * | 2011-06-03 | 2013-08-06 | At&T Mobility Ii Llc | Automatic control of rate of notifications for UMTS and other simultaneous voice/data networks |
CN104641305A (en) * | 2012-07-27 | 2015-05-20 | 英格索尔-兰德公司 | System for account setup and/or device installation |
US20140064143A1 (en) * | 2012-07-27 | 2014-03-06 | Ingersoll-Rand Company | System for account setup and/or device installation |
US20140032732A1 (en) * | 2012-07-27 | 2014-01-30 | Ingersoll-Rand Company | System for account setup and/or device installation |
US20140058999A1 (en) * | 2012-08-27 | 2014-02-27 | Dongwook SEO | Mobile terminal and control method thereof |
US9779124B2 (en) * | 2012-08-27 | 2017-10-03 | Lg Electronics Inc. | Mobile terminal and control method thereof |
US9128796B2 (en) * | 2012-08-31 | 2015-09-08 | Cellco Partnership | Enabling a wireless device to act as a relay for upgrading an accessory coupled to the wireless device |
US20140068588A1 (en) * | 2012-09-06 | 2014-03-06 | Box, Inc. | Force upgrade of a mobile application via a server side configuration file |
US9311071B2 (en) * | 2012-09-06 | 2016-04-12 | Box, Inc. | Force upgrade of a mobile application via a server side configuration file |
US20150128122A1 (en) * | 2013-07-05 | 2015-05-07 | Tencent Technology (Shenzhen) Company Limited | Systems and Methods for Updating Software |
US20150012921A1 (en) * | 2013-07-08 | 2015-01-08 | Jvl Ventures, Llc | Systems, methods, and computer program products for processing sets of instructions for mobile devices |
US9292345B2 (en) * | 2013-07-08 | 2016-03-22 | Google Inc. | Systems, methods, and computer program products for processing sets of instructions for mobile devices |
US9600270B1 (en) | 2014-03-03 | 2017-03-21 | Google Inc. | Methods and systems for updating components on a computing device |
US9400643B2 (en) * | 2014-03-03 | 2016-07-26 | Google Inc. | Methods and systems for updating components on a computing device |
US20150371656A1 (en) * | 2014-06-19 | 2015-12-24 | Yang Gao | Acoustic Echo Preprocessing for Speech Enhancement |
US9508359B2 (en) * | 2014-06-19 | 2016-11-29 | Yang Gao | Acoustic echo preprocessing for speech enhancement |
US10290133B2 (en) | 2014-09-26 | 2019-05-14 | Oracle International Corporation | High fidelity interactive screenshots for mobile applications |
US20180041588A1 (en) * | 2014-09-26 | 2018-02-08 | Oracle International Corporation | Efficient means to test server generated applications on mobile device |
US10841385B2 (en) * | 2014-09-26 | 2020-11-17 | Oracle International Corporation | Efficient means to test server generated applications on mobile device |
US11127178B2 (en) | 2014-09-26 | 2021-09-21 | Oracle International Corporation | High fidelity interactive screenshots for mobile applications |
US10051462B2 (en) * | 2016-12-16 | 2018-08-14 | T-Mobile Usa, Inc. | Hybrid transport for installed service updates |
US10235157B2 (en) | 2016-12-29 | 2019-03-19 | Arris Enterprises Llc | Method and system for analytics-based updating of networked devices |
US10437581B1 (en) * | 2018-04-20 | 2019-10-08 | At&T Mobility Ii Llc | Internet of things platform for handling firmware transfer on machine-to-machine devices |
US20220137948A1 (en) * | 2020-10-30 | 2022-05-05 | Ayla Networks, Inc. | Edge-based intelligence for over the air update |
US11983522B2 (en) * | 2020-10-30 | 2024-05-14 | Ayla Networks, Inc. | Edge-based intelligence for over the air update |
US20230315422A1 (en) * | 2022-03-30 | 2023-10-05 | Confluent, Inc. | Automated upgrade in distributed computing environments |
US11983524B2 (en) * | 2022-03-30 | 2024-05-14 | Confluent, Inc. | Automated upgrade in distributed computing environments |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US20120124570A1 (en) | Method and system for facilitating the providing of software updates to mobile devices | |
US10050879B2 (en) | Techniques for selecting content based on network conditions | |
US10129351B2 (en) | Methods, apparatuses, and computer program products for providing filtered services and content based on user context | |
US11064419B2 (en) | Method and system for facilitating wireless communication via alternate communication pathway | |
US9794977B2 (en) | Method and system for facilitating wireless communication via alternate communication pathway | |
JP4825211B2 (en) | ACCESS DEVICE, ELECTRONIC DEVICE, WIRELESS ACCESS METHOD, AND WIRELESS REPRODUCTION METHOD | |
US8533605B1 (en) | Device experience adaptation based on schedules and events | |
US20140095617A1 (en) | Adjusting push notifications based on location proximity | |
US10212566B2 (en) | Method and system for vicarious downloading or uploading of information | |
US20090181649A1 (en) | Dynamic Delivery and Presentation of Electronic Data to Mobile Electronic Devices | |
US9119052B2 (en) | Content sharing for mobile devices | |
EP2511838A2 (en) | Synchronization method and apparatus of portable terminal | |
US20020169540A1 (en) | Method and system for inserting advertisements into broadcast content | |
US20140207734A1 (en) | Data synchronization management methods and systems | |
US20160028648A1 (en) | Resource Management Service | |
US20130046732A1 (en) | Data synchronization management methods and systems | |
US9516095B2 (en) | Data management system and method for displaying data | |
US20140148157A1 (en) | Nomination of a primary cell phone from a pool of cell phones | |
KR20140113403A (en) | Communication system with identification management and method of operation thereof | |
KR20130088612A (en) | Mobile terminal and data delay transmitting/receiving method thereof |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: MOTOROLA MOBILITY, INC., ILLINOISFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:ALBERTH, WILLIAM P., JR.;ROBB, PATRICIA A.;SIGNING DATES FROM 20101116 TO 20101117;REEL/FRAME:025386/0001 |
|
AS | Assignment |
Owner name: MOTOROLA MOBILITY LLC, ILLINOISFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MOTOROLA MOBILITY, INC.;REEL/FRAME:028829/0856Effective date: 20120622 |
|
AS | Assignment |
Owner name: GOOGLE TECHNOLOGY HOLDINGS LLC, CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MOTOROLA MOBILITY LLC;REEL/FRAME:034227/0095Effective date: 20141028 |
|
STCB | Information on status: application discontinuation |
Free format text: ABANDONED -- FAILURE TO RESPOND TO AN OFFICE ACTION |
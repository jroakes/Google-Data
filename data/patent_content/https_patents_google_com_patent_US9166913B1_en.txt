US9166913B1 - Systems and methods for balancing max-min fairness and throughput objectives in traffic engineering - Google Patents
Systems and methods for balancing max-min fairness and throughput objectives in traffic engineering Download PDFInfo
- Publication number
- US9166913B1 US9166913B1 US13/586,393 US201213586393A US9166913B1 US 9166913 B1 US9166913 B1 US 9166913B1 US 201213586393 A US201213586393 A US 201213586393A US 9166913 B1 US9166913 B1 US 9166913B1
- Authority
- US
- United States
- Prior art keywords
- network
- fairness
- allocation
- commodities
- max
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active, expires
Links
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L47/00—Traffic control in data switching networks
- H04L47/10—Flow control; Congestion control
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L47/00—Traffic control in data switching networks
- H04L47/10—Flow control; Congestion control
- H04L47/29—Flow control; Congestion control using a combination of thresholds
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04W—WIRELESS COMMUNICATION NETWORKS
- H04W28/00—Network traffic management; Network resource management
- H04W28/02—Traffic management, e.g. flow control or congestion control
Definitions
- the present disclosure relates generally to traffic engineering in networking systems, and, more particularly, to balancing throughput and efficiency with fairness in bandwidth allocation.
- users may establish connections between a source node and a destination node via a flow of data that is transferred through the network over one or more network paths.
- the data communicated over one or more connections constitutes traffic over the network.
- a traffic demand in the network between the source node and the destination node is represented by a commodity.
- a network path for a commodity between the source and destination nodes may be defined by a set of nodes (the source-destination node pair and any intermediate nodes) interconnected by a set of links coupled to the nodes carrying the data flow of the commodity. Each link has a capacity corresponding to the traffic it may carry.
- Traffic engineering may be used to decide how to route traffic in a network in order to balance several objectives, including, for example maximizing throughput and efficiency, balancing link utilization across the network, controlling bandwidth allocated to competing flows in a fair manner, minimizing latency and ensuring reliable operations when traffic patterns change or parts of the network fail. Traffic engineering techniques improve network utilization and can, for example, result in routing significantly more traffic through the network than simple network schemes which may route any traffic on the shortest path.
- Allocation of shared resources to different users of a network is a fundamental problem in distributed computing and networking.
- One accepted principle of traffic engineering is that network resources, such as network capacity, belong to all users and should be shared among the users in a fair and non-discriminatory way.
- Another accepted principle is that a network operator will strive to maximize throughput by allocating bandwidth to maximize the use of network resources.
- One aspect is directed to a method and system for allocating resources among a plurality of commodities in a network comprising a plurality of network nodes.
- the method and system include using a server to determine a max-min fairness allocation using a binary and linear search for the plurality of commodities, receive a fairness degradation bounding for each respective commodity of the plurality of commodities, determine an optimal throughput for the plurality of commodities in the network, calculate a network allocation for routing traffic associated with each of the plurality of commodities based on the optimal throughput, the max-min fair allocation, and the fairness degradation bounding, and allocate the calculated network allocation for each of the plurality of commodities.
- Another aspect is directed to a method and system for fairly allocating shared resources among a plurality of users, including receiving a selectable tradeoff between efficiency and fairness, determining a max-min fairness allocation for the plurality of users using a binary and linear search, determining an optimal efficiency for the plurality of users of the shared resources, calculating a resource allocation for each of the plurality of users based on the selectable tradeoff, the max-in fairness allocation and the optimal efficiency, and allocating the calculated resource allocation for each of the plurality of users.
- FIG. 1 is a diagram of an exemplary system in which concepts consistent with the principles of the disclosure may be implemented.
- FIG. 2 is a diagram of an exemplary network in which concepts consistent with the principles of the disclosure may be implemented.
- FIGS. 3-5B are flow charts illustrating an exemplary process according to some implementations of the disclosure.
- FIGS. 6-10 show experimental results for the processes of FIGS. 3-5B .
- Implementations consistent with the principles of the disclosure relate to traffic engineering applications in networking systems.
- Systems and methods are provided for allocating resources of a network among a plurality of commodities by balancing fairness and network throughput.
- Balancing throughput and fairness objectives may be achieved using linear programming which can, for example, allow the network operator to control the fairness/throughput balance trade-off by establishing bounds for fairness degradation for a commodity compared to a fair solution, such as a max-min fair solution or throughput degradation compared its optimal throughput.
- max-min fairness Although calculating max-min fairness is known, (described below), it can be difficult to determine quickly. Using linear programming to determine max-min fairness increases the calculation speed as well as allows flexibility for a network operator to establish tradeoff settings for fairness and throughput.
- the algorithms may be used to determine appropriate network allocations for commodities when some commodities require a higher quality of service.
- the algorithm can also be used when commodities are aggregated or when users value bandwidth with diminishing returns: piece-wise linear functions for commodities.
- the network operator can control the fairness/throughput trade-off by specifying a level of fairness, for example, as compared to the max-min fair (or other fair) solution, or to set a throughput degradation compared to an optimal throughput.
- the trade-off can also be analyzed in view of the contribution of each commodity.
- FIG. 1 shows a block diagram depicting network elements communicating through a network, according to an illustrative implementation of the disclosure.
- System 100 may allow multiple network nodes 102 to connect via a network 106 .
- network nodes 102 may communicate information with each other via network 106 .
- Network nodes 102 may include servers, routers, switches, gateways, network links, client devices, mobile devices, or any other receiver, transmitter, and/or transceiver circuitry capable of providing information to be routed through network 106 .
- Network 106 may include any combination of network links, including, without limitation, digital subscriber lines, ISDN network links, Ethernet links, wireless links, fiber optic links, frame relay network links, asynchronous transfer mode (ATM) network links, or virtual private network (VPN) links.
- Network 106 may route information through a number of routers, network links, or network nodes within network 106 .
- the algorithms described herein may be applied to a typical network.
- the network 106 may be specified by its set of nodes, links and link capacities.
- the traffic to be routed in the network may be specified by a set of commodities, each with a source, a destination and a demand—which may be the upper bound on the demand access rate.
- bandwidth allocation for each commodity may be specified from zero to the upper bound on its access rate, as well as how to route the commodity, which is determined using methods described herein.
- the bandwidth allocated through each network node and through each network arc is configured through a server which may include a processor and control circuitry capable of performing the steps described herein. Processes and operations performed by the network, including bandwidth allocations, may be implemented using the server.
- the commodity may be routed in split paths which include a set of paths and the bandwidth allocated on each path.
- the split paths, or splits are the distribution of the bandwidth allocated to each commodity among its possible paths, and may be determined according to the methods described herein.
- System 200 may include multiple edge nodes, such as source nodes s 1 , s 2 and destination nodes t 1 , and t 2 , located at the edge of network 106 .
- the edge nodes may be implemented in receiver, transmitter, and/or transceiver circuitry capable of exchanging data with network 106 .
- a connection between a source node and a destination node (and the traffic demand associated with the connection) will be referred to herein as a commodity.
- a commodity and a traffic demand associated with the traffic demand may be used interchangeably.
- the routing is done by transferring a commodity data flow f 1 through communication network 106 over one or more network paths p.
- a network path for a commodity between the source and destination nodes is defined by a set of nodes (the source-destination node pair and any intermediate nodes) interconnected by a set of links coupled to the nodes carrying the data flow of the commodity.
- fairness measures In traffic engineering, there are several variants of fairness measures. These include max-min fairness (which provides the strictest measure of fairness), proportional fairness (which provides a trade-off between fairness and efficiency), and a-fairness (which generalizes both fairness and efficiency measures).
- max-min fairness allocations network resources may be allocated in order of increasing demand. Generally speaking, low-traffic commodities may be given all the capacity they require, while high-traffic commodities evenly split the remaining capacity of the network. In practice, the max-min fairness strategy first maximizes the smallest allocation among all commodities, it then maximizes the second smallest allocation subject to the first maximized smallest allocation, and so on.
- Process 300 may be implemented in one or more components of a network communications system (e.g., system 100 of FIG. 1 ). This can be done in a distributed way, e.g., using routing and processing circuitry of various edge nodes and routers.
- max-min fairness allocation is calculated. Max-min fairness may be calculated using the server using a standard solution for max-min fairness, or via an improved algorithm for calculating max-min fairness, both discussed herein.
- a standard solution for max-min fairness presented in Table 1 may be calculated using the following algorithm where C is the set of all commodities, each commodity d may have a bandwidth demand D d which represents the upper bound of its network access rate, U is the set of commodities whose allocation has not been fixed yet, Z i is the set of commodities whose allocation has been fixed at step i.
- a problem P i may be calculated using the following linear program:
- any blocking commodity or commodities generally cannot be allocated more throughput because the commodities are saturated, meaning that their demand is equal to the allocation level t k , or an edge in the network is saturated.
- the allocation level t may be increased iteratively in a linear way to address either situation.
- Max-min fairness may also be calculated using a binary then linear search technique, following process 400 of FIG. 4 .
- the binary search phase at 410 saturated commodities of the network may be identified.
- a linear search phase is performed to find a saturated network edge, for example, but finding the saturated commodity with the highest demand before the next edge is saturated.
- the binary and linear search algorithm for identifying the saturated commodities is outlined in sets 5-9, below, and the binary search phase is explained in more detail below. For speed and numerical stability, binary search is conducted on the demand indices (after sorting) not the demand values.
- the binary and linear search algorithm is presented in Table 2.
- the binary search phase for max-min fairness is presented in Table 3. Duplicate demands are eliminated in order to avoid degenerate binary steps.
- the number of iterations of the binary and linear search algorithm is O(
- the number of iterations is bounded by the logarithm of the number of commodities that are fixed in this binary search phase.
- +1 linear search phases There are at most
- the logarithmic function is concave so that the highest number of binary iterations is obtained when edge saturations are evenly spaced and each binary phase fixes O(
- one binary search phase may be executed followed by a linear search phase.
- the search phases may continue alternating a binary search phase and a linear phase.
- the number of iterations of the binary then linear search algorithm is O(
- the binary search phase does not fix any commodities at the beginning (because no demand can be completely satisfied without saturating an edge) and one commodity is fixed at each iteration of the subsequent linear search.
- process 500 of FIG. 5A may be followed.
- Each commodity may have a fairness weight that may differ by commodity. For example, some commodities may have higher quality of service requirements than other commodities, and so they may be considered more important than other commodities.
- Such difference may be applied to the fairness algorithm using weights w d for each commodity.
- the weight may also be related to a preference for network allocation.
- the max-min fair solution with this additional weight information may be computed by changing P i as follows in Table 4.
- a fairness weight may be allocated to a commodity and be received by the server.
- the fairness weight may be selectable and assigned, for example, by a network operator or user.
- the weight may indicate a preference for network allocation.
- a fairness calculation using the weights may be obtained at 520 using the algorithm in Table 4.
- Aggregation commodities with the same source and destination, but possibly different importance weights or other characteristics, can be aggregated in one commodity with a concave piece-wise linear utility function.
- Diminishing returns for bandwidth users often value the first unit of bandwidth more than an additional unit of bandwidth when they already have a satisfactory allocation. This corresponds to a concave utility function. Users can specify this utility function by identifying thresholds of bandwidth they would like to obtain and their associated importance. This leads to piece-wise linear utility functions.
- FIG. 5B shows a flow 550 for calculating an allocation using a utility function.
- a utility function may be assigned for each commodity.
- the utility function may be set by a network operator or a user, and may be received by the server.
- the server at 570 , calculates an allocation based on the utility function.
- An example calculating utility function for a commodity is depicted in Table 5.
- An example of the utility function is also shown in FIG. 6 .
- Breakpoints can be arbitrarily set so that the breakpoints for all utility functions can have the same t coordinates.
- the series of linear programs may be modified as follows to handle this non-linearity.
- the utility function is a linear function:
- the above linear program provides commodities that have not been fixed to get a level that is greater than a minimum level t, which is maximized.
- the utility function is expressed linearly in set (18) which is restricted to the relevant interval for level t in set (22).
- u d (t k ) in set (19) corresponds to a constant equal to the utility function u d computed at value t k .
- each step in the linear program has an additional stopping criterion.
- each step of the linear search would terminate by identifying at least one blocking commodity and fixing it at the current level.
- a step of the linear search may terminate with no blocking commodities.
- the linear search moves on to the next interval [t l+1 , t l+2 ] and the expression of utility functions in (17) is changed accordingly. This algorithm is shown in Table 6.
- Binary search may also be changed in a similar way by applying it to both the demand values and the breakpoint values (t l ) l ⁇ L , ordered in increasing order.
- the formulation of ⁇ tilde over (P) ⁇ is changed in the same way as P i to use the expression of the utility function that depends on the relevant interval [t l ; t l+1 ].
- an allocation and routing may be calculated at 320 based on maximizing throughput and the max-min fairness.
- max-min fairness may be calculated in several ways, preferably using a binary and linear search technique, and may include weights for each commodity and utility functions.
- the optimal throughput without any fairness considerations may be obtained by solving the following standard linear program where T opt is the optimal throughput value.
- the max-min fair allocation X MMF is computed using the server as described herein. Then, a modification of (P throughput ) is determined to optimize throughput under fairness constraints as follows. (P′ throughput ) optimizes throughput under (23) so that each commodity gets at least a given fraction q fairness of its fair allocation:
- the fairness degradation can be specified in an absolute rather than relative manner, by replacing set (23) with the following constraint where ⁇ fairness is the largest absolute degradation allowed compared to the fair allocation: X d ⁇ X d MMF ⁇ a fairness ⁇ d ⁇ C (24)
- (P′′ throughput ) may be used to optimize a fraction q fairness of the fair allocation that each commodity is guaranteed to be allocated, under set (25) that the throughput is at least a fraction q throughput of the optimal throughput T opt :
- a similar model may be formulated for an absolute, rather than relative, fairness degradation.
- the hybrid approach provides improved control of the impact of fairness, as well as operator control of a tradeoff of fairness and throughput.
- the network operator may precisely control the impact on fairness.
- the network operator can also control the trade-off on fairness or throughput, depending on the criterion that is most important to the operator.
- the hybrid approach guarantees that any decrease in allocation compared to the max-min fair allocation is bounded by a given factor for all commodities.
- FIGS. 7-8 depict graphs showing experimental results showing the speed solving times using binary and linear search compared to linear and binary then linear, tradeoff between fairness and throughput. As shown in FIGS. 7-8 the improvement in speed of binary and linear search compared to linear search is significant for all demand (congestion) levels.
- FIG. 9 depict graphs showing the improvement in the number of iterations in computing max-min fairness using linear, binary and linear and binary then linear searching.
- FIG. 10 depict graphs on four different networks showing experimental results for the flexible trade-off between fairness and throughput achieved by the throughput algorithm using the binary and linear search technique for max min fairness.
- the experiments included values of q fairness ranging from 0.0 to 1.0 in 0.1 increments.
- Intermediate values of q fairness represent different trade-offs between fairness and throughput.
- logic may include hardware, such as an application specific integrated circuit or a field programmable gate array, software, or a combination of hardware and software.
Abstract
Description
TABLE 1 |
Standard Solution For Max-Min Fairness |
Initialization: U ← C, i ← 0 | |
while U ≠ ∅ do | |
Maximize the i-th smallest allocation: solve Pi, | |
its optimal value is ti | |
Perform non-blocking test: Zi ← set of commodities | |
in U that cannot be allocated more than ti in any | |
solution. | |
Fix the allocation of commodities in Zi to ti | |
U ← U \ Zi | |
i ← i + 1 | |
end while | |
-
- max t such that
X d ≦D d ∀dεC (1)
t−X d≦0∀dεU (2)
t k −X d≦0∀dεZ k∀k=0 . . . i−1 (3)
XεF (4)
where Xd is the total bandwidth allocated to commodity d. In the above linear program, set (1) enforces that each commodity is allocated no more than its demand, set (2) enforces that the commodities that have not been fixed yet get an allocation that is greater than the minimum allocation t, which is maximized in the objective, set (3) enforces that the commodities that have been fixed in all previous steps are fixed at the levels tk previously computed, and set (4) enforces that there is a feasible flow corresponding to the vector of allocations X=(Xd)dεC. Some standard ways to model feasibility for a multi-commodity flow include arc formulation and path formulation.
- max t such that
TABLE 2 |
Binary and Linear search algorithm for max-min fairness |
Initialization: U ← C | |
while U ≠ ∅ do | |
Binary search phase (see Table 3): find the | |
saturated commodity with the highest demand so that | |
no additional edge is saturated and fix relevant | |
commodities. One linear iteration as in the standard | |
algorithm (see Table 1): find the next allocation | |
level ti dictated by the next saturated edge and fix | |
relevant commodities. | |
end while | |
TABLE 3 |
Binary search phase for max-min fairness |
Initialization: idfeas ← last known feasible index | |
Initialization: find first value of id_infeas with | |
exponential search | |
Choose idcurrent between idfeas and idinfeas | |
while idinfeas − idfeas > 0 do | |
tcurrent ← dicurrent | |
Solve {tilde over (P)} (tcurrent): try to allocate up to tcurrent to | |
every commodity in U | |
if {tilde over (P)} (tcurrent): is feasible then | |
idfeas ← idcurrent | |
else | |
idinfeas ← idcurrent | |
end if | |
idcurrent ← (idfeas + idinfeas) / 2 | |
end while | |
Fix relevant commodities: Each commodity d ε U such that | |
Dd ≦ tfeas is fixed to td = min(tfeas;Dd) | |
Identify remaining free commodities: U ← U \ {d ε C : Dd ≦ tfeas} | |
X d ≦D d ∀dεC (5)
min(t current ,D d)−X d≦0∀dεU (6)
t k −X d≦0∀dεZ k ∀k=0 . . . i−1 (7)
t d −X d≦0∀d fixed in previous binary phases (8)
XεF (9)
TABLE 4 |
Calculating Fairness with Different Weights For Each Commodity |
max t such that |
Xd ≦ Dd ∀d ε C | (10) | |
Xd = wdrd ∀d ε C | (11) | |
T − rd ≦ 0 ∀d ε U | (12) | |
tk − rd ≦ 0 ∀d ε Zk ∀k = 0 . . . i −1 | (13) | |
X ε F | (14) | |
rd ≧ 0 ∀d ε C | (15) | |
Each linear program Pi may be changed depending on the relevant interval [tl, tl+1]:
TABLE 5 | ||||
Utility Function for Each Commodity | ||||
max t such that |
Xd ≦ Dd ∀d | (16) | ||||
t − rd ≦ 0 ∀d ε U | (17) | ||||
|
(18) | ||||
Xd = ud(tk) ∀d ε Zk∀k = 0 . . . i − 1 | (19) | ||||
X ε F | (20) | ||||
rd ≧ 0 ∀d ε U | (21) | ||||
t1 ≦ t ≦ tl+1 | (22) | ||||
TABLE 6 |
Linear search algorithm for max-min fairness |
with piece-wise utility functions |
Initialization: U ← C, i ← 0 | |
Initialization of the breakpoint index: l = 0 | |
while U ≠ ∅ do | |
Maximize the i-th smallest allocation: solve Pi with | |
interval [tl, tl+1], its optimal value is ti | |
Perform non-blocking test: Zi ← set of commodities in U | |
that cannot be allocated more than ti in any solution | |
if Zi ≠ ∅ then | |
Fix the allocation of commodities in Zi to ti | |
U ← U \ Zi | |
else | |
Move to the next breakpoint: l ← l + 1 | |
end if | |
i ← i + 1 | |
end while | |
such that
X d ≧D d ∀dεC
XεF
such that
X d ≦D d ∀dεC
XεF
X d ≧q fairness X d MMF ∀dεC (23)
X d ≧X d MMF −a fairness ∀dεC (24)
X d ≦D d ∀dεC
XεF
X d ≧q fairness X d MMF ∀dεC (25)
0≦q fairness≦1 (27)
Claims (18)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/586,393 US9166913B1 (en) | 2012-08-15 | 2012-08-15 | Systems and methods for balancing max-min fairness and throughput objectives in traffic engineering |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/586,393 US9166913B1 (en) | 2012-08-15 | 2012-08-15 | Systems and methods for balancing max-min fairness and throughput objectives in traffic engineering |
Publications (1)
Publication Number | Publication Date |
---|---|
US9166913B1 true US9166913B1 (en) | 2015-10-20 |
Family
ID=54290498
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/586,393 Active 2033-12-15 US9166913B1 (en) | 2012-08-15 | 2012-08-15 | Systems and methods for balancing max-min fairness and throughput objectives in traffic engineering |
Country Status (1)
Country | Link |
---|---|
US (1) | US9166913B1 (en) |
Cited By (5)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20170078218A1 (en) * | 2015-09-15 | 2017-03-16 | Telefonaktiebolaget L M Ericsson (Publ) | Methods and apparatus for traffic management in a communication network |
CN109005131A (en) * | 2018-07-27 | 2018-12-14 | 同济大学 | The resource allocation methods of minimax justice in a kind of transmission of multi-source |
CN109768817A (en) * | 2019-01-22 | 2019-05-17 | 重庆邮电大学 | The extensive mimo system of wireless energy transfer is based on the resource allocation methods of max-min justice |
CN111510479A (en) * | 2020-04-08 | 2020-08-07 | 天津大学 | Resource allocation method and device for heterogeneous cache system |
US11513859B2 (en) * | 2020-05-14 | 2022-11-29 | Snowflake Inc. | Flexible computing |
Citations (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20080244072A1 (en) * | 2006-06-22 | 2008-10-02 | James Andrew Broberg | Distributed resource allocation in stream processing systems |
-
2012
- 2012-08-15 US US13/586,393 patent/US9166913B1/en active Active
Patent Citations (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20080244072A1 (en) * | 2006-06-22 | 2008-10-02 | James Andrew Broberg | Distributed resource allocation in stream processing systems |
Non-Patent Citations (1)
Title |
---|
Lan et al.; "An Axiomatic Theory of Fairness in Network Resource Allocation"; Mar. 14-19, 2010; Accessed online on Dec. 12, 2014 at http://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=5461911. * |
Cited By (8)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20170078218A1 (en) * | 2015-09-15 | 2017-03-16 | Telefonaktiebolaget L M Ericsson (Publ) | Methods and apparatus for traffic management in a communication network |
US9853909B2 (en) * | 2015-09-15 | 2017-12-26 | Telefonaktiebolaget Lm Ericsson (Publ) | Methods and apparatus for traffic management in a communication network |
CN109005131A (en) * | 2018-07-27 | 2018-12-14 | 同济大学 | The resource allocation methods of minimax justice in a kind of transmission of multi-source |
CN109768817A (en) * | 2019-01-22 | 2019-05-17 | 重庆邮电大学 | The extensive mimo system of wireless energy transfer is based on the resource allocation methods of max-min justice |
CN109768817B (en) * | 2019-01-22 | 2021-03-23 | 重庆邮电大学 | Max-min fairness-based resource allocation method for large-scale MIMO system with wireless energy transmission |
CN111510479A (en) * | 2020-04-08 | 2020-08-07 | 天津大学 | Resource allocation method and device for heterogeneous cache system |
US11513859B2 (en) * | 2020-05-14 | 2022-11-29 | Snowflake Inc. | Flexible computing |
US11687373B2 (en) | 2020-05-14 | 2023-06-27 | Snowflake Inc. | Flexible computing |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
CN111953758B (en) | Edge network computing unloading and task migration method and device | |
US11190437B2 (en) | Methods, apparatus and computer programs for allocating traffic in a telecommunications network | |
EP3251310B1 (en) | Method,apparatus and machine readable medium for traffic engineering in communications network having quality of service flows and best effort flows | |
US9166913B1 (en) | Systems and methods for balancing max-min fairness and throughput objectives in traffic engineering | |
Beshley et al. | Adaptive flow routing model in SDN | |
US7969886B1 (en) | Bandwidth allocation for hierarchical telecommunications networks | |
EP3289734B1 (en) | Resource provisioning in a virtualized network | |
US20050008014A1 (en) | Techniques for network traffic engineering | |
CN106992810B (en) | Shared protection route and spectrum allocation method considering joint fault probability constraint | |
Ogino et al. | Virtual network embedding with multiple priority classes sharing substrate resources | |
CN113348651A (en) | Dynamic inter-cloud placement of sliced virtual network functions | |
US20160301612A1 (en) | Iterative max-min fairness algorithms | |
Shang et al. | Network congestion-aware online service function chain placement and load balancing | |
Pham et al. | Load balancing using multipath routing in network functions virtualization | |
Ren et al. | A sdn-based dynamic traffic scheduling algorithm | |
Kawashima et al. | Dynamic placement of virtual network functions based on model predictive control | |
US11929929B2 (en) | Methods, apparatus and computer programs for allocating traffic in a telecommunications network | |
Chahlaoui et al. | Multipath-routing based load-balancing in SDN networks | |
Yu et al. | Deterministic service function chaining over beyond 5g edge fabric | |
Bera et al. | Network slicing in 5g edge networks with controlled slice redistributions | |
Gurusamy et al. | Path optimization of box-covering based routing to minimize average packet delay in software defined network | |
Mesodiakaki et al. | ONE: Online Energy-efficient User Association, VNF Placement and Traffic Routing in 6G HetNets | |
Guo et al. | Probabilistic-assured resource provisioning with customizable hybrid isolation for vertical industrial slicing | |
WO2016155974A1 (en) | Stability- and capacity-aware time-dependent routing in transport networks | |
CN114466059B (en) | Method for providing reliable service function chain for mobile edge computing system |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:MANDAL, SUBHASREE;SINGH, ARJUN;DANNA, EMILIE JEANNE ANNE;SIGNING DATES FROM 20120802 TO 20120815;REEL/FRAME:030215/0423 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044334/0466Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 4 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 8TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1552); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 8 |
US7293005B2 - Pipelined architecture for global analysis and index building - Google Patents
Pipelined architecture for global analysis and index building Download PDFInfo
- Publication number
- US7293005B2 US7293005B2 US10/764,772 US76477204A US7293005B2 US 7293005 B2 US7293005 B2 US 7293005B2 US 76477204 A US76477204 A US 76477204A US 7293005 B2 US7293005 B2 US 7293005B2
- Authority
- US
- United States
- Prior art keywords
- index
- global analysis
- documents
- delta
- store
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active - Reinstated, expires
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/951—Indexing; Web crawling techniques
-
- Y—GENERAL TAGGING OF NEW TECHNOLOGICAL DEVELOPMENTS; GENERAL TAGGING OF CROSS-SECTIONAL TECHNOLOGIES SPANNING OVER SEVERAL SECTIONS OF THE IPC; TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10—TECHNICAL SUBJECTS COVERED BY FORMER USPC
- Y10S—TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10S707/00—Data processing: database and file management or data structures
- Y10S707/99931—Database or file accessing
-
- Y—GENERAL TAGGING OF NEW TECHNOLOGICAL DEVELOPMENTS; GENERAL TAGGING OF CROSS-SECTIONAL TECHNOLOGIES SPANNING OVER SEVERAL SECTIONS OF THE IPC; TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10—TECHNICAL SUBJECTS COVERED BY FORMER USPC
- Y10S—TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10S707/00—Data processing: database and file management or data structures
- Y10S707/99941—Database schema or data structure
- Y10S707/99943—Generating database or data structure, e.g. via user interface
Definitions
- the present invention is related to a pipelined architecture for Global analysis and index building.
- the World Wide Web (also known as WWW or the “Web”) is a collection of some Internet servers that support Web pages that may include links to other Web pages.
- a Uniform Resource Locator (URL) indicates a location of a Web page.
- each Web page may contain, for example, text, graphics, audio, and/or video content.
- a first Web page may contain a link to a second Web page. When the link is selected in the first Web page, the second Web page is typically displayed.
- a Web browser is a software application that is used to locate and display Web pages.
- Web pages There are billions of Web pages on the Web.
- Web search engines are used to retrieve Web pages on the Web based on some criteria (e.g., entered via the Web browser). That is, Web search engines are designed to return relevant Web pages given a keyword query. For example, the query “HR” issued against a company intranet search engine is expected to return relevant pages in the intranet that are related to Human Resources (HR).
- the Web search engine uses indexing techniques that relate search terms (e.g., keywords) to Web pages.
- Global analysis computations may be described as extracting properties from a global view of documents in a corpus (e.g., documents available on the Web).
- a global analysis computation is the page rank computation.
- a page rank computation takes as input a directed graph in which every document in the corpus is a node and every hyperlink between documents is an edge. Then, the page rank computation produces as output a global rank for each document in the corpus.
- Other examples of global analysis computations are duplicate detection (i.e., the identification of pages with similar or the same content) and template detection (i.e., identification of which parts of a Web page are part of a site template).
- Search engines that use global analysis computations typically need to have the output of these computations ready before indexing the corpus. For instance, rank values computed by page rank may be used to determine the order of documents in the index, and the results of the duplicate detection computation may be used to filter out which documents should not be indexed. Having to perform all global analysis computations before the creation of the search indices is a problem in scenarios where freshness requirements impose constraints on the time allowed for index creation. In general, global computations are costly, since their computational time is proportional to the number of documents in the corpus, which in the case of the Web or some textual and biological databases is very large.
- FIG. 1 illustrates, in a block diagram, a computing environment in accordance with certain implementations of the invention.
- FIG. 2 illustrates a data store and data structures in accordance with certain implementations of the invention.
- FIG. 3 illustrates an index build process implemented by an indexing component in accordance with certain implementations of the invention.
- FIG. 4 illustrates a delta index build process implemented by a delta indexing component in accordance with certain implementations of the invention.
- FIG. 5 illustrates a process for merging a store and a delta store in accordance with certain implementations of the invention.
- FIG. 6A illustrates logic for an index build process in accordance with certain implementations of the invention.
- FIG. 6B illustrates, in a block diagram, a high-level flow of an index build process in accordance with certain implementations of the invention.
- FIG. 6C illustrates auxiliary data structures that may be used by global analysis computations in accordance with certain implementations of the invention.
- FIG. 7A illustrates logic for an index build process in accordance with certain alternative implementations of the invention.
- FIG. 7B illustrates, in a block diagram, a high-level flow of an index build process in accordance with certain alternative implementations of the invention.
- FIG. 8 illustrates processing using current global analysis results versus using slightly older global analysis results in accordance with certain implementations of the invention.
- FIG. 9A illustrates logic for a global analysis process in accordance with certain implementations of the invention.
- FIG. 9B illustrates, in a block diagram, a flow of a global analysis process in accordance with certain implementations of the invention.
- FIG. 10 illustrates an architecture of a computer system that may be used in accordance with certain implementations of the invention.
- Implementations of the invention provide an architecture in which global analysis computations are pipelined so that intermediate results may be shared between different sets of global analysis computations and where lagging global analysis information is used for creating search indices.
- the term “lagging” may be described as performing processing with results of recent processing of documents existing at a certain point in time, but not necessarily processing that has taken into account documents existing at a current point in time.
- FIG. 1 illustrates, in a block diagram, a computing environment in accordance with certain implementations of the invention.
- a client computer 100 is connected via a network 190 to a server computer 120 .
- the client computer 100 may comprise any computing device known in the art, such as a server, mainframe, workstation, personal computer, hand held computer, laptop telephony device, network appliance, etc.
- the network 190 may comprise any type of network, such as, for example, a Storage Area Network (SAN), a Local Area Network (LAN), Wide Area Network (WAN), the Internet, an Intranet, etc.
- the client computer 100 includes system memory 104 , which may be implemented in volatile and/or non-volatile devices.
- One or more client applications 110 and a viewer application 112 may execute in the system memory 104 .
- the viewer application 112 provides an interface that enables searching of a set of documents (e.g., stored in one or more data stores 170 .
- the viewer application 112 is a Web browser.
- the server computer 120 includes system memory 122 , which may be implemented in volatile and/or non-volatile devices.
- a information retrieval system 130 executes in the system memory 122 .
- the search engine includes a crawler component 132 , a global analysis component 134 , an indexing component 142 , and a delta indexing component 144 .
- the global analysis component 134 includes a static rank component 136 , a duplicate detection component 138 , an anchor text component 140 .
- components 132 , 136 , 134 , 138 , 140 , 142 , and 144 are illustrated as separate components, the functionality of components 132 , 136 , 134 , 138 , 140 , 142 , and 144 may be implemented in fewer or more or different components than illustrated. Additionally, the functionality of the components 132 , 136 , 134 , 138 , 140 , 142 , and 144 may be implemented at a Web application server computer or other server computer that is connected to the server computer 120 . Additionally, one or more server applications 160 execute in system memory 122 .
- the server computer 120 provides the client computer 100 with access to data in at least one data store 170 (e.g., a database). Although a single data store 170 is illustrated, for ease of understanding, data in data store 170 may be stored in data stores at other computers connected to server computer 120 .
- data store 170 e.g., a database
- an operator console 180 executes one or more applications 182 and is used to access the server computer 120 and the data store 170 .
- the data store 170 may comprise an array of storage devices, such as Direct Access Storage Devices (DASDs), Just a Bunch of Disks (JBOD), Redundant Array of Independent Disks (RAID), virtualization device, etc.
- DSDs Direct Access Storage Devices
- JBOD Just a Bunch of Disks
- RAID Redundant Array of Independent Disks
- virtualization device etc.
- the data store 170 includes data that is used with certain implementations of the invention.
- global analysis computations are performed by the global analysis component 134 in a pipelined manner with the use of lagging information and delta indices for an index build process performed by the indexing component 142 .
- the global analysis computations described herein provide examples of possible global analysis computations, but such examples are not intended to limit the scope of the invention.
- the techniques of the invention are applicable to any global analysis computations.
- FIG. 2 illustrates a data store and data structures in accordance with certain implementations of the invention.
- Data store 200 may be one of data stores 170 ( FIG. 1 ).
- Data store 200 includes a store 210 , an index 220 , a delta store 230 , and a delta index 240 .
- the store 210 , index 224 , delta store 230 , and delta index 240 may be used in an information retrieval system 130 .
- the store 210 , index 224 , delta store 230 , and delta index 240 are data structures used for index creation and global analysis processes in accordance with certain implementations of the invention.
- the store 210 is a repository for a tokenized version of each document in a corpus of documents to be used for the information retrieval system 130 .
- the documents may be Web pages obtained at a certain point in time or the documents may be files in a directory obtained at a certain point in time.
- the documents are parsed and tokenized before being put in the store 210 . Parsing and tokenizing may be described as identifying words (tokens) from text in the documents that are to be indexed. Parsed documents are typically small, so they may be aggregated into bundles in the store 210 to improve Input/Output (I/O) performance. Each bundle corresponds to a single file and multiple documents.
- a document in the store 210 may be found using a locator.
- the locator may be described as a reference to a bundle followed by a reference within the bundle. Also, implementations of the invention provide an Application Programming Interface (API) that may be used to retrieve a document from the store 210 , given the locator of the document.
- API Application Programming Interface
- attribute-value pairs may be used to store data and metadata about a document.
- the data in the store 210 is used by the global analysis component 134 and by the indexing component 142 .
- Attributes include, for example, a TEXT attribute for the tokenized text of a document, and attributes that are used as input for global analysis computations, such as an ANCHORTEXT attribute for the source anchor text of a document.
- An anchor may be described as a path or link to a document (e.g., a URL), while anchor text may be described as text associated with the path or link (e.g., a URL) that points to a document.
- anchor text is text that labels or encloses hypertext text links in Web documents. Implementations of the invention provide an API to retrieve the value of a given attribute for a document from the store 210 .
- the bundles are organized for efficient storage and retrieval for particular attributes.
- the store 210 may be implemented in various ways. That is, the implementation of the store 210 is independent from the pipelined architecture described for implementations of the invention, as long the functionality of retrieving attributes from documents is supported.
- the indexing component 142 builds an index 220 from the store 210 .
- the index 220 is used to determine which documents are chosen as “hits” when a query for a set of documents is received with certain criteria.
- Different information retrieval system 130 may use different index structures, such as an inverted text index over the documents content. Implementations of the invention are applicable to any type of index structure.
- the information retrieval system 130 periodically updates the store 210 and index 220 with new documents.
- the term “new” documents is used to refer to newly generated documents and to updated existing documents. This is especially useful in environments in which documents are constantly being created or updated.
- certain implementations of the invention use a delta store 230 to accumulate changes to the store 210 and use a delta index 240 as an index over the delta store 230 . This allows the index 220 to be rebuilt using an efficient batch process.
- the delta store 230 and delta index 240 mirror the structure and functionality of the store 210 and index 220 , respectively. To make newly documents visible, queries requesting documents are run over both the index 220 and the delta index 240 .
- the delta store 230 is periodically merged with the store 210 , after which the index 220 is rebuilt, and the delta store 230 and the delta index 240 are reset. Resetting may be described as clearing the data structures of current content.
- FIG. 3 illustrates an index build process 300 implemented by the indexing component 142 in accordance with certain implementations of the invention.
- the index build process 300 takes as input the current version of store 210 (labeled Store i in FIG. 3 ) and the current version of delta store 230 (labeled DeltaStore in FIG. 3 ).
- the index build process 300 then merges the current version of store 210 with the current version of delta store 230 and generates a new version of store 210 (labeled Store i+1 in FIG. 3 ) and a new index 220 (labeled Index i+1 in FIG. 3 ).
- the store 210 and index 220 are generated together in time in this manner.
- garbage collection takes place.
- Garbage collection may be described as a policy for ensuring that newer versions of documents replace older versions of documents in the store 210 . For example, if document D in Store i has been replaced by a newer version of document D in the delta store 230 (called document D′), then only document D′ appears in Store i+1 . After the index build process 300 has finished, Store i+1 and Index i+1 are copied, for example, to an appropriate data store 170 , and the delta store 230 and delta index 240 are reset. A single scan of Store i and the DeltaStore is sufficient to perform garbage collection and generate Store i+1 and Index i+1 .
- FIG. 4 illustrates a delta index build process 400 implemented by the delta indexing component 144 in accordance with certain implementations of the invention.
- the delta index build process 400 takes as input a version of the delta store (labeled DeltaStore j in FIG. 4 ) and new documents.
- the delta index build process 400 merges DeltaStore j with the new documents to generate a new version of delta store (labeled DeltaStore j+1 in FIG. 4 ) and a new version of delta index (labeled DeltaIndex j+1 in FIG. 4 ).
- New documents may be stored in the same manner as documents in the delta store 230 . Consequently, the process shown in FIG. 4 is similar to the one shown in FIG. 3 , with new documents effectively acting as a delta to the delta store 230 .
- a single scan of the new documents and DeltaStore j is sufficient to do garbage collection and generate DeltaStore j+1 and DeltaIndex j+1 .
- FIG. 5 illustrates a process for merging a store 210 and delta store 230 in accordance with certain implementations of the invention.
- Store 210 is labeled Store i 510 and the delta store 230 is labeled DeltaStore 520 in FIG. 5 .
- data associated with a document i.e., attribute value pairs
- documents D 1 and D 5 in Store i 510 have been replaced by more recent versions documents D 1 ′ and D 5 ′, respectively, in DeltaStore 520 .
- documents D 1 and D 5 are garbage collected as a newer version of the data store (labeled Store i+1 530 in FIG. 5 ) is generated.
- copying a bundle from the DeltaStore 520 to Store i+1 530 may be done with a file rename, depending on whether any meta-data in the bundle is to be updated.
- the process illustrated in FIG. 5 may also be used to merge the delta store 230 and new documents. However, multiple versions of the same document may appear in the new documents. To ensure that the most recent version of a document is merged into the delta store 230 , new documents are scanned in Last In First Out (LIFO) order.
- LIFO Last In First Out
- the bundle is copied to Store i+1 530 , with a filter being set to indicate that the documents in this bundle have been “seen”.
- Store i 510 is scanned.
- the filter is probed to determine whether any documents in that bundle have been “seen” (i.e., copied from the DeltaStore 520 to Store i+1 530 ). Any “seen” documents may be skipped in Store i 510 (i.e., not copied to Store i+1 ).
- a hash table may be used in conjunction with the filter.
- Structure 540 represents a filter that optionally has an associated hash table.
- Index i+1 To avoid multiple scans of the current store 210 during index build, Store i+1 , and Index i+1 are generated in parallel. This is accomplished by feeding the bundles of Store i+1 into the sort for Index i+1 before they are copied to storage (e.g., disk). The final phase of building Index i+1 , which consists of merging sorted runs, takes place after Store i+1 is copied to storage (e.g., disk).
- the delta index 240 is built in a similar way, that is, using a single scan of the delta store 230 and new documents. Certain implementations of the invention provide a store merge API that marks two stores as merged and does not do any garbage collection until the index build process initiates a scan of the merged store.
- FIG. 6A illustrates logic for an index build process in accordance with certain implementations of the invention.
- FIG. 6B illustrates, in a block diagram, a high-level flow of an index build process in accordance with certain implementations of the invention.
- control begins at block 600 and documents that are to be indexed by the search engine 130 are obtained.
- the documents are published or pushed (e.g., as may be the case with newspaper articles) to the indexing component 142 .
- the crawler component 132 discovers, fetches, and stores the documents.
- the crawler component 132 discovers, fetches, and stores new documents in delta store 230 .
- the global analysis component 134 performs global analysis.
- the global analysis component 134 may perform multiple global analysis computations, such as duplicate detection, anchor text analysis, and static ranking.
- the global analysis component 134 performs the duplicate detection, anchor text analysis, and static ranking directly, and, in certain implementations, the global analysis component 134 invokes the duplicate detection 138 , anchor text 140 , and static rank 136 components to perform this processing.
- FIG. 6C illustrates auxiliary data structures that may be used by global analysis computations in accordance with certain implementations of the invention.
- the auxiliary data structures include a duplicates table 670 , an anchor text table 672 , and a rank table 674 .
- the duplicates table 670 identifies documents that are duplicates of each other and identifies a “master” among duplicates.
- the anchor text table 672 collects anchor text pointing to each document in the store 210 .
- the rank table associates a static rank with each document in the store 210 .
- the global analysis component 134 is capable of performing any global analysis computations used by the information retrieval system 130 , using data structures used by each of these global analysis computations.
- the global analysis computations and data structures presented herein are just examples of possible scenarios. The global analysis computations and data structures presented herein are useful to illustrate how the global analysis computations are integrated in the index build process and how intermediate results may be shared among global analysis computations in a pipelined manner.
- the duplicates table 670 , anchor text table 672 , and rank table 674 are derived from a global analysis of the documents in the store 210 . Although the duplicates table 670 , anchor text table 672 , and rank table 674 are illustrated as single entities, one or more of the duplicates table 670 , anchor text table 672 , and rank table 674 may be implemented as one or more tables in storage (e.g., disk).
- a subscript used with each data structure denotes which version of the store 210 that the data structure reflects. For example, Rank i+1 corresponds to the ranking of documents in Store i+1 .
- the indexing component builds an index 220 (block 606 ) and builds a delta index 240 (block) 608 .
- a global analysis process 650 implemented by the global analysis component 134 takes Store i and DeltaStore i as input and outputs Rank i+1 , AnchorText i+1 , and Dup i+1 .
- the index build process 652 implemented by the indexing component 142 then takes this information, along with Store i and DeltaStore i , and generates Store i+1 and Index i+1 . During this process, garbage collection is performed on Store i .
- the delta index build process 654 implemented by the delta indexing component 144 may be resumed.
- the delta index build process cycles at its own rate, generating a new delta store 230 and delta index 240 each cycle.
- the performance of the index build process is largely bound by the time to do a scan of the store 210 and to perform the global analysis computations, which might be quite expensive. Two scans of the store 210 are required in FIG. 6B . One scan is to perform global analysis computations and another scan is to build the index. Certain implementations of the invention reduce the time for the index build process by modifying the flow for index build. In particular, certain implementations of the invention use Rank i , AnchorText i , and Dup i to build Index i+1 rather than Rank i+1 , AnchorText i+1 , and Dup i+1 . In other words, a slightly older (“stale”) global analysis (GA i ) is used to build Index i+1 rather than GA i+1 .
- FIG. 7A illustrates logic for an index build process in accordance with certain alternative implementations of the invention.
- FIG. 7B illustrates, in a block diagram, a high-level flow of an index build process in accordance with certain alternative implementations of the invention.
- control begins at block 700 with the crawler component 132 discovering, fetching, and storing documents in store 210 .
- the crawler component 132 discovers, fetches, and stores new documents in delta store 230 .
- the global analysis component 134 performs global analysis.
- the indexing component 142 builds an initial index using slightly older input data.
- the global analysis component 134 performs global analysis, while the delta index component 144 builds a new delta store and a new delta index.
- the index build process 750 implemented by the indexing component 142 uses GA i to build Index i+1 rather than using GA i+1 to build Index i+1 .
- the index build process 750 produces “raw” versions of AnchorText i+1 , and Dup i+1 . This information is extracted from Store i and DeltaStore as they are scanned. The term “raw” indicates that more processing is needed to produce the final version. For example, because of duplicates, the raw AnchorText i+1 may contain multiple copies of the same anchor text.
- the global analysis process 752 implemented by the global analysis component 134 refines the raw information and produces GA i+1 .
- the anchor text for Store i+1 is aggregated into AnchorText i+1 .
- the anchor text remains there, and the store is not later updated to add each document's anchor text to its bundle. This is avoided as it may require updating many bundles in the store, which is expensive in terms of resources that are used.
- FIG. 8 illustrates processing using current global analysis results 800 versus using slightly older global analysis results 820 in accordance with certain implementations of the invention.
- the delta index build process is stopped during the global analysis process, otherwise the global analysis would not reflect the current contents of the delta store.
- the delta index build process may be performed in parallel with the global analysis process.
- the index build process in FIG. 7B In order to generate the first index (Index 0 ), implementations of the invention run the index build process in FIG. 7B twice, with the appropriate inputs and outputs set to null each time. More specifically, building the first index begins with the first store (Store 0 ). In the first iteration, Store 0 is input to the indexing component 142 , which outputs raw Dup 0 and raw AnchorText 0 . These are input to the global analysis component 134 , which outputs Dup 0 , AnchorText 0 , and Rank 0 . Then, on the second iteration, Store 0 , Rank 0 , Dup 0 , and AnchorText 0 are input to the indexing component 142 , which generates Index 0 .
- FIG. 9A illustrates logic for a global analysis process in accordance with certain implementations of the invention.
- FIG. 9B illustrates, in a block diagram, a flow of the global analysis process in accordance with certain implementations of the invention.
- control begins at block 900 with duplicate detection 950 being performed using as input raw Dup i+1 and GA i and outputting Dup i+1 .
- anchor text analysis 952 is performed using as input AnchorText i+1 and GA i and outputs AnchorText i+1 .
- static ranking 954 is performed with input Rank i+1 and GA i and outputting Rank i+1 .
- the global analysis process inputs raw versions of AnchorText i+1 , and Dup i+1 and outputs Rank i+1 along with AnchorText i+1 , and Dup i+1 .
- the duplicate detection produces Dup i+1 by sorting the raw version of Dup i+1 on, for example, a destination URL.
- Dup i+1 identifies a single “master” URL for each set of duplicate documents. This information is used by the anchor text analysis 952 , which replaces destination and source URLs by their master URLs, so that duplicate anchor text may be kept out of the index.
- a projection on AnchorText i+1 is then used to produce raw Rank i+1 (e.g., in the form of a link graph (Link i+1 )) of destination and source URLs.
- the static rank component 136 computes Rank i+1 from Link i+1 .
- the index build process uses the results of a recent global analysis process that has already finished.
- the change may be ignored and the available results may be used, while for new documents for which no results are available, a default value (e.g. a minimum or average value) may be used. That is, although document content may have changed, the already computed information, e.g. rank, may be used without loss of precision.
- Lagging global analysis may be used in different scenarios. For example, if global analysis is slower than an index build, but fast enough to run between two index builds, index build for iteration N may use the global analysis results from iteration (N-1). Hence global analysis for iteration N may run concurrently. Moreover, if global analysis takes longer than the time between two index builds, global analysis may run continuously in the background. Whenever an iteration of global analysis finishes, another iteration starts over with the most recent data. In certain implementations, global analysis may be skipped for a few iterations of the index build. The indexing component 142 then uses the most recent complete global analysis results.
- a high frequency of index builds are achieved to fulfill strict freshness requirements, at the temporary cost of some precision in the global analysis.
- the architecture allows new documents to be indexed in smaller indices (delta indices) that are queried together with the main indices.
- delta indices are queried together with the main indices.
- global analysis is not performed for the delta indices in the first version of those indices.
- the techniques of the invention may be applied to per-document analysis (e.g., summarization, keyword extraction, etc.) that does not require a global analysis of an entire corpus.
- per-document analysis e.g., summarization, keyword extraction, etc.
- Using lagging per-document analysis information is especially useful in scenarios where the change rate of documents is high, and the per-document analysis is expensive.
- the described techniques for a pipelined architecture for global analysis and index building may be implemented as a method, apparatus or article of manufacture using standard programming and/or engineering techniques to produce software, firmware, hardware, or any combination thereof.
- article of manufacture refers to code or logic implemented in hardware logic (e.g., an integrated circuit chip, Programmable Gate Array (PGA), Application Specific Integrated Circuit (ASIC), etc.) or a computer readable medium, such as magnetic storage medium (e.g., hard disk drives, floppy disks, tape, etc.), optical storage (CD-ROMs, optical disks, etc.), volatile and non-volatile memory devices (e.g., EEPROMs, ROMs, PROMs, RAMs, DRAMs, SRAMs, firmware, programmable logic, etc.).
- Code in the computer readable medium is accessed and executed by a processor.
- the code in which various implementations are implemented may further be accessible through a transmission media or from a file server over a network.
- the article of manufacture in which the code is implemented may comprise a transmission media, such as a network transmission line, wireless transmission media, signals propagating through space, radio waves, infrared signals, etc.
- the “article of manufacture” may comprise the medium in which the code is embodied.
- the “article of manufacture” may comprise a combination of hardware and software components in which the code is embodied, processed, and executed.
- the article of manufacture may comprise any information bearing medium known in the art.
- FIGS. 6A , 7 A, and 9 A describes specific operations occurring in a particular order. In alternative implementations, certain of the logic operations may be performed in a different order, modified or removed. Moreover, operations may be added to the above described logic and still conform to the described implementations. Further, operations described herein may occur sequentially or certain operations may be processed in parallel, or operations described as performed by a single process may be performed by distributed processes.
- FIGS. 6A , 7 A, and 9 A may be implemented in software, hardware, programmable and non-programmable gate array logic or in some combination of hardware, software, or gate array logic.
- FIG. 10 illustrates an architecture of a computer system that may be used in accordance with certain implementations of the invention.
- client computer 100 may implement computer architecture 1000 .
- the computer architecture 1000 may implement a processor 1002 (e.g., a microprocessor), a memory 1004 (e.g., a volatile memory device), and storage 1010 (e.g., a non-volatile storage area, such as magnetic disk drives, optical disk drives, a tape drive, etc.).
- An operating system 1005 may execute in memory 1004 .
- the storage 1010 may comprise an internal storage device or an attached or network accessible storage.
- Computer programs 1006 , in storage 1010 may be loaded into the memory 1004 and executed by the processor 1002 in a manner known in the art.
- the architecture further includes a network card 1008 to enable communication with a network.
- An input device 1012 is used to provide user input to the processor 1002 , and may include a keyboard, mouse, pen-stylus, microphone, touch sensitive display screen, or any other activation or input mechanism known in the art.
- An output device 1014 is capable of rendering information from the processor 1002 , or other component, such as a display monitor, printer, storage, etc.
- the computer architecture 1000 of the computer systems may include fewer components than illustrated, additional components not illustrated herein, or some combination of the components illustrated and additional components.
- the computer architecture 1000 may comprise any computing device known in the art, such as a mainframe, server, personal computer, workstation, laptop, handheld computer, telephony device, network appliance, virtualization device, storage controller, etc. Any processor 1002 and operating system 1005 known in the art may be used.
Abstract
Description
Claims (24)
Priority Applications (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US10/764,772 US7293005B2 (en) | 2004-01-26 | 2004-01-26 | Pipelined architecture for global analysis and index building |
US11/840,881 US7783626B2 (en) | 2004-01-26 | 2007-08-17 | Pipelined architecture for global analysis and index building |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US10/764,772 US7293005B2 (en) | 2004-01-26 | 2004-01-26 | Pipelined architecture for global analysis and index building |
Related Child Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US11/840,881 Continuation US7783626B2 (en) | 2004-01-26 | 2007-08-17 | Pipelined architecture for global analysis and index building |
Publications (2)
Publication Number | Publication Date |
---|---|
US20050165718A1 US20050165718A1 (en) | 2005-07-28 |
US7293005B2 true US7293005B2 (en) | 2007-11-06 |
Family
ID=34795343
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US10/764,772 Active - Reinstated 2025-04-15 US7293005B2 (en) | 2004-01-26 | 2004-01-26 | Pipelined architecture for global analysis and index building |
US11/840,881 Expired - Fee Related US7783626B2 (en) | 2004-01-26 | 2007-08-17 | Pipelined architecture for global analysis and index building |
Family Applications After (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US11/840,881 Expired - Fee Related US7783626B2 (en) | 2004-01-26 | 2007-08-17 | Pipelined architecture for global analysis and index building |
Country Status (1)
Country | Link |
---|---|
US (2) | US7293005B2 (en) |
Cited By (15)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20050171965A1 (en) * | 2002-10-10 | 2005-08-04 | Fujitsu Limited | Contents reuse management apparatus and contents reuse support apparatus |
US20070043743A1 (en) * | 2005-08-22 | 2007-02-22 | Chen Yao-Ching S | Packing nodes into records to store XML XQuery data model and other hierarchically structured data |
US20070043686A1 (en) * | 2005-08-22 | 2007-02-22 | International Business Machines Corporation | Xml sub-document versioning method in xml databases using record storages |
US20080005092A1 (en) * | 2006-06-30 | 2008-01-03 | Microsoft Corporation | Creating adaptive, deferred, incremental indexes |
US20090299621A1 (en) * | 2004-01-29 | 2009-12-03 | Xanavi Informatics Corporation | Automobile navigation apparatus |
US7634517B1 (en) * | 2006-02-10 | 2009-12-15 | Google Inc. | System and method for dynamically updating a document repository without interrupting concurrent querying |
US7743060B2 (en) | 2004-01-26 | 2010-06-22 | International Business Machines Corporation | Architecture for an indexer |
US20100174719A1 (en) * | 2009-01-06 | 2010-07-08 | Jorge Alegre Vilches | System, method, and program product for personalization of an open network search engine |
US7937413B2 (en) | 2004-05-04 | 2011-05-03 | International Business Machines Corporation | Self-adaptive prefix encoding for stable node identifiers |
US20110113466A1 (en) * | 2009-11-06 | 2011-05-12 | Symantec Corporation | Systems and Methods for Processing and Managing Object-Related Data for use by a Plurality of Applications |
US7949638B1 (en) * | 2006-10-31 | 2011-05-24 | Netapp, Inc. | System and method for nearly in-band search indexing |
US20110137886A1 (en) * | 2009-12-08 | 2011-06-09 | Microsoft Corporation | Data-Centric Search Engine Architecture |
US8271498B2 (en) | 2004-09-24 | 2012-09-18 | International Business Machines Corporation | Searching documents for ranges of numeric values |
US8285724B2 (en) | 2004-01-26 | 2012-10-09 | International Business Machines Corporation | System and program for handling anchor text |
US8572125B2 (en) | 2005-08-22 | 2013-10-29 | International Business Machines Corporation | Scalable storage schemes for native XML column data of relational tables |
Families Citing this family (16)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8296304B2 (en) | 2004-01-26 | 2012-10-23 | International Business Machines Corporation | Method, system, and program for handling redirects in a search engine |
US8417693B2 (en) | 2005-07-14 | 2013-04-09 | International Business Machines Corporation | Enforcing native access control to indexed documents |
CA2545232A1 (en) * | 2005-07-29 | 2007-01-29 | Cognos Incorporated | Method and system for creating a taxonomy from business-oriented metadata content |
CA2545237A1 (en) * | 2005-07-29 | 2007-01-29 | Cognos Incorporated | Method and system for managing exemplar terms database for business-oriented metadata content |
US7499919B2 (en) * | 2005-09-21 | 2009-03-03 | Microsoft Corporation | Ranking functions using document usage statistics |
US20080027971A1 (en) * | 2006-07-28 | 2008-01-31 | Craig Statchuk | Method and system for populating an index corpus to a search engine |
US7792826B2 (en) * | 2007-05-29 | 2010-09-07 | International Business Machines Corporation | Method and system for providing ranked search results |
US9348912B2 (en) | 2007-10-18 | 2016-05-24 | Microsoft Technology Licensing, Llc | Document length as a static relevance feature for ranking search results |
US20090125516A1 (en) * | 2007-11-14 | 2009-05-14 | Uri Schonfeld | System and method for detecting duplicate content items |
US20090192987A1 (en) * | 2008-01-30 | 2009-07-30 | International Business Machines Corporation | Searching navigational pages in an intranet |
US8386314B2 (en) | 2008-12-11 | 2013-02-26 | Accenture Global Services Limited | Online ad detection and ad campaign analysis |
US9947017B2 (en) | 2009-03-03 | 2018-04-17 | Accenture Global Services Limited | Online content campaign classification |
US9940631B2 (en) | 2009-03-03 | 2018-04-10 | Accenture Global Services Limited | Online content collection |
US8650195B2 (en) * | 2010-03-26 | 2014-02-11 | Palle M Pedersen | Region based information retrieval system |
GB2482128A (en) * | 2010-07-19 | 2012-01-25 | Quantum Corp | Delta chunks and delta hashes |
US9495462B2 (en) | 2012-01-27 | 2016-11-15 | Microsoft Technology Licensing, Llc | Re-ranking search results |
Citations (92)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4965763A (en) | 1987-03-03 | 1990-10-23 | International Business Machines Corporation | Computer method for automatic extraction of commonly specified information from business correspondence |
US5187790A (en) | 1989-06-29 | 1993-02-16 | Digital Equipment Corporation | Server impersonation of client processes in an object based computer operating system |
US5265221A (en) | 1989-03-20 | 1993-11-23 | Tandem Computers | Access restriction facility method and apparatus |
US5287496A (en) | 1991-02-25 | 1994-02-15 | International Business Machines Corporation | Dynamic, finite versioning for concurrent transaction and query processing |
US5297039A (en) | 1991-01-30 | 1994-03-22 | Mitsubishi Denki Kabushiki Kaisha | Text search system for locating on the basis of keyword matching and keyword relationship matching |
US5574906A (en) | 1994-10-24 | 1996-11-12 | International Business Machines Corporation | System and method for reducing storage requirement in backup subsystems utilizing segmented compression and differencing |
US5638543A (en) | 1993-06-03 | 1997-06-10 | Xerox Corporation | Method and apparatus for automatic document summarization |
US5685003A (en) | 1992-12-23 | 1997-11-04 | Microsoft Corporation | Method and system for automatically indexing data in a document using a fresh index table |
US5701469A (en) * | 1995-06-07 | 1997-12-23 | Microsoft Corporation | Method and system for generating accurate search results using a content-index |
US5708825A (en) | 1995-05-26 | 1998-01-13 | Iconovex Corporation | Automatic summary page creation and hyperlink generation |
US5721938A (en) | 1995-06-07 | 1998-02-24 | Stuckey; Barbara K. | Method and device for parsing and analyzing natural language sentences and text |
US5721939A (en) | 1995-08-03 | 1998-02-24 | Xerox Corporation | Method and apparatus for tokenizing text |
US5724033A (en) | 1996-08-09 | 1998-03-03 | Digital Equipment Corporation | Method for encoding delta values |
US5729730A (en) | 1995-03-28 | 1998-03-17 | Dex Information Systems, Inc. | Method and apparatus for improved information storage and retrieval system |
US5745900A (en) | 1996-08-09 | 1998-04-28 | Digital Equipment Corporation | Method for indexing duplicate database records using a full-record fingerprint |
US5745890A (en) | 1996-08-09 | 1998-04-28 | Digital Equipment Corporation | Sequential searching of a database index using constraints on word-location pairs |
US5745906A (en) | 1995-11-14 | 1998-04-28 | Deltatech Research, Inc. | Method and apparatus for merging delta streams to reconstruct a computer file |
US5745899A (en) | 1996-08-09 | 1998-04-28 | Digital Equipment Corporation | Method for indexing information of a database |
US5745889A (en) | 1996-08-09 | 1998-04-28 | Digital Equipment Corporation | Method for parsing information of databases records using word-location pairs and metaword-location pairs |
US5745894A (en) | 1996-08-09 | 1998-04-28 | Digital Equipment Corporation | Method for generating and searching a range-based index of word-locations |
US5745898A (en) | 1996-08-09 | 1998-04-28 | Digital Equipment Corporation | Method for generating a compressed index of information of records of a database |
US5745904A (en) | 1996-01-12 | 1998-04-28 | Microsoft Corporation | Buffered table user index |
US5765158A (en) | 1996-08-09 | 1998-06-09 | Digital Equipment Corporation | Method for sampling a compressed index to create a summarized index |
US5765150A (en) | 1996-08-09 | 1998-06-09 | Digital Equipment Corporation | Method for statistically projecting the ranking of information |
US5765149A (en) | 1996-08-09 | 1998-06-09 | Digital Equipment Corporation | Modified collection frequency ranking method |
US5765168A (en) | 1996-08-09 | 1998-06-09 | Digital Equipment Corporation | Method for maintaining an index |
US5787435A (en) | 1996-08-09 | 1998-07-28 | Digital Equipment Corporation | Method for mapping an index of a database into an array of files |
US5797008A (en) | 1996-08-09 | 1998-08-18 | Digital Equipment Corporation | Memory storing an integrated index of database records |
US5809502A (en) | 1996-08-09 | 1998-09-15 | Digital Equipment Corporation | Object-oriented interface for an index |
US5832519A (en) | 1990-12-20 | 1998-11-03 | Bell Communications Research, Inc. | System and method for updating database values without the use of locking operations |
US5832480A (en) | 1996-07-12 | 1998-11-03 | International Business Machines Corporation | Using canonical forms to develop a dictionary of names in a text |
US5832500A (en) | 1996-08-09 | 1998-11-03 | Digital Equipment Corporation | Method for searching an index |
US5852820A (en) | 1996-08-09 | 1998-12-22 | Digital Equipment Corporation | Method for optimizing entries for searching an index |
US5862325A (en) | 1996-02-29 | 1999-01-19 | Intermind Corporation | Computer-based communication system and method using metadata defining a control structure |
US5864863A (en) | 1996-08-09 | 1999-01-26 | Digital Equipment Corporation | Method for parsing, indexing and searching world-wide-web pages |
US5873097A (en) | 1993-05-12 | 1999-02-16 | Apple Computer, Inc. | Update mechanism for computer storage container manager |
US5884305A (en) | 1997-06-13 | 1999-03-16 | International Business Machines Corporation | System and method for data mining from relational data by sieving through iterated relational reinforcement |
US5890103A (en) | 1995-07-19 | 1999-03-30 | Lernout & Hauspie Speech Products N.V. | Method and apparatus for improved tokenization of natural language text |
US5893119A (en) | 1995-11-17 | 1999-04-06 | Deltatech Research, Inc. | Computer apparatus and method for merging system deltas |
US5903891A (en) | 1997-02-25 | 1999-05-11 | Hewlett-Packard Company | Hierarchial information processes that share intermediate data and formulate contract data |
US5903646A (en) | 1994-09-02 | 1999-05-11 | Rackman; Michael I. | Access control system for litigation document production |
US5909677A (en) | 1996-06-18 | 1999-06-01 | Digital Equipment Corporation | Method for determining the resemblance of documents |
US5920859A (en) | 1997-02-05 | 1999-07-06 | Idd Enterprises, L.P. | Hypertext document retrieval system and method |
US5933822A (en) | 1997-07-22 | 1999-08-03 | Microsoft Corporation | Apparatus and methods for an information retrieval system that employs natural language processing of search results to improve overall precision |
US5963940A (en) | 1995-08-16 | 1999-10-05 | Syracuse University | Natural language information retrieval system and method |
US5974412A (en) | 1997-09-24 | 1999-10-26 | Sapient Health Network | Intelligent query system for automatically indexing information in a database and automatically categorizing users |
US5995980A (en) | 1996-07-23 | 1999-11-30 | Olson; Jack E. | System and method for database update replication |
US6005503A (en) | 1998-02-27 | 1999-12-21 | Digital Equipment Corporation | Method for encoding and decoding a list of variable size integers to reduce branch mispredicts |
US6016501A (en) | 1998-03-18 | 2000-01-18 | Bmc Software | Enterprise data movement system and method which performs data load and changed data propagation operations |
US6026413A (en) | 1997-08-01 | 2000-02-15 | International Business Machines Corporation | Determining how changes to underlying data affect cached objects |
US6026388A (en) | 1995-08-16 | 2000-02-15 | Textwise, Llc | User interface and other enhancements for natural language information retrieval system and method |
US6029165A (en) * | 1997-11-12 | 2000-02-22 | Arthur Andersen Llp | Search and retrieval information system and method |
US6035268A (en) | 1996-08-22 | 2000-03-07 | Lernout & Hauspie Speech Products N.V. | Method and apparatus for breaking words in a stream of text |
US6078916A (en) | 1997-08-01 | 2000-06-20 | Culliss; Gary | Method for organizing information |
US6078914A (en) | 1996-12-09 | 2000-06-20 | Open Text Corporation | Natural language meta-search system and method |
US6088694A (en) | 1998-03-31 | 2000-07-11 | International Business Machines Corporation | Continuous availability and efficient backup for externally referenced objects |
US6119124A (en) | 1998-03-26 | 2000-09-12 | Digital Equipment Corporation | Method for clustering closely resembling data objects |
US6182121B1 (en) | 1995-02-03 | 2001-01-30 | Enfish, Inc. | Method and apparatus for a physical storage architecture having an improved information storage and retrieval system for a shared file environment |
US6182062B1 (en) | 1986-03-26 | 2001-01-30 | Hitachi, Ltd. | Knowledge based information retrieval system |
US6192258B1 (en) | 1997-05-23 | 2001-02-20 | Access Co., Ltd. | Mobile communication device with a rotary push switch |
US6192333B1 (en) | 1998-05-12 | 2001-02-20 | Microsoft Corporation | System for creating a dictionary |
US6205451B1 (en) | 1998-05-22 | 2001-03-20 | Oracle Corporation | Method and apparatus for incremental refresh of summary tables in a database system |
US6205456B1 (en) | 1997-01-17 | 2001-03-20 | Fujitsu Limited | Summarization apparatus and method |
US6216175B1 (en) | 1998-06-08 | 2001-04-10 | Microsoft Corporation | Method for upgrading copies of an original file with same update data after normalizing differences between copies created during respective original installations |
US6233571B1 (en) | 1993-06-14 | 2001-05-15 | Daniel Egger | Method and apparatus for indexing, searching and displaying data |
US6243718B1 (en) | 1997-10-31 | 2001-06-05 | Oracle Corporation | Building indexes on columns containing large objects |
US6243713B1 (en) * | 1998-08-24 | 2001-06-05 | Excalibur Technologies Corp. | Multimedia document retrieval by application of multimedia queries to a unified index of multimedia data for a plurality of multimedia data types |
US6269361B1 (en) | 1999-05-28 | 2001-07-31 | Goto.Com | System and method for influencing a position on a search result list generated by a computer network search engine |
US6278992B1 (en) | 1997-03-19 | 2001-08-21 | John Andrew Curtis | Search engine using indexing method for storing and retrieving data |
US6285999B1 (en) | 1997-01-10 | 2001-09-04 | The Board Of Trustees Of The Leland Stanford Junior University | Method for node ranking in a linked database |
US6295529B1 (en) | 1998-12-24 | 2001-09-25 | Microsoft Corporation | Method and apparatus for indentifying clauses having predetermined characteristics indicative of usefulness in determining relationships between different texts |
US6308179B1 (en) | 1998-08-31 | 2001-10-23 | Xerox Corporation | User level controlled mechanism inter-positioned in a read/write path of a property-based document management system |
US6324566B1 (en) | 1998-05-15 | 2001-11-27 | International Business Machines Corporation | Internet advertising via bookmark set based on client specific information |
US6336117B1 (en) | 1999-04-30 | 2002-01-01 | International Business Machines Corporation | Content-indexing search system and method providing search results consistent with content filtering and blocking policies implemented in a blocking engine |
US6339772B1 (en) | 1999-07-06 | 2002-01-15 | Compaq Computer Corporation | System and method for performing database operations on a continuous stream of tuples |
US6374268B1 (en) | 1998-04-14 | 2002-04-16 | Hewlett-Packard Company | Methods and systems for an incremental file system |
US6381602B1 (en) | 1999-01-26 | 2002-04-30 | Microsoft Corporation | Enforcing access control on resources at a location other than the source location |
US6385616B1 (en) | 1998-08-29 | 2002-05-07 | International Computers Limited | Time-versioned data storage mechanism |
US6418433B1 (en) | 1999-01-28 | 2002-07-09 | International Business Machines Corporation | System and method for focussed web crawling |
US6421655B1 (en) | 1999-06-04 | 2002-07-16 | Microsoft Corporation | Computer-based representations and reasoning methods for engaging users in goal-oriented conversations |
US6463439B1 (en) | 1999-07-15 | 2002-10-08 | American Management Systems, Incorporated | System for accessing database tables mapped into memory for high performance data retrieval |
US6519593B1 (en) | 1998-12-15 | 2003-02-11 | Yossi Matias | Efficient bundle sorting |
US6519597B1 (en) | 1998-10-08 | 2003-02-11 | International Business Machines Corporation | Method and apparatus for indexing structured documents with rich data types |
US6519592B1 (en) | 1999-03-31 | 2003-02-11 | Verizon Laboratories Inc. | Method for using data from a data query cache |
US6542906B2 (en) | 1998-08-17 | 2003-04-01 | Connected Place Ltd. | Method of and an apparatus for merging a sequence of delta files |
US6547829B1 (en) | 1999-06-30 | 2003-04-15 | Microsoft Corporation | Method and system for detecting duplicate documents in web crawls |
US6553385B2 (en) | 1998-09-01 | 2003-04-22 | International Business Machines Corporation | Architecture of a framework for information extraction from natural language documents |
US6567804B1 (en) | 2000-06-27 | 2003-05-20 | Ncr Corporation | Shared computation of user-defined metrics in an on-line analytic processing system |
US6578032B1 (en) | 2000-06-28 | 2003-06-10 | Microsoft Corporation | Method and system for performing phrase/word clustering and cluster merging |
US6584458B1 (en) | 1999-02-19 | 2003-06-24 | Novell, Inc. | Method and apparatuses for creating a full text index accommodating child words |
US6594682B2 (en) * | 1997-10-28 | 2003-07-15 | Microsoft Corporation | Client-side system for scheduling delivery of web content and locally managing the web content |
US6622211B2 (en) * | 2001-08-15 | 2003-09-16 | Ip-First, L.L.C. | Virtual set cache that redirects store data to correct virtual set to avoid virtual set store miss penalty |
Family Cites Families (92)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5423032A (en) | 1991-10-31 | 1995-06-06 | International Business Machines Corporation | Method for extracting multi-word technical terms from text |
JP3547098B2 (en) | 1994-06-06 | 2004-07-28 | トヨタ自動車株式会社 | Thermal spraying method, method for manufacturing sliding member having sprayed layer as sliding surface, piston, and method for manufacturing piston |
JP3441306B2 (en) | 1995-09-12 | 2003-09-02 | 株式会社東芝 | Client device, message transmission method, server device, page processing method, and relay server device |
US5778378A (en) * | 1996-04-30 | 1998-07-07 | International Business Machines Corporation | Object oriented information retrieval framework mechanism |
JP3108015B2 (en) | 1996-05-22 | 2000-11-13 | 松下電器産業株式会社 | Hypertext search device |
JP3061765B2 (en) | 1996-05-23 | 2000-07-10 | ゼロックス コーポレイション | Computer-based document processing method |
US5924091A (en) | 1996-08-28 | 1999-07-13 | Sybase, Inc. | Database system with improved methods for radix sorting |
US7031954B1 (en) | 1997-09-10 | 2006-04-18 | Google, Inc. | Document retrieval system with access control |
AU4196299A (en) | 1998-05-23 | 1999-12-13 | Eolas Technologies, Incorporated | Identification of features of multi-dimensional image data in hypermedia systems |
US7024623B2 (en) | 1998-06-17 | 2006-04-04 | Microsoft Corporation | Method and system for placing an insertion point in an electronic document |
CA2256934C (en) | 1998-12-23 | 2002-04-02 | Hamid Bacha | System for electronic repository of data enforcing access control on data retrieval |
US6438535B1 (en) | 1999-03-18 | 2002-08-20 | Lockheed Martin Corporation | Relational database method for accessing information useful for the manufacture of, to interconnect nodes in, to repair and to maintain product and system units |
US6631496B1 (en) * | 1999-03-22 | 2003-10-07 | Nec Corporation | System for personalizing, organizing and managing web information |
US7472349B1 (en) | 1999-06-01 | 2008-12-30 | Oracle International Corporation | Dynamic services infrastructure for allowing programmatic access to internet and other resources |
US6631369B1 (en) * | 1999-06-30 | 2003-10-07 | Microsoft Corporation | Method and system for incremental web crawling |
US7065784B2 (en) | 1999-07-26 | 2006-06-20 | Microsoft Corporation | Systems and methods for integrating access control with a namespace |
US6754873B1 (en) * | 1999-09-20 | 2004-06-22 | Google Inc. | Techniques for finding related hyperlinked documents using link-based analysis |
US8914361B2 (en) * | 1999-09-22 | 2014-12-16 | Google Inc. | Methods and systems for determining a meaning of a document to match the document to content |
JP2001134575A (en) * | 1999-10-29 | 2001-05-18 | Internatl Business Mach Corp <Ibm> | Method and system for detecting frequently appearing pattern |
US6507846B1 (en) | 1999-11-09 | 2003-01-14 | Joint Technology Corporation | Indexing databases for efficient relational querying |
US6665657B1 (en) * | 1999-11-19 | 2003-12-16 | Niku Corporation | Method and system for cross browsing of various multimedia data sources in a searchable repository |
US6839702B1 (en) | 1999-12-15 | 2005-01-04 | Google Inc. | Systems and methods for highlighting search results |
US6725214B2 (en) | 2000-01-14 | 2004-04-20 | Dotnsf | Apparatus and method to support management of uniform resource locators and/or contents of database servers |
US6678409B1 (en) * | 2000-01-14 | 2004-01-13 | Microsoft Corporation | Parameterized word segmentation of unsegmented text |
US6615209B1 (en) * | 2000-02-22 | 2003-09-02 | Google, Inc. | Detecting query-specific duplicate documents |
US20020032677A1 (en) | 2000-03-01 | 2002-03-14 | Jeff Morgenthaler | Methods for creating, editing, and updating searchable graphical database and databases of graphical images and information and displaying graphical images from a searchable graphical database or databases in a sequential or slide show format |
US6985948B2 (en) * | 2000-03-29 | 2006-01-10 | Fujitsu Limited | User's right information and keywords input based search query generating means method and apparatus for searching a file |
US6658406B1 (en) * | 2000-03-29 | 2003-12-02 | Microsoft Corporation | Method for selecting terms from vocabularies in a category-based system |
FR2807537B1 (en) | 2000-04-06 | 2003-10-17 | France Telecom | HYPERMEDIA RESOURCE SEARCH ENGINE AND INDEXING METHOD THEREOF |
US7173912B2 (en) | 2000-05-05 | 2007-02-06 | Fujitsu Limited | Method and system for modeling and advertising asymmetric topology of a node in a transport network |
US6850979B1 (en) | 2000-05-09 | 2005-02-01 | Sun Microsystems, Inc. | Message gates in a distributed computing environment |
US6789077B1 (en) | 2000-05-09 | 2004-09-07 | Sun Microsystems, Inc. | Mechanism and apparatus for web-based searching of URI-addressable repositories in a distributed computing environment |
US6643650B1 (en) * | 2000-05-09 | 2003-11-04 | Sun Microsystems, Inc. | Mechanism and apparatus for using messages to look up documents stored in spaces in a distributed computing environment |
US6868447B1 (en) | 2000-05-09 | 2005-03-15 | Sun Microsystems, Inc. | Mechanism and apparatus for returning results of services in a distributed computing environment |
US6810375B1 (en) | 2000-05-31 | 2004-10-26 | Hapax Limited | Method for segmentation of text |
US20010049671A1 (en) | 2000-06-05 | 2001-12-06 | Joerg Werner B. | e-Stract: a process for knowledge-based retrieval of electronic information |
SE517496C2 (en) | 2000-06-22 | 2002-06-11 | Hapax Information Systems Ab | Method and system for information extraction |
US6839665B1 (en) | 2000-06-27 | 2005-01-04 | Text Analysis International, Inc. | Automated generation of text analysis systems |
US6865575B1 (en) | 2000-07-06 | 2005-03-08 | Google, Inc. | Methods and apparatus for using a modified index to provide search results in response to an ambiguous search query |
US20030217052A1 (en) | 2000-08-24 | 2003-11-20 | Celebros Ltd. | Search engine method and apparatus |
US6701317B1 (en) * | 2000-09-19 | 2004-03-02 | Overture Services, Inc. | Web page connectivity server construction |
US6633872B2 (en) * | 2000-12-18 | 2003-10-14 | International Business Machines Corporation | Extendible access control for lightweight directory access protocol |
US20030028564A1 (en) | 2000-12-19 | 2003-02-06 | Lingomotors, Inc. | Natural language method and system for matching and ranking documents in terms of semantic relatedness |
US6907423B2 (en) * | 2001-01-04 | 2005-06-14 | Sun Microsystems, Inc. | Search engine interface and method of controlling client searches |
US7356530B2 (en) | 2001-01-10 | 2008-04-08 | Looksmart, Ltd. | Systems and methods of retrieving relevant information |
US6766316B2 (en) | 2001-01-18 | 2004-07-20 | Science Applications International Corporation | Method and system of ranking and clustering for document indexing and retrieval |
US6658423B1 (en) * | 2001-01-24 | 2003-12-02 | Google, Inc. | Detecting duplicate and near-duplicate files |
US20020165707A1 (en) | 2001-02-26 | 2002-11-07 | Call Charles G. | Methods and apparatus for storing and processing natural language text data as a sequence of fixed length integers |
SE520533C2 (en) * | 2001-03-13 | 2003-07-22 | Picsearch Ab | Method, computer programs and systems for indexing digitized devices |
US6904454B2 (en) * | 2001-03-21 | 2005-06-07 | Nokia Corporation | Method and apparatus for content repository with versioning and data modeling |
US7509492B2 (en) | 2001-03-27 | 2009-03-24 | Microsoft Corporation | Distributed scalable cryptographic access control |
US20020169770A1 (en) | 2001-04-27 | 2002-11-14 | Kim Brian Seong-Gon | Apparatus and method that categorize a collection of documents into a hierarchy of categories that are defined by the collection of documents |
US6990634B2 (en) | 2001-04-27 | 2006-01-24 | The United States Of America As Represented By The National Security Agency | Method of summarizing text by sentence extraction |
US6999971B2 (en) | 2001-05-08 | 2006-02-14 | Verity, Inc. | Apparatus and method for parametric group processing |
US7299219B2 (en) * | 2001-05-08 | 2007-11-20 | The Johns Hopkins University | High refresh-rate retrieval of freshly published content using distributed crawling |
WO2002103578A1 (en) | 2001-06-19 | 2002-12-27 | Biozak, Inc. | Dynamic search engine and database |
JP3557605B2 (en) | 2001-09-19 | 2004-08-25 | インターナショナル・ビジネス・マシーンズ・コーポレーション | Sentence segmentation method, sentence segmentation processing device using the same, machine translation device, and program |
US6877136B2 (en) | 2001-10-26 | 2005-04-05 | United Services Automobile Association (Usaa) | System and method of providing electronic access to one or more documents |
US6763362B2 (en) * | 2001-11-30 | 2004-07-13 | Micron Technology, Inc. | Method and system for updating a search engine |
US20030135499A1 (en) | 2002-01-14 | 2003-07-17 | Schirmer Andrew Lewis | System and method for mining a user's electronic mail messages to determine the user's affinities |
US6829606B2 (en) | 2002-02-14 | 2004-12-07 | Infoglide Software Corporation | Similarity search engine for use with relational databases |
US7949648B2 (en) | 2002-02-26 | 2011-05-24 | Soren Alain Mortensen | Compiling and accessing subject-specific information from a computer network |
US7243301B2 (en) | 2002-04-10 | 2007-07-10 | Microsoft Corporation | Common annotation framework |
US20030225763A1 (en) | 2002-04-15 | 2003-12-04 | Microsoft Corporation | Self-improving system and method for classifying pages on the world wide web |
US7080091B2 (en) | 2002-05-09 | 2006-07-18 | Oracle International Corporation | Inverted index system and method for numeric attributes |
US7096208B2 (en) | 2002-06-10 | 2006-08-22 | Microsoft Corporation | Large margin perceptrons for document categorization |
US7051023B2 (en) * | 2003-04-04 | 2006-05-23 | Yahoo! Inc. | Systems and methods for generating concept units from search queries |
US7197497B2 (en) * | 2003-04-25 | 2007-03-27 | Overture Services, Inc. | Method and apparatus for machine learning a document relevance function |
US20040243560A1 (en) | 2003-05-30 | 2004-12-02 | International Business Machines Corporation | System, method and computer program product for performing unstructured information management and automatic text analysis, including an annotation inverted file system facilitating indexing and searching |
US7146361B2 (en) | 2003-05-30 | 2006-12-05 | International Business Machines Corporation | System, method and computer program product for performing unstructured information management and automatic text analysis, including a search operator functioning as a Weighted AND (WAND) |
US7139752B2 (en) | 2003-05-30 | 2006-11-21 | International Business Machines Corporation | System, method and computer program product for performing unstructured information management and automatic text analysis, and providing multiple document views derived from different document tokenizations |
US20040243554A1 (en) | 2003-05-30 | 2004-12-02 | International Business Machines Corporation | System, method and computer program product for performing unstructured information management and automatic text analysis |
US20040243556A1 (en) | 2003-05-30 | 2004-12-02 | International Business Machines Corporation | System, method and computer program product for performing unstructured information management and automatic text analysis, and including a document common analysis system (CAS) |
US7188254B2 (en) | 2003-08-20 | 2007-03-06 | Microsoft Corporation | Peer-to-peer authorization method |
US6934634B1 (en) | 2003-09-22 | 2005-08-23 | Google Inc. | Address geocoding |
US6906920B1 (en) | 2003-09-29 | 2005-06-14 | Google Inc. | Drive cooling baffle |
US6870095B1 (en) | 2003-09-29 | 2005-03-22 | Google Inc. | Cable management for rack mounted computing system |
US6845009B1 (en) | 2003-09-30 | 2005-01-18 | Google Inc. | Cooling baffle and fan mount apparatus |
US7620624B2 (en) * | 2003-10-17 | 2009-11-17 | Yahoo! Inc. | Systems and methods for indexing content for fast and scalable retrieval |
US7849063B2 (en) * | 2003-10-17 | 2010-12-07 | Yahoo! Inc. | Systems and methods for indexing content for fast and scalable retrieval |
US20050149499A1 (en) | 2003-12-30 | 2005-07-07 | Google Inc., A Delaware Corporation | Systems and methods for improving search quality |
US8150824B2 (en) | 2003-12-31 | 2012-04-03 | Google Inc. | Systems and methods for direct navigation to specific portion of target document |
US20050149851A1 (en) | 2003-12-31 | 2005-07-07 | Google Inc. | Generating hyperlinks and anchor text in HTML and non-HTML documents |
US7499913B2 (en) | 2004-01-26 | 2009-03-03 | International Business Machines Corporation | Method for handling anchor text |
US7424467B2 (en) | 2004-01-26 | 2008-09-09 | International Business Machines Corporation | Architecture for an indexer with fixed width sort and variable width sort |
US8296304B2 (en) | 2004-01-26 | 2012-10-23 | International Business Machines Corporation | Method, system, and program for handling redirects in a search engine |
US7318075B2 (en) | 2004-02-06 | 2008-01-08 | Microsoft Corporation | Enhanced tabular data stream protocol |
US8688143B2 (en) | 2004-08-24 | 2014-04-01 | Qualcomm Incorporated | Location based service (LBS) system and method for creating a social network |
US7461064B2 (en) | 2004-09-24 | 2008-12-02 | International Buiness Machines Corporation | Method for searching documents for ranges of numeric values |
US20060129538A1 (en) | 2004-12-14 | 2006-06-15 | Andrea Baader | Text search quality by exploiting organizational information |
US8417693B2 (en) | 2005-07-14 | 2013-04-09 | International Business Machines Corporation | Enforcing native access control to indexed documents |
US7840542B2 (en) | 2006-02-06 | 2010-11-23 | International Business Machines Corporation | Method and system for controlling access to semantic web statements |
-
2004
- 2004-01-26 US US10/764,772 patent/US7293005B2/en active Active - Reinstated
-
2007
- 2007-08-17 US US11/840,881 patent/US7783626B2/en not_active Expired - Fee Related
Patent Citations (104)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6182062B1 (en) | 1986-03-26 | 2001-01-30 | Hitachi, Ltd. | Knowledge based information retrieval system |
US4965763A (en) | 1987-03-03 | 1990-10-23 | International Business Machines Corporation | Computer method for automatic extraction of commonly specified information from business correspondence |
US5265221A (en) | 1989-03-20 | 1993-11-23 | Tandem Computers | Access restriction facility method and apparatus |
US5187790A (en) | 1989-06-29 | 1993-02-16 | Digital Equipment Corporation | Server impersonation of client processes in an object based computer operating system |
US5832519A (en) | 1990-12-20 | 1998-11-03 | Bell Communications Research, Inc. | System and method for updating database values without the use of locking operations |
US5297039A (en) | 1991-01-30 | 1994-03-22 | Mitsubishi Denki Kabushiki Kaisha | Text search system for locating on the basis of keyword matching and keyword relationship matching |
US5287496A (en) | 1991-02-25 | 1994-02-15 | International Business Machines Corporation | Dynamic, finite versioning for concurrent transaction and query processing |
US5685003A (en) | 1992-12-23 | 1997-11-04 | Microsoft Corporation | Method and system for automatically indexing data in a document using a fresh index table |
US5873097A (en) | 1993-05-12 | 1999-02-16 | Apple Computer, Inc. | Update mechanism for computer storage container manager |
US5638543A (en) | 1993-06-03 | 1997-06-10 | Xerox Corporation | Method and apparatus for automatic document summarization |
US6233571B1 (en) | 1993-06-14 | 2001-05-15 | Daniel Egger | Method and apparatus for indexing, searching and displaying data |
US5903646A (en) | 1994-09-02 | 1999-05-11 | Rackman; Michael I. | Access control system for litigation document production |
US5574906A (en) | 1994-10-24 | 1996-11-12 | International Business Machines Corporation | System and method for reducing storage requirement in backup subsystems utilizing segmented compression and differencing |
US6182121B1 (en) | 1995-02-03 | 2001-01-30 | Enfish, Inc. | Method and apparatus for a physical storage architecture having an improved information storage and retrieval system for a shared file environment |
US5729730A (en) | 1995-03-28 | 1998-03-17 | Dex Information Systems, Inc. | Method and apparatus for improved information storage and retrieval system |
US5708825A (en) | 1995-05-26 | 1998-01-13 | Iconovex Corporation | Automatic summary page creation and hyperlink generation |
US5721938A (en) | 1995-06-07 | 1998-02-24 | Stuckey; Barbara K. | Method and device for parsing and analyzing natural language sentences and text |
US5701469A (en) * | 1995-06-07 | 1997-12-23 | Microsoft Corporation | Method and system for generating accurate search results using a content-index |
US5890103A (en) | 1995-07-19 | 1999-03-30 | Lernout & Hauspie Speech Products N.V. | Method and apparatus for improved tokenization of natural language text |
US5721939A (en) | 1995-08-03 | 1998-02-24 | Xerox Corporation | Method and apparatus for tokenizing text |
US5963940A (en) | 1995-08-16 | 1999-10-05 | Syracuse University | Natural language information retrieval system and method |
US6026388A (en) | 1995-08-16 | 2000-02-15 | Textwise, Llc | User interface and other enhancements for natural language information retrieval system and method |
US5745906A (en) | 1995-11-14 | 1998-04-28 | Deltatech Research, Inc. | Method and apparatus for merging delta streams to reconstruct a computer file |
US5893119A (en) | 1995-11-17 | 1999-04-06 | Deltatech Research, Inc. | Computer apparatus and method for merging system deltas |
US5745904A (en) | 1996-01-12 | 1998-04-28 | Microsoft Corporation | Buffered table user index |
US5862325A (en) | 1996-02-29 | 1999-01-19 | Intermind Corporation | Computer-based communication system and method using metadata defining a control structure |
US5909677A (en) | 1996-06-18 | 1999-06-01 | Digital Equipment Corporation | Method for determining the resemblance of documents |
US5832480A (en) | 1996-07-12 | 1998-11-03 | International Business Machines Corporation | Using canonical forms to develop a dictionary of names in a text |
US5995980A (en) | 1996-07-23 | 1999-11-30 | Olson; Jack E. | System and method for database update replication |
US5745900A (en) | 1996-08-09 | 1998-04-28 | Digital Equipment Corporation | Method for indexing duplicate database records using a full-record fingerprint |
US6105019A (en) | 1996-08-09 | 2000-08-15 | Digital Equipment Corporation | Constrained searching of an index |
US5832500A (en) | 1996-08-09 | 1998-11-03 | Digital Equipment Corporation | Method for searching an index |
US5966710A (en) | 1996-08-09 | 1999-10-12 | Digital Equipment Corporation | Method for searching an index |
US5787435A (en) | 1996-08-09 | 1998-07-28 | Digital Equipment Corporation | Method for mapping an index of a database into an array of files |
US5745889A (en) | 1996-08-09 | 1998-04-28 | Digital Equipment Corporation | Method for parsing information of databases records using word-location pairs and metaword-location pairs |
US5765168A (en) | 1996-08-09 | 1998-06-09 | Digital Equipment Corporation | Method for maintaining an index |
US5970497A (en) | 1996-08-09 | 1999-10-19 | Digital Equipment Corporation | Method for indexing duplicate records of information of a database |
US5765149A (en) | 1996-08-09 | 1998-06-09 | Digital Equipment Corporation | Modified collection frequency ranking method |
US5765150A (en) | 1996-08-09 | 1998-06-09 | Digital Equipment Corporation | Method for statistically projecting the ranking of information |
US5724033A (en) | 1996-08-09 | 1998-03-03 | Digital Equipment Corporation | Method for encoding delta values |
US5765158A (en) | 1996-08-09 | 1998-06-09 | Digital Equipment Corporation | Method for sampling a compressed index to create a summarized index |
US5745898A (en) | 1996-08-09 | 1998-04-28 | Digital Equipment Corporation | Method for generating a compressed index of information of records of a database |
US5915251A (en) | 1996-08-09 | 1999-06-22 | Digital Equipment Corporation | Method and apparatus for generating and searching range-based index of word locations |
US5914679A (en) | 1996-08-09 | 1999-06-22 | Digital Equipment Corporation | Method for encoding delta values |
US5745890A (en) | 1996-08-09 | 1998-04-28 | Digital Equipment Corporation | Sequential searching of a database index using constraints on word-location pairs |
US6078923A (en) | 1996-08-09 | 2000-06-20 | Digital Equipment Corporation | Memory storing an integrated index of database records |
US5963954A (en) | 1996-08-09 | 1999-10-05 | Digital Equipment Corporation | Method for mapping an index of a database into an array of files |
US5745894A (en) | 1996-08-09 | 1998-04-28 | Digital Equipment Corporation | Method for generating and searching a range-based index of word-locations |
US5966703A (en) | 1996-08-09 | 1999-10-12 | Digital Equipment Corporation | Technique for indexing information stored as a plurality of records |
US5852820A (en) | 1996-08-09 | 1998-12-22 | Digital Equipment Corporation | Method for optimizing entries for searching an index |
US6067543A (en) | 1996-08-09 | 2000-05-23 | Digital Equipment Corporation | Object-oriented interface for an index |
US5864863A (en) | 1996-08-09 | 1999-01-26 | Digital Equipment Corporation | Method for parsing, indexing and searching world-wide-web pages |
US5745899A (en) | 1996-08-09 | 1998-04-28 | Digital Equipment Corporation | Method for indexing information of a database |
US6047286A (en) | 1996-08-09 | 2000-04-04 | Digital Equipment Corporation | Method for optimizing entries for searching an index |
US5797008A (en) | 1996-08-09 | 1998-08-18 | Digital Equipment Corporation | Memory storing an integrated index of database records |
US6016493A (en) | 1996-08-09 | 2000-01-18 | Digital Equipment Corporation | Method for generating a compressed index of information of records of a database |
US6021409A (en) | 1996-08-09 | 2000-02-01 | Digital Equipment Corporation | Method for parsing, indexing and searching world-wide-web pages |
US5809502A (en) | 1996-08-09 | 1998-09-15 | Digital Equipment Corporation | Object-oriented interface for an index |
US6035268A (en) | 1996-08-22 | 2000-03-07 | Lernout & Hauspie Speech Products N.V. | Method and apparatus for breaking words in a stream of text |
US6078914A (en) | 1996-12-09 | 2000-06-20 | Open Text Corporation | Natural language meta-search system and method |
US6285999B1 (en) | 1997-01-10 | 2001-09-04 | The Board Of Trustees Of The Leland Stanford Junior University | Method for node ranking in a linked database |
US6205456B1 (en) | 1997-01-17 | 2001-03-20 | Fujitsu Limited | Summarization apparatus and method |
US5920859A (en) | 1997-02-05 | 1999-07-06 | Idd Enterprises, L.P. | Hypertext document retrieval system and method |
US5903891A (en) | 1997-02-25 | 1999-05-11 | Hewlett-Packard Company | Hierarchial information processes that share intermediate data and formulate contract data |
US6278992B1 (en) | 1997-03-19 | 2001-08-21 | John Andrew Curtis | Search engine using indexing method for storing and retrieving data |
US6192258B1 (en) | 1997-05-23 | 2001-02-20 | Access Co., Ltd. | Mobile communication device with a rotary push switch |
US5884305A (en) | 1997-06-13 | 1999-03-16 | International Business Machines Corporation | System and method for data mining from relational data by sieving through iterated relational reinforcement |
US5933822A (en) | 1997-07-22 | 1999-08-03 | Microsoft Corporation | Apparatus and methods for an information retrieval system that employs natural language processing of search results to improve overall precision |
US6026413A (en) | 1997-08-01 | 2000-02-15 | International Business Machines Corporation | Determining how changes to underlying data affect cached objects |
US6078916A (en) | 1997-08-01 | 2000-06-20 | Culliss; Gary | Method for organizing information |
US5974412A (en) | 1997-09-24 | 1999-10-26 | Sapient Health Network | Intelligent query system for automatically indexing information in a database and automatically categorizing users |
US6594682B2 (en) * | 1997-10-28 | 2003-07-15 | Microsoft Corporation | Client-side system for scheduling delivery of web content and locally managing the web content |
US6243718B1 (en) | 1997-10-31 | 2001-06-05 | Oracle Corporation | Building indexes on columns containing large objects |
US6029165A (en) * | 1997-11-12 | 2000-02-22 | Arthur Andersen Llp | Search and retrieval information system and method |
US6005503A (en) | 1998-02-27 | 1999-12-21 | Digital Equipment Corporation | Method for encoding and decoding a list of variable size integers to reduce branch mispredicts |
US6016501A (en) | 1998-03-18 | 2000-01-18 | Bmc Software | Enterprise data movement system and method which performs data load and changed data propagation operations |
US6119124A (en) | 1998-03-26 | 2000-09-12 | Digital Equipment Corporation | Method for clustering closely resembling data objects |
US6088694A (en) | 1998-03-31 | 2000-07-11 | International Business Machines Corporation | Continuous availability and efficient backup for externally referenced objects |
US6374268B1 (en) | 1998-04-14 | 2002-04-16 | Hewlett-Packard Company | Methods and systems for an incremental file system |
US6192333B1 (en) | 1998-05-12 | 2001-02-20 | Microsoft Corporation | System for creating a dictionary |
US6324566B1 (en) | 1998-05-15 | 2001-11-27 | International Business Machines Corporation | Internet advertising via bookmark set based on client specific information |
US6205451B1 (en) | 1998-05-22 | 2001-03-20 | Oracle Corporation | Method and apparatus for incremental refresh of summary tables in a database system |
US6216175B1 (en) | 1998-06-08 | 2001-04-10 | Microsoft Corporation | Method for upgrading copies of an original file with same update data after normalizing differences between copies created during respective original installations |
US6542906B2 (en) | 1998-08-17 | 2003-04-01 | Connected Place Ltd. | Method of and an apparatus for merging a sequence of delta files |
US6243713B1 (en) * | 1998-08-24 | 2001-06-05 | Excalibur Technologies Corp. | Multimedia document retrieval by application of multimedia queries to a unified index of multimedia data for a plurality of multimedia data types |
US6385616B1 (en) | 1998-08-29 | 2002-05-07 | International Computers Limited | Time-versioned data storage mechanism |
US6308179B1 (en) | 1998-08-31 | 2001-10-23 | Xerox Corporation | User level controlled mechanism inter-positioned in a read/write path of a property-based document management system |
US6553385B2 (en) | 1998-09-01 | 2003-04-22 | International Business Machines Corporation | Architecture of a framework for information extraction from natural language documents |
US6519597B1 (en) | 1998-10-08 | 2003-02-11 | International Business Machines Corporation | Method and apparatus for indexing structured documents with rich data types |
US6519593B1 (en) | 1998-12-15 | 2003-02-11 | Yossi Matias | Efficient bundle sorting |
US6295529B1 (en) | 1998-12-24 | 2001-09-25 | Microsoft Corporation | Method and apparatus for indentifying clauses having predetermined characteristics indicative of usefulness in determining relationships between different texts |
US6381602B1 (en) | 1999-01-26 | 2002-04-30 | Microsoft Corporation | Enforcing access control on resources at a location other than the source location |
US6418433B1 (en) | 1999-01-28 | 2002-07-09 | International Business Machines Corporation | System and method for focussed web crawling |
US6584458B1 (en) | 1999-02-19 | 2003-06-24 | Novell, Inc. | Method and apparatuses for creating a full text index accommodating child words |
US6519592B1 (en) | 1999-03-31 | 2003-02-11 | Verizon Laboratories Inc. | Method for using data from a data query cache |
US6336117B1 (en) | 1999-04-30 | 2002-01-01 | International Business Machines Corporation | Content-indexing search system and method providing search results consistent with content filtering and blocking policies implemented in a blocking engine |
US6269361B1 (en) | 1999-05-28 | 2001-07-31 | Goto.Com | System and method for influencing a position on a search result list generated by a computer network search engine |
US6421655B1 (en) | 1999-06-04 | 2002-07-16 | Microsoft Corporation | Computer-based representations and reasoning methods for engaging users in goal-oriented conversations |
US6547829B1 (en) | 1999-06-30 | 2003-04-15 | Microsoft Corporation | Method and system for detecting duplicate documents in web crawls |
US6339772B1 (en) | 1999-07-06 | 2002-01-15 | Compaq Computer Corporation | System and method for performing database operations on a continuous stream of tuples |
US6463439B1 (en) | 1999-07-15 | 2002-10-08 | American Management Systems, Incorporated | System for accessing database tables mapped into memory for high performance data retrieval |
US6567804B1 (en) | 2000-06-27 | 2003-05-20 | Ncr Corporation | Shared computation of user-defined metrics in an on-line analytic processing system |
US6578032B1 (en) | 2000-06-28 | 2003-06-10 | Microsoft Corporation | Method and system for performing phrase/word clustering and cluster merging |
US6622211B2 (en) * | 2001-08-15 | 2003-09-16 | Ip-First, L.L.C. | Virtual set cache that redirects store data to correct virtual set to avoid virtual set store miss penalty |
Non-Patent Citations (54)
Title |
---|
Agarwal, R.C. "A Super Scalar Sort Algorithm for RISC Processors," pp. 240-246. Proceedings of the 1996 ACM SIGMOD International Conference on Management of Data, 1996. Available from http://citeseer.nj.nec.com/agarwal96super.html. |
Agrawal, S., S Chaudhuri and G. Das, "DBXplorer: A System for Keyword-Based Search over Relational Databases," Proceeding of 18th International Conference on Data Engineering, 2002, 12 pp. |
Agrawal, S., S Chaudhuri and G. Das, "DBXplorer: Enabling Keyword Search over Relational Databases", Proceedings of the 2002 ACM SIGMOD International Conference on Management of Data, 2002, p. 627. |
Arpaci-Dusseau, A.C. et al. "High Performance Sorting on Networks on Workstations," 12 pages. Proceedings of the 1996 ACM SIGMOD International Conference on Management of Data, 1997. Available from http://portal.acm.org/citation.cfm?id-253322&coll=portal&dl=ACM&CFID=13536765&CFTOKEN=64334274. |
Baeza-Yates, R. and B. Ribeiro-Neto. "Modern Inforamtion Retrieval." England: Pearson Education Limited, 1999, title page, copyright page, table of contents (ix-xvi), and Chapter 8 "Indexing and Searching" (pp. 191-199, 222-228, 382-384). |
Bhalotia, G., A. Hulgeri, C Nakhe, S. Chakrabarti and S. Sudarshan, "Keyword Searching and Browsing in Databases Using BANKS", Proceedings of the 18th Internatiional Conference on Data Engineering, 2002, 10 pp. |
Brin, S. and L. Page, "The Anatomy of a Large-Scale Hypertextual Web Search Engine", Computer Networks and ISDN Systems, vol. 30, No. 1-7, 1998, pp. 107-117. |
Broder, A.Z., D. Carmel, M. Herscovichi, A. Soffer and J. Zien, "Efficient Query Evaluation Using a Two-Level Retrieval Process", Twelfth International Conference on Information Knowledge Management (CIKM 2003), 2003, pp. 426-434. |
Broder, A.Z., S.C. Glassman, M.S. Manasse, and G. Zweig, "Syntactic Clustering of the Web", Computer Networks and ISDN Systems, vol. 29, Iss. 8-13, 1997, pp. 1157-1166. |
Brown, E. et al. "Execution Performance Issues in Full-Text Information Retrieval." Technical Report 95-81, Oct. 1995. Computer Science Department, Amherst, MA (Ph.D. Thesis), 179 pages. Available from http://citeseer.nj.nec.com/brown95execution.html. |
Brown, E. et al. "Fast Incremental Indexing for Full-Text Information Retrieval," pp. 1-11. Proceedings of the 20<SUP>th </SUP>VLDB Conference, pp. 192-202, Santiago, Chile, 1994. Available from http://citeseer.nj.nec.com/brown94fast.html. |
Bruno, N., K. Koudas and D. Srivastava, "Holistic Twig Joins: Optimal XML Pattern Matching", Proceedings of the 2002 ACM SIGMOD International Conference on Management of Data, 2002, pp. 310-321. |
Callan, J.P et al. "The INQUERY Retrieval System," 9 pages. Proceedings {DEXA}-92, 3<SUP>rd </SUP>International Conference on Database and Expert Systems Applications, pp. 78-83, 1992. Available from http://citeseer.nj.nec.com/26307.html. |
Carmel, D., Y. Maarek, M. Mandelbrod, Y. Mass and A. Soffer, "Searching XML Documents via XML Fragments," Proceedings of the 26th Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, 2003, pp. 151-158. |
Clarke, C.L.A., et al. "Shortest Substring Ranking (MultiText Experiments for TREC-4)," pp. 1-10. Proceedings of the Fourth Text Retrieval Conference, Nov. 1995. Available from http://citeseer.nj.nec.com/84012.html. |
Corme, T.H., et al. "Introduction to Algorithms." Cambridge: The MIT Press, Second Edition, 2003, title page, copyright page, table of contents (v-xi) and Chapter 8 "Sorting in Linear Time" (pp. 165-177). |
Dieberger, A. "Context Lenses-Document Visualization and Navigation Tools for Rapid Access to Detail." In Human-Computer Interaction INTERACT '01. IFIP TC. 13 International Conference on Human-Computer Interaction, Jul. 9-13, 2001, Tokyo, Japan, IOS Press. Title page, copyright page and article (pp. 545-552). |
Fontoura, M., E. Shekita, J. Zien, S. Rajagopalan and A. Neumann, "High Performance Index Build Algorithms of Intranet Search Engines", Proceedings of 30th International Conference on Very Large Data Bases, 2004, pp. 1158-1169. |
French, G., "Hacking the Google Numrange Operator", [online], Apr. 1, 2004, [retrieved on Aug. 31, 2004], retrieved from the Internet at <URL: http://www.webpronews.com/insiderreports/searchinsider/wpn-49-20040401HackingtheGoogleNumrangeOperator.html>. |
Google, "Advanced Search", [online], 2003, [retrieved on Aug. 31, 2004], retrieved from the Internet at <URL:http://www.google.com/help/refinesearch.html>. |
Gravano, L., P.G. Ipeirotis, N. Koudas and D. Srivastava, "Text Joins in a RDBMS for Web Data Integration", Proceedings of the 12th International Conference on World Wide Web, 2003, pp. 90-101. |
Guttman, A., "R-Trees: A Dynamic Index Structure for Spatial Searching", Proceedings of the 1984 ACM SIGMOD International Conference on Management of Data, 1984, pp. 47-57. |
Hardman, L. "Links in Hypermedia: the Requirement for Context." 5<SUP>th </SUP>ACM Conference on Hypertext, '93 Proceedings, pp. 183-191. |
Hristidis, V. and Y. Papakonstantinou, "DISCOVER: Keyword Search in Relational Databases", Proceedings of the 28th VLDB Conference, 2002, 12 pp. |
Kaindl. H., et al.. "Combining Structure Search and Content Search for the World-Wide Web," 1998 ACM, ISBN 0-89791-972-6-Jun. 1998, pp. 217-224. |
Kaushik, R., R. Krishnamurthy, J.F. Naughton and R. Ramakrishnan, "On the Integration of Structure Indexes and Inverted Lists," Proceedings of the 20th International Conference on Data Engineering, 2004, 1 pg. |
Lipyeow, L. et al. "Dynamic Maintenance of Web Indexes Using Landmarks," 10 pages. WWW2003, May 20-24, 2003, Budapest, Hungary. ACM. Available from http:// citreseer.nj.nec.com/590376.html. |
Lomet, D. (Ed.), "Bulletin of the Technical Committee on Data Engineering", Dec. 2001, vol. 24, No. 4, 56 pp. |
Long, X and T. Suel. "Optimized Query Execution in Large Search Engines with Global Page Ordering," 12 pages. Proceedings of the 29<SUP>th </SUP>VLDB Conference, Berlin, Germany, 2003. Available from http://citeseer.nj.nec.com/long03optimized.html. |
Lu, S. "Scalable Distributed Architectures for Information Retrieval." Amherst, MA (Ph.D. Thesis), 178 pages. Available from http://citeseer.nj.nec.com/luscalabel.html, 1999. |
Lu, W, L. Chien, & H. Lee, "Anchor Text Mining for Translation of Web Queries", Proceedings from the International Conference on Data Mining, Nov. 2001, pp. 401-408. |
Macurious Software Foundation. Macurious Spider Frequently Asked Questions 3.0 [online] [retrieved on Oct. 8, 2003]. Available from http://www.macurious.com/spider/faq.htm. |
Melnik, S. et al. "Building a Distributed Full-Text Index for the Web," 10 pages, 2001. In World Wide Web, pp. 396-406. Available from http://<SUB>-</SUB>citeseer.nj.nec.com/long03optimized.html. |
Melnik, S., S. Raghavan, B. Yang and H. Garcia-Molina, "Building a Distributed Full-Text Index for the Web," ACM Transactions on Information Systems, vol. 19, No. 3, Jul. 2001, pp. 217-241. |
Miscellaneous Articles from Newsgroups, Available from: (1) Newsgroups:google.public.support.general; Date: Jul. 5, 2002 and Jul. 6, 2002; (2) Newsgroups: comp.protocols.tcp-ip.domains; Date Apr. 8, 2000; (3) Newsgroups: micorsoft.public.frontpage.client; Date: Mar. 18, 1999 [3 entries] and Mar. 19, 1999 and (4) Newsgroups:alt.internet.search-engines; Date: Jan. 26, 2002. |
PCT International Search Report and Written Opinion, May 6, 2005, for International Application No. PCT/EP2005/050321. |
PCT International Search Report and Written Opinion, Oct. 30, 2006, for International Application No. PCT/EP2006/064281. |
Pearson, P.K. "Fast Hashing of Variable Length Text Strings," pp. 677-680. Communications of the ACM, Jun. 1990, vol. 33, No. 6. |
Press, W.H., B.P. Flannery, S.A. Teukolsky and W.T. Vetterling, "Numerical Recipes in C: The Art of Scientific Computing", 1998, Ch. 9, pp. 258-263. |
Raghavan, S. and H. Garcia-Molina, "Complex Queries over Web Repositories", Proceedings of the 29th VLDB Conference, 2003, pp. 33-44. |
Raghavan, S. and H. Garcia-Molina, "Integrating Diverse Information Management Systems: A Brief Survey", IEEE Data Engineering Bulletin, 2001, vol. 24, No. 4, pp. 44-52. |
Ramsak, F., V. Markl, R. Fenk, M. Zirkel, K. Elhardt and R. Bayer, "Integrating the UB-Tree into a Database System Kernel", Proceedings of 26th International Conference on Very Large Data Bases, Sep. 2000, pp. 263-272. |
Sedgewick, R. "Algorithms in C++. Parts 1-4." Boston: Addison-Wesley Publishing Co., 1998. title page, copyright page, table of contents (xv-xix) and Chapter 10 "Radix Sorting" (pp. 417-433, 436-450). |
Spertus, E. and L.A. Stein, "Squeal: A Structured Query Language for the Web", Proceedings of the 9th International World Wide Web Conference on Computer Networks, 2000, pp. 95-103. |
Tomasic, A. et al. "Performance of Inverted Indices in Shared-Nothing Distributed Text Document Information Retrieval Systems," 11 pages. Proceedings of the 2<SUP>nd </SUP>International Conference on Parallel and Distributed Information Systems, Jan. 1983url=. |
Tomasic, et al. "Incremental Updates of Inverted List for Text Document Retrieval, " p. 143. Available from http://citeseer.nj.nec.com/tomasic96incremental.html, 1994. |
U.S. Appl. No. 10/764,771, filed on Jan. 26, 2004 , entitled Method, System, and Program for Handling Redirects in a Search Engine, by M. F. Fontoura, et al. |
U.S. Appl. No. 10/764,800, filed on Jan. 26, 2004, entitled Architecture for an Indexer, by M. F. Foutoura, et al. |
U.S. Appl. No. 10/764,801, filed on Jan. 26, 2004, entitled Method, System, and Program for Handling Anchor Text, by R. Kraft, et al. |
U.S. Appl. No. 11/182,334, filed Jul. 14, 2005, entitled "Enforcing Native Access Control to Indexed Documents", invented by R. Lempel, T. Leyba, J.A. McPherson, Jr., and J.L. Perez. |
U.S. Appl. No. 11/295,397, filed Dec. 5, 2005, entitled "Improving Text Search Quality by Exploiting Organizational Information", invented by T. Hampp, M. Baessler, A. Lang, T.W. Goetz, A. Baader, and J. Doerre. |
Weinreich, H., et al.. "The Look of the Link-Concepts for the User Inerface of Extended Hyperlinks," 2001, ACM ISBN 1-59113-420-Jul. 1, 2001, pp. 19-28. |
Witten, I.H., et al. "Managing Gigabytes. Compressing and Indexing Documents and Images." San Francisco: Morgan Kaufmann Publishers, 1999, title page, copyright page, table of contents (v-xi) and Chapter 5 "Index Construction" (pp. 223-261). |
Zobel, J. et al. "In-Memory Hash Tables for Accumulating Text Vocabularies, " pp. 1-9. Information Processing Letters, vol. 80, No. 6, pp. 271-277, 2001. Available from http://citeseer.nj.nec.com/529586.html. |
Cited By (23)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20050171965A1 (en) * | 2002-10-10 | 2005-08-04 | Fujitsu Limited | Contents reuse management apparatus and contents reuse support apparatus |
US7743060B2 (en) | 2004-01-26 | 2010-06-22 | International Business Machines Corporation | Architecture for an indexer |
US8285724B2 (en) | 2004-01-26 | 2012-10-09 | International Business Machines Corporation | System and program for handling anchor text |
US20090299621A1 (en) * | 2004-01-29 | 2009-12-03 | Xanavi Informatics Corporation | Automobile navigation apparatus |
US7937413B2 (en) | 2004-05-04 | 2011-05-03 | International Business Machines Corporation | Self-adaptive prefix encoding for stable node identifiers |
US8655888B2 (en) | 2004-09-24 | 2014-02-18 | International Business Machines Corporation | Searching documents for ranges of numeric values |
US8346759B2 (en) | 2004-09-24 | 2013-01-01 | International Business Machines Corporation | Searching documents for ranges of numeric values |
US8271498B2 (en) | 2004-09-24 | 2012-09-18 | International Business Machines Corporation | Searching documents for ranges of numeric values |
US8161004B2 (en) | 2005-08-22 | 2012-04-17 | International Business Machines Corporation | XML sub-document versioning method in XML databases using record storages |
US20070043686A1 (en) * | 2005-08-22 | 2007-02-22 | International Business Machines Corporation | Xml sub-document versioning method in xml databases using record storages |
US20070043743A1 (en) * | 2005-08-22 | 2007-02-22 | Chen Yao-Ching S | Packing nodes into records to store XML XQuery data model and other hierarchically structured data |
US8572125B2 (en) | 2005-08-22 | 2013-10-29 | International Business Machines Corporation | Scalable storage schemes for native XML column data of relational tables |
US8543614B2 (en) | 2005-08-22 | 2013-09-24 | International Business Machines Corporation | Packing nodes into records to store XML XQuery data model and other hierarchically structured data |
US20080256045A1 (en) * | 2005-08-22 | 2008-10-16 | International Business Machines Corporation | Xml sub-document versioning method in xml databases using record storages |
US7529726B2 (en) * | 2005-08-22 | 2009-05-05 | International Business Machines Corporation | XML sub-document versioning method in XML databases using record storages |
US7634517B1 (en) * | 2006-02-10 | 2009-12-15 | Google Inc. | System and method for dynamically updating a document repository without interrupting concurrent querying |
US20080005092A1 (en) * | 2006-06-30 | 2008-01-03 | Microsoft Corporation | Creating adaptive, deferred, incremental indexes |
US7734618B2 (en) * | 2006-06-30 | 2010-06-08 | Microsoft Corporation | Creating adaptive, deferred, incremental indexes |
US7949638B1 (en) * | 2006-10-31 | 2011-05-24 | Netapp, Inc. | System and method for nearly in-band search indexing |
US20100174719A1 (en) * | 2009-01-06 | 2010-07-08 | Jorge Alegre Vilches | System, method, and program product for personalization of an open network search engine |
US8458186B2 (en) * | 2009-11-06 | 2013-06-04 | Symantec Corporation | Systems and methods for processing and managing object-related data for use by a plurality of applications |
US20110113466A1 (en) * | 2009-11-06 | 2011-05-12 | Symantec Corporation | Systems and Methods for Processing and Managing Object-Related Data for use by a Plurality of Applications |
US20110137886A1 (en) * | 2009-12-08 | 2011-06-09 | Microsoft Corporation | Data-Centric Search Engine Architecture |
Also Published As
Publication number | Publication date |
---|---|
US20050165718A1 (en) | 2005-07-28 |
US20070282829A1 (en) | 2007-12-06 |
US7783626B2 (en) | 2010-08-24 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US7783626B2 (en) | Pipelined architecture for global analysis and index building | |
US7788253B2 (en) | Global anchor text processing | |
US6615209B1 (en) | Detecting query-specific duplicate documents | |
US7499913B2 (en) | Method for handling anchor text | |
US7743060B2 (en) | Architecture for an indexer | |
US6493721B1 (en) | Techniques for performing incremental data updates | |
US6484161B1 (en) | Method and system for performing online data queries in a distributed computer system | |
US6578056B1 (en) | Efficient data transfer mechanism for synchronization of multi-media databases | |
US7047242B1 (en) | Weighted term ranking for on-line query tool | |
Brin et al. | Reprint of: The anatomy of a large-scale hypertextual web search engine | |
US6374241B1 (en) | Data merging techniques | |
US6397228B1 (en) | Data enhancement techniques | |
US6408294B1 (en) | Common term optimization | |
US6393415B1 (en) | Adaptive partitioning techniques in performing query requests and request routing | |
US20060106849A1 (en) | Idle CPU indexing systems and methods | |
US8423885B1 (en) | Updating search engine document index based on calculated age of changed portions in a document | |
US7657513B2 (en) | Adaptive help system and user interface | |
US20040015485A1 (en) | Method and apparatus for improved internet searching | |
US8909663B2 (en) | Using historical information to improve search across heterogeneous indices | |
US8296304B2 (en) | Method, system, and program for handling redirects in a search engine | |
US8661069B1 (en) | Predictive-based clustering with representative redirect targets | |
US8275661B1 (en) | Targeted banner advertisements | |
Shivakumar | Detecting digital copyright violations on the Internet | |
US7991756B2 (en) | Adding low-latency updateable metadata to a text index | |
Haw et al. | D’Galaxy: An Information Retrieval System for Intranet Search |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: INTERNATIONAL BUSINESS MACHINES CORPORATION, NEW YFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:FONTOURA, MARCUS F.;KRAFT, REINER;LEUNG, TONY K.;AND OTHERS;REEL/FRAME:014616/0853;SIGNING DATES FROM 20040218 TO 20040226Owner name: INTERNATIONAL BUSINESS MACHINES CORPORATION, NEW YFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:FONTOURA, MARCUS F.;KRAFT, REINER;LEUNG, TONY K.;AND OTHERS;REEL/FRAME:014617/0724;SIGNING DATES FROM 20040218 TO 20040226 |
|
FEPP | Fee payment procedure |
Free format text: PAYOR NUMBER ASSIGNED (ORIGINAL EVENT CODE: ASPN); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
REMI | Maintenance fee reminder mailed | ||
LAPS | Lapse for failure to pay maintenance fees | ||
REIN | Reinstatement after maintenance fee payment confirmed | ||
FEPP | Fee payment procedure |
Free format text: PETITION RELATED TO MAINTENANCE FEES GRANTED (ORIGINAL EVENT CODE: PMFG); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYFree format text: PETITION RELATED TO MAINTENANCE FEES FILED (ORIGINAL EVENT CODE: PMFP); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
FP | Lapsed due to failure to pay maintenance fee |
Effective date: 20111106 |
|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:INTERNATIONAL BUSINESS MACHINES CORPORATION;REEL/FRAME:027463/0594Effective date: 20111228 |
|
PRDP | Patent reinstated due to the acceptance of a late maintenance fee |
Effective date: 20120504 |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
SULP | Surcharge for late payment | ||
FPAY | Fee payment |
Year of fee payment: 8 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044127/0735Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 12TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1553); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 12 |
US5506844A - Method for configuring a statistical multiplexer to dynamically allocate communication channel bandwidth - Google Patents
Method for configuring a statistical multiplexer to dynamically allocate communication channel bandwidth Download PDFInfo
- Publication number
- US5506844A US5506844A US08/246,442 US24644294A US5506844A US 5506844 A US5506844 A US 5506844A US 24644294 A US24644294 A US 24644294A US 5506844 A US5506844 A US 5506844A
- Authority
- US
- United States
- Prior art keywords
- rate
- entry
- variable rate
- data stream
- encoded data
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Lifetime
Links
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/20—Servers specifically adapted for the distribution of content, e.g. VOD servers; Operations thereof
- H04N21/23—Processing of content or additional data; Elementary server operations; Server middleware
- H04N21/236—Assembling of a multiplex stream, e.g. transport stream, by combining a video stream with other content or additional data, e.g. inserting a URL [Uniform Resource Locator] into a video stream, multiplexing software data into a video stream; Remultiplexing of multiplex streams; Insertion of stuffing bits into the multiplex stream, e.g. to obtain a constant bit-rate; Assembling of a packetised elementary stream
- H04N21/2365—Multiplexing of several video streams
- H04N21/23655—Statistical multiplexing, e.g. by controlling the encoder to alter its bitrate to optimize the bandwidth utilization
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04J—MULTIPLEX COMMUNICATION
- H04J3/00—Time-division multiplex systems
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04J—MULTIPLEX COMMUNICATION
- H04J3/00—Time-division multiplex systems
- H04J3/16—Time-division multiplex systems in which the time allocation to individual channels within a transmission cycle is variable, e.g. to accommodate varying complexity of signals, to vary number of channels transmitted
- H04J3/1682—Allocation of channels according to the instantaneous demands of the users, e.g. concentrated multiplexers, statistical multiplexers
- H04J3/1688—Allocation of channels according to the instantaneous demands of the users, e.g. concentrated multiplexers, statistical multiplexers the demands of the users being taken into account after redundancy removal, e.g. by predictive coding, by variable sampling
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/102—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the element, parameter or selection affected or controlled by the adaptive coding
- H04N19/124—Quantisation
- H04N19/126—Details of normalisation or weighting functions, e.g. normalisation matrices or variable uniform quantisers
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/134—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the element, parameter or criterion affecting or controlling the adaptive coding
- H04N19/146—Data rate or code amount at the encoder output
- H04N19/147—Data rate or code amount at the encoder output according to rate distortion criteria
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/134—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the element, parameter or criterion affecting or controlling the adaptive coding
- H04N19/154—Measured or subjectively estimated visual quality after decoding, e.g. measurement of distortion
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/189—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the adaptation method, adaptation tool or adaptation type used for the adaptive coding
- H04N19/196—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the adaptation method, adaptation tool or adaptation type used for the adaptive coding being specially adapted for the computation of encoding parameters, e.g. by averaging previously computed encoding parameters
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/189—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the adaptation method, adaptation tool or adaptation type used for the adaptive coding
- H04N19/196—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the adaptation method, adaptation tool or adaptation type used for the adaptive coding being specially adapted for the computation of encoding parameters, e.g. by averaging previously computed encoding parameters
- H04N19/197—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the adaptation method, adaptation tool or adaptation type used for the adaptive coding being specially adapted for the computation of encoding parameters, e.g. by averaging previously computed encoding parameters including determination of the initial value of an encoding parameter
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/189—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the adaptation method, adaptation tool or adaptation type used for the adaptive coding
- H04N19/196—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the adaptation method, adaptation tool or adaptation type used for the adaptive coding being specially adapted for the computation of encoding parameters, e.g. by averaging previously computed encoding parameters
- H04N19/198—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the adaptation method, adaptation tool or adaptation type used for the adaptive coding being specially adapted for the computation of encoding parameters, e.g. by averaging previously computed encoding parameters including smoothing of a sequence of encoding parameters, e.g. by averaging, by choice of the maximum, minimum or median value
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/60—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using transform coding
- H04N19/61—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using transform coding in combination with predictive coding
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/20—Servers specifically adapted for the distribution of content, e.g. VOD servers; Operations thereof
- H04N21/23—Processing of content or additional data; Elementary server operations; Server middleware
- H04N21/236—Assembling of a multiplex stream, e.g. transport stream, by combining a video stream with other content or additional data, e.g. inserting a URL [Uniform Resource Locator] into a video stream, multiplexing software data into a video stream; Remultiplexing of multiplex streams; Insertion of stuffing bits into the multiplex stream, e.g. to obtain a constant bit-rate; Assembling of a packetised elementary stream
- H04N21/2365—Multiplexing of several video streams
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/40—Client devices specifically adapted for the reception of or interaction with content, e.g. set-top-box [STB]; Operations thereof
- H04N21/43—Processing of content or additional data, e.g. demultiplexing additional data from a digital video stream; Elementary client operations, e.g. monitoring of home network or synchronising decoder's clock; Client middleware
- H04N21/434—Disassembling of a multiplex stream, e.g. demultiplexing audio and video streams, extraction of additional data from a video stream; Remultiplexing of multiplex streams; Extraction or processing of SI; Disassembling of packetised elementary stream
- H04N21/4347—Demultiplexing of several video streams
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/60—Network structure or processes for video distribution between server and client or between remote clients; Control signalling between clients, server and network components; Transmission of management data between server and client, e.g. sending from server to client commands for recording incoming content stream; Communication details between server and client
- H04N21/63—Control signaling related to video distribution between client, server and network components; Network processes for video distribution between server and clients or between remote clients, e.g. transmitting basic layer and enhancement layers over different transmission paths, setting up a peer-to-peer communication via Internet between remote STB's; Communication protocols; Addressing
- H04N21/637—Control signals issued by the client directed to the server or network components
- H04N21/6377—Control signals issued by the client directed to the server or network components directed to server
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/60—Network structure or processes for video distribution between server and client or between remote clients; Control signalling between clients, server and network components; Transmission of management data between server and client, e.g. sending from server to client commands for recording incoming content stream; Communication details between server and client
- H04N21/65—Transmission of management data between client and server
- H04N21/658—Transmission by the client directed to the server
Definitions
- This invention relates generally to selecting data for transmission over a communication channel and more particularly to a multiplexer that allocates the bandwidth of a communication channel to a plurality of data streams so as to maintain the quality of the transmitted data within a selected range, or alternatively to maximize the quality across the data streams.
- Video data typically includes luminance and chrominance data for each pixel in a frame.
- Raw digital video data contains too much information for transmission over normal communication media and requires considerable storage capacity. Consequently, to utilize either the limited bandwidth of the communication media, or storage capacity efficiently, coding techniques are commonly used to compress the information contained in the raw video data.
- video camera 101 generates an analog video signal that drives input processor 102.
- Input processor 102 digitizes and typically filters the analog video signal to produce a raw digital video signal.
- the raw digital video signal is encoded, i.e., compressed, by encoder 103.
- the compressed digital video signal is transmitted over a communication channel, for example, a satellite link, to a decoding system 120 that includes a decoder 121, a post-processor 122, and a display driver 123.
- Decoder 121 decompresses the encoded video data and supplies the resulting signal to post-processor 122, which in turn smooths and enhances the video signal.
- the video signal from post-processor 122 supplies display driver 123 that drives display unit 130.
- the encoding, i.e., compression, of video signals for storage or transmission and the subsequent decoding is well-known.
- L applications 201-1 to 201-L are compressed using encoders 202-1 to 202-L, respectively.
- Applications 201-1 to 201-L can be from a variety of signal sources, e.g., video, audio, etc.
- Each application 201-1 to 201-L drives an encoder 202-1 to 202-L, respectively.
- a compression loop 204-1 within encoder 201-1 for example, performs prediction and quantization as the main operations.
- bits of compressed data are written to buffer 205-1.
- a controller (not shown) manages rate control of the compression to prevent buffer 205-1 from overflowing and underflowing.
- the video encoder rate control ensures that encoder 201-1 produces bits of encoded data at an approximately constant rate over some interval of time from buffer 205-1 while maximizing the picture quality of the video sequence.
- Applications 201-1 to 201-L are either fixed rate or variable rate applications.
- a fixed rate application 201-i releases bits to channel 230 at a constant rate.
- a variable rate application 202-i releases bits to channel 230 over a non-constant rate, i.e., the rate may change with time.
- the output data from encoders 202-1 to 202-L are each an input data stream to multiplexer 210.
- the data stream passed through multiplexer 210 is determined by a multiplexer controller circuit 211 that receives input signals from a system controller 250.
- System controller 250 is typically a computer that is programmed to pass signals to multiplexer control circuit 211 so that encoded data are passed through multiplexer 210 in manner that is independent of the content of the transmitted signal or the quality of the resulting image.
- Transfer of information from encoders 202-1 to 202-L to the multiplexer 210 and subsequently to the communication channel usually is done in packets of information.
- Multiplexer 210 passes therethrough to communication channel 220 a packet of data at a time from one of applications 201-1 to 201-L.
- a statistical multiplexer dynamically distributes the total capacity of a communication channel among a plurality of data streams that compete for access to the communication channel. At the same time, the statistical multiplexer assures that the communication channel capacity is not exceeded. In other words, the statistical multiplexer of this invention determines what fraction of the communication channel capacity should be allocated for any interval of time to a particular data stream, i.e., an application, so as to maximize the quality of the signals of all applications transmitted over the communication channel.
- the statistical multiplexer changes the fraction of the communication channel capacity allocated to the various data streams in real time so as to maximize the quality of the signals for all the data streams that are transmitted over the communication channel.
- the statistical multiplexer operates as an outer shell over the rate control mechanism of the hardware that provides each of the data streams to the statistical multiplexer.
- the statistical multiplexer generates and provides, at least once during each statistical multiplexer period, new rates to those control mechanisms so as to maintain a selected parameter for each application within a predetermined range.
- the statistical multiplexer implements a statistical multiplexing process for a plurality of data streams competing for access to a communication channel that creates and populates a static table in a memory of the statistical multiplexer.
- the static table has an entry for each unit of data that can be sent over the communication channel in a predetermined time period.
- the statistical multiplexer allocates each entry in the static table to one of the plurality of data streams. If an entry is allocated to a data stream that has a variable rate, the statistical multiplexer stores a predetermined code, such as a null code, in the entry. Conversely, if the entry is allocated to a data stream that has a fixed rate, the statistical multiplexer stores a pointer to the fixed rate data stream in the entry. The pointer identifies the fixed rate data stream and is, in one embodiment, an address for the hardware that generates the fixed rate data stream. Each entry in the static table is either a pointer to a fixed rate data stream or the predetermined code.
- the statistical multiplexer uses the static table to allocate the communication channel capacity among the plurality of data streams competing for access to the communication channel. Specifically, the statistical multiplexer accesses an entry in the static table to determine the data stream in the plurality of data streams that sends the next unit of data to the communication channel during the predetermined time period.
- the statistical multiplexer In addition to the static table, the statistical multiplexer also generates and populates a dynamic table, that is sometimes called a secondary table. In populating the dynamic table, the statistical multiplexer allocates each entry in the dynamic table, in this embodiment, to one of a variable rate data stream and an idle unit of data. Of course, the idle units of data could be considered as just another variable rate data stream, that transmits idle data over the communication channel. If an entry is allocated to a variable rate data stream, the statistical multiplexer stores a pointer to the variable rate data stream in the entry. The pointer identifies the variable rate data stream and is, in one embodiment, an address for the hardware that generates the variable rate data stream. Each entry in the dynamic table is a pointer to either a variable rate data stream or an idle unit of data.
- the statistical multiplexer accesses an entry in the dynamic table upon detecting an entry in the static table containing the predetermined code.
- the accessed entry determines the variable rate data stream in the plurality of data streams that sends the next unit of data to the communication channel.
- the statistical multiplexer is using the static and dynamic tables to allocate the communication channel bandwidth to the various data steams competing for access to the communication channel, the statistical multiplexer is also adjusting a number of units of data, e.g., a number of packets, allocated for transmission over the communication channel for each of the variable rate data streams that has a quality measurement parameter outside a predetermined range. Specifically, the statistical multiplexer is generating new rates for selected variable rate data streams.
- the statistical multiplexer generates a second dynamic table using the adjusted number of units of data allocated for transmission over the communication channel.
- the process used to generate the second dynamic table is the same as that used for the first dynamic table, except the new rates are used where necessary.
- the statistical multiplexer allocates each entry in the second dynamic table, in this embodiment, to one of a variable rate data stream and an idle unit of data. If an entry is allocated to a variable rate data stream, the statistical multiplexer stores a pointer to the variable rate data stream in the entry. Each entry in the second dynamic table is a pointer to either a variable rate data stream or an idle unit of data. After a selected timed interval, e.g., in this embodiment, at about the end of a statistical multiplexer cycle, the statistical multiplexer switches from the first dynamic table to the second dynamic table.
- the statistical multiplexer collects data for each variable rate data stream that characterizes a quality of the variable rate data stream.
- the statistical multiplexer uses the collected data to generate a parameter that characterizes the quality of the variable rate data stream.
- the parameter is a measure of distortion and the predefined range has a lower limit that is a product of a first hysteresis coefficient and a distortion threshold.
- An upper limit of the predetermined range is a product of a second hysteresis coefficient and a distortion threshold.
- the statistical multiplexing process of this invention is applicable to a wide variety of data streams.
- the plurality of data streams includes an encoded video data stream.
- each entry in the primary table is allocated to one of (i) one of the plurality of encoded data streams and (ii) an idle packet;
- a statistical multiplexing process for a plurality of encoded data streams competing for access to a communication channel includes the steps of:
- said table populating step further comprises:
- FIG. 1 is a block diagram of a prior art encoding and decoding system.
- FIG. 2 is a block diagram of a prior art system using a multiplexer for access to a communication channel.
- FIG. 3 is a block diagram of the statistical multiplexer of this invention.
- FIG. 4 is a process flow diagram for rate update operations of the statistical multiplexer of this invention within each statistical multiplexer period.
- FIG. 5 is a process flow diagram for classifying applications within step 402 of FIG. 4 according to the principles of this invention.
- FIG. 6 is a more detailed flow process diagram of step modify rates 403 of FIG. 4 according to the principles of this invention.
- FIG. 7 is a more detailed process flow diagram for increase rates steps 623 within step 403 of this invention.
- FIG. 8 is a more detailed process flow diagram for decrease rate step 622 within step 403 of this invention.
- FIG. 9 is a more detailed process flow diagram for build packet table step 404 of this invention.
- FIG. 10 is a time line for one embodiment of the process of FIG. 4.
- FIG. 11 is a time line for another embodiment of the process of FIG. 4.
- FIG. 12 is a detailed block diagram of the hardware in the statistical multiplexer of this invention.
- FIG. 13 is a timing diagram showing the two time intervals on the application bus within a packet time interval as well as the various message cycles within the first time interval.
- FIG. 14 is a timing diagram for operation of the statistical multiplexer that shows the timing relationship for data transfer over the application bus during the second portion of the packet time interval.
- FIG. 15 is a timing diagram that shows the various relationships of the signals on the application bus when data is driven onto the application bus.
- FIG. 16 is a timing diagram that shows the relationship between the various signals on the application bus when a byte is written during a message cycle.
- FIG. 17 is a timing diagram that shows the relationship between the various signals on the application bus when a byte is read during a message cycle.
- FIG. 18 is a process flow diagram that shows how the statistical multiplexer allocates each packet within a window to either a fixed rate application or a variable rate application.
- a statistical multiplexer 300 selectively passes packets of encoded data from encoders 302-1 to 302-L to communication channel 330 so as to maximize the quality of the encoded data representing each of applications 301-1 to 301-L.
- the encoded data in the form of packets in this embodiment, is transmitted over communication channel 330 to a decoding system (not shown) which in turn decodes the data.
- a decoding system not shown
- video data is used as an example of the principles of this invention, those skilled in the art will recognize that the principles of the invention can also be applied to other signal sources that are transmitted over a communication channel.
- an application 301-i is encoded by encoder 302-i, where "i" ranges from 1 to L.
- a reference to application 301-i should be interpreted as including a reference to encoder 302-i that receives as an input signal application 301-i.
- variable rate is used to modify an application, an encoder, or an encoded data stream, it means that the encoder, that receives the application as input and generates an encoded data stream, can change the rate of data compression over time.
- variable rate is used to modify an application, an encoder, or an encoded data stream, it means that the encoder, that receives the application as input and generates an encoded data stream, does not change the rate of data compression except at configuration time.
- Statistical multiplexer 300 of this invention distributes the total capacity of communication channel 330 over some interval of time among the plurality of encoded data streams for all applications 301-1 to 301-L so that the quality of applications 301-1 to 301-L is maximized. At the same time, statistical multiplexer 300 assures that the communication channel capacity is not exceeded. In other words, statistical multiplexer 300 of this invention determines what fraction of the communication channel capacity should be allocated to an application 301-i so as to maximize the quality of the decoded signals of all applications.
- a table is stored in memory 313 of controller 310.
- the table has an entry for each unit of encoded data that can be transmitted over communication channel 330 in a predetermined time interval, e.g., one second.
- Each entry in the table is allocated, as explained more completely below, to one of encoders 302-1 to 302-L, i.e, to an encoded data stream from encoder 302-i. More entries are allocated for an encoder 302-i that has a high encoding rate than for an encoder 302-j that has a slower encoding rate.
- the entries in the table define the number of units of data that are transmitted over communication channel 330 in the predetermined time interval for each of encoders 302-1 to 302-L.
- controller 310 accesses each entry in the table to obtain a pointer, e.g., an address, to an encoder 302-i that can transmit the next unit of encoded data to first-in-first-out memory (FIFO) 350 over application control bus 360.
- a pointer e.g., an address
- controller 310 moves sequentially through the entries in the table stored in memory 313 and so allocates the bandwidth of communication channel 330 to encoders 302-1 to 302-L in a predetermined sequence over the predetermined time interval.
- statistical multiplexer 300 dynamically adjusts the data compression rate for each variable rate application 301-i over a selected interval of time that is referred to as a window, so that the quality of the encoded data streams is maximized over the selected time interval.
- Each fixed rate application 301-i receives an allocated quota of packets, i.e., a fraction of the communication channel bandwidth over the selected time interval.
- Statistical multiplexer 300 adjusts the data compression rate, sometimes referred to simply as "rate" to maintain a measure of distortion, as defined more completely below, for each variable rate application 301-i below a predetermined limit.
- rate the data compression rate
- statistical multiplexer 300 operates as an outer shell over the video encoder rate control mechanism by providing rates to that control mechanism so as to maintain a selected parameter for each variable rate application 301-i within a predetermined range.
- controller 310 While controller 310 is stepping through the table stored in memory 313 to select packets, e.g., units of encoded data, from encoder 302-1 to 302-L for transmission over communication channel 330, controller 310 is also collecting and storing data in memory 313 from each variable rate encoder 302-i. Controller 310 analyzes the collected data and adjusts the compression rate for each variable rate encoder 302-i to maximize the quality for all encoders.
- packets e.g., units of encoded data
- the new compression rates are used to build a new table that is used over the next window.
- a window is defined more completely below.
- controller 310 is selecting packets from encoders 302-1 to 302-L for transmission to communication channel 330 and at the same time is generating a new table of compression rates.
- the new compression rates are transmitted to encoders 302-i that are processing variable rate applications.
- encoders 302-i that are processing variable rate applications shift to the new compression rates and then statistical multiplexer 300 shifts to the new table. Specifically, statistical multiplexer 300 switches to the new table.
- the table utilized by statistical multiplexer 300 to allocate each unit of data that can be transmitted over communication channel 330 over the window is in fact two tables, a static table and a dynamic table.
- the static table has an entry for each unit of encoded data that can be transmitted over communication channel 330 in the predetermined time interval.
- the static table is populated. Specifically, the entries in the static table are allocated to the fixed rate and variable rate applications, i.e, each entry is allocated to one of a plurality of data streams. For each entry that is allocated to a fixed rate data stream from a fixed rate encoder, a pointer is stored in the entry to the fixed rate data stream. For each entry that is allocated to a variable rate data stream, a predetermined code, e.g., a null code is stored in the entry.
- a predetermined code e.g., a null code
- the dynamic table is populated with pointers to variable rate applications. Specifically, each entry in the dynamic table is allocated to one of the variable rate applications, i.e., to a variable rate encoded data stream from a variable rate application, or to an idle packet. In each entry that is allocated to a variable rate application, a pointer is stored to that variable rate application. When statistical multiplexer 300 accesses the predetermined code in the static table, the next entry in the dynamic table is used to determine the variable rate encoder that sends the next unit of data to communication channel 330.
- FIG. 4 is a process flow diagram for statistical multiplexer 300.
- statistical multiplexer 300 Upon start-up, i.e., at initial configuration and at reconfiguration, statistical multiplexer 300 enters initialization step 401.
- system supervisor 340 (FIG. 3) provides configuration information for use in subsequent operation of statistical multiplexer 300.
- the configuration information is stored in memory 313.
- the stored configuration information includes a minimum data rate Rmin -- i, a maximum data rate Rmax -- i and a guaranteed data rate Rgtd -- i, a maximum buffer size Bmax -- i, a maximum distortion coefficient Dmax -- i, a priority number P -- i, and distortion hysteresis coefficients K1 -- i and K2 -- i for each encoder 302-i.
- the rates provided by system supervisor 340 are converted, if necessary, to units that are compatible with statistical multiplexer 300.
- step 401 all encoders 302-1 to 302-L are assigned their nominal rates.
- the nominal rate is the actual rate.
- the nominal rate is either the guaranteed rate, or some other pre-defined value, such as the minimum rate.
- each variable rate encoder 302-i is assigned guaranteed data rate Rgtd -- i as initial rate R -- i for application 301-i.
- a distortion D -- i for each variable rate encoder 302-i is set to maximum distortion coefficient Dmax -- i.
- Step 402. Collection and classification step 402 is also entered at the end of each statistical multiplexer period, sometimes called a statistical multiplexer cycle.
- Data required to determine an updated distortion D -- i for each variable rate application 301-i is collected in step 402.
- distortion D -- i involves a number of parameters that characterize the video sequence that is being processed by variable rate encoder 302-i.
- Distortion D -- i itself may be provided to statistical multiplexer 300 by variable rate encoder 302-i or variable rate encoder 302-i can provide parameters to statistical multiplexer 300 so that statistical multiplexer 300 can determine distortion D -- i for variable rate encoder 302-i.
- statistical multiplexer 300 polls each variable rate encoder 302-i in a round robin fashion in a pre-defined sequence and reads one byte of information at a time from each variable rate encoder 302-i. Distortion D -- i is determined once for each picture in the sequence by statistical multiplexer 300. Thus, the frequency of transferring the distortion parameters from variable rate encoder 302-i to statistical multiplexer 300 is once per picture. Consequently, the collection portion of step 402 is performed by statistical multiplexer 300 on an ongoing basis.
- Statistical multiplexer 300 tracks the variation in buffer fullness of each variable rate encoder 302-i to ensure that there is no overflow or underflow whenever a rate is altered in step 402.
- the buffer fullness information is available in each variable rate encoder 302-i and is passed, once per picture, to statistical multiplexer 300.
- Distortion D -- i is determined by statistical multiplexer 300 for each variable rate application 301-i in step 402 based on distortion parameters that were obtained from variable rate encoder 302-i prior to initiation of step 402. Specifically, any new distortion information received in collection and classification step 402 while step 402 is active, is not effective until the next time step 402 becomes active. Thus, statistical multiplexer 300 uses data collected during the previous statistical multiplexing cycle in step 402.
- the classification step in step 402 assigns each variable rate application 301-i to one of a plurality of classes.
- the plurality of classes includes six classes.
- the classes are defined based on (i) whether rate R -- i is less than, or greater than or equal to guaranteed rate Rgtd -- i for variable rate encoder 302-i; and (ii) the relationship of distortion D -- i to maximum distortion coefficient Dmax -- i.
- a new rate for at least each non-fixed rate application is generated, as explained more completely below, for each encoder 302-i where a change in rate preferably either improves distortion D -- i or does not increase distortion D -- i to greater than a maximum distortion.
- the new rate is simply set equal to the old rate.
- the new rates are checked to determine whether the total rate exceeds the capacity of communication channel 330. The new rates are adjusted so as to utilize as much of the capacity of communication channel 330 as possible without exceeding its capacity.
- build table 404 Upon completion of modify rates step 403, build table 404 builds a new table, as explained more completely below.
- a unit of encoded data sent over communication channel 330 is referred to as a packet and so build table 404 builds a new packet schedule table.
- the rate requirements of different applications 301-i change rapidly with time, and consequently the quota of packets allocated to an application changes with time.
- Statistical multiplexer 300 ensures that each application 301-i gets its allocated quota of packets over a specified window of time in build table step 404.
- the packet schedule table that is built in step 404, is defined for the next statistical multiplexer cycle, i.e., a window, and contains information about which application is allocated each packet in that time interval.
- the allocation of packets is such that the packets belonging to any one application are approximately uniformly spread over the time interval. This minimizes any additional buffering in a demultiplexer in the decoding system. (The demultiplexer selects the packets in the stream of incoming data stream that are of interest to the decoding system.)
- the packet schedule table based on the new rates allocated to each variable rate encoder 302-i in step 403, comes into effect at the start of the next window.
- a large window size reduces the reaction of statistical multiplexer 300 to changes in distortion, e.g., a scene change might cause a video sequence to become more complex. In such a case if rate R -- i is low, the scene change results in distortion D -- i becoming large and statistical multiplexer 300 should allocate more bits to encoder 302-i.
- the window size is large, statistical multiplexer 300 fails to react promptly to the scene change unless the scene change fortuitously occurs near the end of the window.
- a picture refers to a characteristic unit of the encoder. For most cases, a picture is a frame, but since this invention is not limited to acting only on frames, the more general term "picture" is used. In the case of non-video data, some other appropriate unit may be used, e.g., an audio frame.
- step 404 statistical multiplexer 300 communicates each new rate to the respective variable rate encoder 302-i in pass rates step 405. Again, a pre-defined order can be used for this purpose. Finally, at some instant in switch rates step 406, variable rate encoders 302-i switch their internal rate control to the new rates. At the same time, statistical multiplexer 300 switches to the new packet schedule table built in step 404.
- synchronization between statistical multiplexer 300 and applications 301-1 to 301-L is maintained to ensure that the sum of all the encoder rates, the total rate, always equals the communication channel capacity. This maximizes the efficiency of communication channel utilization and also eliminates the possibility of allocating more capacity to the encoders than communication channel 330 can support.
- step 406 After switch rate step 406 is completed processing transfers to period complete step 407. When the period is complete, steps 402-407 are repeated. Thus, the operations in steps 402-407 occur once every period.
- system supervisor 340 specifies the total number of fixed rate applications and the total number of variable rate applications processed by statistical multiplexer 300.
- System supervisor 340 also specifies parameters needed to characterize a primary packet schedule table, sometimes called a primary table, used by statistical multiplexer 300.
- the primary packet schedule table parameters include a number N of packets that are supplied by statistical multiplexer 300 to communication channel 330 in approximately one second, i.e, a size of the primary packet schedule table, and a number V of entries in the primary schedule table that must be allocated to variable rate applications.
- system supervisor 340 sets a parameter, called distortion threshold Dmax -- i, which is sometimes referred to as the target distortion, for each variable rate application 301-i.
- distortion threshold Dmax -- i is a distortion such that distortion above distortion threshold Dmax -- i is deemed noticeable to the human eye.
- Distortion threshold Dmax -- i is non-negative and in one embodiment, is a non-negative real number with two byte precision.
- System supervisor 340 also sets rate bounds, typically in bits/second, for each of applications 301-1 to 301-L in initialization step 401.
- the rate bounds are defined by a minimum data rate Rmin -- i, a maximum data rate Rmax -- i, and a guaranteed data rate Rgtd -- i.
- the three rate bounds are set to the same value by system supervisor 340.
- Minimum rate Rmin -- i is a lower bound on the rate allocated to a variable rate application 301-i by statistical multiplexer 300. In other words, this rate is assured irrespective of the reconstruction quality of that application. Minimum rate Rmin -- i can not be negative.
- Maximum rate Rmax -- i is an upper bound on the rate allocated to a variable rate application 301-i by statistical multiplexer 300. This rate cannot be exceeded irrespective of the reconstruction quality of that application.
- the reconstruction quality is measured by a distortion factor D -- i, as explained more completely below.
- Maximum rate Rmax -- i is equal to or greater than minimum rate Rmin -- i.
- Guaranteed rate Rgtd -- i is a rate that is guaranteed by statistical multiplexer 300 to a variable rate application 301-i to enable that application to achieve its target distortion. This parameter may or may not be used by a particular application as determined by system supervisor 340. If guaranteed rate Rgtd -- i is to be ignored, distortion threshold Dmax -- i is set equal to zero at configuration time. Otherwise, guaranteed rate Rgtd -- i must be within the range [Rmin -- i, Rmax -- i]. Independent of whether guaranteed rate Rgtd -- i is used, at start-up, each variable rate application initially is assigned its guaranteed rate Rgtd -- i.
- Rgtd -- i for variable rate applications, and the actual rates of all fixed rate applications, which are represented herein by Rmin -- i, should equal the channel capacity, i.e., ##EQU1## where "A" is the set of all applications 301-i that have a specified guaranteed rate Rgtd -- i and "B" is the set of all other applications. Not all the applications connected to multiplexer 300 need be statistically multiplexed, i.e., some or all of the applications can have fixed rates for the entire duration of operation. In this embodiment, it is the responsibility of system supervisor 340 to ensure that the above relationship is satisfied.
- the rates specified by system supervisor 340 are usually specified in terms of bits/second.
- most systems transfer bits from the encoder buffer in the form of "packets", where a packet contains several bits.
- quantization of rate is not at the bit-level, but at the level of several bits.
- the communication channel capacity is translated to a specific number of packets/second.
- These packets must be allocated to encoders 302-1 to 302-L such that each encoder's rate requirement is satisfied. Consequently, the rates in bits/second are converted in initialization step 401 to the appropriate packets per time interval.
- each rate is converted to a rate in packets per second. Since N is the number of entries in the primary table, each rate is converted to the number of packets in primary packet schedule table (packets per P.T.) that corresponds to the rate in bits per second.
- statistical multiplexer 300 also uses a secondary table that has a fixed number of entries S. For each variable rate application, the rate is also converted to the number of packets in the secondary packet schedule table (packets per S.T.). If S is 192, the rate in packets/S.T. is
- int is the integer function. Since the sum of the assigned rates, which in this embodiment are the guaranteed rates, should equal the total communication channel capacity allocated to variable rate encoders 302-i, the sum of the assigned rates in packets/S.T. equals 192. The truncation introduced by the integer function may cause the sum of the assigned rates to be less than the total communication channel capacity allocated to variable rate encoders 302-i. In this case, any unassigned packets are arbitrarily assigned to variable rate encoders by statistical multiplexer 300.
- statistical multiplexer 300 After the translation of the rates to packets/S.T., statistical multiplexer 300 recalculates the rates in terms of bits/second and the resulting guaranteed rate Rgtd -- i is passed to encoder 302-i. This recalculation is necessitated by the truncation introduced by the integer function. To facilitate the recalculation, system supervisor 340 provides statistical multiplexer 300 a rate calibration constant Y, which is defined as: ##EQU2## where:
- OV is the number of overhead bits in each packet, which in this embodiment is 24 bits;
- C is the nominal total statistical multiplexer output rate (in bits/second);
- TOL M is the tolerance of the statistical multiplexer clock (expressed as a fraction)
- P is the channel packet size in bits (1040 bits in one embodiment);
- V is the total number of entries in the primary table assigned to variable rate applications
- N is the total number of entries in the primary table
- TOL V is the tolerance of the data rate at the input to the encoder.
- Rate calibration constant Y is provided to each encoder 302-1 to 302-L at configuration time.
- a rate R in bits/second corresponding to Q packets/S.T. is given by:
- Q is the number of packets/S.T. assigned to an application.
- the constant "400" is required by the MPEG compression standard which counts rates in multiples of 400 bits/second.
- System supervisor 340 in initialization step 401 assigns a priority number P -- i for each variable rate encoder 302-i to indicate its importance.
- priority number P -- i is used to weight the distortion of each variable rate encoder 302-i, as explained more completely below. Consequently, a large priority number P -- i artificially scales up the distortion, resulting in variable rate encoder 302-i demanding more bits of communication channel 330.
- Priority number P -- i is non-negative and, in one embodiment, is an integer within the range of [1, 16].
- statistical multiplexer 300 normalizes priority number P -- i of each variable rate encoder 302-i by dividing priority number P -- i by the average of all of priority numbers.
- the resulting normalized priority number which is also indicated by P -- i, is stored by statistical multiplexer 300 in memory 313 and is used in the operations described below.
- each variable rate application 301-i Associated with each variable rate application 301-i are two hysteresis coefficients K1 -- i and K2 -- i, which are used to introduce hysteresis in the process of determining rates for each fixed time interval.
- the default values for hysteresis coefficients K1 -- i and K2 -- i are 0.9 and 1.1, respectively.
- system supervisor 340 also defines maximum buffer size Bmax -- i for encoder 302-i.
- Statistical multiplexer 300 uses maximum buffer size Bmax -- i and maximum rate Rmax -- i for each variable rate encoder 302-i to determine the end-to-end system delay time ⁇ -- i, i.e., the time in seconds from when a frame is input to an encoding system to when it is ultimately displayed by the decoding system.
- the end-to-end system delay time is actually system delay time ⁇ -- i plus other time delays introduced by frame buffering etc.
- the relevant information for a variable rate encoder 302-i is captured by defining end-to-end system delay time ⁇ -- i as:
- System delay time ⁇ -- i in this embodiment, cannot be changed without loss of encoder-decoder picture synchronization until the next re-configuration time.
- Statistical multiplexer 300 ensures that system delay time ⁇ -- i for each application 301-i is not altered and at the same time there is no buffer over-flow or under-flow in the encoding and decoding systems.
- system delay time ⁇ -- i is allowed to change and frame dropping and/or repeating is allowed in the display.
- system supervisor 340 sets the starting distortion D -- i for each variable rate application 301-i to its distortion threshold Dmax -- i.
- Table I is a summary of the parameters provided by system supervisor 340 to statistical multiplexer 300 for each variable rate encoder 302-i. In another embodiment, the information in Table I could be supplied for both variable and fixed rate encoders.
- step 402 collects data required to determine distortion D -- i for each variable rate encoder 302-i and the variation in buffer fullness of each variable rate encoder 302-i on an ongoing basis.
- communication between encoders 302-1 to 302-L and statistical multiplexer 300 is implemented through a "message cycle".
- Statistical multiplexer 300 can read or write one byte of information to any of encoders 302-1 to 302-L during a message cycle in each packet time.
- a packet time sometimes called a packet interval, is typically the time interval required to transmit 130 bytes of data over communication channel 330, but the time and/or the packet size can vary.
- statistical multiplexer 300 can broadcast a byte of information to all encoders 302-1 to 302-L during the message cycle. If encoder 302-i merely passes the parameters necessary to determine distortion D -- i to statistical multiplexer 300, distortion D -- i spans several packet times for that encoder.
- statistical multiplexer 300 and encoders 302-1 to 302-L are not critical to this invention.
- the important aspect is the data required by statistical multiplexer 300 and how statistical multiplexer 300 processes the data.
- the required data can be passed in a wide variety of ways. Nevertheless, in one embodiment, all direct communication between statistical multiplexers 300 and encoders 302-1 to 302-L is performed by reading entries from and writing entries to a general communications table in memory 313 of statistical multiplexer 300.
- state machine 311 controls hardware that (a) writes one byte to a first register onboard an encoder 302-i or to a first first-in-first-out memory (FIFO) onboard an encoder 302-i, or (b) reads one byte from a second register onboard encoder 302-i or from a second first-in-first-out memory (FIFO) onboard encoder 302-i over application control bus 360.
- the first register onboard each encoder 302-i contains a write owner FIFO flag and a read owner FIFO flag either of which can be set to "mux" or "encoder.”
- the second register onboard each encoder 302-i contains a write data valid flag.
- first and second FIFOs and registers are used, but this is illustrative only and those skilled in the art will recognize that the communications between encoders 302-i and statistical multiplexer 300 can be accomplished in a wide variety of ways without affecting the operation of statistical multiplexer 300.
- the important aspect, as indicated above, is that each encoder collects distortion and buffer fullness data and the data are communicated to statistical multiplexer 300 at appropriate intervals for operation of statistical multiplexer 300.
- statistical multiplexer 300 must communicate new rate information to variable rate encoders 302-i once per statistical multiplexer cycle.
- Two processes are used to communicate data from encoder 302-i to statistical multiplexer 300.
- statistical multiplexer 300 in the following order, (1) sets the write FIFO owner flag of encoder 302-i to "mux"; (2) reads the write data valid flag and six bytes from the first FIFO; and (3) sets the write FIFO owner flag to "encoder".
- statistical multiplexer 300 examines the write data valid flag and if the flag is not valid, discards the six bytes of data. This process is repeated for each encoder at least once every twenty milliseconds.
- encoder 302-i checks the write FIFO owner flag and the state of the first FIFO when encoder 302-i has collected the distortion and buffer fullness data, which is once per picture. If the write FIFO owner flag is set to "encoder," and the first FIFO is empty, encoder 302-i writes the collected data to the first FIFO and upon completion sets the write data valid flag. If either of the conditions is not true, encoder 302-i waits until both conditions are true before writing to the first FIFO. If new data becomes available before the collected data can be written to the first FIFO, the collected data is discarded and replaced with the new data.
- Data communication from statistical multiplexer 300 to encoder 302-i, i.e., transfer of a new rate, is done in a three step process.
- Statistical multiplexer 300 in the following order, (1) sets the read FIFO owner flag of encoder 302-i to "mux"; (2) writes the new rate to the second FIFO; and (3) sets the read FIFO owner flag to "encoder".
- the writes to the read FIFO owner flag generates interrupts to the encoder processor.
- the encoder processor reads data from the second FIFO until the FIFO is empty.
- each set of parameters for a picture is received by statistical multiplexer 300 from encoder 302-i using the process just described, the set of parameters are used along with the assigned priority P -- i to generate an instantaneous distortion d -- i.
- Instantaneous distortion d -- i is used to update distortion D -- i for variable rate encoder 302-i.
- distortion D -- i for each application is determined recursively, e.g., distortion D -- i is the average of the previous three distortion values. Using a running average for distortion D -- i, as opposed to the most recently determined value, protects against sudden spikes in distortion D -- i.
- a recursive filter is used to update distortion D -- i. Specifically,
- the recursive filter introduces damping which also protects against sudden spikes in distortion D -- i.
- the value of constant ⁇ is determined empirically and a value of 0.8 is used in one embodiment.
- the classification portion of step 402 assigns each variable rate application 301-i to one of a plurality of classes using the current rates and distortions.
- six classes are defined according to Table II.
- the purpose of the classification portion of step 402 is to identify for each variable rate application 301-i whether current rate R -- i for that application is providing an acceptable distortion D -- i and classify application 301-i for the appropriate action in modify rates step 403.
- Process 500 is one possible implementation of the classification portion of step 402.
- step 503 If distortion D -- i is too high, processing transfers from step 502 to rate check step 503, and conversely to distortion too low step 506.
- rate check step 503 if rate R -- i is less than guaranteed rate Rgtd -- i for application 301-i, processing transfers to step 504 and otherwise to step 505.
- step 504 application 301-i is assigned to Class 3 and in step 505, application 301-i is assigned to Class 6. Steps 504 and 505 transfer to additional application step 501.
- Each application 301-i in Class 3 is currently allocated less than guaranteed rate Rgtd -- i and is being compressed at a quality level less than the maximum distortion. Consequently, the rates of the applications in Class 3 should be increased.
- Each application 301-i in Class 6 is currently allocated at least guaranteed rate Rgtd -- i and is being compressed at a quality level less than the maximum distortion. Applications 301-i in Class 6 compete among themselves for rate increases, as described more completely below.
- distortion D -- i for application 301-i is compared with a minimum distortion (K1 -- i)*(Dmax -- i), where the minimum distortion is the product of first hysteresis coefficient K1 -- i and distortion threshold Dmax -- i for application 301-i, i.e.,
- step 506 If distortion D -- i is too low, processing transfers from step 506 to rate check step 507, and conversely to rate check step 510.
- rate check 507 if rate R -- i is less than guaranteed rate Rgtd -- i for variable rate application 301-i, processing transfers to step 508 and otherwise to step 509.
- step 508 application 301-i is assigned to Class 1 and in step 509, application 301-i is assigned to Class 4. Steps 508 and 509 transfer to additional application step 501.
- distortion D -- i is within an acceptable range. Specifically, distortion D -- i of application 301-i is greater than minimum distortion (K1 -- i)*(Dmax -- i) and less than maximum distortion (K2 -- i)*(Dmax -- i), i.e.,
- process 500 assigns each of the variable rate applications to one of the six classes defined in Table II.
- the rates for applications in Class 2 are not changed.
- modify rates step 403 can change the rates for applications in Classes 1 and 3 to 6.
- delta rate increases ⁇ D, ⁇ I, and ⁇ C, as defined below, are zeroed.
- the rates for variable rate applications in Classes 1 and 4 are processed as a group.
- the rates for variable rate applications in Class 3 and the rates for variable rate applications in Class 6 are processed separately. If after the rate adjustments, the capacity of communication channel 330 is not fully utilized, the rates of applications in Classes 3 and 6 are revised. Conversely, if after the rate adjustments, the capacity of communication channel 330 is exceeded, the rates of applications in Classes 4 to 6 are revised.
- all rates are measured in units of packets/secondary table. The unit used to measure the rate affects the choice of coefficients that are determined empirically. Hence, a different unit of measure for the rates will require a different value for the empirically determined coefficients.
- Lower rate process 600 illustrates the rate modification process within step 403 for applications in Classes 1 and 4, i.e., applications with too low a distortion D -- i. Lower rate process 600 is iteratively performed for each application 301-i in Classes 1 and 4.
- lower rate process 600 uses a proportional feedback loop to decrease current rate R -- i for each application 301-i with too low distortion D -- i.
- Use of a proportional feedback loop assumes implicitly that rate R -- i and distortion D -- i of every application 301-i are inversely proportional to each other. In general, such an assumption is not true. However, according to the principles of this invention, rate R -- i is allowed to change only in small increments, as described below, and so there is not too much deviation from the actual rate-distortion curve. This assumption is utilized in all rate adjustment processes in this embodiment. Of course in other embodiments, different functional relationships between a rate and distortion could be used. Also, different functional relationships between a rate and distortion could be used in the various processes that make-up step 403.
- a new rate Rnew -- i for application 301-i with too low distortion D -- i is determined in adjust rate step 601.
- old rate Rold -- i is set equal to the current rate R -- i for variable rate application 301-i, e.g, a table of current rates is copied to a table of old rates.
- reference numeral Rnew -- i is used to distinguish between the old rate and the new rate.
- each new rate Rnew -- i is stored at the appropriate location in the table of current rates so that at the end of modify rates step 403, the table of current rates contains the new rates for the next statistical multiplexer cycle. In this way only two structures, e.g., the two tables, are utilized in modify rates step 403. Therefore, references herein to a new rate is the rate in the current rate table.
- the normalized difference between distortion threshold Dmax -- i and distortion D -- i is scaled by a constant c and added to old rate Rold -- i to generate new rate Rnew -- i.
- constant c was empirically determined and set to a value of 16.
- constant c has the same values for all applications in all classes.
- constant c could also be defined on an application by application basis or alternatively on a class by class basis.
- adjust rate step 601 checks new rate Rnew -- i to ensure that new rate Rnew -- i is within a predetermined range, i.e., the change in the rate is a small decrement.
- new rate Rnew -- i must be in the range of a lower rate bound and an upper rate bound, e.g.,:
- the value of constant s was empirically chosen as 0.9. If new rate Rnew -- i is less than lower rate bound s*Rold -- i, new rate Rnew -- i is set equal to lower rate bound s*Rold -- i.
- new rate Rnew -- i is tested to determine whether the change in the rate is constrained to a small decrement.
- new rate Rnew -- i is tested to determine whether new rate Rnew -- i is less than minimum rate Rmin -- i for application 301-i. If new rate Rnew -- i is less than minimum rate Rmin -- i for application 301-i, new rate Rnew -- i is set equal to minimum rate Rmin -- i.
- adjust buffer size step 602 determines a new effective buffer size.
- new effective buffer size "buf -- sz -- i" is equal to the product of new rate Rnew -- i and system delay time interval ⁇ -- i.
- the buffer size cannot be decreased arbitrarily. Obviously, care must be taken to ensure that new buffer size buf -- sz -- i is not less than the current buffer fullness. Actually, there is an even more strict requirement. New buffer size buf -- sz -- i should not be less than the instantaneous fullness of the encoder buffer as measured over a period of time equal to system delay time interval ⁇ -- i that just preceded the current time. Hence, as described above, statistical multiplexer 300 obtains the buffer fullness value at the end of each picture for application 301-i and stores the largest buffer fullness value, over the period of time ⁇ -- i that just preceded the current time, in memory 313 as maximum buffer fullness threshold max -- buffer -- i.
- a rate is decreased, it is important to ensure that all the bits that have already been inserted into the encoder buffer up to a time ⁇ -- i before the rate change are delivered to the decoder in time ⁇ -- i. This is an issue because the new rate, at which bits will be delivered, is lower than the old rate at which they were generated.
- the rate can be decreased if and only if the buffer fullness over the time interval equal to time ⁇ -- i before the rate change is instituted does not exceed the new buffer size.
- threshold max -- buffer -- i is compared with new buffer size buf -- sz -- i. If new buffer size buf -- sz -- i is less than maximum buffer fullness threshold max -- buffer-i, new rate Rnew -- i is set equal to old rate Rold -- i. Otherwise, new rate Rnew -- i is retained and the operations in adjust buffer size step 602 are complete and processing transfers to accumulate rate change step 603.
- delta rate decrease ⁇ D is the accumulation between new rate Rnew -- i and old rate Rold -- i for applications 301-i with too low distortions. Recall that above delta rate decrease ⁇ D was initialized to zero and -- is reset to zero at the start of each statistical multiplexer cycle.
- Delta rate decrease ⁇ D is negative.
- processing transfers to step 604 which in turn checks whether there are additional applications in Classes 1 and 4 for processing. If all applications in Classes 1 and 4 have been processed, step 604 transfers to processes complete step 630 and otherwise to step 601.
- increase rate process 605 uses a proportional feedback loop to increase current rate R -- i for each application 301-i in Class 3.
- Use of a proportional feedback loop assumes implicitly that rate R -- i and distortion D -- i of every application 301 -- i in Class 3 are inversely proportional to each other. In general, such an assumption is not true.
- rate R -- i is allowed to change only in small increments, as described below, and so there is not too much deviation from the actual rate-distortion curve.
- New rate Rnew -- i for application 301-i in Class 3 is determined in adjust rate step 606.
- old rate Rold -- i is set equal to the current rate R -- i for application 301-i.
- the normalized difference between distortion threshold Dmax -- i and distortion D -- i is scaled by a constant c and added to old rate Rold -- i to generate new rate Rnew -- i.
- constant c was empirically determined and set to a value of 16.
- adjust rate step 606 checks new rate Rnew -- i to ensure that the change in rate is a small increment.
- new rate Rnew -- i must be in a range defined by a lower rate bound and an upper rate bound, e.g.,:
- constant t was empirically selected as 1.1. If new rate Rnew -- i is greater than upper rate bound t*Rold -- i, new rate Rnew -- i is set equal to upper rate bound t*Rold -- i. After new rate Rnew -- i is tested to determine that the change in the rate is constrained to a small increment, new rate Rnew -- i is tested to determine whether new rate Rnew -- i is greater than guaranteed rate Rgtd -- i for application 301-i. If new rate Rnew -- i is greater than guaranteed rate Rgtd -- i for application 301-i, new rate Rnew -- i is set equal to guaranteed rate Rgtd -- i.
- delta rate increase ⁇ I the change in rate for application 301-i, i.e., the difference between new rate Rnew -- i and old rate Rold -- i, is determined and added to delta rate increase ⁇ I, which in turn is stored in memory 313. Recall that above delta rate increase ⁇ I was initialized to zero and is reset to zero at the start of each statistical multiplexer cycle. Specifically,
- Delta rate increase ⁇ I is positive.
- processing transfers to step 608 which in turn checks whether there are additional applications in Class 3 for processing. If all applications in Class 3 have been processed, step 607 transfers to processes complete step 630 and otherwise to step 606. Thus, process 605 is sequentially performed for each variable rate application 301-i in Class 3.
- the applications in Class 6 have a distortion D -- i that is greater than maximum distortion (K2 -- i)*(Dmax -- i) and a rate R -- i that is greater than or equal to guaranteed rate Rgtd -- i.
- the applications in Class 6 are being compressed at distortion values in excess of the target quality despite the fact that the applications have been allocated at least their guaranteed rate. These applications compete amongst themselves in competitive increase rate process 610 to equalize their distortions.
- average distortion Davg of all the applications in Class 6 is determined. Specifically, ##EQU3## where H is the total number of applications in Class 6.
- steps 612 to 616 are performed for each variable rate application 301-i in Class 6. Processing transfers from average distortion step 611 to adjust rate step 612.
- old rate Rold -- i is set equal to current rate R -- i for application 301-i.
- the normalized difference between average distortion Davg and distortion D -- i is scaled by a constant c and added to old rate Rold -- i to generate new rate Rnew -- i.
- constant c was empirically determined and set to a value of 16.
- new rate Rnew -- i is:
- Next adjust rate step 612 checks new rate Rnew -- i to be sure that the change in rate is small. If new rate Rnew -- i increased, new rate Rnew -- i must be in the range defined by a lower rate bound and an upper rate bound, e.g.,:
- constant t was empirically selected as 1.1. If new rate Rnew -- i is greater than upper rate bound t*Rold -- i, new rate Rnew -- i is set equal to upper rate bound t*Rold -- i.
- new rate Rnew -- i must be in the range of lower rate bound and an upper rate bound, e.g.,:
- the value of constant s was empirically chosen as 0.9. If new rate Rnew -- i is less than lower rate bound s*Rold -- i, new rate Rnew -- i is set equal to lower bound rate s*Rold -- i.
- new rate Rnew -- i is tested to determine whether new rate Rnew -- i is in the range of guaranteed rate Rgtd -- i to maximum rate Rmax -- i. If new rate Rnew -- i is less than guaranteed rate Rgtd -- i for application 301-i, new rate Rnew -- i is set equal to guaranteed rate Rgtd -- i. If new rate Rnew -- i is greater than maximum rate Rmax -- i for application 302-i, new rate Rnew -- i is set equal to maximum rate Rmax -- i.
- Adjust buffer 614 step is identical to adjust buffer step 602 described above and that description is incorporated herein by reference. Upon completion of adjust buffer step 614, processing transfers to accumulate rate change step 615.
- accumulate rate change step 615 accumulates the difference between the new and old rates for all variable rate applications in Class 6. Specifically,
- ⁇ C can be either positive or negative and is zeroed at the start of each statistical multiplexer cycle.
- step 616 Upon completion of accumulate rate change step 615, processing transfers to step 616 which in turn checks whether there are additional applications in Class 6 for processing. If all applications in Class 6 have been processed, step 616 transfers to processes complete step 630 and otherwise to step 612. Thus, steps 612 to 616 of process 610 are iteratively performed for each application in Class 6.
- steps 403 processes 600, 605, and 610 can run sequentially or in parallel.
- processes complete check 630 passes processing to accumulate rate changes step 620.
- Accumulate rate changes step 620 determines the total difference between the new rates and the old rates so that capacity of communication channel 330 can be fully utilized but not overloaded.
- net rate change ⁇ is determined by summing ⁇ D, ⁇ I, and ⁇ C. Specifically,
- net rate change ⁇ is less than zero, the operations performed so far in modify rates step 403 have resulted in a net decrease in the allocated rates. Conversely, if net rate change ⁇ is greater than zero, the operations performed so far in modify rates step 403 have resulted in a net increase in the allocated rates. If net rate change ⁇ is zero, the operations performed so far in modify rates step 403 have resulted in no net change in the allocated rates.
- Channel capacity check 621 determines which of these options occurred.
- check 621 passes processing to increase rates step 623 which in turn distributes the available bits, as described below, amongst the applications in Classes 3 and 6 so as to maximize the channel bandwidth usage. If there is a net increase in the allocated rates, check 621 passes processing to decrease rates step 622, which in turn reduces the rates of some of the applications so as to operate within the capacity of communication channel 330. If there is no net change in the allocated rates, check 621 transfers processing directly to build packet table step 404. Similarly, upon completion, step 623 transfer processing to step 404. Step 622 transfers processing to step 404, if the rates are successfully decreased and otherwise to step 407.
- step 623 The process of increase rates step 623 is shown in more detail in FIG. 7.
- Applications with distortion D -- i greater than maximum distortion (K2 -- i)*(Dmax -- i), i.e, applications in Classes 3 and 6, are considered as candidates for increased rates.
- applications in Class 3 are initially processed separately from applications in Class 6.
- parameter excess -- i is generated by subtracting new rate Rnew -- i from guaranteed rate Rgtd -- i. Parameter excess -- i is stored for subsequent use.
- parameter excess -- i is generated by subtracting new rate Rnew -- i from maximum rate Rmax -- i. Parameter excess -- i generated in step 704 also is stored for subsequent use.
- Parameterize excess step 701 transfers processing to additional applications step 703, which returns processing to step 701 if additional Class 3 applications remain to be processed and otherwise to step 705.
- parameterize excess step 704 transfers processing to additional applications step 706, which returns processing to step 704 if additional Class 6 applications remain to be processed and otherwise to step 705.
- step 705 begins processing. Initially, in accumulate excess step 705 a parameter sum -- excess is stored as zero. Accumulate excess step 705 retrieves parameter sum -- excess from memory 313 and adds each parameter excess -- i in succession to the current value of parameter sum -- excess. The final value of parameter sum -- excess is then stored in memory 313.
- revised new rate Rrnew -- i is generated by increasing rate Rnew -- i by the fraction of the available channel capacity attributable to this application.
- the first structure has the original rates for applications 301-i in Classes 2 and 5 and the new rates for applications 301-i in Classes 1, 3, 4, and 6.
- the second structure has the original rates for applications 301-i in Classes 1, 3, 4, and 6.
- new rate Rnew -- i refers to the rate in the first structure at the start of step 707.
- New rate Rnew -- i is processed to generate a revised new rate Rrnew -- i, which is then stored in the first structure. Specifically, ##EQU4##
- Next adjust rate step 707 checks revised new rate Rrnew -- i to be sure that the change in rate is a small increment.
- Revised new rate Rrnew -- i must be in the range defined by a lower rate bound and an upper rate bound, e.g.,:
- constant t was empirically selected as 1.1. If revised new rate Rrnew -- i is greater than upper rate bound t*Rold -- i, revised new rate Rrnew -- is set equal to upper rate bound t*Rold -- i.
- step 708 Upon completion of step 707, step 708 checks whether there are any remaining applications in Classes 3 and 6 that have not been processed in step 707. If there are remaining applications, processing returns to step 707. After each of the applications in Classes 3 and 6 have been processed in step 707, any channel packets that remain unassigned are transmitted as idle packets.
- step 622 One embodiment of decrease rates step 622 is shown in more detail in FIG. 8.
- Applications 301 -- i with rates greater than or equal to guaranteed rate Rgtd -- i are considered as candidates for decreasing the rates in step 622, i.e., applications 301 -- i in Classes 4 to 6. However, if previous processing reduced rate Rnew -- i below guaranteed rate Rgtd -- i for any application 301-i in Class 4, these applications are not processed in decrease rates step 622.
- parameter excess -- i is generated by subtracting guaranteed rate Rgtd -- i from new rate Rnew -- i.
- Parameter excess -- i is stored in memory.
- Parameterize excess step 801 transfers processing to additional applications step 802, which returns processing to step 801 if additional applications with new rate Rnew -- i greater than or equal to guaranteed rate Rgtd -- i remain to be processed and otherwise to step 803.
- parameter excess -- i is stored in memory for each application with new rate Rnew -- i greater than or equal to guaranteed rate Rgtd -- i.
- parameter sum -- excess is stored as zero.
- Accumulate excess step 803 retrieves parameter sum excess from memory 313 and then sequentially retrieves each of the stored parameters excess -- i and adds the retrieved parameter excess -- i to the current value of parameter sum -- excess. The resulting value of parameter sum -- excess is then stored in memory 313. Upon completion, accumulate excess step 803 transfers processing to adjust rate step 804.
- new rate Rnew -- i refers to the rate in the first structure at the start of step 804. New rate Rnew -- i is processed to generate a revised new rate Rrnew -- i which is then stored in the first structure.
- Revised new rate Rrnew -- i for application 301-i is generated by decreasing new rate Rnew -- i by the fraction of the available channel capacity attributable to application 301 -- i. Specifically, ##EQU5##
- adjust rate step 804 transfers to rate in range step 805.
- Step 805 checks revised new rate Rrnew -- i to ensure that revised new rate Rrnew -- i is within a predetermined range, i.e., the change in the rate is a small decrement.
- revised new rate Rrnew -- i must be in the range of a lower rate bound and an upper rate bound, e.g.,:
- step 805 transfers processing to step 407, and conversely to adjust buffer size 806.
- adjust buffer size step 806 determines a new effective buffer size.
- New effective buffer size "buf -- sz -- i" is equal to the product of revised new rate Rrnew -- i and system delay time interval ⁇ -- i.
- threshold max -- buffer -- i is compared with new buffer size buf -- sz -- i and processing transfers from step 806 to step 807.
- step 807 if new buffer size buf -- sz -- i is less than maximum buffer fullness threshold max -- buffer -- i, processing transfers to step 407 and conversely to step 809. In test step 809, processing returns to step 804 if additional applications with new rate Rnew -- i greater than or equal to guaranteed rate Rgtd -- i remain to be processed and otherwise to build packet table step 404.
- step 622 all applications with a rate R -- i greater than or equal to guaranteed rate Rgtd -- i were processed.
- This embodiment is illustrative only and -- is not intended to limit the invention to the particular set of applications.
- an iterative process is used. Initially, only applications in Class 4 are processed as described above for step 622 and the decrease in channel capacity is compared with the excess capacity detected in step 621. If the decrease in capacity is more than the excess capacity, step 622 is complete. Conversely, if the decrease in capacity is less than the excess capacity, applications in Classes 4 and 5 are processed, and the decrease in capacity is determined. If the decrease in capacity for applications in Classes 4 and 5 is more than the excess capacity, step 622 is complete. Conversely, step 622 is performed exactly as described above with respect to FIG. 8. This method requires more time, but it may also improve the overall performance, if it is unnecessary to reduce the rate for applications in Class 6.
- modify rate step 403, as described above, is modified to reduce the complexity of the process at the cost of some performance efficiency. Specifically, the adjust buffer size steps are eliminated. The adjustment of the buffer size is not done until after all the rate determinations are completed. Then, when new rates are available for all applications, statistical multiplexer 300 performs a buffer size check, i.e., the buffer fullness check, for all those applications with a new rate that is less than the old rate. If an application fails to satisfy the buffer fullness requirement, the new rates for all the application are dropped and all the applications are assigned the old rates for the next period.
- a buffer size check i.e., the buffer fullness check
- modify rates step 403 assures every application 301-i, that has guaranteed rate Rgtd -- i defined, receives a guaranteed number of bits per second to achieve a target distortion so that the application preferably is within Classes 2 and 5. Furthermore, if an application achieves its target distortion with a rate less than or equal to the guaranteed rate, this rate is not altered regardless of the performance of other applications. This means that if the target distortion level and guaranteed rate are chosen appropriately, statistical multiplexer 300 can assure performance at the requested distortion level. This permits control of performance on an individual application basis, which might be necessary in the case of premium and pay-per-view applications.
- modify rates step 403 can be simplified so as to force the applications to compete on a global basis. This can be done by setting the target distortion of all the applications equal to zero. In this way only a part of the process is performed, i.e., only process 610, in effect driving the system to a state where the (weighted) distortion values of all applications are approximately equal.
- a table is generated that contains the rates for each variable rate application for the next statistical multiplexer cycle. Alternatively, the table can contain the both the fixed and variable rates for the next statistical multiplexer cycle.
- a particular process is used to organize the packet schedule table.
- the process is first considered generally and then specific applications of the process are considered. This process is only illustrative of one way to organize the packet schedule table and is not intended to limit the invention to this particular process.
- a selected interval of time i.e., a window, containing an integer number E of packets is considered, i.e., E is the total number of packets that can be transmitted over communication channel 330 in the selected time interval.
- Statistical multiplexer 300 is handling L applications 301-1 to 301-L and for any application 301-i, the number of packets allocated over this window is m -- i.
- the number of packets m -- i required for each application over the selected time interval is known.
- An obvious constraint is that the total number of packets demanded by applications 301-1 to 301-L should not exceed the total available packets, i.e., ##EQU6##
- the process of this invention assigns each packet to the application that is the most deserving at the time.
- the determination of which application is the most deserving is based on the number of packets already assigned to that application up to that point (actual allocation) in the window and the number of packets that the application should have been allocated up to that point (target allocation) in the window. Since packets should be uniformly distributed over the entire window, the target allocation for application 301-i up to packet time n is
- this is the number of packets that the application 301-i should have received by the nth packet.
- figure of merit ⁇ -- i(n) is used to determine which application is most deserving of the next packet.
- figure of merit ⁇ -- i(n) is defined by:
- figure of merit ⁇ -- i(n) is determined for each of the L applications, and the nth packet is allocated to the application having the largest positive figure of merit ⁇ -- i(n). Any remaining packets are inserted as idle packets. By repeating this operation for each packet, packets are distributed to all L applications in a reasonably uniform manner, i.e, the packet schedule table is generated.
- figure of merit ⁇ -- i(n) is not used because it requires a divide and a multiply which is slow when implemented in hardware. Rather, an equivalent figure of merit is used that does not require the divide and so the packet schedule table can be generated very quickly in hardware.
- new figure of merit ⁇ -- i(n) is obtained by multiplying figure of merit ⁇ -- i(n) by the number E of packets in the window, i.e.,
- the packet schedule table is built by executing the process illustrated in FIG. 9.
- figure of merit ⁇ -- i(n) is set to zero for each application:
- figure of merit ⁇ -- i(n) is set to m -- i for each application.
- index n for the current packet number is set to zero as is index i for the current application.
- Additional packet check step 902 increments current packet index n and then checks index n to determine whether index n is greater than total number of packets E. If index n is less than or equal to total number of packets E, processing transfers to additional application check step 903 and otherwise step 404 ends.
- Additional application check step 904 increments current application index i and then checks index i to determine whether index i is greater than total number of applications L. If index i is less than or equal to total number of applications L, processing transfers to update figure of merit step 905 and otherwise to assign packet step 906.
- figure of merit ⁇ -- i(n) is first generated.
- number of packets m -- i allocated over this window to application 301-i is added to figure of merit ⁇ -- i(n) and processing returns to additional application step 904. Notice that this repetitive addition effectively forms the product n * (m -- i) in figure of merit ⁇ -- i(n).
- assign packet step 906 the application with the largest positive figure of merit ⁇ -- i(n), is assigned packet n, i.e., a pointer to the encoder for the application assigned packet n is put in the packet schedule table at location n.
- the pointer is an address that identifies the encoder.
- the application with the largest number of packets m -- i allocated over this window is assigned packet n.
- the application with the smallest number of packets m -- i allocated over this time interval is assigned packet n.
- other tie-breaking rules could also be used. If no figure of merit ⁇ -- i(n) is greater than zero, the packet is tagged as an idle packet. After packet n is assigned, total number of packets E is subtracted from figure of merit ⁇ -- i(n) for the application assigned packet n.
- an idle source can be defined with its own allocation of packets m -- j and so in each window m -- j packets are transmitted as idle packets.
- Statistical multiplexer 300 has to schedule packets for applications operating with both variable and fixed rates. Although variable rate applications demand a new packet schedule table for every window, statistical multiplexer 300 must ensure that the fixed rate applications also get their required share of packets.
- the number of packets allocated over the window is m -- i, where the number of packets allocated for a particular variable rate application 301-i is defined by multiplying the rate in packets per second for application 301-i from the table generated in step 403 by the size of the window in seconds and truncating the product to the largest integer value that is less than this product.
- the number of packets allocated over the window is m -- j, where the number of packets allocated for a particular fixed rate application 301-i is defined by multiplying the rate in packets per second for application 301-j provided by system supervisor 340 in step 401 by the size of the window in seconds and truncating the product to the largest integer value that is less than this product.
- the number of packets m -- i allocated over the window for variable rate application 301-i is determined directly in step 403 and the number of packets m -- j allocated over the window for fixed rate application 301-j is provided directly by system supervisor 340.
- the number of packets required for each fixed rate application in a window is combined with number of packets required for the variable rate applications and used in building the packet schedule table for the next window, in one embodiment. This can be done during each window. In other words, the packet schedule table is built for all the applications afresh in each window.
- two packet schedule tables i.e., a static packet table, that is sometimes called a static table, a primary packet table, and a primary table
- a dynamic packet table that is sometimes called a dynamic table, a secondary packet table and a secondary table
- the static packet table is built once, during configuration time in step 401, and covers a relatively large interval of time, e.g., about one second.
- process 404 as illustrated in FIG. 9 and described above, is used to build the static table within initialization step 401.
- the specified rates for the fixed-rate applications and the initial rates for the variable rate applications are used in the process to generate the number of packets m -- i to be allocated over the interval for each application 301-i.
- n is allocated to a fixed rate application in the process, that application's pointer is inserted against packet number n in the static packet table. However, if packet n is allocated to a variable rate application in the process, a predetermined code, called a "null" code, is inserted against packet number n in the static packet table. Once built in initialization step 401, the static packet table is not altered until the following re-configuration time.
- the particular way that packets are allocated within the static table is not a critical part of the invention. Any number of ways can be used. For example, all the variable rate applications can be considered as one pseudo-application. The total allocation for the pseudo-application is the sum of the allocations for all the variable rate applications. The packet scheduling is done for F+1 applications, where F is the number of fixed rate applications and the one is the pseudo-application. In this embodiment, the positions in the static table assigned to the pseudo-application have a null code inserted while the other positions have the pointer for the fixed rate application inserted.
- the dynamic packet table is built every window in build packet table step 404 using the new rates for the variable rate applications.
- the number of packets in the dynamic packet table is not the total packet number N but rather the total number of packets allocated to all the variable rate applications in a statistical multiplexer period.
- Process 404 as illustrated in FIG. 9, is utilized to generate the dynamic packet table using the redefined number of total packets available in the window instead of total number of packets N.
- the particular packet scheduling method used to allocate packets within the static and dynamic tables is not a critical part of the invention.
- the static table is configured once at configuration time with null codes inserted for the variable rate applications and the dynamic table is updated, i.e., populated, for the variable rate applications once per window.
- the use of the dynamic and static tables is given below in the description of FIG. 18.
- a statistical multiplexing period i.e., a window
- the size of a statistical multiplexing period is not fixed and can change with time. Consequently, the number of entries in the dynamic table in step 404 for the next window is not fixed and can change from window to window.
- a constraint on the window size is that the window must be large enough so that a predetermined number of distortion values, e.g., three, are collected by statistical multiplexer 300 from each variable rate encoder during the window.
- the predetermined number of distortion values collected can vary from window to window.
- the dynamic table is limited to no more than 192 entries.
- the total number of packets allocated to all variable rate applications in a window is much greater than 192.
- statistical multiplexer 300 loops from the last entry to the first entry and begins sequentially accessing the entries again.
- the 192 entry dynamic table is repetitively used until the end of the window.
- the switch that is described more completely below, from one dynamic table to another is made during the time period when statistical multiplexer 300 has accessed the last entry in the table and is looping back to the first entry, i.e, after the switch, statistical multiplexer 300 accesses the first entry of the other dynamic table.
- step 405 statistical multiplexer 300 passes the new rates used to generate the new dynamic table in step 404 to each of encoders 302-i that are processing a variable rate application 301-i.
- the new variable rate for each encoder 302-i is written to the general communications table and communicated to the encoder using the process described above. All of the rate decreases are sent first and a timer is started. In this embodiment, the timer is a thirty-four millisecond timer. The timer is used to determine the completion of one picture period after completion of the sending of the rate decreases. This interval is selected to insure that the rate decreases are implemented by the encoders prior to the rate increases. When the timer times out, the rate increases are sent to the appropriate encoders 302-i. Upon completion of the transfer of the new rates used to generate the new dynamic table, processing transfer from step 405 to switch rate step 406.
- Switch rate step 406 is constrained by hardware in encoder 302-i. Typically, it is not possible to alter the internal rate control of encoder 302-i once encoder 302-i has begun encoding a picture. Therefore, the following discussion of switch rate step 406 assumes that a rate switch in encoder 302-i occurs at the first picture boundary following receipt of the new rate by encoder 302-i. If an encoder 302-i requires more time than the first picture boundary, the time periods in the following discussion must be lengthened appropriately. Similarly, if an encoder 302-i has the capability to implement a new rate within a picture, the time periods in the following discussion could be shortened. In view of this disclosure, the required modifications based on performance of encoder 302-i will be apparent to those skilled in the art. Of course, if the encoders can change rates at any time and not just at frame boundaries, for example, the switching interval, as defined below, can be reduced to zero.
- rate alterations are permitted only between pictures, i.e., at the start of a picture. Furthermore, picture boundaries of statistically multiplexed applications 302-i are not guaranteed to occur at the same time instant. These two constraints operate in tandem. Since the rate of an application 301-i within a picture can not be changed, the new rate for application 301-i can not be implemented until the next picture boundary. However, when application 301-i reaches a picture boundary, some other application 301-j may not be at its picture boundary. Hence, new rate R -- j for application 301-j can not be implemented at the picture boundary for application 301-i. In other words, it is not possible to alter the rates of all the applications and alter the multiplexer packet schedule at the same instant.
- switching interval 1020 (FIG. 10).
- Switching interval 1020 is chosen such that all applications 301-i are guaranteed to have at least one picture boundary within switching interval 1020.
- tick marks 1001 to 1010 represent frame boundries which in the case of NTSC input have a frequency of 30 Hz, actually 29.97 Hz.
- Window 1050 starts at arrow 1051 and ends at arrow 1052.
- Modify rates step 403 is completed over time interval 1060.
- Build packet table step 404 is completed over time interval 1070 and pass rates step 405 over time interval 1080.
- the length of switching interval 1020 in this case, is 2/29.97 seconds.
- This process ensures that at no instant is the sum of all the applications' rates greater than the capacity of communication channel 330.
- there is a slight drop in channel utilization during first half interval 1020-1 because some applications may operate at a rate that is lower than the rate at which they would be serviced by statistical multiplexer 300.
- the rate for some applications may be decreased, i.e., the encoders for these applications start compressing at a lower rate than the old rate.
- statistical multiplexer 300 implements the new packet schedule table, statistical multiplexer 300 continues to service the applications with lower rates at their old higher rates. This effect results in some underutilization of communication channel 330.
- the ticks marked are used by statistical multiplexer 300 for reference purposes and are not locked to any of the applications per se. Further, it is assumed that every application completes coding each frame in the interval bounded by two adjacent ticks, i.e., in 1/29.97 seconds. If the frame rate of any application is less than 29.97 Hz (e.g., if it is a film sequence at 23.97 Hz), even then it is assumed that the encoder compresses each frame in 1/29.97 seconds and idles at certain other times to synchronize with the input data rate.
- Statistical multiplexer 300 operates in a cyclic manner with the events within period 1050 being continually repeated.
- the length of period, as shown in FIG. 10, is not indicative of any real time performance. Indeed, the only conclusion that should be drawn from this figure (and the next) regarding timing is that the bulk of the time during a statistical multiplexer period is spent in building the packet schedule table and that the other aspects of this invention are executed in a relatively short time. The actual time required to execute each process of this invention is dependent on the computational power available in statistical multiplexer 300. However, note that there is a minimum value beyond which the period cannot be decreased because, at the least, the period should include switching interval 1020, which is 2/29.97 seconds long.
- FIG. 11 illustrates an alternative implementation with a shorter period 1150.
- the encoder and decoder buffer sizes are "large enough", that the switching interval contains exactly one picture boundary of each application.
- the applications perform the switch to a higher or lower rate when they reach their picture boundary and statistical multiplexer 300 switches to the new packet schedule at the center of switching interval 1160. In this case, some applications may switch to a higher rate before the new packet schedule gets switched causing their buffer fullness to increase slightly. However, if the buffer sizes are large enough this should not be a problem, although extreme care needs to be taken to ensure proper tracking of the buffer status.
- the distribution of rates amongst all variable rate applications 301-i is based on their respective distortion D -- i.
- distortion D -- i was assumed known.
- distortion D -- i must first be defined and then data generated to determine distortion D-i as defined for each application.
- distortion D -- i should be such that it incorporates the characteristics of the Human Visual System (HVS).
- HVS Human Visual System
- Low spatial activity means relatively flat areas in a frame.
- Low temporal activity means relatively less frame-to-frame movement.
- the same "amount" of distortion artifact is more easily visible to the human eye if the distortion occurred either in relatively flat regions of an image, or during a relatively still portion of a video sequence than if the same amount of distortion occurred in areas of high spatial details of the image or during high motion of a video sequence.
- the word "amount” refers to some absolute error measurement between the reconstructed and original video frames, e.g., a mean-squared-error (mse) measurement.
- distortion D -- i preferably takes into account the spatial and temporal characteristics of a video sequence.
- Priority number P was defined above, and that definition is incorporated herein by reference.
- the particular methods used to determine the interlace factor, frame spatial activity, and temporal activity as well as the expression for distortion are not critical to the invention.
- the important aspect is that a uniform methodology be used for determining distortion D -- i or some other parameter that is indicative of the quality of the encoded data.
- the principles of this invention can be applied to any compression technology and the particular parameter used to measure quality can be different from technology to technology and even within a given technology. Therefore, the following examples of the mean-squared error, interlace factor, frame spatial activity and temporal activity are illustrative only and are not intended to limit the invention to the particular examples.
- Mean-squared error mse is generated by summing the square of the pixel-to-pixel difference between the original frame and the frame reconstructed after encoding it and normalizing by the total number of pixels in the frame, i.e., ##EQU8##
- each encoder 302-i generates mean-squared error mse once per frame and that value is passed to statistical multiplexer 300.
- the mean-squared error is not used, but rather an estimate of the mean-squared error that is generated by the encoder that is provided by C-Cube Microsystems of Milpitas, Calif. is used.
- Interlace factor IF in distortion D is used to normalize the effects of interlacing in video sequences.
- Typical video encoders compress a sequence of pictures without regard to the field/frame structure of the sequence.
- the former has what is commonly called “interlace artifacts" while the latter does not.
- Interlace artifacts are nothing more than motion between the two fields of a frame which is introduced because the two fields were captured at different time instants. Such inter-field motion does not exist between the fields of a frame originating from a film sequence because the two fields in this case are captured at the same time instant. It is for this reason that a typical video frame is harder to compress than a typical movie frame.
- statistical multiplexer 300 uses the relative distortion values of different applications to re-distribute rates. For such a process to work efficiently, the method used to determine distortion D must be unbiased. However, since a video encoder typically operates on a frame grid, the spatial activity calculated for an application becomes somewhat inflated if the application is an interlaced video sequence. This results in a lower than normal value for the distortion. This bias can be offset by re-scaling the spatial activity measure by interlace factor IF. If it is known in advance that a particular frame is encoded in field mode, the interlace factor IF for that picture can be sent to one.
- interlace factor IF is generated using two statistics, i.e., a "Difference activity" DA and an "Intra activity” IA.
- Difference activity DA is defined as the average absolute pixel-to-pixel difference between the two fields belonging to a frame, i.e., ##EQU9## where nf is the number of pixels in a field, and (u -- i) and (v -- i) are corresponding pixels of the odd and even fields of the frame, respectively.
- a difference accumulator generates difference activity DA between two successive fields of different parity. Specifically, differential accumulator sums the absolute differences between a pixel of the current field, e.g., field a1, and the same pixel of the next field of a different parity, e.g., field a2. When all the data for a frame has been processed, encoder 302-i provides difference activity DA to statistical multiplexer 300 once per frame.
- a difference accumulator generates a difference measure between every adjacent odd-even line pair belonging to the same field.
- difference measure "intra activity IA" is obtained by summing the absolute differences between pixel pairs belonging to the even and odd lines from the same field. Pixel differences are obtained between the following line pairs (0,1), (2,3), (4,5), . . .
- the pixel values for even numbered lines are passed to a delay line and then to the differential accumulator, while the pixel values for odd number lines are passed directly to the differential accumulator.
- interlace factor IF is defined as:
- both difference activity DA and intra activity IA are generated in hardware. Notice that since the ratio of the two statistics is used, the hardware does not need to use number of pixels nf. Hence, both statistics are implemented using a differential accumulator, as described above.
- Frame spatial activity SA in distortion D is a measure of the spatial activity in a frame.
- An example of such a measure is the average absolute difference between adjacent vertical and horizontal pixels.
- One embodiment of a hardware implementation of a frame spatial activity SA suitable for use in this invention is available from C-cube Microsystems of Milpitas, Calif..
- frame spatial activity SA has to be adjusted by interlace factor IF.
- Temporal activity TA in distortion D is an indicator of frame-to-frame differences in the video sequence. First the average absolute difference between corresponding pixels of two adjacent frames is determined, i.e., ##EQU11##
- n is the total number of pixels in a frame
- x i and y i are, respectively, the corresponding pixels of two adjacent frames.
- V' is used to recursively update a parameter, v, as follows.
- constant ⁇ is 0.9 and parameter v is initially set to 40.
- temporal activity TA is obtained from v as ##EQU12## Any other function may also be used as long as the function is based on a frame to frame pixel difference.
- both v and V' are computed in the encoder and transferred to statistical multiplexer 300 once per frame.
- FIG. 12 A more detailed block diagram of one embodiment of statistical multiplexer 300 is presented in FIG. 12.
- Statistical multiplexer 300 communicates with encoders 302-1 to 302-L and collects compressed application data for transfer to communication channel 330 using application control bus 360.
- memory 313 (FIG. 3) includes a plurality of memories 1201 to 1203 and memories 1205 to 1207, each of which are described more completely below.
- statistical multiplexer 300 supports four distinct application control buses through application control bus interface circuit 1210. Multiple application control buses allows redundant applications 301-i to connect to statistical multiplexer 300 over redundant application control buses 360. If one of the redundant applications fails in a mode that corrupts its application control bus, another of the redundant applications can still send data to statistical multiplexer 300 over one of the other three application control buses.
- All four application control buses are driven in parallel with each application control bus having it's own set of drivers. Signals received from all four application control buses are logically "ORed" together in interface circuit 1210. Any application control bus can be disabled if a problem occurs with that application control bus.
- Application control bus state machine 311 is positioned between application control bus interface circuit 1210 and microprocessor 312. In one embodiment, the functions described below of application control bus state machine 311 are implemented in a programmable gate array.
- Application control bus state machine 311, hereinafter ACB state machine 311 controls application control bus 360 through interface circuit 1210 and so minimizes the effect of bus operations on microprocessor 312, which in one embodiment is a Motorola 68302 microprocessor.
- ACB state machine 311 is controlled by tables stored in memories 1201 to 1203 and 1207 and registers in state machine 311, both of which are configured by microprocessor 312.
- Tables used to control ACB state machine 311 include, in one embodiment, a static rate table stored in scratch DRAM 1207, a dynamic rate table stored in dual port memory 1202, and a general communication table stored in dual port memory 1204, each of which are described more completely below.
- ACB state machine 311 addresses memories 1202 to 1203 using address generator circuits 1222 to 1223 respectively. Of course, those skilled in the art will appreciate that address generator circuits 1222 to 1223 could be included within state machine 311.
- the ACB state machine registers that are written to by microprocessor 312 are registers ACBSMCtr, ACBSMMask, and ACBSMClr. These are eight bit registers and the bit definitions for registers ACBSMCtr and ACBSMMask are given in Tables III and IV. Writing to register ACBMSMCLr clears pending interrupts even if an interrupt is masked.
- ACB state machine 311 When bit Reset is low, ACB state machine 311 is reset. ACB state machine 311 can not operate when bit Reset is low. Microprocessor 312 must set bit Reset to zero and then to one to affect a reset of ACB state machine 311.
- Bit StComm is set by microprocessor 312 when microprocessor 312 has programmed one of the general communications table and is ready for ACB state machine 311 to make a transfer. Bit StComm is cleared when ACB state machine 311 reaches an entry in the general communications table that is off.
- Bit StFIFO is set by microprocessor 312 when the new primary table has been generated, and begun the DMA transfer of this table into FIFO 1201.
- bit StFIFO is low, ACB state machine 311 can not perform the primary status message cycles described below, but ABC state machine 311 can perform the other application bus message cycles, described below.
- Bit NeedSel defines which of the two secondary tables in memory 1202 to use, as described below. When bit NeedSel is set low, ACB state machine 311 bit uses secondary table one.
- Bit ComSel defines which general communication table in memory 1204 to use. When ComSel is set low ACB state machine 311 uses general bit communication table one.
- Clearing bit CommMask disables the interrupt normally generated when ACB state machine 311 reaches the end of data in the general communication table.
- VarMask disables the interrupt normally generated when ACB state machine 311 reaches the end of the secondary table.
- EmtyFIFOMask disables the interrupt normally generated when FIFO 1201 becomes empty.
- Clearing bit ACBTimeMask disables the interrupt generated when ACB time counter 1242 times out. In this embodiment, this interrupt is not used and so this bit is set low.
- Bit AppBus enables application buses four to one respectively. When a particular bit is set, the corresponding bus is enabled.
- Application control bus 360 includes an eight-bit parallel address/data bus ADDR/DATA, an address strobe line AS, a data strobe line DS, a clock line CLOCK, a data clock or return clock line DTACLK, and an enable signal line ENABLE.
- the signals on these lines are differential TTL signal levels in this embodiment. Moreover, for convenience, the same reference numeral is used for a line and for a signal on that line.
- the application control bus 360 also includes reference clock and reference count lines that carry differential ECL level signals in this embodiment.
- Application control bus 360 is the only communication path between statistical multiplexer 300 and encoders 302-1 to 302-L. Transfer of information on application control bus 360 is divided into packet time intervals, where a packet time interval is defined as the time required to transmit one packet of data over communication channel 330.
- the time interval between the rising edges of two consecutive pulses 1301 and 1302, i.e., packet strobes, on packet strobe line PS (FIG. 13) defines the packet time interval.
- communication channel 330 provides an external clock signal EXCLK.
- External clock signal EXCLK is divided down by statistical multiplexer 300 to generate the packet strobes on line PS.
- a packet strobe is generated by dividing clock ticks on external clock line EXCLK by the number of bits in a packet. Packet strobes are very accurate, very regular pulses.
- statistical multiplexer 300 has two sections that run synchronously to one another.
- Application control bus 360 runs at 10 MHz.
- the statistical multiplexer output to communication channel 330 runs synchronously to external clock signal EXCLK received from communication channel 330, e.g., from a modem that drives the channel.
- EXCLK external clock signal
- every packet time interval is divided further into a message cycle interval ACB (FIG. 13) and a data transfer interval ADB on application bus 360.
- Data transfer cycle interval ADB is used by statistical multiplexer 300 when collecting compressed application data for transfer to communication channel.
- Message cycle interval ACB is used by statistical multiplexer 300 for collecting information from encoders 302-1 to 302-L, and for distributing new rates to each of encoders 302-i that process variable rate applications.
- Control and data transfer cycles within intervals ACB and ADB are time-multiplexed on data bus DATA/ADR within application control bus 360.
- a plurality of messages cycles occur within interval ACB followed by one data packet transfer cycle within interval ADB.
- message cycle time interval ACB is sub-divided into three message cycles, i.e., primary status, allocate bus, and general communication cycles. Any of these three message cycles may be deleted from message cycle time interval ACB. However, any or all of the three cycles always occur in this order. There may be some unused portion of message cycle time interval ACB, especially if one or more message cycles are deleted.
- the three message cycles and their functions are further defined below.
- At least one message cycle must precede each data transfer cycle to enable the data transfer.
- the number of message cycles that may occur between transfer cycles is limited by the required data transfer rate. With four message cycles between data transfers, and using a clock rate of approximately 12.5 MHz, the maximum transfer rate of application packet data on application control bus is 60 Mbits/sec.
- ACB time counter 1242 (FIG. 12).
- ACB time counter 1242 is started in response to a packet strobe on line PS.
- ACB time counter 1242 then counts a predetermined number of application control bus clock ticks, e.g., 40 bus clock ticks, and generates an output signal.
- ACB state machine 311 drives data strobe signal low and sets signal ENABLE active after at least time tDSE (FIG. 14 and Table V).
- signal ENABLE is expanded and lines are used to relate the rising and falling edge of signal ENABLE to time interval ADB on the application bus.
- a data transfer cycle requires that the selected application was already tasked, through a message cycle, to be the next application to provide packet data.
- statistical multiplexer 300 enables an application 301-i to drive data bus DATA/ADR the next time signal ENABLE is asserted.
- Application bus clock CLOCK (FIG. 14) runs continuously.
- ACB state machine 311 asserts and deasserts signal ENABLE (FIGS. 13 and 14) synchronous with application bus clock CLOCK.
- Signal ENABLE stays active for the number of application control bus clock ticks equal to the number of bytes in a data packet.
- ADB time counter 1241 starts to count the number of application control bus clock ticks upon signal ENABLE going active.
- ACB state machine 311 When ADB time counter 1241 has counted the requisite number of clock ticks, a signal is generated to ACB state machine 311, which in turn drives signal ENABLE inactive.
- the enabled application drives data on bus DATA/ADR for the number of clock cycles that signal ENABLE is asserted.
- statistical multiplexer 300 controls the number of bytes application 301-i sends on application control bus 360 in any one data transfer.
- Application 301-i drives data onto bus DATA/ADR and a clock signal on line DTACLK synchronously.
- the signal on line DTACLK is not required to be in phase with signal CLOCK, but the signal on line DTACLK must have the same frequency as signal CLOCK.
- Some latency is allowed from the time application 301-i received signal ENABLE until application 301-i drives the data clock signal DTACLK. See Table V.
- application 301-i once enabled, must assert DATA and DTACLK on bus 360 within two clock cycles of the first positive edge of the clock on which signal ENABLE goes active.
- Application 301-i must drive the number of bytes on bus DATA/ADR as determined by the time interval signal ENABLE is active. This means the enable latency and disable latency must be the same for any application, but the latency time may vary from one application to the next.
- ACB state machine 311 drives the signal on line ENABLE inactive and statistical multiplexer 300 enables the next data transfer by appropriate message cycles. Specifically, statistical multiplexer 300 waits at least time tEAS (FIG. 14 and Table V) before asserting address strobe signal AS.
- Time tDSE (FIG. 14) is the minimum time statistical multiplexer 300 waits after data strobe signal DS is driven inactive.
- Statistical multiplexer 300 counts the number of bytes sent over application control bus 360 with ADB byte counter 1240.
- ADB byte counter 1240 is a down counter that generates a signal to ACB state machine 311 if and when the correct number of bytes have been received.
- encoder 302-i When an application 301-i is not driving line DTACLK, the driver for this line is set to a high impedance state by encoder 302-i. To avoid glitches on line DTACLK, encoder 302-i takes the driver to a logic zero state at least for time tOFF before disabling or enabling the driver. To disable the driver, encoder 302-i first puts a logic zero on line DTACLK and then disables the driver, i.e., the driver is set to the high impedance state. Bus terminations hold bus 360 in the logic zero state. When the next application 301-j enables its driver, there is not a transition on bus 360 because the drivers are enabled in the logic zero state.
- ACB state machine 311 controls application control bus 360 using information stored in tables in memory 311.
- ACB state machine 311 causes the appropriate address generator 1222 to 1223 to address an entry in the appropriate table that contains information to control operation of application control bus 360 or to enable transfer of information from primary FIFO 1201 to bus 360. Entries in each of the stored tables controls one of the message cycles shown in FIG. 13.
- the first byte is a control byte that is used by ACB state machine 311.
- Table VI defines one embodiment of the control byte.
- Bit Off is set if the table entry is not used.
- Bit CF is not relevant to this invention.
- bit TF When bit TF is set, a packet is read from a test FIFO. To use this feature bit Type must be set to "01". This feature is not required for operation of statistical multiplexer 300.
- Bit BC is set to broadcast to all encoders on one of the application buses when doing general communications.
- the two least significant bits of the data byte in the general communication table designate which application bus, 0, 1, 2, or 3, to broadcast the data byte.
- the two least significant bits on data bus DATA/ADR are driven as logic zeros.
- the reserved bits are always set to a logic zero.
- Each encoder 302-i is addressed by an application address, that is sometimes referred to as a service channel identification SCID. Addresses on application control bus 360 are given by the second and third bytes in each table entry, with the most significant byte first. Within the sixteen bit address, the twelve most significant bits (bits 15-4) are the address for encoder 302-i. Other embodiments may use a different number of bits to address encoder 302-i. The next three bits (bits 3-1) are the address for specific registers within encoder 302-i. The last bit, i.e, the least significant bit, indicates read or write. The fourth byte in each table is a data byte.
- a byte is written to an application 301-i during a message cycle, the information contained in the fourth byte of the entry table is provided to application 301-i. If a byte is read from an encoder 302-i, the byte is passed to microprocessor 312 by encoder 302-i writing to this location.
- the address bytes in a table are sent over bus DATA/ADR of application control bus 360 with consecutive pulses on address strobe line AS of application control bus. (FIGS. 14, 16 and 17.)
- Encoders 302-1 to 302-L latch the address bytes on the trailing edge of the pulse on address strobe line AS.
- Reads and writes over bus DATA/ADR during a message cycle to the fourth byte in a table are enabled by a pulse on data strobe line DS of application control bus 360.
- a pulse on data strobe line DS of application control bus 360 (FIGS. 16 and 17.)
- data is latched by addressed encoder 302-i on the trailing edge of the pulse on data strobe line DS.
- ACB state machine latches data on the trailing edge of the pulse on data strobe line DS.
- the various timing characteristics between the signals on lines AS, DS and bus DATA/ADDR, as shown in FIGS. 16 and 17, are defined in Table VII.
- the primary table which is defined at configuration time and is stored in memory 1207, divides a predetermined time interval into packet times. Each packet time in the predetermined time interval is allocated an entry into the primary table. Each entry in the primary table is an address that specifies which application 301-i is allocated this packet time. Since the primary table allocates bandwidth at a resolution down to one packet per second, the primary table, in one embodiment, has (39 Mbits/sec), the statistical multiplexer output rate, times (1/1024 packet/bits) or 29,297 entries.
- statistical multiplexer 300 shares responsibility with system supervisor 340 for building the primary table. After set-up, a pointer is set to the first entry in the primary table. Statistical multiplexer 300 uses one primary table entry every packet time and so the pointer to the primary table is indexed once for every packet period. Thus, packet time intervals over communication channel 330 are offered to applications 301-1 to 301-L according to the information in the primary table. Statistical multiplexer 300 actually provides for two primary tables. This allows statistical multiplexer 300 to build a "next" primary table and then switch to the next primary table, as described above.
- the primary table is kept in DRAM 1207.
- a DMA transfer is used to move the addressed entry in the primary table from memory 1207 to primary FIFO 1201.
- the DMA controller is redirected to the first entry of the primary table. This cycle is continued until a new primary table is built in another section of DRAM. The DMA controller is directed to this new primary table when desired.
- ACB state machine 311 reads the control word, i.e., the first byte, of the primary table entry pointed by the primary table pointer. If bit Off is set, the rest of the control word is ignored and the rest of this primary table entry is read and trashed and an entry in the secondary table is examined, as described below.
- Field "Type” is used in primary table entries to define if this packet is a normal data packet or a system clock packet. If field Type field specifies that this packet is a system clock packet, the primary status message cycle is deleted and ACB state machine 311 moves onto the allocate bus message cycle and tells application 301-i, that received the previous packet interval that it gets this packet's bandwidth also.
- ACB state machine 311 performs a primary status message cycle. ACB state machine 311 performs a read at the encoder's address specified in the next two bytes of the entry. The data read at this address is a status that tells statistical multiplexer 300 if the addressed encoder wants this packet's bandwidth. If the addressed encoder declines this packet's bandwidth, the primary table entry's data byte is read and trashed.
- the allocate bus message cycle provides directions to the addressed encoder to enable the encoder to use this packet's bandwidth.
- the secondary table is used to allocate packets that are not allocated by the primary table. As indicated above, in one embodiment, only fixed rate applications are allocated in the primary table, and variable rate applications are allocated in the secondary table. Thus, when bit Off in the control word of the primary table is set, the secondary table is accessed.
- ACB state machine 311 reads the control byte in the addressed entry of the secondary table. At initialization, a pointer is positioned at the first entry in the secondary table and after an entry is used, the pointer is incremented by ACB state machine 311. Specifically, ACB state machine 311 accesses the entries in the secondary table cyclically. ACB state machine 311 uses a counter to generate a pointer that cycles through the entries.
- bit Off is set in the addressed entry of the secondary table, packet assembly state machine inserts an idle packet in this packer's bandwidth, and the allocate bus message cycle is deleted. If bit Off bit is not set, ACB state machine 311 allocates this packet's bandwidth to the application listed in the next two bytes of this entry in the secondary table.
- ACB state machine 311 in step 1802 first examines the entry in primary FIFO 1201. If the current packet is allocated to a fixed rate application, the packet is offered to that application and the pointer for the primary table is advanced by one (modulo the total number of entries). However, if the packet is allocated to a variable rate application, as indicated by the null code in the primary table, null code check 1803 passes control to step 1805 and ACB state machine 311 checks the secondary table to see which variable rate application is allocated the current packet. After offering the packet to the variable rate application, the pointers for both the primary and secondary tables are advanced by one (modulo their respective total number of entries).
- the last message cycle in message cycle interval ACB of a packet time is for general communications between statistical multiplexer 300 and applications 302-1 to 320-L.
- This table is built by microprocessor 312 and kept in shared memory 1203.
- ACB state machine 311 accesses the entries in the general communications table cyclically by using a counter to generate a pointer that cycles through the entries. ACB state machine 311 deletes the general communications message cycle whenever an entry has bit Off set. The general communications table entry pointer remains at this entry until microprocessor 312 writes to the ACB state machine control register to send more general communication bytes. The ACB state machine generates an interrupt when it reaches a general communications table entry with bit Off set.
- ACB state machine 311 either reads a byte from the addressed application and puts the byte into the data byte field of the general communication table entry, or reads the general communication table entry data byte field and writes this byte to the application.
- the data direction is controlled by field Type of the entry.
- data strobe signal DS may be asserted multiple times. This allows reading and writing from registers with more than one 8-bit byte. Multiple-byte registers use subsequent data strobes for successive bytes of the register, beginning with the least significant byte. Thus, to write to a 16-bit register, the bus master asserts data strobe signal DS twice, the first time with the least significant byte of data, and the second with the most significant byte of data. Reading the register is done in the same way. Registers are organized so that the bus master may optionally read or write only the least significant byte(s). There is technically no limit to the number of bytes a register may have. Thus, a memory could be treated as a register, doing multiple byte reads or writes.
- Microprocessor 312 in statistical multiplexer 300 communicates with system supervisor 340 over a system supervisor bus.
- statistical multiplexer 300 is configured and controlled by system supervisor 340.
- the information is passed between statistical multiplexer 300 and system supervisor 340 over using High Level Data Link Communication protocols.
- the particular bus structure used to form a communication path between statistical multiplexer 300 and system supervisor 340 is not a part of the current invention.
- the important aspect is the information provided by system supervisor 340 to statistical multiplexer 300.
- the particular mode used to transport the information to statistical multiplexer 300 is defined by configuration of the system supervisor 340 and so will be known when the statistical multiplexer is configured with a particular system supervisor.
- statistical multiplexer 300 system supervisor tells statistical multiplexer 300 which applications 301-i to 301-L are in the system and how applications 301-2 to 301-L are configured.
- System supervisor 340 also provides a method of updating statistical multiplexer software.
- statistical multiplexer 300 software revisions are downloaded over system supervisor bus to statistical multiplexer 300 and stored in non-volatile flash memory 1206.
Abstract
Description
R=400×int (Q×Y)
δ.sub.-- i =Bmax.sub.-- i/Rmax.sub.-- i
TABLE I ______________________________________ Parameters Required by Statistical Multiplexer Parameter Range Type ______________________________________Rmin 0 to 192 16-bit integerRmax 0 to 192 16-bit integerRgtd 0 to 192 16-bit integer P 1 to 16 16-bit integer (High 12-bits reserved: bit S 15(MSB) is "1" for fixed rate and "0" for variable rate) Dmax 16-bit integer Bmax number of 400- 16-bit integer bit units. ______________________________________
D.sub.-- i=(β* (D.sub.-- i))+((1- β) * (d.sub.-- i)).
TABLE II ______________________________________ Class Definition for New Rate Generation K1*Dmax < D < K1*Dmax D < K2*Dmax D > K2*Dmax ______________________________________ R <Rgtd Class 1 Class 2 Class 3 R ≧Rgtd Class 4 Class 5Class 6 ______________________________________
D.sub.-- i>(K2.sub.-- i) * (Dmax.sub.-- i).
D.sub.-- i<(K1.sub.-- i) * (Dmax.sub.-- i).
(K1.sub.-- i)*(Dmax.sub.-- i)<=D.sub.-- i<=(K2.sub.-- i) * (Dmax.sub.-- i).
Rnew.sub.-- i=Rold.sub.-- i+(c * ((D.sub.-- i - Dmax.sub.-- i)/Dmax.sub.-- i)).
s * (Rold.sub.-- i)≦Rnew.sub.-- i<Rold.sub.-- i
(buf.sub.-- sz.sub.-- i)=(δ.sub.-- i) * (Rnew.sub.-- i)
ΔD=Σ(Rnew.sub.-- i - Rold.sub.-- i)
Rnew.sub.-- i=Rold.sub.-- i+(c * (D.sub.-- i - Dmax.sub.-- i)/Dmax.sub.-- i)
Rold.sub.-- i≦Rnew.sub.-- i<t * Rold.sub.-- i.
ΔI=Σ(Rnew.sub.-- i - Rold.sub.-- i)
Rnew.sub.-- i=Rold.sub.-- i+(c * (D.sub.-- i - Davg)/Davg)
Rold.sub.-- i≦Rnew.sub.-- i<t * (Rold.sub.-- i)
s*(Rold.sub.-- i)≦Rnew.sub.-- i<Rold.sub.-- i
ΔC=Σ(Rnew.sub.-- i - Rold.sub.-- i)
Δ=ΔD+ΔI+ΔC
Rold.sub.-- i≦Rrnew.sub.-- i<t * (Rold.sub.-- i)
s * (Rold.sub.-- i)≦Rrnew.sub.-- i<Rold.sub.-- i
buf.sub.-- sz.sub.-- i=δ.sub.-- i * Rrnew.sub.-- i
pt.sub.-- i(n)=(m.sub.-- i/E) * n.
pt.sub.-- i(O)=0
pt.sub.-- i(E)=m.sub.-- i.
ζ.sub.-- i(n)=pt.sub.-- i(n) - r.sub.-- i(n)=(m.sub.-- i/E) * n - r.sub.-- i(n)
η.sub.-- i(n)=E * ζ.sub.-- i(n)=(m.sub.-- i * n) - (E * r.sub.-- i(n)).
η.sub.-- i(n)=0, for i=1, . . . , L
IF=max (1, min ((DA/IA),2)).
v=αv+(1-α)V'
TABLE III ______________________________________ Name Bit ______________________________________Reset 0StComm 1 StFIFO 24,3 NeedSel 5 Reserved SecSel 6ComSel 7 ______________________________________
TABLE IV ______________________________________ Name Bit ______________________________________CommMask 0VarMask 1 EmtyFIFOMask 2ACBTimeMask 3 AppBus 7-4 ______________________________________
TABLE V ______________________________________ Parameter Min/Max______________________________________ tAL Min 1 clock cycle Application latency Max 2 clock cycles tSU Min 15 nsec Setup time for enable or data tH Min 10 nsec Hold time for data tOff Min 2.0 nsec Off time tDSE Min 320 nsec Off time tEAS Min 480 nsec Off time ______________________________________
TABLE VI ______________________________________ Name Bit ______________________________________ Off 0CF 1 Type 3-2TF 4 BC 5 Reserved 7-6 ______________________________________
TABLE VII ______________________________________ Parameter Min/Max Comment ______________________________________ tASL Min 80 nsec Applies only Address strobe between the two low pulse strobes for the two width address bytes. tASH Min 80 nsec Address strobe high pulse width tDSW Min 160 Data Strobe signal Write data strobe nsec DS is wider than pulse width address strobe signal AS to allow address decoding. tDSR Min 320 A long data strobe Read data strobe nsec signal DS on read pulse width allows the application time to find the data and put it on bus DATA/ADR withinbus 360. tDSL Min 80 nsec This timing Data strobe low characteristic pulse width applies between repeated writes or reads at the same address. tAD Min 80 nsec This time interval Address strobe to allows the address data strobe setup to be latched before signal DS becomes valid, and so avoids false address decodes while the latched address is settling. tSU Min 40 nsec Address or data is Address or data latched on falling setup edge. tADH Min 40 nsec On read, data may Address ordata Max 120 not be put on the hold time nsec bus before signal DS is asserted.tDE Min 0 nsec On read, data must Data enableMax 120 be driven on the latency nsec bus until after signal DS is deasserted.tRDH Min 0 nsec After read, bus Read data holdMax 120 master allows time time nsec for bus to go inactive before asserting address for next cycle. tDAS Min 320 Data strobe to nsec address delay ______________________________________
Claims (31)
Priority Applications (10)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US08/246,442 US5506844A (en) | 1994-05-20 | 1994-05-20 | Method for configuring a statistical multiplexer to dynamically allocate communication channel bandwidth |
EP20050005560 EP1542383A1 (en) | 1994-05-20 | 1995-05-19 | Method for dynamically allocating communication channel bandwidth between competing applications |
AU25166/95A AU2516695A (en) | 1994-05-20 | 1995-05-19 | Method for dynamically allocating communication channel bandwidth between competing applications |
PCT/US1995/006136 WO1995032565A1 (en) | 1994-05-20 | 1995-05-19 | Method for dynamically allocating communication channel bandwidth between competing applications |
DE69535803T DE69535803D1 (en) | 1994-05-20 | 1995-05-19 | METHOD FOR DYNAMICALLY ASSIGNING COMMUNICATION CHANNEL BAND WIDTH BETWEEN COMPETITIVE APPLICATIONS |
JP53037595A JP3233408B2 (en) | 1994-05-20 | 1995-05-19 | Statistical multiplexing method for multiple data streams |
KR1019960706560A KR100382690B1 (en) | 1994-05-20 | 1995-05-19 | Dynamic Allocation of Communication Channel Bandwidth Between Contending Applications |
CA002190115A CA2190115C (en) | 1994-05-20 | 1995-05-19 | Method for dynamically allocating communication channel bandwidth between competing applications |
MXPA/A/1996/005759A MXPA96005759A (en) | 1994-05-20 | 1995-05-19 | Method to distribute dynamically communications channel bandwidth complete entreaplications |
EP95919221A EP0772927B1 (en) | 1994-05-20 | 1995-05-19 | Method for dynamically allocating communication channel bandwidth between competing applications |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US08/246,442 US5506844A (en) | 1994-05-20 | 1994-05-20 | Method for configuring a statistical multiplexer to dynamically allocate communication channel bandwidth |
Publications (1)
Publication Number | Publication Date |
---|---|
US5506844A true US5506844A (en) | 1996-04-09 |
Family
ID=22930706
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US08/246,442 Expired - Lifetime US5506844A (en) | 1994-05-20 | 1994-05-20 | Method for configuring a statistical multiplexer to dynamically allocate communication channel bandwidth |
Country Status (8)
Country | Link |
---|---|
US (1) | US5506844A (en) |
EP (2) | EP1542383A1 (en) |
JP (1) | JP3233408B2 (en) |
KR (1) | KR100382690B1 (en) |
AU (1) | AU2516695A (en) |
CA (1) | CA2190115C (en) |
DE (1) | DE69535803D1 (en) |
WO (1) | WO1995032565A1 (en) |
Cited By (296)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5625830A (en) * | 1994-08-12 | 1997-04-29 | International Business Machines Corp. | Reduced circuit, high performance, binary select encoder network |
US5691986A (en) * | 1995-06-07 | 1997-11-25 | Hitachi America, Ltd. | Methods and apparatus for the editing and insertion of data into an encoded bitstream |
US5703876A (en) * | 1994-05-05 | 1997-12-30 | Christie; Joseph Michael | ATM transport system |
US5708664A (en) * | 1995-08-22 | 1998-01-13 | Digi-Media Vision Ltd. | Statistical multiplexing |
US5734843A (en) * | 1995-06-07 | 1998-03-31 | Advanced Micro Devices Inc. | Reverse data channel as a bandwidth modulator |
US5751694A (en) * | 1995-05-22 | 1998-05-12 | Sony Corporation | Methods and apparatus for synchronizing temporally related data streams |
US5805600A (en) * | 1996-03-06 | 1998-09-08 | Adtran, Inc. | Mechanism for providing full utilization of high data rate serial communication link conveying data sourced from data terminal equipment and compressed by high compression ratio data compression-protocol engine |
US5838690A (en) * | 1995-11-13 | 1998-11-17 | Hitachi, Ltd. | Method for dynamically assigning communication bands |
US5854658A (en) * | 1995-12-26 | 1998-12-29 | C-Cube Microsystems Inc. | Statistical multiplexing system which encodes a sequence of video images using a plurality of video encoders |
EP0888009A1 (en) * | 1996-12-12 | 1998-12-30 | Sony Corporation | Device and method for encoding image data, and image data transmission method |
US5862140A (en) * | 1995-11-21 | 1999-01-19 | Imedia Corporation | Method and apparatus for multiplexing video programs for improved channel utilization |
US5864678A (en) * | 1996-05-08 | 1999-01-26 | Apple Computer, Inc. | System for detecting and reporting data flow imbalance between computers using grab rate outflow rate arrival rate and play rate |
US5877812A (en) * | 1995-11-21 | 1999-03-02 | Imedia Corporation | Method and apparatus for increasing channel utilization for digital video transmission |
US5920562A (en) | 1996-11-22 | 1999-07-06 | Sprint Communications Co. L.P. | Systems and methods for providing enhanced services for telecommunication call |
EP0928115A1 (en) * | 1997-07-01 | 1999-07-07 | Sony Corporation | Device and method for controlling image encoding, encoding system, transmission system and broadcast system |
US5940393A (en) * | 1996-05-28 | 1999-08-17 | Sprint Communications Co. L.P. | Telecommunications system with a connection processing system |
US5956088A (en) * | 1995-11-21 | 1999-09-21 | Imedia Corporation | Method and apparatus for modifying encoded digital video for improved channel utilization |
US5956426A (en) * | 1994-05-25 | 1999-09-21 | Sony Corporation | Multi-coding apparatus |
US5991301A (en) | 1994-05-05 | 1999-11-23 | Sprint Communications Co. L.P. | Broadband telecommunications system |
US5996013A (en) * | 1997-04-30 | 1999-11-30 | International Business Machines Corporation | Method and apparatus for resource allocation with guarantees |
US5999985A (en) * | 1995-04-13 | 1999-12-07 | Siemens Aktiengesellschaft | Method and apparatus for storing, searching and playback of items of information of a multimedia electronic mail system |
US6002689A (en) | 1996-11-22 | 1999-12-14 | Sprint Communications Co. L.P. | System and method for interfacing a local communication device |
US6005620A (en) * | 1997-01-31 | 1999-12-21 | Hughes Electronics Corporation | Statistical multiplexer for live and pre-compressed video |
US6014378A (en) | 1996-11-22 | 2000-01-11 | Sprint Communications Company, L.P. | Telecommunications tandem system for circuit-based traffic |
US6023474A (en) | 1996-11-22 | 2000-02-08 | Sprint Communications C.O.L.P. | Broadband telecommunications system interface |
US6026091A (en) | 1996-02-02 | 2000-02-15 | Sprint Communications Co. L.P. | ATM gateway system |
US6031840A (en) | 1995-12-07 | 2000-02-29 | Sprint Communications Co. L.P. | Telecommunications system |
WO2000016559A1 (en) * | 1998-09-10 | 2000-03-23 | Snell & Wilcox Limited | Image encoding |
US6052384A (en) * | 1997-03-21 | 2000-04-18 | Scientific-Atlanta, Inc. | Using a receiver model to multiplex variable-rate bit streams having timing constraints |
US6067299A (en) | 1997-04-16 | 2000-05-23 | Sprint Communications Company, L.P. | Communications system for providing ATM connections and echo cancellation |
US6078958A (en) * | 1997-01-31 | 2000-06-20 | Hughes Electronics Corporation | System for allocating available bandwidth of a concentrated media output |
US6081529A (en) * | 1995-11-22 | 2000-06-27 | Sprint Communications Company, L. P. | ATM transport system |
US6081525A (en) | 1995-09-08 | 2000-06-27 | Sprint Communications Co., L.P. | Broadband telecommunications system |
US6084910A (en) * | 1997-01-31 | 2000-07-04 | Hughes Electronics Corporation | Statistical multiplexer for video signals |
WO2000041395A1 (en) * | 1999-01-06 | 2000-07-13 | Sarnoff Corporation | Latency-based statistical multiplexing |
US6091455A (en) * | 1997-01-31 | 2000-07-18 | Hughes Electronics Corporation | Statistical multiplexer for recording video |
US6097435A (en) * | 1997-01-31 | 2000-08-01 | Hughes Electronics Corporation | Video system with selectable bit rate reduction |
US6101542A (en) * | 1996-07-19 | 2000-08-08 | Hitachi, Ltd. | Service management method and connection oriented network system using such management method |
US6104718A (en) | 1994-05-05 | 2000-08-15 | Sprint Communications Company, L.P. | Method, system and apparatus for telecommunications control |
US6115380A (en) | 1996-11-22 | 2000-09-05 | Sprint Communications Co., L.P. | Broadband telecommunications system |
US6137800A (en) | 1997-05-09 | 2000-10-24 | Sprint Communications Company, L. P. | System and method for connecting a call |
US6137779A (en) * | 1997-05-22 | 2000-10-24 | Integrated Device Technology, Inc. | Transmission rate calculation scheme using table-lookup |
US6172977B1 (en) | 1994-05-05 | 2001-01-09 | Sprint Communications Company, L. P. | ATM direct access line system |
US6178170B1 (en) | 1997-05-13 | 2001-01-23 | Sprint Communications Company, L. P. | System and method for transporting a call |
US6188436B1 (en) | 1997-01-31 | 2001-02-13 | Hughes Electronics Corporation | Video broadcast system with video data shifting |
US6192032B1 (en) | 1998-01-02 | 2001-02-20 | International Business Machines Corporation | Rate attenuation systems, methods and computer program products for reducing low priority video frame packets transmitted over a network |
US6212208B1 (en) * | 1996-11-11 | 2001-04-03 | Matsushita Electric Industrial Co., Ltd. | Method for coding and multiplexing multimedia data, apparatus for coding and multiplexing multimedia data, record media containing program for coding and multiplexing multimedia data |
US6240094B1 (en) * | 1997-12-22 | 2001-05-29 | Bell Atlantic Network Services, Inc. | Statistical time division multiplexer for a wireless asymmetric local loop communication system |
US6249519B1 (en) * | 1998-04-16 | 2001-06-19 | Mantra Communications | Flow based circuit steering in ATM networks |
US6249529B1 (en) | 1995-09-08 | 2001-06-19 | Sprint Communications Company, L.P. | Telecommunications apparatus, system, and method with an enhanced signal transfer point |
US6253247B1 (en) * | 1996-11-21 | 2001-06-26 | Ragula Systems | System and method for transmitting a user's data packets concurrently over different telephone lines between two computer networks |
US6259733B1 (en) | 1998-06-16 | 2001-07-10 | General Instrument Corporation | Pre-processing of bit rate allocation in a multi-channel video encoder |
US6262992B1 (en) | 1996-11-22 | 2001-07-17 | Sprint Communications Company, L. P. | System and method for transporting a call in a telecommunication network |
WO2001078407A1 (en) * | 2000-04-07 | 2001-10-18 | Snell & Wilcox Limited | Multiplexing compressed signals |
US6314103B1 (en) | 1994-05-05 | 2001-11-06 | Sprint Communications Company, L.P. | System and method for allocating bandwidth for a call |
US6351521B1 (en) | 1998-04-10 | 2002-02-26 | Sprint Communications Company L.P. | Communications test system |
US20020024967A1 (en) * | 1999-12-14 | 2002-02-28 | Zaun David Brian | Dynamic configuration of input filtering parameters for an MPEG re-multiplexer |
US20020069354A1 (en) * | 2000-02-03 | 2002-06-06 | Fallon James J. | Systems and methods for accelerated loading of operating systems and application programs |
US6404776B1 (en) * | 1997-03-13 | 2002-06-11 | 8 × 8, Inc. | Data processor having controlled scalable input data source and method thereof |
US6407998B1 (en) | 1997-10-02 | 2002-06-18 | Thomson Licensing S.A. | Multimedia decoder for prioritized bi-directional communication in a broadcast system |
US20020085584A1 (en) * | 2000-08-17 | 2002-07-04 | Motofumi Itawaki | Statistical multiplex system, statistical multiplex controller and method of statistical multiplex |
US6418122B1 (en) * | 1997-03-21 | 2002-07-09 | Scientific-Atlanta, Inc. | Method and apparatus for assuring sufficient bandwidth of a statistical multiplexer |
US6418169B1 (en) | 1997-10-16 | 2002-07-09 | Thomson Licensing S.A. | System for prioritizing bi-directional broadcast data |
US6421720B2 (en) * | 1998-10-28 | 2002-07-16 | Cisco Technology, Inc. | Codec-independent technique for modulating bandwidth in packet network |
US20020104058A1 (en) * | 2000-12-06 | 2002-08-01 | Yigal Rappaport | Packet switched network having error correction capabilities of variable size data packets and a method thereof |
US6430195B1 (en) | 1994-05-05 | 2002-08-06 | Sprint Communications Company L.P. | Broadband telecommunications system interface |
US6470019B1 (en) | 1998-02-20 | 2002-10-22 | Sprint Communications Company L.P. | System and method for treating a call for call processing |
US6483837B1 (en) | 1998-02-20 | 2002-11-19 | Sprint Communications Company L.P. | System and method for connecting a call with an interworking system |
US20020173954A1 (en) * | 2001-05-15 | 2002-11-21 | Kddi Corporation | Adaptive media encoding and decoding equipment |
US6487220B2 (en) | 1996-08-29 | 2002-11-26 | Mitsubishi Denki Kabushiki Kaisha | Content-based multiplexer device and multiplexing method |
US6490298B1 (en) | 1999-02-26 | 2002-12-03 | Harmonic Inc. | Apparatus and methods of multiplexing data to a communication channel |
US6493388B1 (en) | 2000-04-19 | 2002-12-10 | General Instrument Corporation | Rate control and buffer protection for variable bit rate video programs over a constant rate channel |
US20020191692A1 (en) * | 2001-02-13 | 2002-12-19 | Realtime Data, Llc | Bandwidth sensitive data compression and decompression |
US6504850B1 (en) * | 1997-01-21 | 2003-01-07 | Sony Corporation | Encoded signal transmission method and encoded signal transmission apparatus |
US20030007516A1 (en) * | 2001-07-06 | 2003-01-09 | Yuri Abramov | System and method for the application of a statistical multiplexing algorithm for video encoding |
US20030048853A1 (en) * | 2000-02-15 | 2003-03-13 | Oh Taek Man | Multi-channel image encoding method and system |
US6549515B1 (en) * | 1998-07-12 | 2003-04-15 | Eci Telecom Ltd. | Method for managing varying traffic loads in a telecommunication network |
US6563918B1 (en) | 1998-02-20 | 2003-05-13 | Sprint Communications Company, LP | Telecommunications system architecture for connecting a call |
US6574222B1 (en) | 1998-02-20 | 2003-06-03 | Sprint Communications Company, L.P. | System and method for allocating bandwidth for a call |
US6594271B1 (en) * | 1999-07-19 | 2003-07-15 | General Instruments Corporation | Implementation of opportunistic data on a statistical multiplexing encoder |
US6594316B2 (en) | 2000-12-12 | 2003-07-15 | Scientific-Atlanta, Inc. | Method and apparatus for adaptive bit rate control in an asynchronized encoding system |
US20030135635A1 (en) * | 1996-03-08 | 2003-07-17 | Levi Steven P. | Active stream format for holding multiple media streams |
US20030156639A1 (en) * | 2002-02-19 | 2003-08-21 | Jui Liang | Frame rate control system and method |
US20030185297A1 (en) * | 2002-03-28 | 2003-10-02 | International Business Machines Corporation | Cascaded output for an encoder system using multiple encoders |
US6633561B2 (en) | 1994-05-05 | 2003-10-14 | Sprint Communications Company, L.P. | Method, system and apparatus for telecommunications control |
US20030200549A1 (en) * | 1995-05-26 | 2003-10-23 | Hyundai Electronics Of America | Video pedestal network |
US6643327B1 (en) | 2000-05-05 | 2003-11-04 | General Instrument Corporation | Statistical multiplexer and remultiplexer that accommodates changes in structure of group of pictures |
US6665872B1 (en) * | 1999-01-06 | 2003-12-16 | Sarnoff Corporation | Latency-based statistical multiplexing |
EP1376383A2 (en) | 2002-03-23 | 2004-01-02 | Uwe Noll | Method for processing inputs and outputs data for statistical analysis and method for purging redundancies |
US6678282B2 (en) * | 1996-10-23 | 2004-01-13 | Cisco Technology, Inc. | System and method for communicating packetized data over a channel bank |
US6704327B1 (en) | 1997-05-09 | 2004-03-09 | Sprint Communications Company, L.P. | System and method for connecting a call |
US6704281B1 (en) * | 1999-01-15 | 2004-03-09 | Nokia Mobile Phones Ltd. | Bit-rate control in a multimedia device |
US20040056783A1 (en) * | 1998-12-11 | 2004-03-25 | Fallon James J. | Content independent data compression method and system |
US20040073746A1 (en) * | 1999-03-11 | 2004-04-15 | Fallon James J. | System and methods for accelerated data storage and retrieval |
US6731605B1 (en) | 2000-06-19 | 2004-05-04 | Sharp Laboratories Of America, Inc. | Prioritized optimal server side bandwidth allocation in a multimedia session with push and pull sources |
US6754241B1 (en) * | 1999-01-06 | 2004-06-22 | Sarnoff Corporation | Computer system for statistical multiplexing of bitstreams |
US20040131116A1 (en) * | 2001-03-29 | 2004-07-08 | Akira Sugiyama | Image processing apparatus, image processing method, image processing program, and recording medium |
US6781956B1 (en) | 1999-09-17 | 2004-08-24 | Cisco Technology, Inc. | System and method for prioritizing packetized data from a distributed control environment for transmission through a high bandwidth link |
WO2004077835A1 (en) * | 2003-02-21 | 2004-09-10 | Telesuit Corporation | System and method for transmission of a multitude of video sequences |
US6868081B1 (en) * | 1999-04-13 | 2005-03-15 | Sprint Communications Company L.P. | Method and apparatus for simultaneous multiline phone and data services over a single access facility |
WO2005032117A2 (en) * | 2003-09-24 | 2005-04-07 | Texas Instruments Incorporated | 8x8 transform and quantization |
US6894973B1 (en) * | 1995-11-09 | 2005-05-17 | At&T Corp. | Fair bandwidth sharing for video traffic sources using distributed feedback control |
US20050117644A1 (en) * | 2003-07-04 | 2005-06-02 | Xavier Ducloux | Device and method for coding video data |
US20050122985A1 (en) * | 1999-12-30 | 2005-06-09 | Cisco Technology, Inc. | Method and apparatus for throttling audio packets according to gateway processing capacity |
US6922409B1 (en) | 1998-02-20 | 2005-07-26 | Sprint Communications Company L.P. | System and method for allocating bandwidth for a call |
US20050180354A1 (en) * | 2003-11-25 | 2005-08-18 | Samsung Electronics Co., Ltd. | Method for allocating subchannels in an OFDMA mobile communication system |
US6937619B1 (en) * | 2001-05-29 | 2005-08-30 | Bigband Networks, Inc. | Method and system for comparison-based prioritized bit rate conversion |
US6944221B1 (en) * | 1994-12-28 | 2005-09-13 | Koninklijke Philips Electronics N.V. | Buffer management in variable bit-rate compression systems |
US20050208949A1 (en) * | 2004-02-12 | 2005-09-22 | Chiueh Tzi-Cker | Centralized channel assignment and routing algorithms for multi-channel wireless mesh networks |
US6959451B1 (en) * | 1998-08-21 | 2005-10-25 | Intel Corporation | Transmission communications management |
US6987728B2 (en) | 2001-01-23 | 2006-01-17 | Sharp Laboratories Of America, Inc. | Bandwidth allocation system |
US20060015628A1 (en) * | 1996-02-26 | 2006-01-19 | Wesinger Ralph E Jr | Multi-homed web server |
US20060015650A1 (en) * | 1999-03-11 | 2006-01-19 | Fallon James J | System and methods for accelerated data storage and retrieval |
US20060018254A1 (en) * | 2004-07-26 | 2006-01-26 | John Sanders | Statistical multiplexer having protective features from extraneous messages generated by redundant system elements |
US7058087B1 (en) * | 2001-05-29 | 2006-06-06 | Bigband Networks, Inc. | Method and system for prioritized bit rate conversion |
US7072393B2 (en) | 2001-06-25 | 2006-07-04 | International Business Machines Corporation | Multiple parallel encoders and statistical analysis thereof for encoding a video sequence |
US7079534B1 (en) | 1998-02-20 | 2006-07-18 | Sprint Communications Company L.P. | System and method for allocating bandwidth for a call |
US20060177142A1 (en) * | 2005-02-08 | 2006-08-10 | Minhua Zhou | H.264 quantization |
US7103048B1 (en) * | 1999-03-10 | 2006-09-05 | Juniper Networks, Inc. | Statistic multiplex transmission system |
US7103068B1 (en) | 1999-05-04 | 2006-09-05 | Sprint Communication Company L.P. | System and method for configuring bandwidth transmission rates for call connections |
US7113523B1 (en) * | 1997-06-11 | 2006-09-26 | Sony Corporation | Data multiplexing device, program distribution system, program transmission system, pay broadcast system, program transmission method, conditional access system, and data reception device |
US20060245357A1 (en) * | 2004-03-18 | 2006-11-02 | Veraz Networks Ltd. | Method and device for quality management in communication networks |
US20070036177A1 (en) * | 2005-08-12 | 2007-02-15 | Sarnoff Corporation | Method and apparatus for managing delivery of video over a digital subscriber line |
US20070104113A1 (en) * | 2005-11-09 | 2007-05-10 | Cataldo Mega | Determining whether to compress data transmitted over a network |
US20070174209A1 (en) * | 2000-10-03 | 2007-07-26 | Realtime Data Llc | System and method for data feed acceleration and encryption |
US7278152B1 (en) | 1995-05-26 | 2007-10-02 | Irdeto Access, Inc. | Video pedestal network |
US7286473B1 (en) | 2002-07-10 | 2007-10-23 | The Directv Group, Inc. | Null packet replacement with bi-level scheduling |
US20070255556A1 (en) * | 2003-04-30 | 2007-11-01 | Michener James A | Audio level control for compressed audio |
US7301906B2 (en) | 2001-12-17 | 2007-11-27 | Lsi Corporation | Methods and structures for improved buffer management and dynamic adaption of flow control status in high-speed communication networks |
US7376159B1 (en) * | 2002-01-03 | 2008-05-20 | The Directv Group, Inc. | Exploitation of null packets in packetized digital television systems |
US7376772B2 (en) | 2000-02-03 | 2008-05-20 | Realtime Data Llc | Data storewidth accelerator |
US7385970B1 (en) * | 2001-12-07 | 2008-06-10 | Redback Networks, Inc. | Method and apparatus for balancing bandwidth among multiple ports of a network element |
US7397774B1 (en) | 2003-05-23 | 2008-07-08 | The United States Of America As Represented By The Administrator Of The National Aeronautics And Space Administration | Downlink data multiplexer |
DE102007001379A1 (en) * | 2007-01-09 | 2008-07-10 | Fraunhofer-Gesellschaft zur Förderung der angewandten Forschung e.V. | Concept for encoding a plurality of information signals for a common transmission in a time division multiplex |
US20080211969A1 (en) * | 2007-02-01 | 2008-09-04 | Rohde & Schwarz Gmbh & Co. Kg | Systems, apparatus, methods and computer program products for providing atsc interoperability |
US20090119736A1 (en) * | 2002-12-10 | 2009-05-07 | Onlive, Inc. | System and method for compressing streaming interactive video |
US20090158378A1 (en) * | 2007-12-12 | 2009-06-18 | Rohde & Schwarz Gmbh & Co. Kg | Method and system for transmitting data between a central radio station and at least one transmitter |
US20090175356A1 (en) * | 2007-12-11 | 2009-07-09 | Rohde & Schwarz Gmbh & Co. Kg | Method and device for forming a common datastream according to the atsc standard |
US7564873B1 (en) * | 1999-12-10 | 2009-07-21 | Cox Communications, Inc. | Method and apparatus for providing in-band messaging within a video on demand environment |
US20090193484A1 (en) * | 2008-01-03 | 2009-07-30 | Nec Laboratories America, Inc. | Adaptive scheduling of streaming video over wireless networks |
US20090193487A1 (en) * | 2005-03-02 | 2009-07-30 | Rohde & Schwarz Gmbh & Co. Kg | Apparatus, systems and methods for providing enhancements to atsc networks using synchronous vestigial sideband (vsb) frame slicing |
US20090323729A1 (en) * | 2008-06-25 | 2009-12-31 | Rohde & Schwarz Gmbh & Co. Kg | Apparatus, systems, methods and computer program products for producing a single frequency network for atsc mobile / handheld services |
US20100085489A1 (en) * | 2008-10-02 | 2010-04-08 | Rohde & Schwarz Gmbh & Co. Kg | Methods and Apparatus for Generating a Transport Data Stream with Image Data |
US20100111109A1 (en) * | 2008-11-06 | 2010-05-06 | Rohde & Schwarz Gmbh & Co. Kg | Method and system for synchronized mapping of data packets in an atsc data stream |
US20100254449A1 (en) * | 2009-04-07 | 2010-10-07 | Rohde & Schwarz Gmbh & Co. Kg | Method and device for continuous adaptation of coding parameters to a variable user-data rate |
US7912226B1 (en) | 2003-09-12 | 2011-03-22 | The Directv Group, Inc. | Automatic measurement of audio presence and level by direct processing of an MPEG data stream |
US20110075638A1 (en) * | 2005-12-02 | 2011-03-31 | Qualcomm Incorporated | Time slicing techniques for variable data rate encoding |
US20110099599A1 (en) * | 2009-10-16 | 2011-04-28 | c/o Rohde & Schwarz GmbH & Co. KG | Method and a device for the efficient transmission of program and service data for national and regional broadcast |
US8117298B1 (en) | 1996-02-26 | 2012-02-14 | Graphon Corporation | Multi-homed web server |
US20120155554A1 (en) * | 2010-12-20 | 2012-06-21 | General Instrument Corporation | Svc-to-avc rewriter with open-loop statistal multplexer |
USRE44306E1 (en) | 1995-02-24 | 2013-06-18 | Apple Inc. | System for terminating multicast channel and data broadcast when at least two second endpoints do not transmit positive acknowledgement message to first endpoint |
US8553619B2 (en) | 2008-07-04 | 2013-10-08 | Rohde & Schwarz Gmbh & Co. Kg | Method and a system for time synchronisation between a control centre and several transmitters |
US20140092854A1 (en) * | 2011-05-31 | 2014-04-03 | Nec Corporation | Wireless transmission device, wireless transmission system, and method for controlling wireless transmission device |
US8692695B2 (en) | 2000-10-03 | 2014-04-08 | Realtime Data, Llc | Methods for encoding and decoding data |
US20140184625A1 (en) * | 2012-12-31 | 2014-07-03 | Nvidia Corporation | Stutter buffer transfer techniques for display systems |
US8982745B2 (en) | 2009-03-21 | 2015-03-17 | Rohde & Schwarz Gmbh & Co. Kg | Method for improving the data rate of mobile/handheld data and the quality of channel estimation in an ATSC-M/H transport data stream |
US8989021B2 (en) | 2011-01-20 | 2015-03-24 | Rohde & Schwarz Gmbh & Co. Kg | Universal broadband broadcasting |
US20150117253A1 (en) * | 2013-10-30 | 2015-04-30 | Palo Alto Research Center Incorporated | Interest messages with a payload for a named data network |
US9078015B2 (en) | 2010-08-25 | 2015-07-07 | Cable Television Laboratories, Inc. | Transport of partially encrypted media |
US9143546B2 (en) * | 2000-10-03 | 2015-09-22 | Realtime Data Llc | System and method for data feed acceleration and encryption |
US20150356043A1 (en) * | 2013-02-15 | 2015-12-10 | Audi Ag | Master bus device for a vehicle communication bus of a motor vehicle |
US9276751B2 (en) | 2014-05-28 | 2016-03-01 | Palo Alto Research Center Incorporated | System and method for circular link resolution with computable hash-based names in content-centric networks |
US9280546B2 (en) | 2012-10-31 | 2016-03-08 | Palo Alto Research Center Incorporated | System and method for accessing digital content using a location-independent name |
US9311377B2 (en) | 2013-11-13 | 2016-04-12 | Palo Alto Research Center Incorporated | Method and apparatus for performing server handoff in a name-based content distribution system |
US9363179B2 (en) | 2014-03-26 | 2016-06-07 | Palo Alto Research Center Incorporated | Multi-publisher routing protocol for named data networks |
US9363086B2 (en) | 2014-03-31 | 2016-06-07 | Palo Alto Research Center Incorporated | Aggregate signing of data in content centric networking |
US9374304B2 (en) | 2014-01-24 | 2016-06-21 | Palo Alto Research Center Incorporated | End-to end route tracing over a named-data network |
US9379979B2 (en) | 2014-01-14 | 2016-06-28 | Palo Alto Research Center Incorporated | Method and apparatus for establishing a virtual interface for a set of mutual-listener devices |
US9390289B2 (en) | 2014-04-07 | 2016-07-12 | Palo Alto Research Center Incorporated | Secure collection synchronization using matched network names |
US9391777B2 (en) | 2014-08-15 | 2016-07-12 | Palo Alto Research Center Incorporated | System and method for performing key resolution over a content centric network |
US9391896B2 (en) | 2014-03-10 | 2016-07-12 | Palo Alto Research Center Incorporated | System and method for packet forwarding using a conjunctive normal form strategy in a content-centric network |
US9400800B2 (en) | 2012-11-19 | 2016-07-26 | Palo Alto Research Center Incorporated | Data transport by named content synchronization |
US9401864B2 (en) | 2013-10-31 | 2016-07-26 | Palo Alto Research Center Incorporated | Express header for packets with hierarchically structured variable-length identifiers |
US9407549B2 (en) | 2013-10-29 | 2016-08-02 | Palo Alto Research Center Incorporated | System and method for hash-based forwarding of packets with hierarchically structured variable-length identifiers |
US9407432B2 (en) | 2014-03-19 | 2016-08-02 | Palo Alto Research Center Incorporated | System and method for efficient and secure distribution of digital content |
US9426113B2 (en) | 2014-06-30 | 2016-08-23 | Palo Alto Research Center Incorporated | System and method for managing devices over a content centric network |
US9444722B2 (en) | 2013-08-01 | 2016-09-13 | Palo Alto Research Center Incorporated | Method and apparatus for configuring routing paths in a custodian-based routing architecture |
US9451032B2 (en) | 2014-04-10 | 2016-09-20 | Palo Alto Research Center Incorporated | System and method for simple service discovery in content-centric networks |
US9456054B2 (en) | 2008-05-16 | 2016-09-27 | Palo Alto Research Center Incorporated | Controlling the spread of interests and content in a content centric network |
US9455835B2 (en) | 2014-05-23 | 2016-09-27 | Palo Alto Research Center Incorporated | System and method for circular link resolution with hash-based names in content-centric networks |
US9462006B2 (en) | 2015-01-21 | 2016-10-04 | Palo Alto Research Center Incorporated | Network-layer application-specific trust model |
US9467492B2 (en) | 2014-08-19 | 2016-10-11 | Palo Alto Research Center Incorporated | System and method for reconstructable all-in-one content stream |
US9473405B2 (en) | 2014-03-10 | 2016-10-18 | Palo Alto Research Center Incorporated | Concurrent hashes and sub-hashes on data streams |
US9473475B2 (en) | 2014-12-22 | 2016-10-18 | Palo Alto Research Center Incorporated | Low-cost authenticated signing delegation in content centric networking |
US9497282B2 (en) | 2014-08-27 | 2016-11-15 | Palo Alto Research Center Incorporated | Network coding for content-centric network |
US9503365B2 (en) | 2014-08-11 | 2016-11-22 | Palo Alto Research Center Incorporated | Reputation-based instruction processing over an information centric network |
US9503358B2 (en) | 2013-12-05 | 2016-11-22 | Palo Alto Research Center Incorporated | Distance-based routing in an information-centric network |
US9516144B2 (en) | 2014-06-19 | 2016-12-06 | Palo Alto Research Center Incorporated | Cut-through forwarding of CCNx message fragments with IP encapsulation |
US9537719B2 (en) | 2014-06-19 | 2017-01-03 | Palo Alto Research Center Incorporated | Method and apparatus for deploying a minimal-cost CCN topology |
US9536059B2 (en) | 2014-12-15 | 2017-01-03 | Palo Alto Research Center Incorporated | Method and system for verifying renamed content using manifests in a content centric network |
US9535968B2 (en) | 2014-07-21 | 2017-01-03 | Palo Alto Research Center Incorporated | System for distributing nameless objects using self-certifying names |
US9552493B2 (en) | 2015-02-03 | 2017-01-24 | Palo Alto Research Center Incorporated | Access control framework for information centric networking |
US9553812B2 (en) | 2014-09-09 | 2017-01-24 | Palo Alto Research Center Incorporated | Interest keep alives at intermediate routers in a CCN |
US9590887B2 (en) | 2014-07-18 | 2017-03-07 | Cisco Systems, Inc. | Method and system for keeping interest alive in a content centric network |
US9590948B2 (en) | 2014-12-15 | 2017-03-07 | Cisco Systems, Inc. | CCN routing using hardware-assisted hash tables |
US9602596B2 (en) | 2015-01-12 | 2017-03-21 | Cisco Systems, Inc. | Peer-to-peer sharing in a content centric network |
US9609014B2 (en) | 2014-05-22 | 2017-03-28 | Cisco Systems, Inc. | Method and apparatus for preventing insertion of malicious content at a named data network router |
US9621354B2 (en) | 2014-07-17 | 2017-04-11 | Cisco Systems, Inc. | Reconstructable content objects |
US9626413B2 (en) | 2014-03-10 | 2017-04-18 | Cisco Systems, Inc. | System and method for ranking content popularity in a content-centric network |
US9660825B2 (en) | 2014-12-24 | 2017-05-23 | Cisco Technology, Inc. | System and method for multi-source multicasting in content-centric networks |
US9678998B2 (en) | 2014-02-28 | 2017-06-13 | Cisco Technology, Inc. | Content name resolution for information centric networking |
US9686194B2 (en) | 2009-10-21 | 2017-06-20 | Cisco Technology, Inc. | Adaptive multi-interface use for content networking |
US9699198B2 (en) | 2014-07-07 | 2017-07-04 | Cisco Technology, Inc. | System and method for parallel secure content bootstrapping in content-centric networks |
US9716622B2 (en) | 2014-04-01 | 2017-07-25 | Cisco Technology, Inc. | System and method for dynamic name configuration in content-centric networks |
US9729616B2 (en) | 2014-07-18 | 2017-08-08 | Cisco Technology, Inc. | Reputation-based strategy for forwarding and responding to interests over a content centric network |
US9729120B1 (en) | 2011-07-13 | 2017-08-08 | The Directv Group, Inc. | System and method to monitor audio loudness and provide audio automatic gain control |
US9729662B2 (en) | 2014-08-11 | 2017-08-08 | Cisco Technology, Inc. | Probabilistic lazy-forwarding technique without validation in a content centric network |
US9794238B2 (en) | 2015-10-29 | 2017-10-17 | Cisco Technology, Inc. | System for key exchange in a content centric network |
US9800637B2 (en) | 2014-08-19 | 2017-10-24 | Cisco Technology, Inc. | System and method for all-in-one content stream in content-centric networks |
US9807205B2 (en) | 2015-11-02 | 2017-10-31 | Cisco Technology, Inc. | Header compression for CCN messages using dictionary |
US9832291B2 (en) | 2015-01-12 | 2017-11-28 | Cisco Technology, Inc. | Auto-configurable transport stack |
US9832123B2 (en) | 2015-09-11 | 2017-11-28 | Cisco Technology, Inc. | Network named fragments in a content centric network |
US9832116B2 (en) | 2016-03-14 | 2017-11-28 | Cisco Technology, Inc. | Adjusting entries in a forwarding information base in a content centric network |
US9836540B2 (en) | 2014-03-04 | 2017-12-05 | Cisco Technology, Inc. | System and method for direct storage access in a content-centric network |
US9846881B2 (en) | 2014-12-19 | 2017-12-19 | Palo Alto Research Center Incorporated | Frugal user engagement help systems |
US9882964B2 (en) | 2014-08-08 | 2018-01-30 | Cisco Technology, Inc. | Explicit strategy feedback in name-based forwarding |
US9888052B2 (en) | 2015-09-21 | 2018-02-06 | Imagine Communications Corp. | ABR allocation for statistical multiplexing |
US9912776B2 (en) | 2015-12-02 | 2018-03-06 | Cisco Technology, Inc. | Explicit content deletion commands in a content centric network |
US9916601B2 (en) | 2014-03-21 | 2018-03-13 | Cisco Technology, Inc. | Marketplace for presenting advertisements in a scalable data broadcasting system |
US9916457B2 (en) | 2015-01-12 | 2018-03-13 | Cisco Technology, Inc. | Decoupled name security binding for CCN objects |
US9930146B2 (en) | 2016-04-04 | 2018-03-27 | Cisco Technology, Inc. | System and method for compressing content centric networking messages |
US9935791B2 (en) | 2013-05-20 | 2018-04-03 | Cisco Technology, Inc. | Method and system for name resolution across heterogeneous architectures |
US9946743B2 (en) | 2015-01-12 | 2018-04-17 | Cisco Technology, Inc. | Order encoded manifests in a content centric network |
US9949301B2 (en) | 2016-01-20 | 2018-04-17 | Palo Alto Research Center Incorporated | Methods for fast, secure and privacy-friendly internet connection discovery in wireless networks |
US9954795B2 (en) | 2015-01-12 | 2018-04-24 | Cisco Technology, Inc. | Resource allocation using CCN manifests |
US9954678B2 (en) | 2014-02-06 | 2018-04-24 | Cisco Technology, Inc. | Content-based transport security |
US9959156B2 (en) | 2014-07-17 | 2018-05-01 | Cisco Technology, Inc. | Interest return control message |
US9978025B2 (en) | 2013-03-20 | 2018-05-22 | Cisco Technology, Inc. | Ordered-element naming for name-based packet forwarding |
US9977809B2 (en) | 2015-09-24 | 2018-05-22 | Cisco Technology, Inc. | Information and data framework in a content centric network |
US9986034B2 (en) | 2015-08-03 | 2018-05-29 | Cisco Technology, Inc. | Transferring state in content centric network stacks |
US9992281B2 (en) | 2014-05-01 | 2018-06-05 | Cisco Technology, Inc. | Accountable content stores for information centric networks |
US9992097B2 (en) | 2016-07-11 | 2018-06-05 | Cisco Technology, Inc. | System and method for piggybacking routing information in interests in a content centric network |
US10003520B2 (en) | 2014-12-22 | 2018-06-19 | Cisco Technology, Inc. | System and method for efficient name-based content routing using link-state information in information-centric networks |
US10003507B2 (en) | 2016-03-04 | 2018-06-19 | Cisco Technology, Inc. | Transport session state protocol |
US10009446B2 (en) | 2015-11-02 | 2018-06-26 | Cisco Technology, Inc. | Header compression for CCN messages using dictionary learning |
US10009266B2 (en) | 2016-07-05 | 2018-06-26 | Cisco Technology, Inc. | Method and system for reference counted pending interest tables in a content centric network |
US10021222B2 (en) | 2015-11-04 | 2018-07-10 | Cisco Technology, Inc. | Bit-aligned header compression for CCN messages using dictionary |
US10027578B2 (en) | 2016-04-11 | 2018-07-17 | Cisco Technology, Inc. | Method and system for routable prefix queries in a content centric network |
US10033642B2 (en) | 2016-09-19 | 2018-07-24 | Cisco Technology, Inc. | System and method for making optimal routing decisions based on device-specific parameters in a content centric network |
US10033639B2 (en) | 2016-03-25 | 2018-07-24 | Cisco Technology, Inc. | System and method for routing packets in a content centric network using anonymous datagrams |
US10038633B2 (en) | 2016-03-04 | 2018-07-31 | Cisco Technology, Inc. | Protocol to query for historical network information in a content centric network |
US10043016B2 (en) | 2016-02-29 | 2018-08-07 | Cisco Technology, Inc. | Method and system for name encryption agreement in a content centric network |
US10051071B2 (en) | 2016-03-04 | 2018-08-14 | Cisco Technology, Inc. | Method and system for collecting historical network information in a content centric network |
US10063414B2 (en) | 2016-05-13 | 2018-08-28 | Cisco Technology, Inc. | Updating a transport stack in a content centric network |
US10067948B2 (en) | 2016-03-18 | 2018-09-04 | Cisco Technology, Inc. | Data deduping in content centric networking manifests |
US10069933B2 (en) | 2014-10-23 | 2018-09-04 | Cisco Technology, Inc. | System and method for creating virtual interfaces based on network characteristics |
US10069729B2 (en) | 2016-08-08 | 2018-09-04 | Cisco Technology, Inc. | System and method for throttling traffic based on a forwarding information base in a content centric network |
US10075402B2 (en) | 2015-06-24 | 2018-09-11 | Cisco Technology, Inc. | Flexible command and control in content centric networks |
US10075521B2 (en) | 2014-04-07 | 2018-09-11 | Cisco Technology, Inc. | Collection synchronization using equality matched network names |
US10075401B2 (en) | 2015-03-18 | 2018-09-11 | Cisco Technology, Inc. | Pending interest table behavior |
US10078062B2 (en) | 2015-12-15 | 2018-09-18 | Palo Alto Research Center Incorporated | Device health estimation by combining contextual information with sensor data |
US10084764B2 (en) | 2016-05-13 | 2018-09-25 | Cisco Technology, Inc. | System for a secure encryption proxy in a content centric network |
US10091330B2 (en) | 2016-03-23 | 2018-10-02 | Cisco Technology, Inc. | Interest scheduling by an information and data framework in a content centric network |
US10089655B2 (en) | 2013-11-27 | 2018-10-02 | Cisco Technology, Inc. | Method and apparatus for scalable data broadcasting |
US10089651B2 (en) | 2014-03-03 | 2018-10-02 | Cisco Technology, Inc. | Method and apparatus for streaming advertisements in a scalable data broadcasting system |
US10097346B2 (en) | 2015-12-09 | 2018-10-09 | Cisco Technology, Inc. | Key catalogs in a content centric network |
US10097521B2 (en) | 2015-11-20 | 2018-10-09 | Cisco Technology, Inc. | Transparent encryption in a content centric network |
US10098051B2 (en) | 2014-01-22 | 2018-10-09 | Cisco Technology, Inc. | Gateways and routing in software-defined manets |
US10103989B2 (en) | 2016-06-13 | 2018-10-16 | Cisco Technology, Inc. | Content object return messages in a content centric network |
US10101801B2 (en) | 2013-11-13 | 2018-10-16 | Cisco Technology, Inc. | Method and apparatus for prefetching content in a data stream |
US10116605B2 (en) | 2015-06-22 | 2018-10-30 | Cisco Technology, Inc. | Transport stack name scheme and identity management |
US10122624B2 (en) | 2016-07-25 | 2018-11-06 | Cisco Technology, Inc. | System and method for ephemeral entries in a forwarding information base in a content centric network |
US10129365B2 (en) | 2013-11-13 | 2018-11-13 | Cisco Technology, Inc. | Method and apparatus for pre-fetching remote content based on static and dynamic recommendations |
US10135948B2 (en) | 2016-10-31 | 2018-11-20 | Cisco Technology, Inc. | System and method for process migration in a content centric network |
US10148572B2 (en) | 2016-06-27 | 2018-12-04 | Cisco Technology, Inc. | Method and system for interest groups in a content centric network |
US10172068B2 (en) | 2014-01-22 | 2019-01-01 | Cisco Technology, Inc. | Service-oriented routing in software-defined MANETs |
US10204013B2 (en) | 2014-09-03 | 2019-02-12 | Cisco Technology, Inc. | System and method for maintaining a distributed and fault-tolerant state over an information centric network |
US10212196B2 (en) | 2016-03-16 | 2019-02-19 | Cisco Technology, Inc. | Interface discovery and authentication in a name-based network |
US10212248B2 (en) | 2016-10-03 | 2019-02-19 | Cisco Technology, Inc. | Cache management on high availability routers in a content centric network |
US10237189B2 (en) | 2014-12-16 | 2019-03-19 | Cisco Technology, Inc. | System and method for distance-based interest forwarding |
US10243851B2 (en) | 2016-11-21 | 2019-03-26 | Cisco Technology, Inc. | System and method for forwarder connection information in a content centric network |
US10257271B2 (en) | 2016-01-11 | 2019-04-09 | Cisco Technology, Inc. | Chandra-Toueg consensus in a content centric network |
US10263965B2 (en) | 2015-10-16 | 2019-04-16 | Cisco Technology, Inc. | Encrypted CCNx |
US20190158856A1 (en) * | 2017-04-21 | 2019-05-23 | Zenimax Media Inc. | Systems and methods for rendering & pre-encoded load estimation based encoder hinting |
US10305864B2 (en) | 2016-01-25 | 2019-05-28 | Cisco Technology, Inc. | Method and system for interest encryption in a content centric network |
US10305865B2 (en) | 2016-06-21 | 2019-05-28 | Cisco Technology, Inc. | Permutation-based content encryption with manifests in a content centric network |
US10313227B2 (en) | 2015-09-24 | 2019-06-04 | Cisco Technology, Inc. | System and method for eliminating undetected interest looping in information-centric networks |
US10320760B2 (en) | 2016-04-01 | 2019-06-11 | Cisco Technology, Inc. | Method and system for mutating and caching content in a content centric network |
US10320675B2 (en) | 2016-05-04 | 2019-06-11 | Cisco Technology, Inc. | System and method for routing packets in a stateless content centric network |
US10333840B2 (en) | 2015-02-06 | 2019-06-25 | Cisco Technology, Inc. | System and method for on-demand content exchange with adaptive naming in information-centric networks |
US10355999B2 (en) | 2015-09-23 | 2019-07-16 | Cisco Technology, Inc. | Flow control with network named fragments |
GB2570324A (en) * | 2018-01-19 | 2019-07-24 | V Nova Int Ltd | Multi-codec processing and rate control |
US10404450B2 (en) | 2016-05-02 | 2019-09-03 | Cisco Technology, Inc. | Schematized access control in a content centric network |
US10425503B2 (en) | 2016-04-07 | 2019-09-24 | Cisco Technology, Inc. | Shared pending interest table in a content centric network |
US10430839B2 (en) | 2012-12-12 | 2019-10-01 | Cisco Technology, Inc. | Distributed advertisement insertion in content-centric networks |
US10447805B2 (en) | 2016-10-10 | 2019-10-15 | Cisco Technology, Inc. | Distributed consensus in a content centric network |
US10454820B2 (en) | 2015-09-29 | 2019-10-22 | Cisco Technology, Inc. | System and method for stateless information-centric networking |
US10498861B2 (en) * | 2015-11-11 | 2019-12-03 | Canon Kabushiki Kaisha | Method and apparatus for serving and managing storage of data streams in a surveillance and/or monitoring system |
US10547589B2 (en) | 2016-05-09 | 2020-01-28 | Cisco Technology, Inc. | System for implementing a small computer systems interface protocol over a content centric network |
US10608943B2 (en) * | 2017-10-27 | 2020-03-31 | Advanced Micro Devices, Inc. | Dynamic buffer management in multi-client token flow control routers |
US10610144B2 (en) | 2015-08-19 | 2020-04-07 | Palo Alto Research Center Incorporated | Interactive remote patient monitoring and condition management intervention system |
US10701038B2 (en) | 2015-07-27 | 2020-06-30 | Cisco Technology, Inc. | Content negotiation in a content centric network |
US10742596B2 (en) | 2016-03-04 | 2020-08-11 | Cisco Technology, Inc. | Method and system for reducing a collision probability of hash-based names using a publisher identifier |
US10956412B2 (en) | 2016-08-09 | 2021-03-23 | Cisco Technology, Inc. | Method and system for conjunctive normal form attribute matching in a content centric network |
US11153582B2 (en) * | 2019-01-17 | 2021-10-19 | Brightcove Inc. | Optimal multi-codec ABR ladder design |
US11436656B2 (en) | 2016-03-18 | 2022-09-06 | Palo Alto Research Center Incorporated | System and method for a real-time egocentric collaborative filter on large datasets |
Families Citing this family (14)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
EP0841820A3 (en) | 1996-11-08 | 2005-11-09 | Matsushita Electric Industrial Co., Ltd. | Method and apparatus for encoding, multiplexing and transmitting a video signal |
US6167084A (en) * | 1998-08-27 | 2000-12-26 | Motorola, Inc. | Dynamic bit allocation for statistical multiplexing of compressed and uncompressed digital video signals |
FR2800960A1 (en) * | 1999-11-05 | 2001-05-11 | Thomson Multimedia Sa | METHOD AND DEVICE FOR ALLOCATING BANDWIDTH TO DATA STREAMS IN A BROADCASTING NETWORK |
US7324592B2 (en) * | 2003-08-13 | 2008-01-29 | Mitsubishi Electric Research Laboratories, Inc. | Resource-constrained encoding of multiple videos |
US8693537B2 (en) * | 2005-03-01 | 2014-04-08 | Qualcomm Incorporated | Region-of-interest coding with background skipping for video telephony |
US8768084B2 (en) | 2005-03-01 | 2014-07-01 | Qualcomm Incorporated | Region-of-interest coding in video telephony using RHO domain bit allocation |
US9667980B2 (en) | 2005-03-01 | 2017-05-30 | Qualcomm Incorporated | Content-adaptive background skipping for region-of-interest video coding |
US7724972B2 (en) | 2005-03-01 | 2010-05-25 | Qualcomm Incorporated | Quality metric-biased region-of-interest coding for video telephony |
JP4636267B2 (en) * | 2006-02-28 | 2011-02-23 | 日本電気株式会社 | Encoding device and encoding bit rate switching method |
US20080101405A1 (en) * | 2006-10-26 | 2008-05-01 | General Instrument Corporation | Method and Apparatus for Dynamic Bandwidth Allocation of Video Over a Digital Subscriber Line |
US8582647B2 (en) * | 2007-04-23 | 2013-11-12 | Qualcomm Incorporated | Methods and systems for quality controlled encoding |
EP2230784A1 (en) * | 2009-03-19 | 2010-09-22 | Fraunhofer-Gesellschaft zur Förderung der angewandten Forschung e.V. | Device and method for transferring a number of information signals in a flexible time multiplex |
JP6310182B2 (en) * | 2013-03-22 | 2018-04-11 | 株式会社日立国際電気 | Optical transmission equipment |
US10225211B2 (en) | 2017-07-20 | 2019-03-05 | Arris Enterprises Llc | Statistical multiplexer with service priority weighting |
Citations (5)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US3864524A (en) * | 1971-10-30 | 1975-02-04 | Electronic Communications | Asynchronous multiplexing of digitized speech |
US4751699A (en) * | 1985-09-12 | 1988-06-14 | Andre Tarridec | Multiplexing and demultiplexing equipments for a synchronous digital link with variable modulation speed and rate |
US5291486A (en) * | 1991-08-19 | 1994-03-01 | Sony Corporation | Data multiplexing apparatus and multiplexed data demultiplexing apparatus |
US5363370A (en) * | 1990-11-09 | 1994-11-08 | France Telecom | Multirate digital multiplexing demultiplexing method and device |
US5381412A (en) * | 1991-10-02 | 1995-01-10 | Canon Kabushiki Kaisha | Multimedia communication apparatus |
Family Cites Families (5)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4638476A (en) * | 1985-06-21 | 1987-01-20 | At&T Bell Laboratories | Technique for dynamic resource allocation in a communication system |
US5159447A (en) * | 1991-05-23 | 1992-10-27 | At&T Bell Laboratories | Buffer control for variable bit-rate channel |
JP2861518B2 (en) * | 1991-09-03 | 1999-02-24 | 日本電気株式会社 | Adaptive multiplexing method |
US5216503A (en) * | 1991-12-24 | 1993-06-01 | General Instrument Corporation | Statistical multiplexer for a multichannel image compression system |
CA2104753C (en) * | 1992-10-29 | 1999-02-16 | Kotikalapudi Sriram | Bandwidth allocation, transmission scheduling, and congestion avoidance in broadband atm networks |
-
1994
- 1994-05-20 US US08/246,442 patent/US5506844A/en not_active Expired - Lifetime
-
1995
- 1995-05-19 WO PCT/US1995/006136 patent/WO1995032565A1/en active Application Filing
- 1995-05-19 KR KR1019960706560A patent/KR100382690B1/en not_active IP Right Cessation
- 1995-05-19 EP EP20050005560 patent/EP1542383A1/en not_active Ceased
- 1995-05-19 AU AU25166/95A patent/AU2516695A/en not_active Abandoned
- 1995-05-19 DE DE69535803T patent/DE69535803D1/en not_active Expired - Lifetime
- 1995-05-19 EP EP95919221A patent/EP0772927B1/en not_active Expired - Lifetime
- 1995-05-19 CA CA002190115A patent/CA2190115C/en not_active Expired - Lifetime
- 1995-05-19 JP JP53037595A patent/JP3233408B2/en not_active Expired - Lifetime
Patent Citations (5)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US3864524A (en) * | 1971-10-30 | 1975-02-04 | Electronic Communications | Asynchronous multiplexing of digitized speech |
US4751699A (en) * | 1985-09-12 | 1988-06-14 | Andre Tarridec | Multiplexing and demultiplexing equipments for a synchronous digital link with variable modulation speed and rate |
US5363370A (en) * | 1990-11-09 | 1994-11-08 | France Telecom | Multirate digital multiplexing demultiplexing method and device |
US5291486A (en) * | 1991-08-19 | 1994-03-01 | Sony Corporation | Data multiplexing apparatus and multiplexed data demultiplexing apparatus |
US5381412A (en) * | 1991-10-02 | 1995-01-10 | Canon Kabushiki Kaisha | Multimedia communication apparatus |
Cited By (471)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6366586B1 (en) | 1994-05-05 | 2002-04-02 | Sprint Communications Company L.P. | Method, system and apparatus for telecommunications control |
US6212193B1 (en) | 1994-05-05 | 2001-04-03 | Sprint Communications Company, L. P. | Method, system and apparatus for telecommunications control |
US5703876A (en) * | 1994-05-05 | 1997-12-30 | Christie; Joseph Michael | ATM transport system |
US6172977B1 (en) | 1994-05-05 | 2001-01-09 | Sprint Communications Company, L. P. | ATM direct access line system |
US6192052B1 (en) | 1994-05-05 | 2001-02-20 | Sprint Communications Company, L. P. | Method system and apparatus for telecommunications control |
US6108341A (en) | 1994-05-05 | 2000-08-22 | Sprint Communications Company, L.P. | Method, system and apparatus for telecommunications control |
US6104718A (en) | 1994-05-05 | 2000-08-15 | Sprint Communications Company, L.P. | Method, system and apparatus for telecommunications control |
US6201812B1 (en) | 1994-05-05 | 2001-03-13 | Sprint Communications Company, L. P. | Method system and apparatus for telecommunications control |
US6208660B1 (en) | 1994-05-05 | 2001-03-27 | Sprint Communications Company, L.P. | Method, system and apparatus for telecommunications control |
US6424652B1 (en) | 1994-05-05 | 2002-07-23 | Sprint Communications Company, L.P. | Method, system and apparatus for telecommunications control |
US6430195B1 (en) | 1994-05-05 | 2002-08-06 | Sprint Communications Company L.P. | Broadband telecommunications system interface |
US6633561B2 (en) | 1994-05-05 | 2003-10-14 | Sprint Communications Company, L.P. | Method, system and apparatus for telecommunications control |
US6304572B1 (en) | 1994-05-05 | 2001-10-16 | Sprint Communications Company, L.P. | Method, system and apparatus for telecommunications control |
US5991301A (en) | 1994-05-05 | 1999-11-23 | Sprint Communications Co. L.P. | Broadband telecommunications system |
US6643282B1 (en) | 1994-05-05 | 2003-11-04 | Sprint Communications Company L.P. | Method, system and apparatus for telecommunications control |
US6463052B1 (en) | 1994-05-05 | 2002-10-08 | Sprint Communications Company L.P. | Method, system and apparatus for telecommunications control |
US6185219B1 (en) | 1994-05-05 | 2001-02-06 | Sprint Communications Company, L. P. | Method, system and apparatus for telecommunications control |
US6314103B1 (en) | 1994-05-05 | 2001-11-06 | Sprint Communications Company, L.P. | System and method for allocating bandwidth for a call |
US5956426A (en) * | 1994-05-25 | 1999-09-21 | Sony Corporation | Multi-coding apparatus |
US5625830A (en) * | 1994-08-12 | 1997-04-29 | International Business Machines Corp. | Reduced circuit, high performance, binary select encoder network |
US6944221B1 (en) * | 1994-12-28 | 2005-09-13 | Koninklijke Philips Electronics N.V. | Buffer management in variable bit-rate compression systems |
USRE44395E1 (en) | 1995-02-24 | 2013-07-23 | Apple Inc. | System for terminating multicast channel and data broadcast when at least two second endpoints do not transmit positive acknowledgement message to first endpoint |
USRE44306E1 (en) | 1995-02-24 | 2013-06-18 | Apple Inc. | System for terminating multicast channel and data broadcast when at least two second endpoints do not transmit positive acknowledgement message to first endpoint |
US5999985A (en) * | 1995-04-13 | 1999-12-07 | Siemens Aktiengesellschaft | Method and apparatus for storing, searching and playback of items of information of a multimedia electronic mail system |
US5751694A (en) * | 1995-05-22 | 1998-05-12 | Sony Corporation | Methods and apparatus for synchronizing temporally related data streams |
US20080046938A9 (en) * | 1995-05-26 | 2008-02-21 | Irdeto Access, Inc. | Video pedestal network |
US7278152B1 (en) | 1995-05-26 | 2007-10-02 | Irdeto Access, Inc. | Video pedestal network |
US20030200549A1 (en) * | 1995-05-26 | 2003-10-23 | Hyundai Electronics Of America | Video pedestal network |
US5691986A (en) * | 1995-06-07 | 1997-11-25 | Hitachi America, Ltd. | Methods and apparatus for the editing and insertion of data into an encoded bitstream |
US5734843A (en) * | 1995-06-07 | 1998-03-31 | Advanced Micro Devices Inc. | Reverse data channel as a bandwidth modulator |
US5708664A (en) * | 1995-08-22 | 1998-01-13 | Digi-Media Vision Ltd. | Statistical multiplexing |
US6219359B1 (en) * | 1995-08-22 | 2001-04-17 | Tanberg Television Asa | Transmitting digital signals through channels having resource capability |
US6249529B1 (en) | 1995-09-08 | 2001-06-19 | Sprint Communications Company, L.P. | Telecommunications apparatus, system, and method with an enhanced signal transfer point |
US6081525A (en) | 1995-09-08 | 2000-06-27 | Sprint Communications Co., L.P. | Broadband telecommunications system |
US6327270B1 (en) | 1995-09-08 | 2001-12-04 | Sprint Communications Company, L. P. | Telecommunications apparatus, system, and method with an enhanced signal transfer point |
US6181703B1 (en) | 1995-09-08 | 2001-01-30 | Sprint Communications Company L. P. | System for managing telecommunications |
US6894973B1 (en) * | 1995-11-09 | 2005-05-17 | At&T Corp. | Fair bandwidth sharing for video traffic sources using distributed feedback control |
US5838690A (en) * | 1995-11-13 | 1998-11-17 | Hitachi, Ltd. | Method for dynamically assigning communication bands |
US5862140A (en) * | 1995-11-21 | 1999-01-19 | Imedia Corporation | Method and apparatus for multiplexing video programs for improved channel utilization |
US5956088A (en) * | 1995-11-21 | 1999-09-21 | Imedia Corporation | Method and apparatus for modifying encoded digital video for improved channel utilization |
US5877812A (en) * | 1995-11-21 | 1999-03-02 | Imedia Corporation | Method and apparatus for increasing channel utilization for digital video transmission |
US6081529A (en) * | 1995-11-22 | 2000-06-27 | Sprint Communications Company, L. P. | ATM transport system |
US6031840A (en) | 1995-12-07 | 2000-02-29 | Sprint Communications Co. L.P. | Telecommunications system |
US5854658A (en) * | 1995-12-26 | 1998-12-29 | C-Cube Microsystems Inc. | Statistical multiplexing system which encodes a sequence of video images using a plurality of video encoders |
US6026091A (en) | 1996-02-02 | 2000-02-15 | Sprint Communications Co. L.P. | ATM gateway system |
US8346861B1 (en) | 1996-02-26 | 2013-01-01 | Graphon Corporation | Web server with animation player |
US8346890B1 (en) | 1996-02-26 | 2013-01-01 | Graphon Corporation | Multi-homed web server with compiled animation server |
US8117298B1 (en) | 1996-02-26 | 2012-02-14 | Graphon Corporation | Multi-homed web server |
US8359368B1 (en) | 1996-02-26 | 2013-01-22 | Graphon Corporation | Multi-homed web server with animation player |
US8370476B1 (en) | 1996-02-26 | 2013-02-05 | Graphon Corporation | Modular multi-homed web server with animation player |
US8364754B1 (en) | 1996-02-26 | 2013-01-29 | Graphon Corporation | Multi-homed web server with compiled animation server and programmable functionality |
US20060015628A1 (en) * | 1996-02-26 | 2006-01-19 | Wesinger Ralph E Jr | Multi-homed web server |
US8356073B1 (en) | 1996-02-26 | 2013-01-15 | Graphon Corporation | Multi-homed web server with animation player and programmable functionality |
US20060047834A1 (en) * | 1996-02-26 | 2006-03-02 | Graphon Corporation | Multi-homed Web server |
US8370453B1 (en) | 1996-02-26 | 2013-02-05 | Graphon Corporation | Modular multi-homed web server with compiled animation server |
US5805600A (en) * | 1996-03-06 | 1998-09-08 | Adtran, Inc. | Mechanism for providing full utilization of high data rate serial communication link conveying data sourced from data terminal equipment and compressed by high compression ratio data compression-protocol engine |
US7296063B2 (en) * | 1996-03-08 | 2007-11-13 | Microsoft Corporation | Active stream format for holding multiple media streams |
US7466721B2 (en) | 1996-03-08 | 2008-12-16 | Microsoft Corporation | Active stream format for holding multiple media streams |
US7342924B2 (en) | 1996-03-08 | 2008-03-11 | Microsoft Corporation | Active stream format for holding multiple media streams |
US20030135635A1 (en) * | 1996-03-08 | 2003-07-17 | Levi Steven P. | Active stream format for holding multiple media streams |
US20050058134A1 (en) * | 1996-03-08 | 2005-03-17 | Microsoft Corporation | Active stream format for holding multiple media streams |
US20050058133A1 (en) * | 1996-03-08 | 2005-03-17 | Microsoft Corporation | Active stream format for holding multiple media streams |
US5864678A (en) * | 1996-05-08 | 1999-01-26 | Apple Computer, Inc. | System for detecting and reporting data flow imbalance between computers using grab rate outflow rate arrival rate and play rate |
US5940393A (en) * | 1996-05-28 | 1999-08-17 | Sprint Communications Co. L.P. | Telecommunications system with a connection processing system |
US6147994A (en) | 1996-05-28 | 2000-11-14 | Sprint Communications Company, L.P. | Telecommunications system with a connection processing system |
US6101542A (en) * | 1996-07-19 | 2000-08-08 | Hitachi, Ltd. | Service management method and connection oriented network system using such management method |
US6487220B2 (en) | 1996-08-29 | 2002-11-26 | Mitsubishi Denki Kabushiki Kaisha | Content-based multiplexer device and multiplexing method |
US6522672B1 (en) | 1996-08-29 | 2003-02-18 | Mitsubshi Denki Kabushiki Kaisha | Content-based multiplexer device and multiplexing method |
US6678282B2 (en) * | 1996-10-23 | 2004-01-13 | Cisco Technology, Inc. | System and method for communicating packetized data over a channel bank |
US6212208B1 (en) * | 1996-11-11 | 2001-04-03 | Matsushita Electric Industrial Co., Ltd. | Method for coding and multiplexing multimedia data, apparatus for coding and multiplexing multimedia data, record media containing program for coding and multiplexing multimedia data |
US6253247B1 (en) * | 1996-11-21 | 2001-06-26 | Ragula Systems | System and method for transmitting a user's data packets concurrently over different telephone lines between two computer networks |
US6262992B1 (en) | 1996-11-22 | 2001-07-17 | Sprint Communications Company, L. P. | System and method for transporting a call in a telecommunication network |
US5920562A (en) | 1996-11-22 | 1999-07-06 | Sprint Communications Co. L.P. | Systems and methods for providing enhanced services for telecommunication call |
US6014378A (en) | 1996-11-22 | 2000-01-11 | Sprint Communications Company, L.P. | Telecommunications tandem system for circuit-based traffic |
US6023474A (en) | 1996-11-22 | 2000-02-08 | Sprint Communications C.O.L.P. | Broadband telecommunications system interface |
US6115380A (en) | 1996-11-22 | 2000-09-05 | Sprint Communications Co., L.P. | Broadband telecommunications system |
US6002689A (en) | 1996-11-22 | 1999-12-14 | Sprint Communications Co. L.P. | System and method for interfacing a local communication device |
EP0888009A1 (en) * | 1996-12-12 | 1998-12-30 | Sony Corporation | Device and method for encoding image data, and image data transmission method |
EP0888009A4 (en) * | 1996-12-12 | 2003-05-28 | Sony Corp | Device and method for encoding image data, and image data transmission method |
US6504850B1 (en) * | 1997-01-21 | 2003-01-07 | Sony Corporation | Encoded signal transmission method and encoded signal transmission apparatus |
US6084910A (en) * | 1997-01-31 | 2000-07-04 | Hughes Electronics Corporation | Statistical multiplexer for video signals |
US6005620A (en) * | 1997-01-31 | 1999-12-21 | Hughes Electronics Corporation | Statistical multiplexer for live and pre-compressed video |
US6188436B1 (en) | 1997-01-31 | 2001-02-13 | Hughes Electronics Corporation | Video broadcast system with video data shifting |
US6097435A (en) * | 1997-01-31 | 2000-08-01 | Hughes Electronics Corporation | Video system with selectable bit rate reduction |
US6091455A (en) * | 1997-01-31 | 2000-07-18 | Hughes Electronics Corporation | Statistical multiplexer for recording video |
US6078958A (en) * | 1997-01-31 | 2000-06-20 | Hughes Electronics Corporation | System for allocating available bandwidth of a concentrated media output |
US6404776B1 (en) * | 1997-03-13 | 2002-06-11 | 8 × 8, Inc. | Data processor having controlled scalable input data source and method thereof |
US6052384A (en) * | 1997-03-21 | 2000-04-18 | Scientific-Atlanta, Inc. | Using a receiver model to multiplex variable-rate bit streams having timing constraints |
US20010022789A1 (en) * | 1997-03-21 | 2001-09-20 | Scientific-Atlanta, Inc. | Using a receiver model to multiplex variable-rate bit streams having timing constraints |
US6570888B1 (en) | 1997-03-21 | 2003-05-27 | Scientific-Atlanta, Inc. | Using a receiver model to multiplex variable-rate bit streams having timing constraints |
US6418122B1 (en) * | 1997-03-21 | 2002-07-09 | Scientific-Atlanta, Inc. | Method and apparatus for assuring sufficient bandwidth of a statistical multiplexer |
US6516002B1 (en) * | 1997-03-21 | 2003-02-04 | Scientific-Atlanta, Inc. | Apparatus for using a receiver model to multiplex variable-rate bit streams having timing constraints |
US6438139B1 (en) * | 1997-03-21 | 2002-08-20 | Scientific-Atlanta, Inc. | Method and apparatus for using a receiver model to multiplex variable-rate bit streams having timing constraints |
US7009997B2 (en) * | 1997-03-21 | 2006-03-07 | Scientific-Atlanta, Inc. | Using a receiver model to multiplex variable-rate bit streams having timing constraints |
US6067299A (en) | 1997-04-16 | 2000-05-23 | Sprint Communications Company, L.P. | Communications system for providing ATM connections and echo cancellation |
US5996013A (en) * | 1997-04-30 | 1999-11-30 | International Business Machines Corporation | Method and apparatus for resource allocation with guarantees |
US6137800A (en) | 1997-05-09 | 2000-10-24 | Sprint Communications Company, L. P. | System and method for connecting a call |
US6704327B1 (en) | 1997-05-09 | 2004-03-09 | Sprint Communications Company, L.P. | System and method for connecting a call |
US6178170B1 (en) | 1997-05-13 | 2001-01-23 | Sprint Communications Company, L. P. | System and method for transporting a call |
US6137779A (en) * | 1997-05-22 | 2000-10-24 | Integrated Device Technology, Inc. | Transmission rate calculation scheme using table-lookup |
US20070143784A1 (en) * | 1997-06-11 | 2007-06-21 | Tatsuya Kubota | Data multiplexing device, program distribution system, program transmission system, pay broadcast system, program transmission method, conditional access system, and data reception device |
US7769053B2 (en) | 1997-06-11 | 2010-08-03 | Sony Corporation | Data multiplexing device, program distribution system, program transmission system, pay broadcast system, program transmission method, conditional access system, and data reception device |
US7113523B1 (en) * | 1997-06-11 | 2006-09-26 | Sony Corporation | Data multiplexing device, program distribution system, program transmission system, pay broadcast system, program transmission method, conditional access system, and data reception device |
US20040196907A1 (en) * | 1997-07-01 | 2004-10-07 | Sony Corporation | Device and method for controlling image encoding, encoding system, transmission system and broadcast system |
EP0928115A1 (en) * | 1997-07-01 | 1999-07-07 | Sony Corporation | Device and method for controlling image encoding, encoding system, transmission system and broadcast system |
EP0928115A4 (en) * | 1997-07-01 | 2005-09-14 | Sony Corp | Device and method for controlling image encoding, encoding system, transmission system and broadcast system |
US7035334B2 (en) | 1997-07-01 | 2006-04-25 | Sony Corporation | Device and method for controlling image encoding, encoding system, transmission system and broadcast system |
US6407998B1 (en) | 1997-10-02 | 2002-06-18 | Thomson Licensing S.A. | Multimedia decoder for prioritized bi-directional communication in a broadcast system |
US6418169B1 (en) | 1997-10-16 | 2002-07-09 | Thomson Licensing S.A. | System for prioritizing bi-directional broadcast data |
US6240094B1 (en) * | 1997-12-22 | 2001-05-29 | Bell Atlantic Network Services, Inc. | Statistical time division multiplexer for a wireless asymmetric local loop communication system |
US6192032B1 (en) | 1998-01-02 | 2001-02-20 | International Business Machines Corporation | Rate attenuation systems, methods and computer program products for reducing low priority video frame packets transmitted over a network |
US6922409B1 (en) | 1998-02-20 | 2005-07-26 | Sprint Communications Company L.P. | System and method for allocating bandwidth for a call |
US6563918B1 (en) | 1998-02-20 | 2003-05-13 | Sprint Communications Company, LP | Telecommunications system architecture for connecting a call |
US7079534B1 (en) | 1998-02-20 | 2006-07-18 | Sprint Communications Company L.P. | System and method for allocating bandwidth for a call |
US6470019B1 (en) | 1998-02-20 | 2002-10-22 | Sprint Communications Company L.P. | System and method for treating a call for call processing |
US6483837B1 (en) | 1998-02-20 | 2002-11-19 | Sprint Communications Company L.P. | System and method for connecting a call with an interworking system |
US6574222B1 (en) | 1998-02-20 | 2003-06-03 | Sprint Communications Company, L.P. | System and method for allocating bandwidth for a call |
US6351521B1 (en) | 1998-04-10 | 2002-02-26 | Sprint Communications Company L.P. | Communications test system |
US6249519B1 (en) * | 1998-04-16 | 2001-06-19 | Mantra Communications | Flow based circuit steering in ATM networks |
US20060062293A1 (en) * | 1998-06-16 | 2006-03-23 | Kaye James E | Pre-processing of bit rate allocation in a multi-channel video encoder |
US20010014121A1 (en) * | 1998-06-16 | 2001-08-16 | General Instrument Corporation | Pre-processing of bit rate allocation in a multi-channel video encoder |
US6259733B1 (en) | 1998-06-16 | 2001-07-10 | General Instrument Corporation | Pre-processing of bit rate allocation in a multi-channel video encoder |
US7016407B2 (en) | 1998-06-16 | 2006-03-21 | General Instrument Corporation | Pre-processing of bit rate allocation in a multi-channel video encoder |
US6549515B1 (en) * | 1998-07-12 | 2003-04-15 | Eci Telecom Ltd. | Method for managing varying traffic loads in a telecommunication network |
US6959451B1 (en) * | 1998-08-21 | 2005-10-25 | Intel Corporation | Transmission communications management |
WO2000016559A1 (en) * | 1998-09-10 | 2000-03-23 | Snell & Wilcox Limited | Image encoding |
US6886040B1 (en) * | 1998-10-28 | 2005-04-26 | Cisco Technology, Inc. | Codec-independent technique for modulating bandwidth in packet network |
US6421720B2 (en) * | 1998-10-28 | 2002-07-16 | Cisco Technology, Inc. | Codec-independent technique for modulating bandwidth in packet network |
US20040056783A1 (en) * | 1998-12-11 | 2004-03-25 | Fallon James J. | Content independent data compression method and system |
US10033405B2 (en) | 1998-12-11 | 2018-07-24 | Realtime Data Llc | Data compression systems and method |
US8643513B2 (en) | 1998-12-11 | 2014-02-04 | Realtime Data Llc | Data compression systems and methods |
US8502707B2 (en) | 1998-12-11 | 2013-08-06 | Realtime Data, Llc | Data compression systems and methods |
US8933825B2 (en) | 1998-12-11 | 2015-01-13 | Realtime Data Llc | Data compression systems and methods |
US7352300B2 (en) | 1998-12-11 | 2008-04-01 | Realtime Data Llc | Data compression systems and methods |
US7161506B2 (en) | 1998-12-11 | 2007-01-09 | Realtime Data Llc | Systems and methods for data compression such as content dependent data compression |
US9054728B2 (en) | 1998-12-11 | 2015-06-09 | Realtime Data, Llc | Data compression systems and methods |
US7378992B2 (en) | 1998-12-11 | 2008-05-27 | Realtime Data Llc | Content independent data compression method and system |
US7358867B2 (en) | 1998-12-11 | 2008-04-15 | Realtime Data Llc | Content independent data compression method and system |
US7714747B2 (en) | 1998-12-11 | 2010-05-11 | Realtime Data Llc | Data compression systems and methods |
US8717203B2 (en) | 1998-12-11 | 2014-05-06 | Realtime Data, Llc | Data compression systems and methods |
US6754241B1 (en) * | 1999-01-06 | 2004-06-22 | Sarnoff Corporation | Computer system for statistical multiplexing of bitstreams |
WO2000041397A1 (en) * | 1999-01-06 | 2000-07-13 | Sarnoff Corporation | Computer system for statistical multiplexing of bitstreams |
US6665872B1 (en) * | 1999-01-06 | 2003-12-16 | Sarnoff Corporation | Latency-based statistical multiplexing |
WO2000041395A1 (en) * | 1999-01-06 | 2000-07-13 | Sarnoff Corporation | Latency-based statistical multiplexing |
US6704281B1 (en) * | 1999-01-15 | 2004-03-09 | Nokia Mobile Phones Ltd. | Bit-rate control in a multimedia device |
US6490298B1 (en) | 1999-02-26 | 2002-12-03 | Harmonic Inc. | Apparatus and methods of multiplexing data to a communication channel |
US7822042B2 (en) | 1999-03-10 | 2010-10-26 | Juniper Networks, Inc. | Statistic multiplex transmission system |
US20060268889A1 (en) * | 1999-03-10 | 2006-11-30 | Juniper Networks, Inc. | Statistic multiplex transmission system |
US7103048B1 (en) * | 1999-03-10 | 2006-09-05 | Juniper Networks, Inc. | Statistic multiplex transmission system |
US20040073746A1 (en) * | 1999-03-11 | 2004-04-15 | Fallon James J. | System and methods for accelerated data storage and retrieval |
US7130913B2 (en) | 1999-03-11 | 2006-10-31 | Realtime Data Llc | System and methods for accelerated data storage and retrieval |
US7321937B2 (en) | 1999-03-11 | 2008-01-22 | Realtime Data Llc | System and methods for accelerated data storage and retrieval |
US8275897B2 (en) | 1999-03-11 | 2012-09-25 | Realtime Data, Llc | System and methods for accelerated data storage and retrieval |
US7415530B2 (en) | 1999-03-11 | 2008-08-19 | Realtime Data Llc | System and methods for accelerated data storage and retrieval |
US8504710B2 (en) | 1999-03-11 | 2013-08-06 | Realtime Data Llc | System and methods for accelerated data storage and retrieval |
US7395345B2 (en) | 1999-03-11 | 2008-07-01 | Realtime Data Llc | System and methods for accelerated data storage and retrieval |
US20060015650A1 (en) * | 1999-03-11 | 2006-01-19 | Fallon James J | System and methods for accelerated data storage and retrieval |
US20070067483A1 (en) * | 1999-03-11 | 2007-03-22 | Realtime Data Llc | System and methods for accelerated data storage and retrieval |
US8719438B2 (en) | 1999-03-11 | 2014-05-06 | Realtime Data Llc | System and methods for accelerated data storage and retrieval |
US10019458B2 (en) | 1999-03-11 | 2018-07-10 | Realtime Data Llc | System and methods for accelerated data storage and retrieval |
US8756332B2 (en) | 1999-03-11 | 2014-06-17 | Realtime Data Llc | System and methods for accelerated data storage and retrieval |
US9116908B2 (en) | 1999-03-11 | 2015-08-25 | Realtime Data Llc | System and methods for accelerated data storage and retrieval |
US6868081B1 (en) * | 1999-04-13 | 2005-03-15 | Sprint Communications Company L.P. | Method and apparatus for simultaneous multiline phone and data services over a single access facility |
US7103068B1 (en) | 1999-05-04 | 2006-09-05 | Sprint Communication Company L.P. | System and method for configuring bandwidth transmission rates for call connections |
US6594271B1 (en) * | 1999-07-19 | 2003-07-15 | General Instruments Corporation | Implementation of opportunistic data on a statistical multiplexing encoder |
US6781956B1 (en) | 1999-09-17 | 2004-08-24 | Cisco Technology, Inc. | System and method for prioritizing packetized data from a distributed control environment for transmission through a high bandwidth link |
US7489636B1 (en) | 1999-09-17 | 2009-02-10 | Cisco Technology, Inc. | System and method for prioritizing packetized data from distributed control environment for transmission through a high bandwidth link |
US7564873B1 (en) * | 1999-12-10 | 2009-07-21 | Cox Communications, Inc. | Method and apparatus for providing in-band messaging within a video on demand environment |
US20020024967A1 (en) * | 1999-12-14 | 2002-02-28 | Zaun David Brian | Dynamic configuration of input filtering parameters for an MPEG re-multiplexer |
US20050122985A1 (en) * | 1999-12-30 | 2005-06-09 | Cisco Technology, Inc. | Method and apparatus for throttling audio packets according to gateway processing capacity |
US7567576B2 (en) | 1999-12-30 | 2009-07-28 | Cisco Technology, Inc. | Method and apparatus for throttling audio packets according to gateway processing capacity |
US8090936B2 (en) | 2000-02-03 | 2012-01-03 | Realtime Data, Llc | Systems and methods for accelerated loading of operating systems and application programs |
US7181608B2 (en) | 2000-02-03 | 2007-02-20 | Realtime Data Llc | Systems and methods for accelerated loading of operating systems and application programs |
US9792128B2 (en) | 2000-02-03 | 2017-10-17 | Realtime Data, Llc | System and method for electrical boot-device-reset signals |
US7376772B2 (en) | 2000-02-03 | 2008-05-20 | Realtime Data Llc | Data storewidth accelerator |
US8880862B2 (en) | 2000-02-03 | 2014-11-04 | Realtime Data, Llc | Systems and methods for accelerated loading of operating systems and application programs |
US20020069354A1 (en) * | 2000-02-03 | 2002-06-06 | Fallon James J. | Systems and methods for accelerated loading of operating systems and application programs |
US8112619B2 (en) | 2000-02-03 | 2012-02-07 | Realtime Data Llc | Systems and methods for accelerated loading of operating systems and application programs |
US20030048853A1 (en) * | 2000-02-15 | 2003-03-13 | Oh Taek Man | Multi-channel image encoding method and system |
US7050496B2 (en) * | 2000-02-15 | 2006-05-23 | 4Nsys Co., Ltd. | Multi-channel image encoding method and system |
WO2001078407A1 (en) * | 2000-04-07 | 2001-10-18 | Snell & Wilcox Limited | Multiplexing compressed signals |
US20090207910A1 (en) * | 2000-04-07 | 2009-08-20 | Knee Michael J | Multiplexing compressed signals |
US20030185252A1 (en) * | 2000-04-07 | 2003-10-02 | Knee Michael J. | Multiplexing compressed signals |
US6493388B1 (en) | 2000-04-19 | 2002-12-10 | General Instrument Corporation | Rate control and buffer protection for variable bit rate video programs over a constant rate channel |
US6643327B1 (en) | 2000-05-05 | 2003-11-04 | General Instrument Corporation | Statistical multiplexer and remultiplexer that accommodates changes in structure of group of pictures |
US6731605B1 (en) | 2000-06-19 | 2004-05-04 | Sharp Laboratories Of America, Inc. | Prioritized optimal server side bandwidth allocation in a multimedia session with push and pull sources |
US20020085584A1 (en) * | 2000-08-17 | 2002-07-04 | Motofumi Itawaki | Statistical multiplex system, statistical multiplex controller and method of statistical multiplex |
US7130310B2 (en) * | 2000-08-17 | 2006-10-31 | Sony Corporation | Statistical multiplex system, statistical multiplex controller and method of statistical multiplex |
US9141992B2 (en) | 2000-10-03 | 2015-09-22 | Realtime Data Llc | Data feed acceleration |
US8723701B2 (en) | 2000-10-03 | 2014-05-13 | Realtime Data Llc | Methods for encoding and decoding data |
US9667751B2 (en) | 2000-10-03 | 2017-05-30 | Realtime Data, Llc | Data feed acceleration |
US7400274B2 (en) | 2000-10-03 | 2008-07-15 | Realtime Data Llc | System and method for data feed acceleration and encryption |
US20070174209A1 (en) * | 2000-10-03 | 2007-07-26 | Realtime Data Llc | System and method for data feed acceleration and encryption |
US9967368B2 (en) | 2000-10-03 | 2018-05-08 | Realtime Data Llc | Systems and methods for data block decompression |
US8692695B2 (en) | 2000-10-03 | 2014-04-08 | Realtime Data, Llc | Methods for encoding and decoding data |
US7417568B2 (en) | 2000-10-03 | 2008-08-26 | Realtime Data Llc | System and method for data feed acceleration and encryption |
US8717204B2 (en) | 2000-10-03 | 2014-05-06 | Realtime Data Llc | Methods for encoding and decoding data |
US10284225B2 (en) | 2000-10-03 | 2019-05-07 | Realtime Data, Llc | Systems and methods for data compression |
US8742958B2 (en) | 2000-10-03 | 2014-06-03 | Realtime Data Llc | Methods for encoding and decoding data |
US9859919B2 (en) | 2000-10-03 | 2018-01-02 | Realtime Data Llc | System and method for data compression |
US10419021B2 (en) | 2000-10-03 | 2019-09-17 | Realtime Data, Llc | Systems and methods of data compression |
US7777651B2 (en) | 2000-10-03 | 2010-08-17 | Realtime Data Llc | System and method for data feed acceleration and encryption |
US9143546B2 (en) * | 2000-10-03 | 2015-09-22 | Realtime Data Llc | System and method for data feed acceleration and encryption |
US20020104058A1 (en) * | 2000-12-06 | 2002-08-01 | Yigal Rappaport | Packet switched network having error correction capabilities of variable size data packets and a method thereof |
US6594316B2 (en) | 2000-12-12 | 2003-07-15 | Scientific-Atlanta, Inc. | Method and apparatus for adaptive bit rate control in an asynchronized encoding system |
US6987728B2 (en) | 2001-01-23 | 2006-01-17 | Sharp Laboratories Of America, Inc. | Bandwidth allocation system |
US20020191692A1 (en) * | 2001-02-13 | 2002-12-19 | Realtime Data, Llc | Bandwidth sensitive data compression and decompression |
US10212417B2 (en) | 2001-02-13 | 2019-02-19 | Realtime Adaptive Streaming Llc | Asymmetric data decompression systems |
US9769477B2 (en) | 2001-02-13 | 2017-09-19 | Realtime Adaptive Streaming, LLC | Video data compression systems |
US8867610B2 (en) | 2001-02-13 | 2014-10-21 | Realtime Data Llc | System and methods for video and audio data distribution |
US8929442B2 (en) | 2001-02-13 | 2015-01-06 | Realtime Data, Llc | System and methods for video and audio data distribution |
US8054879B2 (en) | 2001-02-13 | 2011-11-08 | Realtime Data Llc | Bandwidth sensitive data compression and decompression |
US9762907B2 (en) | 2001-02-13 | 2017-09-12 | Realtime Adaptive Streaming, LLC | System and methods for video and audio data distribution |
US8073047B2 (en) | 2001-02-13 | 2011-12-06 | Realtime Data, Llc | Bandwidth sensitive data compression and decompression |
US8934535B2 (en) | 2001-02-13 | 2015-01-13 | Realtime Data Llc | Systems and methods for video and audio data storage and distribution |
US8553759B2 (en) | 2001-02-13 | 2013-10-08 | Realtime Data, Llc | Bandwidth sensitive data compression and decompression |
US7386046B2 (en) | 2001-02-13 | 2008-06-10 | Realtime Data Llc | Bandwidth sensitive data compression and decompression |
US20040131116A1 (en) * | 2001-03-29 | 2004-07-08 | Akira Sugiyama | Image processing apparatus, image processing method, image processing program, and recording medium |
US7437285B2 (en) * | 2001-05-15 | 2008-10-14 | Kddi Corporation | Adaptive media encoding and decoding equipment |
US20020173954A1 (en) * | 2001-05-15 | 2002-11-21 | Kddi Corporation | Adaptive media encoding and decoding equipment |
US6937619B1 (en) * | 2001-05-29 | 2005-08-30 | Bigband Networks, Inc. | Method and system for comparison-based prioritized bit rate conversion |
US7395321B1 (en) | 2001-05-29 | 2008-07-01 | Bigband Networks, Inc. | Method and system for prioritized bit rate conversion |
US7058087B1 (en) * | 2001-05-29 | 2006-06-06 | Bigband Networks, Inc. | Method and system for prioritized bit rate conversion |
US7072393B2 (en) | 2001-06-25 | 2006-07-04 | International Business Machines Corporation | Multiple parallel encoders and statistical analysis thereof for encoding a video sequence |
US20030007516A1 (en) * | 2001-07-06 | 2003-01-09 | Yuri Abramov | System and method for the application of a statistical multiplexing algorithm for video encoding |
US7385970B1 (en) * | 2001-12-07 | 2008-06-10 | Redback Networks, Inc. | Method and apparatus for balancing bandwidth among multiple ports of a network element |
US7301906B2 (en) | 2001-12-17 | 2007-11-27 | Lsi Corporation | Methods and structures for improved buffer management and dynamic adaption of flow control status in high-speed communication networks |
US7376159B1 (en) * | 2002-01-03 | 2008-05-20 | The Directv Group, Inc. | Exploitation of null packets in packetized digital television systems |
US7848364B2 (en) | 2002-01-03 | 2010-12-07 | The Directv Group, Inc. | Exploitation of null packets in packetized digital television systems |
US20080198876A1 (en) * | 2002-01-03 | 2008-08-21 | The Directv Group, Inc. | Exploitation of null packets in packetized digital television systems |
US20030156639A1 (en) * | 2002-02-19 | 2003-08-21 | Jui Liang | Frame rate control system and method |
EP1376383A2 (en) | 2002-03-23 | 2004-01-02 | Uwe Noll | Method for processing inputs and outputs data for statistical analysis and method for purging redundancies |
EP1376383A3 (en) * | 2002-03-23 | 2005-05-25 | Uwe Noll | Method for processing inputs and outputs data for statistical analysis and method for purging redundancies |
US7936814B2 (en) * | 2002-03-28 | 2011-05-03 | International Business Machines Corporation | Cascaded output for an encoder system using multiple encoders |
US20030185297A1 (en) * | 2002-03-28 | 2003-10-02 | International Business Machines Corporation | Cascaded output for an encoder system using multiple encoders |
US7286473B1 (en) | 2002-07-10 | 2007-10-23 | The Directv Group, Inc. | Null packet replacement with bi-level scheduling |
US20090119736A1 (en) * | 2002-12-10 | 2009-05-07 | Onlive, Inc. | System and method for compressing streaming interactive video |
US8893207B2 (en) * | 2002-12-10 | 2014-11-18 | Ol2, Inc. | System and method for compressing streaming interactive video |
US7352809B2 (en) | 2003-02-21 | 2008-04-01 | Polycom, Inc. | System and method for optimal transmission of a multitude of video pictures to one or more destinations |
US20040179591A1 (en) * | 2003-02-21 | 2004-09-16 | Telesuite Corporation | System and method for optimal transmission of a multitude of video pictures to one or more destinations |
WO2004077835A1 (en) * | 2003-02-21 | 2004-09-10 | Telesuit Corporation | System and method for transmission of a multitude of video sequences |
US20070255556A1 (en) * | 2003-04-30 | 2007-11-01 | Michener James A | Audio level control for compressed audio |
US7647221B2 (en) | 2003-04-30 | 2010-01-12 | The Directv Group, Inc. | Audio level control for compressed audio |
US7397774B1 (en) | 2003-05-23 | 2008-07-08 | The United States Of America As Represented By The Administrator Of The National Aeronautics And Space Administration | Downlink data multiplexer |
US20050117644A1 (en) * | 2003-07-04 | 2005-06-02 | Xavier Ducloux | Device and method for coding video data |
US7577196B2 (en) * | 2003-07-04 | 2009-08-18 | Thomson Licensing | Device and method for coding video data |
US7912226B1 (en) | 2003-09-12 | 2011-03-22 | The Directv Group, Inc. | Automatic measurement of audio presence and level by direct processing of an MPEG data stream |
WO2005032117A2 (en) * | 2003-09-24 | 2005-04-07 | Texas Instruments Incorporated | 8x8 transform and quantization |
WO2005032117A3 (en) * | 2003-09-24 | 2005-06-02 | Texas Instruments Inc | 8x8 transform and quantization |
US20050180354A1 (en) * | 2003-11-25 | 2005-08-18 | Samsung Electronics Co., Ltd. | Method for allocating subchannels in an OFDMA mobile communication system |
US7411924B2 (en) * | 2003-11-25 | 2008-08-12 | Samsung Electronics Co., Ltd | Method for allocating subchannels in an OFDMA mobile communication system |
US20050208949A1 (en) * | 2004-02-12 | 2005-09-22 | Chiueh Tzi-Cker | Centralized channel assignment and routing algorithms for multi-channel wireless mesh networks |
US7489631B2 (en) * | 2004-03-18 | 2009-02-10 | Veraz Networks Ltd. | Method and device for quality management in communication networks |
US20060245357A1 (en) * | 2004-03-18 | 2006-11-02 | Veraz Networks Ltd. | Method and device for quality management in communication networks |
US7526001B2 (en) | 2004-07-26 | 2009-04-28 | General Instrument Corporation | Statistical multiplexer having protective features from extraneous messages generated by redundant system elements |
US20060018254A1 (en) * | 2004-07-26 | 2006-01-26 | John Sanders | Statistical multiplexer having protective features from extraneous messages generated by redundant system elements |
US7778327B2 (en) * | 2005-02-08 | 2010-08-17 | Texas Instruments Incorporated | H.264 quantization |
US20060177142A1 (en) * | 2005-02-08 | 2006-08-10 | Minhua Zhou | H.264 quantization |
US8208580B2 (en) | 2005-03-02 | 2012-06-26 | Rohde & Schwarz Gmbh & Co. Kg | Apparatus, systems and methods for providing enhancements to ATSC networks using synchronous vestigial sideband (VSB) frame slicing |
US8675773B2 (en) | 2005-03-02 | 2014-03-18 | Rohde & Schwarz Gmbh & Co. Kg | Apparatus, systems and methods for providing enhancements to ATSC networks using synchronous vestigial sideband (VSB) frame slicing |
US20090193487A1 (en) * | 2005-03-02 | 2009-07-30 | Rohde & Schwarz Gmbh & Co. Kg | Apparatus, systems and methods for providing enhancements to atsc networks using synchronous vestigial sideband (vsb) frame slicing |
US20090225872A1 (en) * | 2005-03-02 | 2009-09-10 | Rohde & Schwarz Gmbh & Co. Kg | Apparatus, systems and methods for providing enhancements to atsc networks using synchronous vestigial sideband (vsb) frame slicing |
US20070036177A1 (en) * | 2005-08-12 | 2007-02-15 | Sarnoff Corporation | Method and apparatus for managing delivery of video over a digital subscriber line |
CN1968254B (en) * | 2005-11-09 | 2010-09-08 | 国际商业机器公司 | Method and system for determining whether to compress data transmitted over a network |
US8001277B2 (en) | 2005-11-09 | 2011-08-16 | International Business Machines Corporation | Determining, transmitting, and receiving performance information with respect to an operation performed locally and at remote nodes |
US7877517B2 (en) | 2005-11-09 | 2011-01-25 | International Business Machines Corporation | Determining whether to compress data transmitted over a network |
US20070104113A1 (en) * | 2005-11-09 | 2007-05-10 | Cataldo Mega | Determining whether to compress data transmitted over a network |
US20070104118A1 (en) * | 2005-11-09 | 2007-05-10 | International Business Machines Corporation | Determining, transmitting, and receiving performance information with respect to an operation performed locally and at remote nodes |
EP2312857A3 (en) * | 2005-12-02 | 2012-03-07 | QUALCOMM Incorporated | Time slicing techniques for variable data rate encoding |
US8451937B2 (en) | 2005-12-02 | 2013-05-28 | Qualcomm Incorporated | Time slicing techniques for variable data rate encoding |
US20110075638A1 (en) * | 2005-12-02 | 2011-03-31 | Qualcomm Incorporated | Time slicing techniques for variable data rate encoding |
DE102007001379A1 (en) * | 2007-01-09 | 2008-07-10 | Fraunhofer-Gesellschaft zur Förderung der angewandten Forschung e.V. | Concept for encoding a plurality of information signals for a common transmission in a time division multiplex |
US8149817B2 (en) | 2007-02-01 | 2012-04-03 | Rohde & Schwarz Gmbh & Co. Kg | Systems, apparatus, methods and computer program products for providing ATSC interoperability |
US20080211969A1 (en) * | 2007-02-01 | 2008-09-04 | Rohde & Schwarz Gmbh & Co. Kg | Systems, apparatus, methods and computer program products for providing atsc interoperability |
US8472483B2 (en) | 2007-02-01 | 2013-06-25 | Rohde & Schwarz Gmbh & Co. Kg | Systems, apparatus, methods and computer program products for providing ATSC interoperability |
US20090175356A1 (en) * | 2007-12-11 | 2009-07-09 | Rohde & Schwarz Gmbh & Co. Kg | Method and device for forming a common datastream according to the atsc standard |
US9800897B2 (en) | 2007-12-11 | 2017-10-24 | Rohde & Schwarz Gmbh & Co. Kg | Method and device for forming a common datastream according to the ATSC standard |
US8286216B2 (en) | 2007-12-12 | 2012-10-09 | Rohde & Schwarz Gmbh & Co. Kg | Method and system for transmitting data between a central radio station and at least one transmitter |
US20090158378A1 (en) * | 2007-12-12 | 2009-06-18 | Rohde & Schwarz Gmbh & Co. Kg | Method and system for transmitting data between a central radio station and at least one transmitter |
US20090193484A1 (en) * | 2008-01-03 | 2009-07-30 | Nec Laboratories America, Inc. | Adaptive scheduling of streaming video over wireless networks |
US8141120B2 (en) * | 2008-01-03 | 2012-03-20 | Nec Laboratories America, Inc. | Adaptive scheduling of streaming video over wireless networks |
US9456054B2 (en) | 2008-05-16 | 2016-09-27 | Palo Alto Research Center Incorporated | Controlling the spread of interests and content in a content centric network |
US10104041B2 (en) | 2008-05-16 | 2018-10-16 | Cisco Technology, Inc. | Controlling the spread of interests and content in a content centric network |
US8355458B2 (en) | 2008-06-25 | 2013-01-15 | Rohde & Schwarz Gmbh & Co. Kg | Apparatus, systems, methods and computer program products for producing a single frequency network for ATSC mobile / handheld services |
US8693507B2 (en) | 2008-06-25 | 2014-04-08 | Rohde & Schwarz Gmbh & Co. Kg | Apparatus, systems, methods and computer program products for producing a single frequency network for ATSC mobile / handheld services |
US20110188521A1 (en) * | 2008-06-25 | 2011-08-04 | Rohde & Schwarz Gmbh & Co. Kg | Apparatus, systems, methods and computer program products for producing a single frequency network for atsc mobile / handheld services |
US20090323729A1 (en) * | 2008-06-25 | 2009-12-31 | Rohde & Schwarz Gmbh & Co. Kg | Apparatus, systems, methods and computer program products for producing a single frequency network for atsc mobile / handheld services |
US8553619B2 (en) | 2008-07-04 | 2013-10-08 | Rohde & Schwarz Gmbh & Co. Kg | Method and a system for time synchronisation between a control centre and several transmitters |
US8532188B2 (en) * | 2008-10-02 | 2013-09-10 | Rohde & Schwarz Gmbh & Co. Kg | Methods and apparatus for generating a transport data stream with image data |
US20100085489A1 (en) * | 2008-10-02 | 2010-04-08 | Rohde & Schwarz Gmbh & Co. Kg | Methods and Apparatus for Generating a Transport Data Stream with Image Data |
US20100111109A1 (en) * | 2008-11-06 | 2010-05-06 | Rohde & Schwarz Gmbh & Co. Kg | Method and system for synchronized mapping of data packets in an atsc data stream |
US8774069B2 (en) | 2008-11-06 | 2014-07-08 | Rohde & Schwarz Gmbh & Co. Kg | Method and system for synchronized mapping of data packets in an ATSC data stream |
US8982745B2 (en) | 2009-03-21 | 2015-03-17 | Rohde & Schwarz Gmbh & Co. Kg | Method for improving the data rate of mobile/handheld data and the quality of channel estimation in an ATSC-M/H transport data stream |
US20100254449A1 (en) * | 2009-04-07 | 2010-10-07 | Rohde & Schwarz Gmbh & Co. Kg | Method and device for continuous adaptation of coding parameters to a variable user-data rate |
US8311096B2 (en) | 2009-04-07 | 2012-11-13 | Rohde & Schwarz Gmbh & Co. Kg | Method and device for continuous adaptation of coding parameters to a variable user-data rate |
US8387104B2 (en) | 2009-10-16 | 2013-02-26 | Rohde & Schwarz Gmbh & Co. Kg | Method and a device for the efficient transmission of program and service data for national and regional broadcast |
US20110099599A1 (en) * | 2009-10-16 | 2011-04-28 | c/o Rohde & Schwarz GmbH & Co. KG | Method and a device for the efficient transmission of program and service data for national and regional broadcast |
US9686194B2 (en) | 2009-10-21 | 2017-06-20 | Cisco Technology, Inc. | Adaptive multi-interface use for content networking |
US9078015B2 (en) | 2010-08-25 | 2015-07-07 | Cable Television Laboratories, Inc. | Transport of partially encrypted media |
US20120155554A1 (en) * | 2010-12-20 | 2012-06-21 | General Instrument Corporation | Svc-to-avc rewriter with open-loop statistal multplexer |
US9118939B2 (en) * | 2010-12-20 | 2015-08-25 | Arris Technology, Inc. | SVC-to-AVC rewriter with open-loop statistical multiplexer |
US9674561B2 (en) | 2010-12-20 | 2017-06-06 | Arris Enterprises, Inc. | SVC-to-AVC rewriter with open-loop statistal multplexer |
US8989021B2 (en) | 2011-01-20 | 2015-03-24 | Rohde & Schwarz Gmbh & Co. Kg | Universal broadband broadcasting |
US20140092854A1 (en) * | 2011-05-31 | 2014-04-03 | Nec Corporation | Wireless transmission device, wireless transmission system, and method for controlling wireless transmission device |
US9571226B2 (en) * | 2011-05-31 | 2017-02-14 | Nec Corporation | Wireless transmission device, wireless transmission system, and method for controlling wireless transmission device |
US9729120B1 (en) | 2011-07-13 | 2017-08-08 | The Directv Group, Inc. | System and method to monitor audio loudness and provide audio automatic gain control |
US9280546B2 (en) | 2012-10-31 | 2016-03-08 | Palo Alto Research Center Incorporated | System and method for accessing digital content using a location-independent name |
US9400800B2 (en) | 2012-11-19 | 2016-07-26 | Palo Alto Research Center Incorporated | Data transport by named content synchronization |
US10430839B2 (en) | 2012-12-12 | 2019-10-01 | Cisco Technology, Inc. | Distributed advertisement insertion in content-centric networks |
US20140184625A1 (en) * | 2012-12-31 | 2014-07-03 | Nvidia Corporation | Stutter buffer transfer techniques for display systems |
US10062142B2 (en) * | 2012-12-31 | 2018-08-28 | Nvidia Corporation | Stutter buffer transfer techniques for display systems |
US20150356043A1 (en) * | 2013-02-15 | 2015-12-10 | Audi Ag | Master bus device for a vehicle communication bus of a motor vehicle |
US9715471B2 (en) * | 2013-02-15 | 2017-07-25 | Audi Ag | Master bus device for a vehicle communication bus of a motor vehicle |
US9978025B2 (en) | 2013-03-20 | 2018-05-22 | Cisco Technology, Inc. | Ordered-element naming for name-based packet forwarding |
US9935791B2 (en) | 2013-05-20 | 2018-04-03 | Cisco Technology, Inc. | Method and system for name resolution across heterogeneous architectures |
US9444722B2 (en) | 2013-08-01 | 2016-09-13 | Palo Alto Research Center Incorporated | Method and apparatus for configuring routing paths in a custodian-based routing architecture |
US9407549B2 (en) | 2013-10-29 | 2016-08-02 | Palo Alto Research Center Incorporated | System and method for hash-based forwarding of packets with hierarchically structured variable-length identifiers |
US20150117253A1 (en) * | 2013-10-30 | 2015-04-30 | Palo Alto Research Center Incorporated | Interest messages with a payload for a named data network |
US9276840B2 (en) * | 2013-10-30 | 2016-03-01 | Palo Alto Research Center Incorporated | Interest messages with a payload for a named data network |
US9401864B2 (en) | 2013-10-31 | 2016-07-26 | Palo Alto Research Center Incorporated | Express header for packets with hierarchically structured variable-length identifiers |
US10101801B2 (en) | 2013-11-13 | 2018-10-16 | Cisco Technology, Inc. | Method and apparatus for prefetching content in a data stream |
US9311377B2 (en) | 2013-11-13 | 2016-04-12 | Palo Alto Research Center Incorporated | Method and apparatus for performing server handoff in a name-based content distribution system |
US10129365B2 (en) | 2013-11-13 | 2018-11-13 | Cisco Technology, Inc. | Method and apparatus for pre-fetching remote content based on static and dynamic recommendations |
US10089655B2 (en) | 2013-11-27 | 2018-10-02 | Cisco Technology, Inc. | Method and apparatus for scalable data broadcasting |
US9503358B2 (en) | 2013-12-05 | 2016-11-22 | Palo Alto Research Center Incorporated | Distance-based routing in an information-centric network |
US9379979B2 (en) | 2014-01-14 | 2016-06-28 | Palo Alto Research Center Incorporated | Method and apparatus for establishing a virtual interface for a set of mutual-listener devices |
US10172068B2 (en) | 2014-01-22 | 2019-01-01 | Cisco Technology, Inc. | Service-oriented routing in software-defined MANETs |
US10098051B2 (en) | 2014-01-22 | 2018-10-09 | Cisco Technology, Inc. | Gateways and routing in software-defined manets |
US9374304B2 (en) | 2014-01-24 | 2016-06-21 | Palo Alto Research Center Incorporated | End-to end route tracing over a named-data network |
US9954678B2 (en) | 2014-02-06 | 2018-04-24 | Cisco Technology, Inc. | Content-based transport security |
US9678998B2 (en) | 2014-02-28 | 2017-06-13 | Cisco Technology, Inc. | Content name resolution for information centric networking |
US10706029B2 (en) | 2014-02-28 | 2020-07-07 | Cisco Technology, Inc. | Content name resolution for information centric networking |
US10089651B2 (en) | 2014-03-03 | 2018-10-02 | Cisco Technology, Inc. | Method and apparatus for streaming advertisements in a scalable data broadcasting system |
US10445380B2 (en) | 2014-03-04 | 2019-10-15 | Cisco Technology, Inc. | System and method for direct storage access in a content-centric network |
US9836540B2 (en) | 2014-03-04 | 2017-12-05 | Cisco Technology, Inc. | System and method for direct storage access in a content-centric network |
US9626413B2 (en) | 2014-03-10 | 2017-04-18 | Cisco Systems, Inc. | System and method for ranking content popularity in a content-centric network |
US9473405B2 (en) | 2014-03-10 | 2016-10-18 | Palo Alto Research Center Incorporated | Concurrent hashes and sub-hashes on data streams |
US9391896B2 (en) | 2014-03-10 | 2016-07-12 | Palo Alto Research Center Incorporated | System and method for packet forwarding using a conjunctive normal form strategy in a content-centric network |
US9407432B2 (en) | 2014-03-19 | 2016-08-02 | Palo Alto Research Center Incorporated | System and method for efficient and secure distribution of digital content |
US9916601B2 (en) | 2014-03-21 | 2018-03-13 | Cisco Technology, Inc. | Marketplace for presenting advertisements in a scalable data broadcasting system |
US9363179B2 (en) | 2014-03-26 | 2016-06-07 | Palo Alto Research Center Incorporated | Multi-publisher routing protocol for named data networks |
US9363086B2 (en) | 2014-03-31 | 2016-06-07 | Palo Alto Research Center Incorporated | Aggregate signing of data in content centric networking |
US9716622B2 (en) | 2014-04-01 | 2017-07-25 | Cisco Technology, Inc. | System and method for dynamic name configuration in content-centric networks |
US9390289B2 (en) | 2014-04-07 | 2016-07-12 | Palo Alto Research Center Incorporated | Secure collection synchronization using matched network names |
US10075521B2 (en) | 2014-04-07 | 2018-09-11 | Cisco Technology, Inc. | Collection synchronization using equality matched network names |
US9451032B2 (en) | 2014-04-10 | 2016-09-20 | Palo Alto Research Center Incorporated | System and method for simple service discovery in content-centric networks |
US9992281B2 (en) | 2014-05-01 | 2018-06-05 | Cisco Technology, Inc. | Accountable content stores for information centric networks |
US10158656B2 (en) | 2014-05-22 | 2018-12-18 | Cisco Technology, Inc. | Method and apparatus for preventing insertion of malicious content at a named data network router |
US9609014B2 (en) | 2014-05-22 | 2017-03-28 | Cisco Systems, Inc. | Method and apparatus for preventing insertion of malicious content at a named data network router |
US9455835B2 (en) | 2014-05-23 | 2016-09-27 | Palo Alto Research Center Incorporated | System and method for circular link resolution with hash-based names in content-centric networks |
US9276751B2 (en) | 2014-05-28 | 2016-03-01 | Palo Alto Research Center Incorporated | System and method for circular link resolution with computable hash-based names in content-centric networks |
US9516144B2 (en) | 2014-06-19 | 2016-12-06 | Palo Alto Research Center Incorporated | Cut-through forwarding of CCNx message fragments with IP encapsulation |
US9537719B2 (en) | 2014-06-19 | 2017-01-03 | Palo Alto Research Center Incorporated | Method and apparatus for deploying a minimal-cost CCN topology |
US9426113B2 (en) | 2014-06-30 | 2016-08-23 | Palo Alto Research Center Incorporated | System and method for managing devices over a content centric network |
US9699198B2 (en) | 2014-07-07 | 2017-07-04 | Cisco Technology, Inc. | System and method for parallel secure content bootstrapping in content-centric networks |
US10237075B2 (en) | 2014-07-17 | 2019-03-19 | Cisco Technology, Inc. | Reconstructable content objects |
US9621354B2 (en) | 2014-07-17 | 2017-04-11 | Cisco Systems, Inc. | Reconstructable content objects |
US9959156B2 (en) | 2014-07-17 | 2018-05-01 | Cisco Technology, Inc. | Interest return control message |
US10305968B2 (en) | 2014-07-18 | 2019-05-28 | Cisco Technology, Inc. | Reputation-based strategy for forwarding and responding to interests over a content centric network |
US9729616B2 (en) | 2014-07-18 | 2017-08-08 | Cisco Technology, Inc. | Reputation-based strategy for forwarding and responding to interests over a content centric network |
US9590887B2 (en) | 2014-07-18 | 2017-03-07 | Cisco Systems, Inc. | Method and system for keeping interest alive in a content centric network |
US9929935B2 (en) | 2014-07-18 | 2018-03-27 | Cisco Technology, Inc. | Method and system for keeping interest alive in a content centric network |
US9535968B2 (en) | 2014-07-21 | 2017-01-03 | Palo Alto Research Center Incorporated | System for distributing nameless objects using self-certifying names |
US9882964B2 (en) | 2014-08-08 | 2018-01-30 | Cisco Technology, Inc. | Explicit strategy feedback in name-based forwarding |
US9729662B2 (en) | 2014-08-11 | 2017-08-08 | Cisco Technology, Inc. | Probabilistic lazy-forwarding technique without validation in a content centric network |
US9503365B2 (en) | 2014-08-11 | 2016-11-22 | Palo Alto Research Center Incorporated | Reputation-based instruction processing over an information centric network |
US9391777B2 (en) | 2014-08-15 | 2016-07-12 | Palo Alto Research Center Incorporated | System and method for performing key resolution over a content centric network |
US10367871B2 (en) | 2014-08-19 | 2019-07-30 | Cisco Technology, Inc. | System and method for all-in-one content stream in content-centric networks |
US9800637B2 (en) | 2014-08-19 | 2017-10-24 | Cisco Technology, Inc. | System and method for all-in-one content stream in content-centric networks |
US9467492B2 (en) | 2014-08-19 | 2016-10-11 | Palo Alto Research Center Incorporated | System and method for reconstructable all-in-one content stream |
US9497282B2 (en) | 2014-08-27 | 2016-11-15 | Palo Alto Research Center Incorporated | Network coding for content-centric network |
US10204013B2 (en) | 2014-09-03 | 2019-02-12 | Cisco Technology, Inc. | System and method for maintaining a distributed and fault-tolerant state over an information centric network |
US11314597B2 (en) | 2014-09-03 | 2022-04-26 | Cisco Technology, Inc. | System and method for maintaining a distributed and fault-tolerant state over an information centric network |
US9553812B2 (en) | 2014-09-09 | 2017-01-24 | Palo Alto Research Center Incorporated | Interest keep alives at intermediate routers in a CCN |
US10715634B2 (en) | 2014-10-23 | 2020-07-14 | Cisco Technology, Inc. | System and method for creating virtual interfaces based on network characteristics |
US10069933B2 (en) | 2014-10-23 | 2018-09-04 | Cisco Technology, Inc. | System and method for creating virtual interfaces based on network characteristics |
US9590948B2 (en) | 2014-12-15 | 2017-03-07 | Cisco Systems, Inc. | CCN routing using hardware-assisted hash tables |
US9536059B2 (en) | 2014-12-15 | 2017-01-03 | Palo Alto Research Center Incorporated | Method and system for verifying renamed content using manifests in a content centric network |
US10237189B2 (en) | 2014-12-16 | 2019-03-19 | Cisco Technology, Inc. | System and method for distance-based interest forwarding |
US9846881B2 (en) | 2014-12-19 | 2017-12-19 | Palo Alto Research Center Incorporated | Frugal user engagement help systems |
US10003520B2 (en) | 2014-12-22 | 2018-06-19 | Cisco Technology, Inc. | System and method for efficient name-based content routing using link-state information in information-centric networks |
US9473475B2 (en) | 2014-12-22 | 2016-10-18 | Palo Alto Research Center Incorporated | Low-cost authenticated signing delegation in content centric networking |
US10091012B2 (en) | 2014-12-24 | 2018-10-02 | Cisco Technology, Inc. | System and method for multi-source multicasting in content-centric networks |
US9660825B2 (en) | 2014-12-24 | 2017-05-23 | Cisco Technology, Inc. | System and method for multi-source multicasting in content-centric networks |
US9832291B2 (en) | 2015-01-12 | 2017-11-28 | Cisco Technology, Inc. | Auto-configurable transport stack |
US9946743B2 (en) | 2015-01-12 | 2018-04-17 | Cisco Technology, Inc. | Order encoded manifests in a content centric network |
US9602596B2 (en) | 2015-01-12 | 2017-03-21 | Cisco Systems, Inc. | Peer-to-peer sharing in a content centric network |
US10440161B2 (en) | 2015-01-12 | 2019-10-08 | Cisco Technology, Inc. | Auto-configurable transport stack |
US9954795B2 (en) | 2015-01-12 | 2018-04-24 | Cisco Technology, Inc. | Resource allocation using CCN manifests |
US9916457B2 (en) | 2015-01-12 | 2018-03-13 | Cisco Technology, Inc. | Decoupled name security binding for CCN objects |
US9462006B2 (en) | 2015-01-21 | 2016-10-04 | Palo Alto Research Center Incorporated | Network-layer application-specific trust model |
US9552493B2 (en) | 2015-02-03 | 2017-01-24 | Palo Alto Research Center Incorporated | Access control framework for information centric networking |
US10333840B2 (en) | 2015-02-06 | 2019-06-25 | Cisco Technology, Inc. | System and method for on-demand content exchange with adaptive naming in information-centric networks |
US10075401B2 (en) | 2015-03-18 | 2018-09-11 | Cisco Technology, Inc. | Pending interest table behavior |
US10116605B2 (en) | 2015-06-22 | 2018-10-30 | Cisco Technology, Inc. | Transport stack name scheme and identity management |
US10075402B2 (en) | 2015-06-24 | 2018-09-11 | Cisco Technology, Inc. | Flexible command and control in content centric networks |
US10701038B2 (en) | 2015-07-27 | 2020-06-30 | Cisco Technology, Inc. | Content negotiation in a content centric network |
US9986034B2 (en) | 2015-08-03 | 2018-05-29 | Cisco Technology, Inc. | Transferring state in content centric network stacks |
US10610144B2 (en) | 2015-08-19 | 2020-04-07 | Palo Alto Research Center Incorporated | Interactive remote patient monitoring and condition management intervention system |
US10419345B2 (en) | 2015-09-11 | 2019-09-17 | Cisco Technology, Inc. | Network named fragments in a content centric network |
US9832123B2 (en) | 2015-09-11 | 2017-11-28 | Cisco Technology, Inc. | Network named fragments in a content centric network |
US9888052B2 (en) | 2015-09-21 | 2018-02-06 | Imagine Communications Corp. | ABR allocation for statistical multiplexing |
US10652301B2 (en) | 2015-09-21 | 2020-05-12 | Imagine Communications Corp. | ABR allocation for statistical multiplexing |
US10355999B2 (en) | 2015-09-23 | 2019-07-16 | Cisco Technology, Inc. | Flow control with network named fragments |
US10313227B2 (en) | 2015-09-24 | 2019-06-04 | Cisco Technology, Inc. | System and method for eliminating undetected interest looping in information-centric networks |
US9977809B2 (en) | 2015-09-24 | 2018-05-22 | Cisco Technology, Inc. | Information and data framework in a content centric network |
US10454820B2 (en) | 2015-09-29 | 2019-10-22 | Cisco Technology, Inc. | System and method for stateless information-centric networking |
US10263965B2 (en) | 2015-10-16 | 2019-04-16 | Cisco Technology, Inc. | Encrypted CCNx |
US10129230B2 (en) | 2015-10-29 | 2018-11-13 | Cisco Technology, Inc. | System for key exchange in a content centric network |
US9794238B2 (en) | 2015-10-29 | 2017-10-17 | Cisco Technology, Inc. | System for key exchange in a content centric network |
US10009446B2 (en) | 2015-11-02 | 2018-06-26 | Cisco Technology, Inc. | Header compression for CCN messages using dictionary learning |
US9807205B2 (en) | 2015-11-02 | 2017-10-31 | Cisco Technology, Inc. | Header compression for CCN messages using dictionary |
US10021222B2 (en) | 2015-11-04 | 2018-07-10 | Cisco Technology, Inc. | Bit-aligned header compression for CCN messages using dictionary |
US10498861B2 (en) * | 2015-11-11 | 2019-12-03 | Canon Kabushiki Kaisha | Method and apparatus for serving and managing storage of data streams in a surveillance and/or monitoring system |
US10097521B2 (en) | 2015-11-20 | 2018-10-09 | Cisco Technology, Inc. | Transparent encryption in a content centric network |
US10681018B2 (en) | 2015-11-20 | 2020-06-09 | Cisco Technology, Inc. | Transparent encryption in a content centric network |
US9912776B2 (en) | 2015-12-02 | 2018-03-06 | Cisco Technology, Inc. | Explicit content deletion commands in a content centric network |
US10097346B2 (en) | 2015-12-09 | 2018-10-09 | Cisco Technology, Inc. | Key catalogs in a content centric network |
US10078062B2 (en) | 2015-12-15 | 2018-09-18 | Palo Alto Research Center Incorporated | Device health estimation by combining contextual information with sensor data |
US10581967B2 (en) | 2016-01-11 | 2020-03-03 | Cisco Technology, Inc. | Chandra-Toueg consensus in a content centric network |
US10257271B2 (en) | 2016-01-11 | 2019-04-09 | Cisco Technology, Inc. | Chandra-Toueg consensus in a content centric network |
US9949301B2 (en) | 2016-01-20 | 2018-04-17 | Palo Alto Research Center Incorporated | Methods for fast, secure and privacy-friendly internet connection discovery in wireless networks |
US10305864B2 (en) | 2016-01-25 | 2019-05-28 | Cisco Technology, Inc. | Method and system for interest encryption in a content centric network |
US10043016B2 (en) | 2016-02-29 | 2018-08-07 | Cisco Technology, Inc. | Method and system for name encryption agreement in a content centric network |
US10742596B2 (en) | 2016-03-04 | 2020-08-11 | Cisco Technology, Inc. | Method and system for reducing a collision probability of hash-based names using a publisher identifier |
US10038633B2 (en) | 2016-03-04 | 2018-07-31 | Cisco Technology, Inc. | Protocol to query for historical network information in a content centric network |
US10051071B2 (en) | 2016-03-04 | 2018-08-14 | Cisco Technology, Inc. | Method and system for collecting historical network information in a content centric network |
US10003507B2 (en) | 2016-03-04 | 2018-06-19 | Cisco Technology, Inc. | Transport session state protocol |
US10469378B2 (en) | 2016-03-04 | 2019-11-05 | Cisco Technology, Inc. | Protocol to query for historical network information in a content centric network |
US9832116B2 (en) | 2016-03-14 | 2017-11-28 | Cisco Technology, Inc. | Adjusting entries in a forwarding information base in a content centric network |
US10129368B2 (en) | 2016-03-14 | 2018-11-13 | Cisco Technology, Inc. | Adjusting entries in a forwarding information base in a content centric network |
US10212196B2 (en) | 2016-03-16 | 2019-02-19 | Cisco Technology, Inc. | Interface discovery and authentication in a name-based network |
US11436656B2 (en) | 2016-03-18 | 2022-09-06 | Palo Alto Research Center Incorporated | System and method for a real-time egocentric collaborative filter on large datasets |
US10067948B2 (en) | 2016-03-18 | 2018-09-04 | Cisco Technology, Inc. | Data deduping in content centric networking manifests |
US10091330B2 (en) | 2016-03-23 | 2018-10-02 | Cisco Technology, Inc. | Interest scheduling by an information and data framework in a content centric network |
US10033639B2 (en) | 2016-03-25 | 2018-07-24 | Cisco Technology, Inc. | System and method for routing packets in a content centric network using anonymous datagrams |
US10320760B2 (en) | 2016-04-01 | 2019-06-11 | Cisco Technology, Inc. | Method and system for mutating and caching content in a content centric network |
US10348865B2 (en) | 2016-04-04 | 2019-07-09 | Cisco Technology, Inc. | System and method for compressing content centric networking messages |
US9930146B2 (en) | 2016-04-04 | 2018-03-27 | Cisco Technology, Inc. | System and method for compressing content centric networking messages |
US10425503B2 (en) | 2016-04-07 | 2019-09-24 | Cisco Technology, Inc. | Shared pending interest table in a content centric network |
US10841212B2 (en) | 2016-04-11 | 2020-11-17 | Cisco Technology, Inc. | Method and system for routable prefix queries in a content centric network |
US10027578B2 (en) | 2016-04-11 | 2018-07-17 | Cisco Technology, Inc. | Method and system for routable prefix queries in a content centric network |
US10404450B2 (en) | 2016-05-02 | 2019-09-03 | Cisco Technology, Inc. | Schematized access control in a content centric network |
US10320675B2 (en) | 2016-05-04 | 2019-06-11 | Cisco Technology, Inc. | System and method for routing packets in a stateless content centric network |
US10547589B2 (en) | 2016-05-09 | 2020-01-28 | Cisco Technology, Inc. | System for implementing a small computer systems interface protocol over a content centric network |
US10063414B2 (en) | 2016-05-13 | 2018-08-28 | Cisco Technology, Inc. | Updating a transport stack in a content centric network |
US10404537B2 (en) | 2016-05-13 | 2019-09-03 | Cisco Technology, Inc. | Updating a transport stack in a content centric network |
US10084764B2 (en) | 2016-05-13 | 2018-09-25 | Cisco Technology, Inc. | System for a secure encryption proxy in a content centric network |
US10693852B2 (en) | 2016-05-13 | 2020-06-23 | Cisco Technology, Inc. | System for a secure encryption proxy in a content centric network |
US10103989B2 (en) | 2016-06-13 | 2018-10-16 | Cisco Technology, Inc. | Content object return messages in a content centric network |
US10305865B2 (en) | 2016-06-21 | 2019-05-28 | Cisco Technology, Inc. | Permutation-based content encryption with manifests in a content centric network |
US10581741B2 (en) | 2016-06-27 | 2020-03-03 | Cisco Technology, Inc. | Method and system for interest groups in a content centric network |
US10148572B2 (en) | 2016-06-27 | 2018-12-04 | Cisco Technology, Inc. | Method and system for interest groups in a content centric network |
US10009266B2 (en) | 2016-07-05 | 2018-06-26 | Cisco Technology, Inc. | Method and system for reference counted pending interest tables in a content centric network |
US9992097B2 (en) | 2016-07-11 | 2018-06-05 | Cisco Technology, Inc. | System and method for piggybacking routing information in interests in a content centric network |
US10122624B2 (en) | 2016-07-25 | 2018-11-06 | Cisco Technology, Inc. | System and method for ephemeral entries in a forwarding information base in a content centric network |
US10069729B2 (en) | 2016-08-08 | 2018-09-04 | Cisco Technology, Inc. | System and method for throttling traffic based on a forwarding information base in a content centric network |
US10956412B2 (en) | 2016-08-09 | 2021-03-23 | Cisco Technology, Inc. | Method and system for conjunctive normal form attribute matching in a content centric network |
US10033642B2 (en) | 2016-09-19 | 2018-07-24 | Cisco Technology, Inc. | System and method for making optimal routing decisions based on device-specific parameters in a content centric network |
US10897518B2 (en) | 2016-10-03 | 2021-01-19 | Cisco Technology, Inc. | Cache management on high availability routers in a content centric network |
US10212248B2 (en) | 2016-10-03 | 2019-02-19 | Cisco Technology, Inc. | Cache management on high availability routers in a content centric network |
US10447805B2 (en) | 2016-10-10 | 2019-10-15 | Cisco Technology, Inc. | Distributed consensus in a content centric network |
US10135948B2 (en) | 2016-10-31 | 2018-11-20 | Cisco Technology, Inc. | System and method for process migration in a content centric network |
US10721332B2 (en) | 2016-10-31 | 2020-07-21 | Cisco Technology, Inc. | System and method for process migration in a content centric network |
US10243851B2 (en) | 2016-11-21 | 2019-03-26 | Cisco Technology, Inc. | System and method for forwarder connection information in a content centric network |
US20190158856A1 (en) * | 2017-04-21 | 2019-05-23 | Zenimax Media Inc. | Systems and methods for rendering & pre-encoded load estimation based encoder hinting |
US11202084B2 (en) * | 2017-04-21 | 2021-12-14 | Zenimax Media Inc. | Systems and methods for rendering and pre-encoded load estimation based encoder hinting |
US11503313B2 (en) | 2017-04-21 | 2022-11-15 | Zenimax Media Inc. | Systems and methods for rendering and pre-encoded load estimation based encoder hinting |
US10608943B2 (en) * | 2017-10-27 | 2020-03-31 | Advanced Micro Devices, Inc. | Dynamic buffer management in multi-client token flow control routers |
GB2570324A (en) * | 2018-01-19 | 2019-07-24 | V Nova Int Ltd | Multi-codec processing and rate control |
US11153582B2 (en) * | 2019-01-17 | 2021-10-19 | Brightcove Inc. | Optimal multi-codec ABR ladder design |
Also Published As
Publication number | Publication date |
---|---|
DE69535803D1 (en) | 2008-09-18 |
JP3233408B2 (en) | 2001-11-26 |
AU2516695A (en) | 1995-12-18 |
JPH10500822A (en) | 1998-01-20 |
KR100382690B1 (en) | 2003-08-02 |
CA2190115C (en) | 2000-08-01 |
WO1995032565A1 (en) | 1995-11-30 |
MX9605759A (en) | 1998-10-31 |
EP0772927B1 (en) | 2008-08-06 |
EP0772927A1 (en) | 1997-05-14 |
EP1542383A1 (en) | 2005-06-15 |
CA2190115A1 (en) | 1995-11-30 |
EP0772927A4 (en) | 2002-08-28 |
KR970703662A (en) | 1997-07-03 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US5506844A (en) | Method for configuring a statistical multiplexer to dynamically allocate communication channel bandwidth | |
US5848266A (en) | Dynamic data rate adjustment to maintain throughput of a time varying signal | |
US5838686A (en) | System for dynamically allocating a scarce resource | |
US5881245A (en) | Method and apparatus for transmitting MPEG data at an adaptive data rate | |
EP0841820A2 (en) | Method and apparatus for encoding, multiplexing and transmitting a video signal | |
US6754241B1 (en) | Computer system for statistical multiplexing of bitstreams | |
US5909250A (en) | Adaptive video compression using variable quantization | |
US6438139B1 (en) | Method and apparatus for using a receiver model to multiplex variable-rate bit streams having timing constraints | |
US5809538A (en) | DRAM arbiter for video decoder | |
CA2038436C (en) | Atm transmission system with a variable transmission rate | |
US6563506B1 (en) | Method and apparatus for memory bandwith allocation and control in a video graphics system | |
EP0854652B1 (en) | Picture and sound decoding device, picture and sound encoding device, and information transmission system | |
EP0993201A2 (en) | Programmable filter for removing stuffing bits from an MPEG-2 bit-stream | |
US6084911A (en) | Transmission of coded and compressed voice and image data in fixed bit length data packets | |
EP1143736A2 (en) | Image encoding apparatus and method and image decoding apparatus and method | |
ZA200209222B (en) | Non-client specific on-demand data broadcast. | |
JPH0779432A (en) | Processor for coded video signal | |
WO2000041397A1 (en) | Computer system for statistical multiplexing of bitstreams | |
WO1999030452A1 (en) | A method of maintaining a minimum level of data quality while allowing bandwidth-dependent quality enhancement | |
KR19990068138A (en) | Digital signal multiplexing method and apparatus, digital signal transmission method and apparatus, digital signal recording method and apparatus and recording medium | |
EP0803163B1 (en) | A multiplexer system using constant bit rate encoders | |
JP2000057318A (en) | Moving image decoding method and device | |
EP2557786B1 (en) | Delay controlled decoding apparatus and method | |
US5933450A (en) | Complexity determining apparatus | |
MXPA96005759A (en) | Method to distribute dynamically communications channel bandwidth complete entreaplications |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: COMPRESSION LABS, INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:RAO, R. PADMANABHA;REEL/FRAME:007014/0129Effective date: 19940520 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
AS | Assignment |
Owner name: CHARGER INDUSTRIES, INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:COMPRESSION LABS, INCORPORATED;REEL/FRAME:008031/0278Effective date: 19960624 |
|
AS | Assignment |
Owner name: MAGNITUDE COMPRESSION SYSTEMS, INC., CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:CHARGER INDUSTRIES, INC.;REEL/FRAME:008031/0928Effective date: 19960625 |
|
FEPP | Fee payment procedure |
Free format text: PAYOR NUMBER ASSIGNED (ORIGINAL EVENT CODE: ASPN); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
FPAY | Fee payment |
Year of fee payment: 8 |
|
AS | Assignment |
Owner name: GENERAL INSTRUMENTS CORPORATION, PENNSYLVANIAFree format text: MERGER;ASSIGNOR:MAGNITUDE COMPRESSION SYSTEMS, INC.;REEL/FRAME:014468/0764Effective date: 20001228Owner name: GENERAL INSTRUMENT CORPORATION,PENNSYLVANIAFree format text: MERGER;ASSIGNOR:MAGNITUDE COMPRESSION SYSTEMS, INC.;REEL/FRAME:014468/0764Effective date: 20001228 |
|
FPAY | Fee payment |
Year of fee payment: 12 |
|
AS | Assignment |
Owner name: MOTOROLA MOBILITY LLC, ILLINOISFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:GENERAL INSTRUMENT HOLDINGS, INC.;REEL/FRAME:030866/0113Effective date: 20130528Owner name: GENERAL INSTRUMENT HOLDINGS, INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:GENERAL INSTRUMENT CORPORATION;REEL/FRAME:030764/0575Effective date: 20130415 |
|
AS | Assignment |
Owner name: GOOGLE TECHNOLOGY HOLDINGS LLC, CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MOTOROLA MOBILITY LLC;REEL/FRAME:034227/0095Effective date: 20141028 |
EP2406787A1 - Audio classification for information retrieval using sparse features - Google Patents
Audio classification for information retrieval using sparse featuresInfo
- Publication number
- EP2406787A1 EP2406787A1 EP10712602A EP10712602A EP2406787A1 EP 2406787 A1 EP2406787 A1 EP 2406787A1 EP 10712602 A EP10712602 A EP 10712602A EP 10712602 A EP10712602 A EP 10712602A EP 2406787 A1 EP2406787 A1 EP 2406787A1
- Authority
- EP
- European Patent Office
- Prior art keywords
- sparse
- auditory
- query
- audio
- image
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Granted
Links
- 239000013598 vector Substances 0.000 claims abstract description 84
- 238000000034 method Methods 0.000 claims abstract description 48
- 238000003860 storage Methods 0.000 claims abstract description 21
- 230000004044 response Effects 0.000 claims abstract description 17
- 238000004590 computer program Methods 0.000 claims abstract description 16
- 238000012549 training Methods 0.000 claims description 42
- 238000012545 processing Methods 0.000 claims description 14
- 210000003477 cochlea Anatomy 0.000 claims description 13
- 239000011159 matrix material Substances 0.000 claims description 12
- 238000013507 mapping Methods 0.000 claims description 6
- 230000006870 function Effects 0.000 description 31
- 241000282320 Panthera leo Species 0.000 description 11
- 238000004891 communication Methods 0.000 description 9
- 230000008569 process Effects 0.000 description 8
- 210000002768 hair cell Anatomy 0.000 description 5
- 238000005520 cutting process Methods 0.000 description 4
- 238000010586 diagram Methods 0.000 description 4
- 230000000694 effects Effects 0.000 description 4
- 238000013459 approach Methods 0.000 description 3
- 238000000605 extraction Methods 0.000 description 3
- 239000012530 fluid Substances 0.000 description 3
- 230000003993 interaction Effects 0.000 description 3
- 238000013139 quantization Methods 0.000 description 3
- 238000012706 support-vector machine Methods 0.000 description 3
- 241000282326 Felis catus Species 0.000 description 2
- 241001465754 Metazoa Species 0.000 description 2
- 230000006399 behavior Effects 0.000 description 2
- 239000000284 extract Substances 0.000 description 2
- 238000010304 firing Methods 0.000 description 2
- 230000003287 optical effect Effects 0.000 description 2
- 238000013515 script Methods 0.000 description 2
- 238000000926 separation method Methods 0.000 description 2
- 241000282324 Felis Species 0.000 description 1
- 241000124008 Mammalia Species 0.000 description 1
- 241000282376 Panthera tigris Species 0.000 description 1
- 230000006978 adaptation Effects 0.000 description 1
- 230000005540 biological transmission Effects 0.000 description 1
- 238000004422 calculation algorithm Methods 0.000 description 1
- 238000006243 chemical reaction Methods 0.000 description 1
- 238000007796 conventional method Methods 0.000 description 1
- 238000009826 distribution Methods 0.000 description 1
- 210000003027 ear inner Anatomy 0.000 description 1
- 210000000959 ear middle Anatomy 0.000 description 1
- 230000008451 emotion Effects 0.000 description 1
- 238000005516 engineering process Methods 0.000 description 1
- 238000000802 evaporation-induced self-assembly Methods 0.000 description 1
- 238000004880 explosion Methods 0.000 description 1
- 238000001914 filtration Methods 0.000 description 1
- 238000012804 iterative process Methods 0.000 description 1
- 238000002372 labelling Methods 0.000 description 1
- 239000004973 liquid crystal related substance Substances 0.000 description 1
- 238000010801 machine learning Methods 0.000 description 1
- 239000000203 mixture Substances 0.000 description 1
- 239000003607 modifier Substances 0.000 description 1
- 210000005036 nerve Anatomy 0.000 description 1
- 230000001537 neural effect Effects 0.000 description 1
- 238000005457 optimization Methods 0.000 description 1
- 230000002093 peripheral effect Effects 0.000 description 1
- 230000000644 propagated effect Effects 0.000 description 1
- 238000012552 review Methods 0.000 description 1
- 239000004065 semiconductor Substances 0.000 description 1
- 230000035945 sensitivity Effects 0.000 description 1
- 230000001953 sensory effect Effects 0.000 description 1
- 238000001228 spectrum Methods 0.000 description 1
- 239000000758 substrate Substances 0.000 description 1
- 230000002459 sustained effect Effects 0.000 description 1
- 238000012546 transfer Methods 0.000 description 1
- 230000009466 transformation Effects 0.000 description 1
- 230000000007 visual effect Effects 0.000 description 1
Classifications
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L25/00—Speech or voice analysis techniques not restricted to a single one of groups G10L15/00 - G10L21/00
- G10L25/48—Speech or voice analysis techniques not restricted to a single one of groups G10L15/00 - G10L21/00 specially adapted for particular use
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/60—Information retrieval; Database structures therefor; File system structures therefor of audio data
- G06F16/68—Retrieval characterised by using metadata, e.g. metadata not derived from the content or metadata generated manually
- G06F16/683—Retrieval characterised by using metadata, e.g. metadata not derived from the content or metadata generated manually using metadata automatically derived from the content
Definitions
- This specification relates to using audio features to classify audio for information retrieval.
- Digital audio data can be stored in one or more audio files.
- the audio files can include files with only audio content (e.g., music files) as well as audio files that are associated with, or part of, other files containing other content (e.g., video files with one or more audio tracks).
- the audio data can include speech and music as well as other categories of sound including natural sounds (e.g., rain, wind), human emotions (e.g., screams, laughter), animal vocalization (e.g., lion roar, purring cats), or other sounds (e.g., explosions, racing cars, ringing telephone).
- audio data can be represented with respect to intensity and time as an amplitude waveform or with respect to frequency and time as a spectrogram.
- audio data can be represented according to an acoustic model that models the auditory response of a biological ear, in particular, a cochlea.
- a cochlear model can be used to generate an auditory image representation of audio data as a function of time, frequency, and autocorrelation delay.
- generating an audio correlogram or a stabilized auditory image can include applying a cochlear model to audio data.
- a user can seek examples of particular sounds for inclusion in a project or a home movie.
- the user can describe the desired sounds with textual labels, for example, a name of a sound or description of that sound (e.g., "car sounds” or "roaring tiger").
- textual queries e.g., performing a search for audio content on the Internet
- conventional information retrieval of audio content using textual queries is difficult and often provides inaccurate results.
- This specification describes technologies relating to using audio features to classify and index sounds, and to retrieve sounds from text queries.
- one aspect of the subject matter described in this specification can be embodied in methods that include the actions of generating a collection of auditory images, each auditory image being generated from respective audio files according to an auditory model; extracting sparse features from each auditory image in the collection to generate a sparse feature vector representing the corresponding audio file; and ranking the audio files in response to a query including one or more words using the sparse feature vectors and a matching function relating sparse feature vectors to words in the query.
- Other embodiments of this aspect include corresponding systems, apparatus, and computer program products.
- Extracting sparse features from each auditory image includes dividing an auditory image into multiple sub-images; applying a feature extractor to each sub-image to generate corresponding local sparse codes; and combining the sparse codes from each sub-image to form a sparse vector for the auditory image.
- the matching function is generated using a training collection of annotated audio files, and where generating the matching function includes receiving the collection of annotated audio files, each annotated audio file having an auditory image and one or more keywords associated with the content of the audio file; generating a sparse feature vector for each audio file in the collection; and training the matching function using the sparse feature vectors and the one or more keywords for the collection of annotated audio files to determine a matrix of weights matching sparse features and keywords.
- the method further includes training the matching function using a passive-aggressive model using extracted audio features. The training learns a matrix W representing a mapping between spars features and keywords such that F w (q k , a k + ) > F w (q k , al) for all k.
- Ranking the audio files further includes scoring each query word relative to each sparse feature vector and combining the scores across words to rank audio files relative to the query. Scoring each query word includes calculating a dot product between a set of weights for that word and a representation of the audio file with a particular sparse feature vector.
- the auditory model is a cochlear model that mimics the behavior of a cochlea.
- the auditory image is a stabilized auditory image.
- the auditory image is a an auditory correllogram.
- another aspect of the subject matter described in this specification can be embodied in methods that include the actions of receiving a text query, the query including one or more query terms; retrieving a matching function that relates keywords and sparse feature vectors, each sparse feature vector being derived from a particular audio file; identifying one or more keywords from the query terms; identifying one or more audio files responsive to the query using the matching function; and presenting search results identifying the one or more audio files.
- Other embodiments of this aspect include corresponding systems, apparatus, and computer program products.
- FIG. 1 is flowchart showing an example method for using sparse audio features to retrieve sounds in response to text queries.
- FIG. 2 is a diagram illustrating an example audio image.
- FIG. 3 is a flowchart of an example method for sparse feature extraction.
- FIG. 4 is a diagram illustrating an example of applying box cutting to an audio image.
- FIG. 5 is a flowchart of an example method for training a system to match keywords and sparse features.
- FIG. 6 is a flowchart of an example method for searching for audio content.
- FIG. 7 illustrates an example search system.
- FIG. 8 illustrates an example architecture of a system.
- FIG. 1 is flowchart showing an example method 100 for using sparse audio features to retrieve sounds in response to text queries.
- the system receives 102 audio data.
- the audio data can be an audio file from a collection of audio files.
- Each audio file can include audio data and non-audio data.
- an audio file can include music, speech, or other audio content but can also represent an audio portion of a file that also include non-audio data (e.g., a video file that includes a video track and an audio track that have been mixed to a single file).
- the audio data is extracted or isolated in order to perform operations on the audio data (e.g., extracting the audio track from a file including multiple content types).
- the system generates 104 an auditory image from the received audio data.
- the auditory image is generated according to a particular auditory model, e.g., a cochlear model.
- the auditory image can be, for example, an audio correlogram or a stabilized auditory image.
- an auditory front end of the system receives as input an audio waveform corresponding to the received audio data.
- the auditory front end applies the cochlear model to the audio waveform to generate the auditory image.
- a cochlear model mimics the behavior of a cochlea, e.g., in a human inner ear.
- the cochlea is filled with a fluid that moves in response to the vibrations coming from the middle ear, generated by incoming sounds.
- hair cells in the cochlea move, converting the mechanical energy of the fluid vibrations to a pattern of nerve firings.
- the frequency response to the vibrations changes as a function of location as some hair cells are more sensitive to the vibrations of some frequencies than others.
- the result of this hair-cell arrangement is that the cochlea acts as a series of frequency filters whose pass band is a function of the position along the cochlea.
- Generating auditory images including a correlogram or stabilized auditory image involves generating a cochleagram from input audio data (e.g., an input audio waveform) based on a cochlear model and then generating the auditory image from the cochleagram.
- the cochleagram is a spectral-temporal representation of the audio data.
- Generating a cochleagram includes using a group of cochlear filters to split the input audio data into a number of frequency bands (e.g., using a cascade of low-pass filters or a parallel bank of bandpass filters).
- the group of filters represents the filtering resulting from the varied response of cochlea hair cells as a function of frequency or location.
- the output from each filter in the group of filters is a channel representing a particular frequency band. The energy in each channel is detected and used to adjust the gain for the audio data in the band, for implementing a simple model of auditory sensitivity adaptation, or for automatic gain control (AGC).
- AGC automatic gain control
- a half-wave rectifier is applied to the output frequency bands to provide a waveform for audio data in each channel that represents the neural firing rate at each position along a model cochlea.
- the half-wave rectifier models the hair cells in the cochlea that respond to movement in one direction.
- the resulting cochleagram provides a representation of the audio data as a function of frequency and time based on the cochlear model.
- the auditory image adds an additional dimension to the cochlear representation, by calculating the auto-correlation of each frequency channel, for a set of given points in time.
- the one-dimensional representation which is the output of the series of filters, is transformed into a two-dimensional representation, replacing the scalar output of every filter with an autocorrelation vector.
- FIG. 2 is a diagram illustrating an example audio image 200.
- audio image 200 is a stabilized auditory image generated from an input audio waveform.
- the audio image 200 represents audio data as a function of frequency, time, and autocorrelation delay.
- the x-axis represents autocorrelation delay while the y-axis represses frequency, and the image changes at each time step.
- the image is "stabilized" in the sense that the pattern is steady for a steady sound such as a sustained speech sound, a steady musical note, or a steady noise. The nature of the sound affects the image, and what the image "looks like" represents what the sound "sounds like".
- Audio features can represent various things that can be used to classify audio data. For example, a number of different features can be associated with audio data including time-domain and frequency-domain features (e.g., energy envelope and distribution, frequency content, harmonicity, and pitch). Other audio features common to speech and music classification include mel-frequency cepstral coefficients representing a short-term power spectrum of a sound.
- sparse audio features are sparse audio features. Sparse, as used in the present specification, means that most of the feature values for each given sound are zero, and the set of all features can be efficiently encoded by just listing the nonzero features.
- sparse audio features represent abstract local structural properties of the auditory image. An individual feature may have little useful interpretation, but a large set of them collectively can provide information about the nature of the sound. Extraction of the sparse features from an auditory image is described in greater detail below with respect to FIG. 3.
- a set of sparse features is computed on each time frame of the auditory image and aggregated, or collected, to indicate how many times each feature occurs throughout an entire sound, e.g., over an entire movie soundtrack.
- the result is referred to as a "bag of features" representation of the sound.
- the "bag of features" concept has also been used for representing images and other media types, and is analogous to the "bag of words" representation of text documents - a bag of words is a representation of how many times each word occurs in a document, irrespective of word order, and has been found to be a useful representation of text documents for indexing and retrieval.
- the system trains 108 a matching function that relates the audio sparse features to words in a query vocabulary.
- the system uses training data to train a function that scores the quality of a matching between two pairs of sparse vectors: one vector that represents sound data and another vector that represents a set of keywords (text query).
- the keywords with high scores for a sound are representative of what the audio data "sound like”.
- the set of features of one frame, or a "bag of features" representing a longer segment or a whole sound can be converted by the trained matching to what can be used as a "bag of words” representation of the sound, even though this bag of words does not come from words but from the sound, and may include numbers, e.g., positive and negative real numbers, rather than just integer word counts.
- a given combination of extracted sparse features can be matched to one or more keywords associated with that combination of sparse features. For example, if the content of the audio data includes a lion roar sound, some of the extracted sparse features will contribute to the matching to keywords associated with a lion roar (e.g., "lion" and "roar").
- the process can be repeated for the audio data for each of a collection of audio files such that for a given query each audio file can be given a score associated with the query.
- the system sorts, or ranks, the audio files according to those scores.
- the system can store the features for all the sounds, and a representation of the matching function, locally or distributed across a number of different storage media.
- the system can then access the features and matching representation during information retrieval, for example, in response to a search query as described below with respect to FIG. 6, and can return a number of top-ranked sound files.
- FIG. 3 is a flowchart of an example method 300 for sparse feature extraction.
- the system uses a collection of feature extractors (e.g., vector quantizers).
- Each feature extractor converts a sub-image of the auditory image to a one-of-N sparse code.
- N For N equal to 250, and 100 sub-images used, this results in a net sparse code with substantially 100 nonzero elements in a 25,000-dimensional sparse feature
- the system divides 302 the auditory image into multiple sub-images according to a predetermined pattern. This process is referred to as box cutting. In some implementations, the box cutting divides the auditory image into overlapping rectangles, as shown in FIG. 4.
- FIG. 4 is a diagram 400 illustrating an example of box cutting an audio image 402.
- the image is divided into a number of sub-images 404.
- the feature extractors are then applied to the content of each sub-image to extract sparse features.
- the rectangles have different sizes, in order to capture information at multiple scales in the auditory image.
- the system independently varies horizontal and vertical sizes. Additionally, the system varies the vertical position of the rectangles. The system rescales these rectangles into a fixed size, the same for all rectangles, regardless of their original sizes. Typically this results in a smaller size.
- the system optionally calculates horizontal and vertical marginals. The marginals are the average values for each column and row in the particular rectangle. The horizontal and vertical marginal for each individual rectangle are concatenated into a single real-valued vector. Alternatively, the system maintains each rectangle contents as a single vector, without reducing it to its marginals.
- the system applies 304 a feature extractor to each sub-image to generate a local sparse code for that sub-image.
- the system approximates each of the vectors that represent the rectangular areas in the auditory image with sparse codes.
- the system can use either vector quantization or matching pursuit to approximate the vectors.
- Vector quantization approximates a vector using a best matching vector from a codebook (the closest in the Euclidean sense). Once the best match has been selected, the representation can be encoded as a sparse code vector, with a length equal to the size of the codebook, and that includes all zeros, except for a single "one" at the index position of the chosen code word.
- Matching pursuit projects a vector (representing a rectangle) onto the codebook vectors, finds the largest projection, adds the signed scalar value of that projection to the sparse vector representation (in the appropriate index position), and subtracts the vector valued projection from the original vector, producing a residual vector. The process is then repeated until the magnitude of the largest projection becomes smaller than a given threshold.
- the system learns individual codebooks tailored to represent the rectangles at each specific position in the auditory image.
- the system learns the codebook from data using e.g. a k-means algorithm.
- the system collects the sparse codes from all the sub-images to make a large sparse code vector for the entire frame.
- each rectangle has been converted into a sparse code they are concatenated into one high-dimensional sparse vector, representing the entire auditory image.
- the system combines 306 the sparse vectors representing individual frames into a sparse vector representing the audio data of the audio file, e.g., by simply summing them up.
- the resulting vector is often less sparse than the vectors for individual frames, but is usually still sparse.
- FIG. 5 is a flowchart of an example method 500 for training a system to map sparse features to keywords. For convenience, the method 500 will be described with respect to a system that performs the method 500.
- the system receives 502 a collection of annotated audio.
- the collection of annotated audio files can include files that only include audio data and files that include audio data in addition to other content types (e.g., audio and video content).
- the collection of annotated audio files can include audio files received from a repository that includes one or more keyword tags for each audio file identifying the corresponding content of the audio files.
- the system selects audio files for inclusion in the collection of annotated audio files to be used in training from a repository of sound effects.
- the repository of sound effects can include clean audio data having only one audio object (e.g., a lion roar without other sounds).
- the system can use a repository of commercially or freely available sound effect to select audio files for inclusion in the collection of audio files.
- the selected audio files do not have labels identifying the content of the audio data. In such cases, the audio files can be manually labeled, for example, by having human listeners review each audio file and assign one or more labels for each audio file.
- the audio files are assigned hierarchical labels. For example, if an audio file is labeled with the keyword “cat”, additional keywords “feline,” “mammal,” and “animal” can be added. In some scenarios, the labels are limited to a predefined keyword vocabulary to provide labeling consistency.
- the system selects audio files for inclusion in the collection of annotated audio files to be used in training from a repository of user uploaded audio files. For example, the Freesound project (http://freesound.org) provides an online repository of publicly available labeled audio files. Individual users can upload audio files along with one or more labels identifying the content of each uploaded audio file.
- these audio files can each include more than one audio object combined into a complex audio scene (i.e., not just a single specific sound).
- the labels from the selected audio files can be processed to generate keywords associated with each audio file of the collection. For example, tags can be filtered to remove tags containing numbers and stopwords. The tags can also be stemmed to remove format suffixes (e.g., mp3, wav, afi), the tags can also spell checked to corrects spelling errors and all words can be stemmed (e.g., to remove plurals or other modifiers including, for example, "-s" and "-ing" suffixes from the tags).
- a vocabulary can be defined based on the unique keywords generated from the audio file labels.
- the labels of some audio files may be noisy. For example, in some cases some of the labels do not describe correctly the content of the audio file. For example, an audio file that contains a lion roar may be labeled as containing human singing.
- the system extracts 504 sparse features from each audio file.
- the sparse features can be extracted, for example, as described with respect to FIG. 3.
- For each audio file there are extracted sparse features and one or more keywords.
- the system trains 506 a matching function, such as a linear matrix mapping, to match sparse features with keywords. Given any sparse feature vector and any set of labels, the matching function computes a score that measures the quality of the association between the two. As a consequence of the training, the content of an audio file having a particular combination of sparse features generates a bag of words containing one or more keywords in the vocabulary, in which the words represent what the sound sounds like.
- a matching function such as a linear matrix mapping
- Different training techniques can be used to train a matching function.
- the matching function can be trained as a ranker using a classifier, as is well known in machine learning.
- Training techniques including "Passive-aggressive model for image retrieval" (PAMIR), Gaussian mixture models (GMMs), and Boosting or support vector machines (SVMs).
- GMMs are used to calculate a probability density function of audio documents.
- Training GMM models can use a maximum a posteriori (MAP) approach.
- MAP maximum a posteriori
- SVMs and Boosting seek a discriminant function that maximizes a margin between positive and negative examples while minimizing a number of misclassifications in training.
- PAMIR is a technique originally applied to content-based image retrieval from text queries.
- PAMIR is trained specifically to produce a good ranking of media documents (images or sounds) in response to queries, rather than for classification.
- PAMIR can be adapted for training content-based audio retrieval simply by using audio feature instead of image features; it works as follows:
- a query q can be represented by a vector of normalized inverse document frequency (tf-idf) weights for each keyword in a vocabulary T (e.g., in the vocabulary of keywords derived from labeled training data), where q e ⁇ f
- a document e.g., an audio file
- a query level score F w (q, a) can be defined as:
- a finite training set D train (e.g., the collection of audio files in the training set) can be represented as a set of triplets
- the PAMIR approach aims to identify W such that for all k, the score F w (q k , a k + ) should be greater than the score F w (q k ,a k ) by at least a margin of epsilon.
- the scores for documents relevant to a given query should be higher than scores for documents not relevant to the query.
- PA passive-aggressive
- PAMIR solves the following convex problem:
- the vocabulary of queries corresponds to the keywords identified to represent the audio files in the training data.
- the solution to the convex minimization problem uses training data of known associations to learn general associations between particular keywords and particular audio content according to an iterative process that leads to higher scores for the more likely matches between keywords and audio content, as represented by sparse features extracted from each audio file. This training process is used to generate a matching between sparse features and keywords.
- the system stores 508 the matching function between sparse features and keywords, in the form of the matrix W. This matching can then be used to identify keywords for un-annotated audio data as described above with respect to FIG. 1.
- FIG. 6 is a flowchart of an example method 600 for searching for audio content.
- the system receives 602 a query for audio content.
- the received query includes one or more query terms, for example "recording of lion roar”.
- the system identifies 604 audio files responsive to the query using the keywords associated with a collection of audio files.
- the query is matched to one or more keywords in the vocabulary. This can include removing query terms that do not have corresponding vocabulary entries. For example, the query "recording of lion roar" can be reduced to "lion roar".
- the matching keywords are used to form a query vector q, representing the query.
- the query vector q is sparse (most components have value zero) since only a few keywords of all possible keywords are present in any query.
- a score calculated with respect to the query vector and the sparse features of each audio file includes calculating a dot product between the query vector and the "bag of words" features Wa.
- the score indicates how closely a particular audio file matches the search query. The higher the score, the more likely the audio file is to be a good response to the search query. Thus, a ranked list of audio files can be identified in response to the query according to the scoring.
- the system can specify a top-k limit for search results based on rank for presentation.
- the system optionally uses a pre-computed index, indexed by query terms, to identify audio files that have a potential to be ranked high with respect to a query, by virtue of having a significant positive keyword score for at least one query term.
- the indexing identifies potentially acceptable query matches to be ranked, so that the system does not compute the ranking function for all audio files for a received query. For example, for the query "lion roar", an index could identify 1000 audio files that have a bit of "lion” in them, and identify a few thousand audio files that have some "roar” in them.
- the system can then use the ranking function to combine just those audio files to identify a ranked list instead of scoring all audio files.
- the system presents 606 search results identifying a ranked list of audio files.
- the search results can be presented as a set of links to resources corresponding to the audio files having content responsive to the query.
- the search results can be presented as a list, as icons, or as thumbnail auditory images.
- FIG. 7 illustrates an example search system 714 for providing search results relevant to submitted queries as can be implemented in an internet, an intranet, or another client and server environment.
- the search system 714 is an example of an information retrieval system in which the systems, components, and techniques described below can be implemented.
- a user 702 can interact with the search system 714 through a client device 704.
- the client 704 can be a computer coupled to the search system 714 through a local area network (LAN) or wide area network (WAN), e.g., the Internet.
- the search system 714 and the client device 704 can be one machine.
- a user can install a desktop search application on the client device 704.
- the client device 704 will generally include a random access memory (RAM) 706 and a processor 708.
- RAM random access memory
- a user 702 can submit a query 710 (e.g., a query for audio content) to a search engine 730 within a search system 714.
- a query 710 e.g., a query for audio content
- the query 710 is transmitted through a network to the search system 714.
- the search system 714 can be implemented as, for example, computer programs running on one or more computers in one or more locations that are coupled to each other through a network.
- the search system 714 includes an index database 722 and a search engine 730.
- the search system 714 responds to the query 710 by generating search results 728, which are transmitted through the network to the client device 704 in a form that can be presented to the user 702 (e.g., a search results web page to be displayed in a web browser running on the client device 704 that lists identifiers for audio resources responsive to the audio query).
- search results 728 are transmitted through the network to the client device 704 in a form that can be presented to the user 702 (e.g., a search results web page to be displayed in a web browser running on the client device 704 that lists identifiers for audio resources responsive to the audio query).
- the search engine 730 identifies resources that match the query 710.
- the search engine 730 will generally include an indexing engine 720 that indexes resources (e.g., audio data, web pages, images, or news articles on the Internet) found in a corpus (e.g., a collection or repository of content), an index database 722 that stores the index information, and a ranking engine 752 (or other software) to rank the resources that match the query 710.
- the indexing and ranking of the resources can be performed using conventional techniques in combination with the ranking techniques described above.
- the search engine 730 can transmit the search results 728 through the network to the client device 704, for example, for presentation to the user 702.
- the search system 714 may also maintain one or more user search histories based on the queries it receives from a user.
- a user search history stores a sequence of queries received from a user.
- User search histories may also include additional information such as which results were selected after a search was performed and how long each selected result was viewed.
- the search engine 730 can search for resources that match the query 710 using a vocabulary of keywords and an index of identifying potential matches as described above (e.g., as stored in an index database 722) or by accessing stored features for all the sounds or a representation of the matching function stored in the search system as described with respect to FIG. 1.
- the ranking engine 752 can rank audio data responsive to the query 710 based on the scores calculated when determining the audio data that match the query 710.
- FIG. 8 illustrates an example architecture of a system architecture 800.
- the architecture 800 includes one or more processors 802 (e.g., IBM PowerPC, Intel Pentium 4, etc.), one or more display devices 804 (e.g., CRT, LCD), graphics processing units 806 (e.g., NVIDIA GeForce, etc.), a network interface 808 (e.g., Ethernet, Fire Wire, USB, etc.), input devices 810 (e.g., keyboard, mouse, etc.), and one or more computer-readable mediums 812.
- processors 802 e.g., IBM PowerPC, Intel Pentium 4, etc.
- display devices 804 e.g., CRT, LCD
- graphics processing units 806 e.g., NVIDIA GeForce, etc.
- a network interface 808 e.g., Ethernet, Fire Wire, USB, etc.
- input devices 810 e.g., keyboard, mouse, etc.
- buses 814 e
- the term "computer-readable medium” refers to any medium that participates in providing instructions to a processor 802 for execution.
- the computer-readable medium 812 further includes an operating system 816 (e.g., Mac OS®, Windows®, Linux, etc.), a network communication module 818, a feature extractor 820, a keyword feature matching 822, and other applications 824.
- the operating system 816 can be multi-user, multiprocessing, multitasking, multithreading, real-time and the like.
- the operating system 816 performs basic tasks, including but not limited to: recognizing input from input devices 810; sending output to display devices 804; keeping track of files and directories on computer-readable mediums 812 (e.g., memory or a storage device); controlling peripheral devices (e.g., disk drives, printers, etc.); and managing traffic on the one or more buses 814.
- the network communications module 818 includes various components for establishing and maintaining network connections (e.g., software for implementing communication protocols, such as TCP/IP, HTTP, Ethernet, etc.).
- the feature extractor 820 provides various software components for performing the various functions for extracting sparse features from audio data as described with respect to FIGS. 3-4.
- the keyword feature matching 822 provides various software components for performing the various functions for training a model to associate sparse features with keywords and applying the model to received sparse features in order to identify matching keywords, as described with respect to FIGS. 1-5.
- the other application 824 can include an auditory image generator for generating auditory images from input audio files.
- Embodiments of the subject matter and the operations described in this specification can be implemented in digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them.
- Embodiments of the subject matter described in this specification can be implemented as one or more computer programs, i.e., one or more modules of computer program instructions, encoded on a computer storage media for execution by, or to control the operation of, data processing apparatus.
- the program instructions can be encoded on an artificially-generated propagated signal, e.g., a machine-generated electrical, optical, or electromagnetic signal, that is generated to encode information for transmission to suitable receiver apparatus for execution by a data processing apparatus.
- the computer storage medium can be, or be included in, a computer-readable storage device, a computer-readable storage substrate, a random or serial access memory array or device, or a combination of one or more of them.
- the operations described in this specification can be implemented as operations performed by a data processing apparatus on data stored on one or more computer- readable storage devices or received from other sources.
- data processing apparatus encompasses all kinds of apparatus, devices, and machines for processing data, including by way of example a programmable processor, a computer, a system on a chip, or combinations of them.
- the apparatus can include special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).
- the apparatus can also include, in addition to hardware, code that creates an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, a cross-platform runtime environment, e.g., a virtual machine, or a combination of one or more of them.
- code that creates an execution environment for the computer program in question e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, a cross-platform runtime environment, e.g., a virtual machine, or a combination of one or more of them.
- the apparatus and execution environment can realize various different computing model infrastructures, such as web services, distributed computing and grid computing infrastructures.
- a computer program (also known as a program, software, software application, script, or code) can be written in any form of programming language, including compiled or interpreted languages, declarative or procedural languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, object, or other unit suitable for use in a computing environment.
- a computer program may, but need not, correspond to a file in a file system.
- a program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub-programs, or portions of code).
- a computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
- the processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform functions by operating on input data and generating output.
- the processes and logic flows can also be performed by, and apparatus can also be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).
- processors suitable for the execution of a computer program include, by way of example, both general and special purpose microprocessors, and any one or more processors of any kind of digital computer.
- a processor will receive instructions and data from a read-only memory or a random access memory or both.
- the essential elements of a computer are a processor for performing or executing instructions and one or more memory devices for storing instructions and data.
- a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks.
- mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks.
- a computer need not have such devices.
- a computer can be embedded in another device, e.g., a mobile telephone, a personal digital assistant (PDA), a mobile audio or video player, a game console, a Global Positioning System (GPS) receiver, or a portable storage device (e.g., a universal serial bus (USB) flash drive), to name just a few.
- Devices suitable for storing computer program instructions and data include all forms of non-volatile memory, media and memory devices, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks; magneto-optical disks; and CD-ROM and DVD-ROM disks.
- processors and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
- a display device e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor
- a keyboard and a pointing device e.g., a mouse or a trackball, by which the user can provide input to the computer.
- a computer can interact with a user by sending documents to and receiving documents from a device that is used by the user; for example, by sending web pages to a web browser on a user's client device in response to requests received from the web browser.
- Embodiments of the subject matter described in this specification can be implemented in a computing system that includes a back-end component, e.g., as a data server, or that includes a middleware component, e.g., an application server, or that includes a front-end component, e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described in this specification, or any combination of one or more such back-end, middleware, or front-end components.
- the components of the system can be interconnected by any form or medium of digital data communication, e.g., a communication network.
- Examples of communication networks include a local area network (“LAN”) and a wide area network (“WAN”), an inter-network (e.g., the Internet), and peer-to-peer networks (e.g., ad hoc peer-to-peer networks).
- LAN local area network
- WAN wide area network
- inter-network e.g., the Internet
- peer-to-peer networks e.g., ad hoc peer-to-peer networks.
- the computing system can include clients and servers.
- a client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.
- a server transmits data (e.g., an HTML page) to a client device (e.g., for purposes of displaying data to and receiving user input from a user interacting with the client device).
- client device e.g., for purposes of displaying data to and receiving user input from a user interacting with the client device.
- Data generated at the client device e.g., a result of the user interaction
Abstract
Description
Claims
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US15939809P | 2009-03-11 | 2009-03-11 | |
PCT/US2010/027031 WO2010105089A1 (en) | 2009-03-11 | 2010-03-11 | Audio classification for information retrieval using sparse features |
Publications (2)
Publication Number | Publication Date |
---|---|
EP2406787A1 true EP2406787A1 (en) | 2012-01-18 |
EP2406787B1 EP2406787B1 (en) | 2014-05-14 |
Family
ID=42244984
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
EP10712602.1A Active EP2406787B1 (en) | 2009-03-11 | 2010-03-11 | Audio classification for information retrieval using sparse features |
Country Status (4)
Country | Link |
---|---|
US (1) | US8463719B2 (en) |
EP (1) | EP2406787B1 (en) |
CN (1) | CN102405495B (en) |
WO (1) | WO2010105089A1 (en) |
Families Citing this family (74)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8706276B2 (en) | 2009-10-09 | 2014-04-22 | The Trustees Of Columbia University In The City Of New York | Systems, methods, and media for identifying matching audio |
US8725766B2 (en) * | 2010-03-25 | 2014-05-13 | Rovi Technologies Corporation | Searching text and other types of content by using a frequency domain |
WO2011122522A1 (en) * | 2010-03-30 | 2011-10-06 | 日本電気株式会社 | Ambient expression selection system, ambient expression selection method, and program |
US8584197B2 (en) | 2010-11-12 | 2013-11-12 | Google Inc. | Media rights management using melody identification |
US8584198B2 (en) * | 2010-11-12 | 2013-11-12 | Google Inc. | Syndication including melody recognition and opt out |
US8589171B2 (en) | 2011-03-17 | 2013-11-19 | Remote Media, Llc | System and method for custom marking a media file for file matching |
US8478719B2 (en) | 2011-03-17 | 2013-07-02 | Remote Media LLC | System and method for media file synchronization |
US8688631B2 (en) | 2011-03-17 | 2014-04-01 | Alexander Savenok | System and method for media file synchronization |
US8756061B2 (en) | 2011-04-01 | 2014-06-17 | Sony Computer Entertainment Inc. | Speech syllable/vowel/phone boundary detection using auditory attention cues |
US9196028B2 (en) | 2011-09-23 | 2015-11-24 | Digimarc Corporation | Context-based smartphone sensor logic |
US8732191B2 (en) * | 2011-06-27 | 2014-05-20 | Oracle International Corporation | System and method for improving application connectivity in a clustered database environment |
US9558762B1 (en) * | 2011-07-03 | 2017-01-31 | Reality Analytics, Inc. | System and method for distinguishing source from unconstrained acoustic signals emitted thereby in context agnostic manner |
US8787454B1 (en) | 2011-07-13 | 2014-07-22 | Google Inc. | Method and apparatus for data compression using content-based features |
US8924345B2 (en) * | 2011-09-26 | 2014-12-30 | Adobe Systems Incorporated | Clustering and synchronizing content |
US9384272B2 (en) | 2011-10-05 | 2016-07-05 | The Trustees Of Columbia University In The City Of New York | Methods, systems, and media for identifying similar songs using jumpcodes |
WO2013079524A2 (en) * | 2011-11-30 | 2013-06-06 | Dolby International Ab | Enhanced chroma extraction from an audio codec |
US9684715B1 (en) * | 2012-03-08 | 2017-06-20 | Google Inc. | Audio identification using ordinal transformation |
US20130297299A1 (en) * | 2012-05-07 | 2013-11-07 | Board Of Trustees Of Michigan State University | Sparse Auditory Reproducing Kernel (SPARK) Features for Noise-Robust Speech and Speaker Recognition |
CN103425668A (en) * | 2012-05-16 | 2013-12-04 | 联想(北京)有限公司 | Information search method and electronic equipment |
US9020822B2 (en) * | 2012-10-19 | 2015-04-28 | Sony Computer Entertainment Inc. | Emotion recognition using auditory attention cues extracted from users voice |
US9031293B2 (en) | 2012-10-19 | 2015-05-12 | Sony Computer Entertainment Inc. | Multi-modal sensor based emotion recognition and emotional interface |
US9672811B2 (en) | 2012-11-29 | 2017-06-06 | Sony Interactive Entertainment Inc. | Combining auditory attention cues with phoneme posterior scores for phone/vowel/syllable boundary detection |
US9235782B1 (en) * | 2012-12-24 | 2016-01-12 | Google Inc. | Searching images and identifying images with similar facial features |
US9529907B2 (en) * | 2012-12-31 | 2016-12-27 | Google Inc. | Hold back and real time ranking of results in a streaming matching system |
CN104239372B (en) * | 2013-06-24 | 2017-09-12 | 浙江大华技术股份有限公司 | A kind of audio data classification method and device |
CN104462088B (en) * | 2013-09-13 | 2018-09-04 | 中国银联股份有限公司 | For the matched method of mass text |
US9727545B1 (en) * | 2013-12-04 | 2017-08-08 | Google Inc. | Selecting textual representations for entity attribute values |
WO2015083091A2 (en) * | 2013-12-06 | 2015-06-11 | Tata Consultancy Services Limited | System and method to provide classification of noise data of human crowd |
US9286902B2 (en) | 2013-12-16 | 2016-03-15 | Gracenote, Inc. | Audio fingerprinting |
US9398034B2 (en) * | 2013-12-19 | 2016-07-19 | Microsoft Technology Licensing, Llc | Matrix factorization for automated malware detection |
EP2887233A1 (en) * | 2013-12-20 | 2015-06-24 | Thomson Licensing | Method and system of audio retrieval and source separation |
CN104951442B (en) * | 2014-03-24 | 2018-09-07 | 华为技术有限公司 | A kind of method and apparatus of definitive result vector |
TW201543472A (en) * | 2014-05-15 | 2015-11-16 | 湯姆生特許公司 | Method and system of on-the-fly audio source separation |
US9858922B2 (en) | 2014-06-23 | 2018-01-02 | Google Inc. | Caching speech recognition scores |
US9299347B1 (en) | 2014-10-22 | 2016-03-29 | Google Inc. | Speech recognition using associative mapping |
US9837101B2 (en) * | 2014-11-25 | 2017-12-05 | Facebook, Inc. | Indexing based on time-variant transforms of an audio signal's spectrogram |
US9736580B2 (en) | 2015-03-19 | 2017-08-15 | Intel Corporation | Acoustic camera based audio visual scene analysis |
US10503999B2 (en) | 2015-03-24 | 2019-12-10 | Hrl Laboratories, Llc | System for detecting salient objects in images |
US20170316311A1 (en) * | 2015-03-24 | 2017-11-02 | Hrl Laboratories, Llc | Sparse inference modules for deep learning |
US10262229B1 (en) | 2015-03-24 | 2019-04-16 | Hrl Laboratories, Llc | Wide-area salient object detection architecture for low power hardware platforms |
US10198498B2 (en) * | 2015-05-13 | 2019-02-05 | Rovi Guides, Inc. | Methods and systems for updating database tags for media content |
CN106323452B (en) * | 2015-07-06 | 2019-03-29 | 中达电子零组件(吴江)有限公司 | A kind of detection method and detection device of equipment abnormal sound |
US9786270B2 (en) | 2015-07-09 | 2017-10-10 | Google Inc. | Generating acoustic models |
CN106340310B (en) * | 2015-07-09 | 2019-06-07 | 展讯通信（上海）有限公司 | Speech detection method and device |
US9971940B1 (en) * | 2015-08-10 | 2018-05-15 | Google Llc | Automatic learning of a video matching system |
US10381022B1 (en) | 2015-12-23 | 2019-08-13 | Google Llc | Audio classifier |
US10229672B1 (en) | 2015-12-31 | 2019-03-12 | Google Llc | Training acoustic models using connectionist temporal classification |
US10606879B1 (en) | 2016-02-29 | 2020-03-31 | Gracenote, Inc. | Indexing fingerprints |
US10318813B1 (en) | 2016-03-11 | 2019-06-11 | Gracenote, Inc. | Digital video fingerprinting using motion segmentation |
CN107464556A (en) * | 2016-06-02 | 2017-12-12 | 国家计算机网络与信息安全管理中心 | A kind of audio scene recognition method based on sparse coding |
US20180018973A1 (en) | 2016-07-15 | 2018-01-18 | Google Inc. | Speaker verification |
US10614798B2 (en) | 2016-07-29 | 2020-04-07 | Arizona Board Of Regents On Behalf Of Arizona State University | Memory compression in a deep neural network |
US10008218B2 (en) | 2016-08-03 | 2018-06-26 | Dolby Laboratories Licensing Corporation | Blind bandwidth extension using K-means and a support vector machine |
CN108021982B (en) * | 2016-10-28 | 2021-12-28 | 北京市商汤科技开发有限公司 | Data transmission method and system and electronic equipment |
CN106531157B (en) * | 2016-10-28 | 2019-10-22 | 中国科学院自动化研究所 | Regularization accent adaptive approach in speech recognition |
CN106653004B (en) * | 2016-12-26 | 2019-07-26 | 苏州大学 | Perception language composes the Speaker Identification feature extracting method of regular cochlea filter factor |
US10762347B1 (en) | 2017-05-25 | 2020-09-01 | David Andrew Caulkins | Waveform generation and recognition system |
US10706840B2 (en) | 2017-08-18 | 2020-07-07 | Google Llc | Encoder-decoder models for sequence to sequence mapping |
EP3688750B1 (en) * | 2017-10-27 | 2024-03-13 | Google LLC | Unsupervised learning of semantic audio representations |
CN108171151A (en) * | 2017-12-26 | 2018-06-15 | 上海亿动信息技术有限公司 | A kind of control method and device that video ads are identified with statistics |
CN110309270B (en) * | 2018-03-06 | 2023-06-20 | 微软技术许可有限责任公司 | Singing reply technology of chat robot |
CN117959592A (en) * | 2018-04-05 | 2024-05-03 | 科利耳有限公司 | Advanced hearing prosthesis recipient rehabilitation and/or rehabilitation |
CN108766461B (en) * | 2018-07-17 | 2021-01-26 | 厦门美图之家科技有限公司 | Audio feature extraction method and device |
CN109002529B (en) * | 2018-07-17 | 2021-02-02 | 厦门美图之家科技有限公司 | Audio retrieval method and device |
CN111089388A (en) * | 2018-10-18 | 2020-05-01 | 珠海格力电器股份有限公司 | Method and system for controlling air conditioner, air conditioner and household appliance |
US10891969B2 (en) * | 2018-10-19 | 2021-01-12 | Microsoft Technology Licensing, Llc | Transforming audio content into images |
CN111832584A (en) * | 2019-04-16 | 2020-10-27 | 富士通株式会社 | Image processing apparatus, training apparatus and training method thereof |
US11423908B2 (en) * | 2019-05-06 | 2022-08-23 | Apple Inc. | Interpreting spoken requests |
CN110647656B (en) * | 2019-09-17 | 2021-03-30 | 北京工业大学 | Audio retrieval method utilizing transform domain sparsification and compression dimension reduction |
KR20220163982A (en) * | 2020-04-01 | 2022-12-12 | 유니버시테이트 젠트 | Closed-loop method for personalizing neural network-based audio signal processing |
CN111681678B (en) * | 2020-06-09 | 2023-08-22 | 杭州星合尚世影视传媒有限公司 | Method, system, device and storage medium for automatically generating sound effects and matching videos |
CN111681680B (en) * | 2020-06-09 | 2023-08-25 | 杭州星合尚世影视传媒有限公司 | Method, system, device and readable storage medium for acquiring audio frequency by video recognition object |
CN112784098A (en) * | 2021-01-28 | 2021-05-11 | 百果园技术(新加坡)有限公司 | Audio searching method and device, computer equipment and storage medium |
CN114971744B (en) * | 2022-07-07 | 2022-11-15 | 北京淇瑀信息科技有限公司 | User portrait determination method and device based on sparse matrix |
Family Cites Families (5)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4536844A (en) * | 1983-04-26 | 1985-08-20 | Fairchild Camera And Instrument Corporation | Method and apparatus for simulating aural response information |
GB2232801B (en) * | 1989-05-18 | 1993-12-22 | Medical Res Council | Apparatus and methods for the generation of stabilised images from waveforms |
US5473759A (en) * | 1993-02-22 | 1995-12-05 | Apple Computer, Inc. | Sound analysis and resynthesis using correlograms |
US5918223A (en) * | 1996-07-22 | 1999-06-29 | Muscle Fish | Method and article of manufacture for content-based analysis, storage, retrieval, and segmentation of audio information |
US6434520B1 (en) * | 1999-04-16 | 2002-08-13 | International Business Machines Corporation | System and method for indexing and querying audio archives |
-
2010
- 2010-03-11 US US12/722,437 patent/US8463719B2/en active Active
- 2010-03-11 EP EP10712602.1A patent/EP2406787B1/en active Active
- 2010-03-11 CN CN201080017645.6A patent/CN102405495B/en active Active
- 2010-03-11 WO PCT/US2010/027031 patent/WO2010105089A1/en active Application Filing
Non-Patent Citations (1)
Title |
---|
See references of WO2010105089A1 * |
Also Published As
Publication number | Publication date |
---|---|
WO2010105089A1 (en) | 2010-09-16 |
US8463719B2 (en) | 2013-06-11 |
CN102405495A (en) | 2012-04-04 |
EP2406787B1 (en) | 2014-05-14 |
CN102405495B (en) | 2014-08-06 |
US20100257129A1 (en) | 2010-10-07 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
EP2406787B1 (en) | Audio classification for information retrieval using sparse features | |
JP7282940B2 (en) | System and method for contextual retrieval of electronic records | |
AU2018365901B2 (en) | System and methods for concept aware searching | |
JP6684391B2 (en) | Multi-domain real-time question and answer system | |
US10566009B1 (en) | Audio classifier | |
US8073877B2 (en) | Scalable semi-structured named entity detection | |
EP3180742B1 (en) | Generating and using a knowledge-enhanced model | |
Chechik et al. | Large-scale content-based audio retrieval from text queries | |
CN104885081B (en) | Search system and corresponding method | |
US11138285B2 (en) | Intent encoder trained using search logs | |
JP5346279B2 (en) | Annotation by search | |
CN106844632B (en) | Product comment emotion classification method and device based on improved support vector machine | |
JP6361351B2 (en) | Method, program and computing system for ranking spoken words | |
US20170270159A1 (en) | Determining query results in response to natural language queries | |
US20120296897A1 (en) | Text to Image Translation | |
US20090204605A1 (en) | Semantic Search Via Role Labeling | |
WO2011126458A1 (en) | Automatic frequently asked question compilation from community-based question answering archive | |
CA2774278A1 (en) | Methods and systems for extracting keyphrases from natural text for search engine indexing | |
US10460239B2 (en) | Generation of inferred questions for a question answering system | |
AU2018250372B2 (en) | Method to construct content based on a content repository | |
WO2014039106A1 (en) | Answering questions using environmental context | |
US11379527B2 (en) | Sibling search queries | |
Bourlard et al. | Processing and linking audio events in large multimedia archives: The eu inevent project | |
EP2706470A1 (en) | Answering questions using environmental context | |
WO2023098971A1 (en) | Method and apparatus for self-supervised extractive question answering |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PUAI | Public reference made under article 153(3) epc to a published international application that has entered the european phase |
Free format text: ORIGINAL CODE: 0009012 |
|
17P | Request for examination filed |
Effective date: 20111010 |
|
AK | Designated contracting states |
Kind code of ref document: A1Designated state(s): AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HR HU IE IS IT LI LT LU LV MC MK MT NL NO PL PT RO SE SI SK SM TR |
|
DAX | Request for extension of the european patent (deleted) | ||
REG | Reference to a national code |
Ref country code: DERef legal event code: R079Ref document number: 602010016071Country of ref document: DEFree format text: PREVIOUS MAIN CLASS: G10L0011000000Ipc: G10L0025480000 |
|
GRAP | Despatch of communication of intention to grant a patent |
Free format text: ORIGINAL CODE: EPIDOSNIGR1 |
|
RIC1 | Information provided on ipc code assigned before grant |
Ipc: G06F 17/30 20060101ALI20131106BHEPIpc: G10L 25/48 20130101AFI20131106BHEP |
|
INTG | Intention to grant announced |
Effective date: 20131202 |
|
GRAS | Grant fee paid |
Free format text: ORIGINAL CODE: EPIDOSNIGR3 |
|
GRAA | (expected) grant |
Free format text: ORIGINAL CODE: 0009210 |
|
AK | Designated contracting states |
Kind code of ref document: B1Designated state(s): AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HR HU IE IS IT LI LT LU LV MC MK MT NL NO PL PT RO SE SI SK SM TR |
|
REG | Reference to a national code |
Ref country code: GBRef legal event code: FG4D |
|
REG | Reference to a national code |
Ref country code: ATRef legal event code: REFRef document number: 668816Country of ref document: ATKind code of ref document: TEffective date: 20140615 |
|
REG | Reference to a national code |
Ref country code: IERef legal event code: FG4D |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R096Ref document number: 602010016071Country of ref document: DEEffective date: 20140626 |
|
REG | Reference to a national code |
Ref country code: NLRef legal event code: VDEPEffective date: 20140514Ref country code: ATRef legal event code: MK05Ref document number: 668816Country of ref document: ATKind code of ref document: TEffective date: 20140514 |
|
REG | Reference to a national code |
Ref country code: LTRef legal event code: MG4D |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: CYFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20140514Ref country code: LTFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20140514Ref country code: ISFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20140914Ref country code: NOFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20140814Ref country code: GRFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20140815Ref country code: FIFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20140514 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: SEFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20140514Ref country code: HRFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20140514Ref country code: ATFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20140514Ref country code: PLFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20140514Ref country code: LVFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20140514Ref country code: ESFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20140514 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: PTFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20140915 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: SKFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20140514Ref country code: CZFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20140514Ref country code: ROFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20140514Ref country code: BEFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20140514Ref country code: EEFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20140514Ref country code: DKFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20140514 |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R097Ref document number: 602010016071Country of ref document: DE |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: NLFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20140514 |
|
PLBE | No opposition filed within time limit |
Free format text: ORIGINAL CODE: 0009261 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: NO OPPOSITION FILED WITHIN TIME LIMIT |
|
26N | No opposition filed |
Effective date: 20150217 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: ITFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20140514 |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R097Ref document number: 602010016071Country of ref document: DEEffective date: 20150217 |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R082Ref document number: 602010016071Country of ref document: DERepresentative=s name: PROCK, THOMAS, DIPL.-ING. (FH) DR., GB |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: SIFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20140514 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: LUFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20150311Ref country code: MCFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20140514 |
|
REG | Reference to a national code |
Ref country code: CHRef legal event code: PL |
|
REG | Reference to a national code |
Ref country code: IERef legal event code: MM4A |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: IEFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20150311Ref country code: LIFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20150331Ref country code: CHFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20150331 |
|
REG | Reference to a national code |
Ref country code: FRRef legal event code: PLFPYear of fee payment: 7 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: MTFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20140514 |
|
REG | Reference to a national code |
Ref country code: FRRef legal event code: PLFPYear of fee payment: 8 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: SMFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20140514Ref country code: HUFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMIT; INVALID AB INITIOEffective date: 20100311Ref country code: BGFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20140514 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: TRFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20140514 |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R082Ref document number: 602010016071Country of ref document: DERepresentative=s name: PROCK, THOMAS, DR., GBRef country code: DERef legal event code: R082Ref document number: 602010016071Country of ref document: DERepresentative=s name: PROCK, THOMAS, DIPL.-ING. (FH) DR., GBRef country code: DERef legal event code: R081Ref document number: 602010016071Country of ref document: DEOwner name: GOOGLE LLC (N.D.GES.D. STAATES DELAWARE), MOUN, USFree format text: FORMER OWNER: GOOGLE, INC., MOUNTAIN VIEW, CALIF., US |
|
REG | Reference to a national code |
Ref country code: FRRef legal event code: CDOwner name: GOOGLE INC., USEffective date: 20180213Ref country code: FRRef legal event code: CJEffective date: 20180213 |
|
REG | Reference to a national code |
Ref country code: FRRef legal event code: PLFPYear of fee payment: 9 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: MKFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20140514 |
|
PGFP | Annual fee paid to national office [announced via postgrant information from national office to epo] |
Ref country code: FRPayment date: 20230327Year of fee payment: 14 |
|
P01 | Opt-out of the competence of the unified patent court (upc) registered |
Effective date: 20230505 |
|
PGFP | Annual fee paid to national office [announced via postgrant information from national office to epo] |
Ref country code: DEPayment date: 20240327Year of fee payment: 15Ref country code: GBPayment date: 20240327Year of fee payment: 15 |
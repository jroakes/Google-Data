US5933596A - Multiple server dynamic page link retargeting - Google Patents
Multiple server dynamic page link retargeting Download PDFInfo
- Publication number
- US5933596A US5933596A US08/803,055 US80305597A US5933596A US 5933596 A US5933596 A US 5933596A US 80305597 A US80305597 A US 80305597A US 5933596 A US5933596 A US 5933596A
- Authority
- US
- United States
- Prior art keywords
- servers
- server
- page
- unique
- links
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Lifetime
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F9/00—Arrangements for program control, e.g. control units
- G06F9/06—Arrangements for program control, e.g. control units using stored programs, i.e. using an internal store of processing equipment to receive or retain programs
- G06F9/46—Multiprogramming arrangements
- G06F9/50—Allocation of resources, e.g. of the central processing unit [CPU]
- G06F9/5005—Allocation of resources, e.g. of the central processing unit [CPU] to service a request
- G06F9/5027—Allocation of resources, e.g. of the central processing unit [CPU] to service a request the resource being a machine, e.g. CPUs, Servers, Terminals
- G06F9/505—Allocation of resources, e.g. of the central processing unit [CPU] to service a request the resource being a machine, e.g. CPUs, Servers, Terminals considering the load
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F2209/00—Indexing scheme relating to G06F9/00
- G06F2209/50—Indexing scheme relating to G06F9/50
- G06F2209/509—Offload
Definitions
- the World Wide Web is becoming the method of choice for searching for information, doing business, and is even becoming a viable means of socializing with others.
- the popularity of the World Wide Web has put unexpected demands on the systems which support and sustain the Web such that, many times, the performance of the Web is impacted.
- the congestion causes the response time to the user to increase. This increase in response time increases the cost to the users as well as frustrating users.
- a web site becomes too congested, users will start finding alternative web sites that have better performance. This is extremely undesirable to the owners of the web sites who, in some instances, receive revenue based on the number of users accessing their site.
- the method of distributing the name of different web sites to different users results in some users not being able to access the information if one of the alternative sites goes down. Since the user only knows one name where the location may be found, they will lose access if their server is the one that goes down while other servers having access to the identical information remain active.
- a web sprayer is an intermediate server which is connected to multiple other servers. Each of the multiple servers to which the sprayer is connected contains the same information, replicated. Imagine trying to access the information on the multiple servers must access the information through the sprayer. The sprayer receives the request for the information, determines which of the multiple servers to send the next request to, and sends the request to the appropriate secondary server. This can also be implemented as a simple round-robin serving approach to distribute the work between the multiple data servers. This approach, while useful to improve the performance in general, has some significant drawbacks in that if the sprayer goes down or malfunctions access to the information is lost. The different secondary servers cannot be accessed without the sprayer.
- the current implementations of the sprayers have no means of determining how busy each of the secondary servers is. Someone making a single request of a server taking only a few seconds is treated the same as someone making a request which takes an hour. This can lead to some imbalancing of the secondary server workload, although it is definitely a significant performance improvement over having a single server.
- Another object of the present invention is to provide a highly scalable solution so that the same solution can be used for web sites of all sizes.
- the present invention involves the use of hyper-text transfer protocol (http) links which are contained within web pages to facilitate load balancing across multiple servers containing the same information.
- the present invention called multiple server dynamic page link retargeting (MS/DPLR), uses the links in the web pages to load balance across multiple banks of available servers rather than relying on special purpose front end processors for load balancing.
- MS/DPLR eliminates the need for special hardware or special organization of the existing hardware and allows each bank of web servers to operate independently. This provides higher availability through failures of individual web servers. In addition, this solution is lower cost than other known solutions to the problem.
- MS/DPLR requires no special configuration and is more easily scalable than a web sprayer solution to load balancing across web servers.
- FIG. 1 is a pictorial representation of a sprayer functioning in a web environment.
- FIG. 2 is a pictorial representation of multiple, alternate web servers each accessed by name.
- FIG. 3 is a representation of the present invention using named servers and three alternate servers for each of the named servers.
- FIG. 4 is a flow chart of the present invention.
- FIG. 5A is a flow chart of a round robin method of retargeting.
- FIG. 5B is a flow chart of a least busy method of server retargeting.
- FIG. 6A is a graphical representation of a web page prior to implementing the present invention.
- FIG. 6B is a graphical representation of a web page after implementing the present invention.
- FIG. 6C is a graphical representation of a web page after the server substitution of the present invention has occurred.
- FIG. 1 depicts a web sprayer.
- the user accesses the desired information by addressing the web sprayer (109).
- the user would address the information by referencing http: ⁇ w3.externa1addr.com ⁇ xxxx.xxxx where ⁇ xxxx.xxxx ⁇ is the specific information being requested.
- the sprayer sends the request for information to one of the attached data servers.
- the first request received is sent over the first link (113) to the first data server (101) by converting the address requested to http: ⁇ w3.locationone.com ⁇ xxxx.xxxx
- the second request for information is sent over the second link (115) to the second data server (103) by converting the address requested to http: ⁇ w3.locationtwo.com ⁇ xxxx.xxxx
- the third request for information is sent over the third link (117) to the third data server (105) by converting the address requested to http: ⁇ w3.locationthree.com ⁇ xxxx.xxxx
- the fourth request for information is sent over the fourth link (119) to the fourth data server (107) by converting the address requested to http: ⁇ w3.locationfour.com ⁇ xxxx.xxxx.
- the process begins again with the first data server in a round robin fashion.
- This method enables more requests to be handled with a better response time perceived by the user and without requiring the user to know multiple, alternate data locations but also has significant drawbacks.
- some sprayers require specialized hardware that will not handle any of the load of satisfying requests to the user while other web sprayers will process web pages but with a possible impact to the performance of that server. Both types of sprayers require specialized knowledge to appropriately configure the sprayer and specialized software to implement the sprayer functions.
- the round robin method of request distribution does not take into account the length of time a user will access the data server, therefore, it can cause an imbalance in the load distribution.
- the web sprayer goes down, none of the servers are accessible under this solution.
- FIG. 2 depicts another, less desired, alternative to the problem of satisfying the volume of requests for information directed to web servers.
- FIG. 2 shows a telecommunications link (210) which has four alternate servers containing replicated information. As users request a route to the desired information, they are told different addresses.
- This solution does not provide load balancing. It may distribute the information as to where the desired data is located in a uniform manner, but does nothing to distribute the actual accesses or attempts to access data. In addition, there is no allowance made for one data server to back-up another data server should one or more of the data servers fail. For example, if a user was told that the information they requested was at http: ⁇ w3.extern2.com ⁇ xxx.xxx and the data server w3.extern2.com failed, then the user would not know to look elsewhere for the information and this solution does not provide an automatic rerouting mechanism.
- FIG. 3 shows the network of the present invention which takes advantage of the fact that information on the web may contain a multitude of pointers (or links) to other information contained within the same, and different, web servers.
- the present invention addresses the access to information within the same web server as well as other web servers having alternate banks of information.
- the present invention requires no specialized or additional hardware.
- the user accesses the desired information by accessing http: ⁇ w3.externl.com ⁇ xxx.xxx (301) over the communications link (310).
- This page contains links to other pages residing on w3.extern1.com as well as links to information residing on other pages an example of which is shown in FIG. 6A.
- the initial reference allows for a single interface to the information.
- the data server checks to see if the requested data server is ⁇ busy ⁇ .
- Busy can be defined by the systems administrator to be the appropriate level of usage for that system. If the requested data server is busy, an internal data structure of alternate server locations is used to substitute the alternate servers for the requested data server in any page references within the information sent to the user. This results in future accesses by the user being to one of the alternate data servers while maintaining a single point of interface for the user.
- a user may access web page http: ⁇ w3.extern1.com ⁇ xxx.xxx which has references to w3.extern1.com ⁇ xxx.yyy, w3.externl.com ⁇ xxx.zzz, and w3.externl.com ⁇ qq.xxx.
- the user may receive the web page http: ⁇ w3.extern1.com ⁇ xxx.xxx with links to http: ⁇ w3.extern2.com ⁇ xxx.yyy, http: ⁇ w3.extern2.com ⁇ xxx.zzz and http: ⁇ w3.extern2.com ⁇ qqq.xxx for further information.
- the preferred embodiment of the present invention is implemented by executing a preprocessor against the web pages.
- This preprocessor which resides on a web server, appends a header at the beginning of each web page to indicate a count of the number of servers referenced within the web page, a count of the number of links contained within the web page and a value to indicate the location or offset of each link to a web page contained within the selected page.
- a data structure is created containing the lists of alternate servers available for each of the named servers in the web page.
- the servers are named sequentially, for example if there are 50 alternative servers they are named ⁇ abcd.xyz01.aaa ⁇ to ⁇ abcd.xyz50.aaa ⁇ . If this convention is adopted, the pointer in the header appended by the preprocessor contains the offset to the replaceable numeric portion of the server name. As the implementation of the present invention proceeds and the determination is made that the primary server is busy, the process indexes through the linked list of alternate servers and only the two numeric digits are replaced. This also simplifies the data structure containing references to the alternate web servers in that it allows the fields of the data structure to only contain the two replaceable numeric digits rather than the entire server name.
- FIG. 6A is a graphical representation of a web page before it has gone through the preprocessor. There is a pointer (603) to the beginning of the web page (601). Within the web page are links (605, 607, 609) to additional web pages within the same server as the requested web page (601). There are also links to additional web pages (611, 613, 615, 617) which are not contained within the same web server.
- FIG. 6B is a graphical representation of the same page as FIG. 6B after it has been preprocessed as in the present invention.
- the web page (610) now contains a header (619).
- the header (619) of the present example contains a count (640) of the number of web servers referenced from the requested page and a count (650) for each of the web servers referenced of the number of links contained within the processed web, page. Following the count of the number of links is a reference to each of the offsets of the page links in the processed page.
- the pointer to the start of data (620) and the links to the other web pages remain unchanged.
- the above mentioned preferred embodiment is not meant to limit the invention in any manner.
- the invention could be implemented using a flag to indicate the end of the header, pointers to the end of the header or the beginning of the data, or any other manner of indexing information.
- FIG. 4 further explains the concept of the present invention by way of a flow chart.
- a web site implementing the present invention is established for each of the server references contained within the web page, first a check is made to determine if there are multiple alternative sites available (401). If there are not multiple alternative sites available, the information is processed as it was in the prior art (403). If there are multiple alternative sites available, an internal data structure (in the preferred embodiment this is a linked list although any data structure can be used) is created of alternative servers (405). This internal linked list is stored on the primary data server. Next a check is made to determine whether a request for a web page located on the primary data server has been received (407). If no request has been received, the server waits for a request (409).
- the server would process the header of the web page and, for each reference to the primary data server (as indicated by the list of offsets of page links) encountered, the primary data server would be replaced by an alternate data server prior to sending the page to the browser.
- FIGS. 5A and 5B are flow charts depicting alternative means of determining which alternate server to use when substituting links. While these are the two preferable alternatives at this time, the present invention can be used with any method of cycling through the alternate servers.
- the suggested alternatives of ⁇ round robin ⁇ and ⁇ least busy ⁇ are not meant to limit the present invention in any way.
- FIG. 5A shows a round robin method of server retargeting simplified to address one server bank at a time. This same system is applicable to any number of server banks and can be accomplished sequentially or in parallel for each of the server banks.
- a pointer for the ⁇ retargeted server ⁇ is first set to the first alternate server (501). A check is then make to determine whether retargeting is indicated (503). If retargeting is not indicated, then the system waits for a retargeting instruction (505). If retargeting is indicated then the links in the requested web page are changed from the primary data server to the data server indicated by the ⁇ retargeted server ⁇ pointer (507).
- FIG. 5B depicts a least-busy method of server retargeting which can also be used for each of the banks of servers referred to from a web page.
- first a query of each of the alternative servers is done to determine the least busy alternate server (525).
- a ⁇ retargeted server ⁇ pointer is then set to point to the least busy alternate server (527).
- a check is then made to determine if a retargeting indication has been received (529). If no retargeting indication has been received then the system waits for a retargeting indication (531). If a retargeting indication has been received the internal links in the web page returned to the user are changed to indicate the web page located on the ⁇ retargeted server ⁇ (533).
- the least busy alternate server is then recalculated using the most current information (535) and the ⁇ retargeted server ⁇ pointer is reset to the currently least busy server (537).
- An alternative to the preferred embodiment above allows for the internal data structures to be stored on each of the servers. This allows for the secondary data servers to also redirect requests if they become too busy.
- the present invention assumes that the names of the one or more alternate servers are all the same size. This assumption simplifies the replacement of character strings within the text of the web pages. If the names of the alternate pages are different in size than that of the primary web server, then the information in the text must be padded.
- FIG. 6C depicts the web page of FIG. 6B after the determination has been made that servers xxx.xx1.xxx, xxx.dates01.xxx and xxx.times1.xxx are busy and the information should be redirected to servers xxx.xx2.xxx, xxx.dates03.xxx, and xxx.times4.xxx respectively. Since a convention has been adopted for each server in this particular example that only the one or two numeric digits in the server name are different between the primary server and each of the alternate servers, the numbers represented in the header (following the count 650) can point directly to the replaceable digit(s) in the server name. Alternatively, if this convention had not been adopted, the numbers could point to the beginning of the http address and either the entire name could be replaced or the interface could be written to count to the replaceable digits.
- An enhancement to the present invention allows for a feedback mechanism when one of the web servers goes down. Any of the many known feedback mechanisms can be used. When a web server goes down, the name or pointer to that failing server could be removed from the linked list of alternate servers, thereby ensuring that a user is not routed to a failing server. Additionally, the same technology can be used to include the name of the server into the linked list when it becomes available.
Abstract
Description
Claims (8)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US08/803,055 US5933596A (en) | 1997-02-19 | 1997-02-19 | Multiple server dynamic page link retargeting |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US08/803,055 US5933596A (en) | 1997-02-19 | 1997-02-19 | Multiple server dynamic page link retargeting |
Publications (1)
Publication Number | Publication Date |
---|---|
US5933596A true US5933596A (en) | 1999-08-03 |
Family
ID=25185472
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US08/803,055 Expired - Lifetime US5933596A (en) | 1997-02-19 | 1997-02-19 | Multiple server dynamic page link retargeting |
Country Status (1)
Country | Link |
---|---|
US (1) | US5933596A (en) |
Cited By (27)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6115752A (en) * | 1998-05-21 | 2000-09-05 | Sun Microsystems, Inc. | System and method for server selection for mirrored sites |
WO2000072167A1 (en) | 1999-05-20 | 2000-11-30 | Hwang Ivan Chung Shung | A method and apparatus for implementing a workgroup server array |
US6182116B1 (en) * | 1997-09-12 | 2001-01-30 | Matsushita Electric Industrial Co., Ltd. | Virtual WWW server for enabling a single display screen of a browser to be utilized to concurrently display data of a plurality of files which are obtained from respective servers and to send commands to these servers |
WO2001022325A1 (en) * | 1999-09-20 | 2001-03-29 | Hwang Ivan Chung Shung | System and methods for implementing e-commerce services |
WO2001040903A2 (en) * | 1999-12-06 | 2001-06-07 | Warp Solutions, Inc. | System and method for enhancing operation of a web server cluster |
US6279001B1 (en) | 1998-05-29 | 2001-08-21 | Webspective Software, Inc. | Web service |
US6314463B1 (en) | 1998-05-29 | 2001-11-06 | Webspective Software, Inc. | Method and system for measuring queue length and delay |
US6317786B1 (en) * | 1998-05-29 | 2001-11-13 | Webspective Software, Inc. | Web service |
US6389448B1 (en) | 1999-12-06 | 2002-05-14 | Warp Solutions, Inc. | System and method for load balancing |
US20030105903A1 (en) * | 2001-08-10 | 2003-06-05 | Garnett Paul J. | Load balancing |
US6598077B2 (en) | 1999-12-06 | 2003-07-22 | Warp Solutions, Inc. | System and method for dynamic content routing |
US20040003075A1 (en) * | 1998-02-09 | 2004-01-01 | Reuters, Ltd. | Market data domain and enterprise system implemented by a master entitlement processor |
EP1387301A2 (en) * | 2002-07-31 | 2004-02-04 | Hewlett-Packard Development Company, L.P. | Establishment of network connections |
US6766354B1 (en) * | 2000-09-28 | 2004-07-20 | Intel Corporation | Speed sensitive content delivery in a client-server network |
US20040199497A1 (en) * | 2000-02-08 | 2004-10-07 | Sybase, Inc. | System and Methodology for Extraction and Aggregation of Data from Dynamic Content |
US20040225708A1 (en) * | 2002-07-31 | 2004-11-11 | Hewlett-Packard Development Company, L.P. | Establishment of network connections |
US20050021862A1 (en) * | 2000-03-31 | 2005-01-27 | Dickens Coal Llc | Automatic selection of content-delivery provider using link mapping database |
US20050050021A1 (en) * | 2003-08-25 | 2005-03-03 | Sybase, Inc. | Information Messaging and Collaboration System |
US6976093B2 (en) | 1998-05-29 | 2005-12-13 | Yahoo! Inc. | Web server content replication |
US20060026262A1 (en) * | 1998-05-29 | 2006-02-02 | Freeland Abbott | Content collection |
US7035943B2 (en) | 1998-05-29 | 2006-04-25 | Yahoo! Inc. | Web server content replication |
US7035921B1 (en) * | 2000-11-14 | 2006-04-25 | Hewlett-Packard Development Company, L.P. | Method of and apparatus for providing web service using a network of servers |
US20070067453A1 (en) * | 2005-09-21 | 2007-03-22 | International Business Machines Corporation | Method, apparatus, and computer program for handling web server failure |
US7216154B1 (en) * | 2000-11-28 | 2007-05-08 | Intel Corporation | Apparatus and method for facilitating access to network resources |
US7581006B1 (en) | 1998-05-29 | 2009-08-25 | Yahoo! Inc. | Web service |
US7693840B1 (en) * | 2004-07-30 | 2010-04-06 | Sprint Communications Company L.P. | Method and system for distribution of common elements |
US20110060840A1 (en) * | 2000-02-18 | 2011-03-10 | Susai Michel K | Apparatus, method and computer program product for guaranteed content delivery incorporating putting a client on-hold based on response time |
Citations (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5774660A (en) * | 1996-08-05 | 1998-06-30 | Resonate, Inc. | World-wide-web server with delayed resource-binding for resource-based load balancing on a distributed resource multi-node network |
-
1997
- 1997-02-19 US US08/803,055 patent/US5933596A/en not_active Expired - Lifetime
Patent Citations (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5774660A (en) * | 1996-08-05 | 1998-06-30 | Resonate, Inc. | World-wide-web server with delayed resource-binding for resource-based load balancing on a distributed resource multi-node network |
Cited By (50)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6182116B1 (en) * | 1997-09-12 | 2001-01-30 | Matsushita Electric Industrial Co., Ltd. | Virtual WWW server for enabling a single display screen of a browser to be utilized to concurrently display data of a plurality of files which are obtained from respective servers and to send commands to these servers |
US8195780B2 (en) * | 1998-02-09 | 2012-06-05 | Reuters, Ltd. | Market data domain and enterprise system implemented by a master entitlement processor |
US20040003075A1 (en) * | 1998-02-09 | 2004-01-01 | Reuters, Ltd. | Market data domain and enterprise system implemented by a master entitlement processor |
US6115752A (en) * | 1998-05-21 | 2000-09-05 | Sun Microsystems, Inc. | System and method for server selection for mirrored sites |
US6317786B1 (en) * | 1998-05-29 | 2001-11-13 | Webspective Software, Inc. | Web service |
US7356589B2 (en) | 1998-05-29 | 2008-04-08 | Yahoo! Inc. | Content collection |
US6279001B1 (en) | 1998-05-29 | 2001-08-21 | Webspective Software, Inc. | Web service |
US6314463B1 (en) | 1998-05-29 | 2001-11-06 | Webspective Software, Inc. | Method and system for measuring queue length and delay |
US8108347B2 (en) | 1998-05-29 | 2012-01-31 | Yahoo! Inc. | Web server content replication |
US7035943B2 (en) | 1998-05-29 | 2006-04-25 | Yahoo! Inc. | Web server content replication |
US7581006B1 (en) | 1998-05-29 | 2009-08-25 | Yahoo! Inc. | Web service |
US20060031188A1 (en) * | 1998-05-29 | 2006-02-09 | Marco Lara | Web server content replication |
US20060026262A1 (en) * | 1998-05-29 | 2006-02-02 | Freeland Abbott | Content collection |
US6976093B2 (en) | 1998-05-29 | 2005-12-13 | Yahoo! Inc. | Web server content replication |
US7143193B1 (en) | 1998-05-29 | 2006-11-28 | Yahoo! Inc. | Content collection |
US6912534B2 (en) | 1998-05-29 | 2005-06-28 | Yahoo! Inc. | Web service |
EP1114372A1 (en) * | 1999-05-20 | 2001-07-11 | Ivan Chung-Shuang Hwang | A method and apparatus for implementing a workgroup server array |
WO2000072167A1 (en) | 1999-05-20 | 2000-11-30 | Hwang Ivan Chung Shung | A method and apparatus for implementing a workgroup server array |
EP1114372A4 (en) * | 1999-05-20 | 2009-09-16 | Ivan Chung-Shuang Hwang | A method and apparatus for implementing a workgroup server array |
EP1222592A4 (en) * | 1999-09-20 | 2005-11-23 | Ivan Chung-Shuang Hwang | System and methods for implementing e-commerce services |
JP2003510695A (en) * | 1999-09-20 | 2003-03-18 | イヴァン， チョン−ション ホワン， | System and method for implementing a commerce service |
WO2001022325A1 (en) * | 1999-09-20 | 2001-03-29 | Hwang Ivan Chung Shung | System and methods for implementing e-commerce services |
EP1222592A1 (en) * | 1999-09-20 | 2002-07-17 | Ivan Chung-Shuang Hwang | System and methods for implementing e-commerce services |
WO2001040903A3 (en) * | 1999-12-06 | 2001-12-27 | Warp Solutions Inc | System and method for enhancing operation of a web server cluster |
US6389448B1 (en) | 1999-12-06 | 2002-05-14 | Warp Solutions, Inc. | System and method for load balancing |
US6598077B2 (en) | 1999-12-06 | 2003-07-22 | Warp Solutions, Inc. | System and method for dynamic content routing |
WO2001040903A2 (en) * | 1999-12-06 | 2001-06-07 | Warp Solutions, Inc. | System and method for enhancing operation of a web server cluster |
US20020010783A1 (en) * | 1999-12-06 | 2002-01-24 | Leonard Primak | System and method for enhancing operation of a web server cluster |
US7240067B2 (en) | 2000-02-08 | 2007-07-03 | Sybase, Inc. | System and methodology for extraction and aggregation of data from dynamic content |
US20040199497A1 (en) * | 2000-02-08 | 2004-10-07 | Sybase, Inc. | System and Methodology for Extraction and Aggregation of Data from Dynamic Content |
US8812703B2 (en) * | 2000-02-18 | 2014-08-19 | Citrix Systems, Inc. | Apparatus, method and computer program product for guaranteed content delivery incorporating putting a client on-hold based on response time |
US20110060840A1 (en) * | 2000-02-18 | 2011-03-10 | Susai Michel K | Apparatus, method and computer program product for guaranteed content delivery incorporating putting a client on-hold based on response time |
US20050021862A1 (en) * | 2000-03-31 | 2005-01-27 | Dickens Coal Llc | Automatic selection of content-delivery provider using link mapping database |
US20040255019A1 (en) * | 2000-09-28 | 2004-12-16 | Intel Corporation, A Delaware Corporation | Speed sensitive content delivery in a client-server network |
US7673026B2 (en) | 2000-09-28 | 2010-03-02 | Intel Corporation | Speed sensitive content delivery in a client-server network |
US6766354B1 (en) * | 2000-09-28 | 2004-07-20 | Intel Corporation | Speed sensitive content delivery in a client-server network |
US7035921B1 (en) * | 2000-11-14 | 2006-04-25 | Hewlett-Packard Development Company, L.P. | Method of and apparatus for providing web service using a network of servers |
US7216154B1 (en) * | 2000-11-28 | 2007-05-08 | Intel Corporation | Apparatus and method for facilitating access to network resources |
US7032037B2 (en) * | 2001-08-10 | 2006-04-18 | Sun Microsystems, Inc. | Server blade for performing load balancing functions |
US20030105903A1 (en) * | 2001-08-10 | 2003-06-05 | Garnett Paul J. | Load balancing |
EP1387301A3 (en) * | 2002-07-31 | 2006-05-24 | Hewlett-Packard Development Company, L.P. | Establishment of network connections |
US20050027815A1 (en) * | 2002-07-31 | 2005-02-03 | Hewlett-Packard Development Company, L.P. | Establishment of network connections |
US20040225708A1 (en) * | 2002-07-31 | 2004-11-11 | Hewlett-Packard Development Company, L.P. | Establishment of network connections |
US20040133621A1 (en) * | 2002-07-31 | 2004-07-08 | Hewlett-Packard Development Company, L.P. | Establishment of network connections |
EP1387301A2 (en) * | 2002-07-31 | 2004-02-04 | Hewlett-Packard Development Company, L.P. | Establishment of network connections |
US20050050021A1 (en) * | 2003-08-25 | 2005-03-03 | Sybase, Inc. | Information Messaging and Collaboration System |
US8260844B2 (en) | 2003-08-25 | 2012-09-04 | Sybase, Inc. | Information messaging and collaboration system |
US7693840B1 (en) * | 2004-07-30 | 2010-04-06 | Sprint Communications Company L.P. | Method and system for distribution of common elements |
US20070067453A1 (en) * | 2005-09-21 | 2007-03-22 | International Business Machines Corporation | Method, apparatus, and computer program for handling web server failure |
US7568120B2 (en) * | 2005-09-21 | 2009-07-28 | International Business Machines Corporation | Method, apparatus, and computer program for handling web server failure |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US5933606A (en) | Dynamic link page retargeting using page headers | |
US5933596A (en) | Multiple server dynamic page link retargeting | |
KR100318779B1 (en) | Dynamic routing in the internet | |
US7200665B2 (en) | Allowing requests of a session to be serviced by different servers in a multi-server data service system | |
US6311216B1 (en) | Method, computer program product, and system for client-side deterministic routing and URL lookup into a distributed cache of URLS | |
US6377991B1 (en) | Method, computer program product, and system for migrating URLs within a dynamically changing distributed cache of URLs | |
US6341311B1 (en) | Directing data object access requests in a distributed cache | |
US7321926B1 (en) | Method of and system for allocating resources to resource requests | |
US6424992B2 (en) | Affinity-based router and routing method | |
US6898633B1 (en) | Selecting a server to service client requests | |
Ross | Hash routing for collections of shared web caches | |
CA2267953C (en) | Web serving system with primary and secondary servers | |
US7584262B1 (en) | Method of and system for allocating resources to resource requests based on application of persistence policies | |
US6959333B2 (en) | Technique for content delivery over the internet | |
US6473802B2 (en) | Method and system for storing load balancing information with an HTTP cookie | |
US5974409A (en) | System and method for locating information in an on-line network | |
US7676599B2 (en) | System and method of binding a client to a server | |
US20020199014A1 (en) | Configurable and high-speed content-aware routing method | |
EP2321937B1 (en) | Load balancing for services | |
US20040205162A1 (en) | Method of executing an edge-enabled application in a content delivery network (CDN) | |
KR20010075542A (en) | Load balancing cooperating cache servers | |
US7685289B2 (en) | Method and apparatus for proxying initial client requests to support asynchronous resource initialization | |
WO2001052111A2 (en) | System and method for internet broadcast searching | |
EP1227638B1 (en) | High performance client-server communication system | |
US20010049727A1 (en) | Method for effficient and scalable interaction in a client-server system in presence of bursty client requests |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: IBM CORPORATION, NEW YORKFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MAYHEW, DAVID EVAN;REEL/FRAME:008518/0830Effective date: 19970219 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
FPAY | Fee payment |
Year of fee payment: 8 |
|
REMI | Maintenance fee reminder mailed | ||
FPAY | Fee payment |
Year of fee payment: 12 |
|
SULP | Surcharge for late payment |
Year of fee payment: 11 |
|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:INTERNATIONAL BUSINESS MACHINES CORPORATION;REEL/FRAME:026664/0866Effective date: 20110503 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044127/0735Effective date: 20170929 |
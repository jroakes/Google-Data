CN113099246A - Network traffic distribution for streaming content - Google Patents
Network traffic distribution for streaming content Download PDFInfo
- Publication number
- CN113099246A CN113099246A CN202110275098.1A CN202110275098A CN113099246A CN 113099246 A CN113099246 A CN 113099246A CN 202110275098 A CN202110275098 A CN 202110275098A CN 113099246 A CN113099246 A CN 113099246A
- Authority
- CN
- China
- Prior art keywords
- content
- request
- client device
- container
- streaming
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Granted
Links
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/20—Servers specifically adapted for the distribution of content, e.g. VOD servers; Operations thereof
- H04N21/21—Server components or server architectures
- H04N21/218—Source of audio or video content, e.g. local disk arrays
- H04N21/2187—Live feed
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/20—Servers specifically adapted for the distribution of content, e.g. VOD servers; Operations thereof
- H04N21/25—Management operations performed by the server for facilitating the content distribution or administrating data related to end-users or client devices, e.g. end-user or client device authentication, learning user preferences for recommending movies
- H04N21/262—Content or additional data distribution scheduling, e.g. sending additional data at off-peak times, updating software modules, calculating the carousel transmission frequency, delaying a video stream transmission, generating play-lists
- H04N21/26208—Content or additional data distribution scheduling, e.g. sending additional data at off-peak times, updating software modules, calculating the carousel transmission frequency, delaying a video stream transmission, generating play-lists the scheduling operation being performed under constraints
- H04N21/26216—Content or additional data distribution scheduling, e.g. sending additional data at off-peak times, updating software modules, calculating the carousel transmission frequency, delaying a video stream transmission, generating play-lists the scheduling operation being performed under constraints involving the channel capacity, e.g. network bandwidth
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/40—Client devices specifically adapted for the reception of or interaction with content, e.g. set-top-box [STB]; Operations thereof
- H04N21/43—Processing of content or additional data, e.g. demultiplexing additional data from a digital video stream; Elementary client operations, e.g. monitoring of home network or synchronising decoder's clock; Client middleware
- H04N21/44—Processing of video elementary streams, e.g. splicing a video clip retrieved from local storage with an incoming video stream, rendering scenes according to MPEG-4 scene graphs
- H04N21/44016—Processing of video elementary streams, e.g. splicing a video clip retrieved from local storage with an incoming video stream, rendering scenes according to MPEG-4 scene graphs involving splicing one content stream with another content stream, e.g. for substituting a video clip
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/60—Network structure or processes for video distribution between server and client or between remote clients; Control signalling between clients, server and network components; Transmission of management data between server and client, e.g. sending from server to client commands for recording incoming content stream; Communication details between server and client
- H04N21/61—Network physical structure; Signal processing
- H04N21/6106—Network physical structure; Signal processing specially adapted to the downstream path of the transmission network
- H04N21/6125—Network physical structure; Signal processing specially adapted to the downstream path of the transmission network involving transmission via Internet
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/80—Generation or processing of content or additional data by content creator independently of the distribution process; Content per se
- H04N21/81—Monomedia components thereof
- H04N21/812—Monomedia components thereof involving advertisement data
Abstract
Systems and methods for distributing network traffic during streaming are provided herein. The server may provide a first content container to the client device for inserting a content break separating the first portion and the second portion of the streaming content. The server may receive, from the client device during playback of the first content container, a request to insert content interruptions for content played back after playback of the first content container. A request for content may be generated via a request generation policy at a first elapsed time from beginning playback of the first content container. The server may select a second content container. The server may provide the second content container to the client device during playback of the first content container for playback after playback of the first content container is completed.
Description
The application is a divisional application of an invention patent application with the application date of 2017, 10 and 25 months and the application number of 201780074303.X and the name of the invention of network traffic distribution for streaming content.
Background
A server may transmit streaming content via a computer network environment for presentation on a multitude of client devices. Processing and communication may consume bandwidth of the network as well as computing resources at the server and client devices. Additionally, during transmission of streaming content, the client device and the server may exchange data packets.
Disclosure of Invention
At least one aspect relates to a method of distributing network traffic during streaming, comprising: providing, by a data processing system having one or more processors, to each of a plurality of client devices, a respective first content item arranged to cause the client device to play respective first content during a content break between a first portion and a second portion of a content stream; for each of a plurality of client devices, receiving, by the data processing system, a respective request for a respective second content item, each respective request received during playback of a respective first content item; wherein a first respective request associated with a first client device of the plurality of client devices is generated at a first time and a second respective request associated with a second client device of the plurality of client devices is generated at a second time different from the first time. During playback of content associated with the respective first content item, providing, by the data processing system, a second respective content item to each of the plurality of client devices, each second respective content item being provided based on the respective request and arranged to cause the client device to play the respective second content after completion of playback of the respective first content.
The first one of the respective first content items may be provided to a third client device at a third time and the second one of the respective first content items may be provided to a fourth client device at a fourth time, wherein the third time and the fourth time are different. Each first respective request for a respective second content item may include a respective content selection parameter associated with a respective second client device, wherein each second respective content item is provided based on the respective content selection parameter. Content selection parameters associated with a respective second client device may be generated by the client device while the respective first content is being played. The content selection parameters may include at least one of a reference address identifying an information resource associated with the content, historical interaction data of the first client device with respect to the content, or a reference identifying the respective first content. At least one second respective content item associated with the respective client device may also be provided based on at least one further request for a respective third content item from the respective client device, wherein the at least one further request is associated with a content interruption that occurred prior to the content interruption between the first portion and the second portion of the content stream. The at least one further request may comprise further content selection parameters associated with the respective client device. The method may also include determining, by the data processing system, to generate a request received from a client device of the plurality of client devices during playback of the first content based on a time at which the request was received. Providing the second respective content item may further include: the second content item is selected in response to determining that the request received from the client device was generated during playback of the first content.
The method may further comprise: maintaining, by a data processing system, a log comprising a plurality of entries, each entry of the log indicating whether a respective client device is to use a respective content selection parameter to select a corresponding content item; determining, by the data processing system, that the client device is to receive the second content item using the first content selection parameter included in the respective request based on a first entry of the log corresponding to the respective client device; and wherein selecting the second respective content item further comprises: in response to determining, based on the first entry, that the first client device is to receive the second content container using the first content selection parameter, a second content item is selected based on the first content selection parameter of the first respective request. Receiving the first respective request may further include: receiving a first respective request for content generated via a first request generation policy of a central request generation policy, the central request generation policy specifying a respective time for generating the respective request for each of a plurality of client devices; and wherein receiving the second respective request further comprises receiving a second respective request for content generated via a second request generation policy of the central request generation policy.
The method may further comprise: receiving, by the data processing system from a client device of the plurality of client devices, a further request for insertion of content that separates the second portion of the content stream from a second content interruption of a third portion of the content stream during the second portion of the content stream, the third request generated at a third time during the second portion of the content stream via a third request generation policy; and providing, by the data processing system, the fourth content item to the client device for insertion of a subsequent content interruption separating the second portion of the content stream from the third portion of the content stream.
At least one aspect relates to a method of distributing network traffic during streaming. A data processing system having one or more processors may provide, to each of a plurality of client devices, a first respective content container for the client device for inserting a content interrupt separating a first portion of streaming content from a second portion of streaming content. The data processing system may receive, from a first client device of the plurality of client devices, a first request for content to insert a content interrupt for playback after playback of a first respective content container during playback of the first content container. A first request for content may be generated via a first request generation policy at a first time elapsed since playback of the first content container began. The data processing system may receive, from a second client device of the plurality of client devices during playback of the second content container, a second request for content to insert the content interrupt for playback after playback of the second respective content container. A second request for content may be generated via a second request generation policy at a second time elapsed since playback of the second content container was started. The data processing system may select a second content container in response to a first request from a first client device and a third content container in response to a second request from a second client device. The data processing system may provide the second content container to the first client device during playback of the first respective content container and provide the third content container to the second client device for playback after playback of the first respective content container is completed.
In some implementations, the first respective content container provided to the first client device can be a fourth content container and the first respective content container provided to the second client device can be a fifth content container. In some implementations, providing the first respective content container may further include: the fourth content container is to be provided to the first client device at a third time during the streaming of the first portion of the content according to the container distribution policy, and the fifth content container is to be provided at a fourth time, different from the third time, during the streaming of the first portion of the content according to the container distribution policy.
In some implementations, providing the first respective content container can further include providing the first respective content container to each of the plurality of client devices. The first respective content container may include a first request specifier specifying that the client device is to send a subsequent request having content selection parameters. In some implementations, receiving the first request can further include receiving the first request from the first client device, the first request including the first content selection parameter being generated at a first time during playback of the first content container via a first request generation policy in response to a first request specifier included with the first respective content container. The first request specifier specifies that the first client device is to send a first request having first content selection parameters.
In some implementations, selecting the second content container can further include selecting the second content container based on a previous request for content inserted in a previous content break and streaming the content. Each of the previous requests is received from the first client device prior to the first request for content and includes content selection parameters. In some implementations, selecting the second content container in response to the first request from the first client device can also include selecting the second content container based on content selection parameters included in the first request. The content selection parameter may be generated by the first client device at a first time during playback of the first content container. The content selection parameters may include at least one of a reference address identifying an information resource displaying the streaming content, historical interaction data of the first client device with respect to the content, or a container reference identifying a first respective content container provided to the first client device.
In some implementations, the data processing system may determine, based on a time at which the first request was received, to generate the first request received from the first client device during playback of the first content container via the first request generation policy. In some implementations, selecting the second content container can further include: in response to determining to generate the first request received from the first client device during playback of the first content container, a second container is selected.
In some embodiments, a data processing system may maintain a request specifier log that includes a plurality of entries. Each entry of the request specifier log indicates whether the respective client device is to select the corresponding content container using the respective content selection parameter. In some implementations, the data processing system may determine, based on a first entry of a request specifier log corresponding to the first client device, that the first client device is to receive the second content container using a first content selection parameter included in the first request. In some implementations, selecting the second content container can further include: in response to determining, based on the first entry, that the first client device is to receive the second content container using the first content selection parameter, selecting the second container based on the first content selection parameter of the first request.
In some embodiments, receiving the first request may further include: a first request for a first request generation policy-generated content via a central request distribution policy is received. The central request distribution policy may specify a respective time for generating a respective request for each of the plurality of client devices. In some embodiments, receiving the second request may further include: receiving a second request for content generated by the policy via a second request generation policy of the central request for distribution of the policy.
In some implementations, the data processing system may receive, from a first client device of the plurality of client devices, a third request for content inserted into a second content break separating a second portion of the streaming content from a third portion of the streaming content during the streaming of the second portion of the content, the third request generated at a third time during the streaming of the second portion of the content via a third request generation policy. In some implementations, the data processing system may provide a fourth content container to the first client device for insertion of a subsequent content interruption that separates the second portion of the streaming content from the third portion of the streaming content.
At least one aspect relates to a system for distributing network traffic during streaming. The system may include a response manager executing on a data processing system having one or more processors. The response manager may provide, to each of the plurality of client devices, a first respective content container for the client device for inserting a content break separating a first portion of the streaming content from a second portion of the streaming content. The system may include a request processor executing on a data processing system. The request processor may receive, from a first client device of the plurality of client devices, a first request for content to insert a content interrupt for playback after playback of a first respective content container during playback of the first content container. A first request for content may be generated via a first request generation policy at a first time elapsed since playback of the first content container began. The request processor may receive, from a second client device of the plurality of client devices during playback of the second content container, a second request for content to insert the content interrupt for playback after playback of the second respective content container. A second request for content may be generated via a second request generation policy for a second time elapsed from the beginning of playback of the second content container. The system may include a content selector. The content selector selects a second content container in response to a first request from a first client device and a third content container in response to a second request from a second client device. The response manager may provide the second content container to the first client device during playback of the first respective content container and provide the third content container to the second client device for playback after playback of the first respective content container is completed.
In some implementations, the first respective content container provided to the first client device is a fourth content container and the first respective content container provided to the second client device is a fifth content container. In some implementations, the response manager can provide a fourth content container to the first client device at a third time during the streaming of the first portion of the content according to the container distribution policy. In some implementations, the response manager can provide the fifth content container at a fourth time different from the third time during the streaming of the first portion of the content according to the container distribution policy.
In some implementations, the response manager can provide a first respective content container to each of the plurality of client devices. The first respective content container may include a first request specifier specifying that the client device is to send a subsequent request having content selection parameters. In some implementations, the response manager can provide a first respective content container to each of the plurality of client devices. The first respective content container may include a first request specifier specifying that the client device is to send a subsequent request having content selection parameters.
In some implementations, a request processor may receive a first request from a first client device. The first request may include a first content selection parameter generated at a first time during playback of the first content container via a first request generation policy in response to a first request specifier included with the first respective content container. The first request specifier specifies that the first client device is to send a first request having first content selection parameters.
In some implementations, the content selector can select the second content container based on a previous request to insert content of a previous content interruption and streaming content. Each of the previous requests may be received from the first client device prior to the first request for content and may include content selection parameters.
In some implementations, the content selector can select the second content container based on a content selection parameter included in the first request. The content selection parameter may be generated by the first client device at a first time during playback of the first content container. The content selection parameters may include at least one of a reference address identifying an information resource displaying the streaming content, historical interaction data of the first client device with respect to the content, or a container reference identifying a first respective content container provided to the first client device.
In some implementations, the request processor may determine to generate the first request received from the first client device during playback of the first content container via the first request generation policy based on a time at which the first request was received. In some implementations, the content selector may select the second container in response to determining that the first request received from the first client device was generated during playback of the first content container.
In some embodiments, the response handler may maintain a request specifier log that includes a plurality of entries. Each entry of the request specifier log indicates whether the respective client device is to select the corresponding content container using the respective content selection parameter. In some implementations, based on a first entry of a request specifier log corresponding to a first client device, it is determined that the first client device is to receive a second content container using a first content selection parameter included in a first request. In some implementations, the content selector may select the second container based on the first content selection parameter of the first request in response to determining, based on the first entry, that the first client device is to receive the second content container using the first content selection parameter.
In some implementations, a request processor can receive a first request for content generated via a first request generation policy of a central request distribution policy. The central request distribution policy may specify a respective time for generating a respective request for each of the plurality of client devices. In some implementations, the request processor can receive a second request for content generated via a second request generation policy of the central request distribution policy.
In some implementations, the request processor may receive, from a first client device of the plurality of client devices during the streaming of the second portion of the content, a third request for content inserted into a second content break separating the second portion of the streaming content from the third portion of the streaming content. The third request may be generated at a third time during streaming of the second portion of the content via a third request generation policy. In some implementations, the content selector can provide a fourth content container to the first client device for insertion of a subsequent content interruption that separates the second portion of the streaming content from the third portion of the streaming content.
At least one aspect relates to a method of distributing network traffic during streaming, comprising: identifying, by a data processing system having one or more processors, a first plurality of content containers for a first client device of a plurality of client devices to insert a content break separating a first portion of streaming content and a second portion of streaming content, the first plurality of content containers being different from a second plurality of content containers for a second client device of the plurality of client devices; determining, by the data processing system, a first expected duration for each content container of the first client device to insert a content interrupt based on the first plurality of content containers, the first expected duration for the first client device being different from a second expected duration for the second client device; receiving, by the data processing system from the first client device, a first request for content to be played back after playing back the first content container for a first point of the first plurality of content containers to be inserted in the content break, the first request for content being generated at a first time different from a second time at which a second request for content to be inserted by the second client device is generated; selecting, by the data processing system in response to receipt of the first request, a first content container to be inserted into a first point of the first plurality of content containers, the first content container having a first duration corresponding to an expected duration determined for the first content container, the first duration being different from a second duration of a second content container selected for a second client device; and providing, by the data processing system, the first content container to the first client device for playback after completion of the first portion of the streaming content.
At least one aspect relates to a system for distributing network traffic during streaming, comprising: a data processing system having one or more processors coupled with a memory, configured to: identifying a first plurality of content containers for a first client device of the plurality of client devices to insert a content break separating a first portion of the streaming content and a second portion of the streaming content, the first plurality of content containers being different from a second plurality of content containers for a second client device of the plurality of client devices; determining a first expected duration for each content container of the first client device for which a content interrupt is to be inserted based on the first plurality of content containers, the first expected duration for the first client device being different from a second expected duration for the second client device; receiving, from a first client device, a first request for content to be played back subsequent to playback of the first content container for a first point of a first plurality of content containers to be inserted in the content break, the first request for content being generated at a first time different from a second time at which a second client device generates a second request for content to be inserted into at least one of a second plurality of content containers; and in response to receipt of the first request, selecting a first content container to be inserted into a first point of the first plurality of content containers, the first content container having a first duration corresponding to an expected duration determined for the first content container, the first duration being different from a second duration of a second content container selected for a second client device; and providing the first content container to the first client device for playback after completion of the first portion of the streaming content.
These and other aspects and embodiments are discussed in detail below. The foregoing information and the following detailed description include illustrative examples of various aspects and embodiments, and provide an overview or framework for understanding the nature and character of the claimed aspects and embodiments. The accompanying drawings provide an illustration and a further understanding of the various aspects and embodiments, and are incorporated in and constitute a part of this specification.
Drawings
The drawings are not intended to be drawn to scale. Like reference numbers and designations in the various drawings indicate like elements. For purposes of clarity, not every component may be labeled in every drawing. In the drawings:
FIG. 1 is a block diagram depicting a computer networking environment for distributing network traffic during streaming in accordance with an illustrative embodiment;
FIG. 2 is a block diagram depicting a flow sequence for distributing network traffic during streaming in accordance with an illustrative embodiment;
3A-3C are each a block diagram depicting a flow sequence for distributing network traffic during streaming between a multitude of client devices in accordance with an illustrative embodiment;
FIGS. 4A and 4B are a flow chart depicting a method of distributing network traffic during streaming in accordance with an illustrative embodiment; and
FIG. 5 is a block diagram illustrating a general architecture of a computer system that may be used to implement the elements of the systems and methods described and illustrated herein, in accordance with an illustrative embodiment.
Detailed Description
Following are more detailed descriptions of various concepts and embodiments related to a method, apparatus and system for distributing network traffic during streaming. The various concepts introduced above and discussed in greater detail below may be implemented in any of numerous ways, as the described concepts are not limited to any particular implementation.
In current schemes for dynamically inserting supplemental audiovisual content into streaming content, each client device provided with streaming content may generate and send a request for content to an external server upon arrival of a content interruption. The server may then use the request to select a set of content containers (pods) (e.g., audio, video, or audiovisual content items, which may be interactive or non-interactive) that are customized for each individual client device. The generation and transmission of the request may be timed immediately before the content interruption in order to transmit the latest information to select the relevant content container to be inserted at the content interruption.
For live streaming content, the content interruption may occur simultaneously on numerous client devices. In this way, all content requests from numerous client devices may arrive at the server simultaneously. Using the dependency information to select content containers to insert into the streaming content can be highly resource intensive for the server. In addition, the simultaneous or near-simultaneous arrival of requests may exacerbate consumption of computing resources at the server and available bandwidth in the network.
To reduce resource consumption at the server and bandwidth at the communication network, while simultaneously selecting the most relevant content containers to insert into the streaming video, the present system and method provide a hybrid approach. Briefly, first, a content container may be asynchronously selected for playback in a content break during a live stream. Second, when a first content container is played at the client device, another content container may be synchronously selected at any time with the latest relevance information and may be inserted into the same content interruption as the first content container.
At any time prior to the content interruption, the client device may send a request to prefetch (pre-fed) content. The first request may include a specifier (specifier) indicating that the client device is to receive the prefetched content. Upon receipt, the server may provide a response with the content container to the client device. The response may also include an specifier indicating that the client device is to send a request for supplemental content with content selection parameters in a subsequent request for insertion into an upcoming (upcoming) content interruption. Upon receipt, the client device may cache the content container in a local cache. The client device may then play the cached content container when a content interruption in the streaming content begins.
At some random point in time during the playing of the pre-fetched content container, the client device may identify relevance information based on the specifier from the previous response to insert the request for supplemental content. A random point in time may be set so that the server does not receive requests from all of the numerous client devices at once. The subsequent request for supplemental content may also include the client device receiving a specifier of the content container based on the relevance information. Upon receiving the second request, the server may select another content container using the relevance information, and may send a response to the client device that includes the selected video content container. The client device may then play the selected video content container after the prefetched video content container has completed playing.
By staggering (timing) the generation and sending of requests for supplemental content that plug in content interruptions, the number of requests to be processed at the server at any given time for the same number of client devices may be reduced. In addition, network bandwidth may be freed up and consumption of computing resources may be mitigated. Furthermore, the likelihood of delays in inserting the selected content container into the content break may also be reduced while still transmitting content customized for the client device.
Thus, the subject matter may address issues associated with delivering content to multiple devices over a computer network in response to requests from the multiple devices all occurring within a predetermined (typically short) period of time. In addition, the theme may allow content to be delivered to multiple devices based on the current status of each of the multiple devices and/or users of the devices without the devices experiencing delays in content delivery, even when each of the multiple devices all request content for a short period of time (e.g., within 0 to 60 seconds).
Referring now to FIG. 1, FIG. 1 is a block diagram depicting one embodiment of an environment for distributing network traffic during streaming in a computer network environment. The environment 100 includes at least one data processing system 110. Although only one data processing system 110 is shown, in many embodiments, the data processing system 110 may be a farm (farm), a cloud (cloud), a cluster, or other grouping of multiple data processing systems or computing devices. The data processing system 110 may include at least one processor and memory, sometimes referred to as processing circuitry, each of which is discussed in more detail below in conjunction with FIG. 5. The memory stores processor-executable instructions that, when executed by the processor, cause the processor to perform one or more operations described herein. The processor may comprise a microprocessor, an Application Specific Integrated Circuit (ASIC), a Field Programmable Gate Array (FPGA), the like, or a combination thereof. The memory may include, but is not limited to, electronic, optical, magnetic, or any other storage or transmission device capable of providing program instructions to the processor. The memory may also include a floppy disk, a CD-ROM, a DVD, a magnetic disk, a memory chip, an ASIC, an FPGA, a Read Only Memory (ROM), a Random Access Memory (RAM), an electrically erasable ROM (eeprom), an erasable-programmable ROM (eprom), a flash memory, an optical medium, or any other suitable memory from which a processor may read instructions. The instructions may include code from any suitable computer programming language.
The network 105 may include a computer network such as the internet, a local area network, a wide area network, a metropolitan area network, or other area network, an intranet, a satellite network, other computer networks such as voice or data mobile telephone communication networks, and combinations thereof. The data processing system 110 of the system 100 may communicate with, for example, at least one content container provider 115, at least one streaming content provider 120, or at least one client device 125 via the network 105. The network 105 may be any form of computer network that relays information between the content container provider 115, the data processing system 110, the client device 125, and one or more content sources (e.g., web servers, advertisement servers, etc.). For example, the network 105 may include the internet and/or other types of data networks, such as a Local Area Network (LAN), a Wide Area Network (WAN), a cellular network, a satellite network, or other types of data networks. The network 105 may also include any number of computing devices (e.g., computers, servers, routers, network switches, etc.) configured to receive and/or transmit data within the network 105. The network 105 may also include any number of hardwired and/or wireless connections. For example, the client device 125 may communicate wirelessly (e.g., via WiFi, cellular, radio, etc.) with a transceiver that is hardwired (e.g., via fiber optic cable, CAT5 cable, etc.) to other computing devices in the network 105.
The content container provider 115, the streaming content provider 120, and the client device 125 may include a processor and memory or processing circuitry, as described above and discussed in more detail in conjunction with fig. 5. The memory stores machine instructions that, when executed by the processor, cause the processor to perform one or more of the operations described herein. The processor may comprise a microprocessor, an Application Specific Integrated Circuit (ASIC), a Field Programmable Gate Array (FPGA), the like, or a combination thereof. The memory may include, but is not limited to, electronic, optical, magnetic, or any other storage or transmission device capable of providing program instructions to the processor. The memory may also include a floppy disk, a CD-ROM, a DVD, a magnetic disk, a memory chip, an ASIC, an FPGA, a Read Only Memory (ROM), a Random Access Memory (RAM), an electrically erasable ROM (eeprom), an erasable-programmable ROM (eprom), a flash memory, an optical medium, or any other suitable memory from which a processor may read instructions. The instructions may include code from any suitable computer programming language.
The content container provider 115, streaming content provider 120, and client device 125 may also include one or more user interface devices. In general, a user interface device refers to any electronic device (e.g., a keyboard, a mouse, a pointing device, a touch screen display, a microphone, etc.) that communicates data to a user by generating sensory information (e.g., a visualization on a display, one or more sounds, etc.) and/or converts sensory information received from a user into electrical signals. According to various implementations, the one or more user interface devices may be internal to the housings of the content container provider 115, the streaming content provider 120, and the client device 125 (e.g., built-in displays, microphones, etc.), or external to the housings of the content container provider 115, the streaming content provider 120, and the client device 125 (e.g., a monitor connected to the client device 125, a speaker connected to the client device 125, etc.). For example, the content container provider 115, the streaming content provider 120, and the client device 125 may include electronic displays that visually display information resources or multimedia content received from one or more content sources via the network 105 and/or from the data processing system 110. In some implementations, a content placement manager or third party content provider can communicate with the data processing system 110 via the content container provider 115. In some implementations, the content placement manager or third party content provider can communicate with the data processing system 110 via a user interface (interface) displayed on a user interface device of the content container provider 115.
The content container provider 115 may include a server or other computing device operated by a content provider entity to provide the content containers 140A-N to provide streaming content that is played on the media player 152 or another application executing on the client device 125. In some implementations, the content container provider 115 can provide a reference address (sometimes referred to as a pointer) for each corresponding content container 140A-N of the client device 125. The content container providers 115 may each include a desktop computer, a laptop computer, a tablet computer, a wearable computer, a smartphone, a personal digital assistant, a mobile device, a consumer computing device, a server, a client, a digital video recorder, a set-top box for a television, a television (e.g., a smart television), a video game console, or any other computing device configured to communicate via the network 105. The content containers 140A-N provided by the content container provider 115 may include third party content containers in various formats (e.g., text content elements, image files, audio files, video files, audiovisual files, or any other multimedia format) to display with or insert streaming content provided by the streaming content provider 120. In some implementations, the content containers 140A-N may be interactive and may include one or more user elements to trigger various functions (e.g., retrieving a target page or displaying other content within the same content container 140A-N). The content containers 140A-N associated with the content container provider 115 may be presented in content breaks between various portions of the streaming content provided by the streaming content provider 120. The content container provider 115 may maintain a database for the content containers 140A-N. Each content container 140A-N may be identified by a reference address, such as a Uniform Resource Locator (URL) or some alphanumeric identifier. The content container provider 115 may send the content containers 140A-N corresponding to a reference address (sometimes referred to as a pointer) included in the request for content.
The streaming content provider 120 may include a server or other computing device operated by a streaming content providing entity to provide the streaming content 142 to be played on a media player 152 or another application executing on the client device 125. The streaming content providers 120 may each include a desktop computer, a laptop computer, a tablet computer, a wearable computer, a smartphone, a personal digital assistant, a mobile device, a consumer computing device, a server, a client, a digital video recorder, a set-top box for a television, a television (e.g., a smart television), a video game console, or any other computing device configured to communicate via the network 105. Streaming content 142 may include one or more data packets with multimedia content. The streaming content provider 120 may sequentially send one or more data packets forming the streaming content 142 to the client device 125 via the network 105. The transmission of one or more data packets for streaming content 142 may be according to any one of a variety of communication protocols, such as User Datagram Protocol (UDP), Transmission Control Protocol (TCP), real-time streaming protocol (RTSP), real-time transport protocol (RTP), real-time transport control protocol (RTCP), hypertext transfer protocol (HTTP), and the like. In some implementations, the streaming content provider 120 can be communicatively connected to a live stream source (live stream source) 144. The live stream source 144 may include a computing device having an audio input source (e.g., a microphone or transducer) or a video input source (e.g., a video camera or a still camera, etc.). The live stream source 144 may provide the streaming content 142 to the streaming content provider 120 in the form of one or more data packets. Upon receiving the data packets from the live stream source 144, the streaming content provider 120 may transmit one or more data packets of the streaming content 142 to the client device 125 via the network 105. The streaming content provider 120 may maintain a database for the streaming content 142. The streaming content 142 may be identified by a reference address, such as a Uniform Resource Locator (URL) or some alphanumeric identifier.
The client device 125 may include a computing device for communicating via the network 105 to display data, such as streaming content 142 from the streaming content provider 120 and content containers 140A-N from the content container provider 115. Client devices 125 may each include a desktop computer, laptop computer, tablet computer, wearable computer, smartphone, personal digital assistant, mobile device, consumer computing device, server, client, digital video recorder, set-top box for a television, television (e.g., smart television), video game console, or any other computing device configured to communicate via network 105. Client device 125 may be a communication device through which an end user may submit requests for various types of content, such as information resources (e.g., web pages) and multimedia content (e.g., streaming content 142).
The data processing system 110 may include at least one server. In some embodiments, the data processing system 110 may include a plurality of servers located in at least one data center or server farm. In some implementations, the data processing system 110 can include a content placement system. In some implementations, the data processing system 110 can include at least one script provider 128, at least one policy generator 130, at least one request processor 132, at least one content selector 134, at least one response processor 136. The data processing system 110 may also include one or more content repositories or databases 138. In some implementations, the content container provider 115 can be part of the data processing system 110. The entity associated with the content container provider 115 may be the same entity associated with the data processing system 110. In some implementations, the streaming content provider 120 may be part of the data processing system 110. The entity associated with the streaming content provider 120 may be the same entity associated with the data processing system 110. In some implementations, the data processing system 110 can combine the streaming content 142 provided by the streaming content provider 142 with the content containers 140A-N provided by the content container provider 115. The streaming content 142 may disseminate the content containers 140A-N at pre-designated content breaks. The data processing system 110 can stream the combination of the streaming content 142 and the content containers 140A-N to the client device 125 via the network 105.
The script provider 128, the policy generator 130, the request processor 132, the content selector 134, and the response processor 136 may each include at least one processing unit, server, virtual server, circuit, engine, agent, device, or other logic device, such as a programmable logic array, configured to communicate with the database 138 and with other computing devices (such as the content container provider 115, the streaming content provider 120, and the client device 125) via the network 105. The script provider 128, the policy generator 130, the request processor 132, the content selector 134, and the response processor 136 may each include or execute at least one computer program or at least one script. Script provider 128, policy generator 130, request processor 132, content selector 134, and response processor 136 may be separate components, a single component, or part of data processing system 110. The script provider 128, the policy generator 130, the request processor 132, the content selector 134, and the response processor 136 may include a combination of software and hardware, such as one or more processors configured to execute one or more scripts.
The data processing system 110 may also include one or more content repositories or databases 138. The database 138 may be local to the data processing system 110. In some implementations, the database 138 may be remote to the data processing system 110, but may be in communication with the data processing system 110 via the network 105. The database 138 may include content containers 140A-N provided by the content container provider 115 or a reference address identifying each content container 140A-N. The database 138 may include streaming content 142 provided by the streaming content provider 142 or a reference address identifying each streaming content 142. The database 138 may also include a request distribution policy and a predefined request generation time to insert content interruptions into each streaming content 142 for inserting content containers 140A-N, and so on. Additional details of the contents of database 138 will be provided below.
The script provider 128 may send the stream processor script 150 to the client device 125 in response to receiving a request from the client device 125. In some implementations, the request can correspond to a request to stream the content. An application executing on a client device 125 (e.g., a web browser) may generate and send a request for streaming content to the script provider 128 for display. In some implementations, the request can correspond to a request for code. When the request corresponds to a request for code, the streaming content 142 may have been provided on a separate application running on the client device 125. In either case, the request may include a reference address identifying the streaming content 142 that is playing or is to be provided on the client device 125. The script provider 128 may parse the reference address to identify the streaming content provider 120 and the streaming content 142.
Through the identification of streaming content 142, the script provider 128 may define one or more streaming content portions 156A-N of the streaming content 142. Each streaming content portion 156A-N may correspond to a partition of the primary streaming content 142 from the streaming content provider 120 or a subset of one or more data packets forming the streaming content 142. The script provider 128 may also define one or more content interrupts 158A-N for the streaming content 142. The one or more content interruptions 158A-N may correspond to the time the content container 140A-N was inserted and the length of time for playback of the content container 140A-N at the client device 125. The one or more content interruptions 158A-N may be interleaved (interleaved) with the one or more streaming content portions 156A-N of the streaming content 142. One or more content interruptions 158A-N may occur simultaneously on multiple client devices 125 receiving and playing streaming content 142. Due to delays in the network 105 or consumption of computing resources at each client device 125, one or more content interruptions 158A-N may occur at substantially the same (e.g., 66-99% similar) times across multiple client devices 125 receiving and playing the streaming media content 142. The one or more content interruptions 158A-N may have the same length of time on the plurality of client devices 125 that receive and play the streaming content 142. Due to delays in the network 105 or consumption of computing resources at each client device 125, the one or more content interruptions 158A-N may have substantially the same (e.g., 66-99% similar) length of time across the plurality of client devices 125 receiving and playing the streaming content 142. In some implementations, the streaming content portions 156A-N and the content interruptions 158A-N may be preset by the streaming content provider 120 or the script provider 128. In some implementations, the streaming content portions 156A-N and the content interruptions 158A-N may be dynamically set by the streaming content provider 120 or the script provider 128 as the streaming content 142 is transmitted to the client device 125. When streaming content 142 is transmitted via network 105, streaming content provider 120 may send a content interruption indicator to script provider 128 or to receiving client device 125 to insert content interruptions 158A-N. The content break indicator may specify a time at which the content breaks 158A-N are to be inserted into the streaming content 142. The time at which the content interrupts 158A-N are inserted may be related to a current time from the beginning of one of the streaming content 142 or the streaming content portions 156A-N as measured by a timer maintained at the client device 125, the streaming content provider 120, or the data processing system 110.
Additionally, the script provider 128 may generate a stream processor script 150. Stream processor script 150 may include a request generator 160, a container inserter 162, a request generation policy 164, and the like. In some implementations, the streaming processor script 150 can include a media player 152 to play the streaming content 142 from the streaming content provider 120. Media player 152 may include a reference address that identifies streaming content 142 to be provided to client device 125. In some implementations, the media player 152 may be separate from the stream processor script 150 and may interface with the stream processor script 150 (interface). In some embodiments, the stream processor script 150 may also include definitions of one or more streaming content portions 156A-N and one or more interrupts 158A-N in the streaming content 142. In some embodiments, the stream processor script 150 may also include a request specifier. The request specifier may specify whether the client device 125 sends a request for content with content selection parameters. The request specifier may be initially set to a first value that instructs the client device 125 to send a request for content without the content selection parameter and then set to a second value that instructs the client device 125 to send a request for content with the content selection parameter. In some embodiments, the request specifier may be maintained at the database 138. The media player 152, the request generator 160, and the container inserter 162 may each include at least one processing unit, server, virtual server, circuit, engine, agent, device, or other logic device, such as a programmable logic array, configured to communicate with other computing devices, such as the data processing system 110, the content container provider 115, and the streaming content provider 120, via the network 105.
For inclusion in the stream processor script 150, the policy generator 130 may determine a request of the client device 125 to generate the policy 164. The request generation policy 164 of the client device 125 may be part of a central request distribution policy maintained at the database 138. In some implementations, the request generation policy 164 can specify a number of predefined request generation times at which the request generator 160 of the stream processor script 150 will generate and send requests for content to insert the content into the content interrupts 158A-N. A request for content inserted into the content interrupts 158A-N (sometimes referred to as a request to prefetch content) may be generated during one of the streaming content portions 156A-N of the streaming content 142. A request for content inserted into a content interrupt 158A-N (sometimes referred to as a real-time request) may be generated during playback of another content container 140A-N during one of the content interrupts 158A-N. The policy generator 130 may determine a predefined request generation time based on the occurrence times of the streaming content portions 156A-N and the content interruptions 158A-N. In some implementations, the functions of the policy generator 130 may be performed by the client device 125 after the client device 125 receives the stream processor script 150. Upon receiving the stream processor script 150, the client device 125 may perform the functions of the policy generator 130 to generate a plurality of predefined request generation times for the request generation policy 164.
To determine a predefined request generation time at which to generate a request for content during one of the streaming content portions 156A-N of the streaming content 142, the policy generator 130 may identify a start time and a stop time of the corresponding streaming content portion 156A-N of the streaming content 142. The start time may correspond to the time at which the corresponding streaming content portion 156A-N is to begin playing, and the previous content interruption 158A-N may precede it. The expiration time may correspond to a time at which the corresponding streaming content portion 156A-N is to end play, and the subsequent content interruption 158A-N may follow. The policy generator 130 may determine a predefined request generation time between the start time and the end time of the corresponding streaming content portions 156A-N. The policy generator 130 may determine a predefined request generation time for a request generation policy 164 for a particular client device 125, causing at least one client device 125 to generate a request for content that is different from at least one other client device 125. In some implementations, the policy generator 130 can generate a random probability distribution (e.g., uniform, chi-squared, normal, or poisson, etc.) corresponding to the start and end times of the streaming content portions 156A-N. The policy generator 130 may further generate a random probability distribution based on the plurality of client devices 125 receiving the streaming content 142. Using a random probability distribution, the policy generator 130 may determine a predefined request generation time for a particular client device 125. In some implementations, the policy generator 130 may use a random number generator to generate a predefined request generation time for each client device 125. The expected start and end times of the corresponding streaming content portions 156A-N may be used to set the range of predefined request generation times generated by the random number generator. In some implementations, the policy generator 130 may use a predefined allocation schedule for the corresponding streaming content portions 156A-N to determine a predefined request generation time for the request generation policy 164. The predefined allocation schedule may come from a central request distribution policy maintained at the database 138. In some implementations, the policy generator 130 may set a predefined request generation time for the first streaming content portion 156A-N in the streaming content 142 to a start time of the streaming content portion 156A-N.
To determine a predefined request generation time for a request to generate content during the content interruptions 158A-N, the policy generator 130 may identify a start time and an end time for the corresponding content interruptions 158A-N. The start time may correspond to the time at which the corresponding content interrupt 158A-N is to begin playing, and the previous streaming content portion 156A-N may precede it. The expiration time may correspond to a time at which the corresponding content interrupt 158A-N is to end play, and the subsequent streaming content portions 156A-N may follow. The policy generator 130 may also determine an expected duration for each content container 140A-N to be inserted into the content interruptions 158A-N. To determine the expected duration, the policy generator 130 may identify a schedule of content containers 140A-N to be inserted into the content interruptions 158A-N. The schedule may be predetermined by the streaming content provider 120 and may indicate a number of content containers 140A-N to insert into each content break 158A-N. Based on the schedule, the policy generator 130 may determine an expected duration for each of the content containers 140A-N in the corresponding content interruptions 158A-N. Using the start time and the end time of the content interruptions 158A-N, the policy generator 130 may determine an expected start time and an estimated end time for each content container 140A-N to be inserted into the content interruptions 158A-N. In some implementations, the policy generator 130 may use a predefined allocation schedule for the corresponding content interrupts 158A-N to determine a predefined request generation time for the request generation policy 164. The predefined allocation schedule may come from a central request distribution policy maintained at the database 138.
After identifying the start time and the end time of the content interrupts 158A-N and the expected start time and end time of the content containers 140A-N, the script provider may determine a predefined request generation time for the request generation policy 164 between the start time and the end time of each content interrupt 158A-N. The policy generator 130 may determine a predefined request generation time for the request generation policy 164 for a particular client device 125, causing at least one client device 125 to generate a request for content that is different from at least one other client device 125. In some implementations, the policy generator 130 can generate a random probability distribution (e.g., uniform, chi-squared, normal, or poisson, etc.) based on the expected start time and the expected end time of the corresponding content container 140A-N. The policy generator 130 may further generate a random probability distribution based on the plurality of client devices 125 receiving the streaming content 142. In some implementations, the policy generator 130 may generate a predefined request generation time for each client device 125 using a random number generator. The expected start time and end time of the corresponding content container 140A-N may be used to set the range of predefined request generation times generated by the random number generator. Using a random probability distribution, the policy generator 130 may determine a predefined request generation time for a particular client device 125.
By generating the stream processor script 150, the script provider 128 may transmit the stream processor script 150 to the client device 125 via the network 105. Upon receiving the stream processor script 150, the client device 125 may execute the stream processor script 150. Upon running the streaming processor script 150, the media player 152 may initiate retrieval of the streaming content 142 from the streaming content provider 120 as identified by the reference address and play the streaming content 142 on the client device 125. In some implementations, the media player 152 can initiate retrieval of the streaming content 142 by playing the first streaming content portion 156A-N of the streaming content 142. The media player 152 may continuously receive one or more data packets forming the streaming content 142 from the streaming content provider 120. As previously described, in some implementations, the client device 125 may perform the functions of the policy generator 130 on the client device 125 itself to generate the request generation policy 164.
As streaming content 142 is continuously received from streaming content provider 120, request generator 160 may generate a request to insert content into content interruptions 158A-N in accordance with request generation policy 164. The request generator 160 may identify a current time within the playback of the streaming content 142. The current time may indicate an amount of time that the streaming content provider 120 has elapsed since the start time of the streaming content 142. The start time and the elapsed time from the start time of the streaming content may be the same or substantially similar (e.g., 66-99% similar) among the plurality of client devices 125 receiving the streaming content 142. In some implementations, the request generator 160 may maintain a timer to keep track of the current time of playback of the streaming content 142 from the beginning of the streaming content 142. In some implementations, the request generator 160 can identify the current time of the streaming content 142 from timestamps included in one or more data packets forming the streaming content 142. Having an identifier of the current time within the streaming content 142, the request generator 160 compares the current time to one of the predefined request generation times specified by the request generation policy 164. The request generator 160 may determine that the current time does not match one of the predefined request generation times specified by the request generation policy 164. If the current time does not match one of the predefined request generation times, the request generator 160 may continue to monitor the current time and compare the current time to one of the predefined request generation times specified by the request generation policy 164.
On the other hand, the request generator 160 may determine that the current time matches one of the predefined request generation times specified by the request generation policy 164. If the current time matches one of the predefined request generation times, the request generator 160 may generate a request for content for insertion into the content interrupts 158A-N. The request for content may include a device identifier corresponding to client device 125, a reference address identifying streaming content 142, a request specifier, a generated timestamp, a time remaining in streaming content portions 156A-N, a time remaining in content interruptions 158A-N, a sequence number or content selection parameter for indexing the request, and so forth. As previously discussed, the predefined request generation time specified by the request generation policy 164 may be during the streaming of one of the content portions 156A-N or one of the content interruptions 158A-N. Thus, if the current time is during one of the streaming content portions 156A-N, the generation of the request for content may be during playback of the streaming content 142. The request for the content itself may itself be used to insert the content container 140A-N into the content interruption 158A-N and playback after the media player 152 is playing the current streaming content portion 156A-N. Conversely, if the current time is during one of the content interruptions 158A-N, the request to generate content may be during playback of one of the content containers 140A-N. The request for the content itself may itself be used to insert and playback the content container 140A-N after playback of the current content container 140A-N being played by the media player 152. After generating the request for content, the request generator 160 may send the request for content to the data processing system 110 via the network 105.
In generating a request for content inserted into the content interrupts 158A-N, the request generator 160 may identify a request specifier. The request specifier and stream processor script 150 may be initially received from the script provider 128. As previously described, the request specifier may specify whether the request for content is to be sent with the content selection parameters. The request generator 160 may determine whether the request specifier specifies that a request for content is to be sent with content selection parameters. If the request specifier specifies that the request for content is not sent with content selection parameters, the request generator 160 may send a request for content inserted into the content interruptions 158A-N without any content selection parameters.
Conversely, if the request specifier specifies that a request for content is to be sent with the content selection parameters, the request generator 160 may determine the content selection parameters. The content selection parameters may include various information for selecting content containers 140A-N associated with the client device 125. The content selection parameters may include a reference address identifying an information resource on which the streaming content 142 is displayed. To include as a content selection parameter, the request generator 160 may identify a reference address that identifies an information resource on which the streaming content 142 is displayed. The content selection parameters may include metadata, such as one or more tagged keywords, for the streaming content portions 156A-N prior to the content interruptions 158A-N. To include as a content selection parameter, the request generator 160 may identify metadata for the content streaming content portions 156A-N that precede the content interruptions 158A-N. The content selection parameters may also include metadata, such as one or more tagged keywords, for the content containers 140A-N that the media player 152 is playing. To include as a content selection parameter, the request generator 160 may identify metadata for the content containers 140A-N that the media player 152 is playing. The content selection parameters may also include a reference address for the content container 140A-N that the media player 152 is playing. To include as a content selection parameter, the request generator 160 may identify a reference address of the content container 140A-N that the media player 152 is playing. The content selection parameters may include historical interaction data of the client device 125 with respect to content (e.g., information resources, streaming content 142, and other content containers 140A-N). To include as a content selection parameter, the request generator 160 may retrieve historical interaction data stored locally on the client device 125. The content selection parameters may include a reference address identifying the streaming content 142. To include as a content selection parameter, the request generator 160 may identify a reference address that identifies the streaming content 142. The content selection parameters may also include a location identifier and an account profile for the client device 125.
After generating the request for content, the request generator 160 may send a request for content inserted into the content interrupts 158A-N. Request processor 132 may receive a request from client device 125 for content inserted into content interrupts 158A-N. Request processor 132 may parse a request for content received from client device 125 to identify a device identifier corresponding to client device 125, identify a reference address for streaming content 142, a request specifier, a generated timestamp, a sequence number, a time remaining in streaming content portions 156A-N, a time remaining in content interruptions 158A-N, or a content selection parameter, among others. Each time a request for content is received, request processor 132 may store a device identifier corresponding to client device 125, a reference address identifying streaming content 142, a request specifier, a generated timestamp, a sequence number, a time remaining in streaming content portions 156A-N, a time remaining in content interrupts 158A-N, or a content selection parameter in database 138. It should be noted that requests for content may be received from end client devices 125 at different times at data processing system 110 due to the request generation policy.
Upon parsing a request for content received from client device 125, request processor 132 may identify a request specifier of the request for content. Request processor 132 may then determine whether the request specifier instructs client device 125 to transmit the content selection parameters with the request. If it is determined that the request specifier indicates that the client device 125 does not send the content selection parameters, selecting the content container 140A-N provided to the client device 125 may be performed without the content selection parameters, as described in detail below. If it is determined that the request specifier indicates that the client device 125 transmits the content selection parameters, the request processor 132 may parse the request for content to identify the content selection parameters. The content selection parameters may be used to select content containers 140A-N to provide to the client device 125.
Using the device identifier of the client device 125, the request processor 132 may access a request specifier log maintained at the database 138 to identify an entry corresponding to the client device 125. From the entry of the client device 125, the request processor 132 may identify a request specifier and one or more previous content selection parameters. If the request specifier indicates that the content selection parameters are to be used in the selection of the content containers 140A-N, the request processor 132 may parse the request for content to identify the content selection parameters. The request handler 132 may store the content selection parameters in an entry. On the other hand, if the request specifier indicates that the content selection parameters are not used to select the content containers 140A-N, then selection of the content containers 140A-N may continue without using the content selection parameters from the current request.
In some implementations, upon receiving a request for content from a client device 125 via the network 105, the request processor 132 can identify a time of receipt of the request for content. The request processor 132 may also determine a current time in the playback of the streaming content 142. The current time may correspond to one of the streaming content portions 156A-N or one of the content interruptions 158A-N. Based on the identified time of receipt of the request for content and the current time in the playback of the streaming content 142, the request processor 132 may determine whether a request for content was generated at the client device 125 during one of the streaming content portions 156A-N or one of the content interruptions 158A-N. In some implementations, the request processor 132 may determine an estimated delay time between the time the request for content is generated and the time of receipt based on conditions in the network 105 (e.g., using a network ping test). Request processor 132 may subtract the estimated delay time from the receive time to calculate the time at which the request for content was generated. In some implementations, the request processor 132 can parse the request for content to identify a timestamp to determine a time at which the request was generated. If it is determined that a request for content was generated during the streaming of one of the content portions 156A-N, the request processor 132 may determine that content selection parameters are to be used to select the content containers 140A-N. Request processor 132 may parse the request for content to identify content selection parameters. If it is determined that a request for content has been generated during the streaming of one of the content portions 156A-N, the selection of the content container 140A-N may continue without using the content selection parameters from the current request.
Based on the request for content received from the client device 125, the content selector 134 may select one of the content containers 140A-N to provide to the client device 125. Content selector 134 may select content containers 140A-N based on a device identifier corresponding to client device 125, a reference address identifying streaming content 142, a request specifier, a generated timestamp, a sequence number, a time remaining in streaming content portions 156A-N, a time remaining in content interruptions 158A-N, or a content selection parameter parsed from a request for content. The content selector 134 may identify, for the client device 125, a number of content containers 140A-N available from the content container provider 115 for insertion into the content interruptions 158A-N. In some implementations, the content selector 134 can identify a plurality of content containers 140A-N having a length that is the same or shorter than the time remaining in the content interruptions 158A-N. In some implementations, the content selector 134 can identify a plurality of reference addresses for a corresponding plurality of content containers 140A-N. The content selector 134 may also identify content providing parameters for each content container 140A-N from the content container provider 115. The content providing parameters of the content containers 140A-N may include metadata (e.g., one or more tagged keywords), other reference addresses specifying the content containers 140A-N, reference addresses specifying the streaming content 142, pre-specified content history interactions, pre-specified location identifiers or pre-specified account profiles, and so forth. Using the content provision parameters and the request, the content selector 134 may select one of the identified plurality of content containers 140A-N for insertion and playback during the content interruptions 158A-N at the client device 125.
Depending on the request specifier identifier or request specifier log from the request for content, the content selector 134 may select one of the identified plurality of content containers 140A-N. If the request specifier indicates that the content selection parameters are to be used in the selection of the content containers 140A-N, the content selector 134 may select the content containers 140A-N using the content selection parameters from the request for content. The content selector 134 may determine the selection priority score based on the number of matches between the content selection parameters from the current request and the content provision parameters of the content containers 140A-N. For example, a match between a location identifier from a currently requesting client device 125 and one of the pre-specified location identifiers in the content provision parameters may result in an increase in the selection priority score. The content selector 134 may then rank the content containers 140A-N by selecting a priority number. For insertion and playback in the content interruptions 158A-N at the client device 125, the content selector 134 may select the content container 140A-N corresponding to the highest selection priority score. In some implementations, the content selector 134 can identify the reference address of the selected content container 140A-N.
On the other hand, if the request specifier indicates that the content selection parameters are not to be used in the selection of the content containers 140A-N, the content selector 134 may use the content selection parameters from a previous request for content stored on the database 138. The content selector 134 may determine the selection priority score based on a number of matches between content selection parameters from previous requests for content and content provision parameters of the content containers 140A-N. For example, a match between a location identifier from a previously requested client device 125 and one of the pre-specified location identifiers in the content provision parameters may result in an increase in the selection priority score. The content selector 134 may then rank the content containers 140A-N by selecting a priority number. For insertion and playback in the content interruptions 158A-N at the client device 125, the content selector 134 may select the content container 140A-N corresponding to the highest selection priority number of copies. In some implementations, the content selector 134 can identify the reference address of the selected content container 140A-N.
By selecting the content containers 140A-N, the response processor 136 may send a response to the client device 125. In response to the selection, the response processor 136 may generate a response to the client device 125. The response may include the selected content container 140A-N. In some implementations, the response may include the reference address of the selected content container 140A-N. The response may include a request specifier. The response processor 136 may determine a new request specifier for the request based on a request specifier from a previous request for content. If the request specifier in the previous request for content indicates that the content selection parameters are to be used, the response processor 136 may set the new request specifier to indicate that the content selection parameters are not to be used to select the next content container 140A-N. If the request specifier in the previous request for content indicates that the content selection parameters are not to be used, the response handler 136 may set the new request specifier to indicate that the content selection parameters are to be used to select the next content container 140A-N.
In some implementations, the response processor 136 may identify an elapsed time since receiving a previous content selection parameter. The response processor 136 may compare the elapsed time to a predetermined time threshold (e.g., 15 seconds to 30 minutes). If the elapsed time is greater than the predetermined time threshold, the response processor 136 may set the new request specifier to indicate that the content selection parameter is to be used to select the next content container 140A-N. Conversely, if the elapsed time is less than the predetermined time threshold, the response processor 136 may set the new request specifier to indicate that the content selection parameter is not to be used to select the next content container 140A-N. After generating the response, the response processor 136 may send the response to the client device 125 via the network 105 to play back the content container 140A-N during the content interruptions 158A-N.
In some implementations, the response processor 136 can send the response to the client device 125 according to the container distribution policy. The container distribution policy may be maintained at the database 138. The container distribution policy may specify a number of predefined container distribution times at which the response processor 136 sends responses to a particular client device 125, and the container distribution policy may be determined in a similar manner as the request generation policy 164. The predefined container distribution time may be based on the time at which the streaming content portions 156A-N and the content interruptions 158A-N occur. The response processor 136 may identify a current time during which the content 142 is streamed. The response processor 136 may compare the current time to a predefined container dispensing time of the container dispensing policy. The response processor 136 may send a response to the client device 125 if the current time matches one of the predefined container distribution times for the particular client device 125. In this manner, the amount of bandwidth consumed by responses in network 105 from data processing system 110 to client device 125 may be further reduced.
Upon receiving the response from the response processor 136, a container inserter 162 running on the client device 125 may insert the content containers 140A-N into the content interruptions 158A-N. In some implementations, the container inserter 162 may parse the response to identify a reference address corresponding to the selected content container 140A-N. Using the identified reference address, container inserter 162 may retrieve content containers 140A-N from content container provider 115. In response to receiving the response, container inserter 162 may store content containers 140A-N.
When a response is received, the media player 152 may play one of the streaming content portions 156A-N or another content container 140A-N during one of the content interruptions 158A-N. The container inserter 162 may monitor the media player 152 to identify whether one of the streaming content portions 156A-N is being played or another content container 140A-N. If one of the streaming content portions 156A-N is identified as being playing, the content inserter 162 may wait to insert the content container 140A-N until the start of the content interruption 158A-N following the currently playing streaming content portion 156A-N is detected. Upon detecting the start of the next content interruption 158A-N, the content inserter 162 may invoke the media player 152 to play back the content container 140A-N from a response following the previous streaming content portion 156A-N. If another content container 140A-N is identified for playback in the content break 158A-N, the content inserter 162 may wait until the termination of the currently playing content container 140A-N is detected to insert the content container 140A-N in response. Upon detecting the termination of the currently playing content container 140A-N, the content inserter 162 may invoke the media player 152 to play back the content container 140A-N from a response after the previous content container 140A-N.
Referring now to fig. 2, a flow sequence 200 for distributing network traffic during streaming is depicted. In the context of fig. 1, the streaming sequence 200 may correspond to the streaming content 142 played by the media player 152 at the client device 125 represented in a time sequence. The streaming sequence 200 may include a first streaming content portion 156A, followed by a content break 158A, and then a second streaming content portion 156B. The request generator 160 running on the client device 125 may generate and send requests for content according to the predefined request generation times of the request generation policy 164.
At some time during the first portion, the request generator 160 may generate and send a first request 205A for the content 205A to the data processing system 110. Subsequently, the container inserter 162 may receive the response with the first content container 140A and may insert the first content container 140A into the content break 158A for playback after the end of the first streaming content portion 156A. After playing the first streaming content portion 156A of the streaming content 142, the media player 152 may then begin playback of the first content container 140A.
While the media player 152 is playing the first content container 140A, the request generator 160 may identify whether the current time in the streaming content 142 matches one of the predefined request generation times specified by the request generation policy 164. The request generation policy 164 may specify a first delay 210A after the end of the first streaming content portion 156A to generate and send another request. At the first delay 210A, the request generator 160 may generate and send a second request 205B for content to the data processing system 110. Again, the container inserter 162 may receive the response with the second content container 140B and may insert the second content container 140B into the content break 158A for playback after the first content container 140A ends.
After the content interrupt 158A ends and during the second streaming content portion 156B, the request generator 160 may continue to identify whether the current time in the streaming content 142 matches one of the predefined request generation times specified by the request generation policy 164. The request generation policy 164 may specify a second delay 210B after the content interrupt 158A ends to generate and send another request. At the second delay 210B, the request generator 160 may generate and send a third request 205C for content to the data processing system 110 for transmission. Again, the content inserter 162 may receive the response with the third content container 140C and may insert the second content container 140 into the next content break 158B for playback after the end of the second streaming content portion 156B. This process may be repeated on successive streaming content portions 156C-N and content interruptions 158B-N.
Referring now to fig. 3A, a flow sequence 300A of distributing network traffic during streaming between a number of client devices is depicted. In the context of fig. 1, the streaming sequence 300A may correspond to the streaming content 142 being played by the media player 152 at the various client devices 125A-C in a time series representation. The predefined request generation time for the request generation policy 164 may be determined by the policy generator 130, such that requests are generated by each client device 125A-N at different times, and thus received at different times at the data processing system 110. The request generation policy 164 may specify that the first client device 125A generate a first request 205A after some predefined request generation time delay, a second request 205B after a first delay 210A after the end of the first streaming content portion 156A, and a second request 205C after a second delay 210B after the end of the content interrupt 158A. The request generation policy 164 may specify that the second client device 125B generate a first request 205A ' after some predefined request generation time delay, a second request 205B ' after a first delay 210A ' after the end of the first streaming content portion 156A, and a second request 205C ' after a second delay 210B ' after the end of the content interrupt 158A. The request generation policy 164 may specify that the third client device 125C generate a first request 205A "after some predefined request generation time delay, a second request 205B" after a first delay 210A "after the end of the first streaming content portion 156A, and a second request 205C" after a second delay 210B "after the end of the content interrupt 158A. In this manner, the data processing system 110 can receive a first plurality of requests 205A, 205A', 205A "dispersed over a first time window 305A. The data processing system 110 can receive a second plurality of requests 205B, 205B ', and 205B' dispersed over a second time window 305B. The data processing system 110 can receive a third batch of requests 205C, 205C', and 205C "dispersed over a third time window 305C. When requests for each content container 140A-C are received spread across the time windows 305A-C, the consumption of computing resources at the data processing system 110 at a single point in time may be reduced relative to having received all requests for each content container 140A-N a single time.
Referring now to fig. 3B, a flow sequence 300B for distributing network traffic during streaming between a number of client devices is shown. In the context of fig. 1, the stream sequence 300B may be a stream sequence that is streamed and played by the media player 152 at the client device 125D represented in a time sequence. In the streaming sequence 300B, although the length of the content break 158A may be the same as the previous example depicted in fig. 3A, the length of the first content container 140A may be different than the length of the second content container 140B. The predefined request generation time of the request generation policy 164 may be applicable to situations where the length of the content containers 140A and 140B provided to the client device 125D may be different.
Referring now to fig. 3C, a flow sequence 300C for distributing network traffic during streaming between a number of client devices is shown. In the context of fig. 1, stream sequence 300C may be a stream sequence that is streamed and played by media player 152 at client device 125E represented in a time sequence. In the streaming sequence 300C, the number of content containers 140A-C in the content interrupt 158A is different, although the length of the content interrupt 158A may be the same as in the previous example. The predefined request generation time of the request generation policy 164 may be applicable to situations where the number of content containers 140A-C in the content interrupt 158A may be different for one client device 125E than other client devices 125A-D as depicted in FIGS. 3A and 3B. Since there may be one additional content container 140C, the request generator 160 may generate and send another request for content 205D after another predefined request generation time delay 210D.
Referring now to fig. 4A and 4B, a flow diagram of a method 400 of distributing network traffic during streaming is depicted. The functions described herein with respect to method 400 may be performed or otherwise run by system 100 (e.g., data processing system 110, content container provider 115, streaming content provider 120, and client device 125) as shown in fig. 1, or by a computing device as shown in fig. 5, or any combination thereof.
In more detail, at step 402, the client device may play the streaming content. At step 404, the client device may identify a current time in the streaming content. At step 406, the client device may determine whether the current time matches a delay defined by the request generation policy. If the current time does not match, the client device may repeat the functions of step 404. If the current time matches, then the client device may identify the stored request specifier at step 408. At step 410, the client device may determine whether the request specifier indicates inclusion of the content selection parameter. If the request specifier indicates inclusion, the client device may identify content selection parameters at step 412. In either case, the client device may generate a request for content at step 414. The request for content may include the content selection parameters identified in step 412. At step 416, the client device may send a request for content to the data processing system.
At step 418, the data processing system may receive a request for content. At step 420, the data processing system may identify a request specifier in the request for content. At step 422, the data processing system may determine whether the request specifier indicates inclusion of the content selection parameter. If the request specifier indicates inclusion of the content selection parameter, the data processing system may identify the content selection parameter from the request for content at step 424. At step 426, the data processing system may set the subsequent request specifier to an exclude content selection parameter. If the request specifier does not indicate inclusion of the content selection parameters, then at step 428 the data processing system can set the subsequent request to include the content selection parameters. At step 430, the data processing system may select a content container. At step 432, the data processing system may generate a response with the request specifier and the selected content container. At step 434, the data processing system may send a response to the client device with the request specifier and the selected content container.
In step 436, the client device may receive a response from the data processing system with the request specifier and the selected content container. At step 438, the client device may determine whether a content chunk is currently being played. If a content chunk is not currently being played, the client device may repeat the function of step 438. If a content chunk is currently being played, the client device may determine whether another content container is currently being played, step 440. If another content container is being played, the client device may repeat the functions of step 440. If another content container is not played, the client device may play the content container from the response at step 442. At step 444, the client device may determine whether the content container is the last in the content interruption. If the currently playing content container is the last content container in the content break, the client device may repeat the functions of step 402 and repeat method 400 starting at step 402. If the currently playing content container is not the last content container in the content break, the client device may repeat the functions of step 404 and repeat method 400 starting at step 404.
Fig. 5 shows the general architecture of an illustrative computer system 500 (including data processing system 110 and its components, content container provider 115 and its components, streaming content provider 120 and its components, live stream source 144 and client device 125 and its components) that may be used to implement any of the computer systems discussed herein, in accordance with some embodiments. Computer system 500 may be used to provide information for display via network 105. The computer system 500 of fig. 5 includes one or more processors 520 communicatively coupled to memory 525, one or more communication interfaces 505, and one or more output devices 510 (e.g., one or more display units) and one or more input devices 515. Processor 520 may be included in data processing system 110 or other components of data processing system 110. The processor 520 may be included in the content container provider 115. The processor 520 may be included in the streaming content provider 120. Processor 520 may be included in client device 125 or other components of client device 125.
In computer system 500 of fig. 5, memory 525 may comprise any computer-readable storage medium and may store: computer instructions, such as processor-executable instructions, for implementing the various functions described herein for the various systems; and any data associated therewith, generated thereby, or received via the communication interface or input device (if present). Referring again to the system 100 of fig. 1, the data processing system 110 may include a memory 525 to store information regarding the availability of one or more content containers, and the like. The memory 525 may include the database 138. The processor 520 shown in fig. 5 may be used to execute instructions stored in the memory 525 and, in so doing, may also read or write from the memory various information processed and or generated in accordance with the execution of the instructions.
The processor 520 of the computer system 500 shown in fig. 5 may also be communicatively coupled to or used to control the communication interface 505 to send or receive various information in accordance with the execution of instructions. For example, communication interface 505 may be coupled to a wired or wireless network, bus, or other communication means, and thus may allow computer system 500 to send information to and receive information from other devices (e.g., other computer systems). Although not explicitly shown in the systems of fig. 1 or 5, one or more communication interfaces facilitate the flow of information between components of system 500. In some implementations, the communication interface can be configured (e.g., via various hardware or software components) to provide a website as an access portal to at least some aspects of the computer system 500. Examples of the communication interface 505 include a user interface (e.g., a web page) through which a user can communicate with the data processing system 110.
The output device 510 of the computer system 500 shown in fig. 5 may be provided, for example, to allow various information to be viewed or otherwise perceived in conjunction with executing instructions. For example, an input device 515 may be provided to allow a user to manually adjust, select, enter data, or interact with the processor in any of a variety of ways during execution of instructions. Additional information regarding the general computer system architecture that can be used with the various systems discussed herein is further provided herein.
Embodiments of the subject matter and the operations described in this specification can be implemented in digital electronic circuitry, or as computer software, firmware, or hardware embodied in tangible media, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them. Embodiments of the subject matter described in this specification can be implemented as one or more computer programs (i.e., one or more modules of computer program instructions) encoded on a computer storage medium for execution by, or to control the operation of, data processing apparatus. The program instructions may be encoded on an artificially generated propagated signal, e.g., a machine-generated electrical, optical, or electromagnetic signal, that is generated to encode information for transmission to suitable receiver apparatus for execution by the data processing apparatus. The computer storage medium can be a computer-readable storage device, a computer-readable storage substrate, a random or serial access memory array or device, or a combination of one or more of them; or may be included in a computer readable storage device, a computer readable storage substrate, a random or serial access memory array or device, or a combination of one or more of them. Further, although the computer storage medium is not a propagated signal, the computer storage medium can comprise a source or destination of computer program instructions encoded in an artificially generated propagated signal. The computer storage medium may also be or be included in one or more separate physical components or media (e.g., multiple CDs, disks, or other storage devices).
The features disclosed herein may be implemented on a smart television module (or networked television module, hybrid television module, etc.), which may include a processing module configured to integrate an internet connection with a more traditional television program source (e.g., received via cable, satellite, wireless, or other signals). The smart television module may be physically incorporated into a television set, or may comprise a separate device, such as a set-top box, blu-ray or other digital media player, game console, hotel television system, or other companion device. The smart tv module may be configured to allow viewers to search and find videos, movies, photos, and other content on the network, on local cable tv channels, on satellite tv channels, or on local hard drives. A set-top box (STB) or set-top unit (STU) may include an information appliance device that may contain a tuner and connect to a television and external signal source, converting the signal into content that is then displayed on a television screen or other display device. The smart television module may be configured to provide a home screen or top-level screen that includes icons for a number of different applications, such as a web browser and a number of streaming media services, connected cable or satellite media sources, other network "channels," and so forth. The smart television module may also be configured to provide an electronic program guide to the user. A companion application for the smart television module may operate on the mobile computing device to provide additional information to the user about available programming, allow the user to control the smart television module, and the like. In some implementations, the features may be implemented in a laptop or other personal computer, smart phone, other mobile phone, handheld computer, tablet computer, or other computing device. In some implementations, the features disclosed herein may be implemented on a wearable device or component (e.g., a smart watch) that may include a processing module configured to integrate (e.g., with another computing device or network 105) an internet connection.
The operations described in this specification may be implemented as operations performed by data processing apparatus on data stored on one or more computer-readable storage devices or data received from other sources.
The terms "data processing apparatus," "data processing system," "user device," or "computing device" include all types of apparatus, devices, and machines for processing data, including for example, programmable processors, computers, systems on a chip or multiple chips, or combinations of the foregoing. An apparatus may comprise special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit). The apparatus can include, in addition to hardware, code that creates an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, a cross-platform runtime environment, a virtual machine, or a combination of one or more of them. The apparatus and execution environment may implement a variety of different computing model infrastructures, such as web services, distributed computing, and grid computing infrastructures. The script provider 128, the policy generator 130, the request processor 132, the content selector 134, and the response processor 136 may include or share one or more data processing apparatus, computing devices, or processors.
A computer program (also known as a program, software application, script, or code) can be written in any form of programming language, including compiled or interpreted languages, declarative or procedural languages; and can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, object, or other unit suitable for use in a computing environment. A computer program may, but need not, correspond to a file in a file system. A program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub programs, or portions of code). A computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
The processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform actions by operating on input data and generating output. The processes and logic flows can also be performed by, and apparatus can also be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).
Processors suitable for the execution of a computer program include, by way of example, both general and special purpose microprocessors, and any one or more processors of any kind of digital computer. Generally, a processor will receive instructions and data from a read-only memory or a random access memory or both. The essential elements of a computer are a processor for performing actions in accordance with the instructions and one or more memory devices for storing instructions and data. Generally, a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks. However, a computer need not have such devices. Further, the computer may be embedded in another device, e.g., a mobile telephone, a Personal Digital Assistant (PDA), a mobile audio or video player, a game console, a Global Positioning System (GPS) receiver, or a portable storage device (e.g., a Universal Serial Bus (USB) flash drive). Devices suitable for storing computer program instructions and data include all forms of non-volatile memory, media and memory devices, including by way of example semiconductor memory devices (e.g., EPROM, EEPROM, and flash memory devices); magnetic disks (e.g., internal hard disks or removable disks); magneto-optical disks; and CD ROM and DVD-ROM disks. The processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
To provide for interaction with a user, embodiments of the subject matter described in this specification can be implemented on a computer having a display device (e.g., a CRT (cathode ray tube), plasma, or LCD (liquid crystal display) monitor) for displaying information to the user and a keyboard and a pointing device (e.g., a mouse or a trackball) by which the user can provide input to the computer. Other types of devices may also be used to provide for interaction with a user. For example, feedback provided to the user can include any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback, and input from the user can be received in any form, including acoustic, speech, or tactile input. Further, the computer may interact with the user by sending and receiving documents to and from the device used by the user, for example, by sending web pages to a web browser on the user's client device in response to requests received from the web browser.
Implementations of the subject matter described in this specification can be implemented in a computing system that includes a back-end component (e.g., as a data server), or that includes a middleware component (e.g., an application server), or that includes a front-end component (e.g., a client computer having a graphical user interface or a web browser through which a user can interact with an implementation of the subject matter described in this specification), or any combination of one or more such back-end, middleware, or front-end components. The components of the system can be interconnected by any form or medium of digital data communication, e.g., a communication network. Examples of communication networks include a local area network ("LAN") and a wide area network ("WAN"), the Internet (e.g., the Internet), and peer-to-peer networks (e.g., ad hoc peer-to-peer networks).
A computing system, such as system 500 or system 100, may include clients and servers. For example, the data processing system 110 may include one or more data centers or one or more servers in a server farm. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other. In some implementations, the server sends data (e.g., HTML pages) to the client device (e.g., for the purpose of displaying data to and receiving user input from a user interacting with the client device). Data generated at the client device (e.g., a result of the user interaction) may be received at the server from the client device.
While this specification contains many specific implementation details, these should not be construed as limitations on the scope of any invention or of what may be claimed, but rather as descriptions of features specific to particular implementations of the systems and methods described herein. Certain features that are described in this specification in the context of separate embodiments can also be implemented in combination in a single embodiment. Conversely, various features that are described in the context of a single embodiment can also be implemented in multiple embodiments separately or in any suitable subcombination. Furthermore, although features may be described above as acting in certain combinations and even initially claimed as such, one or more features from a claimed combination can in some cases be excised from the combination, and the claimed combination may be directed to a subcombination or variation of a subcombination.
Similarly, while operations are depicted in the drawings in a particular order, this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order, or that all illustrated operations be performed, to achieve desirable results. In some cases, the actions recited in the claims can be performed in a different order and still achieve desirable results. In addition, the processes depicted in the accompanying figures do not necessarily require the particular order shown, or sequential order, to achieve desirable results.
In certain situations, multitasking and parallel processing may be advantageous. Moreover, the separation of various system components in the embodiments described above should not be understood as requiring such separation in all embodiments, and it should be understood that the described program components and systems can generally be integrated together in a single software product or packaged into multiple software products. The script provider 128, the policy generator 130, the request processor 132, the content selector 134, and the response processor 136 may be part of the data processing system 110, a single module, a logic device with one or more processing modules, one or more servers, or part of a search engine.
Having now described some illustrative embodiments and implementations, it is apparent that the foregoing is illustrative and not limiting, having been presented by way of example. In particular, although many of the examples presented herein involve specific combinations of method acts or system elements, those acts and those elements may be combined in other ways to accomplish the same objectives. Acts, elements and features discussed only in connection with one embodiment are not intended to be excluded from a similar role in other embodiments or implementations.
The phraseology and terminology used herein is for the purpose of description and should not be regarded as limiting. The use of "including," "comprising," "having," "containing," "involving," "characterized by," and variations thereof herein, is meant to encompass the items listed thereafter and equivalents thereof as well as additional items and alternative embodiments that consist only of the items listed thereafter. In one embodiment, the systems and methods described herein include one, each combination of more than one, or all of the described elements, acts, or components.
Any reference to embodiments or elements or acts of the systems and methods referred to herein in the singular may also encompass embodiments comprising a plurality of these elements, and any plural reference to any embodiment or element or act herein may also encompass embodiments comprising only a single element. Reference to the singular or plural form is not intended to limit the presently disclosed systems or methods, their components, acts or elements to a single or multiple configurations. A reference to any action or element based on any information, action, or element may include an implementation in which the action or element is based, at least in part, on any information, action, or element.
Any embodiment disclosed herein may be combined with any other embodiment, and references to "an embodiment," "some embodiments," "an alternate embodiment," "various embodiments," "one embodiment," or the like are not necessarily mutually exclusive and are intended to indicate that a particular feature, structure, or characteristic described in connection with the embodiment may be included in at least one embodiment. The terms used herein do not necessarily all refer to the same embodiment. Any embodiment may be combined with any other embodiment, inclusively or exclusively, in any manner consistent with aspects and embodiments disclosed herein.
References to "or" may be construed as inclusive such that any term described using "or" may indicate any of the individual, more than one, and all of the terms described.
Where technical features in the drawings, detailed description or any claim are followed by reference signs, the reference signs have been included for the sole purpose of increasing the intelligibility of the drawings, detailed description, and claims. Accordingly, neither the reference numerals nor their absence have any limiting effect on the scope of any claim element.
The systems and methods described herein may be embodied in other specific forms without departing from the characteristics of the systems and methods described herein. Although the examples provided herein relate to distributing network traffic and deploying countermeasures thereto during streaming, the systems and methods described herein may include application to other environments. The foregoing implementations are illustrative and not limiting of the described systems and methods. The scope of the systems and methods described herein is, therefore, indicated by the appended claims rather than by the foregoing description, and all changes that come within the meaning and range of equivalency of the claims are intended to be embraced therein.
Claims (20)
1. A method of distributing network traffic during streaming, comprising:
identifying, by a data processing system having one or more processors, a first plurality of content containers for a first client device of a plurality of client devices to insert a content break separating a first portion of streaming content and a second portion of streaming content, the first plurality of content containers being different from a second plurality of content containers for a second client device of the plurality of client devices;
determining, by the data processing system, a first expected duration for each content container of the first client device to insert a content interrupt based on the first plurality of content containers, the first expected duration for the first client device being different from a second expected duration for the second client device;
receiving, by the data processing system from the first client device, a first request for content to be played back after playing back the first content container for a first point of the first plurality of content containers to be inserted in the content break, the first request for content being generated at a first time different from a second time at which a second request for content to be inserted by the second client device is generated;
selecting, by the data processing system in response to receipt of the first request, a first content container to be inserted into a first point of the first plurality of content containers, the first content container having a first duration corresponding to an expected duration determined for the first content container, the first duration being different from a second duration of a second content container selected for a second client device; and
the first content container is provided by the data processing system to the first client device for playback after completion of the first portion of the streaming content.
2. The method of claim 1, wherein providing the first content container further comprises: a first content container is provided to a first client device according to a container distribution policy.
3. The method of claim 1, wherein providing the first content container further comprises: a first content container is provided to a first client device of the plurality of client devices, the first content container including a first request specifier specifying that the first client device is to send a subsequent request having content selection parameters.
4. The method of claim 1, wherein receiving a first request further comprises: a first request is received from a first client device, the first request including first content selection parameters generated at a first time in response to a first request specifier included with a first content container, the first request specifier specifying that the first client device is to send the first request with the first content selection parameters.
5. The method of claim 1, wherein selecting a first content container further comprises: the first content container is selected based on a previous request for content inserted in a previous content interruption and streaming content, each of the previous requests received from the first client device prior to the first request for content and including content selection parameters.
6. The method of claim 1, wherein selecting the first content container in response to the first request from the first client device further comprises: the first content container is selected based on content selection parameters included in the first request, the content selection parameters including at least one of a reference address identifying an information resource displaying the streaming content, historical interaction data of the first client device with respect to the content, or a container reference identifying a previous content container provided to the first client device.
7. The method of claim 1, further comprising:
determining, by the data processing system based on the time at which the first request was received, to generate the first request received from the first client device during playback of the previous content container via a first request generation policy; and
wherein selecting the first content container further comprises: the first content container is selected in response to determining that a first request received from the first client device was generated during playback of a previous content container.
8. The method of claim 1, further comprising:
maintaining, by a data processing system, a request specifier log comprising a plurality of entries, each entry of the request specifier log indicating whether a first client device is to select a corresponding content container using a respective content selection parameter;
determining, by the data processing system, that the first client device is to receive the first content container using a first content selection parameter included in the first request based on a first entry of a request specifier log corresponding to the first client device; and
wherein selecting the first content container further comprises: in response to determining, based on the first entry, that the first client device is to receive the first content container using the first content selection parameter, the first content container is selected based on the first content selection parameter of the first request.
9. The method of claim 1, wherein receiving a first request further comprises: a first request for content generated via a central request distribution policy specifying respective times for generating respective requests for each of a plurality of client devices is received.
10. The method of claim 1, wherein identifying a first plurality of content containers further comprises: a plurality of content containers are identified based on a schedule of content containers to be inserted into a content break of a first client device.
11. A system for distributing network traffic during streaming, comprising:
a data processing system having one or more processors coupled with a memory, configured to:
identifying a first plurality of content containers for a first client device of the plurality of client devices to insert a content break separating a first portion of the streaming content and a second portion of the streaming content, the first plurality of content containers being different from a second plurality of content containers for a second client device of the plurality of client devices;
determining a first expected duration for each content container of the first client device for which a content interrupt is to be inserted based on the first plurality of content containers, the first expected duration for the first client device being different from a second expected duration for the second client device;
receiving, from a first client device, a first request for content to be played back subsequent to playback of the first content container for a first point of a first plurality of content containers to be inserted in the content break, the first request for content being generated at a first time different from a second time at which a second client device generates a second request for content to be inserted into at least one of a second plurality of content containers; and
in response to receipt of the first request, selecting a first content container to be inserted into a first point of the first plurality of content containers, the first content container having a first duration corresponding to an expected duration determined for the first content container, the first duration being different from a second duration of a second content container selected for a second client device; and
the first content container is provided to the first client device for playback after completion of the first portion of the streaming content.
12. The system of claim 11, wherein the data processing system is further configured to: a first content container is provided to a first client device according to a container distribution policy.
13. The system of claim 11, wherein the data processing system is further configured to: a first content container is provided to a first client device of the plurality of client devices, the first content container including a first request specifier specifying that the first client device is to send a subsequent request having content selection parameters.
14. The system of claim 11, wherein the data processing system is further configured to: a first request is received from a first client device, the first request including first content selection parameters generated at a first time in response to a first request specifier included with a first content container, the first request specifier specifying that the first client device is to send the first request with the first content selection parameters.
15. The system of claim 11, wherein the data processing system is further configured to: the first content container is selected based on a previous request for content to insert a previous content interruption and streaming content, each of the previous requests received from the first client device prior to the first request for content and including content selection parameters.
16. The system of claim 11, wherein the data processing system is further configured to: the first content container is selected based on content selection parameters included in the first request, the content selection parameters including at least one of a reference address identifying an information resource displaying the streaming content, historical interaction data of the first client device with respect to the content, or a container reference identifying a previous content container provided to the first client device.
17. The system of claim 11, wherein the data processing system is further configured to:
determining, based on a time at which the first request was received, to generate the first request received from the first client device during playback of the previous content container via a first request generation policy; and
the first content container is selected in response to determining that a first request received from the first client device was generated during playback of a previous content container.
18. The system of claim 11, wherein the data processing system is further configured to:
maintaining a request specifier log comprising a plurality of entries, each entry of the request specifier log indicating whether the first client device is to select a corresponding content container using a respective content selection parameter;
determining, based on a first entry of a request specifier log corresponding to the first client device, that the first client device is to receive a first content container using a first content selection parameter included in the first request; and
in response to determining, based on the first entry, that the first client device is to receive the first content container using the first content selection parameter, the first content container is selected based on the first content selection parameter of the first request.
19. The system of claim 11, wherein the data processing system is further configured to:
a first request for content generated by a central request distribution policy specifying a respective time for generating a respective request for each of a plurality of client devices is received.
20. The system of claim 11, wherein the data processing system is further configured to: a plurality of content containers are identified based on a schedule of content containers to be inserted into a content break of a first client device.
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
CN202110275098.1A CN113099246B (en) | 2017-10-25 | 2017-10-25 | Network traffic distribution for streaming content |
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
CN201780074303.XA CN110024411B (en) | 2017-10-25 | 2017-10-25 | Network traffic distribution for streaming content |
CN202110275098.1A CN113099246B (en) | 2017-10-25 | 2017-10-25 | Network traffic distribution for streaming content |
PCT/US2017/058235 WO2019083520A1 (en) | 2017-10-25 | 2017-10-25 | Distribution of network traffic for streaming content |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201780074303.XA Division CN110024411B (en) | 2017-10-25 | 2017-10-25 | Network traffic distribution for streaming content |
Publications (2)
Publication Number | Publication Date |
---|---|
CN113099246A true CN113099246A (en) | 2021-07-09 |
CN113099246B CN113099246B (en) | 2023-09-15 |
Family
ID=60268510
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN202110275098.1A Active CN113099246B (en) | 2017-10-25 | 2017-10-25 | Network traffic distribution for streaming content |
CN201780074303.XA Active CN110024411B (en) | 2017-10-25 | 2017-10-25 | Network traffic distribution for streaming content |
Family Applications After (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201780074303.XA Active CN110024411B (en) | 2017-10-25 | 2017-10-25 | Network traffic distribution for streaming content |
Country Status (4)
Country | Link |
---|---|
US (1) | US11184669B2 (en) |
EP (2) | EP3533228B1 (en) |
CN (2) | CN113099246B (en) |
WO (2) | WO2019083520A1 (en) |
Families Citing this family (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
EP3864853A4 (en) * | 2018-10-11 | 2022-07-06 | Invidi Technologies Corporation | Method and apparatus for combining metadata and content stream manifest files for processing on client devices |
US20210109822A1 (en) * | 2019-10-11 | 2021-04-15 | EMC IP Holding Company LLC | Systems and methods for backup and restore of container-based persistent volumes |
US11899757B2 (en) * | 2019-12-02 | 2024-02-13 | Cox Automotive, Inc. | Systems and methods for temporary digital content sharing |
JP2022012403A (en) * | 2020-07-01 | 2022-01-17 | キヤノン株式会社 | Program, information processing device, and control method |
US11574065B1 (en) * | 2021-05-13 | 2023-02-07 | Skypod, LLC | Parameter-triggered multimedia sharing system |
US11914637B2 (en) * | 2022-07-25 | 2024-02-27 | Sap Se | Image scaling cloud database |
Citations (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20120047531A1 (en) * | 2010-08-20 | 2012-02-23 | Mark Kenneth Eyer | Server Load Balancing for Interactive Television |
US20150325268A1 (en) * | 2014-05-12 | 2015-11-12 | Penthera Partners, Inc. | Downloading videos with commercials to mobile devices |
CN105340244A (en) * | 2013-06-27 | 2016-02-17 | 思科技术公司 | Dynamic content distribution network selection based on context from transient criteria |
CN107005616A (en) * | 2015-07-14 | 2017-08-01 | 谷歌公司 | For providing the system and method for calling context to content provider |
Family Cites Families (10)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
TW416224B (en) * | 1998-07-07 | 2000-12-21 | United Video Properties Inc | Interactive television program guide system with local advertisements |
US6704930B1 (en) * | 1999-04-20 | 2004-03-09 | Expanse Networks, Inc. | Advertisement insertion techniques for digital video streams |
US7228555B2 (en) * | 2000-08-31 | 2007-06-05 | Prime Research Alliance E., Inc. | System and method for delivering targeted advertisements using multiple presentation streams |
US6615039B1 (en) * | 1999-05-10 | 2003-09-02 | Expanse Networks, Inc | Advertisement subgroups for digital streams |
US20040268387A1 (en) * | 2001-06-11 | 2004-12-30 | Bertrand Wendling | Field of programme delivery |
US20040194130A1 (en) * | 2003-03-07 | 2004-09-30 | Richard Konig | Method and system for advertisement detection and subsitution |
EP1842369B1 (en) * | 2005-01-12 | 2020-04-08 | Invidi Technologies Corporation | Targeted impression model for broadcast network asset delivery |
US8566867B1 (en) * | 2012-04-03 | 2013-10-22 | Google Inc. | Pre-fetch ads while serving ads in live stream |
US9420351B2 (en) * | 2014-06-06 | 2016-08-16 | Google Inc. | Systems and methods for prefetching online content items for low latency display to a user |
US9674567B1 (en) * | 2015-07-23 | 2017-06-06 | BlackArrow | Addressable linear digital advertising system utilizing CPE splicer |
-
2017
- 2017-10-25 US US16/462,398 patent/US11184669B2/en active Active
- 2017-10-25 CN CN202110275098.1A patent/CN113099246B/en active Active
- 2017-10-25 CN CN201780074303.XA patent/CN110024411B/en active Active
- 2017-10-25 EP EP17794881.7A patent/EP3533228B1/en active Active
- 2017-10-25 WO PCT/US2017/058235 patent/WO2019083520A1/en unknown
- 2017-10-25 EP EP21182732.4A patent/EP3908005A1/en active Pending
-
2018
- 2018-06-15 WO PCT/US2018/037942 patent/WO2019083570A1/en active Application Filing
Patent Citations (5)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20120047531A1 (en) * | 2010-08-20 | 2012-02-23 | Mark Kenneth Eyer | Server Load Balancing for Interactive Television |
US20150046942A1 (en) * | 2010-08-20 | 2015-02-12 | Sony Corporation | Server load balancing for interactive television |
CN105340244A (en) * | 2013-06-27 | 2016-02-17 | 思科技术公司 | Dynamic content distribution network selection based on context from transient criteria |
US20150325268A1 (en) * | 2014-05-12 | 2015-11-12 | Penthera Partners, Inc. | Downloading videos with commercials to mobile devices |
CN107005616A (en) * | 2015-07-14 | 2017-08-01 | 谷歌公司 | For providing the system and method for calling context to content provider |
Also Published As
Publication number | Publication date |
---|---|
US20190373316A1 (en) | 2019-12-05 |
EP3533228A1 (en) | 2019-09-04 |
EP3908005A1 (en) | 2021-11-10 |
WO2019083520A1 (en) | 2019-05-02 |
CN110024411A (en) | 2019-07-16 |
WO2019083570A1 (en) | 2019-05-02 |
US11184669B2 (en) | 2021-11-23 |
CN113099246B (en) | 2023-09-15 |
EP3533228B1 (en) | 2021-08-11 |
CN110024411B (en) | 2021-03-23 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
CN110024411B (en) | Network traffic distribution for streaming content | |
KR101493034B1 (en) | Video segment presentaton tracking | |
EP3238418B1 (en) | Interactive ad rendering application for low-bandwidth communication environments | |
CN113473189B (en) | System and method for providing content in a content list | |
CN108140196B (en) | System and method for reducing latency of content item interactions using client-generated click identifiers | |
US20230368250A1 (en) | Systems and methods for dynamically inserting content item slots in an information resource | |
JP6977155B2 (en) | Controlling the triggering of function calls from content items | |
US11073887B2 (en) | Managing content based on battery usage in displaying the content on devices | |
US20210352150A1 (en) | Maintaining session identifiers across multiple webpages for content selection | |
US11430003B1 (en) | Expansion of high performing placement criteria | |
EP3234897A1 (en) | Dynamic content display time adjustment | |
US20180176631A1 (en) | Methods and systems for providing an interactive second screen experience | |
WO2022060956A1 (en) | User interfaces for refining video group packages | |
WO2022150053A1 (en) | Selection and provision of digital components during display of content | |
WO2022060930A1 (en) | Digital video analysis |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
SE01 | Entry into force of request for substantive examination | ||
GR01 | Patent grant | ||
GR01 | Patent grant |
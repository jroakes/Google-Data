US10102443B1 - Hierarchical conditional random field model for labeling and segmenting images - Google Patents
Hierarchical conditional random field model for labeling and segmenting images Download PDFInfo
- Publication number
- US10102443B1 US10102443B1 US15/232,941 US201615232941A US10102443B1 US 10102443 B1 US10102443 B1 US 10102443B1 US 201615232941 A US201615232941 A US 201615232941A US 10102443 B1 US10102443 B1 US 10102443B1
- Authority
- US
- United States
- Prior art keywords
- input image
- label
- vector
- image
- classes
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06T—IMAGE DATA PROCESSING OR GENERATION, IN GENERAL
- G06T7/00—Image analysis
- G06T7/10—Segmentation; Edge detection
- G06T7/11—Region-based segmentation
-
- G06K9/4671—
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F18/00—Pattern recognition
- G06F18/20—Analysing
- G06F18/23—Clustering techniques
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F18/00—Pattern recognition
- G06F18/20—Analysing
- G06F18/23—Clustering techniques
- G06F18/232—Non-hierarchical techniques
- G06F18/2321—Non-hierarchical techniques using statistics or function optimisation, e.g. modelling of probability density functions
- G06F18/23213—Non-hierarchical techniques using statistics or function optimisation, e.g. modelling of probability density functions with fixed number of clusters, e.g. K-means clustering
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F18/00—Pattern recognition
- G06F18/20—Analysing
- G06F18/24—Classification techniques
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F18/00—Pattern recognition
- G06F18/20—Analysing
- G06F18/24—Classification techniques
- G06F18/241—Classification techniques relating to the classification model, e.g. parametric or non-parametric approaches
- G06F18/2413—Classification techniques relating to the classification model, e.g. parametric or non-parametric approaches based on distances to training or reference patterns
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F18/00—Pattern recognition
- G06F18/20—Analysing
- G06F18/24—Classification techniques
- G06F18/241—Classification techniques relating to the classification model, e.g. parametric or non-parametric approaches
- G06F18/2413—Classification techniques relating to the classification model, e.g. parametric or non-parametric approaches based on distances to training or reference patterns
- G06F18/24133—Distances to prototypes
- G06F18/24137—Distances to cluster centroïds
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F18/00—Pattern recognition
- G06F18/20—Analysing
- G06F18/24—Classification techniques
- G06F18/243—Classification techniques relating to the number of classes
- G06F18/2431—Multiple classes
-
- G06K9/6267—
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V10/00—Arrangements for image or video recognition or understanding
- G06V10/70—Arrangements for image or video recognition or understanding using pattern recognition or machine learning
- G06V10/762—Arrangements for image or video recognition or understanding using pattern recognition or machine learning using clustering, e.g. of similar faces in social networks
- G06V10/763—Non-hierarchical techniques, e.g. based on statistics of modelling distributions
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V10/00—Arrangements for image or video recognition or understanding
- G06V10/70—Arrangements for image or video recognition or understanding using pattern recognition or machine learning
- G06V10/764—Arrangements for image or video recognition or understanding using pattern recognition or machine learning using classification, e.g. of video objects
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V20/00—Scenes; Scene-specific elements
- G06V20/35—Categorising the entire scene, e.g. birthday party or wedding scene
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F18/00—Pattern recognition
- G06F18/20—Analysing
- G06F18/21—Design or setup of recognition systems or techniques; Extraction of features in feature space; Blind source separation
- G06F18/214—Generating training patterns; Bootstrap methods, e.g. bagging or boosting
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06T—IMAGE DATA PROCESSING OR GENERATION, IN GENERAL
- G06T2207/00—Indexing scheme for image analysis or image enhancement
- G06T2207/20—Special algorithmic details
- G06T2207/20016—Hierarchical, coarse-to-fine, multiscale or multiresolution image processing; Pyramid transform
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06T—IMAGE DATA PROCESSING OR GENERATION, IN GENERAL
- G06T2207/00—Indexing scheme for image analysis or image enhancement
- G06T2207/20—Special algorithmic details
- G06T2207/20021—Dividing image into blocks, subimages or windows
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06T—IMAGE DATA PROCESSING OR GENERATION, IN GENERAL
- G06T2207/00—Indexing scheme for image analysis or image enhancement
- G06T2207/20—Special algorithmic details
- G06T2207/20072—Graph-based image processing
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06T—IMAGE DATA PROCESSING OR GENERATION, IN GENERAL
- G06T2207/00—Indexing scheme for image analysis or image enhancement
- G06T2207/20—Special algorithmic details
- G06T2207/20081—Training; Learning
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V20/00—Scenes; Scene-specific elements
- G06V20/10—Terrestrial scenes
Definitions
- This invention generally relates to image processing and more specifically to labeling images based on their content.
- Simultaneously segmenting and labeling of images according to their content is a fundamental problem in computer vision. Such technology is important for applications such as content-based retrieval and object recognition. For example, in mapping applications utilizing large database of street view images, it is desirable to have a technique for automatically labeling objects appearing in the images. However, conventional labeling techniques fail to provide sufficient scalability and performance.
- a first embodiment comprises a method for obtaining labels for an input image.
- a global classification model and a plurality of local classification models for determining image labels representing image content are received.
- An input image for labeling is also received.
- the global classification model is applied to features of the input image to determine initial labels for the input image.
- a local classification model is then selected for applying to the input image from the plurality of local classification models.
- the selected local classification model is applied to the features of the input image to determine refined labels for the input image.
- the refined labels are stored in association with the input image.
- a second embodiment comprises a method for training a classification model for determining labels for an input image.
- a plurality of labeled or partially labeled training images are received.
- Each labeled or partially labeled training image comprises at least one label associated with a pixel in the training image.
- the label indicates an object class from a plurality of possible object classes associated with the pixel.
- a global classification model is trained to learn a relationship between features of the training image and associated labels.
- the plurality of labeled training images are clustered into a plurality of clusters based on label-based descriptors for the images representing label-based image features.
- a plurality of local classification models are then trained to learn a relationship between features of the training images in each cluster and associated labels.
- the global classification model and the plurality of local classification models are stored to a storage medium.
- a third embodiment comprises a method for generating a label-based descriptor representing a labeled image.
- An input image is received having a label associated with each pixel.
- the label indicates a class of objects depicted by the pixel from a predefined set of classes.
- a positional vector is generated for the input image based on the labels.
- the positional vector represents positional information pertaining to each of the classes of objects depicted in the input image.
- An appearance vector is also generated for the input image based on the labels.
- the appearance vector represents appearance of pixels pertaining to each of the classes of objects depicted in the input image.
- a label-based descriptor is generated for the input image as a weighted combination of at least the positional vector and the appearance vector.
- FIG. 1 is a high-level block diagram of an image processing server according to one embodiment.
- FIG. 2 is a block diagram of an image processing system according to one embodiment.
- FIG. 3 is a flowchart illustrating a process for training a hierarchical classification model for labeling images according to one embodiment.
- FIG. 4 is a flowchart illustrating a process for labeling an input image using a hierarchical classification model according to one embodiment.
- FIG. 5 is a flowchart illustrating a process for re-ranking similar image search results using label-based descriptors according to one embodiment.
- An image segmentation and labeling process determines pixel-by-pixel labels for an unlabeled input image, where each label indicates a class of objects depicted by the associated pixel.
- images of street view scenes may be segmented and labeled based on the classes: sky, architecture, plant, ground, and miscellaneous (e.g., people, cars, etc.).
- a hierarchical classification model is used that combines both parametric (i.e., supervised) and non-parametric classification (i.e., unsupervised) techniques.
- the training images are also clustered in a non-parametric manner. Then local classification models are learned for each cluster.
- the hierarchical classification technique provides superior performance and scalability compared to parametric or non-parametric classification techniques used in isolation.
- FIG. 1 is a high-level block diagram of an image processing server 100 according to one embodiment.
- the server 100 includes an image processing system 110 and an image database 120 . Only one server 100 , image processing system 110 , and image database 120 are shown in FIG. 1 in order to simplify and clarify the description. Embodiments can have multiple ones of these entities. Moreover, the entities can be distributed across multiple machines. For example, the image processing system 110 and database 120 can be distributed across multiple servers.
- the image database 120 stores a set of images.
- image as used herein includes image data in general, such as individual still image files or frames from a video file.
- An image I comprises a two-dimensional array of pixels.
- the stored images in the image database 120 can be labeled images, unlabeled images, and/or partially labeled images.
- a labeled image includes labels (e.g., metadata) associated with the image that describes information about the scene and/or objects depicted in the image.
- labeled images are labeled on a per-pixel basis.
- a label is associated with each pixel and the label identifies an object or class of objects depicted by that pixel.
- unlabeled images lack these labels and the content of the images are therefore unknown.
- a partially labeled image includes a portion of the image (e.g., a subset of pixels) that is labeled and a portion that is unlabeled.
- the images in the image database 120 may be obtained from a variety of sources.
- the images are obtained from an organization that produces aerial or street view images of a portion of a city for use with a map system, such as GOOGLE MAPS, GOOGLE STREET VIEW or GOOGLE EARTH.
- images may be obtained from users, e.g. as submitted by a user uploading images to a photo repository such as PICASA WEB, or a video repository such as YOUTUBE or GOOGLE VIDEO.
- Labeled images or partially labeled images may be labeled manually by a user that indicates what object or class of objects are depicted by various segments of the image.
- labels may be obtained via an automated labeling process.
- the image processing system 110 may process unlabeled images to obtain labeled images and store the labeled images back to the image database 120 .
- each label identifies a pixel as belonging to one of a plurality of object classes which each could include several different objects.
- the object classes may include: (1) sky (including, for example, sky, cloud, etc.), (2) architecture (including, for example buildings, walls, bridges, etc.), (3) plant (including, for example trees, grass, flowers, bushes, etc.), (4) ground (including, for example, roads, streets, sidewalks, water, earth, etc.), and (5) miscellaneous (including, for example, people, cars, animals, bicycles, etc.).
- the position, shape, and appearance of the object classes primarily determine the semantic information of the street scene image.
- maintaining a small set of object classes reduces the training time per training image which enables a larger image data set to be incorporated for classification.
- additional layers of classification can be added to distinguish the objects within each object class.
- FIG. 2 is a block diagram of an example embodiment of the image processing system 110 .
- the image processing system 110 comprises a processor 220 and a memory 230 .
- the memory 230 comprises a non-transitory computer-readable storage medium storing a plurality of functional modules embodied as computer-executable program instructions.
- the processor 220 loads instructions from the memory 230 and executes the instructions to carry out the functions attributed to the various modules discussed below.
- the modules can be implemented in hardware, firmware, or a combination of hardware, firmware, and software.
- the memory 230 stores a clustering module 202 , a classifier training module 204 , a feature extraction module 206 , a descriptor generation module 208 , and a classification module 210 .
- a clustering module 202 stores a clustering module 202 , a classifier training module 204 , a feature extraction module 206 , a descriptor generation module 208 , and a classification module 210 .
- different and/or additional modules may be used than the ones described here.
- the functions can be distributed among the modules in a different manner than described here.
- the classifier training module 204 receives a plurality of labeled and/or partially labeled training images and trains a hierarchical classification model (e.g., a hierarchical conditional random field (CRF) model) that maps features of the training images to pixel-wise labels.
- the hierarchical classification model comprises a global classification model and a plurality of local classification models.
- the global classification e.g., a global CRF model
- the local classification models (e.g., local CRF models) each correspond to a cluster of training images, i.e., a subset of training images determined to have similar appearance characteristics.
- Each local classification model thus maps features of the training images within a particular cluster to their labels. Because each local classification model is trained on a subset of training images having more similar features, these local classification models tend to discriminate better between features than the global classification model. Thus, the hierarchical approach provides a more robust labeling system than other approaches.
- the output of the classifier training module 204 is a set of parameters representing the global and local classification models. These models may be applied to label an unlabeled input image according to a parametric classification method in order to map image features to labels as will be described below.
- the clustering module 202 clusters training images into clusters of semantically similar images based on label-based descriptors representing positional and appearance information for the various object classes depicted in the training images. Each cluster thus contains a subset of semantically-similar training images.
- the learned clusters can be used to determine a set of training images that have similar appearance characteristics to an unlabeled input image according to a non-parametric classification method, as will be described in further detail below.
- the classification module 210 determines labels for an unlabeled input image by applying the learned hierarchical classification model to the input image.
- the classification module 210 first applies the global classification model to map features of the input image to an initial set of labels.
- the classification module 210 determines a cluster of training images most closely associated with the input image based on the initial labels.
- the classification model then applies the local classification model associated with that cluster to the input image to determine a refined set of labels for the input image.
- the classification module 210 combines parametric and non-parametric classification methods in order to achieve a set of labels for an input image.
- the feature extraction module 206 extracts features from images that represent appearance of the images. Features extracted from labeled or partially labeled images are used by the classifier training module 204 to train the global classification model. Furthermore, features extract from an unlabeled image (e.g., an input image) are inputted to the global and local classification models to determine pixel-wise labels for the input image.
- an unlabeled image e.g., an input image
- the descriptor generator module 208 generates a label-based descriptor for an image representing positional and appearance information pertaining to the various object classes depicted in the image.
- the label-based descriptors are used to cluster training images having similar label-based descriptors.
- a label-based descriptor can be generated for an input image based on initial labels obtained from the global classification model. The label-based descriptor is then used to determine a cluster of training images most similar to the input image, and a local classification model can be selected based on this determination.
- a process for generating a label-based descriptor for an image is described in further detail below.
- FIG. 3 is a flowchart illustrating an embodiment of a process for training a hierarchical classification model (e.g., a hierarchical conditional random field model) for labeling images.
- a hierarchical classification model e.g., a hierarchical conditional random field model
- the process of FIG. 3 is performed by the image processing system 102 described above.
- the process of FIG. 3 may be performed by the processor 220 executing the various modules stored in the memory 230 to achieve the functions described.
- a set of labeled and/or partially labeled training images is received 302 .
- the training set includes a large number of images (e.g., 1000 or more images) although smaller training sets can be used for certain applications.
- the training images include sufficient instances of images with different spatial layouts to adequately train a classifier.
- the training images includes a variety of street scene images with pixels labeled according to their object class (e.g., sky, architecture, plant, ground, or miscellaneous) and each training image includes at least two labels from the set of object classes. Ensuring that each training image has at least two different labels enables extraction of contextual information during the training process.
- a super-pixel comprises a segment of the image made up of a spatially contiguous group of one or more pixels.
- the pixels within a super-pixel each have the same label, although multiple super-pixels may also have the same label.
- each image is divided into a predetermined number of super-pixels (e.g., approximately 400 super-pixels), where the set of super-pixels of an image I is denoted by ⁇ s .
- ⁇ s For each super-pixel s ⁇ s , a set of neighboring super-pixels N(s) is computed.
- N(s) includes two types of super-pixels: (1) those that are adjacent to s and (2) those that are not adjacent to s but are in the neighborhood of s (e.g., within a predefined radius or falling within a predefined number of closest super-pixels).
- the second type of neighboring super-pixels are used to incorporate contextual information at a larger scale.
- features of the super-pixels are determined 306 .
- both unary feature vectors and pair-wise feature vectors are determined.
- a unary feature vector is separately determined for each super-pixel.
- the unary feature vector represents, for example, various appearance characteristics of the super-pixel useful for training a classifier.
- These feature vectors may be related to, for example, color distributions of pixels within the super-pixel, location of the super-pixel within the image, local gradient information, etc.
- the feature vector for a super-pixel can represent one or more of HSV color information, location of the super-pixel center, and scale-invariant feature transform (SIFT) feature descriptors at scales of, for example, 2 i where 4 ⁇ i ⁇ 7. Using multiple scales can be beneficial in accounting for varying sizes of the same object in different images.
- SIFT scale-invariant feature transform
- a basic multi-dimensional (e.g., 517 dimensions) feature vector x s is formed per super-pixel s.
- additional feature vectors may be added such as, for example, vectors connecting two feature vectors of different objects classes.
- additional feature vectors are beneficial in that they tend to describe characteristics separating the two classes, thus leading to a more discriminative classifier.
- N feature vectors p i are randomly selected from a first class c of super-pixels and N feature vectors q i are randomly selected from a second class c′ of superpixels.
- eigenvectors of the following function are computed:
- n eigenvectors are added as additional feature vectors to the original set of unary feature vectors. For example, in one embodiment, approximately 150 additional feature vectors from 10 different pairs of classes (out of, for example, 5 classes) are added. These additional feature vectors may increase the pixel-wise classification accuracy by 4% or higher under certain operating conditions.
- the set of unary feature vectors is denoted as x s for each super-pixel s.
- the pair-wise feature vectors provide contextual information describing the relative color, positional information, and/or gradient information between neighboring super-pixels.
- y ss′ (x s , x s′ ).
- additional feature vectors are added to set of pair-wise feature vectors based on equation (1) above.
- a global classification model is trained 308 to provide a mapping between the features vectors and the pixel-wise labels of the training images.
- the global classification model associates each super-pixel s with a label c s in the set of possible object classes (e.g., sky, architecture, plant, ground, miscellaneous).
- parameters of the global classification model are determined by minimizing the following objective function:
- E ⁇ ( c , ⁇ ) ⁇ s ⁇ I s ⁇ ( E 1 ⁇ ( c s ; x s , ⁇ 1 ) ) + ⁇ s ′ ⁇ N ⁇ ( s ) ⁇ ( E 2 ⁇ ( c s ′ ⁇ c s ; y ss ′ , ⁇ 2 ) ) ( 2 )
- E 1 represents the consistency between the features x s of super-pixel s and its label c s
- the pair-wise term E 2 represents consistency between neighboring super-pixel labels c s and c s′ given pair-wise feature y ss′ .
- the objective E(c, ⁇ ) is optimized using an efficient quad-relaxation technique.
- the resulting labeling c implicitly defines a segmentation of the input image, with segment boundaries lying between each pair of adjacent super-pixels.
- the unary energy term E 1 of Eq. (2) evaluates a classifier.
- the classifier takes the feature vector x s of a super-pixel as input, and returns a probability distribution of labels for that super-pixel: P(c
- x, ⁇ 1 ) a probability distribution of labels for that super-pixel.
- a JointBoost classifier is used although other classifiers can be used in different implementations.
- a classification model based on the unary energy term alone would generally be able to obtain a preliminary outline of objects when applied to an unlabeled input image. However, a number of pixels would still likely be misclassified. This is because the unary term E 1 does not consider consistency of labels across neighboring super-pixels and the spatial relationship between different objects.
- the global classification model also includes the pair-wise energy term E 2 to take contextual information into account. For example, observing that a sky object is generally coherent and a sky object is very unlikely to be under a building object, an improved model for labeling pixels can be achieved by incorporating the pair-wise energy term E 2 .
- the pair-wise energy term E 2 also evaluates a JointBoost classifier although other classifiers can be used in different implementations.
- ⁇ represents the relative contribution of the pair-wise energy term E 2 to the overall objective function E of the global classification model.
- the weighting coefficient ⁇ can be learned using a validation image set comprising a set of labeled and/or partially labeled images different from those in the training data set. For example, different values of ⁇ may be tried and a value of ⁇ having the smallest testing error may be chosen.
- a label-based descriptor is generated for each training image.
- the label-based descriptor captures semantic information of an image such as the position, appearance, and shape of each of the object classes depicted in the image.
- the label-based descriptor describes in a compact way, the position, appearance, and shape of the object classes from the set ⁇ sky, architecture, plant, ground, and miscellaneous ⁇ .
- the global classification model may first be applied to partially-labeled images in the training set in order to obtain a complete set of initial labels for these images. Then, the label-based descriptor can be generated for the partially-labeled images based on these initial labels.
- the image I is subdivided into a uniform n p ⁇ n p grid of cells g.
- the cell coverage information is collected into a vector d I p of length Kn p 2 .
- each mean color c ijk is scaled as p ijk c ijk .
- all mean colors c ijk are collected into a vector d I c of length 3Kn p 2 .
- the label-based descriptor d I (d I p , w c d I c ) where w c weighs the importance of the appearance information.
- Training examples are next clustered 312 based on the label-based descriptors.
- the label-based descriptors represent image features such as color and position information related to labels.
- each training image is represented as a point R N where N is the dimensionality of the label-based descriptor.
- clustering is performed directly using the original label-based descriptors in the N dimensional space.
- the projected label-based descriptor of image I is denoted by d I .
- a clustering algorithm (e.g., a mean-shift clustering algorithm) is employed to group training images into clusters based on the label-based descriptors.
- the clustering algorithm returns K clusters of images X i where 1 ⁇ i ⁇ K. For each cluster X i , the center m i and variance ⁇ i are compacted as:
- ⁇ i ⁇ ( ⁇ I ⁇ C i ⁇ ( d _ I - m i ) ⁇ ( d _ I - m i ) T ⁇ C i ⁇ ) ( 6 )
- ⁇ (A) evaluates the maximum eigenvalue of a matrix A.
- each cluster X i can be enlarged by including every image I whose association weight to X i is:
- ⁇ 0.1.
- a local classification model is then trained 314 for training images within the cluster.
- the association weight w(I, X i ) of each image I naturally describes how close this image is to cluster X i . Therefore, the labeled instances are weighted by w(I, X i ) when learning the local classification model.
- the local classification models can be learned using the same technique as used to train the global classification model, except only a subset of training images are used (i.e., those within the cluster associated with the local classification model).
- ⁇ is computed such that it results in clusters that maximize the classification accuracy of the hierarchical classification model.
- a predefined number e.g., 8) of candidate ⁇ s are chosen that are uniformly sampled between d/16 and d/2 where d is the diameter of the projected label-based descriptor of all training images.
- the global classification model and the plurality of local classification models are stored 316 to a storage medium.
- the models are stored in terms of their respective model parameters. For example, values for ⁇ 1 and ⁇ 2 described above are stored for the global classification model and for each of the local classification models.
- FIG. 4 illustrates an embodiment of a process for acquiring labels for an unlabeled input image.
- the labels will predict on a pixel-by-pixel basis, which class of objects is depicted by each pixel in the input image I.
- An unlabeled image I is received 402 for classification.
- the image I is segmented 404 into a plurality of super-pixels using a process similar or identical to the segmentation process described above for the training images.
- features are determined 406 for each super-pixel using a process similar or identical to the feature generation process described above for the training images.
- the learned global classification model is then applied 408 to the feature vectors to obtain initial pixel labels for the input image I.
- a label-based descriptor is then determined 410 based on the initial labels. This label-based descriptor can be determined using a similar or identical process to that described above for the training images, using the initial labels determined from application of the global classification model.
- a cluster X i from the set of learned clusters is identified 412 that has the largest association weight w(I, X i ) with the label-based descriptor for the input image I. Then, the local classification model associated with the identifier cluster X i is applied 414 to the feature vectors of the input image I to determine a refined set of labels for the input image I. These labels are stored 416 in association with the image I.
- Two heuristic approaches can optionally be used to accelerate the speed of running the hierarchical classification model.
- the process could start from using labeled results of the global classification model. This can decrease the total running time of the optimization process for the hierarchical classification model by about 15% under certain operational conditions.
- the hierarchical classification technique can be used to determine pixel-by-pixel labels for unlabeled street view images. This would allow, for example, a mapping application to automatically identify objects depicted in large street view image databases. Such an automated labeling technique is desirable because street view images for such applications are acquired in very large quantities (e.g., by driving a car along streets and continuously capturing images).
- the labels may be useful, for example, to identify buildings in the street view images which may then be associated with a particular address, company, or person in the map application.
- miscellaneous objects such as people and cars could be automatically blurred or removed from street view images.
- license plates appearing in the street view image can be detected and blurred or removed.
- the label-based descriptor described above can be used in a similar image search application.
- the label-based descriptor defined above does not consider the shape of the various depicted objects.
- the label-based descriptor is augmented to take this information into account.
- the orientation distribution of the boundaries between each pair of different objects may be evaluated.
- the edge orientation of each pair of adjacent super-pixels with different object labels are perpendicular to the centroid of the super-pixels. All the counts are collected into a vector I b of size
- the vector I b has a size 160 and the dimension of the augmented label-based descriptor becomes 480.
- the edge part may be weighted (e.g., as 0.01).
- An image query system receives 502 an input image I and returns 504 a set of search results that are similar in appearance to image I.
- the images in the search result set may have differing degrees of similarity with image I.
- the query results can therefore be re-ranked based on the label-based descriptor. If the input image I is not already labeled, labels may be acquired for the image using the processes described above.
- a label-based descriptor is generated 506 for the input image I based on its labels.
- the label-based descriptor is then compared to label-based descriptors of the search results and the images are re-ranked 508 based on a distance metric between their respective label-based descriptors and the label-based descriptor of the input image I.
- the ranked images results are then outputted 510 (e.g., for display on a client). Re-ranking the results using the label-based descriptor can beneficially provide significantly more relevant image results based on the semantic information contained in the label-based descriptor.
- the hierarchical classification technique can be applied to other image segmentation and labeling problems that do not necessarily involve street view images. Rather, the classification models can be trained for any set of object classes in a wide variety of image types. Once trained, the classification models can be applied to unlabeled images to segment and label the image based on the depicted object classes.
Abstract
An image processing system automatically segments and labels an image using a hierarchical classification model. A global classification model determines initial labels for an image based on features of the image. A label-based descriptor is generated based on the initial labels. A local classification model is then selected from a plurality of learned local classification model based on the label-based descriptor. The local classification model is applied to the features of the input image to determined refined labels. The refined labels are stored in association with the input image.
Description
This application is a divisional of U.S. application Ser. No. 13/434,515, filed on Mar. 29, 2012, the entire disclosure of which is incorporated herein by reference.
This invention generally relates to image processing and more specifically to labeling images based on their content.
Simultaneously segmenting and labeling of images according to their content is a fundamental problem in computer vision. Such technology is important for applications such as content-based retrieval and object recognition. For example, in mapping applications utilizing large database of street view images, it is desirable to have a technique for automatically labeling objects appearing in the images. However, conventional labeling techniques fail to provide sufficient scalability and performance.
A first embodiment comprises a method for obtaining labels for an input image. A global classification model and a plurality of local classification models for determining image labels representing image content are received. An input image for labeling is also received. The global classification model is applied to features of the input image to determine initial labels for the input image. A local classification model is then selected for applying to the input image from the plurality of local classification models. The selected local classification model is applied to the features of the input image to determine refined labels for the input image. The refined labels are stored in association with the input image.
A second embodiment comprises a method for training a classification model for determining labels for an input image. A plurality of labeled or partially labeled training images are received. Each labeled or partially labeled training image comprises at least one label associated with a pixel in the training image. The label indicates an object class from a plurality of possible object classes associated with the pixel. A global classification model is trained to learn a relationship between features of the training image and associated labels. The plurality of labeled training images are clustered into a plurality of clusters based on label-based descriptors for the images representing label-based image features. A plurality of local classification models are then trained to learn a relationship between features of the training images in each cluster and associated labels. The global classification model and the plurality of local classification models are stored to a storage medium.
A third embodiment comprises a method for generating a label-based descriptor representing a labeled image. An input image is received having a label associated with each pixel. The label indicates a class of objects depicted by the pixel from a predefined set of classes. A positional vector is generated for the input image based on the labels. The positional vector represents positional information pertaining to each of the classes of objects depicted in the input image. An appearance vector is also generated for the input image based on the labels. The appearance vector represents appearance of pixels pertaining to each of the classes of objects depicted in the input image. A label-based descriptor is generated for the input image as a weighted combination of at least the positional vector and the appearance vector.
The figures depict embodiments for purposes of illustration only. One skilled in the art will readily recognize from the following description that alternative embodiments of the structures and methods illustrated herein may be employed without departing from the principles described herein.
An image segmentation and labeling process determines pixel-by-pixel labels for an unlabeled input image, where each label indicates a class of objects depicted by the associated pixel. For example, in a mapping application, images of street view scenes may be segmented and labeled based on the classes: sky, architecture, plant, ground, and miscellaneous (e.g., people, cars, etc.). A hierarchical classification model is used that combines both parametric (i.e., supervised) and non-parametric classification (i.e., unsupervised) techniques. Thus, in addition to learning a global classification model in a parametric training phase based on labeled training images, the training images are also clustered in a non-parametric manner. Then local classification models are learned for each cluster. Beneficially, the hierarchical classification technique provides superior performance and scalability compared to parametric or non-parametric classification techniques used in isolation.
System Architecture
The image database 120 stores a set of images. The term “image” as used herein includes image data in general, such as individual still image files or frames from a video file. An image I comprises a two-dimensional array of pixels. A particular pixel I(x,y) may be defined differently depending on the color space and encoding format. For example, in a RGB color space, a pixel may be defined as I(x,y)={R, G, B}, where R, G, and B are the intensity values of red, green, and blue respectively. In an HSV color space, a pixel may be defined as I(x,y)={H, S, V} where H, S, and V refer to hue, saturation, and value for a given pixel.
The stored images in the image database 120 can be labeled images, unlabeled images, and/or partially labeled images. A labeled image includes labels (e.g., metadata) associated with the image that describes information about the scene and/or objects depicted in the image. In one embodiment, labeled images are labeled on a per-pixel basis. Thus, in this embodiment, a label is associated with each pixel and the label identifies an object or class of objects depicted by that pixel. In contrast, unlabeled images lack these labels and the content of the images are therefore unknown. A partially labeled image includes a portion of the image (e.g., a subset of pixels) that is labeled and a portion that is unlabeled.
The images in the image database 120 may be obtained from a variety of sources. In one particular embodiment, the images are obtained from an organization that produces aerial or street view images of a portion of a city for use with a map system, such as GOOGLE MAPS, GOOGLE STREET VIEW or GOOGLE EARTH. Likewise, images (including video frames) may be obtained from users, e.g. as submitted by a user uploading images to a photo repository such as PICASA WEB, or a video repository such as YOUTUBE or GOOGLE VIDEO. Labeled images or partially labeled images may be labeled manually by a user that indicates what object or class of objects are depicted by various segments of the image. Alternatively, labels may be obtained via an automated labeling process. For example, the image processing system 110 may process unlabeled images to obtain labeled images and store the labeled images back to the image database 120.
In one embodiment, where the labeled or partially labeled images pertain to street view images, each label identifies a pixel as belonging to one of a plurality of object classes which each could include several different objects. For example, the object classes may include: (1) sky (including, for example, sky, cloud, etc.), (2) architecture (including, for example buildings, walls, bridges, etc.), (3) plant (including, for example trees, grass, flowers, bushes, etc.), (4) ground (including, for example, roads, streets, sidewalks, water, earth, etc.), and (5) miscellaneous (including, for example, people, cars, animals, bicycles, etc.). By storing pixel-wise labels identifying the various object classes, the image is effectively segmented into regions based on the image content.
There are several advantages to labeling street scene images using object classes described above. First, the position, shape, and appearance of the object classes primarily determine the semantic information of the street scene image. Second, maintaining a small set of object classes reduces the training time per training image which enables a larger image data set to be incorporated for classification. Third, if desired, additional layers of classification can be added to distinguish the objects within each object class.
In one embodiment, the memory 230 stores a clustering module 202, a classifier training module 204, a feature extraction module 206, a descriptor generation module 208, and a classification module 210. In alternative embodiments, different and/or additional modules may be used than the ones described here. Furthermore, the functions can be distributed among the modules in a different manner than described here.
In a training phase, the classifier training module 204 receives a plurality of labeled and/or partially labeled training images and trains a hierarchical classification model (e.g., a hierarchical conditional random field (CRF) model) that maps features of the training images to pixel-wise labels. In one embodiment, the hierarchical classification model comprises a global classification model and a plurality of local classification models. The global classification (e.g., a global CRF model) is trained based on a complete set of training images that may have a variety of different appearance characteristics. The local classification models (e.g., local CRF models) each correspond to a cluster of training images, i.e., a subset of training images determined to have similar appearance characteristics. Each local classification model thus maps features of the training images within a particular cluster to their labels. Because each local classification model is trained on a subset of training images having more similar features, these local classification models tend to discriminate better between features than the global classification model. Thus, the hierarchical approach provides a more robust labeling system than other approaches.
The output of the classifier training module 204 is a set of parameters representing the global and local classification models. These models may be applied to label an unlabeled input image according to a parametric classification method in order to map image features to labels as will be described below.
Also in the training phase, the clustering module 202 clusters training images into clusters of semantically similar images based on label-based descriptors representing positional and appearance information for the various object classes depicted in the training images. Each cluster thus contains a subset of semantically-similar training images. The learned clusters can be used to determine a set of training images that have similar appearance characteristics to an unlabeled input image according to a non-parametric classification method, as will be described in further detail below.
In a classification phase, the classification module 210 determines labels for an unlabeled input image by applying the learned hierarchical classification model to the input image. The classification module 210 first applies the global classification model to map features of the input image to an initial set of labels. The classification module 210 then determines a cluster of training images most closely associated with the input image based on the initial labels. The classification model then applies the local classification model associated with that cluster to the input image to determine a refined set of labels for the input image. Thus, the classification module 210 combines parametric and non-parametric classification methods in order to achieve a set of labels for an input image.
The feature extraction module 206 extracts features from images that represent appearance of the images. Features extracted from labeled or partially labeled images are used by the classifier training module 204 to train the global classification model. Furthermore, features extract from an unlabeled image (e.g., an input image) are inputted to the global and local classification models to determine pixel-wise labels for the input image.
The descriptor generator module 208 generates a label-based descriptor for an image representing positional and appearance information pertaining to the various object classes depicted in the image. In the training phase, the label-based descriptors are used to cluster training images having similar label-based descriptors. Furthermore, a label-based descriptor can be generated for an input image based on initial labels obtained from the global classification model. The label-based descriptor is then used to determine a cluster of training images most similar to the input image, and a local classification model can be selected based on this determination. A process for generating a label-based descriptor for an image is described in further detail below.
Operation and Use
Training Stage
A set of labeled and/or partially labeled training images is received 302. In one embodiment, the training set includes a large number of images (e.g., 1000 or more images) although smaller training sets can be used for certain applications. Furthermore, in one embodiment, the training images include sufficient instances of images with different spatial layouts to adequately train a classifier. For example, in one embodiment, the training images includes a variety of street scene images with pixels labeled according to their object class (e.g., sky, architecture, plant, ground, or miscellaneous) and each training image includes at least two labels from the set of object classes. Ensuring that each training image has at least two different labels enables extraction of contextual information during the training process.
Image Segmentation
The labeled training images are then segmented 304 to identify “super-pixels.” A super-pixel comprises a segment of the image made up of a spatially contiguous group of one or more pixels. The pixels within a super-pixel each have the same label, although multiple super-pixels may also have the same label. In one embodiment, for example, each image is divided into a predetermined number of super-pixels (e.g., approximately 400 super-pixels), where the set of super-pixels of an image I is denoted by □s. For each super-pixel sϵ□s, a set of neighboring super-pixels N(s) is computed. In one embodiment, N(s) includes two types of super-pixels: (1) those that are adjacent to s and (2) those that are not adjacent to s but are in the neighborhood of s (e.g., within a predefined radius or falling within a predefined number of closest super-pixels). The second type of neighboring super-pixels are used to incorporate contextual information at a larger scale.
Generation of Feature Vectors
Next, features of the super-pixels are determined 306. In one embodiment, both unary feature vectors and pair-wise feature vectors are determined. In one embodiment, a unary feature vector is separately determined for each super-pixel. The unary feature vector represents, for example, various appearance characteristics of the super-pixel useful for training a classifier. These feature vectors may be related to, for example, color distributions of pixels within the super-pixel, location of the super-pixel within the image, local gradient information, etc. For example, in various embodiments, the feature vector for a super-pixel can represent one or more of HSV color information, location of the super-pixel center, and scale-invariant feature transform (SIFT) feature descriptors at scales of, for example, 2i where 4≤i≤7. Using multiple scales can be beneficial in accounting for varying sizes of the same object in different images. In one embodiment, a basic multi-dimensional (e.g., 517 dimensions) feature vector xs is formed per super-pixel s.
Optionally, additional feature vectors may be added such as, for example, vectors connecting two feature vectors of different objects classes. These additional feature vectors are beneficial in that they tend to describe characteristics separating the two classes, thus leading to a more discriminative classifier. For example, in one embodiment, N feature vectors pi are randomly selected from a first class c of super-pixels and N feature vectors qi are randomly selected from a second class c′ of superpixels. The first n (e.g., n=15) eigenvectors of the following function are computed:
These n eigenvectors are added as additional feature vectors to the original set of unary feature vectors. For example, in one embodiment, approximately 150 additional feature vectors from 10 different pairs of classes (out of, for example, 5 classes) are added. These additional feature vectors may increase the pixel-wise classification accuracy by 4% or higher under certain operating conditions. The set of unary feature vectors is denoted as xs for each super-pixel s.
The pair-wise feature vectors provide contextual information describing the relative color, positional information, and/or gradient information between neighboring super-pixels. For each pair of neighboring super-pixels (s, s′) a pair-wise feature vector denoted by yss′ is defined as yss′=(xs, xs′). Furthermore, in one embodiment, additional feature vectors are added to set of pair-wise feature vectors based on equation (1) above.
Training Global Classification Model
After generating the unary feature vectors xs and pair-wise feature vectors yss′ for each training image, a global classification model is trained 308 to provide a mapping between the features vectors and the pixel-wise labels of the training images. Thus, for example, in one embodiment, the global classification model associates each super-pixel s with a label cs in the set of possible object classes (e.g., sky, architecture, plant, ground, miscellaneous). In one embodiment, parameters of the global classification model are determined by minimizing the following objective function:
where the unary term E1 represents the consistency between the features xs of super-pixel s and its label cs, the pair-wise term E2 represents consistency between neighboring super-pixel labels cs and cs′ given pair-wise feature yss′. The model parameters are θ=(θ1, θ2, λ) where λ controls the contribution of the pair-wise term.
In one embodiment, the objective E(c, θ) is optimized using an efficient quad-relaxation technique. The resulting labeling c implicitly defines a segmentation of the input image, with segment boundaries lying between each pair of adjacent super-pixels.
The unary energy term E1 of Eq. (2) evaluates a classifier. The classifier takes the feature vector xs of a super-pixel as input, and returns a probability distribution of labels for that super-pixel: P(c|x, θ1). In one embodiment, for example, a JointBoost classifier is used although other classifiers can be used in different implementations. In one embodiment, the unary energy E1 of a label cs is equal to its negative log-probability:
E 1(c s ;x s,θ1)=−log P(c s |x s,θ1) (3)
E 1(c s ;x s,θ1)=−log P(c s |x s,θ1) (3)
A classification model based on the unary energy term alone (without the pair-wise energy term E2) would generally be able to obtain a preliminary outline of objects when applied to an unlabeled input image. However, a number of pixels would still likely be misclassified. This is because the unary term E1 does not consider consistency of labels across neighboring super-pixels and the spatial relationship between different objects. Thus, the global classification model also includes the pair-wise energy term E2 to take contextual information into account. For example, observing that a sky object is generally coherent and a sky object is very unlikely to be under a building object, an improved model for labeling pixels can be achieved by incorporating the pair-wise energy term E2.
In one embodiment the pair-wise energy term E2 also evaluates a JointBoost classifier although other classifiers can be used in different implementations. In one embodiment, the pair-wise energy of a pair of labels cs and cs′ is given by:
E 2(c s ,c s′ ;y ss′,θ2)=−λ log P(c s ,c s′ |y ss′,θ2) (4)
E 2(c s ,c s′ ;y ss′,θ2)=−λ log P(c s ,c s′ |y ss′,θ2) (4)
In the above equation, λ represents the relative contribution of the pair-wise energy term E2 to the overall objective function E of the global classification model. In one embodiment, the weighting coefficient λ can be learned using a validation image set comprising a set of labeled and/or partially labeled images different from those in the training data set. For example, different values of λ may be tried and a value of λ having the smallest testing error may be chosen.
Generation of Label-Based Descriptors
In step 310, a label-based descriptor is generated for each training image. In one embodiment, the label-based descriptor captures semantic information of an image such as the position, appearance, and shape of each of the object classes depicted in the image. For example, in one embodiment, the label-based descriptor describes in a compact way, the position, appearance, and shape of the object classes from the set {sky, architecture, plant, ground, and miscellaneous}.
In one embodiment, prior to generating the label-based descriptors, the global classification model may first be applied to partially-labeled images in the training set in order to obtain a complete set of initial labels for these images. Then, the label-based descriptor can be generated for the partially-labeled images based on these initial labels.
To encode position information of each object class in a given image I, the image I is subdivided into a uniform np×np grid of cells g. Within each grid cell gij the distribution pijk of each object class ckϵΛ is evaluated where Λ={ck} is the set of k object classes. The cell coverage information is collected into a vector dI p of length Knp 2. Picking the grid size value np is a tradeoff between descriptiveness and stability of this representation. For example, a larger np makes dI p capture positional information more precisely while a smaller np makes dI p less sensitive to image displacement and classification errors. In one embodiment, a value np=4 is used.
Similar to positional information, the appearance information is encoded by evaluating a mean color c ijk=(r ijk, g ijk, b ijk) of each object class ck within each cell gij. To stabilize the mean color statistics, each mean color c ijk is scaled as pijk c ijk. Again, all mean colors c ijk are collected into a vector dI c of length 3Knp 2.
Finally, the label-based descriptor of image I is given by:
dI=(dI p, wcdI c) where wc weighs the importance of the appearance information. Thus, the label-based descriptor dI for a training image I represents a weighted vector of the positional information and color information pertaining the various object classes depicted in the image. In one embodiment the weight wc is set to 1 by default. If, for example, K=5 (i.e., five superclasses of objects), the label-based descriptor described above has 320 dimensions. In alternative embodiments, a different label-based descriptor may be used.
Clustering Based on Label-Based Descriptors
Training examples are next clustered 312 based on the label-based descriptors. As described above, the label-based descriptors represent image features such as color and position information related to labels. Using the label-based descriptor, each training image is represented as a point RN where N is the dimensionality of the label-based descriptor. In one embodiment, clustering is performed directly using the original label-based descriptors in the N dimensional space. Alternatively, the dimensionality of the label-based descriptor can first be reduced prior to clustering. Clustering in a projected space reduces the chances of obtaining clusters as isolated points. For example, in one embodiment, a singular value decomposition reduces the dimension of the label-based descriptors to M (e.g., M=2). The projected label-based descriptor of image I is denoted by d I.
A clustering algorithm (e.g., a mean-shift clustering algorithm) is employed to group training images into clusters based on the label-based descriptors. In one embodiment, the clustering algorithm returns K clusters of images Xi where 1≤i≤K. For each cluster Xi, the center mi and variance σi are compacted as:
where ρ(A) evaluates the maximum eigenvalue of a matrix A.
To ensure that each cluster includes sufficient number of training images, each cluster Xi can be enlarged by including every image I whose association weight to Xi is:
For example, in one embodiment, δ=0.1.
Training Local Classification Models
Next, for each cluster Xi, a local classification model is then trained 314 for training images within the cluster. The association weight w(I, Xi) of each image I naturally describes how close this image is to cluster Xi. Therefore, the labeled instances are weighted by w(I, Xi) when learning the local classification model. The local classification models can be learned using the same technique as used to train the global classification model, except only a subset of training images are used (i.e., those within the cluster associated with the local classification model).
An issue associated with mean-shift clustering described above is how to set the clustering parameter a that controls the granularity of the clustering (Note that this parameter a refers to the general parameter σ used in mean-shift and many other segmentation/clustering algorithm and is distinct from the variance σi in Eq. 6). Using a small number of clusters would make the local classification model of each cluster under-fitted while using a large number of clusters would make the local classification model of each cluster over-fitted. Thus, in one embodiment, σ is computed such that it results in clusters that maximize the classification accuracy of the hierarchical classification model. In one implementation, a predefined number (e.g., 8) of candidate σs are chosen that are uniformly sampled between d/16 and d/2 where d is the diameter of the projected label-based descriptor of all training images. In one embodiment, σ is selected as the one that leads to the highest classification accuracy. For example, in one embodiment, a value of σ=d/8 is used.
After training, the global classification model and the plurality of local classification models are stored 316 to a storage medium. In one embodiment, the models are stored in terms of their respective model parameters. For example, values for θ1 and θ2 described above are stored for the global classification model and for each of the local classification models.
Classification Stage
Two heuristic approaches can optionally be used to accelerate the speed of running the hierarchical classification model. First, as the global classification model is only used to find the corresponding cluster of each input image, fewer decision stumps can be used for the classifier of both the unary term and the pair-wise term. For example, in one embodiment, the number of stumps is reduced by ¾. Such a reduction will, under certain conditions, reduce the pixel-wise classification accuracy by only 0.05% or less. Second, when optimizing the local classification models, the process could start from using labeled results of the global classification model. This can decrease the total running time of the optimization process for the hierarchical classification model by about 15% under certain operational conditions.
Application to Street View Content Identification
As described above, in one embodiment, the hierarchical classification technique can be used to determine pixel-by-pixel labels for unlabeled street view images. This would allow, for example, a mapping application to automatically identify objects depicted in large street view image databases. Such an automated labeling technique is desirable because street view images for such applications are acquired in very large quantities (e.g., by driving a car along streets and continuously capturing images). The labels may be useful, for example, to identify buildings in the street view images which may then be associated with a particular address, company, or person in the map application. Additionally, for privacy purposes, miscellaneous objects such as people and cars could be automatically blurred or removed from street view images. In one embodiment, license plates appearing in the street view image can be detected and blurred or removed.
Application to Similar Image Search
In an alternative embodiment, the label-based descriptor described above can be used in a similar image search application. The label-based descriptor defined above does not consider the shape of the various depicted objects. Thus, in one embodiment, the label-based descriptor is augmented to take this information into account. To capture shape information, the orientation distribution of the boundaries between each pair of different objects may be evaluated. For stability concerns, a coarse grid ne×ne (e.g., ne=2) may be used with nb bins (e.g., nb=4) for orientation. The edge orientation of each pair of adjacent super-pixels with different object labels are perpendicular to the centroid of the super-pixels. All the counts are collected into a vector Ib of size
For example in one embodiment, the vector Ib has a size 160 and the dimension of the augmented label-based descriptor becomes 480. Furthermore, in one embodiment, the edge part may be weighted (e.g., as 0.01).
An embodiment of a process for refining similar image search results using the label-based descriptor described above is illustrated in FIG. 5 . An image query system (e.g., Google Similar Image Search) receives 502 an input image I and returns 504 a set of search results that are similar in appearance to image I. The images in the search result set may have differing degrees of similarity with image I. The query results can therefore be re-ranked based on the label-based descriptor. If the input image I is not already labeled, labels may be acquired for the image using the processes described above. A label-based descriptor is generated 506 for the input image I based on its labels. The label-based descriptor is then compared to label-based descriptors of the search results and the images are re-ranked 508 based on a distance metric between their respective label-based descriptors and the label-based descriptor of the input image I. The ranked images results are then outputted 510 (e.g., for display on a client). Re-ranking the results using the label-based descriptor can beneficially provide significantly more relevant image results based on the semantic information contained in the label-based descriptor.
In addition to the specific applications described above, the hierarchical classification technique can be applied to other image segmentation and labeling problems that do not necessarily involve street view images. Rather, the classification models can be trained for any set of object classes in a wide variety of image types. Once trained, the classification models can be applied to unlabeled images to segment and label the image based on the depicted object classes.
The above description is included to illustrate the operation of the embodiments and is not meant to limit the scope of the invention. From the above discussion, many variations will be apparent to one skilled in the relevant art that would yet be encompassed by the spirit and scope of the invention.
Claims (18)
1. A method for generating a label-based descriptor representing a labeled image, the method comprising:
receiving an input image having a plurality of pixels and a plurality of labels, each label associated with one of the plurality of pixels, and each label indicating a class of objects depicted by the associated pixel from a predefined set of classes;
generating, by one or more processors, a positional vector for the input image based on the plurality of labels, the positional vector representing positional information pertaining to each of the classes of objects depicted in the input image;
generating, by one or more processors, an appearance vector for the input image based on the plurality of labels, the appearance vector representing appearance of the classes of objects depicted in the input image;
generating, by one or more processors, a shape vector for the input image based on the plurality of labels, the shape vector representing a distribution of boundaries between pairs of the classes of objects, wherein generating the shape vector comprises evaluating an orientation distribution of boundaries between pairs of different classes of objects; and
generating, by one or more processors, the label-based descriptor for the input image as a weighted combination of at least the positional vector, the appearance vector and the shape vector.
2. The method of claim 1 , wherein generating the positional vector comprises:
dividing the input image into a grid comprising a plurality of cells;
determining a distribution of each of the classes of objects within each cell; and
encoding the distribution of each of the classes of objects in the positional vector.
3. The method of claim 1 , wherein generating the appearance vector comprises:
dividing the input image into a grid comprising a plurality of cells;
determining a mean color of each of the object classes within each cell; and
encoding the mean color in the appearance vector.
4. The method of claim 1 ,
wherein the input image is a street view image.
5. The method of claim 1 , further comprising:
determining a cluster of similar images to the input image based on a distance measure between the label-based descriptor for the input image and label-based descriptors for a plurality of labeled images in an image database; and
applying a local classification model to the input image, the local classification model associated with the determined cluster of similar images.
6. The method of claim 1 , further comprising:
receiving, from a similar image search query system, a plurality of similar images determined as being similar to the input image;
generating label-based descriptors for each of the plurality of similar images;
comparing the label-based descriptor for the input image to the label-based descriptors for the plurality of similar images to determine distance metrics; and
ranking the plurality of similar images in a list of search results based on the distance metrics.
7. An apparatus for generating a label-based descriptor representing a labeled image, the apparatus comprising:
memory configured to store image-related data; and
one or more hardware processors operatively coupled to the memory, the one or more processors being configured to:
receive an input image having a plurality of pixels and a plurality of labels, each label associated with one of the plurality of pixels, and each label indicating a class of objects depicted by the associated pixel from a predefined set of classes;
generate a positional vector for the input image based on the plurality of labels, the positional vector representing positional information pertaining to each of the classes of objects depicted in the input image;
generate an appearance vector for the input image based on the plurality of labels, the appearance vector representing appearance of the classes of objects depicted in the input image;
generate a shape vector for the input image based on the plurality of labels, the shape vector representing a distribution of boundaries between pairs of the classes of objects,
wherein to generate the shape vector comprises evaluating an orientation distribution of boundaries between pairs of different classes of objects;
generate the label-based descriptor for the input image as a weighted combination of at least the positional vector, the appearance vector and the shape vector; and
store the label-based descriptor in the memory.
8. The apparatus of claim 7 , wherein the one or more processors are configured to generate the positional vector by:
dividing the input image into a grid comprising a plurality of cells;
determining a distribution of each of the classes of objects within each cell; and
encoding the distribution of each of the classes of objects in the positional vector.
9. The apparatus of claim 7 , wherein the one or more processors are configured to generate the appearance vector by:
dividing the input image into a grid comprising a plurality of cells;
determining a mean color of each of the object classes within each cell; and
encoding the mean color in the appearance vector.
10. The apparatus of claim 7 , wherein the input image is a street view image.
11. The apparatus of claim 7 , wherein the one or more processors are further configured to:
determine a cluster of similar images to the input image based on a distance measure between the label-based descriptor for the input image and label-based descriptors for a plurality of labeled images in an image database; and
apply a local classification model to the input image, the local classification model associated with the determined cluster of similar images.
12. The apparatus of claim 7 , wherein the one or more processors are further configured to:
receive, from a similar image search query system, a plurality of similar images determined as being similar to the input image;
generate label-based descriptors for each of the plurality of similar images;
compare the label-based descriptor for the input image to the label-based descriptors for the plurality of similar images to determine distance metrics; and
rank the plurality of similar images in a list of search results based on the distance metrics.
13. A non-transitory computer-readable storage medium recorded with instructions, the instructions, when executed by one or more computing devices, cause the one or more computing devices to implement a method for generating a label-based descriptor representing a labeled image, the method comprising:
receiving an input image having a plurality of pixels and a plurality of labels, each label associated with one of the plurality of pixels, and each label indicating a class of objects depicted by the associated pixel from a predefined set of classes;
generating, by one or more processors, a positional vector for the input image based on the plurality of labels, the positional vector representing positional information pertaining to each of the classes of objects depicted in the input image;
generating, by one or more processors, an appearance vector for the input image based on the plurality of labels, the appearance vector representing appearance of the classes of objects depicted in the input image;
generating, by one or more processors, a shape vector for the input image based on the plurality of labels, the shape vector representing a distribution of boundaries between pairs of the classes of objects, wherein generating the shape vector comprises evaluating an orientation distribution of boundaries between pairs of different classes of objects; and
generating, by one or more processors, the label-based descriptor for the input image as a weighted combination of at least the positional vector, the appearance vector and the shape vector.
14. The non-transitory computer-readable storage medium of claim 13 , wherein generating the positional vector comprises:
dividing the input image into a grid comprising a plurality of cells;
determining a distribution of each of the classes of objects within each cell; and
encoding the distribution of each of the classes of objects in the positional vector.
15. The non-transitory computer-readable storage medium of claim 13 , wherein generating the appearance vector comprises:
dividing the input image into a grid comprising a plurality of cells;
determining a mean color of each of the object classes within each cell; and
encoding the mean color in the appearance vector.
16. The non-transitory computer-readable storage medium of claim 13 , wherein the input image is a street view image.
17. The non-transitory computer-readable storage medium of claim 13 , wherein the method further comprises:
determining a cluster of similar images to the input image based on a distance measure between the label-based descriptor for the input image and label-based descriptors for a plurality of labeled images in an image database; and
applying a local classification model to the input image, the local classification model associated with the determined cluster of similar images.
18. The non-transitory computer-readable storage medium of claim 13 , wherein the method further comprises:
receiving, from a similar image search query system, a plurality of similar images determined as being similar to the input image;
generating label-based descriptors for each of the plurality of similar images;
comparing the label-based descriptor for the input image to the label-based descriptors for the plurality of similar images to determine distance metrics; and
ranking the plurality of similar images in a list of search results based on the distance metrics.
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US15/232,941 US10102443B1 (en) | 2012-03-29 | 2016-08-10 | Hierarchical conditional random field model for labeling and segmenting images |
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/434,515 US9443314B1 (en) | 2012-03-29 | 2012-03-29 | Hierarchical conditional random field model for labeling and segmenting images |
US15/232,941 US10102443B1 (en) | 2012-03-29 | 2016-08-10 | Hierarchical conditional random field model for labeling and segmenting images |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/434,515 Division US9443314B1 (en) | 2012-03-29 | 2012-03-29 | Hierarchical conditional random field model for labeling and segmenting images |
Publications (1)
Publication Number | Publication Date |
---|---|
US10102443B1 true US10102443B1 (en) | 2018-10-16 |
Family
ID=56881345
Family Applications (3)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/434,515 Active 2035-05-22 US9443314B1 (en) | 2012-03-29 | 2012-03-29 | Hierarchical conditional random field model for labeling and segmenting images |
US14/671,445 Expired - Fee Related US9679226B1 (en) | 2012-03-29 | 2015-03-27 | Hierarchical conditional random field model for labeling and segmenting images |
US15/232,941 Active US10102443B1 (en) | 2012-03-29 | 2016-08-10 | Hierarchical conditional random field model for labeling and segmenting images |
Family Applications Before (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/434,515 Active 2035-05-22 US9443314B1 (en) | 2012-03-29 | 2012-03-29 | Hierarchical conditional random field model for labeling and segmenting images |
US14/671,445 Expired - Fee Related US9679226B1 (en) | 2012-03-29 | 2015-03-27 | Hierarchical conditional random field model for labeling and segmenting images |
Country Status (1)
Country | Link |
---|---|
US (3) | US9443314B1 (en) |
Cited By (5)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20180060354A1 (en) * | 2016-08-31 | 2018-03-01 | Facebook, Inc. | Systems and methods for processing media content that depict objects |
CN110083727A (en) * | 2019-03-29 | 2019-08-02 | 广州思德医疗科技有限公司 | A kind of method and device of determining tag along sort |
WO2020144508A1 (en) * | 2019-01-07 | 2020-07-16 | International Business Machines Corporation | Representative-based metric learning for classification and few-shot object detection |
US10997748B2 (en) * | 2019-04-19 | 2021-05-04 | The Boeing Company | Machine learning model development with unsupervised image selection |
US11062169B2 (en) * | 2013-08-19 | 2021-07-13 | Nant Holdings Ip, Llc | Metric-based recognition, systems and methods |
Families Citing this family (38)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9443314B1 (en) * | 2012-03-29 | 2016-09-13 | Google Inc. | Hierarchical conditional random field model for labeling and segmenting images |
US20170132457A1 (en) * | 2014-06-27 | 2017-05-11 | Beijing Qihoo Technology Company Limited | Human face similarity recognition method and system |
GB201511334D0 (en) * | 2015-06-29 | 2015-08-12 | Nokia Technologies Oy | A method, apparatus, computer and system for image analysis |
US11609946B2 (en) | 2015-10-05 | 2023-03-21 | Pinterest, Inc. | Dynamic search input selection |
US9904867B2 (en) | 2016-01-29 | 2018-02-27 | Pointivo, Inc. | Systems and methods for extracting information about objects from scene information |
US10319198B2 (en) | 2016-05-02 | 2019-06-11 | Focal Systems, Inc. | Expedited checkout system through portable checkout units |
US10424064B2 (en) * | 2016-10-18 | 2019-09-24 | Adobe Inc. | Instance-level semantic segmentation system |
CN106570874B (en) * | 2016-11-10 | 2021-03-23 | 宁波大学 | Image marking method combining image local constraint and object global constraint |
WO2018144650A1 (en) | 2017-01-31 | 2018-08-09 | Focal Systems, Inc. | Automated checkout system through mobile shopping units |
WO2018141429A1 (en) * | 2017-02-03 | 2018-08-09 | Siemens Aktiengesellschaft | A method and apparatus for detecting objects of interest in images |
US11120385B2 (en) * | 2017-03-03 | 2021-09-14 | Adp, Llc | Job level prediction |
CA3063176A1 (en) | 2017-05-12 | 2018-11-15 | Focal Systems, Inc. | Automatic labeling of products via expedited checkout system |
US11841735B2 (en) | 2017-09-22 | 2023-12-12 | Pinterest, Inc. | Object based image search |
US10942966B2 (en) * | 2017-09-22 | 2021-03-09 | Pinterest, Inc. | Textual and image based search |
US20190213790A1 (en) * | 2018-01-11 | 2019-07-11 | Mitsubishi Electric Research Laboratories, Inc. | Method and System for Semantic Labeling of Point Clouds |
WO2019211856A1 (en) * | 2018-05-02 | 2019-11-07 | Saferide Technologies Ltd. | Detecting abnormal events in vehicle operation based on machine learning analysis of messages transmitted over communication channels |
WO2019210421A1 (en) * | 2018-05-04 | 2019-11-07 | Xpertsea Solutions Inc | A scale for determining the weight of organisms |
CN109086340A (en) * | 2018-07-10 | 2018-12-25 | 太原理工大学 | Evaluation object recognition methods based on semantic feature |
CN109345537B (en) * | 2018-08-17 | 2021-02-12 | 西安电子科技大学 | SAR image segmentation method based on high-order multi-scale CRF semi-supervision |
CN109101931A (en) * | 2018-08-20 | 2018-12-28 | Oppo广东移动通信有限公司 | A kind of scene recognition method, scene Recognition device and terminal device |
CN111061889B (en) * | 2018-10-16 | 2024-03-29 | 京东方艺云(杭州)科技有限公司 | Automatic identification method and device for multiple labels of picture |
CN109558904A (en) * | 2018-11-21 | 2019-04-02 | 咪咕文化科技有限公司 | Classification method, device and the storage medium of image local feature |
US11080324B2 (en) * | 2018-12-03 | 2021-08-03 | Accenture Global Solutions Limited | Text domain image retrieval |
US11532145B2 (en) | 2019-01-07 | 2022-12-20 | Microsoft Technology Licensing, Llc | Multi-region image scanning |
CN110097058B (en) * | 2019-04-15 | 2022-09-09 | 河海大学常州校区 | Automatic labeling method for irregular form image object based on area weighted combination |
CN110070531B (en) * | 2019-04-19 | 2021-05-07 | 京东方科技集团股份有限公司 | Model training method for detecting fundus picture, and fundus picture detection method and device |
CN110070070B (en) * | 2019-04-30 | 2021-03-02 | 苏州大学 | Action recognition method |
CN110084211B (en) * | 2019-04-30 | 2020-12-18 | 苏州大学 | Action recognition method |
CN110853000B (en) * | 2019-10-30 | 2023-08-11 | 北京中交国通智能交通系统技术有限公司 | Rut detection method |
US11295162B2 (en) * | 2019-11-01 | 2022-04-05 | Massachusetts Institute Of Technology | Visual object instance descriptor for place recognition |
CN112906726B (en) * | 2019-11-20 | 2024-01-16 | 北京沃东天骏信息技术有限公司 | Model training method, image processing device, computing equipment and medium |
CN111090763B (en) * | 2019-11-22 | 2024-04-05 | 北京视觉大象科技有限公司 | Picture automatic labeling method and device |
CN111862328B (en) * | 2020-06-30 | 2022-07-01 | 首都师范大学 | Three-dimensional grid segmentation result labeling method based on small samples |
TWI744000B (en) * | 2020-09-21 | 2021-10-21 | 財團法人資訊工業策進會 | Image labeling apparatus, method, and computer program product thereof |
CN112465020B (en) * | 2020-11-25 | 2023-04-07 | 创新奇智(合肥)科技有限公司 | Training data set generation method and device, electronic equipment and storage medium |
TW202232437A (en) * | 2021-02-09 | 2022-08-16 | 阿物科技股份有限公司 | Method and system for classifying and labeling images |
WO2023230769A1 (en) * | 2022-05-30 | 2023-12-07 | 西门子股份公司 | Cad model search method, cad model clustering and classification model generation method, apparatus and storage medium |
US11783609B1 (en) * | 2022-11-30 | 2023-10-10 | Intuit Inc. | Scalable weak-supervised learning with domain constraints |
Citations (15)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20040267740A1 (en) * | 2000-10-30 | 2004-12-30 | Microsoft Corporation | Image retrieval systems and methods with semantic and feature based relevance feedback |
US20080075367A1 (en) | 2006-09-21 | 2008-03-27 | Microsoft Corporation | Object Detection and Recognition System |
US20080304740A1 (en) | 2007-06-06 | 2008-12-11 | Microsoft Corporation | Salient Object Detection |
US20090316988A1 (en) | 2008-06-18 | 2009-12-24 | Samsung Electronics Co., Ltd. | System and method for class-specific object segmentation of image data |
US20100040285A1 (en) | 2008-08-14 | 2010-02-18 | Xerox Corporation | System and method for object class localization and semantic class based image segmentation |
US20100128984A1 (en) | 2008-11-25 | 2010-05-27 | Microsoft Corporation | Labeling Image Elements |
US20100322525A1 (en) * | 2009-06-19 | 2010-12-23 | Microsoft Corporation | Image Labeling Using Multi-Scale Processing |
US20110064303A1 (en) | 2006-09-21 | 2011-03-17 | Microsoft Corporation | Object Recognition Using Textons and Shape Filters |
US20110116708A1 (en) * | 2009-11-18 | 2011-05-19 | Nec Laboratories America, Inc. | Fast image parsing by graph adaptive dynamic programming |
US20110200230A1 (en) | 2008-10-10 | 2011-08-18 | Adc Automotive Distance Control Systems Gmbh | Method and device for analyzing surrounding objects and/or surrounding scenes, such as for object and scene class segmenting |
US20120128237A1 (en) * | 2010-11-22 | 2012-05-24 | Su Wang | Superpixel-boosted top-down image recognition methods and systems |
US20120269436A1 (en) | 2011-04-20 | 2012-10-25 | Xerox Corporation | Learning structured prediction models for interactive image labeling |
US20120327172A1 (en) * | 2011-06-22 | 2012-12-27 | Microsoft Corporation | Modifying video regions using mobile device input |
US20130084007A1 (en) | 2011-10-03 | 2013-04-04 | Xerox Corporation | Graph-based segmentation integrating visible and nir information |
US9443314B1 (en) * | 2012-03-29 | 2016-09-13 | Google Inc. | Hierarchical conditional random field model for labeling and segmenting images |
-
2012
- 2012-03-29 US US13/434,515 patent/US9443314B1/en active Active
-
2015
- 2015-03-27 US US14/671,445 patent/US9679226B1/en not_active Expired - Fee Related
-
2016
- 2016-08-10 US US15/232,941 patent/US10102443B1/en active Active
Patent Citations (15)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20040267740A1 (en) * | 2000-10-30 | 2004-12-30 | Microsoft Corporation | Image retrieval systems and methods with semantic and feature based relevance feedback |
US20110064303A1 (en) | 2006-09-21 | 2011-03-17 | Microsoft Corporation | Object Recognition Using Textons and Shape Filters |
US20080075367A1 (en) | 2006-09-21 | 2008-03-27 | Microsoft Corporation | Object Detection and Recognition System |
US20080304740A1 (en) | 2007-06-06 | 2008-12-11 | Microsoft Corporation | Salient Object Detection |
US20090316988A1 (en) | 2008-06-18 | 2009-12-24 | Samsung Electronics Co., Ltd. | System and method for class-specific object segmentation of image data |
US20100040285A1 (en) | 2008-08-14 | 2010-02-18 | Xerox Corporation | System and method for object class localization and semantic class based image segmentation |
US20110200230A1 (en) | 2008-10-10 | 2011-08-18 | Adc Automotive Distance Control Systems Gmbh | Method and device for analyzing surrounding objects and/or surrounding scenes, such as for object and scene class segmenting |
US20100128984A1 (en) | 2008-11-25 | 2010-05-27 | Microsoft Corporation | Labeling Image Elements |
US20100322525A1 (en) * | 2009-06-19 | 2010-12-23 | Microsoft Corporation | Image Labeling Using Multi-Scale Processing |
US20110116708A1 (en) * | 2009-11-18 | 2011-05-19 | Nec Laboratories America, Inc. | Fast image parsing by graph adaptive dynamic programming |
US20120128237A1 (en) * | 2010-11-22 | 2012-05-24 | Su Wang | Superpixel-boosted top-down image recognition methods and systems |
US20120269436A1 (en) | 2011-04-20 | 2012-10-25 | Xerox Corporation | Learning structured prediction models for interactive image labeling |
US20120327172A1 (en) * | 2011-06-22 | 2012-12-27 | Microsoft Corporation | Modifying video regions using mobile device input |
US20130084007A1 (en) | 2011-10-03 | 2013-04-04 | Xerox Corporation | Graph-based segmentation integrating visible and nir information |
US9443314B1 (en) * | 2012-03-29 | 2016-09-13 | Google Inc. | Hierarchical conditional random field model for labeling and segmenting images |
Non-Patent Citations (30)
Title |
---|
Comaniciu, D., "Mean Shift: A Robust Approach Toward Feature Space Analysis," IEEE Transactions on Pattern Analysis and Machine Intelligence, 24(5):603-619, May 2002. |
Fulkerson, Brian, Andrea Vedaldi, and Stefano Soatto. "Class Segmentation and Object Localization with Superpixel Neighborhoods." Computer Vision, 2009 IEEE 12th International Conference on. IEEE, 2009. 8 pages. |
Galleguillos, C., et al., "Object Categorization using Co-Occurrence, Location and Appearance," IEEE Conference on Computer Vision and Pattern Recognition, pp. 1-8, Jun. 2008. |
Gould, Stephen, et al. "Multi-Class Segmentation with Relative Location Prior." International Journal of Computer Vision 80.3 (2008): 300-316. 17 pages. |
Hays, J., et al., "Scene Completion Using Millions of Photographs," ACM Transactions on Graphics, vol. 26, No. 3, Article 4, 7 pages, Jul. 2007. |
He, X., et al., "Multiscale Conditional Random Fields for Image Labeling," Proceedings of the 2004 IEEE Computer Society Conference on Computer Vision and Pattern Recognition (CVPR'04), pp. 695-702, 2004. |
He, Xuming, Richard S. Zemel, and Debajyoti Ray. "Learning and Incorporating Top-Down Cues in Image Segmentation." Computer Vision-ECCV 2006. Springer Berlin Heidelberg, 2006. 338-351. 14 pages. |
He, Xuming, Richard S. Zemel, and Debajyoti Ray. "Learning and incorporating top-down cues in image segmentation." European conference on computer vision. Springer, Berlin, Heidelberg, 2006. 14 pages. * |
He, Xuming, Richard S. Zemel, and Debajyoti Ray. "Learning and Incorporating Top-Down Cues in Image Segmentation." Computer Vision—ECCV 2006. Springer Berlin Heidelberg, 2006. 338-351. 14 pages. |
Hoiem, D., et al., "Geometric Context from a Single Image," Proceedings of the Tenth IEEE International Conference on Computer Vision (ICCV'05), vol. 1, pp. 654-661, Oct. 2005. |
Huang, Qixing, et al., "A Hierarchical Conditional Random Field Model for Labeling and Segmenting Images of Street Scenes." Computer Vision and Pattern Recognition (CVPR), 2011 IEEE Conference on. IEEE, 2011. 10 pages. |
Kohli, P., et al., "Robust Higher Order Potentials for Enforcing Label Consistency," Int. J. Comput. Vis. A82:302-324, Jan. 2009. |
Kumar, Sanjiv, and Martial Hebert. "A Hierarchical Field Framework for Unified Context-Based Classification." Computer Vision, 2005. ICCV 2005. Tenth IEEE International Conference on. vol. 2. IEEE, 2005. 8 pages. |
Ladicky, L., et al., "Graph Cut Based Inference with Co-occurrence Statistics," ECCV 2010, Part V, LNCS 6315, pp. 239-253, 2010. |
Ladický, L'ubor et al. "Associative Hierarchical CRFs for Object Class Image Segmentation." Computer Vision, 2009 IEEE 12th International Conference on. IEEE, 2009. 10 pages. |
Lazebnik, S., et al., "Beyond Bags of Features: Spatial Pyramid Matching for Recognizing Natural Scene Categories," Proceedings of the 2006 IEEE Computer Society Conference on Computer Vision and Pattern Recognition (CVPR'06), pp. 2169-2178, 2006. |
Leordeanu M. et al., "Efficient MAP Approximation for Dense Energy Functions," Proceedings of the 23rd International Conference on Machine Learning, Pittsburgh, PA, pp. 545-552, 2006. |
Liu, C., et al., "Nonparametric Scene Parsing: Label Transfer via Dense Scene Alignment," IEEE Conference on Computer Vision and Pattern Recognition, pp. 1972-1979, 2009. |
Liu, Ming-Yu, et al. "Entropy Rate Superpixel Segmentation. "Computer Vision and Pattern Recognition (CVPR), 2011 IEEE Conference on. IEEE, 2011. 10 pages. |
Oliva, A., et al., "Building the gist of a scene: the role of global image features in recognition," Progress in Brain Research 155:23-36, 2006. |
Rabinovich, A., et al., "Objects in Context," IEEE 11th International Conference on Computer Vision, pp. 1-8, Oct. 2007. |
Russell, B., et al., "LabelMe: A Database and Web-Based Tool for Image Annotation," Int. J. Comput. Vis. 77:157-173, 2008. |
Shotton, J., et al., "TextonBoost: Joint Appearance, Shape and Context Modeling for Multi-class Object Recognition and Segmentation," ECCV 2006, Part I, LNCS 3951, pp. 1-15, 2006. |
Shotton, Jamie, et al. "TextonBoost for Image Understanding: Multi-Class Object Recognition and Segmentation by Jointly Modeling Texture, Layout, and Context." (2007). 30 pages. * |
Tighe, J., et al., "SuperParsing: Scalable Nonparametric Image Parsing with Superpixels," ECCV 2010, Part V, LNCS 6315, pp. 352-365, 2010. |
Torralba, A., et al., "Context-based vision system for place and object recognition," Proceedings of the Ninth IEEE International Conference on Computer Vision (ICCV'03), pp. 273-280, 2003. |
Torralba, A., et al., "Sharing features: efficient boosting procedures for multiclass object detection," Proceedings of the 2004 IEEE Computer Society Conference on Computer Vision and Pattern Recognition (CVPR'04), pp. 762-769, 2004. |
Toyoda, T., et al., "Random Field Model for Integration of Local Information and Global Information," IEEE Transactions on Pattern Analysis and Machine Intelligence 30(8): 1483-1489, Aug. 2008. |
Veksler, O., et al., "Superpixels and Supervoxels in an Energy Optimization Framework," ECCV 2010, Part V, LNCS 5315, pp. 211-224, 2010. |
Wang, Xiaofeng, et al. "A new image labeling method based on content-based image retrieval and conditional random field." Image and Signal Processing and Analysis, 2009. ISPA 2009. Proceedings of 6th International Symposium on. IEEE, 2009. 6 pages. * |
Cited By (7)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US11062169B2 (en) * | 2013-08-19 | 2021-07-13 | Nant Holdings Ip, Llc | Metric-based recognition, systems and methods |
US20180060354A1 (en) * | 2016-08-31 | 2018-03-01 | Facebook, Inc. | Systems and methods for processing media content that depict objects |
US10552473B2 (en) * | 2016-08-31 | 2020-02-04 | Facebook, Inc. | Systems and methods for processing media content that depict objects |
WO2020144508A1 (en) * | 2019-01-07 | 2020-07-16 | International Business Machines Corporation | Representative-based metric learning for classification and few-shot object detection |
US10832096B2 (en) | 2019-01-07 | 2020-11-10 | International Business Machines Corporation | Representative-based metric learning for classification and few-shot object detection |
CN110083727A (en) * | 2019-03-29 | 2019-08-02 | 广州思德医疗科技有限公司 | A kind of method and device of determining tag along sort |
US10997748B2 (en) * | 2019-04-19 | 2021-05-04 | The Boeing Company | Machine learning model development with unsupervised image selection |
Also Published As
Publication number | Publication date |
---|---|
US9443314B1 (en) | 2016-09-13 |
US9679226B1 (en) | 2017-06-13 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US10102443B1 (en) | Hierarchical conditional random field model for labeling and segmenting images | |
Chaudhuri et al. | Multilabel remote sensing image retrieval using a semisupervised graph-theoretic method | |
EP2955645B1 (en) | System for automated segmentation of images through layout classification | |
EP2701098B1 (en) | Region refocusing for data-driven object localization | |
Fergus et al. | Learning object categories from google's image search | |
Liu et al. | Nonparametric scene parsing via label transfer | |
US7840059B2 (en) | Object recognition using textons and shape filters | |
US8873812B2 (en) | Image segmentation using hierarchical unsupervised segmentation and hierarchical classifiers | |
US20140219563A1 (en) | Label-embedding for text recognition | |
Hu et al. | Markov random fields for sketch based video retrieval | |
Abdullah et al. | Fixed partitioning and salient points with MPEG-7 cluster correlograms for image categorization | |
Chen et al. | Discriminative BoW framework for mobile landmark recognition | |
Dharani et al. | Content based image retrieval system using feature classification with modified KNN algorithm | |
Ali et al. | Content-based image retrieval based on late fusion of binary and local descriptors | |
Zhang et al. | Spatial contextual superpixel model for natural roadside vegetation classification | |
Micusik et al. | Semantic parsing of street scenes from video | |
CN111414958B (en) | Multi-feature image classification method and system for visual word bag pyramid | |
Zhuang et al. | A novel outdoor scene-understanding framework for unmanned ground vehicles with 3D laser scanners | |
Mansourian et al. | An effective fusion model for image retrieval | |
Zhou et al. | Semantic image segmentation using low-level features and contextual cues | |
Khelifi et al. | Mc-SSM: nonparametric semantic image segmentation with the ICM algorithm | |
Lu et al. | Image categorization via robust pLSA | |
Choudhuri et al. | Object localization on natural scenes: A survey | |
Chu et al. | Scene classification based on SIFT combined with GIST | |
CN111209948A (en) | Image processing method and device and electronic equipment |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 4 |
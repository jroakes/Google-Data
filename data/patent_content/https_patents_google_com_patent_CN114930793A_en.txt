CN114930793A - Operating system level assistance functionality for contextual privacy - Google Patents
Operating system level assistance functionality for contextual privacy Download PDFInfo
- Publication number
- CN114930793A CN114930793A CN202080091160.5A CN202080091160A CN114930793A CN 114930793 A CN114930793 A CN 114930793A CN 202080091160 A CN202080091160 A CN 202080091160A CN 114930793 A CN114930793 A CN 114930793A
- Authority
- CN
- China
- Prior art keywords
- devices
- user
- context
- computing
- home
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Pending
Links
- 238000000034 method Methods 0.000 claims abstract description 72
- 230000004044 response Effects 0.000 claims abstract description 36
- 230000015654 memory Effects 0.000 claims description 44
- 230000006870 function Effects 0.000 claims description 21
- 238000012790 confirmation Methods 0.000 claims description 6
- 238000009826 distribution Methods 0.000 claims description 6
- 230000001755 vocal effect Effects 0.000 claims description 5
- 230000000694 effects Effects 0.000 description 42
- 238000004891 communication Methods 0.000 description 39
- 238000003860 storage Methods 0.000 description 28
- 230000007613 environmental effect Effects 0.000 description 19
- 238000010586 diagram Methods 0.000 description 17
- 230000009471 action Effects 0.000 description 16
- 238000004590 computer program Methods 0.000 description 15
- 230000008569 process Effects 0.000 description 15
- 239000000203 mixture Substances 0.000 description 13
- 230000002853 ongoing effect Effects 0.000 description 11
- 230000008859 change Effects 0.000 description 10
- 238000012545 processing Methods 0.000 description 9
- 239000000779 smoke Substances 0.000 description 8
- 239000003795 chemical substances by application Substances 0.000 description 7
- 230000001960 triggered effect Effects 0.000 description 7
- 230000000007 visual effect Effects 0.000 description 7
- 238000004458 analytical method Methods 0.000 description 6
- 230000003993 interaction Effects 0.000 description 6
- 238000012986 modification Methods 0.000 description 6
- 230000004048 modification Effects 0.000 description 6
- 238000013459 approach Methods 0.000 description 4
- 230000001413 cellular effect Effects 0.000 description 4
- 239000002131 composite material Substances 0.000 description 4
- 230000033001 locomotion Effects 0.000 description 4
- 238000012544 monitoring process Methods 0.000 description 4
- 230000003287 optical effect Effects 0.000 description 4
- 230000001360 synchronised effect Effects 0.000 description 4
- 230000006399 behavior Effects 0.000 description 3
- 230000008901 benefit Effects 0.000 description 3
- 238000004364 calculation method Methods 0.000 description 3
- 238000001514 detection method Methods 0.000 description 3
- 238000005516 engineering process Methods 0.000 description 3
- 238000012423 maintenance Methods 0.000 description 3
- 238000005259 measurement Methods 0.000 description 3
- 230000002093 peripheral effect Effects 0.000 description 3
- 230000001133 acceleration Effects 0.000 description 2
- 239000002386 air freshener Substances 0.000 description 2
- 238000011156 evaluation Methods 0.000 description 2
- 239000004973 liquid crystal related substance Substances 0.000 description 2
- 238000004519 manufacturing process Methods 0.000 description 2
- 230000000717 retained effect Effects 0.000 description 2
- 239000004065 semiconductor Substances 0.000 description 2
- 238000012546 transfer Methods 0.000 description 2
- 230000004913 activation Effects 0.000 description 1
- 239000008186 active pharmaceutical agent Substances 0.000 description 1
- 230000005540 biological transmission Effects 0.000 description 1
- 230000000903 blocking effect Effects 0.000 description 1
- 238000003780 insertion Methods 0.000 description 1
- 230000037431 insertion Effects 0.000 description 1
- 230000007246 mechanism Effects 0.000 description 1
- 230000001404 mediated effect Effects 0.000 description 1
- 230000006855 networking Effects 0.000 description 1
- 238000011160 research Methods 0.000 description 1
- 239000007787 solid Substances 0.000 description 1
- 239000000126 substance Substances 0.000 description 1
- 238000006467 substitution reaction Methods 0.000 description 1
- 239000013589 supplement Substances 0.000 description 1
- 230000002123 temporal effect Effects 0.000 description 1
- 239000010409 thin film Substances 0.000 description 1
- 238000002604 ultrasonography Methods 0.000 description 1
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/50—Network services
- H04L67/60—Scheduling or organising the servicing of application requests, e.g. requests for application data transmissions using the analysis and optimisation of the required network resources
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F21/00—Security arrangements for protecting computers, components thereof, programs or data against unauthorised activity
- G06F21/10—Protecting distributed programs or content, e.g. vending or licensing of copyrighted material ; Digital rights management [DRM]
- G06F21/12—Protecting executable software
- G06F21/121—Restricting unauthorised execution of programs
- G06F21/125—Restricting unauthorised execution of programs by manipulating the program code, e.g. source code, compiled code, interpreted code, machine code
- G06F21/126—Interacting with the operating system
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F9/00—Arrangements for program control, e.g. control units
- G06F9/06—Arrangements for program control, e.g. control units using stored programs, i.e. using an internal store of processing equipment to receive or retain programs
- G06F9/30—Arrangements for executing machine instructions, e.g. instruction decode
- G06F9/30098—Register arrangements
- G06F9/3012—Organisation of register space, e.g. banked or distributed register file
- G06F9/30123—Organisation of register space, e.g. banked or distributed register file according to context, e.g. thread buffers
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F9/00—Arrangements for program control, e.g. control units
- G06F9/06—Arrangements for program control, e.g. control units using stored programs, i.e. using an internal store of processing equipment to receive or retain programs
- G06F9/46—Multiprogramming arrangements
- G06F9/48—Program initiating; Program switching, e.g. by interrupt
- G06F9/4806—Task transfer initiation or dispatching
- G06F9/4843—Task transfer initiation or dispatching by program, e.g. task dispatcher, supervisor, operating system
- G06F9/4881—Scheduling strategies for dispatcher, e.g. round robin, multi-level priority queues
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F9/00—Arrangements for program control, e.g. control units
- G06F9/06—Arrangements for program control, e.g. control units using stored programs, i.e. using an internal store of processing equipment to receive or retain programs
- G06F9/46—Multiprogramming arrangements
- G06F9/50—Allocation of resources, e.g. of the central processing unit [CPU]
- G06F9/5005—Allocation of resources, e.g. of the central processing unit [CPU] to service a request
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F9/00—Arrangements for program control, e.g. control units
- G06F9/06—Arrangements for program control, e.g. control units using stored programs, i.e. using an internal store of processing equipment to receive or retain programs
- G06F9/46—Multiprogramming arrangements
- G06F9/54—Interprogram communication
- G06F9/547—Remote procedure calls [RPC]; Web services
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/01—Protocols
- H04L67/10—Protocols in which an application is distributed across nodes in the network
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/01—Protocols
- H04L67/12—Protocols specially adapted for proprietary or special-purpose networking environments, e.g. medical networks, sensor networks, networks in vehicles or remote metering networks
Abstract
Systems and methods are described that include operations such as: the method includes detecting a plurality of computing devices configured as a distributed environment computing system, receiving a request to perform a computing task, obtaining data representing a device context for at least two of the plurality of devices from the distributed environment computing system, generating a combined context corresponding to the distributed environment computing system, the combined context representing a combination of the device contexts for the at least two devices, generating and providing at least one decision request based on the computing task and the combined context, receiving a response to the at least one decision request, and triggering performance of the computing task based on the response and the combined context.
Description
Cross Reference to Related Applications
The present application claims priority from us provisional patent application No.62/955,767 entitled "OPERATING SYSTEM level assist FEATURES FOR CONTEXTUAL PRIVACY" (operative SYSTEM-LEVEL ASSISTIVE featurs FOR context prior) filed on 31.12.2019 and us provisional patent application No.62/955,772 entitled "OPERATING SYSTEM level assist FEATURES FOR family ACCOUNTS" (operative SYSTEM-LEVEL ASSISTIVE featurs FOR use of hot account ") filed on 31.12.2019, the disclosures of which are incorporated herein by reference in their entireties.
Background
Conventional electronic devices may execute software using an operating system. For example, a mobile phone device may be configured to operate hardware and onboard software with a dedicated operating system that communicates between hardware components on the device. Such operating systems are typically intended to control and manage software and hardware functions on the device. The other electronic devices may operate in the same manner using the respective on-board device operating systems to execute software for each respective separate device.
Disclosure of Invention
The systems and methods described herein provide a distributed environment computing platform that operates together with environment computing devices (e.g., electronic devices) as a distributed computing system. The platform may serve as a framework in which an operating system of each of the electronic devices (e.g., computing devices, environmental devices, etc.) can be configured to perform and/or share data, family accounts, contexts, and/or tasks (e.g., computing actions) between the devices using context-aware computing techniques. Sharing of data, home accounts, context, and/or computing tasks may be based on user control of the device (e.g., a distributed environment computing platform) and local sharing within a user-defined environment. The sharing of the analysis of data, context, tasks, and any such elements may be performed securely (e.g., cryptographically secured) within and on devices of the home, and may not be distributed to service providers or other storage elements without explicit user permission. In some implementations, the platform can serve as a framework in which an operating system of each of the electronic devices (e.g., computing devices, environmental devices, etc.) can be configured to perform and/or share data, context, policies, rules, and/or tasks (e.g., computing any or actions) between devices within a particular defined location (e.g., a building, a home structure, a school, an office building, a home, etc.) that are related to the distributed computing system.
A system of one or more computers can be configured to perform particular operations or actions by virtue of installing software, firmware, hardware, or a combination thereof, on the system that, when operated, causes the system to perform the actions. One or more computer programs can be configured to perform particular operations or actions by virtue of comprising instructions that, when executed by data processing apparatus, cause the apparatus to perform the actions.
In a first general aspect, a computer-implemented method is described, comprising: the method includes detecting a plurality of computing devices configured as a distributed environment computing system, receiving a request to perform a computing task, obtaining data representing a device context for at least two of the plurality of devices from the distributed environment computing system, generating a combined context corresponding to the distributed environment computing system, the combined context representing a combination of the device contexts for the at least two devices, generating and providing at least one decision request based on the computing task and the combined context, receiving a response to the at least one decision request, and triggering performance of the computing task based on the response and the combined context.
These and other aspects can include one or more of the following, alone or in combination. For example, the computing task may be to configure a service on at least two devices, the data may include a device type and an operating system for each of the at least two devices, the combined context may include an indication of whether each of the at least two devices is available for use, and the at least one decision request may be a query indicating whether the computing task is to be performed on the at least two devices. In response to detecting confirmation to perform a computing task on at least two devices, the method, system, or computer-readable medium may include configuring a service for the at least two devices.
In some implementations, the method can also include distributing the combined context to a plurality of computing devices configured as a distributed environment computing system. The distributed combined context may trigger performance of the computing task on two or more of the plurality of devices.
In some implementations, at least two devices are selected based on the determined physical location of each respective device, and a combined context is used to configure the at least two device configurations to function together to perform a computing task. In some implementations, the request can include a verbal request, the combined context can also represent a plurality of computing devices configured for the distributed environment computing system, and the computing task is distributed for completion on two or more of the plurality of computing devices based on the combined context.
In some implementations, the device context is based at least in part on the device capabilities, the preconfigured permissions, and the device location. In some implementations, the combined context is generated in response to determining that at least two devices are configured to operate together to perform a computing task. In some implementations, the combined context is configured to enable the plurality of devices to trigger a private mode in accordance with a preconfigured permission associated with the distributed environment computing system, the private mode configured to invoke the preconfigured permission to obfuscate content associated with each respective device and prevent access to one or more functions associated with each respective device. In some implementations, a distributed environment computing system is configured for a building associated with a plurality of computing devices, the distributed environment computing system providing a digital identification for the building.
The above-described systems and aspects may be configured to perform any combination of the above-described aspects, each of which may be implemented with any suitable combination of the above-described features and aspects. Implementations of the described technology may include hardware, methods or processes on computer-accessible media, or computer software. The details of one or more implementations are set forth in the accompanying drawings and the description below. Other features will be apparent from the description and drawings, and from the claims.
Drawings
1A-1B are block diagrams illustrating an example context-aware distributed environment computing system according to implementations described herein.
2A-2B are block diagrams illustrating an example distributed environment computing system including multiple devices according to embodiments described herein.
Fig. 3 is a block diagram illustrating an example of a context layer represented in a distributed environment computing system, according to implementations described herein.
Fig. 4 is an example diagram illustrating example context patterns for use in a distributed environment computing system according to implementations described herein.
5A-5G are block diagrams illustrating an example use of a context to generate information for a user operating one or more devices within a distributed environment computing system according to implementations described herein.
6A-6E are block diagrams illustrating another example use of generating context for information of a user operating one or more devices within a distributed environment computing system according to implementations described herein.
Fig. 7 is a flow diagram of an example process of operating a distributed environment computing system to determine and share a device context among multiple electronic devices according to an embodiment described herein.
8A-8B are block diagrams illustrating example elements of a family account in a distributed computing system according to embodiments described herein.
FIG. 9 illustrates a provisioning mode within a home using environment devices according to embodiments described herein.
10A-10B illustrate users of a home account predicting and controlling device behavior according to embodiments described herein.
FIG. 11 shows an example of a computer device and a mobile computer device that can be used to implement the techniques described herein.
The use of like or identical reference numbers in the various figures is intended to indicate the presence of like or identical elements or features.
Detailed Description
This document describes a distributed environment computing platform for operating environment computing devices (e.g., electronic devices) together as a distributed computing system. The platform may serve as a framework in which an operating system of each of the electronic devices (e.g., computing devices, environmental devices, etc.) can be configured to perform and/or share data, home accounts, context, and/or tasks (e.g., computing actions or actions) between the devices using context-aware computing techniques. Sharing of data, context, and/or computing tasks may be based on user control of a device (e.g., a distributed environment computing platform) and local sharing within a user-defined environment. A user accesses controls associated with the devices and/or systems described herein to set permissions (e.g., user-configured permissions) for sharing between devices owned by the user (e.g., owned by the home). Such permissions may limit or stop the use of shared data, context, and computing tasks. For example, the sharing of the analysis of data, context, tasks, and any such elements may be performed securely (e.g., cryptographically securely) within and on devices of the home, and may not be distributed to the service provider or other storage element without explicit user permission. In some implementations, the platform can serve as a framework in which an operating system of each of the electronic devices (e.g., computing devices, environmental devices, etc.) can be configured to perform and/or share data, context, policies, rules, and/or computing tasks (e.g., actions) between devices within a particular defined location (e.g., a building, a home structure, a school, an office building, a home, etc.) associated with the distributed computing system.
The platform may use the user-enabled licenses to enable use of software and/or hardware on one or more devices to collect and analyze data. In some implementations, if no user-based permissions are configured, the system described herein may query at each request whether to share, use, collect, or store specific information associated with the users and/or user actions in the system. In addition, each interaction described herein may be performed based on user-enabled permissions, or without such permission configuration, the system described herein may provide questions and UI information to proactively request user permission to perform such interactions and related tasks.
Data may be retained between devices at home, for example, to determine the context of the user environment in which the device is located. In general, the systems and methods described herein can utilize such information to securely determine and present contextually relevant and actionable information to users associated with one or more of the devices. The platform may be used to evaluate and generate contexts useful, interoperable, transparent, and secure for users and devices accessing the distributed environment computing system described herein.
Systems and methods described herein may determine and combine signals from one or more devices, and may use the combined signals to generate a single home context that can then be used to suggest and/or automate actions that enhance a user's device experience while maintaining user and device privacy according to user-configured permissions. In some implementations, one or more separate device contexts can be distributed among one or more devices via operating systems (O/ss) of the respective devices. The distribution of the device context can be based on one or more device capabilities (e.g., sensors, processing capabilities, hardware, software), policies, user preferences, user permissions, requests, user locations, and the like. In addition to the device context, each device in the household may be defined as a set of inputs, a set of outputs, and a set of device capabilities.
In some implementations, the systems and methods described herein may select one or more devices for task execution based on the capabilities of the devices, available memory/bandwidth, and so on. In some implementations, the systems and methods described herein may select one or more devices for task execution based on whether the devices are frequently used for this type of task. In some implementations, the systems and methods described herein can dispatch tasks to more than one device. For example, a task can be divided into subtasks for execution on two or more devices. In some embodiments, the subtasks may be performed on more than one device at the same time. For example, if the task is to play a particular playlist on all devices in a building, the systems and methods described herein can indicate which devices (or whether each particular device) perform the tasks or subtasks of the playlist. Subtasks can be assigned to devices based on a number of factors including, but not limited to, device capabilities, user permissions, distributed environment computing state or order, and/or other user-indicated device configurations.
The systems and methods described herein may enable each device in a home to participate in building a home-wide description of a context for the home, and to be used within the home according to user-enabled permissions. The device can identify different human activities based on user permissions to further enhance the determined device context. For example, a user may permit a device to monitor and/or sense certain elements around a home, and permit information related to device usage to be stored and used in accordance with such permissions. In some implementations, such devices may be configured by a user to trigger a private mode for the environmental device to ensure that any data or sensor output is enabled or disabled for sharing and/or use according to user permissions and/or settings. For example, the private mode may be triggered according to user-initiated and user-defined device usage policies. In some implementations, all devices may operate in such a private mode until otherwise requested to operate by the device owner.
The systems and methods described herein may use different paradigms than conventional systems to determine device and/or user context within a distributed environment computing system. For example, the systems and methods described herein may configure electronic devices to function together according to a determined context and operate as a distributed environment computing system (e.g., a network of devices), rather than using traditional device interactions, where each device typically operates using a different hard-coded operating system that may not be compatible for communicating and sharing computing tasks between devices. As a result, based on knowledge obtained by generating a context as described herein, communication efficiency between electronic devices may be increased and the amount of data transmitted reduced.
In conventional systems, each device may collect and consume context independently, which can allow devices in one room to detect the presence in front of the device using an on-board proximity sensor, but the device may not be aware of other activities occurring on other devices in the home. The systems and methods herein can address the technical challenges (e.g., problems) of determining a device context relative to other device contexts by utilizing a distributed environment computing system to combine device contexts, device signals, etc., into a single home-wide context that represents the overall state of the home.
Such signal combination may include a central and secure repository that generates context(s) that may be managed by the platforms described herein. The distributed repository may store the context of any number of devices associated with the user environment. The context may be built around a sharing schema that allows interoperability and contribution of data, mediated by a distributed environment computing system having an O/S level architecture of access devices.
The repository of context(s) can be a distributed repository and/or network-based log record shared among other devices, including but not limited to a blockchain, transparent ledger (e.g., logs), or other shareable storage scheme. Device context may be reported from each individual device to a distributed store via a shared schema. In some implementations, one or more heuristics or software codes may be configured to analyze contextual signals received at a distributed store. For example, the analysis may result in the generation of abstract descriptions of various activities that occur at home. This analysis and generation of the description is performed according to user consent and/or configured user permissions for the home and/or device(s).
The systems described herein may obtain context using a distributed environment computing platform and use such context to suggest or automate actions (e.g., computing tasks) for any one or more of the devices configured for the home. The platforms and systems described herein may include or access an operating system (O/S) class level distributed environment computing system that takes into account user needs, home/home needs, service needs, and device capabilities. The systems and methods described herein may utilize a platform to perform computing tasks on electronic devices that are defined as part of a distributed environment computing system and that are located within (or associated with) a defined environment. In some implementations, the platform may be capable of distributing such computing tasks among two or more electronic devices in the defined environment. For example, the system and method may operate using a platform to access an O/S hierarchy architecture associated with one or more devices in a defined environment to detect and communicate with each device in the defined user environment. Other devices in the defined environment may not have the same O/S hierarchy architecture, and thus, the platform may instead utilize inputs and/or outputs associated with these devices to perform computing tasks in cooperation with other devices in the defined environment that are configured to work with the O/S hierarchy architecture.
In operation, the platform executed by the systems and methods described herein is capable of operating as an interface for accessing multiple unique operating systems (on different devices) and providing UI content, data, audio content, etc. on an electronic device that is detectable within a defined environment. For example, the platform may allow each device in a predefined environment (e.g., a location representing a home, building, etc.) to be configured and defined as a set of inputs, a set of outputs, and a set of device capabilities. Each device may include (or access) an operating system that may operate with the platform to perform and/or distribute contextual and/or computing tasks across any number of capable devices.
For example, a device with audio sensing capabilities in the living room of the user environment 101 or 102 may determine, privately and locally within the user environment, that a number of people are speaking in the living room without sharing data outside the user environment. A device (e.g., assistant 112) may share such signals with other devices 106, 108, and 110, for example, by generating a home context 116 for the device 112. Home context 116 may be stored in distributed store 114. The home context 116 may be used to trigger a mode or policy configured for the environment 101 or 102 (e.g., home). For example, the device 112 may trigger a mode to obscure or hide user data based on detecting a number of people at home. This mode may be a covert (shy) mode in which user data is temporarily obfuscated to avoid visitors viewing such information. For example, the covert mode may trigger a photograph on an environmental display to be temporarily replaced by artwork or other generic images. In another example, calendar events, notifications, and reminders may be muted, obscured, or otherwise redirected to another device, such as a user's smart watch. In yet another example, messages and calls may be routed to mobile devices and/or other wearable devices (e.g., smartwatches) rather than being provided on the assistant device 112, which can provide the advantage of increased discretion for the user's data.
Other use cases may include a user configuring context rules for a home and/or a particular device within the home. For example, a user may configure uninterrupted privacy for particular detected activities (or activities scheduled for a calendar). The configuration may be set with permissions for accessing audio, visual, or other sensed data to ensure that such data remains in the device and home environment 101 or 102. Example configurations may include setting policies for not receiving (e.g., blocking) interruptions while practicing music, eating dinner, and the like. Rather than configuring the exact rules for the user environment 101 or 102, the system 100 may use the determined home context 116 to allow the devices 104 and 112 to determine whether and when the user performs a particular computing task, and may then trigger automatic execution of the user preferences on the available devices according to the home context 116. Any number of home contexts 116 may be determined and stored. For example, the home context 116 may evolve over time as user actions change, user schedules change, device locations change, and so forth. From the permissions enabled by the user, the home context 116 may be determined each time the user's environment changes 101 or 102.
In general, one technical problem that may arise when attempting to share a device context between devices may include device incompatibilities at the software, hardware, and/or firmware level. For example, the various electronic devices owned and/or accessed by a user throughout the day are not typically configurable to function together in an environment as a distributed environment computing system (e.g., a network). These devices typically operate using different hard-coded operating systems that may not be compatible between the devices. This can present technical challenges because, in general, it can be complex, time consuming, or impossible for a user to synchronize home devices, and it can also be difficult to synchronize communications, context, and/or policies when adding new devices and/or bringing new devices in and out of home.
The systems and methods described herein provide a technical solution to the technical problem by enabling communication between electronic devices and allowing distribution and sharing of device context and user requested computing tasks in order to provide convenient execution of computing tasks requested by users in the home. For example, underlying O/Ss executing on one or more detected devices associated with a defined environment (e.g., a location area) can be configured to dynamically distribute computing tasks to capable devices within the location area, for example. Such distribution of computing tasks may not occur if, for example, one or more devices are placed in an area of a home with conflicting activities. For example, if a user requests to play the same music on a home device, the system described herein may evaluate the context associated with each device to determine whether each respective device context aligns with music that has already been played. The device context may be based on and/or otherwise related to user settings, user permissions, time settings, device capabilities, user location, device location, user environmental changes, and/or the like.
The technical solutions described herein may provide the technical effects of improved task management, improved task assessment, and/or improved decision handling between home devices, as the context of each device and/or the context of the home user is taken into account. The systems and methods may also provide a way to select which device to perform and/or share performance of a received computing task based on the combined contextual signals aggregated across each home device. Context, computing tasks, and user data may be securely stored and accessed by home devices using a location-implemented distributed repository that is not owned or operated by the service provider or manufacturer of the device at the location.
Further, the systems and methods described herein may use a distributed computing platform to generate and use an identification infrastructure that may enable a defined location to have a digital identification that is unique and separate from the user accounts of the owners and/or occupants of the structure. For example, the system may generate a pattern of relationships between the user and the building, e.g., to define a building account (e.g., a family account). The home account may be used to perform digital ownership tracking, track permanent and temporary leases, service structure(s) associated with the home account, manage building access rights according to user-configured permissions, and the like. Additionally, a digital identifier (e.g., a home account) corresponding to a particular structure may be used to manage electronic devices detected within the structure, depending on user permissions.
In some implementations, sharing of data, context, and/or computing tasks may be based on user control of the device and local sharing within a user-defined environment (e.g., a distributed computing platform associated with the structure via a home account). To configure a home account and associated user permissions, a user accesses controls associated with devices and/or systems described herein to set permissions (e.g., user-configured permissions) for sharing content, such as data, tasks, and contexts, between user-owned and/or home-owned devices. Such permissions may limit or stop the use of the shared content. If the license allows such sharing, the sharing is performed securely (e.g., cryptographically securely) within and on the device corresponding to the structure, e.g., via a home account. Content may not be distributed to service providers or other storage elements without explicit user permission.
For example, the systems and methods described herein may provide structure-wide policies and preferences via a home account associated with a building using a different paradigm than traditional systems. The systems and methods described herein may configure electronic devices to operate together as a distributed computing system (e.g., a network of devices) rather than using traditional device interaction, where each device typically operates using a different hard-coded operating system that may not be compatible with communicating and sharing tasks between devices within a home structure (e.g., a building). As a result, it is possible to improve communication efficiency between electronic devices and reduce the amount of data transferred based on knowledge obtained by providing information via the operating system of each device, wherein one or more operating systems of the respective devices can notify other devices of changes, rules, or policies, and the other devices can determine and interpret what is implied by the notification of the respective device change, rule, or policy that received the notification.
The home account described herein may correspond to a user that is not in a home environment, but instead is associated with a building or structure. A user corresponding to such a home account may be part of a community, group, club, church, school, apartment/rental complex, etc., rather than, for example, a part of a home representing a home user.
In conventional systems, a user device is used and/or configured with an individual user account. An individual user account may be used to interpret and track data for the device. The systems and methods described herein may instead utilize a home account (i.e., an identification that represents the home structure and devices within the home structure) to enable home devices to interact with other devices in the home via a distributed computing system. Additionally, home accounts may be used to activate, control, and manage connected devices within the home. In some implementations, home accounts can be used to allow trading between tenants and owners in larger buildings, such as apartment buildings. For example, in conventional systems, changing a Wi-Fi password for a building includes resetting the Wi-Fi password to a new password for each device and individual devices in the building (e.g., a home).
Because the system described herein connects building-related elements to a home account, changing the Wi-Fi password may include changing the home account instead of the password on each device. The changed password on the home account may be applied to each Wi-Fi approved device to update the password without having to manually update each device, as the home account may store one or more policies for updating devices associated with the home. Thus, a home account may provide advantages for managing a large number of connected devices (e.g., devices registered to the home account and/or distributed computing system), and may do so in contexts such as public buildings, apartment complexes, homes, etc., where one account may apply changes to any number of connected devices based on user permissions. The home account is configured to provide updates within the home in a secure manner based on user permissions.
In general, the platforms and systems described herein may be capable of using software and/or hardware on one or more of the devices to collect and analyze data using user-enabled permissions. Data may be retained between devices of the home, e.g., for enforcing home-wide policies and/or preferences for the home, rooms of the home, and/or activities occurring in the home.
The systems and methods herein may address technical challenges (e.g., problems) in managing multiple connected home devices by accessing home accounts with a distributed computing system to configure and maintain devices, access, security, and/or other device signals according to build rules and policies.
The technical solutions described herein may provide the technical effects of improved home management, improved account and device management, and improved device communication between home devices, as a home account may evaluate and apply specific policies and rules for devices associated with a distributed computing system, e.g., according to user permissions. In addition, user data may be securely stored and accessed via home account connected home devices using a location-implemented distributed repository that is not owned or operated by the service provider or manufacturer of the device at the location.
Fig. 1A is a block diagram illustrating an example context-aware distributed environment computing system 100 according to implementations described herein. In example system 100, a user (not shown) may be in a home (e.g., a home location) that includes (or is associated with) any number of devices within the home. A home may represent a user environment 101 (e.g., location/location area) of the distributed environment computing system 100 configured as a device for associating with the home.
The user environment 101 may be defined by a user to include a home and a particular area around the home. In some implementations, devices within the home can be configured to set the boundaries of the user environment 101 according to user requests, threshold settings, and/or distances from device policies implemented by the manufacturer and configurable by the user. In some embodiments, the user environment 101 is configured to be provided with specific user permissions for accessing and/or sharing data within the distributed environment computing system 100.
As shown in fig. 1A, the devices of the user environment 101 include a plurality of environment devices, including a door lock device 104, a light bulb device 106, a tablet device 108, a thermostat device 110, and an assistant device 112. Each device may provide information about the device state, context, etc. to the distributed environment computing system 100. The device 104-112 may be part of a network of devices for the user environment 101 (e.g., a home). As described in detail below, the connection between the devices may be wireless. In some implementations, devices may share device data and device context via distributed store 114 and/or directly from device to device, but may do so generally according to configured user permissions.
Each environmental device 104-112 may be user-configurable based on permissions enabled by the user. For example, devices with cameras, microphones, internet access, and/or other sensor-based capabilities may be configured according to user preferred permissions. Such permissions may be time-based and user-controlled. In some implementations, the user device can be configured to prompt the user to view or edit the permissions given to the device to ensure that the user can quickly modify the permissions and device capabilities.
The depicted door lock device 104 may include at least sensing capabilities to lock and unlock a door based on a received signal. The depicted thermostat device 110 can determine whether the user is at home, and can include sensors that use or detect infrared signals, ultrasonic signals, microwave signals, and/or other signal sensors that detect the presence of the user within a defined environment. For example, the detected user presence may be a trigger to modify the temperature of the environment 101.
The assistant device 112 may be a smart display that includes any number of audio sensors, speakers, microphones, internet (or other network) access, and so forth. As used herein, a "smart" device may represent an electronic device that may be communicatively coupled with other electronic devices, networks, systems via certain wired or wireless protocols, including but not limited to bluetooth, Zigbee, NFC, Wi-Fi, LiFi, wireless USB, wireless ethernet, cellular, and the like.
The environmental device 104 and 112 may include devices associated with the location of the user environment 101. Such devices may or may not include additional devices, such as one or more of a mobile phone, a tablet computer, a computer, or a laptop computer. For example, if a user configures such devices to interconnect other devices in the environment device 104 (or other similar devices available in the user environment 101) 112, one or more of the user's owned devices may be part of the distributed environment computing system 100.
In operation of system 100 in environment 101, a user associated with a household may wish to perform computing tasks involving one or more of the devices shown in FIG. 1A. For example, a user may speak a computing task to be performed. A context may be determined for a device. For example, a context may be generated for home device 103 and home device 105. In some implementations, the context can represent a combined device context, which can be further used to generate other contexts for the household. For example, each determined context (e.g., of devices 103 and 105, etc.) can be evaluated and combined into a home context 116 (e.g., a combined context of two or more device contexts), where distributed environment computing system 100 can be distributed to any number of local devices within user environment 101 (e.g., a home). The distributed environment computing system 100 may also store device context and home context, as shown in distributed store 114. Additionally, the distributed environment computing system 100 may also store device states or conditions, device data, and/or user context. This data is allowed to be distributed within the home according to user-configured permissions and is performed securely, e.g. via a blockchain.
Devices (e.g., electronic devices and/or computing devices) described herein may include, but are not limited to, smart displays, televisions, mobile devices, tablet computers, game controllers, lights, alarm clocks, electronic assistants, smart watches, smart phones, thermostats, appliances, fans, switches, sprinklers, air fresheners, shutters, awnings, blinds, windows, garage door openers, showers, security systems, electronic doorbells, cameras and devices with cameras, electronic locks, smoke detectors, proximity sensors, internet connected speakers, laptop computers, desktop computers, workstations, automobiles, or other devices that may communicate information.
FIG. 1B is a block diagram illustrating an example distributed computing system 100 for home accounts according to embodiments described herein. In example system 100, a user (not shown) may be in a home (e.g., a home location) that includes (or is associated with) any number of devices within the home. A home (e.g., a household) may represent a user environment 102, which may be configured as a distributed computing system 100 for devices associated with the home (e.g., a household).
The user environment 102 may be defined by a user to include a home and a particular area around the home. In some implementations, the family account may define a particular area around the home. In some implementations, devices within the home can be configured to set the boundaries of the user environment 102 according to user requests, threshold settings, and/or distances from a device policy implemented by the manufacturer and configurable by the user. In some implementations, the user environment 102 is configured to be provided with specific user permissions for accessing and/or sharing data within the distributed computing system 100.
As shown in fig. 1B, the devices of the user environment 102 include a plurality of environment devices, including a door lock device 104, a light bulb device 106, a tablet device 108, a thermostat device 110, and an assistant device 112. Each of the devices may provide information regarding device status, device context, and/or device usage to the distributed computing system 100 according to user-configured permissions. The device 104 and 112 may be part of a network of devices of the user environment 102 (e.g., a home). The connection between the devices may be wireless, as described in detail below. In some implementations, devices may share device data and device context via distributed store 114 and/or directly from device to device, but may do so generally according to configured user permissions.
Each environmental device 104-112 may be user-configured based on user-enabled permissions. For example, devices with cameras, microphones, internet access, and/or other sensor-based capabilities may be configured according to user preferred permissions. Such permissions may be time-based and user-controlled. In some implementations, the user device can be configured to prompt the user to view or edit the permissions given to the device to ensure that the user can quickly modify the permissions and device capabilities.
The depicted door lock device 104 may include at least sensing capabilities to lock and unlock a door based on a received signal. The depicted thermostat device 110 can determine whether the user is at home, and can include sensors that use or detect infrared signals, ultrasonic signals, microwave signals, and/or other signal sensors that detect the presence of the user within a defined environment. For example, the detected user presence may be a trigger to modify the temperature of the environment 102.
The assistant device 112 may be a smart display that includes any number of audio sensors, speakers, microphones, internet (or other network) access, and so forth. As used herein, a "smart" device may represent an electronic device that may be communicatively coupled with other electronic devices, networks, systems via certain wired or wireless protocols, including but not limited to bluetooth, Zigbee, NFC, Wi-Fi, LiFi, wireless USB, wireless ethernet, cellular, and the like.
The environment devices 104-112 may include devices associated with a location (and/or home) associated with the user environment 102. Such devices may or may not include additional devices, such as one or more of a mobile phone, a tablet computer, a computer, or a laptop computer. For example, if a user configures such devices to interconnect other devices in the environment device 104 (or other similar devices available in the user environment 102), one or more of the user-owned devices may be part of the distributed computing system 100.
In operation of the system 100 in the environment 102, a user associated with a home (e.g., a household) may wish to configure devices for storage in the distributed storage repository 114 so that the devices may be used with a home account 117 associated with the distributed computing system 100 for a home structure. The user may first configure the home account 117 as shown by configuration user interface 118. The family account 117 may streamline the addition of family members, devices, and services, for example.
A home account, as used herein, may provide an account architecture that may be used for a particular building, home, office building, multi-unit building, complex building, multi-unit home, school, church, store, rental property, or other physical structure associated with a user entering or leaving such a structure. A home account may be used to provide services to any number of users that may enter or exit the structures described herein. The home account may be configured according to user permissions regarding the retrieval and storage of account usage, data usage, device usage, and/or user associated data.
In conventional systems, user devices are used and/or configured with individual user accounts. An individual user account may be used to interpret and track data for the device. The systems and methods described herein may instead utilize a home account (i.e., an identification that represents the home structure and devices within the home structure) to enable home devices to interact with other devices in the home via a distributed computing system. Additionally, home accounts may be used to activate, control, and manage connected devices within the home. In some implementations, home accounts can be used to allow trading between tenants and owners in larger buildings, such as apartment buildings. For example, in conventional systems, changing the Wi-Fi password of a building includes resetting the Wi-Fi password to a new password for each and every device in the building (e.g., home).
In configuring the family account 117, the user may use the account 117 to share services with an associated family group (e.g., a group of users associated with the family structure), as shown by block 120. Users can share services to share charges, calendars, and accounts even if a particular device is not registered. The user may then pre-provision the device and define the room-specific settings of the device to be employed, as shown in block 122.
Distributed store 114 may include registered device data, context data, service data, device state data, device data, rule and preference data, and permission data. Distributed store 114 may be shared among other devices and/or network-based logs, including but not limited to blockchains, transparent ledgers (e.g., logs), or other shareable storage schemes. Data stored in distributed store 114 may be reported from each individual device via a shared security model. In some implementations, one or more heuristics or software codes may be configured to analyze information associated with devices and home accounts associated with distributed store 114.
The user environments (e.g., user environments 101, 102, home) may include a home defined based on one or more of an associated user, a room, square feet, identified and/or configured devices, and/or other elements associated with the home. In some implementations, the defined environment 102 can include a building, a user-defined perimeter, a yard surrounding a home, an apartment building, a collection of buildings, or a room, to name a few examples.
Devices described herein (e.g., electronic devices and/or computing devices) may include, but are not limited to, smart displays, televisions, mobile devices, tablet computers, game controllers, lights, alarm clocks, electronic assistants, smart watches, smart phones, thermostats, appliances, fans, switches, sprinklers, air fresheners, shutters, awnings, shutters, curtains, windows, garage door openers, showers, security systems, electronic doorbells, cameras and devices with cameras, electronic locks, smoke detectors, proximity sensors, internet-connected speakers, laptop computers, desktop computers, workstations, automobiles, or other devices that may communicate information.
Although some different device types are shown in fig. 1A-1B, any number of computing devices (e.g., environmental devices, personal computing devices, electronic devices, etc.) may be configured to operate using the platforms and distributed environment computing systems described herein. Because such devices are defined in terms of inputs, outputs, and device capabilities, the systems and methods described herein may utilize device capabilities in accordance with computing task requests and policies associated with an environment and/or one or more devices.
2A-2C are block diagrams illustrating an example distributed computing system 200 including multiple devices according to embodiments described herein. The system 200 may be used to configure computing devices (e.g., computing system 202 and computing device 204), environmental devices ( devices 104, 106, 108, 110, and 112), and/or other devices (not shown in fig. 2A) to function as a single distributed computing environment such that device contexts, user contexts, home contexts, device states, and/or requested computing tasks may be apportioned and/or shared among any of the devices within the distributed environment computing system 200. For example, system 200 may be able to identify and describe each device in each room of a particular environment in order to obtain contextual inputs, control device functionality and/or processing, and provide context-based outputs regardless of the underlying operating system executing on each device.
In some embodiments, the plurality of devices may include any number of applications, which may be dynamically formed, for example, from available software components (and functionality) available in the distributed environment computing system 200. Applications may provide dynamic interoperability that operates on an operating system independent platform.
As used herein, a distributed environment computing system may refer to a network of multiple (e.g., two or more) autonomous computing devices, mobile devices, environmental devices, personal handheld devices, sensors, etc., that may communicate between each other and/or other devices configured for the network. The network may be a predetermined network, an autonomously generated network, a peer-to-peer network, or other network that allows data to be transferred between devices in the network using a protocol such as UPnP, SLP or GSM, to name a few examples. The distributed environment computing system may provide coordinated use of shared resources, shared accounts (e.g., family account 261), contexts, communication infrastructure, UI elements, and/or services to perform computing tasks and requests received from users associated with one or more devices defined for the distributed environment computing environment. A distributed environment computing environment may also refer to a defined physical space that accesses resources, communication infrastructure, UI elements, and/or services available to devices configured in a distributed environment computing network. In general, the distributed environment computing systems described herein may be generated and maintained according to user-based permissions configured by and maintained by users.
Each device in a particular distributed environment computing system (e.g., devices 104, 106, 108, 110, 112, 202, and 204 in the example of fig. 2A) may be defined by capabilities associated with such devices, including but not limited to respective device capabilities (from on-board device sensor device outputs and/or device inputs). For example, computing system 202 may be configured to dynamically distribute computing tasks across any of devices 104, 106, 108, 110, 112, and 204.
Any number of sensors may be available on the devices described herein. Additionally, if a particular sensor is not available on one device, another device may provide the sensor to perform (e.g., execute) the requested capability within the user-requested computing task. Example sensors may include, but are not limited to, optical sensors, image sensors, audio sensors, motion sensors, proximity sensors, temperature sensors, infrared sensors, ultrasonic sensors, touch sensors, pressure sensors, level sensors, smoke and/or gas sensors, chemical sensors, accelerometers, gyroscopes, environmental sensors, and the like.
The inputs 208a-208f may include, for example, content received via a touch input device capable of receiving tactile user input, a hand controller, a mobile device (or other portable electronic device), a microphone capable of receiving audible user input, and so forth. The outputs 210a-210f may include, for example, the generation of a display for visual output, speakers for audio output, and the like.
In some implementations, each device 104, 106, 108, 112, 202, and 204 includes multiple apps (e.g., apps 211a-211 g). The app may utilize service 214, policies and permissions 252, preferences 254, context 255, distributed store 256, and home account 261 (fig. 2A). The distributed repository 256 may be on the device 202 (or other device) as a local copy, but may also be updated via a network, an internet-connected network, or other network. Synchronization can occur between two distributed store logs, e.g., distributed store 256 and distributed store 257.
In a non-limiting example, the system 200 may determine the inputs, outputs, and capabilities of the devices in the system and determine which devices may be used to perform computing tasks, display information, and the like. For example, a camera device may include video input and microphone input, but may not include output capabilities. Other devices, such as Wi-Fi routers or smart displays, may have similar or different inputs and/or outputs, but may have additional processing power and/or memory, and thus may be selected by the system 200 to perform processing for another device in the system 200. In operation, the system 200 may dynamically determine which device is appropriate to accomplish a user-requested computing task. For example, system 200 may evaluate context 255, including but not limited to a device context, a user context, a task context, a device state, and/or device data. The evaluation of the context 255 may include generating the home context 116 based on a context received from a device associated with the user environment 101 and/or 102.
In some implementations, the context 255 may indicate which devices may be selected to perform the user-requested task. For example, if the system 200 determines that a particular assistant device performs a timer task, the system 200 may select such a device for timer task execution based on the assistant devices within the home, e.g., an indication for a timer task. Thus, if the user requests that the home device set a thirty minute timer, the system 200 may trigger the timer to be set and executed on the closest assistant device near the user, rather than, for example, setting the timer on the user's mobile phone device. In some implementations, the system 200 can use a different device to perform the timer task based on determining that the assistant device is currently in use or that the bandwidth of the device exceeds a particular threshold. In such an example, the system 200 may instead select the mobile device to generate and execute the timer task. In another example, the system 200 may search for the next closest assistant or device with timer capabilities to generate and execute a timer task.
In some implementations, computing system 204 and devices 104-112 may include the components shown in computing system 202. In such examples, each computing system and device may be used to evaluate capabilities, evaluate contexts, and/or distribute computing tasks among the devices 104-112. For example, the computing system 204 may be an assistant device with an image sensor, an audio sensor, and internet connectivity. Computing system 204 may be located at a location within the defined household. Computing system 200 may access any of devices 104, 106, 108, 110, and 112 and computing system 202 to perform and/or share computing task execution and context analysis.
In general, computing devices 202 and 204 and devices 104-112 may communicate and/or transfer data wirelessly between each other using the systems and platforms described herein. In some embodiments, each device may be configured in the distributed environment computing system 200 to communicate with each device associated with the system 200.
As shown in FIG. 2A, computing system 202 includes an operating system (O/S) 212. The O/S212 may be used to execute and/or control applications, services, and device communications. The O/S212 can be a first type of operating system, while the other devices illustrated in FIG. 2 (or associated with a particular distributed environment computing system) can be different operating systems operating different device hardware.
In operation, the systems and methods described herein may provide access to one or more services 214 for any number of different device types, for example, that may be within distributed environment computing system 200 (e.g., in a home), where each device may execute a different operating system. The service 214 may be configured to generate, manage, and execute computing tasks detected (e.g., received) in the distributed environment computing system 200. In addition, the service 214 may provide O/S level access to detect peripheral (e.g., environmental) devices and capabilities. The service 214 may be an O/S class execution decider to dispatch computing tasks received in the system 200.
Service 214 may include a personalized computer-based service provided by a service provider to a user. In some implementations, the services may not be personalized, but may be general-purpose services that are given to the user for use on their computing and/or electronic devices. In some implementations, the service can be provided via an app (e.g., an application) at the request of the user.
O/S212 may execute and/or otherwise manage applications 216, task manager 218, identification manager 220, device manager 222, and context manager 224. The application may include a User Interface (UI) generator 226 and user data 228, both of which may be used to generate content and/or data according to user permissions and provide such content and/or data to a user via a device interface.
The task manager 218 may manage the distribution of computing tasks throughout the distributed environment computing system 200. For example, the task manager 218 may evaluate computing tasks and device capabilities to trigger completion of the computing tasks using one or more devices in the system 200.
The identity manager 220 may manage identities associated with the system 200. For example, the user may associate with the device using the identification. The identity may be associated with an identity account, but such an account is user controlled and generated, not service provider controlled and generated. Each identification may be represented as a globally unique identifier. In addition, each identification can be represented by a persona, which can be used to present the user (or data associated with the user), for example, to a third party or other device in system 200. In general, the identification manager 220 may be used to add and/or modify users, home services, physical buildings, and devices. For example, the identity manager 220 may generate an account, such as a family account 261, that may represent a physical building (e.g., a home). The identification of the home may include an address and other identification data that the user may require ownership. The identification of the physical building is typically not directly connected to the human user or service provider, but instead corresponds to an account set by the user for home.
In an example, a user may require ownership of a particular physical building. In response, the identification manager 220 may generate connections between the physical building, the location, and one or more users within the household associated with the building. For example, the user may ask the identification manager 220 to set up additional users to be associated with (i.e., relevant to) a household corresponding to the physical building. The identification may include such relationships and the system 200 may assign rights, policies, and preferences based on such relationships.
In some implementations, the device manager 222 may provide or otherwise implement device-to-device settings. For example, smart home devices may communicate via a peer-to-peer network (or other network via ultrasound or other wireless technology) upon user confirmation via a previously provided device identification. Upon confirmation, the previously provided devices may automatically communicate services, preferences, and/or settings, for example, to one or more of the smart-home devices. Thus, manual Wi-Fi settings, device settings, or other out-of-box device computing tasks may become unnecessary.
In some implementations, the device manager 222 can provide a modular out-of-box experience, enabling individual activation and/or reordering of particular device functions depending on the device previously configured by the user and based on information associated with the previous device configuration. The device manager 222 may then reuse the information associated with the initial device settings when the user requires an experience involving the new settings.
The context manager 224 may evaluate the environment that forms the settings for the event, explanation, or idea. The context manager 224 may define settings from which it can be fully understood and evaluated. For example, the context manager 224 may provide context-aware computing between devices in the distributed environment computing system 200 according to user permissions. For example, the context manager 224 may use software and/or hardware to collect and analyze data about the environment surrounding the device in order to present relevant, actionable information to a user of the device. The collection and analysis occurs within a location associated with the device unless the user requests use of additional resources beyond the defined location. In some implementations, the context manager 224 can collect signals from individual devices, analyze the signals and combine the signals into a home-wide context, and notify the services and other parts of the system (e.g., devices) of a change in context according to the system and/or device permissions.
As shown in FIG. 2A, O/S212 may include or access service 214, communications module 230, camera 232, memory 234, and CPU/GPU 236. The computing system 202 may also include or have access to a sensing system 238. Sensing system 238 includes an Inertial Measurement Unit (IMU) sensor 240, an audio sensor 242, a pose sensor 244, an image sensor 246, an image analyzer 248, and a position identifier 250. The sensing system 238 may access the communication module 230, the camera 232, the distance/proximity sensor (not shown), the positioning sensor (not shown), and/or other sensors and/or different combination(s) of sensors. Some sensors accessed by system 212 may provide location detection of devices associated with system 200 or a user of system 200. Some of the sensors of system 238 may provide for the capture of images of the physical environment associated with the distributed modification computing system for display on components of one or more of devices 104, 106, 108, 110, 202, and/or 204.
The IMU sensor 240 may be used to detect or measure angular velocity and linear acceleration for the computing system 202. The system 202 may then calculate and/or estimate a 3D orientation in 3D space based on the measurements made by the IMU sensors 240. IMU sensors 240 may include one or more accelerometers, gyroscopes, magnetometers, and other such sensors. In general, the IMU sensors 240 may detect, for example, motion, movement, velocity, and/or acceleration of the device 202.
The image sensor 246 may detect a change in background data associated with a camera capture performed by the device 202 (or another device in communication with the device 202). The camera 232 may include a backward capture mode and a forward capture mode.
In some implementations, computing system 202 may access distributed store 256 (and/or distributed store 257) to maintain device states and task states during operation of distributed environment computing system 200. Such distributed store 256 (and/or distributed store 257) may represent a distributed storage system. In some implementations, distributed store 256 (and/or distributed store 257) may be provided as service 214. Such services may be synchronized across devices owned by a particular home, building, user, etc. In some implementations, distributed store 256 (and/or distributed store 257) may be provided via an application.
Each application 216 and/or component executing on behalf of a particular defined user may have a separate data store provided and managed, for example, by a distributed repository (e.g., a log) 256 and provided to other user-associated devices when requested by the user. The data store for a particular component/user combination is private to the user and therefore cannot be accessed by other applications of the same user and cannot be accessed by other users of the same application (or another application). Each data store may be transparently synchronized across devices associated with a user by a network provider (e.g., network 259). Any data manipulation may first be performed offline without coordination with the network. If concurrent modifications result in a data conflict, the conflict can be resolved using, for example, an app-configurable merge policy.
Each data store may be organized as a collection (e.g., a page) that exposes a key-value store Application Programming Interface (API). The API may support storing data of arbitrary size, atomic changes across multiple keys, snapshots, and modification watchers.
In some implementations, the distributed store 256 (and/or distributed store 257) implementation includes local storage and storage (not shown) that provides access to data, a client component that interacts with the storage, and a local client that exposes the distributed store 256API to locally running applications (e.g., application 216).
Typically, the content of each submission within the submission history includes key-value pairs (entries) stored in a B-tree structure that includes entries ordered by a key of a valid evaluation of the permission scope query and an immutable tree node, allowing reference to the same node from two (or more) different submissions, and thereby avoiding duplication of state between different submissions with similar content, and the B-tree is history-independent (i.e., the resulting tree structure will be the same, independent of insertion order, given the same set of entries). This property permits efficient calculation of the difference between two given submissions.
In operation, distributed repository 256 may operate locally to application 216 and may not synchronize data with network 259 and distributed repository 257 if the application is operating in guest mode. If the application 216 is operating in standard mode, the distributed store 256 may automatically synchronize user data using network instances via the network 259. In general, the network 259 may provide hybrid network services or public network services. The hybrid network service may be generated, provided and/or serviced by a hybrid network solution provider. Public network services may be owned and operated by network service providers that manage public networks.
Distributed repository 256 may provide a mechanism for executing transactions that allow an application (e.g., application 216) to make a set of changes that may be synchronized and surfaced to any number of devices within distributed environment computing network 200. For example, computing system 202 (e.g., a client device) may start a transaction, take a snapshot of the page state, and read the data. Computing system 202 (e.g., via application 216) may then make the changes through the page interface of distributed store 256 and may commit the transactions to store 256 (and/or store 257). Once the transaction begins, the state of the page is tracked and fixed so that it does not advance until the transaction is committed or aborted. This may provide the advantage of ensuring that the transactional write accurately affects the state visible on the snapshot of the page. In some implementations, the distributed store 257 can operate as a master home distributed store, where configured home devices can store shared (and synchronized) data to/from respective distributed devices, such as the distributed store 256.
Each device within a particular distributed environment computing system may include one or more processors (e.g., CPU/GPU 236) that communicate with O/S212, sensing system 238, communication module 230, services 214, memory 234 and/or camera 232. The communication module 230 may provide communication between the computing system 202 and other external devices. The processor 236 is configured to execute instructions (e.g., a computer program) in order to perform specific tasks. In some implementations, at least one of the processors 236 executes instructions to operate a device in the distributed environment computing system. Memory 234 may be utilized throughout communications and interactions between elements in system 200.
Additionally, computing system 202 may use or access one or more peripheral devices (not shown). Example peripheral devices may include any number of controllers, computing devices, head-mounted display devices, cameras, speakers, tracking systems, and/or other devices in communication with device 202.
In some implementations, the computing system 202 includes or has access to a tracking system (not shown). The tracking system may include (or access), for example, light sensors, Inertial Measurement Unit (IMU) sensors 240, audio sensors 242, image sensors 246, image analyzers 248, location identifiers 250, cameras 232, distance/proximity sensors (not shown), positioning sensors (not shown), and/or other sensors and/or different combinations of sensors.
According to embodiments described herein, various solutions to the above-described problems are provided by a computing system. According to embodiments described herein, a computing system may utilize data collected by various sensors and/or devices included in the distributed environment computing system(s) to generate (e.g., build) a network of devices that, along with services and platforms, are used to detect, identify, and/or rank devices that are available and capable of being used in a home environment. Such services may make decisions (e.g., automated or user-requested) to dispatch and/or coordinate tasks across available devices in the distributed environment computing system(s). Additional details regarding the services and platforms are described below.
Referring to fig. 2B, a task manager 218, an identification manager 220, a device manager 222, and a context manager 224 are depicted. The task manager 218 includes a user intent 260 and a computing task 262. The user intent 260 may represent something the user wants when the user requests a computing task 262 (e.g., a task) of the device. For example, the user intent 260 may be a purpose that the user wishes to perform. Task manager 218 may utilize the user's intent in conjunction with the determined context 255 to perform one or more computing tasks 262 requested by the user.
Referring to fig. 2C, schema 282 is shown to include a plurality of entities. The entities include at least a building box 283, a family box 284, and an individual box 285. In some embodiments, additional building blocks 286, visitor blocks 287, and other buildings such as rental building block 288 may also be represented in mode 282.
The additional buildings box 286 may represent an identification for other buildings that may be owned by the individual represented by the individual box 285. Visitor box 287 may represent an identification of a visitor who may access building 283. Rental building box 288 may represent certain temporary services and preferences associated with family box 284.
The pattern 282 can ensure decoupling of individual identities, home identities, and building identities via a pattern that can generate more flexible connections between them. For example, individuals can have their own devices, services, and preferences.
Individuals can be part of a family and therefore decide to share some of their devices and services without losing control of them. Multiple individuals may be connected to a building using different roles including, but not limited to, owners, tenants, visitors, and administrators. Additionally, each role can be defined in terms of how each respective role accesses and controls devices, services, preferences, and rules associated with the system 200 and/or the home, building, etc.
In some implementations, the system 200 can configure a home (e.g., apartment, office space, home, etc.) for visitors using the home account 261. For example, the system 200 may configure the home account 261 to allow one or more connected devices in the home to control the level of access and/or customization that a visitor or temporary tenant can have (e.g., the visitor can disable the microphone and camera). In another example, the system 200 may configure the device to play music using the home account 261, but may limit the volume level after a particular time of day to avoid disturbing other guests. In another example, if the guest provides permission for camera and microphone use at home, the system 200 may use the home account 261 to configure the guest's access to the guest's secure camera record for the time at home, but may restrict the guest's access to any other record history associated with the home.
In yet another example, the home account 261 may be used for an apartment complex. In particular, the builder is able to install and set hundreds of connection devices for the building, and can set up the devices without using a user-based account or virtual account. Instead, the builder may configure the home account 261 to manage services, device access, rules, preferences, permissions, and the like. When an apartment is sold or leased to a tenant, the digital identification of the unit (defined by the home account 261) may be connected to the new tenant. The new tenant may then personalize the device behavior. When an administrator is employed in a building, the administrator may be granted administrator access to the devices in the public area and to the devices in the rental unit, depending on the permissions of the tenant's configuration (e.g., user configuration).
Fig. 3 is a block diagram illustrating an example of a context layer represented in a distributed environment computing system, according to implementations described herein. For example, the context layer may represent a level of change over time in the context of elements in the user environment 101. In some implementations, the context layer can change from aspects determined to be important to the user to aspects determined to be less important to the user. Each context layer may be associated with a minimum and a maximum time threshold. The context layer may be used as a tool for evaluating tasks performed by devices in the home and predicting how these tasks may relate to users, locations, and objects within the user environment. Such information can be used to ensure that the user is provided with useful data from devices in the user's environment.
As shown, context layers may include core context layer 302, which represents elements (e.g., places, objects, devices, users, and related data) that are often used, contacted, or otherwise interacted with over a recent period of time. Core context layer 302 may represent aspects of the user's environment that are meaningful to the user, or at least frequently accessed and/or interacted with, including, but not limited to, interactions with close contacts (e.g., user X), family members, daily visited homes and office buildings, and the like.
Context layer may also include proximity context layer 304. The proximity context layer 304 may represent the relationship a user may have with the proximity of tasks, places, objects, and other users. The proximity may refer to physical proximity (e.g., things near the user versus things far away from the user). Proximity may refer to relationship and/or social proximity (e.g., family member 310 versus strangers). Proximity may refer to temporal proximity (e.g., time 312) measured in minutes, hours, days, months, years, etc. In general, the proximity context layer 304 may represent a context that is stable and unlikely to change rapidly over time.
The context layer may additionally include a broad context layer 306. The broad context layer may represent a low level of engagement with any number of places, objects, users, and tasks. The broad context layer 306 may identify a user state from the configured user permissions. For example, a device context may be determined to be broad based on a particular state of a user. If the user is sitting and watching the movie, indicators and/or reminders regarding events that occur tomorrow may be maintained until a determined convenient time for the user (e.g., after the movie). The broad context layer 306 may represent a volatile level of engagement over time that often changes over time.
Fig. 4 is an example diagram illustrating example context patterns for use in a distributed environment computing system according to implementations described herein. In this example, the user is accessing content on mobile device 402. Device 402 considers the context layer using the distributed environment computing system described herein, such that services, users, tasks, reminders, etc. can be updated across devices 404, 406, 408, 410, 412, 414, 416, etc. according to the context of the device. The devices 404 and 416 may be associated with the distributed environment computing system 100, for example, such that context may be shared across devices according to user permissions.
5A-5G are block diagrams illustrating an example use of a context to generate information for a user operating one or more devices within a distributed environment computing system according to implementations described herein. Referring to FIG. 5A, user A may be arriving at home from an office, as shown in block 502. The user may notice that no other people are at home, as shown in block 504. The user may query each person for devices at home, as shown in block 506. One or more devices associated with the home may receive the tasks spoken by the user and may determine the context of the home, as shown at block 508.
Upon determining the environment, at least one device in the home performs a task, as shown in block 510. For example, the device responds "user B leaves a note, user B does homework at the neighbor's house". At a later point in time, the device identifies (from the determined context from block 508 or an updated context determined based on the device at home) that user B is not yet at home. Thus, the device notifies user A that user B has not come home and asks user A whether he wants to call the device or send text from the device to user B, as shown in block 512. User a may respond as indicated at block 514. Here, user B indicates that he does not wish to call or send text to user B by saying "not, let user B know that i am home" and in response the device notifies user B that it was received at user B's mobile device, as shown at block 516. In this example, the device determines the context of user a, user B, and any number of devices. Additionally, at least one device may infer that "I am" used in block 514 is equivalent to user A.
Referring to FIG. 5B, block 504 represents user A returning home to find that no other people are at home. For example, the system 200 has generated a context 520 for a home. Context 520 is based on a known user schedule scheme 522 and a detected and/or known user presence scheme 524, both of which may be provided according to user permissions. Context 520 is associated with user a, as indicated at block 526, but has not been based on a device at home, as indicated by the device not shown at block 528. The recent activity is not tracked or displayed because user a is not at home, and thus block 530 depicts no known user activity. In some implementations, the recent activity may include, for example, a task or activity that user a performed earlier away from home on the same day.
The ongoing activity block 532 depicts user a at the end of the commute and just arriving home based on the detected user presence 524, calendar entries, known user schedules 522, etc. The context 520 may be based on the family composition, known devices, and family status, as shown at block 534. In this example, the distributed environment computing system 200 may retrieve information that user A and user B are both registered for the family. Additionally, the system 200 may retrieve information about which devices are registered and/or otherwise configured for the home. In this example, the hub, thermostat and smoke detector are configured for home use. Additionally, the system 200 may detect that a home (e.g., a household) is currently empty and that a licensing policy is configured based on user permissions.
In some implementations, the task of monitoring and using context 520 to dispatch tasks can be accomplished at a level of the OS that encompasses all devices in a defined environment or a particular device in that environment. For example, a particular device may be a master device (e.g., a master assistant device), while other devices function according to commands received via the master device. In some implementations, OS level management may enable a device with a particular operating system to manage other devices with different operating systems.
Referring to fig. 5C, user a is now at home and interacts with the thermostat device 536. At this point, context 520 can be updated to context 538. For example, when user a adjusts the temperature in the home and asks "where are everyone? "the content may be based on the detected device proximity scheme 540, the state of the family scheme 542, the understanding of the natural language utterance scheme 544, and the receipt of a task request" where everyone is? "is updated to context 538. In this example, context 538 is associated with user a, as shown at block 548. Context 538 may include the context of a device from any public device in the home, a click wheel input at thermostat 536, a microphone associated with a context-aware microphone 546, a speaker that outputs information to user a, and an additional small display (of thermostat 536), as indicated by block 550. Recent activities have not been tracked or displayed because user a (and/or other users) did not arrive at home until recently, and thus block 552 depicts no known recent activities.
Referring to fig. 5D, the context 558 may be configured on the secondary hub device 560, for example, in view of other devices associated with the home of user a. Here, the context 558 is associated with user a, as shown at block 562. The context 558 may include device context from any public device, touchscreen input, microphone, speaker, camera, and media display in the home associated with the device 560, e.g., as shown by block 564. The recent activity indicates that user B left a note, as shown at block 566. An ongoing activity block 568 is indicated to check the family status as user a continues to check the status of the family members. The context 558 may be generated based on the family composition, known devices, and family status, as shown at block 570.
In this example, the assistant device 560 stores notes left by user B (i.e., e.g., in the distributed repository 114) and may provide such information to user a upon receiving a request to access such data or, alternatively, upon user B configuring the device 560 to provide such information at a particular time or detected event.
In operation, the distributed environment computing system 200 may retrieve information that user A and user B are both registered for the home. Additionally, the system 200 may retrieve information about which devices are registered and/or otherwise configured for the home. In this example, the hub, thermostat and smoke detector are configured for home use. Additionally, the system 200 may detect that a home (e.g., a household) currently includes user a and that a licensing policy is configured based on the user permissions. The context 558 can be based on a related content scheme, a person-to-person reconciliation scheme, and a summarization scheme.
Referring to fig. 5E, when the device 560 determines that user B has not come home, the context 572 can be updated from the context 558. The device 560 may utilize a family member status scheme 574 and a privacy preserving sharing protocol scheme 576 (along with user permissions) to determine such status.
Here, context 572 is associated with user a, as shown at block 578. Context 572 may include device context from any public device, touchscreen input, microphone, speaker, camera, and a mid-display in the home associated with device 560, e.g., as shown by block 580. The recent activity indicates that user B left a note, as shown at block 582. The ongoing activity box 584 is indicated to check the family status as user a continues to check the status of the family members. Context 572 can be generated based on the family composition, known devices, and the state of the family, as shown at block 586.
In this example, the assistant device 560 detects that user B has not come home. In response, the assistant notifies user a and provides the decision to be made. The decision point is based on context(s) determined relative to the household.
Referring to fig. 5F, user a makes a decision and utilizes "no, please just let user B know that i came home" the response decision point via device 587, as shown by updated context 588, which is based on person-to-person reconciliation scheme 589 and attention notification scheme 590.
Referring to fig. 5G, user B is notified via a mobile device 596 at a different location. The notification is sent from the home and user a may be indicated as author. In the home, the assistant 560 sends the message to user B, and thus the context of the home may be updated to a context 597 indicating an update to the ongoing activity of the assistant device (i.e., actively sending the message), as shown by block 598.
Certain schemes can be used to generate context in system 200. The approaches described herein may use device data, user data, and device sensors according to permissions configured for the home and the user of the device. Example scenarios may include, but are not limited to, geo-fencing scenarios, scheduling scenarios, presence scenarios, device proximity scenarios, family scenarios, natural language utilization scenarios, context-aware microphone scenarios, related content scenarios, person-to-person mediation scenarios, summarization scenarios, family membership status scenarios, privacy protection sharing scenarios, attention notification scenarios, in-family pet scenarios, downtime scenarios, activity detection scenarios, continuity flow scenarios, device mediation scenarios, reminder scenarios, user information scenarios, scheduling scenarios, data structuring scenarios, active interruption scenarios.
A geo-fencing scheme may include detecting a user near or at a location by combining signals from devices and sensors to accurately establish the user's physical presence at a particular place and/or landmark. The scheduling scheme may include learning a user's schedule by collecting signals from various sources to determine a user schedule. A presence scheme may include identifying user presence by evaluating the physical presence of a user in or near a particular home or location. The device proximity scheme may determine physical proximity to the devices by determining which device is closest to the user at any given time to optimize the user experience by utilizing device sensors.
A family schema may determine the composition of users and devices in a family (e.g., a home) by identifying, storing such identification in a distributed repository, and tracking the composition. Natural language utilization schemes can provide accurate understanding of the entities performed by the user and the natural utterance by establishing connections between the user, the location, and the objects mentioned in the natural utterance temporally and spatially.
A context-aware microphone approach may perform endpoint indication of a contextual notification by using signals from a wide range of contexts to maintain or end proxied linked microphone sensor attention and active listening. Relevant content schemes can use context as an indicator of relevance by identifying and emphasizing highly relevant pieces of information, either proactively at the correct time or upon user request. A person-to-person reconciliation scheme can use an agent to interact with other people by relying on agent knowledge and understanding of the context in order to efficiently and minimally interrupt sharing, contacting, and connecting with other users.
Summary schemes may synthesize information for a user by using a composite structured summary of long form information and a proxy that shares summary information pieces on behalf of other parties. The family member status scheme may use the user status and pets in the family to perform proxy maintenance and policy-guided status information for family members, which may apply to locations and objects (e.g., where do my keys. Privacy preserving sharing schemes may use agents that actively share the status of family members according to user permissions to help the agents share basic information between the parties to the family without compromising privacy. Notice notification scheme
Pets in a home scenario may identify and identify pets, while respecting user and pet privacy according to user permissions. The downtime scheme may comply with the time to leave the device by confidently understanding when the user has time to leave the device, and may attempt to use an honored context to not disturb the user unless an emergency situation occurs. An activity detection scheme may use sensors to evaluate activity by combining sensor data with contextual information to accurately infer what our user's current activity is without requesting input and/or disambiguation according to user permissions. The continuity flow scheme ties tasks together across time and location by utilizing contextual reading to understand relationships between subtasks. For example, if a user allows such access in a user license, research into recipes on a laptop computer at work may expose recipes on a hub assistant device at home.
The device mediation plan may determine which devices in the home are configured, able and skilled to perform a particular task. For example, a device mediation approach may combine information shared by surrounding devices and/or sensors to direct input and output to appropriate suitable devices according to user permissions. The reminder scheme can assist the user by securely storing the user's information and providing one or more alerts when appropriate with respect to the stored information.
The user information scheme may protect user data according to user permissions. The user information may provide a secure way to ensure that the user data is part of the core context of the user. The scheduling scheme may include calendar information. Such information may be declared and inferred based on user permissions.
The data structuring scheme can bring structure into free-form data by automating the process of structuring information provided by a user. Such structured information can be used to generate user and/or device context based on user permissions. The proactive interruption scheme may provide interruption for the device without the user requesting the provision of information if, for example, the user permission allows discrimination of an agreed time with the user for providing valuable information that can be communicated from the device to the user.
Further example scenarios may include, but are not limited to, private broadcast scenarios, device collaboration scenarios, composite signal scenarios, secure hardware scenarios, token scenarios, home device scenarios, sensor scenarios, usage scenarios, reporting scenarios, home layout scenarios, home policy scenarios, public activity scenarios, user classification scenarios, activity learning scenarios, and activity teaching scenarios.
A private broadcast scheme may determine when particular information can be communicated audibly or visually within a home. For example, the devices described herein may each have a confidence determiner to discern whether the user is in a sufficiently private space for information to be provided visually and/or audibly. Such a determiner is configured according to user permissions.
The device collaboration scheme may combine sensor data across devices to use information from several different sensors across several devices to facilitate understanding of the same task. The composite signal scheme may increase confidence with several information sources to combine signals from several services that a user references their primary agent in order to establish confidence in the task understanding of the device.
The secure hardware solution may utilize tokens, cryptographic techniques, or other methods to protect the hardware device. The scheme may provide support for dedicated hardware keys, hardware tokens, security keys, and other types of authenticated hardware blocks. The token scheme may use tools for security and presence to allow the token to be used as a specific type of hardware dedicated to exposing the security (unlocking a private device or data set) of some digital tasks.
A home device solution may treat a home (e.g., residence, building, home) as a distributed environment computing network of devices. This may help devices in the same household collaborate and communicate. The sensor solution may provide a device with the ability to combine data from several sensors as if the device were part of a distributed environment computing system in order to establish an understanding of user presence and activity based on user permissions.
The usage scheme may evaluate usage patterns of the devices to compile encrypted data regarding device usage for the distributed environment computing system according to user permissions. The reporting scheme may generate readable, private, and custom reports for both environmental and traditional computing activities according to user permissions.
The home layout scheme may use the nearby device sensing capabilities and user reported data as permitted by the user to generate a map of the data and location. The home policy scheme may allow users to set rules for digital devices and data to allow users to manage the communication policies and information flows of their devices according to user permissions.
A common activity scheme may describe user activities based on scheduling user tasks and/or activities involving multiple users. The approach may enable the device to act appropriately with respect to memory, notification, privacy according to user permissions. The user classification scheme may classify elements before identifying the elements. For example, a user classification scheme may identify entities by category in advance of individuals according to user permissions.
The activity learning scheme may enable an agent to actively learn which tasks are important to its user, which parameters of those tasks are relevant, and how to adjust those parameters to the user's preferred results according to user permissions. The active teaching scheme may integrate user feedback into the agent's learning loop.
6A-6E are block diagrams illustrating another example use of a context to generate information for a user operating one or more devices within a distributed environment computing system according to implementations described herein. In this example, user C may be assigned the task of letting family pets go out at the same time each day and before leaving home.
The particular context of the devices for user C and user C's home may allow for reminders and monitoring of user C to ensure that the user performs the task of leaving the pet out. To use such reminders and monitoring, user C sets user permissions that allow a particular device to monitor during a particular time period. For example, if a user leaves a pet out between 6:00 am and 6:30 am each day, the user may set a device near the location of a particular gate in the home to monitor (within the home network and not distributed) so that monitoring allows pet out activities to be monitored. If activity does not occur, a device set to monitor the user may trigger a reminder to user C or trigger a reminder to user C to choose to receive such a reminder.
As shown in FIG. 6A, user C (e.g., user 602) may forget to take the pet out on a particular day. In this example, user C may be away from home without performing the activity. The system 200 can determine an initial context 604 of the home. The initial context 604 can be based on a reminder scheme 606 and/or a user data scheme 608 according to user-configured permissions.
Here, context 604 is associated with user C, as shown at block 610. Context 604 may include the device context of any registered devices from home, but in this example, the devices have not been used within the time period associated with context 604, as shown at block 612. Similarly, no recent activity is detected at home and no ongoing activity is being performed, as indicated by related blocks 614 and 616, depending on user permissions.
Referring to fig. 6B, user C will be outside of home, for example, according to her calendar schedule accessed by system 200. Based on the schedule, context 620 can be generated. For example, context 620 may be generated based on scheduling scheme 622 and data structuring scheme 624. The mobile device 625 can trigger the generation of a context 620 when the user enters a scheduling event in her calendar.
Referring to fig. 6C, context 620 may trigger a reminder to be provided to user C when she is out. For example, the system 200 may determine that the user is approaching the time of departure from home. In response, the device (e.g., the public speaker device 636 may trigger a reminder to be played for user C. a new context 638 may then be generated, the context 638 being based on the proactive interruption scheme 640 and the private broadcast scheme 642.
The context 638 may be based on the family composition, known devices, and the state of the family, as shown in block 652. In this example, the distributed environment computing system 200 may retrieve information that user C is leaving home and that the device 636 has provided a reminder (task). Additionally, the system 200 may retrieve information about which devices are registered and/or otherwise configured for the home. The system 200 may detect from the user permissions that a home (e.g., a household) currently includes user C and that the permission policy is configured, as shown at block 652.
Referring to fig. 6D, one or more home devices may determine leaving using a device cooperation scheme 654 and a composite signal scheme 656, as shown by an electronic door lock device 658. Thus, as shown by context 660, the context can be updated.
Referring to FIG. 6E, a pet-out reminder set by a user on their mobile device may trigger an environmental reminder to the user on a device close to the user, according to the user's permission. For example, the assistant device 672 (e.g., pet smart display) may be registered and configured to generate an environmental alert for the pet to go out at the time user C wakes up. Context 674 can be generated to enable and trigger such reminders. Context 674 can be based on an active outage scheme 676 and a private broadcast scheme 678.
The context 674 can be based on the family composition, known devices, and the state of the family, as shown at block 688. In this example, a reminder may be provided to the user's mobile device (not shown) to ensure that the pet is out before she leaves home.
Fig. 7 is a flow diagram of an example process 700 of operating a distributed environment computing system to determine and share a device context among multiple electronic devices according to an embodiment described herein. Process 700 may ensure that devices in a defined user environment may communicate, share, and perform tasks and contexts to ensure that a user receives relevant information via the devices. For convenience, the process 700 may be described with reference to the system 200. In some embodiments, devices described throughout this disclosure may operate as other devices within system 200. For example, the assistant device 112 may operate as a computing system 202 that includes components of both the system 202 and the device 112.
At block 702, the process 700 includes detecting, by a computing device, a plurality of additional devices configured as a distributed environment computing system. In some implementations, devices within multiple computing devices of a distributed environment computing system may be communicatively coupled to perform various tasks on a single device or using a combination of any or all of the devices. At some point, system 200 may determine whether user permissions (e.g., policies and permissions 252) have been received or configured by the user to allow use of data associated with the devices and/or computing devices described herein. For example, at block 705, the system 200 may perform a permission check to ensure that the device data may be used. Although the permission check is shown at a single block, permission may be requested and verified at any or all blocks.
At block 704, the process 700 includes receiving a request to perform a computing task at a computing device. For example, a user may generate a request to perform a computing task. The request may be provided verbally (or via a computing device) as a command, question, query, or the like. In some implementations, the request may originate from one or more of a plurality of computing devices of a distributed environment computing system.
At block 706, process 700 includes obtaining, from the distributed environment computing system, data representing a device context for at least two of the plurality of devices. For example, the data may include any combination of device capabilities, provisioning permissions, device status, device location, user settings, user permissions, time settings, device capabilities, user location, device location, user environment changes, and the like.
At block 708, process 700 includes generating, by the computing device, a combined context for the distributed environment computing system. The combined context may represent a combination of device contexts obtained for at least two devices, and may be based on and/or include the signals and schemes described herein. In some implementations, the combined context can take into account multiple devices in the distributed environment computing system, as well as locations, structures, and services associated with the distributed environment computing system.
At block 710, process 700 includes generating and providing, by the computing device, at least one decision request based on the task and the combined context. For example, in response to the request, the system 200 may generate a decision request to obtain a response from the user or device. The decision request can be provided to another computing device via the computing device. For example, a first assistant computing device (e.g., a home assistant) may verbally provide a decision request to a user. In some implementations, the assistant device may instead generate and send a message to a second computing device associated with the user. The user may provide a spoken response or response to the request via the second device (or another device configured with the distributed environment computing system 100).
At block 712, the process 700 includes receiving, at the computing device, a response to the at least one decision request. For example, the user may verbally (or via a computing device) submit a response to the decision request, which is received by the system 200. In an example, the computing task may be a request to configure a service on at least two devices, and the data may include a device type and an operating system for each of the at least two devices. The combined context may include an indication of whether each of the at least two devices is available. The at least one decision request may be a query indicating whether the computing task is to be performed on the at least two devices. The user or device may confirm, reject, or provide another response to the request for the decision. In response to detecting confirmation of execution of the computing task on the at least two devices, the system 200 may configure the service for the at least two devices (i.e., execute the computing task).
In some embodiments, the systems and methods described herein may not perform block 710 and/or block 712 described above. Rather, a device that detects and generates a request for a system may determine information for performing the requested computing task according to a determined context associated with the distributed environment computing system.
At block 714, process 700 includes triggering, by the computing device, execution of the computing task based on the response and the combined context. For example, system 200 can evaluate responses and combine contexts to determine how to perform computing tasks.
In some implementations, the system 200 can distribute the combined context to a plurality of computing devices configured as a distributed environment computing system. Such distribution of combined contexts may trigger execution of a computing task on two or more of the multiple devices. For example, if a user requests to play music, system 200 may evaluate two or more of the multiple devices to determine the context of the requesting device and the combined context of one or more of the remaining devices in system 100. The system 200 may then provide a decision request to the device or device user waiting for a response. The received responses may determine whether to perform the computing task, how to perform the computing task, and with which devices to perform the computing task.
In some implementations, the system 200 selects at least two devices based on the determined physical location of each respective device. For example, if the user requested that the computing task be configuring a security system, the system 200 may determine that home speakers and smart displays within a particular building are capable of functioning as security systems. Two devices may be related and configured to work together to monitor a room or home similar to a security system. If the smart display detects movement, the speaker may be used to deter theft because the smart display may capture events performed when the owner of the house leaves. In some implementations, a combination of devices may be possible, for example, based at least in part on device capabilities, preconfigured permissions, and device location based on the device context. The combined context may be generated in response to determining that at least two devices are configured to operate together to perform a computing task.
In some implementations, the combined context is configured to enable the plurality of devices to trigger the private mode according to a preconfigured permission associated with the distributed environment computing system. The private mode may be configured to invoke the preconfigured permissions to obfuscate content associated with each respective device and to block access to one or more functions associated with each respective device.
In some implementations, the request is a verbal request. In addition, a combined context may also represent multiple computing devices configured for a distributed environment computing system. In such an example, the computing task is distributed for completion across two or more of the plurality of computing devices based on the combined context.
In some implementations, a distributed environment computing system is configured for a building associated with a plurality of computing devices. For example, a distributed environment computing system may provide a digital identification for a building that can be used to determine which devices are available, which devices function together, which services can (or are currently) configured for a particular device, and so on.
8A-8B are block diagrams illustrating example elements of a family account in a distributed computing system according to embodiments described herein. The family account 261 may allow a user's (e.g., a family, a renter, an office, etc.) building to conveniently share information between, for example, devices configured with the family account and the distributed computing system 200.
As shown in FIG. 8A, a home 802 is depicted as being associated with a home account 261 and a user 804. Family account 261 may be used to configure user 804 as a family group. A service for home may be provided to the family group. The home account 261 may provide common control of the space, infrastructure, and devices associated with the home 802. Additionally, the home account 261 may be used for device-to-device superior preferences and superior services for the home 802.
As shown in FIG. 8B, user 804 is shown with shared resources including, but not limited to, media 806, expenses 808, calendar 810, user data 812, and streaming media 814. The user 804 may share resources using the home account 261. In particular, a family group configured for a family account 261 may provide a platform operating as a distributed computing system (for devices registered at home) that may evaluate and use relationships between devices, tasks, users, etc. to ensure that resources may be shared according to user permissions and family policies.
FIG. 9 illustrates a provisioning mode within a home using environment devices according to embodiments described herein. Location 900 is defined to include any number of devices within range. Devices within location 900 may be configured by system 200, for example, for any number of users as part of a particular household associated with location 900, which may be used to generate a distributed computing system. Location 900 may be or represent a user environment including, but not limited to, a home, a household, a residence, a business, and the like.
As shown in fig. 9, the hub device 902 may welcome the visitor in a visitor mode. In guest mode, the home may host a visitor to location 900 without having to provide a home instruction manual, password, or the like. Conversely, because the location 900 may be associated with a distributed computing system, the system may provide guests with the particular device usage, services, and/or connections that the user previously provided for guest mode. For example, a user may provide Wi-Fi network enablement on a guest mobile device 904, but may alert other devices in the home to connect to such a network if a particular connected device is not recognized. Similarly, device 902 may provide access and control of lighting device 906 via guest mobile device 904. The privacy of the home may be protected because the home data is either not sent to the guest device or is instead hidden from the guest device while still providing services and/or device usage to the guest device.
In some implementations, the location 900 can use context to hide personal data from the guest. Such a context may trigger a privacy mode. The privacy mode may include dynamic authentication that allows simultaneous and sequential multi-user use of services and/or devices at the location 900. In addition, a privacy mode may be provided for a particular user, which can be managed in real-time based on device placement and presence. For example, a device in a bedroom may trigger a privacy mode during a scheduled meeting, home visit, or when the user is not at home, while a device in a dining area may trigger a different privacy mode that obscures some but not all data. The privacy mode may also be managed by the presence, relationships, and activities occurring at location 900.
Fig. 10A depicts the use of a home account to predict device behavior based on user preferences and home account policies. In this example, when a user (not shown) arrives at his home, the user may be listening to music on the mobile device 1002. Mobile device 1002 can be configured with a home account 261. The home account 261 may have policies configured for each user and any number of user states or device states. For example, the family account 261 may be configured to determine that the user is a unique member home based on user permissions and a user calendar. The user may have a device policy configured for the home account 261 when the user is alone at home. For example, the volume level of a particular device may be set at a loud level for the user to enjoy music when other users are not at home. For example, if another user enters home, a policy change may be triggered. Such policies are configured by the user using device permissions, user permissions, and/or other security configurations of the home.
As shown in FIG. 10A, the family account 261 may determine that user A is arriving at home, as shown in block 1004. The account 261 may store the currently used device, which in this example includes the mobile device 1002, which includes a speaker and an additional small display in use, as shown at block 1006. Additionally, the account 261 may function with the distributed computing system 200 to determine that there is no recent activity for the family, as shown in block 1008, and that user a is participating in an ongoing activity that is currently listening to music, as shown in block 1010. In addition, the user currently listening to music
Additionally, the system 200 may retrieve information about which devices are registered and/or otherwise configured for the home based on the home account 261. In this example, home block 1012 depicts the composition, devices, and status of the home. Here, the device comprising the assistant, the thermostat, the smoke detector, the mobile device and the second assistant is configured for home use. Additionally, the system 200 may detect that user A is a user in the home based on the user permissions, and the permission policy is configured.
At some point, the user enters the home and may move to a bedroom housing the second assistant device 1014. In response, the home account policies, settings, and permissions may trigger the notification 1016 to request that the task of playing music be transmitted from the mobile device 1002 to the assistant device 1014. For example, the home account 261 may access the device proximity data 1018, the home data 1020, and the context-aware microphone data 1022 according to pre-configured user permissions. Such data 1018 and 1020 can ensure that home account 261 has access to home context, device status, user preferences, and the like.
In response, the user may select to transmit a music announcement to transmit music. In some implementations, the notification may be audible and the user may respond by speaking a command or response to transmit or not transmit a task of playing music between the devices. Additionally, the user may use the assistant 1014 or the mobile device 1002 to control the volume of the music queue and stream depending on which device the music is streamed from.
Referring to fig. 10B, the user may continue to walk home to reach the home room. In this example, the home account 261 in combination with the distributed computing system 200 may determine that the user is in a room with an assistant 1024. Accordingly, a communication (e.g., a suggestion) may be triggered to ask the user whether the user wishes to transfer a task of playing music from the mobile device 1002 to the assistant device 1024.
The user may accept the suggestion and allow the transmission of the music task to begin playing music on the assistant device 1024. The auxiliary devices include visual and auditory capabilities, and thus, music videos may also be triggered to execute on the auxiliary device 1024 with the audio. The home account 261 may then update the context of the home, for example, by changing the device box 1026 to reflect that the new device (assistant 1024) is the device operating in the home.
Fig. 11 shows an example of a computer device 1100 and a mobile computer device 1150 that can be used with the techniques described herein. Computing device 1100 is intended to represent various forms of digital computers, such as laptops, desktops, tablets, workstations, personal digital assistants, smart devices, appliances, electronic sensor-based devices, televisions, servers, blade servers, mainframes, and other appropriate computing devices. Computing device 1150 is intended to represent various forms of mobile devices, such as personal digital assistants, cellular telephones, smart phones, and other similar computing devices. The components shown here, their connections and relationships, and their functions, are meant to be exemplary only, and are not meant to limit implementations of the inventions described and/or claimed in this document.
The memory 1104 stores information within the computing device 1100. In one implementation, the memory 1104 is a volatile memory unit or units. In another implementation, the memory 1104 is a non-volatile memory unit or units. The memory 1104 may also be another form of computer-readable medium, such as a magnetic or optical disk. Generally, a computer-readable medium may be a non-transitory computer-readable medium.
The storage device 1106 can provide mass storage for the computing device 1100. In one implementation, the storage device 1106 may be or contain a computer-readable medium, such as a floppy disk device, a hard disk device, an optical disk device, or a tape device, a flash memory or other similar solid state memory device, or an array of devices, including devices in a storage area network or other configurations. The computer program product can be tangibly embodied in an information carrier. The computer program product may also contain instructions that, when executed, perform one or more methods and/or computer-implemented methods, such as those described above. The information carrier is a computer-or machine-readable medium, such as the memory 1104, the storage device 1106, or memory on processor 1102.
The high speed controller 1108 manages bandwidth-intensive operations for the computing device 1100, while the low speed controller 1112 manages lower bandwidth-intensive operations. Such allocation of functions is exemplary only. In one embodiment, high-speed controller 1108 is coupled to memory 1104, display 1116 (e.g., through a graphics processor or accelerator), and to high-speed expansion ports 1110, which may accept various expansion cards (not shown). In this implementation, low-speed controller 1112 is coupled to storage device 1106 and low-speed expansion port 1114. The low-speed expansion port, which may include various communication ports (e.g., USB, bluetooth, ethernet, wireless ethernet) may be coupled to one or more input/output devices, such as a keyboard, a pointing device, a scanner, or a networking device such as a switch or router, e.g., through a network adapter.
As shown, the computing device 1100 may be implemented in a number of different forms. For example, it may be implemented as a standard server 1120, or multiple times in a group of such servers. It may also be implemented as part of a rack server system 1124. In addition, it can be implemented in a personal computer such as a laptop computer 1122. Alternatively, components from computing device 1100 may be combined with other components in a mobile device (not shown), such as device 1150. Each of these devices may contain one or more of computing device 1100, 1150, and an entire system may be made up of multiple computing devices 1100, 1150 communicating with each other.
The processor 1152 is capable of executing instructions within the computing device 1150, including instructions stored in the memory 1164. The processor may be implemented as a chipset of chips that include separate and multiple analog and digital processors. The processor may provide, for example, for coordination of the other components of the device 1150, such as control of user interfaces, applications run by device 1150, and wireless communication by device 1150.
The memory may include, for example, flash memory and/or NVRAM memory, as described below. In one embodiment, a computer program product is tangibly embodied in an information carrier. The computer program product contains instructions that, when executed, perform one or more methods, such as those described above. The information carrier is a computer-or machine-readable medium, such as the memory 1164, expansion memory 1174, or memory on processor 1152, which may be received, for example, over transceiver 1168 or external interface 1162.
As shown, computing device 1150 may be implemented in a number of different forms. For example, it may be implemented as a cellular telephone 1180. It may also be implemented as part of a smart phone 1182, personal digital assistant, or other similar mobile device.
Various implementations of the systems and techniques described here can be realized in digital circuitry, integrated circuitry, specially designed ASICs (application specific integrated circuits), computer hardware, firmware, software, and/or combinations thereof. These various implementations can include implementation in one or more computer programs that are executable and/or interpretable on a programmable system including at least one special or general purpose programmable processor coupled to receive data and instructions from, and to transmit data and instructions to, a storage device, at least one input device, and at least one output device.
These computer programs (also known as modules, programs, software applications, or code) include machine instructions for a programmable processor, and can be implemented in a high-level procedural and/or object-oriented programming language, and/or in assembly/machine language. As used herein, the terms "machine-readable medium," "computer-readable medium" refers to any computer program product, apparatus and/or device (e.g., magnetic discs, optical disks, memory, Programmable Logic Devices (PLDs)) used to provide machine instructions and/or data to a programmable processor, including a machine-readable medium that receives machine instructions as a machine-readable signal. The term "machine-readable signal" refers to any signal used to provide machine instructions and/or data to a programmable processor.
To provide for interaction with a user, the systems and techniques described here can be implemented on a computer having a display device (e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor, or an LED (light emitting diode)) for displaying information to the user and a keyboard and a pointing device (e.g., a mouse or a trackball) by which the user can provide input to the computer. Other types of devices can also be used to provide for interaction with a user. For example, feedback provided to the user can be any form of sensor feedback (e.g., visual feedback, auditory feedback, or tactile feedback), and input from the user can be received in any form, including acoustic, speech, or tactile input.
The systems and techniques described here can be implemented in a computing system that includes a back-end component (e.g., as a data server), or that includes a middleware component (e.g., an application server), or that includes a front-end component (e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the systems and techniques described here), or any combination of such back-end, middleware, or front-end components. The components of the system can be interconnected by any form or medium of digital data communication (e.g., a communication network). Examples of communication networks include a local area network ("LAN"), a wide area network ("WAN"), and the internet.
The computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.
A number of embodiments have been described. Nevertheless, it will be understood that various modifications may be made without departing from the spirit and scope of the invention.
In addition, the logic flows depicted in the figures do not require the particular order shown, or sequential order, to achieve desirable results. In addition, other steps may be provided, or steps may be eliminated, from the described flows, and other components may be added to, or removed from, the described systems. Accordingly, other embodiments are within the scope of the following claims.
In addition to the above, the user is provided with controls that allow the user to select whether and when the systems, programs, or features described herein may be able to gather user information (e.g., information about the user's social network, social actions or activities, profession, the user's preferences, or the user's current location), and whether the user is sent content or communications from a server. In addition, certain data may be processed in one or more ways prior to storage or use, thereby removing user information. For example, the identification of the user may be processed such that user information cannot be determined for the user, or the geographic location of the user where location information is obtained (such as to a city, ZIP code, or state level) may be summarized such that a particular location of the user cannot be determined. Thus, the user may have control over which information is collected about the user, how the information is used, and which information is provided to the user.
The computer system (e.g., computing device) may be configured to communicate wirelessly with the network server over the network via the communication link established with the network server using any known wireless communication techniques and protocols, including Radio Frequency (RF), microwave frequency (MWF), and/or infrared frequency (IRF) wireless communication techniques and protocols suitable for communicating over the network.
In accordance with various aspects of the present disclosure, implementations of the various techniques described herein may be implemented in digital electronic circuitry, or in computer hardware, firmware, software, or in combinations of them. Embodiments may be implemented as a computer program product (e.g., a computer program tangibly embodied in an information carrier, a machine-readable storage device, a computer-readable medium, a tangible computer-readable medium), for processing by, or to control the operation of, data processing apparatus (e.g., a programmable processor, a computer, or multiple computers). In some implementations, a tangible computer-readable storage medium may be configured to store instructions that, when executed, cause a processor to perform a process. A computer program, such as the computer program(s) described above, can be written in any form of programming language, including compiled or interpreted languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, or other unit suitable for use in a computing environment. A computer program can be deployed to be processed on one computer or on multiple computers at one site or distributed across multiple sites and interconnected by a communication network.
Specific structural and functional details disclosed herein are merely representative for purposes of describing example embodiments. Example embodiments may, however, be embodied in many alternate forms and should not be construed as limited to only the embodiments set forth herein.
The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of embodiments. As used herein, the singular forms "a", "an" and "the" are intended to include the plural forms as well, unless the context clearly indicates otherwise. It will be further understood that the terms "comprises", "comprising", "includes" and/or "including", when used in this specification, specify the presence of stated features, steps, operations, elements, and/or components, but do not preclude the presence or addition of one or more other features, steps, operations, elements, components, and/or groups thereof.
It will be understood that when an element is referred to as being "coupled," "connected," or "responsive" to or on another element, it can be directly coupled, connected, or responsive, or directly on the other element, or intervening elements may also be present. In contrast, when an element is referred to as being "directly coupled," "directly connected," or "directly responsive" to or "directly on" another element, there are no intervening elements present. As used herein, the term "and/or" includes any and all combinations of one or more of the associated listed items.
Spatially relative terms, such as "under", "below", "under", "lower", "above", "upper", and the like, may be used herein for ease of description to describe one element or feature's relationship to another element(s) or feature(s) as illustrated. It will be understood that the spatially relative terms are intended to encompass different orientations of the device in use or operation in addition to the orientation depicted in the figures. For example, if the device in the figures is turned over, elements described as "below" or "beneath" other elements or features would then be oriented "above" the other elements or features. Thus, the term "below … …" can encompass both an orientation of above and below. The device may be otherwise oriented (rotated 70 degrees or at other orientations) and the spatially relative descriptors used herein interpreted accordingly.
An exemplary embodiment of the concept is described herein with reference to cross-sectional illustrations that are schematic illustrations of idealized embodiments (and intermediate structures) of the exemplary embodiment. As such, variations from the shapes of the illustrations as a result, for example, of manufacturing techniques and/or tolerances, are to be expected. Thus, example embodiments of the concepts depicted should not be construed as limited to the particular shapes of regions illustrated herein but are to include deviations in shapes that result, for example, from manufacturing. Thus, the regions illustrated in the figures are schematic in nature and their shapes are not intended to illustrate the actual shape of a region of a device and are not intended to limit the scope of example embodiments.
It will be understood that, although the terms first, second, etc. may be used herein to describe various elements, these elements should not be limited by these terms. These terms are only used to distinguish one element from another. Thus, a "first" element may be termed a "second" element without departing from the teachings of the present embodiments.
Unless otherwise defined, all terms (including technical and scientific terms) used herein have the same meaning as commonly understood by one of ordinary skill in the art to which these concepts belong. It will be further understood that terms, such as those defined in commonly used dictionaries, should be interpreted as having a meaning that is consistent with their meaning in the context of the relevant art and/or the present specification and will not be interpreted in an idealized or overly formal sense unless expressly so defined herein.
While certain features of the described embodiments have been illustrated as described herein, many modifications, substitutions, changes, and equivalents will now occur to those skilled in the art. It is, therefore, to be understood that the appended claims are intended to cover all such modifications and changes as fall within the scope of the embodiments. It is to be understood that they have been presented by way of example only, and not limitation, and various changes in form and details may be made. Any portions of the apparatus and/or methods described herein may be combined in any combination, except mutually exclusive combinations. The embodiments described herein may include various combinations and/or subcombinations of the functions, features and/or properties of the different embodiments described.
Claims (20)
1. A computer-implemented method, the method comprising:
detecting a plurality of computing devices configured as a distributed environment computing system;
receiving a request to perform a computing task;
obtaining, from the distributed environment computing system, data representing a device context for at least two of the plurality of devices;
generating a combined context corresponding to the distributed environment computing system, the combined context representing a combination of the device contexts for the at least two devices;
generating and providing at least one decision request based on the computing task and the combined context;
receiving a response to the at least one decision request; and
triggering performance of the computing task based on the response and the combined context.
2. The computer-implemented method of claim 1, wherein:
the computing task is configuring a service on the at least two devices;
the data includes a device type and an operating system for each of the at least two devices;
the combined context includes an indication of whether each of the at least two devices is available for use;
the at least one decision request is a query indicating whether the computing task is to be executed on the at least two devices; and
in response to detecting confirmation of execution of the computing task on the at least two devices, configuring the service for the at least two devices.
3. The computer-implemented method of claim 1, further comprising:
distributing the combined context to the plurality of computing devices configured as the distributed environment computing system, wherein distributing the combined context triggers performance of the computing task on two or more of the plurality of devices.
4. The computer-implemented method of claim 1, wherein:
the at least two devices are selected based on the determined physical location of each respective device; and
the combined context is used to configure the at least two devices to function together to perform the computing task.
5. The computer-implemented method of claim 1, wherein:
the request comprises a verbal request;
the combined context further represents the plurality of computing devices configured for the distributed environment computing system; and
the computing task completes a distribution over two or more computing devices of the plurality of computing devices based on the combined context.
6. The computer-implemented method of claim 1, wherein:
the device context is based at least in part on a device capability, a preconfigured permission, and a device location; and
the combined context is generated in response to determining that the at least two devices are configured to operate together to perform the computing task.
7. The computer-implemented method of claim 1, wherein the combined context is configured to enable the plurality of devices to trigger a private mode in accordance with a preconfigured permission associated with the distributed environment computing system, the private mode configured to invoke the preconfigured permission to obfuscate content associated with each respective device and prevent access to one or more functions associated with each respective device.
8. The computer-implemented method of claim 1, wherein the distributed environment computing system is configured for a building associated with the plurality of computing devices, the distributed environment computing system providing a digital identification for the building.
9. A non-transitory computer-readable medium, comprising:
at least one processor; and
a memory storing instructions that, when executed by the at least one processor, cause the at least one processor to perform operations comprising:
detecting a plurality of computing devices configured as a distributed environment computing system;
receiving a request to perform a computing task;
obtaining, from the distributed environment computing system, data representing a device context for at least two of the plurality of devices;
generating a combined context corresponding to the distributed environment computing system, the combined context representing a combination of the device contexts for the at least two devices;
generating and providing at least one decision request based on the computing task and the combined context;
receiving a response to the at least one decision request; and
triggering performance of the computing task based on the response and the combined context.
10. The non-transitory computer-readable medium of claim 9, wherein:
the computing task is configuring a service on the at least two devices;
the data includes a device type and an operating system for each of the at least two devices;
the combined context includes an indication of whether each of the at least two devices is available for use;
the at least one decision request is a query indicating whether the computing task is to be executed on the at least two devices; and
in response to detecting confirmation that the computing task is performed on the at least two devices, configuring the service for the at least two devices.
11. The non-transitory computer-readable medium of claim 9, wherein the operations further comprise:
distributing the combined context to the plurality of computing devices configured as the distributed environment computing system, wherein distributing the combined context triggers execution of the computing task on two or more of the plurality of devices.
12. The non-transitory computer-readable medium of claim 9, wherein:
the request comprises a verbal request;
the combined context further represents the plurality of computing devices configured for the distributed environment computing system; and
the computing task is distributed for completion on two or more computing devices of the plurality of computing devices based on the combined context.
13. The non-transitory computer-readable medium of claim 9, wherein:
the device context is based at least in part on a device capability, a preconfigured permission, and a device location; and
the combined context is generated in response to determining that the at least two devices are configured to operate together to perform the computing task.
14. The non-transitory computer-readable medium of claim 9, wherein the combined context is configured to enable the plurality of devices to trigger a private mode in accordance with a preconfigured permission associated with the distributed environment computing system, the private mode configured to invoke the preconfigured permission to obfuscate content associated with each respective device and prevent access to one or more functions associated with each respective device.
15. A system, comprising:
a memory; and
at least one processor coupled to the memory, the at least one processor configured to cause the system to:
detecting a plurality of computing devices configured as a distributed environment computing system;
receiving a request to perform a computing task;
obtaining, from the distributed environment computing system, data representing a device context for at least two of the plurality of devices;
generating a combined context corresponding to the distributed environment computing system, the combined context representing a combination of the device contexts for the at least two devices; and
performing the computing task based on the combined context.
16. The system of claim 15, wherein:
the computing task is configuring a service on the at least two devices;
the data includes a device type and an operating system for each of the at least two devices; and
the combined context includes an indication of whether each of the at least two devices is available for use.
17. The system of claim 15, wherein the system is further configured to:
distributing the combined context to the plurality of computing devices configured as the distributed environment computing system, wherein distributing the combined context triggers execution of the computing task on two or more of the plurality of devices.
18. The system of claim 15, wherein:
the request comprises a verbal request;
the combined context further represents the plurality of computing devices configured for the distributed environment computing system; and
the computing task is distributed for completion on two or more computing devices of the plurality of computing devices based on the combined context.
19. The system of claim 15, wherein:
the device context is based at least in part on a device capability, a preconfigured permission, and a device location; and
the combined context is generated in response to determining that the at least two devices are configured to operate together to perform the computing task.
20. The system of claim 15, wherein the combined context is configured to enable the plurality of devices to trigger a private mode in accordance with a preconfigured permission associated with the distributed environment computing system, the private mode configured to invoke the preconfigured permission to obfuscate content associated with each respective device and prevent access to one or more functionalities associated with each respective device.
Applications Claiming Priority (5)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US201962955772P | 2019-12-31 | 2019-12-31 | |
US201962955767P | 2019-12-31 | 2019-12-31 | |
US62/955,767 | 2019-12-31 | ||
US62/955,772 | 2019-12-31 | ||
PCT/US2020/070957 WO2021138635A1 (en) | 2019-12-31 | 2020-12-29 | Operating system-level assistive features for contextual privacy |
Publications (1)
Publication Number | Publication Date |
---|---|
CN114930793A true CN114930793A (en) | 2022-08-19 |
Family
ID=74206242
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN202080091160.5A Pending CN114930793A (en) | 2019-12-31 | 2020-12-29 | Operating system level assistance functionality for contextual privacy |
Country Status (6)
Country | Link |
---|---|
US (1) | US20230027580A1 (en) |
EP (1) | EP4066470A1 (en) |
JP (1) | JP2023509912A (en) |
KR (1) | KR20220116538A (en) |
CN (1) | CN114930793A (en) |
WO (1) | WO2021138635A1 (en) |
Citations (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20150095774A1 (en) * | 2013-09-27 | 2015-04-02 | Sonos, Inc. | Multi-Household Support |
US20170357529A1 (en) * | 2016-06-09 | 2017-12-14 | Apple Inc. | Behavior aware scheduling of tasks |
WO2017218437A1 (en) * | 2016-06-13 | 2017-12-21 | Neura, Inc. | Situation forecast mechanisms for internet of things integration platform |
US20180373568A1 (en) * | 2017-06-21 | 2018-12-27 | Citrix Systems, Inc. | Automatic Workflow-Based Device Switching |
-
2020
- 2020-12-29 EP EP20845550.1A patent/EP4066470A1/en active Pending
- 2020-12-29 CN CN202080091160.5A patent/CN114930793A/en active Pending
- 2020-12-29 WO PCT/US2020/070957 patent/WO2021138635A1/en unknown
- 2020-12-29 US US17/758,188 patent/US20230027580A1/en active Pending
- 2020-12-29 KR KR1020227025078A patent/KR20220116538A/en unknown
- 2020-12-29 JP JP2022540486A patent/JP2023509912A/en active Pending
Patent Citations (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20150095774A1 (en) * | 2013-09-27 | 2015-04-02 | Sonos, Inc. | Multi-Household Support |
US20170357529A1 (en) * | 2016-06-09 | 2017-12-14 | Apple Inc. | Behavior aware scheduling of tasks |
WO2017218437A1 (en) * | 2016-06-13 | 2017-12-21 | Neura, Inc. | Situation forecast mechanisms for internet of things integration platform |
US20180373568A1 (en) * | 2017-06-21 | 2018-12-27 | Citrix Systems, Inc. | Automatic Workflow-Based Device Switching |
Also Published As
Publication number | Publication date |
---|---|
WO2021138635A1 (en) | 2021-07-08 |
JP2023509912A (en) | 2023-03-10 |
KR20220116538A (en) | 2022-08-23 |
US20230027580A1 (en) | 2023-01-26 |
EP4066470A1 (en) | 2022-10-05 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US10051600B1 (en) | Selective notification delivery based on user presence detections | |
JP2021121928A (en) | Intelligent Assistant for Home Automation | |
US10146198B2 (en) | System-based control of programmable devices | |
Chow | The last mile for IoT privacy | |
AU2016301397B2 (en) | Controlling a device cloud | |
US9491571B2 (en) | Methods and apparatus for using smart environment devices via application program interfaces | |
EP3019919B1 (en) | Physical environment profiling through internet of things integration platform | |
JP2020537793A (en) | Personal domain for virtual assistant system on shared device | |
US20180332169A1 (en) | Personalization of virtual assistant skills based on user profile information | |
BR102013002579B1 (en) | METHOD, NON-TRANSITORY STORAGE DEVICE, AND SYSTEM FOR PERFORMING AN ACTION ON A USER DEVICE BASED ON LOCATION | |
JP2017514328A (en) | Method, apparatus, and storage medium for automatic switching of mode and mode control capability in a wireless communication device | |
US20170126525A1 (en) | Systems and methods for controlling devices | |
US10812494B2 (en) | Systems and methods for secure location-based document viewing | |
JP2022107616A (en) | Distributed identification in networked system | |
US20210172639A1 (en) | Automated Building Concierge | |
WO2019225109A1 (en) | Information processing device, information processing method, and information processing program | |
US20230027580A1 (en) | Operating system-level assistive features for contextual privacy | |
JP7412564B2 (en) | Operating system level distributed ambient computing | |
KR102459049B1 (en) | Method for managing entrance and information processing system there of | |
Dhillon et al. | Method for Real-Time Voice Communication | |
Rodriguez | Location Finding of Wireless Beacons | |
Takatsuka et al. | KULOCS: unified locating service for efficient development of location-based applications |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
SE01 | Entry into force of request for substantive examination |
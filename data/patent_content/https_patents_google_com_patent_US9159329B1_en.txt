US9159329B1 - Statistical post-filtering for hidden Markov modeling (HMM)-based speech synthesis - Google Patents
Statistical post-filtering for hidden Markov modeling (HMM)-based speech synthesis Download PDFInfo
- Publication number
- US9159329B1 US9159329B1 US13/705,710 US201213705710A US9159329B1 US 9159329 B1 US9159329 B1 US 9159329B1 US 201213705710 A US201213705710 A US 201213705710A US 9159329 B1 US9159329 B1 US 9159329B1
- Authority
- US
- United States
- Prior art keywords
- spectral envelope
- scale factor
- synthesized
- determining
- reference spectral
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Fee Related, expires
Links
- 238000001914 filtration Methods 0.000 title abstract description 8
- 238000003786 synthesis reaction Methods 0.000 title description 27
- 230000015572 biosynthetic process Effects 0.000 title description 26
- 230000003595 spectral effect Effects 0.000 claims abstract description 283
- 238000000034 method Methods 0.000 claims abstract description 64
- 238000003860 storage Methods 0.000 claims description 23
- 238000009499 grossing Methods 0.000 claims description 9
- 238000004519 manufacturing process Methods 0.000 claims description 6
- 230000004044 response Effects 0.000 claims description 4
- 238000013500 data storage Methods 0.000 description 45
- 238000004891 communication Methods 0.000 description 35
- 230000006870 function Effects 0.000 description 26
- 230000008569 process Effects 0.000 description 14
- 230000000694 effects Effects 0.000 description 11
- 239000011159 matrix material Substances 0.000 description 10
- 238000012545 processing Methods 0.000 description 9
- 238000010586 diagram Methods 0.000 description 8
- 230000009466 transformation Effects 0.000 description 8
- 238000009826 distribution Methods 0.000 description 6
- 230000005540 biological transmission Effects 0.000 description 5
- 238000005516 engineering process Methods 0.000 description 5
- 238000000605 extraction Methods 0.000 description 5
- 230000008901 benefit Effects 0.000 description 4
- 230000003287 optical effect Effects 0.000 description 4
- 238000012549 training Methods 0.000 description 4
- 230000001419 dependent effect Effects 0.000 description 3
- 230000006855 networking Effects 0.000 description 3
- 238000013459 approach Methods 0.000 description 2
- 238000003491 array Methods 0.000 description 2
- 238000013461 design Methods 0.000 description 2
- 230000007774 longterm Effects 0.000 description 2
- 230000007246 mechanism Effects 0.000 description 2
- 230000008447 perception Effects 0.000 description 2
- 230000002085 persistent effect Effects 0.000 description 2
- 230000002441 reversible effect Effects 0.000 description 2
- 230000005236 sound signal Effects 0.000 description 2
- 238000001228 spectrum Methods 0.000 description 2
- 238000013518 transcription Methods 0.000 description 2
- 230000035897 transcription Effects 0.000 description 2
- 230000002238 attenuated effect Effects 0.000 description 1
- 230000009286 beneficial effect Effects 0.000 description 1
- 230000015556 catabolic process Effects 0.000 description 1
- 230000001413 cellular effect Effects 0.000 description 1
- 238000006731 degradation reaction Methods 0.000 description 1
- 238000007667 floating Methods 0.000 description 1
- 239000004973 liquid crystal related substance Substances 0.000 description 1
- 239000000463 material Substances 0.000 description 1
- 230000001151 other effect Effects 0.000 description 1
- 230000002269 spontaneous effect Effects 0.000 description 1
- 238000007619 statistical method Methods 0.000 description 1
- 238000013179 statistical model Methods 0.000 description 1
- 230000007704 transition Effects 0.000 description 1
Images
Classifications
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L13/00—Speech synthesis; Text to speech systems
- G10L13/06—Elementary speech units used in speech synthesisers; Concatenation rules
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L19/00—Speech or audio signals analysis-synthesis techniques for redundancy reduction, e.g. in vocoders; Coding or decoding of speech or audio signals, using source filter models or psychoacoustic analysis
- G10L19/02—Speech or audio signals analysis-synthesis techniques for redundancy reduction, e.g. in vocoders; Coding or decoding of speech or audio signals, using source filter models or psychoacoustic analysis using spectral analysis, e.g. transform vocoders or subband vocoders
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L13/00—Speech synthesis; Text to speech systems
- G10L13/02—Methods for producing synthetic speech; Speech synthesisers
- G10L13/04—Details of speech synthesis systems, e.g. synthesiser structure or memory management
Definitions
- HMM Hidden Markov Model
- TTS text-to-speech
- HMM Hidden Markov Modeling
- TTS Text-To-Speech
- a method involves: (a) determining a scale factor that, when applied to a synthesized reference spectral envelope, minimizes a statistical divergence between a natural reference spectral envelope and the synthesized reference spectral envelope, where the synthesized reference spectral envelope is generated by a state of an HMM; (b) for a given synthesized subject spectral envelope generated by the state of the HMM, determining an enhanced synthesized subject spectral envelope based on the determined scale factor; and (c) generating, by a computing device, a synthetic speech signal that includes the enhanced synthesized subject spectral envelope.
- an article of manufacture includes a computer-readable storage medium, having stored thereon program instructions that, upon execution by a computing device, cause the computing device to perform operations including: (a) determining a scale factor that, when applied to a synthesized reference spectral envelope, minimizes a statistical divergence between a natural reference spectral envelope and the synthesized reference spectral envelope, where the synthesized reference spectral envelope is generated by a state of an HMM; (b) for a given synthesized subject spectral envelope generated by the state of the HMM, determining an enhanced synthesized subject spectral envelope based on the determined scale factor; and (c) generating, by a computing device, a synthetic speech signal that includes the enhanced synthesized subject spectral envelope.
- a system in yet another aspect, includes a processor, a computer readable medium, and program instructions stored on the computer readable medium and executable by the processor.
- the program instructions include instructions that cause a computing device to perform operations, including: (a) determining a scale factor that, when applied to a synthesized reference spectral envelope, minimizes a statistical divergence between a natural reference spectral envelope and the synthesized reference spectral envelope, where the synthesized reference spectral envelope is generated by a state of an HMM; (b) for a given synthesized subject spectral envelope generated by the state of the HMM, determining an enhanced synthesized subject spectral envelope based on the determined scale factor; and (c) generating a synthetic speech signal that includes the enhanced synthesized subject spectral envelope.
- FIG. 1 depicts a distributed computing architecture, in accordance with an example embodiment.
- FIG. 2A is a block diagram of a server device, in accordance with an example embodiment.
- FIG. 2B depicts a cloud-based server system, in accordance with an example embodiment.
- FIG. 3 depicts a block diagram of a client device, in accordance with an example embodiment.
- FIG. 4 depicts an overview of a text-to-speech system, in accordance with an example embodiment.
- FIG. 5A shows example natural spectral envelopes.
- FIG. 5B shows example synthesized spectral envelopes.
- FIG. 6 shows an example Mel-Cepstral Parameterization of a spectral envelope.
- FIG. 7 is a flow chart, in accordance with an example embodiment.
- FIG. 8 shows the effects of an example high-pass transformation.
- HMM Hidden Markov Modeling
- TTS Text-To-Speech Synthesizers.
- Speech signals generated by HMM synthesizers are often perceived as having a “muffled” quality, which can generally be attributed to both (i) an over-smoothing effect on spectral envelopes due to HMM-based synthesis and (ii) parameterization of the spectral envelopes that make up the synthesized speech signal, among other considerations.
- the methods and systems described herein may help to counteract this undesirable over-smoothing effect.
- the method involves determining a scale factor that, when applied to a synthesized reference spectral envelope, minimizes a statistical divergence between a natural reference spectral envelope and the synthesized reference spectral envelope.
- the synthesized reference spectral envelope is generated by a state of a HMM based on a reference segment of text (i.e., a segment of text taken from a speech corpus containing reference text and corresponding reference spectral envelopes).
- the speech corpus may generally be used to train the HMM.
- a scale factor is determined that, when applied to a spectral envelope generated from a particular HMM state, helps transform the synthesized spectral envelope to a form that more closely resembles an original, or natural, spectral envelope.
- the synthesized reference spectral envelope may be parameterized based on a Mel-Cepstral parameterization and may be modeled based on a Multivariate Gaussian model.
- the natural reference spectral envelope may be parameterized based on a Mel-Cepstral parameterization and may be modeled based on a Multivariate Gaussian model.
- determining the scale factor may involve determining the scale factor that minimizes the Kullback-Leibler distance between the natural reference spectral envelope and the synthesized reference spectral envelope.
- the scale factor may be applied to a synthesized subject spectral envelope (i.e., a spectral envelope that has been synthesized based on a subject segment of text) so as to generate an enhanced synthesized subject spectral envelope.
- the synthesized subject spectral envelope may be originally generated based on a segment of text that is the subject of a TTS synthesis process.
- the effect of applying the scale factor to the synthesized subject spectral envelope is to increase the peak-to-null ratio between the formant peaks and the formant nulls of the synthesized subject spectral envelope. This helps counteract any over-smoothing (and reduces the perception of any “muffled” quality) resulting from the HMM synthesis and/or parameterization of the TTS synthesis process.
- the method may optionally involve determining an overemphasis-scale factor based on the scale factor, and applying the overemphasis-scale factor to the synthesized subject spectral envelope. More particularly, the overemphasis-scale factor may be applied to the synthesized subject spectral envelope so as to generate an overenhanced synthesized subject spectral envelope. Application of the overemphasis-scale factor may have a relatively greater effect on the synthesized subject spectral envelope than does the scale factor, and thereby may even further improve the quality of the synthesized subject spectral envelope.
- overemphasis-scale factor may also involve the application of a high-pass transformation matrix so as to reduce the effect of the overemphasis-scale factor at relatively low frequencies.
- This may be generally advantageous as relatively lower frequencies in spectral envelopes generally do not suffer as severely from oversmoothing as do higher frequencies, and so the overemphasis of such relatively lower frequencies would be unnecessary and/or undesirable.
- client devices such as mobile phones, tablet computers, and/or desktop computers
- client services may communicate with the server devices via a network such as the Internet.
- server devices such as the Internet
- applications that operate on the client devices may also have a persistent, server-based component. Nonetheless, it should be noted that at least some of the methods, processes, and techniques disclosed herein may be able to operate entirely on a client device or a server device.
- server devices may not necessarily be associated with a client/server architecture, and therefore may also be referred to as “computing devices.”
- client devices also may not necessarily be associated with a client/server architecture, and therefore may be interchangeably referred to as “user devices.”
- client devices may also be referred to as “computing devices.”
- This section describes general system and device architectures for such client devices and server devices.
- the methods, devices, and systems presented in the subsequent sections may operate under different paradigms as well.
- the embodiments of this section are merely examples of how these methods, devices, and systems can be enabled. And it should be understood that other examples may exist as well.
- FIG. 1 is a simplified block diagram of a communication system 100 , in which various embodiments described herein can be employed.
- Communication system 100 includes client devices 102 , 104 , and 106 , which represent a desktop personal computer (PC), a tablet computer, and a mobile phone, respectively.
- client devices 102 , 104 , and 106 represent a desktop personal computer (PC), a tablet computer, and a mobile phone, respectively.
- Each of these client devices may be able to communicate with other devices via a network 108 through the use of wireline connections (designated by solid lines) and/or wireless connections (designated by dashed lines).
- wireline connections designated by solid lines
- wireless connections designated by dashed lines
- Network 108 may be, for example, the Internet, or some other form of public or private Internet Protocol (IP) network.
- IP Internet Protocol
- client devices 102 , 104 , and 106 may communicate using packet-switching technologies. Nonetheless, network 108 may also incorporate at least some circuit-switching technologies, and client devices 102 , 104 , and 106 may communicate via circuit switching alternatively or in addition to packet switching. Further, network 108 may take other forms as well.
- Server device 110 may also communicate via network 108 . Particularly, server device 110 may communicate with client devices 102 , 104 , and 106 according to one or more network protocols and/or application-level protocols to facilitate the use of network-based or cloud-based computing on these client devices. Server device 110 may include integrated data storage (e.g., memory, disk drives, etc.) and may also be able to access separate server data storage 112 . Communication between server device 110 and server data storage 112 may be direct, via network 108 , or both direct and via network 108 as illustrated in FIG. 1 . Server data storage 112 may store application data that is used to facilitate the operations of applications performed by client devices 102 , 104 , and 106 and server device 110 .
- integrated data storage e.g., memory, disk drives, etc.
- Communication between server device 110 and server data storage 112 may be direct, via network 108 , or both direct and via network 108 as illustrated in FIG. 1 .
- Server data storage 112 may store application data that is used to facilitate the
- communication system 100 may include any number of each of these components.
- communication system 100 may include millions of client devices, thousands of server devices, and/or thousands of server data storages.
- client devices may take on forms other than those shown in FIG. 1 .
- FIG. 2A is a block diagram of a server device in accordance with an example embodiment.
- server device 200 shown in FIG. 2A can be configured to perform one or more functions of server device 110 and/or server data storage 112 .
- Server device 200 may include a user interface 202 , a communication interface 204 , processor 206 , and/or data storage 208 , all of which may be linked together via a system bus, network, or other connection mechanism 214 .
- User interface 202 may include user input devices such as a keyboard, a keypad, a touch screen, a computer mouse, a track ball, a joystick, and/or other similar devices, now known or later developed.
- User interface 202 may also include user display devices, such as one or more cathode ray tubes (CRT), liquid crystal displays (LCD), light emitting diodes (LEDs), displays using digital light processing (DLP) technology, printers, light bulbs, and/or other similar devices, now known or later developed.
- user interface 202 may be configured to generate audible output(s), via a speaker, speaker jack, audio output port, audio output device, earphones, and/or other similar devices, now known or later developed.
- user interface 202 may include software, circuitry, or another form of logic that can transmit data to and/or receive data from external user input/output devices.
- Communication interface 204 may include one or more wireless interfaces and/or wireline interfaces that are configurable to communicate via a network, such as network 108 shown in FIG. 1 .
- the wireless interfaces may include one or more wireless transceivers, such as a BLUETOOTH® transceiver, a Wifi transceiver perhaps operating in accordance with an IEEE 802.11 standard (e.g., 802.11b, 802.11g, 802.11n), a WiMAX transceiver perhaps operating in accordance with an IEEE 802.16 standard, a Long-Term Evolution (LTE) transceiver perhaps operating in accordance with a 3rd Generation Partnership Project (3GPP) standard, and/or other types of wireless transceivers configurable to communicate via local-area or wide-area wireless networks.
- a BLUETOOTH® transceiver e.g., 802.11b, 802.11g, 802.11n
- WiMAX transceiver perhaps operating in accordance with an IEEE 802.16 standard
- the wireline interfaces may include one or more wireline transceivers, such as an Ethernet transceiver, a Universal Serial Bus (USB) transceiver, or similar transceiver configurable to communicate via a twisted pair wire, a coaxial cable, a fiber-optic link or other physical connection to a wireline device or network.
- wireline transceivers such as an Ethernet transceiver, a Universal Serial Bus (USB) transceiver, or similar transceiver configurable to communicate via a twisted pair wire, a coaxial cable, a fiber-optic link or other physical connection to a wireline device or network.
- USB Universal Serial Bus
- Processor 206 may include one or more general purpose processors (e.g., microprocessors) and/or one or more special purpose processors (e.g., digital signal processors (DSPs), graphical processing units (GPUs), floating point processing units (FPUs), network processors, or application specific integrated circuits (ASICs)).
- DSPs digital signal processors
- GPUs graphical processing units
- FPUs floating point processing units
- ASICs application specific integrated circuits
- Processor 206 may be configured to execute computer-readable program instructions 210 that are contained in data storage 208 , and/or other instructions, to carry out various functions described herein.
- data storage 208 may include one or more non-transitory computer-readable storage media that can be read or accessed by processor 206 .
- the one or more computer-readable storage media may include volatile and/or non-volatile storage components, such as optical, magnetic, organic or other memory or disc storage, which can be integrated in whole or in part with processor 206 .
- data storage 208 may be implemented using a single physical device (e.g., one optical, magnetic, organic or other memory or disc storage unit), while in other embodiments, data storage 208 may be implemented using two or more physical devices.
- Data storage 208 may also include program data 212 that can be used by processor 206 to carry out functions described herein.
- data storage 208 may include, or have access to, additional data storage components or devices (e.g., cluster data storages described below).
- Server device 110 and server data storage device 112 may store applications and application data at one or more places accessible via network 108 . These places may be data centers containing numerous servers and storage devices. The exact physical location, connectivity, and configuration of server device 110 and server data storage device 112 may be unknown and/or unimportant to client devices. Accordingly, server device 110 and server data storage device 112 may be referred to as “cloud-based” devices that are housed at various remote locations.
- cloud-based One possible advantage of such “cloud-based” computing is to offload processing and data storage from client devices, thereby simplifying the design and requirements of these client devices.
- server device 110 and server data storage device 112 may be a single computing device residing in a single data center.
- server device 110 and server data storage device 112 may include multiple computing devices in a data center, or even multiple computing devices in multiple data centers, where the data centers are located in diverse geographic locations.
- FIG. 1 depicts each of server device 110 and server data storage device 112 potentially residing in a different physical location.
- FIG. 2B depicts a cloud-based server cluster in accordance with an example embodiment.
- functions of server device 110 and server data storage device 112 may be distributed among three server clusters 220 A, 220 B, and 220 C.
- Server cluster 220 A may include one or more server devices 200 A, cluster data storage 222 A, and cluster routers 224 A connected by a local cluster network 226 A.
- server cluster 220 B may include one or more server devices 200 B, cluster data storage 222 B, and cluster routers 224 B connected by a local cluster network 226 B.
- server cluster 220 C may include one or more server devices 200 C, cluster data storage 222 C, and cluster routers 224 C connected by a local cluster network 226 C.
- Server clusters 220 A, 220 B, and 220 C may communicate with network 108 via communication links 228 A, 228 B, and 228 C, respectively.
- each of the server clusters 220 A, 220 B, and 220 C may have an equal number of server devices, an equal number of cluster data storages, and an equal number of cluster routers. In other embodiments, however, some or all of the server clusters 220 A, 220 B, and 220 C may have different numbers of server devices, different numbers of cluster data storages, and/or different numbers of cluster routers. The number of server devices, cluster data storages, and cluster routers in each server cluster may depend on the computing task(s) and/or applications assigned to each server cluster.
- server devices 200 A can be configured to perform various computing tasks of server device 110 . In one embodiment, these computing tasks can be distributed among one or more of server devices 200 A.
- Server devices 200 B and 200 C in server clusters 220 B and 220 C may be configured the same or similarly to server devices 200 A in server cluster 220 A.
- server devices 200 A, 200 B, and 200 C each may be configured to perform different functions.
- server devices 200 A may be configured to perform one or more functions of server device 110
- server devices 200 B and server device 200 C may be configured to perform functions of one or more other server devices.
- the functions of server data storage device 112 can be dedicated to a single server cluster, or spread across multiple server clusters.
- Cluster data storages 222 A, 222 B, and 222 C of the server clusters 220 A, 220 B, and 220 C, respectively, may be data storage arrays that include disk array controllers configured to manage read and write access to groups of hard disk drives.
- the disk array controllers alone or in conjunction with their respective server devices, may also be configured to manage backup or redundant copies of the data stored in cluster data storages to protect against disk drive failures or other types of failures that prevent one or more server devices from accessing one or more cluster data storages.
- server device 110 and server data storage device 112 can be distributed across server clusters 220 A, 220 B, and 220 C
- various active portions and/or backup/redundant portions of these components can be distributed across cluster data storages 222 A, 222 B, and 222 C.
- some cluster data storages 222 A, 222 B, and 222 C may be configured to store backup versions of data stored in other cluster data storages 222 A, 222 B, and 222 C.
- Cluster routers 224 A, 224 B, and 224 C in server clusters 220 A, 220 B, and 220 C, respectively, may include networking equipment configured to provide internal and external communications for the server clusters.
- cluster routers 224 A in server cluster 220 A may include one or more packet-switching and/or routing devices configured to provide (i) network communications between server devices 200 A and cluster data storage 222 A via cluster network 226 A, and/or (ii) network communications between the server cluster 220 A and other devices via communication link 228 A to network 108 .
- Cluster routers 224 B and 224 C may include network equipment similar to cluster routers 224 A, and cluster routers 224 B and 224 C may perform networking functions for server clusters 220 B and 220 C that cluster routers 224 A perform for server cluster 220 A.
- the configuration of cluster routers 224 A, 224 B, and 224 C can be based at least in part on the data communication requirements of the server devices and cluster storage arrays, the data communications capabilities of the network equipment in the cluster routers 224 A, 224 B, and 224 C, the latency and throughput of the local cluster networks 226 A, 226 B, 226 C, the latency, throughput, and cost of the wide area network connections 228 A, 228 B, and 228 C, and/or other factors that may contribute to the cost, speed, fault-tolerance, resiliency, efficiency and/or other design goals of the system architecture.
- FIG. 3 is a simplified block diagram showing some of the components of an example client device 300 .
- client device 300 may be a “plain old telephone system” (POTS) telephone, a cellular mobile telephone, a still camera, a video camera, a fax machine, an answering machine, a computer (such as a desktop, notebook, or tablet computer), a personal digital assistant (PDA), a home automation component, a digital video recorder (DVR), a digital TV, a remote control, or some other type of device equipped with one or more wireless or wired communication interfaces.
- POTS plain old telephone system
- PDA personal digital assistant
- DVR digital video recorder
- client device 300 may include a communication interface 302 , a user interface 304 , a processor 306 , and data storage 308 , all of which may be communicatively linked together by a system bus, network, or other connection mechanism 310 .
- Communication interface 302 functions to allow client device 300 to communicate, using analog or digital modulation, with other devices, access networks, and/or transport networks.
- communication interface 302 may facilitate circuit-switched and/or packet-switched communication, such as POTS communication and/or IP or other packetized communication.
- communication interface 302 may include a chipset and antenna arranged for wireless communication with a radio access network or an access point.
- communication interface 302 may take the form of a wireline interface, such as an Ethernet, Token Ring, or USB port.
- Communication interface 302 may also take the form of a wireless interface, such as a Wifi, BLUETOOTH®, global positioning system (GPS), or wide-area wireless interface (e.g., WiMAX or LTE).
- communication interface 302 may include multiple physical communication interfaces (e.g., a Wifi interface, a BLUETOOTH® interface, and a wide-area wireless interface).
- User interface 304 may function to allow client device 300 to interact with a human or non-human user, such as to receive input from a user and to provide output to the user.
- user interface 304 may include input components such as a keypad, keyboard, touch-sensitive or presence-sensitive panel, computer mouse, trackball, joystick, microphone, still camera and/or video camera.
- User interface 304 may also include one or more output components such as a display screen (which, for example, may be combined with a presence-sensitive panel), CRT, LCD, LED, a display using DLP technology, printer, light bulb, and/or other similar devices, now known or later developed.
- User interface 304 may also be configured to generate audible output(s), via a speaker, speaker jack, audio output port, audio output device, earphones, and/or other similar devices, now known or later developed.
- user interface 304 may include software, circuitry, or another form of logic that can transmit data to and/or receive data from external user input/output devices.
- client device 300 may support remote access from another device, via communication interface 302 or via another physical interface (not shown).
- Processor 306 may include one or more general purpose processors (e.g., microprocessors) and/or one or more special purpose processors (e.g., DSPs, GPUs, FPUs, network processors, or ASICs).
- Data storage 308 may include one or more volatile and/or non-volatile storage components, such as magnetic, optical, flash, or organic storage, and may be integrated in whole or in part with processor 306 .
- Data storage 308 may include removable and/or non-removable components.
- Processor 306 may be capable of executing program instructions 318 (e.g., compiled or non-compiled program logic and/or machine code) stored in data storage 308 to carry out the various functions described herein. Therefore, data storage 308 may include a non-transitory computer-readable medium, having stored thereon program instructions that, upon execution by client device 300 , cause client device 300 to carry out any of the methods, processes, or functions disclosed in this specification and/or the accompanying drawings. The execution of program instructions 318 by processor 306 may result in processor 306 using data 312 .
- program instructions 318 e.g., compiled or non-compiled program logic and/or machine code
- program instructions 318 may include an operating system 322 (e.g., an operating system kernel, device driver(s), and/or other modules) and one or more application programs 320 (e.g., address book, email, web browsing, social networking, and/or gaming applications) installed on client device 300 .
- data 312 may include operating system data 316 and application data 314 .
- Operating system data 316 may be accessible primarily to operating system 322
- application data 314 may be accessible primarily to one or more of application programs 320 .
- Application data 314 may be arranged in a file system that is visible to or hidden from a user of client device 300 .
- Application programs 320 may communicate with operating system 322 through one or more application programming interfaces (APIs). These APIs may facilitate, for instance, application programs 320 reading and/or writing application data 314 , transmitting or receiving information via communication interface 302 , receiving or displaying information on user interface 304 , and so on.
- APIs application programming interfaces
- application programs 320 may be referred to as “apps” for short. Additionally, application programs 320 may be downloadable to client device 300 through one or more online application stores or application markets. However, application programs can also be installed on client device 300 in other ways, such as via a web browser or through a physical interface (e.g., a USB port) on client device 300 .
- TTS synthesis system Before describing statistical post-filtering for HMM-Based Speech Synthesis in detail, it may be beneficial to understand aspects of an overall example TTS synthesis system. Thus, this section describes aspects of TTS systems in general, including how components of a TTS synthesis system may interact with one another in order to facilitate TTS synthesis, and how some of these components may be trained.
- FIG. 4 depicts an example TTS synthesis system 400 .
- system 400 includes speech database 402 , spectral envelope extraction component 404 , an HMM training component 406 , HMM database 408 , subject text 410 , parameter generation component 412 , post filtering component 414 , and synthesized speech component 416 .
- Speech database 402 may generally be any suitable speech corpus of speech audio files and corresponding text transcriptions.
- speech database 402 may include multiple speech samples.
- speech database 402 may include a respective speech audio file and a respective text transcription.
- speech database 402 may include multiple respective speech audio files.
- the speech samples may be “read speech” speech samples that include, for example, book excerpts, broadcast news, list of words, and/or sequence of numbers, among other examples.
- the speech samples may be “spontaneous speech” speech samples that include, for example, dialogs between two or more people, narratives such as a person telling a story, map-tasks such as one person explaining a route on a map to another, and/or appointment tasks such as two people trying to find a common meeting time based on individual schedules, among other examples.
- Other types of speech samples may exist as well.
- Spectral envelope extraction component 404 may be any suitable combination of hardware and/or software configured to extract spectral envelopes from the speech audio files of speech database 402 .
- FIG. 5A shows natural spectral envelopes 502 A corresponding to an example speech audio file of speech database 402 .
- each natural spectral envelope corresponds to a frequency spectrum of the speech for a respective time interval.
- first natural spectral envelope 504 A corresponds to a first time interval
- second natural spectral envelope 506 A corresponds to a second time interval
- third spectral envelope 508 A corresponds to a third time interval.
- spectral envelope extraction component 404 may also extract any other suitable information used to train the HMM synthesizer as will be understood by those of ordinary skill in the art (such as, for example, fundamental frequency information).
- natural spectral envelopes 502 A may correspond to a number of respective synthesized spectral envelopes 502 B, perhaps generated by TTS synthesis system 400 , such as those shown in FIG. 5B .
- HMM synthesis and/or parameterization of the synthesized spectral envelopes may generally give rise to undesirable “over-smoothing” of the synthesized spectral envelopes—the statistical modeling process involved with HMM synthesis generally tends to remove some details of the natural spectral envelopes.
- synthesized spectral envelopes 504 B, 506 B, and 508 B are generally smoothed compared with the natural spectral envelopes.
- the smoothing of the spectral envelopes may desirably reduce error in the generation of synthesized spectral envelopes; however, it also causes the degradation of the naturalness of synthetic speech because it removes details of the natural spectral envelopes.
- Spectral envelope extraction component 404 may also be generally configured to parameterize the spectral envelopes. Any suitable parameterization technique may be used. In one example, a Mel-Cepstral (MCEP) Parameterization of the spectral envelopes may be used. As a general matter, a vector of coefficients corresponding to the MCEP may be generated that, taken together represent the spectral envelope. More particularly, as will be understood by those of skill in the art, the MCEP coefficients may represent magnitude and phase information corresponding to a speech audio file (or particular natural spectral envelope), based on a linear cosine transform of a log power spectrum on a nonlinear mel scale of frequency.
- MCEP Mel-Cepstral
- FIG. 6 depicts a representative MCEP Parameterization of spectral envelope 504 A, where the horizontal axis has the index of the MCEP coefficient and the vertical axis has the amplitude of the corresponding MCEP coefficient.
- the MCEP indices are related to the underlying quefrencies of the mel-scaled cepstrum.
- the various amplitudes depicted in FIG. 6 may be understood to correspond to a particular MCEP coefficient, the collection of which makes up a vector that is a MCEP-parameterized representation of spectral envelope 504 A. It should be further understood that the amplitudes depicted in FIG. 6 do not necessarily reflect real, approximate, or even representative MCEP coefficients, but are shown only for purposes of example.
- HMM training component 406 performs training of context-dependent HMM models, where context of reference text and audio from speech database 402 , among other considerations, may be taken into account.
- HMM is a statistical model that may be used to determine state information for a Markov Process when the states of the process are not observable. A Markov Process undergoes successive transitions from one state to another, with the previous and next states of the process depending, to some measurable degree, on the current state.
- speech parameters such as spectral envelopes are extracted from speech waveforms (as described above) and then their time sequences are modeled by context-dependent HMMs.
- HMM database 408 may store information corresponding to the trained HMM, including various HMM states, that may be used to synthesize speech.
- parameter generation component 412 During synthesis of a given segment of text 410 , parameter generation component 412 generates spectral envelopes (or a corresponding set of MCEP coefficients) for the given segment of the text. Then, a given synthesized utterance may be generated by synthesized speech component 414 by concatenating the output from pertinent context-dependent HMMs, each corresponding to a respective given segment of the subject text.
- the output from the parameter generation component 412 may be filtered by a post filtering component 414 .
- post filtering component 414 may improve the overall quality of the synthesized speech that is ultimately generated by synthesized speech component 416 .
- Synthesized speech component 416 may include hardware and/or software configured to carry out any suitable audio-signal generation technique including for example, various vocoding techniques, to generate a speech waveform from the speech parameters generated by parameter generation component 412 , and filtered by post filtering component 414 .
- FIG. 7 is a flowchart showing aspects of an embodiment of an example method 700 .
- the blocks illustrated by this flowchart may be carried out by various computing devices, such as client device 300 , server device 200 , and/or server cluster 220 A. Aspects of some blocks may be distributed between multiple computing devices. And aspects of some blocks may be carried out by other devices as well.
- each block of the flowchart may represent a module, a segment, or a portion of program code, which includes one or more instructions executable by a processor (e.g., any of those processors described herein) for implementing specific logical functions or steps in the process.
- the program code may be stored on any type of computer readable medium (e.g., any computer readable storage medium or non-transitory media described herein), such as a storage device including a disk or hard drive.
- each block may represent circuitry that is wired to perform the specific logical functions in the process.
- Alternative implementations are included within the scope of the example embodiments of the present application in which functions may be executed out of order from that shown or discussed, including substantially concurrent or in reverse order, depending on the functionality involved, as would be understood by those reasonably skilled in the art.
- Example method 700 involves, as shown by block 702 , a computing device determining a scale factor that, when applied to a synthesized reference spectral envelope, minimizes a statistical divergence between a natural reference spectral envelope and the synthesized reference spectral envelope, where the synthesized reference spectral envelope is generated by a state of a HMM.
- the computing device determines an enhanced synthesized subject spectral envelope based on the determined scale factor.
- the computing device generates a synthetic speech signal that includes the enhanced synthesized subject spectral envelope.
- method 700 involves a computing device determining a scale factor that, when applied to a synthesized reference spectral envelope, minimizes a statistical divergence between a natural reference spectral envelope and the synthesized reference spectral envelope, where the synthesized reference spectral envelope is generated by a state of an HMM.
- a scale factor is determined that, when applied to a synthesized subject spectral envelope generated by the HMM state (in accordance with block 704 , discussed further below), helps transform the synthesized subject spectral envelope to a form that more closely resembles a natural spectral envelope.
- synthesized reference spectral envelope generated from parameter generation component 412 by an HMM state present in HMM database 408 .
- the synthesized reference spectral envelope may be generated based on a reference text segment that is present in speech database 402 .
- speech database 402 may also contain a speech audio file corresponding to the reference text segment, from which a natural reference spectral envelope can be obtained.
- TTS synthesis system 400 After synthesis of the synthesized reference spectral envelope by TTS synthesis system 400 , there exists the natural reference spectral envelope and the synthesized reference spectral envelope, each corresponding to the reference text segment. It is this natural reference spectral envelope and synthesized reference spectral envelope that may be used by the computing device to determine the scale factor in accordance with block 702 .
- the natural reference spectral envelope may be a parameterized natural reference spectral envelope that the computing device parameterizes based on a mel-cepstral parameterization. This parameterization may be performed by spectral envelope extraction component 404 .
- the computing device may represent the natural reference spectral envelope using a suitable vector of MCEP coefficients.
- the synthesized reference spectral envelope may be a parameterized synthesized reference spectral envelope that the computing device parameterizes based on a mel-cepstral parameterization. This parameterization may be performed by parameter generation component 412 .
- the computing device may represent the synthesized reference spectral envelope using a suitable vector of MCEP coefficients. In this way, each HMM state in the TTS synthesis system 400 may be arranged to provide an output vector of MCEP coefficients that represents a corresponding synthesized reference spectral envelope.
- MCEP coefficients that represent corresponding synthesized reference spectral envelopes can enable post-filtering of the synthesized reference spectral envelopes and convenient re-synthesis of speech directly from the MCEP coefficients, among other advantages.
- the synthesized reference spectral envelope may be a modeled synthesized reference spectral envelope that the computing device models based on a Multivariate Gaussian model.
- the natural reference spectral envelope may be a modeled natural reference spectral envelope that the computing device models based on the Multivariate Gaussian model.
- modeling of the respective spectral envelopes based on the Multivariate Gaussian model further facilitates advantageous statistical analysis of the natural reference spectral envelope and the reference spectral envelope.
- the computing device determining the scale factor (also referred to herein at times as “ ⁇ ”) that minimizes the statistical divergence between the natural reference spectral envelope and the synthesized reference spectral envelope may be done in any suitable manner.
- determining the scale factor that minimizes the statistical divergence between the natural reference spectral envelope and the synthesized reference spectral envelope may involve determining the scale factor that minimizes the Kullback-Leibler distance between the natural reference spectral envelope and the synthesized reference spectral envelope.
- a Kullback-Liebler distance is a distance from a first probability distribution (sometimes referred to as a “true” probability distribution) to a second probability distribution (sometimes referred to as a “target” probability distribution).
- a first probability distribution sometimes referred to as a “true” probability distribution
- a second probability distribution sometimes referred to as a “target” probability distribution.
- the synthesized reference spectral envelope or the Multivariate Guasian model thereof to be the “true” probability distribution for purposes of consideration of the Kullback-Leibler distance between the natural reference spectral envelope and the synthesized reference spectral envelope.
- the natural reference spectral envelope (or the Multivariate Guasian model thereof) to be the “target” probability distribution for purposes of consideration of the Kullback-Leibler distance between the natural reference spectral envelope and the synthesized reference spectral envelope.
- the computing device may determine the scale factor that minimizes the Kullback-Leibler distance between the natural reference spectral envelope and the synthesized reference spectral envelope in any suitable manner.
- computing device may determine the scale factor that minimizes the Kullback-Leibler distance between the natural reference spectral envelope and the synthesized reference spectral envelope based on a scalar minimization process whereby a set of possible scale factors, each within a certain interval decimated by a predetermined number, are each tested to see which possible scale factor minimizes the statistical difference.
- determining the scale factor may involve determining the statistical difference corresponding to each potential scale factor in the set of potential scale factors.
- the number of potential scale factors in the set of potential scale factors may generally be a predetermined number, and each potential scale factor from the set of potential scale factors may generally have a unique value that is within a predetermined interval.
- the computing device may select as the scale factor the potential scale factor in the set of scale factors having the smallest corresponding determined statistical difference.
- the Multivariate Guasian of the synthesized reference spectral envelope be represented by P and the Multivariate Guasian of the natural reference spectral envelope be represented by Q, over a given frequency range x of the spectral envelopes in the frequency domain.
- the Kullback-Leibler distance between P and Q may be represented as:
- each potential scale factor in the set of scale factors may be applied to the synthesized reference spectral envelope P, and the corresponding D KL may be determined. The potential scale factor associated with the smallest D KL may then be selected as the scale factor.
- the set of potential scale factors there may be 256 potential scale factors in the set of potential scale factors.
- the predetermined interval of the set of potential scale factors may be [1.0 to 1.10].
- the set of potential scale factors may be (approximately) [1.0, 1.00039, 1.00078, . . . 1.10].
- this is one example of the set of potential scale factors, it is but one example, and other sets of potential scale factors may be used as well.
- example method 700 may be described with respect to a single natural reference spectral envelope and a single corresponding synthesized reference spectral envelope (or a single corresponding HMM state), it should be understood that, in practice, a scale factor may be similarly determined for each HMM state of the HMM model.
- the respective scale factors (determined for each HMM state) may be stored in a look-up table for later use.
- the scale factors may be stored locally, remotely, or in any other suitable location. Further, the scale factors may be stored using any desired extent of memory. In an example, each scale factor may be stored using 8 bits. In another example, each scale factor may be stored using 16 bits.
- the computing device may also determine an overemphasis-scale factor based on the scale factor.
- the overemphasis-scale factor may be used by the computing device to increase the effect of the scale factor on a synthesized subject spectral envelope. Therefore, upon application of the overemphasis-scale factor to the synthesized subject spectral envelope (as opposed to, for example, the scale factor), the computing device may generate an overenhanced synthesized subject spectral envelope (as is discussed further below in connection with block 704 ).
- the computing device may determine an “overenhanced synthesized subject spectral envelope” based on the overemphasis-scale factor.
- the overemphasis-scale factor may be determined based on the determined scale factor and a predetermined overemphasis multiplier.
- ⁇ is the overemphasis multiplier
- ⁇ circumflex over ( ⁇ ) ⁇ is the overemphasis-scale factor
- ⁇ is the scale factor (determined based on the process of minimizing the statistical divergence between the natural reference spectral envelope and the synthesized reference spectral envelope described above).
- ⁇ may take on any desired value within a predetermined interval.
- the predetermined interval may be constrained to generally desirable values.
- the lower bound of the predetermined interval is no less than 1 (so that the multiplication of the original scale factor is no less than 1)
- the upper bound of the predetermined interval is bound at a value for which the scale factor should not be multiplied by more than.
- the predetermined interval for the overemphasis multiplier is [1.0 2.0].
- ⁇ may equal 1.4. (It has been determined that this overemphasis multiplier value works well for certain voices; though a different value may be more desirable for other voices.) However, other intervals and/or particular overemphasis multipliers may be desirable as well.
- a corresponding sequence of scale factors may be applied to the respective synthesized subject spectral envelopes, so as to enhance the sequence of synthesized subject spectral envelopes.
- the scale factors may be smoothed prior to applying the sequence of scale factors to the sequence of synthesized subject spectral envelopes. Smoothing of the sequence of the scale factors provides the benefit of limiting any undesirable “spikes” among the sequence of scale factors (so that, for example, one particular synthesized subject spectral envelope is not emphasized to a much greater extent than the next (or previous) synthesized subject spectral envelope).
- the sequence of scale factors may be smoothed using a filter such as a zero-phase 3-tap filter.
- a plurality of HMM states may each generate a respective synthesized reference spectral envelope, each state having a respective determined scale factor that minimizes the statistical divergence between a respective natural reference spectral envelope and the respective synthesized reference spectral envelope.
- the computing device may determine an overemphasis-scale. But, before determining the overemphasis-scale factor, the computing device may determine a respective smoothed scale factor corresponding to each determined scale factor.
- determining the overemphasis-scale factor based on the determined scale factor and the predetermined overemphasis multiplier may involve the computing device determining the overemphasis-scale factor based on the respective smoothed determined scale factor corresponding to the determined scale factor and the predetermined overemphasis multiplier.
- the computing device determines an enhanced synthesized subject spectral envelope based on the determined scale factor.
- the scale factor determined by the computing device in accordance with step 702 is used to help improve the quality of a given synthesized subject spectral envelope by determining an enhanced synthesized subject spectral envelope.
- a given HMM state within HMM database 408 of synthesis system 400 may generate a synthesized subject spectral envelope based on a particular segment of subject text 410 .
- the synthesized subject spectral envelope may be represented as a series of parameters (e.g., MCEP coefficients), as generated by parameter generation component 412 .
- the scale factor determined for the state of the HMM in accordance with block 702 may be applied to the synthesized subject spectral envelope so as to determine the enhanced synthesized spectral envelope in accordance with block 704 .
- the enhanced synthesized subject spectral envelope may be generated in any suitable manner.
- ⁇ (k) is the enhanced k-th MCEP coefficient of the enhanced synthesized subject spectral envelope
- c(k) is the k-th MCEP coefficient of the synthesized subject spectral envelope
- K is the number of MCEP coefficients that represent the synthesized subject spectral envelope
- ⁇ is the enhancement scale factor determined in accordance with block 702 .
- the enhancement of the synthesized subject spectral envelope is performed by manipulation of the MCEP coefficients, in the quefrency domain.
- Manipulation of the MCEP coefficients using the constant ⁇ with an exponent of k can counteract, at least approximately, the over-smoothing effect observed in the subject spectral envelope within the frequency domain.
- the effect of applying the scale factor to the synthesized reference spectral envelope is to increase the peak-to-null ratio between the formant peaks and the formant nulls of the synthesized reference spectral envelope. This helps counteract any oversmoothing (and reduces the perception of any “muffled” quality) resulting from the HMM synthesis and/or parameterization.
- the synthesized reference spectral envelope may be a parameterized synthesized reference spectral envelope that is parameterized based on a mel-cepstral parameterization.
- the natural reference spectral envelope may be a parameterized natural reference spectral envelope that is parameterized based on a mel-cepstral parameterization. Accordingly, determining the enhanced synthesized subject spectral envelope based on the determined scale factor, in accordance with block 704 , may involve determining an enhanced parameterized synthesized subject spectral envelope.
- an overemphasis-scale factor may be determined, and may be applied to the synthesized subject spectral envelope so as to generate an overenhanced synthesized subject spectral envelope.
- the overenhanced synthesized subject spectral envelope may be generated in any suitable manner.
- high-pass transformation matrix B generally operates in equation 3 to reduce the effect of the enhancement vector at frequencies less than 2 kHz. This is advantageous as relatively lower frequencies generally do not suffer as severely from oversmoothing as do higher frequencies, and so the overemphasis of such relatively lower frequencies would be unnecessary and/or undesirable. In other words, high-pass transformation matrix B minimizes an unnatural over-emphasis of low-frequency spectral regions.
- C is an L-by-K matrix that is made up of L uniform samples of the log-spectral-envelope (of the synthesized subject spectral envelope) in the interval [0.0, ⁇ ]
- C# is the pseudo-inverse of C
- ⁇ is a diagonal L-by-L weighting matrix that is constructed so as to gradually suppress frequencies below approximately 2 kHz.
- FIG. 8 shows an example embodiment of the frequency weighting filter that is realized via the diagonal frequency weighting matrix ⁇ . It should be understood that the example shown in FIG. 8 is provided for purposes of example and explanation, and that the high-pass transformation matrix may have other effects as well.
- the effects of the emphasis factor and overemphasis factor on the synthesized subject spectral envelope will generally be attenuated at frequencies less than approximately 2 kHz and restored back again as frequency approaches zero. Indeed, as shown, as frequency approaches a fixed reference point, e.g. approximately 1 kHz, the attenuation of the emphasis factor and overemphasis factor becomes greater and greater such that the factors have relatively little (if not no) perceivable impact around that frequency.
- the attenuation of the emphasis factor and overemphasis factor becomes less and less such that the factors have approximately their full impact on frequencies close to and greater than approximately 2 kHz.
- the computing device may determine a filtered enhanced synthesized subject spectral envelope by passing the enhanced synthesized subject spectral envelope through a high-pass filter that suppresses frequencies below two kilohertz.
- the computing device generates a synthetic speech signal including the enhanced synthesized subject spectral envelope.
- the synthetic speech signal may include successive synthetic subject spectral envelopes generated by TTS synthesis system 400 , concatenated together so as to create a synthesized utterance based on a portion of subject text.
- the synthetic speech signal in the event that a scale factor is applied to respective synthesized subject spectral envelopes, the synthetic speech signal may include successive enhanced synthesized subject spectral envelopes.
- the synthetic speech signal in the event that an overemphasis-scale factor is applied to respective synthesized subject spectral envelopes, the synthetic speech signal may include successive overenhanced synthesized subject spectral envelopes.
- Synthesized speech component 416 may include any suitable combination of hardware and/or software required to carry out the functions described herein.
- synthesized speech component 414 may include hardware and/or software necessary to carry out any suitable audio-signal generation technique including for example, various vocoding techniques, to generate a speech waveform from the respective enhanced synthesized subject spectral envelopes and/or overenhanced synthesized subject spectral envelopes.
- each step, block, and/or communication may represent a processing of information and/or a transmission of information in accordance with example embodiments.
- Alternative embodiments are included within the scope of these example embodiments.
- functions described as steps, blocks, transmissions, communications, requests, responses, and/or messages may be executed out of order from that shown or discussed, including in substantially concurrent or in reverse order, depending on the functionality involved.
- more or fewer steps, blocks, and/or functions may be used with any of the message flow diagrams, scenarios, and flow charts discussed herein, and these message flow diagrams, scenarios, and flow charts may be combined with one another, in part or in whole.
- a step or block that represents a processing of information may correspond to circuitry that can be configured to perform the specific logical functions of a herein-described method or technique.
- a step or block that represents a processing of information may correspond to a module, a segment, or a portion of program code (including related data).
- the program code may include one or more instructions executable by a processor for implementing specific logical functions or actions in the method or technique.
- the program code and/or related data may be stored on any type of computer-readable medium, such as a storage device, including a disk drive, a hard drive, or other storage media.
- the computer-readable medium may also include non-transitory computer-readable media such as computer-readable media that stores data for short periods of time like register memory, processor cache, and/or random access memory (RAM).
- the computer-readable media may also include non-transitory computer-readable media that stores program code and/or data for longer periods of time, such as secondary or persistent long term storage, like read only memory (ROM), optical or magnetic disks, and/or compact-disc read only memory (CD-ROM), for example.
- the computer-readable media may also be any other volatile or non-volatile storage systems.
- a computer-readable medium may be considered a computer-readable storage medium, for example, or a tangible storage device.
- a step or block that represents one or more information transmissions may correspond to information transmissions between software and/or hardware modules in the same physical device. However, other information transmissions may be between software modules and/or hardware modules in different physical devices.
Abstract
Description
{circumflex over (ρ)}=ρλ [equation 1]
{circumflex over (c)}(k)=c(k)ρk , k=1:K [equation 2]
B=C#ΛC [equation 4]
Claims (22)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/705,710 US9159329B1 (en) | 2012-12-05 | 2012-12-05 | Statistical post-filtering for hidden Markov modeling (HMM)-based speech synthesis |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/705,710 US9159329B1 (en) | 2012-12-05 | 2012-12-05 | Statistical post-filtering for hidden Markov modeling (HMM)-based speech synthesis |
Publications (1)
Publication Number | Publication Date |
---|---|
US9159329B1 true US9159329B1 (en) | 2015-10-13 |
Family
ID=54252746
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/705,710 Expired - Fee Related US9159329B1 (en) | 2012-12-05 | 2012-12-05 | Statistical post-filtering for hidden Markov modeling (HMM)-based speech synthesis |
Country Status (1)
Country | Link |
---|---|
US (1) | US9159329B1 (en) |
Cited By (5)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN109952609A (en) * | 2016-11-07 | 2019-06-28 | 雅马哈株式会社 | Speech synthesizing method |
US10510358B1 (en) * | 2017-09-29 | 2019-12-17 | Amazon Technologies, Inc. | Resolution enhancement of speech signals for speech synthesis |
CN111256908A (en) * | 2020-01-15 | 2020-06-09 | 天津大学 | Online denoising method for liquid pressure sensor system based on hidden Markov model |
US11295721B2 (en) * | 2019-11-15 | 2022-04-05 | Electronic Arts Inc. | Generating expressive speech audio from text data |
US11646044B2 (en) * | 2018-03-09 | 2023-05-09 | Yamaha Corporation | Sound processing method, sound processing apparatus, and recording medium |
Citations (5)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5864809A (en) * | 1994-10-28 | 1999-01-26 | Mitsubishi Denki Kabushiki Kaisha | Modification of sub-phoneme speech spectral models for lombard speech recognition |
US6836761B1 (en) * | 1999-10-21 | 2004-12-28 | Yamaha Corporation | Voice converter for assimilation by frame synthesis with temporal alignment |
US20090006096A1 (en) * | 2007-06-27 | 2009-01-01 | Microsoft Corporation | Voice persona service for embedding text-to-speech features into software programs |
US20090048841A1 (en) * | 2007-08-14 | 2009-02-19 | Nuance Communications, Inc. | Synthesis by Generation and Concatenation of Multi-Form Segments |
US20120323569A1 (en) * | 2011-06-20 | 2012-12-20 | Kabushiki Kaisha Toshiba | Speech processing apparatus, a speech processing method, and a filter produced by the method |
-
2012
- 2012-12-05 US US13/705,710 patent/US9159329B1/en not_active Expired - Fee Related
Patent Citations (5)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5864809A (en) * | 1994-10-28 | 1999-01-26 | Mitsubishi Denki Kabushiki Kaisha | Modification of sub-phoneme speech spectral models for lombard speech recognition |
US6836761B1 (en) * | 1999-10-21 | 2004-12-28 | Yamaha Corporation | Voice converter for assimilation by frame synthesis with temporal alignment |
US20090006096A1 (en) * | 2007-06-27 | 2009-01-01 | Microsoft Corporation | Voice persona service for embedding text-to-speech features into software programs |
US20090048841A1 (en) * | 2007-08-14 | 2009-02-19 | Nuance Communications, Inc. | Synthesis by Generation and Concatenation of Multi-Form Segments |
US20120323569A1 (en) * | 2011-06-20 | 2012-12-20 | Kabushiki Kaisha Toshiba | Speech processing apparatus, a speech processing method, and a filter produced by the method |
Cited By (7)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN109952609A (en) * | 2016-11-07 | 2019-06-28 | 雅马哈株式会社 | Speech synthesizing method |
US11410637B2 (en) * | 2016-11-07 | 2022-08-09 | Yamaha Corporation | Voice synthesis method, voice synthesis device, and storage medium |
CN109952609B (en) * | 2016-11-07 | 2023-08-15 | 雅马哈株式会社 | Sound synthesizing method |
US10510358B1 (en) * | 2017-09-29 | 2019-12-17 | Amazon Technologies, Inc. | Resolution enhancement of speech signals for speech synthesis |
US11646044B2 (en) * | 2018-03-09 | 2023-05-09 | Yamaha Corporation | Sound processing method, sound processing apparatus, and recording medium |
US11295721B2 (en) * | 2019-11-15 | 2022-04-05 | Electronic Arts Inc. | Generating expressive speech audio from text data |
CN111256908A (en) * | 2020-01-15 | 2020-06-09 | 天津大学 | Online denoising method for liquid pressure sensor system based on hidden Markov model |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
CN112289342B (en) | Generating audio using neural networks | |
RU2698153C1 (en) | Adaptive audio enhancement for multichannel speech recognition | |
JP2021086154A (en) | Method, device, apparatus, and computer-readable storage medium for speech recognition | |
US9082401B1 (en) | Text-to-speech synthesis | |
US8805684B1 (en) | Distributed speaker adaptation | |
US8700393B2 (en) | Multi-stage speaker adaptation | |
US9159329B1 (en) | Statistical post-filtering for hidden Markov modeling (HMM)-based speech synthesis | |
CN105976812A (en) | Voice identification method and equipment thereof | |
US8965763B1 (en) | Discriminative language modeling for automatic speech recognition with a weak acoustic model and distributed training | |
CN108492818B (en) | Text-to-speech conversion method and device and computer equipment | |
US11322135B2 (en) | Generating acoustic sequences via neural networks using combined prosody info | |
KR102615154B1 (en) | Electronic apparatus and method for controlling thereof | |
US9484044B1 (en) | Voice enhancement and/or speech features extraction on noisy audio signals using successively refined transforms | |
JP2023541879A (en) | Speech recognition using data analysis and dilation of speech content from isolated audio inputs | |
CN114121029A (en) | Training method and device of speech enhancement model and speech enhancement method and device | |
JP2022549352A (en) | training a neural network to generate structured embeddings | |
US11776563B2 (en) | Textual echo cancellation | |
KR20200092501A (en) | Method for generating synthesized speech signal, neural vocoder, and training method thereof | |
WO2021104189A1 (en) | Method, apparatus, and device for generating high-sampling rate speech waveform, and storage medium | |
JP2022133447A (en) | Speech processing method and device, electronic apparatus, and storage medium | |
JP2023540479A (en) | Augmenting speech recognition and interlaced audio input using data analysis | |
EP4172985A1 (en) | Speech synthesis and speech recognition | |
CN113241088A (en) | Training method and device of voice enhancement model and voice enhancement method and device | |
KR102621842B1 (en) | Method and system for non-autoregressive speech synthesis | |
CN113707163B (en) | Speech processing method and device and model training method and device |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:AGIOMYRGIANNAKIS, IOANNIS;EYBEN, FLORIAN ALEXANDER;SIGNING DATES FROM 20121126 TO 20121127;REEL/FRAME:029412/0201 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044334/0466Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 4 |
|
FEPP | Fee payment procedure |
Free format text: MAINTENANCE FEE REMINDER MAILED (ORIGINAL EVENT CODE: REM.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
LAPS | Lapse for failure to pay maintenance fees |
Free format text: PATENT EXPIRED FOR FAILURE TO PAY MAINTENANCE FEES (ORIGINAL EVENT CODE: EXP.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
STCH | Information on status: patent discontinuation |
Free format text: PATENT EXPIRED DUE TO NONPAYMENT OF MAINTENANCE FEES UNDER 37 CFR 1.362 |
|
FP | Lapsed due to failure to pay maintenance fee |
Effective date: 20231013 |
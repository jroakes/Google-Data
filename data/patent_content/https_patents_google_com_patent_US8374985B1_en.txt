US8374985B1 - Presenting a diversity of recommendations - Google Patents
Presenting a diversity of recommendations Download PDFInfo
- Publication number
- US8374985B1 US8374985B1 US13/300,987 US201113300987A US8374985B1 US 8374985 B1 US8374985 B1 US 8374985B1 US 201113300987 A US201113300987 A US 201113300987A US 8374985 B1 US8374985 B1 US 8374985B1
- Authority
- US
- United States
- Prior art keywords
- result
- data objects
- user
- results
- identifying
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Fee Related
Links
- 238000000034 method Methods 0.000 claims abstract description 61
- 230000007423 decrease Effects 0.000 claims abstract description 7
- 238000002955 isolation Methods 0.000 claims description 11
- 238000012549 training Methods 0.000 claims description 10
- 238000012545 processing Methods 0.000 claims description 8
- 238000004590 computer program Methods 0.000 abstract description 10
- 230000008569 process Effects 0.000 description 31
- 238000004364 calculation method Methods 0.000 description 13
- 238000010586 diagram Methods 0.000 description 8
- 230000000694 effects Effects 0.000 description 8
- 238000004458 analytical method Methods 0.000 description 4
- 230000008901 benefit Effects 0.000 description 4
- 238000004422 calculation algorithm Methods 0.000 description 3
- 230000003993 interaction Effects 0.000 description 3
- 238000005259 measurement Methods 0.000 description 3
- 230000000644 propagated effect Effects 0.000 description 3
- 230000003252 repetitive effect Effects 0.000 description 3
- 235000014510 cooky Nutrition 0.000 description 2
- 230000003247 decreasing effect Effects 0.000 description 2
- 230000001419 dependent effect Effects 0.000 description 2
- 230000003287 optical effect Effects 0.000 description 2
- 238000013515 script Methods 0.000 description 2
- 238000000926 separation method Methods 0.000 description 2
- 238000013459 approach Methods 0.000 description 1
- 230000006399 behavior Effects 0.000 description 1
- 230000005540 biological transmission Effects 0.000 description 1
- 238000004891 communication Methods 0.000 description 1
- 230000001143 conditioned effect Effects 0.000 description 1
- 238000005516 engineering process Methods 0.000 description 1
- 230000004424 eye movement Effects 0.000 description 1
- 230000006870 function Effects 0.000 description 1
- 239000004973 liquid crystal related substance Substances 0.000 description 1
- 238000010801 machine learning Methods 0.000 description 1
- 230000004044 response Effects 0.000 description 1
- 239000004065 semiconductor Substances 0.000 description 1
- 230000001953 sensory effect Effects 0.000 description 1
- 239000000758 substrate Substances 0.000 description 1
- 238000012546 transfer Methods 0.000 description 1
- 230000000007 visual effect Effects 0.000 description 1
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q30/00—Commerce
- G06Q30/06—Buying, selling or leasing transactions
- G06Q30/0601—Electronic shopping [e-shopping]
- G06Q30/0631—Item recommendations
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/951—Indexing; Web crawling techniques
Definitions
- This specification relates to identifying particular data objects for recommendation.
- a context can be, for example, a state of a collection of user data that evidences user interests through records of past activity.
- a news web site can recommend news articles based on user interests evidenced by past Internet browsing activity, or as another example, a shopping web site can recommend products to a user based on product pages that a user has previously chosen to view.
- the set of data from which a given system identifies results includes two or more highly similar data objects. That is, the result set includes multiple results that are so similar that their inclusion in the result set might be considered by a user to be redundant. This often follows from the identification methods used to select results. If a first data object identified from a set of a candidate data scores highly according to the identification method used, then a similar data object is likely to score highly as well, leading to both being included in the set of results. In some cases, where a data set has many similar data objects, similar result listings might make up a majority, or an entire set of results.
- repetitive similar listings can be desirable. In other cases, however, such repetition obscures more dissimilar results that might be of interest to the user; or where the number of results is limited, the repetitive results may push any dissimilar results out of the result set completely.
- This specification describes technologies relating to identifying a diversity of recommendation results.
- one aspect of the subject matter described in this specification can be embodied in methods that include the actions of identifying K results from among a set of data objects, K being an integer greater than 1, each of the data objects in the set of data objects having a marginal interest-likelihood score, where identifying K results comprises identifying, from among the objects in the set of objects, a first result and first remaining data objects, the first remaining data objects being the set of data objects excluding the first result; then identifying from among the first remaining data objects a second result having a maximum conditional interest-likelihood score given that the first result is not selected; and presenting the K results.
- R K-1 a maximum value, where each R i is a distinct result in the set of data objects, I(select R 1 ) is a calculated interest-likelihood score representing a likelihood that a user will select R 1 from a list of presented results, I(select R 2 given no selection of R 1 ) is a calculated interest-likelihood score representing a likelihood that the user will select R 2 given that the user does not select R 1 , and I(select R K given no selection of any of R 1 . . . R k-1 ) is a calculated interest-likelihood score representing a likelihood that the user will select R K given that the user has not selected any of R 1 through R K-1 ; and presenting the K results.
- the invention can provide a diverse result set which increases the likelihood that at least one of the results in the set will be of interest to a user.
- FIG. 1 is a flow chart of an exemplary process for providing a diverse result set.
- FIG. 2 is a block diagram of an exemplary system implementing a process for providing a diverse result set.
- FIG. 3 is a block diagram of an alternative exemplary system implementing a process for providing a diverse result set.
- FIG. 4 is a block diagram of an exemplary system implementing a process for providing a diverse result set using a covisitation analysis.
- FIG. 5 illustrates an example Internet news site homepage having a recommended articles section.
- FIG. 6 illustrates an example Internet news page with a list of recommended articles.
- FIG. 7 is a block diagram of an exemplary news article recommendation system implementing a process for providing a diverse result set using a covisitation analysis.
- FIG. 1 is a flow chart of an exemplary process for providing a diverse result set.
- the process operates in reference to a set of data.
- the data set is made up of a number of data objects.
- the data objects in a data set can be of one or more types.
- data objects can be files, database records, web pages, text documents, multimedia documents, or any other separately-addressable computer-storable form of information.
- the data objects in the data set can be associated with probabilities indicating a likelihood that the data objects would be of interest to a user.
- user selections e.g., user clicks in user interfaces at user interface devices
- User selection information for a user or a group of users can be collected and analyzed to determine user interest.
- the described methods are applicable to other indications of user interest, collected survey results, for example.
- selection modes can include user input such as clicks and key presses, touch screen inputs, voice commands, tracked eye movements, and the like.
- the data objects in the data set can each have an interest-likelihood score indicating a likelihood that the data objects would be selected by a user if the user is presented with the opportunity to do so.
- An interest-likelihood score is a score that is indicative of the likelihood of a user acting on an interest in a corresponding data object, e.g., a user selecting the corresponding data object.
- the interest-likelihood score is an empirically determined probability of user interest in a corresponding data object.
- Each data object can have an interest-likelihood score that, for example, indicates the probability that a user will select a given data object if a result representative of that data object is presented to the user.
- the interest-likelihood score can represent the likelihood that a user will click on a result listing that references the given data object if the result listing is presented to the user in a list. For example, where the result listing shows a URL pointing to a data object that is the web page, a user click could cause a web page to be displayed.
- Interest-likelihood scores are conventionally calculated by Internet recommendation engines, such as, for example, search engines, and insofar as it affects the process, any convenient form of calculation can be used.
- the interest-likelihood scores can depend on the information the recommendation engine has about the user.
- the interest-likelihood scores can be user independent.
- the scores are calculated with reference to a given context.
- an Internet search engine is a type of a recommendation engine where the context includes a search request, and results are identified from the data objects based on a calculated probability that a given data object satisfies the search request.
- Interest-likelihood scores of this kind are also calculated by other types of recommendation engines in generating a list of recommended data objects based on known information.
- a recommendation engine can generate a list of recommended news articles for a user based on known user interests.
- the methods described below can be used with all types of recommendation engines, including, for example, search engines.
- a system implementing the process 100 calculates the probabilities of user selection across a set of data ( 104 ).
- the process identifies a first result having a maximum probability of being selected ( 106 ). If no additional results are to be identified ( 108 ), then the process ends ( 110 ). If additional results are required or requested, then a conditional probability is calculated ( 112 ). A result having a highest probability of being selected according to this calculation is identified ( 114 ).
- the process continues to calculate conditional probabilities if additional results are to be identified ( 108 ), and ends when no more additional results are to be identified ( 110 ).
- conditional probability that is calculated is a conditional probability that a result will be selected, e.g., clicked by a user as a search result, given that none of the previously-identified results has been selected, e.g., clicked by the user as a search result.
- a surrogate for this conditional probability is calculated, as will be described below.
- the process can be used to provide diversity in a result set presented to a user.
- a list of results identified in this manner tends to maximize the likelihood that at least one of the results will be of interest to a user, and, for example, be selected by a user to whom they are presented.
- this identification method can lead to a set of results that is repetitive and perhaps redundant. Also, where the probability calculation used does not accurately predict a user's interest, this method risks returning a result set having no results which are of interest to the user and therefore none are selected.
- P TOTAL P (select R 1 )+ P (select R 2 given no selection of R 1 )+ . . . + P (select R K given no selection of any of R 1 . . . R K-1 )
- Identifying results in this manner helps to ensure a set of diverse results.
- the process of FIG. 1 can be implemented in a computer system which provides result listings.
- the process can be used in returning search results to a user of an Internet search engine.
- the process can also be used in a recommendation system that makes recommendations based on, for example, past user activity.
- FIG. 2 is a block diagram of a system 200 implementing a process for providing a diverse result set.
- the diverse results generator 202 implements the process of FIG. 1 and receives input from the data objects element 204 , the object ranking element 206 , and the relatedness element 208 . As described below, inputs from these elements can be used to calculate the probability that a user will select a given result.
- the data objects element 204 can be a database storing the data objects from which a result set will be identified. Alternatively, the data objects element 204 can be a database holding descriptions of the data objects, an index of data objects, and/or an index of data object descriptions.
- the object ranking element 206 can provide rankings of the data objects.
- the relatedness element 208 can provide relatedness scores that indicate a level of relatedness between one data object and one or more other data objects.
- the process of providing a diverse result set is not dependent on the specific ranking technique and relatedness scoring technique.
- Various techniques of ranking and scoring can be accommodated though the use of bias values.
- Relatedness may be defined in a domain dependent manner. For example, in the domain of web pages, considering a first web page W 1 , a second a web page W 2 may be considered directly related to W 1 if W 1 links to W 2 , and W 2 may be considered indirectly related to W 1 if W 2 links to a third web page W 3 which in turn links to W 1 .
- W 1 can also be related to W 2 if the two pages include, for example, similar content. Similarity is a more specific form of relatedness.
- the relatedness element 208 provides a content similarity score.
- the diverse results generator 202 in operation, identifies K results where the probability that any result R K will be selected by a user is calculated according to the following formula: P ( R K
- Not( R 1 . . . R K-1 )) ⁇ e ⁇ 0 ⁇ 1 ⁇ (R K ) ⁇ 2 Related(R 1 . . . R K-1 , R K ) (1)
- P(R K Not (R 1 . . . R K-1 )) is the conditional probability that a user will select R K given that the user did not select any of R 1 through R K-1 .
- ⁇ is a value learned from training the system; and ⁇ 0 is a (non-negative) learned bias value, as are ⁇ 1 and ⁇ 2 .
- ⁇ (R K ) is a measure of the inverse likelihood of a user selecting R K considered in isolation. That is:
- ⁇ ⁇ ( R K ) 1 ⁇ ⁇ ( R K )
- ⁇ (R K ) is a measure of the likelihood of a user selecting R K considered in isolation (i.e., without regard to previously identified results). This, ⁇ (R K ), is R K 's marginal selection probability.
- Related(R 1 . . . R K-1 , R K ) is a measure of the relatedness between R K and R 1 through R K-1 . It can be seen that, according to formula (1), above, as the relatedness between R K and R 1 though R K-1 increases, the calculated conditional probability that a user will select the result R K decreases.
- the bias values ⁇ 0 , ⁇ 1 , and ⁇ 2 can be selected or learned in order to appropriately adjust the effect of the exponent terms on the calculation.
- the ⁇ and ⁇ parameters can be learned by using any conventional machine learning technique, e.g., an expectation-maximization algorithm, regression algorithm, etc., to a log of user click data collected from user interactions with presentations of data objects including R 1 . . . R K .
- FIG. 3 is a block diagram of another exemplary system 300 implementing a process for providing a diverse result set.
- the data objects are documents available on the Internet, e.g., web pages.
- a similarity element 309 a link element 310 , and a vector element 312 are included to adjust the probability calculation based on whether the web documents are similar, link to one another, and are linked through other web documents, respectively.
- the diverse results generator 302 can identify K results according to the process of FIG. 1 where the probability that any result R K will be selected by a user can be calculated according to the following.
- Not( R 1 . . . R K-1 )) ⁇ e ⁇ 0 ⁇ 1 ⁇ (R K ) ⁇ 2 S(R 1 . . . R K-1 , R K ) ⁇ 3 Link(R 1 . . . R K-1 , R K ) ⁇ 4 Vector(R 1 . . . R K-1 , R K )
- the “S”, “Link”, and “Vector” exponents of e penalize a result for different forms of relatedness between R K and the results R 1 . . . R K-1 .
- These exponents penalize a result that is similar to results R 1 . . . R K-1 , links directly to any of the results R 1 . . . R K-1 , is linked directly to by any of the results R 1 . . . R K-1 , or is linked through other documents to any of the results R 1 . . . R K-1 .
- R K-1 , R K ) can be used to decrease the calculated probability of a user selecting R K where ⁇ 2 is a learned bias value and S(R 1 . . . R K-1 , R K ) is a measure of the similarity between R K and R 1 through R K-1 .
- the term “ ⁇ 3 Link(R 1 . . . R K-1 , R K )” can be used as an additional exponent to decrease the calculated probability of a user selecting R K where ⁇ 3 is a learned bias value and Link(R 1 . . . R K-1 , R K ) is a value based on whether or not R K directly links to or is directly linked to by any of R 1 . . . R K-1 .
- the additional exponent “ ⁇ 4 Vector(R 1 . . . R K-1 , R K )” can be used to affect the probability calculation where ⁇ 4 is a learned bias value and Vector(R 1 -R K-1 , R K ) is a value based on whether or not R K and any of R 1 . . . R K-1 are linked (indirectly) to each other through other web pages. The value can depend on the number of pages (if any) between R K and any of R 1 though R K-1 . Though shown together in the above example, exponents for similarity, direct linking, and vectored linking can be used separately.
- Analyzing each of the data objects to compute relatedness measurements based on content can be computationally expensive.
- similarity between results can be measured using records of past user activity. For example, a click history of a user and/or the click histories of many users can be used (e.g. a covisitation analysis of records of past user activity can be used to generate a similarity score).
- a click history of a user and/or the click histories of many users can be used (e.g. a covisitation analysis of records of past user activity can be used to generate a similarity score).
- Such an approach is content agnostic, is less computationally intensive, and has the added advantage of users making similarity determinations, at least implicitly. Having users make similarity determinations is advantageous because it is the behavior of the users that the probability calculation is attempting to model.
- FIG. 4 is a block diagram of an exemplary system implementing a process for providing a diverse result set using a covisitation measurement.
- the diverse results generator 402 can receive a covisitation score from covisitation element 404 .
- Covisitation measurements can be computed in a number of different ways using user click (selection) histories of, for example, user activity performed using an Internet browser. Covisitation can be said to occur, for example, where a click history indicates that a user has selected both R 1 and R 2 (covisitation measured within a user boundary). Covisitation can alternatively be defined as occurring where a click history indicates that a user selected both R i and R 2 during a certain period of time (covisitation measured within a user boundary and a time boundary). Covisitation can alternatively be defined as occurring where a click history indicates that a user selected both R 1 and R 2 during a single session (covisitation measured within a user boundary and a session boundary).
- input from the covisitation element 404 is used to determine a similarity score between R K and any previously identified results. For brevity, this score will be referred to as a covisitation score.
- the probability of a user selecting R K becomes: P ( R K
- Not( R 1 . . . R K-1 )) ⁇ e ⁇ 0 ⁇ 1 ⁇ (R K ) ⁇ 2 Cv(R 1 . . . R K-1 , R K ) where Cv is the covisitation score between R K and any previously identified results.
- the process for providing diverse results is used in an Internet news article recommendation system.
- FIG. 5 illustrates an example Internet news site homepage 500 having a recommended articles section.
- Links section 502 includes links to pages having additional articles in the listed groupings.
- the welcome message at the top of the homepage indicates that a user Jane Doe is logged into or otherwise known by the site (e.g., through the use of browser cookies and the like).
- the homepage also includes a top stories section 504 including titles and snippets for two news articles, a recommendation section 506 including titles and snippets for two news articles, and additional sections 508 which have titles and snippets for articles in various topic groupings.
- the two articles represented by the titles and snippets in the recommendation section can be identified from a set of data objects, which in this example are a pool of candidate articles, by a process for identifying diverse results.
- There are two recommended articles shown, i.e., K 2 for the calculations described above.
- Clicking on either of the “Recommended” links can, for example, cause the browser to display a page like the one illustrated in FIG. 6 .
- FIG. 6 illustrates an example Internet news page 600 with a list of recommended articles.
- the recommended section 602 includes a list of article titles and snippets.
- Ten articles are represented in section 602 .
- the ten articles were identified from a pool of candidate articles by a process for identifying diverse results.
- the data set (the pool of candidate articles) is subject to frequent changes and updates.
- new articles are frequently added, and old articles may become stale and be dropped from the pool of candidates.
- the news recommendation system can pick a set of K articles according to: P ( R K
- Not( R 1 . . . R K-1 )) ⁇ e ⁇ 0 ⁇ 1 ⁇ (R K ) ⁇ 2 Cv(R 1 . . . R K-1 , R K ),
- covisitation can be defined as the visitation of two articles by the same user within a defined period of time (covisitation measured within a user boundary and a time boundary).
- FIG. 7 is a block diagram of an exemplary news article recommendation system implementing a process for providing a diverse result set using a covisitation analysis.
- the diverse results generator 702 receives input from the candidate articles element 704 , the article rankings element 706 , and the covisitation element 708 .
- Click histories element 712 provides input to the article rankings element 706 and the covisitation element 708 .
- users can be clustered based on areas of interest for purposes of article ranking. For example, users interested in world politics can be clustered. Clicks on articles made by members of the cluster can then affect the ranking of those articles for other members in the cluster.
- User clustering can be performed according to known clustering techniques.
- the article ranking element 706 provides the ⁇ (R K ) term in the calculation.
- the current user is known (being logged in, or from a cookie, on the web site, and this information is passed to the diverse results generator 702 and/or the article ranking element 706 ).
- the covisitation element 708 provides the Cv(R 1 . . . R K-1 , R K ) term in the probability calculation.
- the covisitation score of an article R K is based on the number of users (having a click history in the click histories element 712 ) that have clicked on both the article R K and any of the previously identified results R 1 through R K-1 within a certain time interval. For example, covisitation can be said to occur between R 1 and R K where any user having click history information in the click histories element 712 clicks on R K and also clicks on R 1 within the next three hours.
- the number of instances of covisitation between articles can be tracked by the covisitation element and used to calculate the covisitation score.
- the covisitation score of an article R K is based on a set of users (having click history in the click histories element 712 ) that have clicked on both the article R K and any of the previously identified results R 1 through R K-1 within a certain time interval. For example, a count corresponding to a user in the set can be weighted according to a property of that user, e.g., that the user has shared common interests with the user for which recommendations are being made.
- a first result article is identified from the candidate articles by the diverse results generator 702 .
- the diverse results generator 702 iterates over the candidate articles to determine the article having a maximum probability of being selected. Since no previous articles have been identified, the value of Cv in this case is zero and the term disappears from the probability calculation.
- the diverse results generator will iterate over the candidate articles to identify a second article having a maximum probability of being selected. In this case, however, probability calculations will be affected by whether or not the articles have been covisited with the first identified article. If covisitation exists, then the probability value for the candidate article is decreased. This can tend to cause the second identified result to be diverse from the first identified result.
- the diverse results generator 702 will continue to identify additional results based on the number of results requested (K). For the web page shown in FIG. 5 , two articles are identified in this manner. For the web page shown in FIG. 6 , ten articles are identified in this manner.
- Embodiments of the subject matter and the functional operations described in this specification can be implemented in digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them.
- Embodiments of the subject matter described in this specification can be implemented as one or more computer program products, i.e., one or more modules of computer program instructions encoded on a tangible program carrier for execution by, or to control the operation of, data processing apparatus.
- the tangible program carrier can be a propagated signal or a computer-readable medium.
- the propagated signal is an artificially generated signal, e.g., a machine-generated electrical, optical, or electromagnetic signal, that is generated to encode information for transmission to suitable receiver apparatus for execution by a computer.
- the computer-readable medium can be a machine-readable storage device, a machine-readable storage substrate, a memory device, a composition of matter effecting a machine-readable propagated signal, or a combination of one or more of them.
- data processing apparatus encompasses all apparatus, devices, and machines for processing data, including by way of example a programmable processor, a computer, or multiple processors or computers.
- the apparatus can include, in addition to hardware, code that creates an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, or a combination of one or more of them.
- a computer program (also known as a program, software, software application, script, or code) can be written in any form of programming language, including compiled or interpreted languages, or declarative or procedural languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, or other unit suitable for use in a computing environment.
- a computer program does not necessarily correspond to a file in a file system.
- a program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub-programs, or portions of code).
- a computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
- the processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform functions by operating on input data and generating output.
- the processes and logic flows can also be performed by, and apparatus can also be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).
- processors suitable for the execution of a computer program include, by way of example, both general and special purpose microprocessors, and any one or more processors of any kind of digital computer.
- a processor will receive instructions and data from a read-only memory or a random access memory or both.
- the essential elements of a computer are a processor for performing instructions and one or more memory devices for storing instructions and data.
- a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks.
- mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks.
- a computer need not have such devices.
- a computer can be embedded in another device, e.g., a mobile telephone, a personal digital assistant (PDA), a mobile audio or video player, a game console, a Global Positioning System (GPS) receiver, to name just a few.
- PDA personal digital assistant
- GPS Global Positioning System
- Computer-readable media suitable for storing computer program instructions and data include all forms of non-volatile memory, media and memory devices, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks; magneto-optical disks; and CD-ROM and DVD-ROM disks.
- semiconductor memory devices e.g., EPROM, EEPROM, and flash memory devices
- magnetic disks e.g., internal hard disks or removable disks
- magneto-optical disks e.g., CD-ROM and DVD-ROM disks.
- the processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
- embodiments of the subject matter described in this specification can be implemented on a computer having a display device, e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor, for displaying information to the user and a keyboard and a pointing device, e.g., a mouse or a trackball, by which the user can provide input to the computer.
- a display device e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor
- keyboard and a pointing device e.g., a mouse or a trackball
- Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form, including acoustic, speech, or tactile input.
- computers can interact with a user by sending documents to and receiving documents from a device that is used by the
Abstract
Description
I TOTAL =I(select R 1)+I(select R 2 given no selection of R 1)+ . . . +I(select R K given no selection of any of R 1 . . . R K-1)
a maximum value, where each Ri is a distinct result in the set of data objects, I(select R1) is a calculated interest-likelihood score representing a likelihood that a user will select R1 from a list of presented results, I(select R2 given no selection of R1) is a calculated interest-likelihood score representing a likelihood that the user will select R2 given that the user does not select R1, and I(select RK given no selection of any of R1 . . . Rk-1) is a calculated interest-likelihood score representing a likelihood that the user will select RK given that the user has not selected any of R1 through RK-1; and presenting the K results.
P TOTAL =P(select R 1)+P(select R 2)+ . . . +P(select R K)
where “P(select Ri)” is the marginal probability of Ri being selected, i.e., the probability of Ri being selected regardless of any other selection event.
P TOTAL =P(select R 1)+P(select R 2 given no selection of R 1)+ . . . +P(select R K given no selection of any of R 1 . . . R K-1)
P TOTAL =P(interest in R 1)+P(interest in R 2 given no interest in R 1)+ . . . +P(interest in R K given no interest in any of R 1 . . . R K-1)
and more generally as:
I TOTAL =I(interest in R 1)+I(interest in R 2 given no interest in R 1)+ . . . +I(interest in R K given no interest in any of R 1 . . . R K-1)
where “I” is an interest-likelihood score. Interest-likelihood scores “I” can be used in place of probabilities “P” in the probability examples described in this specification.
P(R K|Not(R 1 . . . R K-1))=αe −β
In this formula, P(RK Not (R1 . . . RK-1)) is the conditional probability that a user will select RK given that the user did not select any of R1 through RK-1. α is a value learned from training the system; and β0 is a (non-negative) learned bias value, as are β1 and β2. δ(RK) is a measure of the inverse likelihood of a user selecting RK considered in isolation. That is:
where γ(RK) is a measure of the likelihood of a user selecting RK considered in isolation (i.e., without regard to previously identified results). This, γ(RK), is RK's marginal selection probability. Related(R1 . . . RK-1, RK) is a measure of the relatedness between RK and R1 through RK-1. It can be seen that, according to formula (1), above, as the relatedness between RK and R1 though RK-1 increases, the calculated conditional probability that a user will select the result RK decreases. The bias values β0, β1, and β2 can be selected or learned in order to appropriately adjust the effect of the exponent terms on the calculation. The α and β parameters can be learned by using any conventional machine learning technique, e.g., an expectation-maximization algorithm, regression algorithm, etc., to a log of user click data collected from user interactions with presentations of data objects including R1 . . . RK.
P(R 1)=αe −β
This represents the marginal selection probability that R1 will be selected as weighted for use with the formula where K>1. It is not conditioned on any previously identified selection results since none have been identified prior to R1 being identified. Values for later results (R2 . . . ) can be penalized based one or more measures of relatedness (e.g., similarity and linking) between those results and previous results.
P(R K|Not(R 1 . . . R K-1))=αe −β
P(R K|Not(R 1 . . . R K-1))=αe −β
where Cv is the covisitation score between RK and any previously identified results.
P(R K|Not(R 1 . . . R K-1))=αe −β
Generally it is desirable to present results in an order of decreasing likelihood of user interest starting with the result most likely to be of interest to the user, but it is not a requirement that identified results be presented to a user in the order identified or in any particular order. For such a system, covisitation can be defined as the visitation of two articles by the same user within a defined period of time (covisitation measured within a user boundary and a time boundary).
Claims (36)
I(R K|Not(R 1 . . . R K-1))=αe −β
I(R K|Not(R 1 . . . R K-1))=αe −β
I(R K|Not(R 1 . . . R K-1))=αe −β
I(R K|Not(R 1 . . . R K-1))=αe −β
I(R K|Not(R 1 . . . R K-1))=αe −β
I(R K|Not(R 1 . . . R K-1))=αe −β
I(R K|Not(R 1 . . . R K-1))=αe −β
I(R K|Not(R 1 . . . R K-1))=αe −β
I(R K|Not(R 1 . . . R K-1))=αe −β
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/300,987 US8374985B1 (en) | 2007-02-19 | 2011-11-21 | Presenting a diversity of recommendations |
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US89060607P | 2007-02-19 | 2007-02-19 | |
US12/033,540 US8065254B1 (en) | 2007-02-19 | 2008-02-19 | Presenting a diversity of recommendations |
US13/300,987 US8374985B1 (en) | 2007-02-19 | 2011-11-21 | Presenting a diversity of recommendations |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US12/033,540 Continuation US8065254B1 (en) | 2007-02-19 | 2008-02-19 | Presenting a diversity of recommendations |
Publications (1)
Publication Number | Publication Date |
---|---|
US8374985B1 true US8374985B1 (en) | 2013-02-12 |
Family
ID=44936888
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US12/033,540 Active 2030-04-01 US8065254B1 (en) | 2007-02-19 | 2008-02-19 | Presenting a diversity of recommendations |
US13/300,987 Expired - Fee Related US8374985B1 (en) | 2007-02-19 | 2011-11-21 | Presenting a diversity of recommendations |
Family Applications Before (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US12/033,540 Active 2030-04-01 US8065254B1 (en) | 2007-02-19 | 2008-02-19 | Presenting a diversity of recommendations |
Country Status (1)
Country | Link |
---|---|
US (2) | US8065254B1 (en) |
Cited By (9)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8572096B1 (en) * | 2011-08-05 | 2013-10-29 | Google Inc. | Selecting keywords using co-visitation information |
US20150052141A1 (en) * | 2013-08-19 | 2015-02-19 | Hon Hai Precision Industry Co., Ltd. | Electronic device and method for transmitting files |
US9177048B1 (en) | 2007-02-16 | 2015-11-03 | Google Inc. | Collaborative filtering |
US20170085677A1 (en) * | 2015-09-18 | 2017-03-23 | Quixey, Inc. | Recommending Applications |
US20170357984A1 (en) * | 2015-02-27 | 2017-12-14 | Sony Corporation | Information processing device, information processing method, and program |
CN108804439A (en) * | 2017-04-26 | 2018-11-13 | 合信息技术（北京）有限公司 | The recommendation method and device of multimedia resource |
US10127230B2 (en) | 2015-05-01 | 2018-11-13 | Microsoft Technology Licensing, Llc | Dynamic content suggestion in sparse traffic environment |
US10331679B2 (en) | 2015-10-30 | 2019-06-25 | At&T Intellectual Property I, L.P. | Method and apparatus for providing a recommendation for learning about an interest of a user |
US20210034996A1 (en) * | 2019-07-29 | 2021-02-04 | Fujitsu Limited | Information processing apparatus and recommendation control method |
Families Citing this family (16)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8126881B1 (en) | 2007-12-12 | 2012-02-28 | Vast.com, Inc. | Predictive conversion systems and methods |
JP4775671B2 (en) * | 2008-12-26 | 2011-09-21 | ソニー株式会社 | Information processing apparatus and method, and program |
US8447863B1 (en) | 2011-05-06 | 2013-05-21 | Google Inc. | Systems and methods for object recognition |
US9098510B2 (en) | 2012-01-24 | 2015-08-04 | Arrabon Management Services, LLC | Methods and systems for identifying and accessing multimedia content |
US8965908B1 (en) | 2012-01-24 | 2015-02-24 | Arrabon Management Services Llc | Methods and systems for identifying and accessing multimedia content |
US9292793B1 (en) * | 2012-03-31 | 2016-03-22 | Emc Corporation | Analyzing device similarity |
US8983998B1 (en) | 2012-04-25 | 2015-03-17 | Google Inc. | Prioritizing points of interest in unfamiliar regions |
US9104718B1 (en) | 2013-03-07 | 2015-08-11 | Vast.com, Inc. | Systems, methods, and devices for measuring similarity of and generating recommendations for unique items |
US9465873B1 (en) | 2013-03-07 | 2016-10-11 | Vast.com, Inc. | Systems, methods, and devices for identifying and presenting identifications of significant attributes of unique items |
US10007946B1 (en) | 2013-03-07 | 2018-06-26 | Vast.com, Inc. | Systems, methods, and devices for measuring similarity of and generating recommendations for unique items |
US9830635B1 (en) | 2013-03-13 | 2017-11-28 | Vast.com, Inc. | Systems, methods, and devices for determining and displaying market relative position of unique items |
US9715533B2 (en) | 2013-07-02 | 2017-07-25 | Ebay Inc. | Multi-dimensional search |
US10127596B1 (en) | 2013-12-10 | 2018-11-13 | Vast.com, Inc. | Systems, methods, and devices for generating recommendations of unique items |
JP5686934B1 (en) * | 2014-06-23 | 2015-03-18 | 楽天株式会社 | Information processing apparatus, information processing method, program, and storage medium |
US10268704B1 (en) | 2017-10-12 | 2019-04-23 | Vast.com, Inc. | Partitioned distributed database systems, devices, and methods |
CN111359203B (en) * | 2020-03-09 | 2021-09-28 | 西南交通大学 | Personalized railway VR scene interaction method |
Citations (11)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6006218A (en) | 1997-02-28 | 1999-12-21 | Microsoft | Methods and apparatus for retrieving and/or processing retrieved information as a function of a user's estimated knowledge |
US6078740A (en) | 1996-11-04 | 2000-06-20 | Digital Equipment Corporation | Item selection by prediction and refinement |
US6519591B1 (en) | 2000-12-22 | 2003-02-11 | Ncr Corporation | Vertical implementation of expectation-maximization algorithm in SQL for performing clustering in very large databases |
US6556960B1 (en) | 1999-09-01 | 2003-04-29 | Microsoft Corporation | Variational inference engine for probabilistic graphical models |
US6687696B2 (en) | 2000-07-26 | 2004-02-03 | Recommind Inc. | System and method for personalized search, information filtering, and for generating recommendations utilizing statistical latent class models |
US6728695B1 (en) | 2000-05-26 | 2004-04-27 | Burning Glass Technologies, Llc | Method and apparatus for making predictions about entities represented in documents |
US20040172267A1 (en) | 2002-08-19 | 2004-09-02 | Jayendu Patel | Statistical personalized recommendation system |
US6981040B1 (en) | 1999-12-28 | 2005-12-27 | Utopy, Inc. | Automatic, personalized online information and product services |
US7113185B2 (en) | 2002-11-14 | 2006-09-26 | Microsoft Corporation | System and method for automatically learning flexible sprites in video layers |
US20070038659A1 (en) | 2005-08-15 | 2007-02-15 | Google, Inc. | Scalable user clustering based on set similarity |
US7389201B2 (en) | 2001-05-30 | 2008-06-17 | Microsoft Corporation | System and process for automatically providing fast recommendations using local probability distributions |
-
2008
- 2008-02-19 US US12/033,540 patent/US8065254B1/en active Active
-
2011
- 2011-11-21 US US13/300,987 patent/US8374985B1/en not_active Expired - Fee Related
Patent Citations (14)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6078740A (en) | 1996-11-04 | 2000-06-20 | Digital Equipment Corporation | Item selection by prediction and refinement |
US6006218A (en) | 1997-02-28 | 1999-12-21 | Microsoft | Methods and apparatus for retrieving and/or processing retrieved information as a function of a user's estimated knowledge |
US6556960B1 (en) | 1999-09-01 | 2003-04-29 | Microsoft Corporation | Variational inference engine for probabilistic graphical models |
US7685276B2 (en) | 1999-12-28 | 2010-03-23 | Personalized User Model | Automatic, personalized online information and product services |
US6981040B1 (en) | 1999-12-28 | 2005-12-27 | Utopy, Inc. | Automatic, personalized online information and product services |
US6728695B1 (en) | 2000-05-26 | 2004-04-27 | Burning Glass Technologies, Llc | Method and apparatus for making predictions about entities represented in documents |
US20040034652A1 (en) | 2000-07-26 | 2004-02-19 | Thomas Hofmann | System and method for personalized search, information filtering, and for generating recommendations utilizing statistical latent class models |
US6687696B2 (en) | 2000-07-26 | 2004-02-03 | Recommind Inc. | System and method for personalized search, information filtering, and for generating recommendations utilizing statistical latent class models |
US7328216B2 (en) | 2000-07-26 | 2008-02-05 | Recommind Inc. | System and method for personalized search, information filtering, and for generating recommendations utilizing statistical latent class models |
US6519591B1 (en) | 2000-12-22 | 2003-02-11 | Ncr Corporation | Vertical implementation of expectation-maximization algorithm in SQL for performing clustering in very large databases |
US7389201B2 (en) | 2001-05-30 | 2008-06-17 | Microsoft Corporation | System and process for automatically providing fast recommendations using local probability distributions |
US20040172267A1 (en) | 2002-08-19 | 2004-09-02 | Jayendu Patel | Statistical personalized recommendation system |
US7113185B2 (en) | 2002-11-14 | 2006-09-26 | Microsoft Corporation | System and method for automatically learning flexible sprites in video layers |
US20070038659A1 (en) | 2005-08-15 | 2007-02-15 | Google, Inc. | Scalable user clustering based on set similarity |
Non-Patent Citations (46)
Title |
---|
Adomavicius, G., and Tuzhilin, A. ‘Toward the Next Generation of Recommender Systems: A survey of the State-of-the-Art and Possible Extensions.’ IEEE Transactions on Knowledge and Data Engineering, vol. 17, N. 6, Jun. 2005. |
Adomavicius, G., and Tuzhilin, A. 'Toward the Next Generation of Recommender Systems: A survey of the State-of-the-Art and Possible Extensions.' IEEE Transactions on Knowledge and Data Engineering, vol. 17, N. 6, Jun. 2005. |
Blei, D.; Ng, A.; and Jordan, M. ‘Latent Dirichlet Allocation.’ In Journal of Machine Learning Research, 2003. |
Blei, D.; Ng, A.; and Jordan, M. 'Latent Dirichlet Allocation.' In Journal of Machine Learning Research, 2003. |
Breese, J.; Heckermann, D.; and Kadie, C. ‘Empirical Analysis of Predictive Algorithms for Collaborative Filtering.’ Proc. of the 14th Conf. on Uncertainty in Artificial Intelligence, Jul. 1998. |
Breese, J.; Heckermann, D.; and Kadie, C. 'Empirical Analysis of Predictive Algorithms for Collaborative Filtering.' Proc. of the 14th Conf. on Uncertainty in Artificial Intelligence, Jul. 1998. |
Broder, A. ‘On the resemblance and containment of documents.’ Compression and Complexity of Sequences (SEQUENCES '97), 1998, pp. 21-29. |
Broder, A. 'On the resemblance and containment of documents.' Compression and Complexity of Sequences (SEQUENCES '97), 1998, pp. 21-29. |
Buhler, J. ‘Efficient large-scale sequence comparison by locality-sensitive hashing.’ Bioinformatics, vol. 17, pp. 419-428, 2001. |
Buhler, J. 'Efficient large-scale sequence comparison by locality-sensitive hashing.' Bioinformatics, vol. 17, pp. 419-428, 2001. |
Chang, et al., ‘Bigtable: A Distributed Storage System for Structured Data,’ 2006, Usenix Association, 14 pages. |
Chang, et al., 'Bigtable: A Distributed Storage System for Structured Data,' 2006, Usenix Association, 14 pages. |
Charikar, M. Similarity Estimation Techniques from Rounding Algorithms. Proc. of the 34th Annual ACM Symposium on Theory of Computing, STOC (2002). |
Cohen, E. ‘Size-Estimation Framework with Applications to Transitive Closure and Reachability.’ Journal of Computer and System Sciences 55 (1997): 441-453. |
Cohen, E. 'Size-Estimation Framework with Applications to Transitive Closure and Reachability.' Journal of Computer and System Sciences 55 (1997): 441-453. |
Cohen, et al. ‘Finding Interesting Associations without Support Pruning.’ Proc. of the 16th Intl. Conf. on Data Engineering, (ICDE 2000). |
Cohen, et al. 'Finding Interesting Associations without Support Pruning.' Proc. of the 16th Intl. Conf. on Data Engineering, (ICDE 2000). |
Cristianiti, N., and Shawe-Taylor, J. ‘An Introduction to Support Vector Machines and Other Kernel-based Learning Methods.’ Cambridge University Press, 1st edition (Mar. 28, 2000). |
Cristianiti, N., and Shawe-Taylor, J. 'An Introduction to Support Vector Machines and Other Kernel-based Learning Methods.' Cambridge University Press, 1st edition (Mar. 28, 2000). |
Das et al., ‘Google News Personalization: Scalable Online Collaborative Filtering,’ WWW2007, May 8-12, 2007, Banff, Canada, 10 pages. |
Das et al., 'Google News Personalization: Scalable Online Collaborative Filtering,' WWW2007, May 8-12, 2007, Banff, Canada, 10 pages. |
Datar, et al. ‘Locality-Sensitive Hashing Scheme Based on P-Stable Distributions.’ Proc. of the 20th ACM Annual Symposium on Computational Geometry (SOCG 2004). |
Datar, et al. 'Locality-Sensitive Hashing Scheme Based on P-Stable Distributions.' Proc. of the 20th ACM Annual Symposium on Computational Geometry (SOCG 2004). |
Dean, et al., ‘MapReduce: Simplified Data Processing on Large Clusters,’ 2004, OSDI, 13 pages. |
Dean, et al., 'MapReduce: Simplified Data Processing on Large Clusters,' 2004, OSDI, 13 pages. |
Gionis, A., et al. ‘Similarity Search in High Dimensions via Hashing.’ Proc. of the 25th Intl. Conf. on Very Large Data Bases, VLDB (1999). |
Gionis, A., et al. 'Similarity Search in High Dimensions via Hashing.' Proc. of the 25th Intl. Conf. on Very Large Data Bases, VLDB (1999). |
Heckerman, et al., Dependency Networks for Inference, Collaborative Filtering, and Data Visualization., Journal of Machine Learning Research., Oct. 2000, pp. 49-75. |
Hofmann, ‘Latent Semantic Models for Collaborative Filtering,’ Jan. 2004, ACM, 27 pages. |
Hofmann, 'Latent Semantic Models for Collaborative Filtering,' Jan. 2004, ACM, 27 pages. |
Indyk, P, and Motwani, R. Approximate Nearest Neighbor: Towards Removing the Curse of Dimensionality. Proc of the 30th Annual ACM Symposium on Theory on Computing, 1998, pp. 604-613. |
Indyk, P. ‘A Small Approximately Min-Wise Independent Family of Hash Functions.’ Proc. 10th Symposium on Discrete Algorithms, SODA (1999). |
Indyk, P. 'A Small Approximately Min-Wise Independent Family of Hash Functions.' Proc. 10th Symposium on Discrete Algorithms, SODA (1999). |
Marlin, B., and Zemel, R. ‘The Multiple Multiplicative Factor Model for Collaborative Filtering.’ ACM Intl. Conf. Proceeding Series, vol. 69, 2004. |
Marlin, B., and Zemel, R. 'The Multiple Multiplicative Factor Model for Collaborative Filtering.' ACM Intl. Conf. Proceeding Series, vol. 69, 2004. |
Motwani, R. and Raghavan, P. Randomized Algorithms. Cambridge University Press, 1985. |
Resnick, et al. ‘GroupLens: an Open architecture for Collaborative Filtering of Netnews.’ Proc. of Computer Supported Cooperative Work Conf., 1994. |
Resnick, et al. 'GroupLens: an Open architecture for Collaborative Filtering of Netnews.' Proc. of Computer Supported Cooperative Work Conf., 1994. |
Sarwar, et al. ‘Application of Dimensionality Reduction in Recommender Systems—A Case Study.’ Proc. of the ACM WebKDD Workshop, 2000. |
Sarwar, et al. ‘Item-Based Collaborative Filtering Recommendation Algorithms.’ Proc. of the 10th Intl. WWW Conf. , (WWW) 2001. |
Sarwar, et al. 'Application of Dimensionality Reduction in Recommender Systems-A Case Study.' Proc. of the ACM WebKDD Workshop, 2000. |
Sarwar, et al. 'Item-Based Collaborative Filtering Recommendation Algorithms.' Proc. of the 10th Intl. WWW Conf. , (WWW) 2001. |
Shani, et al. ‘An MDP-Based Recommender System.’ Proc. of the 18th Conf. Uncertainty in Artificial Intelligence, Aug. 2002. |
Shani, et al. 'An MDP-Based Recommender System.' Proc. of the 18th Conf. Uncertainty in Artificial Intelligence, Aug. 2002. |
Yu, et al. ‘Instance Selection Techniques for Memory-Based Collaborative Filtering.’ Proc. of the Second Siam Intl. Conf. on Data Mining, (SDM) 2002. |
Yu, et al. 'Instance Selection Techniques for Memory-Based Collaborative Filtering.' Proc. of the Second Siam Intl. Conf. on Data Mining, (SDM) 2002. |
Cited By (11)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9177048B1 (en) | 2007-02-16 | 2015-11-03 | Google Inc. | Collaborative filtering |
US8572096B1 (en) * | 2011-08-05 | 2013-10-29 | Google Inc. | Selecting keywords using co-visitation information |
US20150052141A1 (en) * | 2013-08-19 | 2015-02-19 | Hon Hai Precision Industry Co., Ltd. | Electronic device and method for transmitting files |
US20170357984A1 (en) * | 2015-02-27 | 2017-12-14 | Sony Corporation | Information processing device, information processing method, and program |
US10127230B2 (en) | 2015-05-01 | 2018-11-13 | Microsoft Technology Licensing, Llc | Dynamic content suggestion in sparse traffic environment |
US20170085677A1 (en) * | 2015-09-18 | 2017-03-23 | Quixey, Inc. | Recommending Applications |
US9942358B2 (en) | 2015-09-18 | 2018-04-10 | Samsung Electronics Co., Ltd. | Recommending applications |
US10331679B2 (en) | 2015-10-30 | 2019-06-25 | At&T Intellectual Property I, L.P. | Method and apparatus for providing a recommendation for learning about an interest of a user |
CN108804439A (en) * | 2017-04-26 | 2018-11-13 | 合信息技术（北京）有限公司 | The recommendation method and device of multimedia resource |
US20210034996A1 (en) * | 2019-07-29 | 2021-02-04 | Fujitsu Limited | Information processing apparatus and recommendation control method |
US11783215B2 (en) * | 2019-07-29 | 2023-10-10 | Fujitsu Limited | Information processing apparatus and recommendation control method |
Also Published As
Publication number | Publication date |
---|---|
US8065254B1 (en) | 2011-11-22 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US8374985B1 (en) | Presenting a diversity of recommendations | |
US10270791B1 (en) | Search entity transition matrix and applications of the transition matrix | |
US8346754B2 (en) | Generating succinct titles for web URLs | |
US9171078B2 (en) | Automatic recommendation of vertical search engines | |
US9697249B1 (en) | Estimating confidence for query revision models | |
US7565345B2 (en) | Integration of multiple query revision models | |
US8375049B2 (en) | Query revision using known highly-ranked queries | |
US9798806B2 (en) | Information retrieval using dynamic guided navigation | |
US10997184B2 (en) | System and method for ranking search results | |
US9116992B2 (en) | Providing time series information with search results | |
US20110029517A1 (en) | Global and topical ranking of search results using user clicks | |
US9116982B1 (en) | Identifying interesting commonalities between entities | |
US20160350797A1 (en) | Ranking advertisements with pseudo-relevance feedback and translation models | |
US20130124496A1 (en) | Contextual promotion of alternative search results | |
US20060230005A1 (en) | Empirical validation of suggested alternative queries | |
US9659097B1 (en) | Propagating query classifications | |
US20090187540A1 (en) | Prediction of informational interests | |
US9002867B1 (en) | Modifying ranking data based on document changes | |
WO2009129048A2 (en) | System and method for trail identification with search results | |
US20100185623A1 (en) | Topical ranking in information retrieval | |
US20100017392A1 (en) | Intent match search engine | |
US20140156623A1 (en) | Generating and displaying tasks | |
US11941073B2 (en) | Generating and implementing keyword clusters | |
KR102368043B1 (en) | Apparatus and method for recommending news of user interest using user-defined topic modeling | |
AU2011247862B2 (en) | Integration of multiple query revision models |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:DAS, ABHINANDAN S.;GARG, ASHUTOSH;DATAR, MAYUR;SIGNING DATES FROM 20080219 TO 20080303;REEL/FRAME:027982/0739 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
CC | Certificate of correction | ||
FPAY | Fee payment |
Year of fee payment: 4 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044101/0299Effective date: 20170929 |
|
FEPP | Fee payment procedure |
Free format text: MAINTENANCE FEE REMINDER MAILED (ORIGINAL EVENT CODE: REM.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
LAPS | Lapse for failure to pay maintenance fees |
Free format text: PATENT EXPIRED FOR FAILURE TO PAY MAINTENANCE FEES (ORIGINAL EVENT CODE: EXP.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
STCH | Information on status: patent discontinuation |
Free format text: PATENT EXPIRED DUE TO NONPAYMENT OF MAINTENANCE FEES UNDER 37 CFR 1.362 |
|
FP | Lapsed due to failure to pay maintenance fee |
Effective date: 20210212 |
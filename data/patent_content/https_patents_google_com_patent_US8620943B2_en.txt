US8620943B2 - System and method for modulating search relevancy using pointer activity monitoring - Google Patents
System and method for modulating search relevancy using pointer activity monitoring Download PDFInfo
- Publication number
- US8620943B2 US8620943B2 US12/752,017 US75201710A US8620943B2 US 8620943 B2 US8620943 B2 US 8620943B2 US 75201710 A US75201710 A US 75201710A US 8620943 B2 US8620943 B2 US 8620943B2
- Authority
- US
- United States
- Prior art keywords
- search
- search results
- user
- client
- search result
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/953—Querying, e.g. by the use of web search engines
- G06F16/9535—Search customisation based on user profiles and personalisation
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/24—Querying
- G06F16/248—Presentation of query results
Definitions
- the present invention relates generally to the field of search engines, and in particular, to a system and method of modulating a search result relevancy with user feedback.
- a typical use of a search engine involves a user, a search query and a client device.
- the user submits the search query through the client device to the search engine.
- the search engine identifies in its database one or more items relevant to the search query according to a set of predefined criteria, and returns the identified items to the client device as a search result (e.g., documents, advertisements and/or units of information such as dictionary definitions).
- the items are ordered based upon their respective relevancy or ranking values according to a predefined empirical standard (e.g., PageRank, as described in detail in U.S. Pat. No. 6,285,999, hereby incorporated by reference in its entirety). An item with a higher ranking value usually appears before those of lower ones.
- the click through rate of an informational item may be defined as the ratio of the number of times the item has been selected by a user (sometimes called the number of click throughs) to the number of times the item was displayed (sometimes called the number of impressions), and thereby made available for selection.
- advertisements corresponding to displayed content are ordered in accordance with a ordering function, one parameter of which is the click through rates of the items (advertisements) being ordered.
- informational items having high click through rates should be ranked higher, and displayed more prominently than informational items with lower click through rates, because the items with high click through rates are more likely to be of interest to the user(s).
- the search engine may not receive user feedback about the relevancy of the informational item to the search.
- the user has little motivation to provide feedback such as a click through because the user now has the information sought, or there may be no outbound link associated with the information item. Therefore, there is a need for collecting user feedback with respect to informational items presented in response to a search query and adjusting the relevancy values of the items in accordance with the user feedback, even if there is no click through information about one or more of the informational items.
- one or more informational items are displayed in response to a search query.
- Each item occupies a respective region on a display and has a relevancy value associated with the search query.
- the user's browsing (e.g., pointer placement and/or movement) activities are monitored with respect to the displayed informational items.
- At least one informational item's relevancy value is adjusted in accordance with the user's browsing activities with respect to the item's respective region.
- FIG. 1 is a block diagram illustrating a client-server network system according to some embodiments of the present invention.
- FIG. 2A is a schematic flowchart illustrating an exemplary thick-client embodiment of a client assistant.
- FIG. 2B is a schematic flowchart illustrating an exemplary thin-client embodiment of a client assistant.
- FIG. 3 is a flowchart illustrating how adjustments are made to informational items' relevancy values according to some embodiments of the present invention.
- FIG. 4 depicts a data structure for storing information associated with different informational items according to some embodiments of the present invention.
- FIGS. 5A-5C are flowcharts of three specific embodiments illustrating how the server generates different types of search results in response to a search query according to some embodiments of the present invention.
- FIG. 6 is a block diagram illustrating a client computer in accordance with some embodiments of the present invention.
- FIG. 7 is a block diagram illustrating a server computer in accordance with some embodiments of the present invention.
- FIG. 1 is a block diagram illustrating a client-server network system 100 .
- the system 100 includes a plurality of clients 102 that are connected to a server 130 and to a plurality of web hosts 140 through a network 120 .
- the network 120 may include the Internet, other wide area networks, local area networks, metropolitan area networks, wireless networks, etc.
- the server 130 is a search engine that includes information about millions or even billions of documents stored at various web hosts 140 . When the search engine receives a search query from one of the clients 102 , it identifies a set of informational items, including, in most instances, a link to a document that is relevant to the search query, and returns them to the requesting client as a search result.
- the search engine may also return other types of information items such as advertisements, dictionary definitions, images, audio files, or other units of information which may or may not includes links to more information associated with the returned information item.
- the informational item contains enough information such that a link may not be desirable or necessary. For example, if a definition for a word was returned as an informational unit it is may satisfy a user's interest without the need for additional information.
- a client (also sometimes called a client device) 102 hosts a client application 104 and a client assistant 106 .
- the client 102 may be a personal digital assistant (PDA), a personal computer (PC) or a workstation that can display the informational items within a search result
- the client application 104 can be a web browser or a standalone program that sends requests to and receives information from a database or a search engine.
- the client application 104 is used for displaying search results received from the search engine and the client assistant 106 is responsible for monitoring user browsing activities in connection with the search results and providing such information back to the search engine.
- the term “monitoring user browsing activities” means monitoring a user's pointer activities (e.g., pointer placement and movement).
- the client application 104 is a browser (e.g., Firefox, Safari, Internet Explorer or others).
- the server 130 includes a user response analysis unit 132 for receiving and analyzing user browsing activities (i.e., pointer activity, such as placement and movement) and a relevancy value update unit 134 for updating an informational item's relevancy value associated with a search query based on information received from the user response analysis unit 132 .
- user browsing activities i.e., pointer activity, such as placement and movement
- a relevancy value update unit 134 for updating an informational item's relevancy value associated with a search query based on information received from the user response analysis unit 132 .
- subsequent responses by the search engine to the same query or a similar search query from any client may identify a new set of informational items and/or provide them in a different order in accordance with their updated relevancy values.
- the relevancy value of an informational item may be used for ordering or ranking results responsive to a search query or other query that produces a plurality of results.
- an informational item's relevancy value associated with a search query is generally an aggregation of feedback regarding the item received from a community of users, it can serve to characterize the community's opinion about the relevancy between the informational item and the search query, or an underlying document associated with the informational item.
- An item found to be more relevant to a search query should be placed in a position to match its popularity among the community (e.g., being moved to a more prominent position in the display presented to the user).
- the community is a set of users sharing at least one similar characteristic such as belonging to the same workgroup, using the same language, using the same type of client device, having an internet address associated with the same country or geographic region, or the like. Different communities would tend to produce different user feedback. Over time, an item receiving positive user feedback will tend to move to more prominent positions in the results and, conversely in some embodiments, an item receiving no feedback or negative feedback should move to lesser positions (e.g., downward) in the search result.
- the relevancy value of an informational item is query-dependent and the same item may have different relevancy values associated with different search queries.
- the relevancy value of an informational item will be a dynamic parameter since the community's opinion about the relevance between the informational item and a search query may vary with time. For example, as the popularity, frame or notoriety of a movie star, musician or politician rises and falls, the relevancy values of informational items about that person will similarly rise and fall.
- a typical user's behavior is to move the mouse pointer (or any other pointing indicator) over or near a target informational item, keep the mouse pointer there for a period of time while the user reads the item's information (e.g., title and snippet), and then click through the underlying link or move to another item.
- a user may review multiple informational items responsive to a search query, moving a pointer over or near each of the informational items that the user reviews. These various pointer activities can provide another way to evaluate the user's feedback with respect to a particular informational item. A longer pointer hover period may suggest a more positive opinion from the user about the relevance between the informational item and the user's interest.
- a particular pointer movement pattern may provide additional information about a user's interest. For example, a user moving the pointer across the snippet line by line at a normal reading speed suggests a higher level of attention that the user paid to the informational item than if the pointer had been kept in a static position or moved randomly.
- An informational item that is associated with a click-through may be more relevant to a search query than another item that receives user attention, such as pointer hover time greater than a threshold value, but no mouse-down action.
- the client assistant 106 shown in FIG. 1 is primarily responsible for gathering information about various user browsing activities and the server 130 is primarily responsible for analyzing the information collected by the client assistant 106 and updating relevancy values of informational items accordingly.
- the distinction is less clear and the client assistant 106 and the server 130 may have varying degrees of responsibility.
- the client assistant 106 assumes a substantial amount of workload (e.g., conducting preliminary relevancy analysis and selecting one type of user browsing activity over another one), the client assistant 106 is referred to as a thick-client.
- the client assistant 106 does little analysis and passes substantially all information about a user's browsing activities to the server, the client assistant 106 is referred to as a thin-client.
- Any flavor of the client assistant 106 may be implemented using executable code such as JavaScript which may be included in the page of search results, as a plug-in application program attached to the client application 104 (e.g., a toolbar), or a stand-alone application.
- executable code such as JavaScript which may be included in the page of search results, as a plug-in application program attached to the client application 104 (e.g., a toolbar), or a stand-alone application.
- FIG. 2A is a schematic flowchart illustrating a thick-client embodiment of a client assistant 106 .
- This embodiment and its thin-client counterpart described with reference to FIG. 2B below, may be used for monitoring the user's pointing activities, e.g., the location where buttons are pressed, the movement pattern of the pointer and the speed of the pointer, etc.
- one or more informational items are presented in a display by the client application 104 to a requesting user ( 210 -A). These informational items may be part of a search result or a keyword-triggered advertising item.
- the client assistant 106 monitors a predefined region of the display that is associated with the informational item, and the user's pointer placement activities with respect to that predefined region ( 230 -A). For example, the client assistant 106 identifies when the user moves the pointer into the predefined region and when the user moves the pointer out of the predefined region. Based on these two identifications, the client assistant determines a continuous hover period or client attention period. In some embodiments, the client assistant 106 then determines whether this client attention period is greater than a threshold value ( 240 -A).
- the client assistant 106 sends the information associated with the user's pointer placement activity including the client attention period to a server ( 250 -A) for further processing. Otherwise ( 240 -A, no), the client assistant 106 does not send the information it has gathered and returns to monitoring pointer movements. Since a search result often includes many informational items and the pointer often temporarily passes through many regions associated with different items on its way to the target item, these brief hovers are usually too short to reflect any genuine user interest in the underlying informational items. Skipping these items by appropriately setting the threshold value also reduces the server-side workload, since less information about the user's mouse activities is sent over to the server side for further processing.
- FIG. 2B is a schematic flowchart illustrating a thin-client embodiment of the client assistant.
- This embodiment is “thinner” than the previous embodiment because the client assistant in this embodiment does not calculate the client attention period.
- the division of the workload between the client and server is allocated differently.
- the client assistant 106 displays one or more informational items in a display ( 210 -B), monitors a user's pointer placement activities ( 230 -B) and transfers information about the user's pointer placement activities to a server for further analysis ( 240 -B), letting the server determine whether or not a particular activity, e.g., a pointer indicator movement, may reflect the user's interest in the displayed informational item.
- a particular activity e.g., a pointer indicator movement
- the information about a user's pointer placement activities that is transferred back to a server may be used to modify the information currently being presented to the user. For instance, when a user hovers a pointer over a definition in a onebox, and information about the pointer hover is conveyed to the server, the server may send a more complete definition to the client for immediate display. In one exemplary implementation, the additional information is displayed in a pop-up window.
- the additional information is conveyed to the client by the server with the initial web page or search results, or is otherwise conveyed before the user pointer hover over the item has been determined, and in these embodiments the additional information is displayed by the client system (without further assistance from the server) when the user's pointer hover activity meets predefined criteria, such as hovering more than a threshold period of time.
- a user's feedback with respect to an informational item may appear in many forms of user pointer placements or actions, sometimes called user browsing activities.
- the client assistant can track other types of mouse or pointer actions, e.g., when and where the mouse button is pressed down, how long the mouse pointer is over the title of the informational item or how long it is within the snippet of the informational item.
- mouse or pointer hovering over different sections of an informational item carry different weights in determining its relevancy value.
- hover time over a first portion (e.g., a snippet portion) of an informational item may be assigned a first weight W 1
- hover time over a second portion (e.g., a descriptor, such as a title portion) of the informational item may be assigned a distinct, second weight W 2
- client attention data such information including the pointer hover period is commonly referred to as “client attention data” that is used by the server when determining the relevancy value of the informational item associated with the search query.
- client attention data is commonly referred to as “client attention data” that is used by the server when determining the relevancy value of the informational item associated with the search query.
- client attention data is commonly referred to as “client attention data” that is used by the server when determining the relevancy value of the informational item associated with the search query.
- the techniques described herein are not limited to the use of a mouse pointing device. Rather, the techniques and embodiments disclosed herein apply equally well to any type of device which tends to indicate a user
- the relevancy value of an informational item associated with user pointer activities can be a statistical parameter that becomes increasingly more reliable as the server accumulates increasing amounts of client attention data.
- the server is responsible for updating an informational item's relevancy value according to a predetermined schedule, e.g., every day or every week, using its associated client attention data and impression data, as well as query-independent information such as PageRank.
- an informational item's relevancy value is updated or recomputed at query time, while computing the rankings or orderings of the information items included in the results for a search query.
- FIG. 3 is a flowchart illustrating how adjustments are made to the relevancy values for informational items according to some embodiments of the present invention. These adjustments may be executed at regular time intervals on the server-side (e.g., including, but not limited to, every day), or triggered whenever the server has accumulated a predefined amount of client attention data).
- the server may first retrieve impression data associated with the informational items that are provided to client devices in response to search queries ( 310 ).
- the impression data includes data indicating how many times and in what orders the informational items are provided to the client devices in response to the search queries.
- the server aggregates client attention data that is received from the client devices over a predefined time period ( 320 ) and generates a client attention coefficient for each of a plurality of informational items by analyzing the impression data and client attention data ( 340 ). For each informational item for which sufficient client attention data has been collected to generate a new or revised relevancy value, the server combines the client attention coefficients associated with the informational item with their respective query-independent metrics, e.g., PageRank, indicating the informational item's importance or popularity ( 350 ) and generates a new relevancy value or updates an existing one for each informational item ( 360 ).
- query-independent metrics e.g., PageRank
- the relevancy value of an informational item includes both query-dependent components, e.g., client attention data, and query-independent ones, e.g., PageRank.
- client attention data and query-independent data are stored in different fields and in some embodiments they are combined in a single field.
- the generation of an update relevancy value may be performed at query time, while ordering the results for a search query, where the results include an informational item for which client attention information is available.
- the query time updating of the relevancy value may include operation 360 , or operations 340 , 350 and 360 .
- the new relevancy values as well as other forms of client attention data can be stored in a data structure, each one associated with an informational item.
- the information is associated with a particular search query.
- Data structure 400 of FIG. 4 depicts such a data structure for storing information associated with different informational items according to some embodiments of the present invention.
- the informational items may be a document, an advertising item, or a piece of information associated with a particular search query, e.g., a dictionary definition of an English word.
- Data structure 400 includes one or more records 402 associated with a particular informational item.
- each informational item e.g., identified by a corresponding reference 410 to the information item
- the PageRank 420 is dependant upon the hyperlink structure associated with the informational item and it is not related to any search query.
- an associated PageRank value is not included in record 402 when the informational item is not a type of informational item which includes a PageRank (e.g., an advertisement or dictionary definition).
- the record 402 may include query-dependent attributes for one or more queries 440 that relevant to the informational item, if there is relevant impression data 450 and client attention data 460 available.
- the query-dependent attributes include impression data 450 , a set of client attention data 460 (which may include such parameters as a click-through rate, a pointer hover period and so on), a client attention coefficient 470 that is derived from the client attention data 460 and a query-dependant relevancy value 480 using, e.g., the algorithm mentioned above in connection with FIG. 3 , and other parameters 490 reflecting the user's feedback or various other factors, respectively.
- another query relevant to the informational item may be associated with another set of attributes that are related to user feedback with respect to that query.
- the user feedback is not associated with a particular query, but instead is used to modify a query independent interest value associated with the informational item.
- each record 402 may include a subset and/or a superset of the fields discussed above.
- the server Upon receiving a new search query from a client device, the server identifies in its database one or more informational items relevant to the query and then retrieves the relevancy values of the identified informational items associated with the search query from the data structure. The identified informational items are ordered in accordance with their relevancy values and returned to the requesting client device.
- FIGS. 5A-5C are flowcharts according to some of the various embodiments illustrating how the server generates different types of information items in response to a search query.
- the server receives a search query from a client device ( 510 -A), identifies one or more informational items whose associated client attention data satisfies a predefined pattern ( 520 -A) and returns them to the requesting client device ( 530 -A).
- a typical search result comprising a list of documents (with, for example, titles, snippets, link and various other information)
- the identified informational item is for the most part, associated with a particular source of specialized information and is considered to be closely related to the search query.
- the information items identified at 520 -A are termed “onebox results”.
- the type of informational items in the onebox results include dictionary definitions, news, stock quotes, weather and local web sites related to the search query.
- a returned dictionary definition for a word for example, if the user's interest is indeed the definition, the user will probably move the pointer into the box and keep it there for a moment while reading the definition.
- a frequent repeat of such a pattern of pointer movement from a community of users is an indicator to the search engine that presenting that word's definition as the one-box result for that query is desirable.
- the user when a user submits a search query “agrestic”, the user probably desires to know the word's definition since it is not a common word. Accordingly, the definition of the word “agrestic” is chosen to be placed in the one-box result responsive to the search query. There may be other results in the onebox area.
- a user submits a search query “goog” his intent is probably to get the instant price quote for Google's stock since “GOOG” happens to be the stock symbol for Google Incorporated. Accordingly, it is desirable for the onebox results to provide the stock quote, e.g., the current price of the stock and perhaps even a graph showing the stock's price trend.
- the user would probably move the pointer into a region defined by the result and keep the pointer there while reading the information.
- the user's interest is demonstrated by a pointer hover period associated with the onebox result.
- this can be interpreted in at least two ways: 1) the onebox result was not of interest to the user; or 2) the user was interested, but did not move the pointer toward the onebox result. In some embodiments, this produces negative feedback regarding client attention (e.g., when the user moves the pointer away from the informational item). In some embodiments, this information is simply not utilized.
- the onebox result includes links whose click-throughs can be identified.
- a click-though indicates a positive reaction from the client which would tend to raise a relevancy value of the information item associated with the link.
- the search engine may replace the current onebox result(s) with different informational items based on the client attention data or simply stop producing the onebox result(s).
- the informational items presented in the onebox results are ordered in accordance with the client attention data and/or relevancy values.
- relevancy values of informational items relevant to a search query can be used to order them in a search result as shown in FIG. 5B .
- the search engine After receiving a search query ( 510 -B), the search engine identifies search results comprising one or more informational items, if any, that are relevant to the search query ( 520 -B), each informational item may include a title, a snippet and a link to another document (e.g., a web page).
- a snippet is generally a selected portion of text from the informational item, and preferably comprises text that includes at least one of the search terms in the search query. If an identified informational item in the search results does not have an associated URL (uniform resource locator), the informational item does not include a link.
- the search engine orders the informational items ( 530 -B) in accordance with their respective relevancy values associated with the search query.
- the query-dependent relevancy value 480 in that record 402 is used for ordering that information item with respect to the other informational items in the search results.
- the relevancy value of each informational item is based on both query-dependent client attention data and query-independent ranking information.
- the server returns the ordered informational items as a set of search results to the requesting client device ( 540 -B).
- the user's new pointer activities over the search results e.g., the pointer placements and/or movements
- the user feedback regarding a particular informational item is reflected in a modification of the query independent ranking information.
- FIG. 5C is a flowchart illustrating how the search engine identifies and orders a set of advertising items that are keyword-triggered by a search query according to some embodiments.
- the search engine determines whether any of the query terms are associated with advertising items hosted by the search engine.
- the search engine retrieves various information which serves to help identify how to order advertisements, which can, in some instances also determine which advertisements to present to the user. For example, advertisements may be ordered by a ranking value based on a combination of click-though rate and a bid amount.
- the ranking value is also based on client feedback information as a result of pointer activity not associated with a click-through.
- client feedback information For example, some advertisements are primarily for brand identification and a measure of interest or success of such advertisements might be indicated by a user's pointing activities associated with the advertisement.
- the search engine returns a search result as well as the advertising items that are ordered according to their ranking values ( 530 -C) back to the requesting client device ( 540 -C).
- a limited number of top-ranked advertisements are returned (e.g., 3 to 5).
- FIG. 6 is a block diagram illustrating a client computer 600 in accordance with some embodiments of the present invention.
- the client computer 600 typically includes one or more processing units (CPU's) 602 , one or more network or other communications interfaces 610 , memory 612 , and one or more communication buses 614 for interconnecting these components.
- the client computer 600 optionally includes a user interface 604 that comprises a display device 606 , keyboard 608 and pointer device 609 (e.g., a mouse, trackball, touch sensitive pad or display screen, or the like).
- the memory 612 may include high speed random access memory and may also include non-volatile memory, such as one or more magnetic disk storage devices.
- the memory 612 may optionally include one or more storage devices remotely located from the CPU(s) 602 . In some embodiments, the memory 612 stores the following elements, modules and data structures, or a subset or superset thereof:
- modules and applications corresponds to a set of instructions for performing one or more functions described above.
- modules i.e., sets of instructions
- memory 612 may store a subset of the modules and applications identified above.
- memory 206 may store additional modules, applications and data structures not described above.
- FIG. 7 is a block diagram illustrating a server computer 700 in accordance with some embodiments of the present invention.
- the server computer 700 typically includes one or more processing units (CPU's) 702 , one or more network or other communications interfaces 710 , memory 712 , and one or more communication buses 714 for interconnecting these components.
- the server computer 700 may optionally include a user interface 704 .
- Memory 712 may include high speed random access memory and may also include non-volatile memory, such as one or more magnetic disk storage devices.
- the memory 712 may optionally include one or more storage devices remotely located from the CPU(s) 702 .
- Memory 712 or alternatively the non-volatile memory device(s) within memory 712 , comprises a computer readable storage medium.
- memory 712 or the computer readable storage medium of memory 712 includes the following programs, modules and data structures, or a subset or a superset thereof:
- modules and applications corresponds to a set of instructions for performing one or more functions described above.
- modules i.e., sets of instructions
- memory 612 may store a subset of the modules, applications and data structures identified above.
- memory 712 may store additional modules, applications and data structures not described above.
- FIG. 7 shows server 700 as a number of discrete items
- FIG. 7 is intended more as a functional description of the various features which may be present in server 700 rather than as a structural schematic of the embodiments described herein.
- items shown separately could be combined and some items could be separated.
- some items shown separately in FIG. 7 could be implemented on single servers and single items could be implemented by one or more servers.
- the actual number of servers in server 700 and how features are allocated among them will vary from one implementation to another, and may depend in part on the amount of data traffic that the system must handle during peak usage periods as well as during average usage periods.
- the client computer 600 or the server computer 700 may be located in whole or in part in the other, or distributed among a plurality of computers.
- the user response information 732 could be partially located in the client computer 600 .
- the information items 724 could reside on a plurality of computers.
- stages which are not order dependent may be reordered and other stages may be combined or broken out. While some reordering or other groupings are specifically mentioned, others will be obvious to those of ordinary skill in the art and so do not present an exhaustive list of alternatives. Moreover, it should be recognized that the stages could be implemented in hardware, firmware, software or any combination thereof.
Abstract
A method and system of modulating search result relevancy use various types of user browsing activities. In particular, a client assistant residing in a client computer monitors movements of a user controlled pointer in a web browser, e.g., when the pointer moves into a predefined region and when it moves out of the predefined region. A server then determines a relevancy value between an informational item associated with the predefined region and a search query according to the pointer hover period. When preparing a new search result responsive to a search query, the server re-orders identified informational items in accordance with their respective relevancy values such that more relevant items appear before less relevant ones. The server also uses the relevancy values to determine and/or adjust the content of an one-box result associated with a search query.
Description
This application is a continuation of U.S. patent application Ser. No. 11/059,794, filed Feb. 16, 2005, now U.S. Pat. No. 7,756,887 which is a continuation of U.S. patent application Ser. No. 11/026,921, filed Dec. 30, 2004, now abandoned which is incorporated by reference herein in its entirety
The present invention relates generally to the field of search engines, and in particular, to a system and method of modulating a search result relevancy with user feedback.
A typical use of a search engine involves a user, a search query and a client device. The user submits the search query through the client device to the search engine. Upon receipt of the search query, the search engine identifies in its database one or more items relevant to the search query according to a set of predefined criteria, and returns the identified items to the client device as a search result (e.g., documents, advertisements and/or units of information such as dictionary definitions). The items are ordered based upon their respective relevancy or ranking values according to a predefined empirical standard (e.g., PageRank, as described in detail in U.S. Pat. No. 6,285,999, hereby incorporated by reference in its entirety). An item with a higher ranking value usually appears before those of lower ones.
The click through rate of an informational item may be defined as the ratio of the number of times the item has been selected by a user (sometimes called the number of click throughs) to the number of times the item was displayed (sometimes called the number of impressions), and thereby made available for selection. In at least one widely used system, advertisements corresponding to displayed content are ordered in accordance with a ordering function, one parameter of which is the click through rates of the items (advertisements) being ordered.
In at least some situations, when displaying a set of informational items, informational items having high click through rates should be ranked higher, and displayed more prominently than informational items with lower click through rates, because the items with high click through rates are more likely to be of interest to the user(s).
However, if the information being sought, e.g., the meaning of a word, is already available from an informational item as presented in the search results (i.e., not requiring the user to click though to receive additional information), the search engine may not receive user feedback about the relevancy of the informational item to the search. The user has little motivation to provide feedback such as a click through because the user now has the information sought, or there may be no outbound link associated with the information item. Therefore, there is a need for collecting user feedback with respect to informational items presented in response to a search query and adjusting the relevancy values of the items in accordance with the user feedback, even if there is no click through information about one or more of the informational items.
According to some embodiments, one or more informational items are displayed in response to a search query. Each item occupies a respective region on a display and has a relevancy value associated with the search query. The user's browsing (e.g., pointer placement and/or movement) activities are monitored with respect to the displayed informational items. At least one informational item's relevancy value is adjusted in accordance with the user's browsing activities with respect to the item's respective region.
The aforementioned aspects of the invention as well as additional aspects will be more clearly understood as a result of the following detailed description of the various embodiments of the invention when taken in conjunction with the drawings. Like reference numerals refer to corresponding parts throughout the several views of the drawings.
In some embodiments, a client (also sometimes called a client device) 102 hosts a client application 104 and a client assistant 106. The client 102 may be a personal digital assistant (PDA), a personal computer (PC) or a workstation that can display the informational items within a search result, and the client application 104 can be a web browser or a standalone program that sends requests to and receives information from a database or a search engine. The client application 104 is used for displaying search results received from the search engine and the client assistant 106 is responsible for monitoring user browsing activities in connection with the search results and providing such information back to the search engine. In the context of this document, the term “monitoring user browsing activities” means monitoring a user's pointer activities (e.g., pointer placement and movement).
In some embodiments, the client application 104 is a browser (e.g., Firefox, Safari, Internet Explorer or others). In some embodiments, the server 130 includes a user response analysis unit 132 for receiving and analyzing user browsing activities (i.e., pointer activity, such as placement and movement) and a relevancy value update unit 134 for updating an informational item's relevancy value associated with a search query based on information received from the user response analysis unit 132. As a result, subsequent responses by the search engine to the same query or a similar search query from any client, may identify a new set of informational items and/or provide them in a different order in accordance with their updated relevancy values. While the explanations provided here use the term “relevancy value,” other terms such as “ranking value” or “query dependent ranking value” may also be used. The relevancy value of an informational item may be used for ordering or ranking results responsive to a search query or other query that produces a plurality of results.
Because an informational item's relevancy value associated with a search query is generally an aggregation of feedback regarding the item received from a community of users, it can serve to characterize the community's opinion about the relevancy between the informational item and the search query, or an underlying document associated with the informational item. An item found to be more relevant to a search query (or perhaps more accurately, found to be of more interest to the users who submit the search query), should be placed in a position to match its popularity among the community (e.g., being moved to a more prominent position in the display presented to the user). In some embodiments, the community is a set of users sharing at least one similar characteristic such as belonging to the same workgroup, using the same language, using the same type of client device, having an internet address associated with the same country or geographic region, or the like. Different communities would tend to produce different user feedback. Over time, an item receiving positive user feedback will tend to move to more prominent positions in the results and, conversely in some embodiments, an item receiving no feedback or negative feedback should move to lesser positions (e.g., downward) in the search result. In some embodiments, the relevancy value of an informational item is query-dependent and the same item may have different relevancy values associated with different search queries. In some embodiments, the relevancy value of an informational item will be a dynamic parameter since the community's opinion about the relevance between the informational item and a search query may vary with time. For example, as the popularity, frame or notoriety of a movie star, musician or politician rises and falls, the relevancy values of informational items about that person will similarly rise and fall.
There are many types of user browsing activities that may indicate a user's interest in an informational item responsive to a search query. For example, if after reviewing a snippet of a document associated with the informational item, the user determines that the underlying document may contains relevant information, the user may click through an embedded link to visit a complete version of the document. A typical user's behavior is to move the mouse pointer (or any other pointing indicator) over or near a target informational item, keep the mouse pointer there for a period of time while the user reads the item's information (e.g., title and snippet), and then click through the underlying link or move to another item. Sometimes, a user may review multiple informational items responsive to a search query, moving a pointer over or near each of the informational items that the user reviews. These various pointer activities can provide another way to evaluate the user's feedback with respect to a particular informational item. A longer pointer hover period may suggest a more positive opinion from the user about the relevance between the informational item and the user's interest. Sometimes, a particular pointer movement pattern may provide additional information about a user's interest. For example, a user moving the pointer across the snippet line by line at a normal reading speed suggests a higher level of attention that the user paid to the informational item than if the pointer had been kept in a static position or moved randomly. An informational item that is associated with a click-through may be more relevant to a search query than another item that receives user attention, such as pointer hover time greater than a threshold value, but no mouse-down action.
In some embodiments, the client assistant 106 shown in FIG. 1 is primarily responsible for gathering information about various user browsing activities and the server 130 is primarily responsible for analyzing the information collected by the client assistant 106 and updating relevancy values of informational items accordingly. In other embodiments, the distinction is less clear and the client assistant 106 and the server 130 may have varying degrees of responsibility. In embodiments where the client assistant 106 assumes a substantial amount of workload (e.g., conducting preliminary relevancy analysis and selecting one type of user browsing activity over another one), the client assistant 106 is referred to as a thick-client. In embodiments where the client assistant 106 does little analysis and passes substantially all information about a user's browsing activities to the server, the client assistant 106 is referred to as a thin-client. Any flavor of the client assistant 106, (i.e., thick-client, thin-client or something in between), may be implemented using executable code such as JavaScript which may be included in the page of search results, as a plug-in application program attached to the client application 104 (e.g., a toolbar), or a stand-alone application.
In some embodiments, the client assistant 106 monitors a predefined region of the display that is associated with the informational item, and the user's pointer placement activities with respect to that predefined region (230-A). For example, the client assistant 106 identifies when the user moves the pointer into the predefined region and when the user moves the pointer out of the predefined region. Based on these two identifications, the client assistant determines a continuous hover period or client attention period. In some embodiments, the client assistant 106 then determines whether this client attention period is greater than a threshold value (240-A).
If the client attention period is greater than the threshold value (240-A, yes), the client assistant 106 sends the information associated with the user's pointer placement activity including the client attention period to a server (250-A) for further processing. Otherwise (240-A, no), the client assistant 106 does not send the information it has gathered and returns to monitoring pointer movements. Since a search result often includes many informational items and the pointer often temporarily passes through many regions associated with different items on its way to the target item, these brief hovers are usually too short to reflect any genuine user interest in the underlying informational items. Skipping these items by appropriately setting the threshold value also reduces the server-side workload, since less information about the user's mouse activities is sent over to the server side for further processing.
In some embodiments, the information about a user's pointer placement activities that is transferred back to a server may be used to modify the information currently being presented to the user. For instance, when a user hovers a pointer over a definition in a onebox, and information about the pointer hover is conveyed to the server, the server may send a more complete definition to the client for immediate display. In one exemplary implementation, the additional information is displayed in a pop-up window. In yet other embodiments, the additional information is conveyed to the client by the server with the initial web page or search results, or is otherwise conveyed before the user pointer hover over the item has been determined, and in these embodiments the additional information is displayed by the client system (without further assistance from the server) when the user's pointer hover activity meets predefined criteria, such as hovering more than a threshold period of time.
As mentioned above, a user's feedback with respect to an informational item may appear in many forms of user pointer placements or actions, sometimes called user browsing activities. It will be understood by one skilled in the art that the client assistant can track other types of mouse or pointer actions, e.g., when and where the mouse button is pressed down, how long the mouse pointer is over the title of the informational item or how long it is within the snippet of the informational item. In some embodiments, mouse or pointer hovering over different sections of an informational item carry different weights in determining its relevancy value. For example, hover time over a first portion (e.g., a snippet portion) of an informational item may be assigned a first weight W1, while hover time over a second portion (e.g., a descriptor, such as a title portion) of the informational item may be assigned a distinct, second weight W2. In the present invention, such information including the pointer hover period is commonly referred to as “client attention data” that is used by the server when determining the relevancy value of the informational item associated with the search query. Further, the techniques described herein are not limited to the use of a mouse pointing device. Rather, the techniques and embodiments disclosed herein apply equally well to any type of device which tends to indicate a user's pointing to regions of the display (e.g., tablets, touch-screens, eye movement detectors, light pens and so on).
The relevancy value of an informational item associated with user pointer activities can be a statistical parameter that becomes increasingly more reliable as the server accumulates increasing amounts of client attention data. In some embodiments, the server is responsible for updating an informational item's relevancy value according to a predetermined schedule, e.g., every day or every week, using its associated client attention data and impression data, as well as query-independent information such as PageRank. In other embodiments, an informational item's relevancy value is updated or recomputed at query time, while computing the rankings or orderings of the information items included in the results for a search query.
Next, the server aggregates client attention data that is received from the client devices over a predefined time period (320) and generates a client attention coefficient for each of a plurality of informational items by analyzing the impression data and client attention data (340). For each informational item for which sufficient client attention data has been collected to generate a new or revised relevancy value, the server combines the client attention coefficients associated with the informational item with their respective query-independent metrics, e.g., PageRank, indicating the informational item's importance or popularity (350) and generates a new relevancy value or updates an existing one for each informational item (360). In other words, in some embodiments, the relevancy value of an informational item includes both query-dependent components, e.g., client attention data, and query-independent ones, e.g., PageRank. In some embodiments, the client attention data and query-independent data are stored in different fields and in some embodiments they are combined in a single field. As noted above, the generation of an update relevancy value may be performed at query time, while ordering the results for a search query, where the results include an informational item for which client attention information is available. The query time updating of the relevancy value may include operation 360, or operations 340, 350 and 360.
The new relevancy values as well as other forms of client attention data can be stored in a data structure, each one associated with an informational item. In some embodiments, the information is associated with a particular search query. Data structure 400 of FIG. 4 depicts such a data structure for storing information associated with different informational items according to some embodiments of the present invention. The informational items may be a document, an advertising item, or a piece of information associated with a particular search query, e.g., a dictionary definition of an English word.
Upon receiving a new search query from a client device, the server identifies in its database one or more informational items relevant to the query and then retrieves the relevancy values of the identified informational items associated with the search query from the data structure. The identified informational items are ordered in accordance with their relevancy values and returned to the requesting client device.
For example, when a user submits a search query “agrestic”, the user probably desires to know the word's definition since it is not a common word. Accordingly, the definition of the word “agrestic” is chosen to be placed in the one-box result responsive to the search query. There may be other results in the onebox area. Similarly, if a user submits a search query “goog”, his intent is probably to get the instant price quote for Google's stock since “GOOG” happens to be the stock symbol for Google Incorporated. Accordingly, it is desirable for the onebox results to provide the stock quote, e.g., the current price of the stock and perhaps even a graph showing the stock's price trend. As with the dictionary definition example, if the onebox result matched the user's interest, the user would probably move the pointer into a region defined by the result and keep the pointer there while reading the information. In other words, the user's interest is demonstrated by a pointer hover period associated with the onebox result. On the other hand, when the user does not move the pointer to the box or moves the pointer away from the result this can be interpreted in at least two ways: 1) the onebox result was not of interest to the user; or 2) the user was interested, but did not move the pointer toward the onebox result. In some embodiments, this produces negative feedback regarding client attention (e.g., when the user moves the pointer away from the informational item). In some embodiments, this information is simply not utilized. In some embodiments, the onebox result includes links whose click-throughs can be identified. A click-though indicates a positive reaction from the client which would tend to raise a relevancy value of the information item associated with the link. After receiving sufficient negative feedback or lack of positive feedback, the search engine may replace the current onebox result(s) with different informational items based on the client attention data or simply stop producing the onebox result(s). In some embodiments, the informational items presented in the onebox results are ordered in accordance with the client attention data and/or relevancy values.
Similarly, relevancy values of informational items relevant to a search query can be used to order them in a search result as shown in FIG. 5B . After receiving a search query (510-B), the search engine identifies search results comprising one or more informational items, if any, that are relevant to the search query (520-B), each informational item may include a title, a snippet and a link to another document (e.g., a web page). A snippet is generally a selected portion of text from the informational item, and preferably comprises text that includes at least one of the search terms in the search query. If an identified informational item in the search results does not have an associated URL (uniform resource locator), the informational item does not include a link. Next, the search engine orders the informational items (530-B) in accordance with their respective relevancy values associated with the search query. When an informational item in the search results has a corresponding record 402 (see FIG. 4 ) that includes a relevant query-dependent relevancy value 480, the query-dependent relevancy value 480 in that record 402 is used for ordering that information item with respect to the other informational items in the search results. As shown in FIG. 4 , in some embodiments, the relevancy value of each informational item is based on both query-dependent client attention data and query-independent ranking information. Finally, the server returns the ordered informational items as a set of search results to the requesting client device (540-B). Subsequently, the user's new pointer activities over the search results, e.g., the pointer placements and/or movements, are monitored for next update of the items' relevancy values. In some embodiments, the user feedback regarding a particular informational item is reflected in a modification of the query independent ranking information.
-
- an
operating system 616 that includes procedures for handling various basic system services and for performing hardware dependent tasks; - a network communication module (or instructions) 618 that is used for connecting the
client computer 600 to other computers via the one or more network communications interfaces 610 (via wired or wireless connection), using the Internet, other wide area networks, local area networks, metropolitan area networks, and so on; - a
client application module 104 that is used for receiving search queries and displaying search results responsive to the search queries, e.g., a web browser; and - a
client assistant module 106 that is used for recording the pointer activities (including pointer placement and/or movement activities) of users and transferring such information to a server computer.
- an
Each of the above identified modules and applications corresponds to a set of instructions for performing one or more functions described above. These modules (i.e., sets of instructions) need not be implemented as separate software programs, procedures or modules, and thus various subsets of these modules may be combined or otherwise rearranged in various embodiments. In some embodiments, memory 612 may store a subset of the modules and applications identified above. Furthermore, memory 206 may store additional modules, applications and data structures not described above.
-
- an
operating system 716 that includes procedures for handling various basic system services and for performing hardware dependent tasks; - a network communication module (or instructions) 718 that is used for connecting the
server computer 700 to other computers via the one or more network communications interfaces 710 (via wired or wireless connection), using the Internet, other wide area networks, local area networks, metropolitan area networks, and so on; - a server module (or instructions) 720 that is used for interpreting search queries, identifying informational items that are relevant to each search query and returning search results to requesting
client computers 600; - user response analysis module (or instructions) 132, as described above;
- a relevancy value update module (or instructions) 134 that is used for adjusting an informational item's relevancy or ranking value associated with a search query based upon user feedback and/or other query-independent and/or query-dependent factors;
-
user response information 732 that includes information associated with informational items and may include a subset of or superset of the information indata structure 400 including, for example, impression data 732-1, client attention data 732-2, client attention periods 732-3, a threshold value 732-4, client attention coefficients 732-5 or other information 732-6, such as various other query-dependent and/or query independent information; - a relevancy
value data structure 722 storing the relevancy values generated by the relevancyvalue update module 134; and -
informational items 724 as described above.
- an
Each of the above identified modules and applications corresponds to a set of instructions for performing one or more functions described above. These modules (i.e., sets of instructions) need not be implemented as separate software programs, procedures or modules, and thus various subsets of these modules may be combined or otherwise rearranged in various embodiments. In some embodiments, memory 612 may store a subset of the modules, applications and data structures identified above. Furthermore, memory 712 may store additional modules, applications and data structures not described above.
Although FIG. 7 shows server 700 as a number of discrete items, FIG. 7 is intended more as a functional description of the various features which may be present in server 700 rather than as a structural schematic of the embodiments described herein. In practice, and as recognized by those of ordinary skill in the art, items shown separately could be combined and some items could be separated. For example, some items shown separately in FIG. 7 could be implemented on single servers and single items could be implemented by one or more servers. The actual number of servers in server 700 and how features are allocated among them will vary from one implementation to another, and may depend in part on the amount of data traffic that the system must handle during peak usage periods as well as during average usage periods.
Although certain elements are depicted as being in the client computer 600 or the server computer 700, certain elements may be located in whole or in part in the other, or distributed among a plurality of computers. For example, the user response information 732 could be partially located in the client computer 600. As another example, the information items 724 could reside on a plurality of computers.
Although some of various drawings illustrate a number of logical stages in a particular order, stages which are not order dependent may be reordered and other stages may be combined or broken out. While some reordering or other groupings are specifically mentioned, others will be obvious to those of ordinary skill in the art and so do not present an exhaustive list of alternatives. Moreover, it should be recognized that the stages could be implemented in hardware, firmware, software or any combination thereof.
The foregoing description, for purpose of explanation, has been described with reference to specific embodiments. However, the illustrative discussions above are not intended to be exhaustive or to limit the invention to the precise forms disclosed. Many modifications and variations are possible in view of the above teachings.
Claims (21)
1. A method of providing search results responsive to search queries, comprising:
at a server system having one or more processors and memory storing one or more programs for execution by the one or more processors:
receiving from client devices user hover periods associated with a plurality of search results which correspond to multiple search queries, a respective user hover period comprising information about a length of time that a user hovers a user-controlled pointer over a display region occupied by a respective search result of the plurality of search results and wherein the respective hover period comprises a period of time during which the user-controlled pointer hovers over the display region occupied by the respective search result without user selection of the respective search result;
updating relevancy values of the search results at least partially in accordance with their respective user hover periods; and
in response to a search query after the update of the relevancy values, identifying a set of search results for the search query in accordance with their relevancy values, the set of search results including at least one search result whose respective relevancy value has been updated at least partially in accordance with one or more respective user hover periods.
2. The method of claim 1 , wherein updating relevancy values includes:
retrieving impression data associated with the plurality of search results provided to the client devices in response to the search queries, wherein the impression data comprises data identifying how many times and in what order the search results in the plurality of search results have been provided to the client devices in response to the search queries;
receiving from at least a subset of the client devices client attention data, the client attention data including the user hover period associated with a respective search result if the hover period is greater than a threshold value; and
updating the relevancy values for at least a subset of the plurality of search results in accordance with their respective impression data and client attention data.
3. The method of claim 2 , wherein the updating the relevancy values includes:
generating at least one client attention coefficient for each of the search results in the subset of the plurality of search results in accordance with the impression data and the client attention data corresponding to the search results;
combining the at least one client attention coefficient associated with each search result in the subset with at least one other query-independent metric of the search result's importance or popularity; and
generating a relevancy value for each search result in the subset of the plurality of search results in accordance with its combined client attention coefficients and the at least one other query-independent metric of the search item's importance or popularity.
4. The method of claim 1 , further including providing to a respective client device of the client devices additional information concerning a respective search result of the set of search results over which the user-controlled pointer is hovering.
5. The method of claim 1 , wherein a respective search result of the plurality of search results includes at least a first portion and a second portion and the hover periods with respect to the first and second portions have different weights when they are used for updating the respective search result's relevancy value.
6. The method of claim 5 , wherein the first portion of the respective search result is a descriptor and the second portion of the respective search result is a snippet.
7. The method of claim 5 , wherein the updating of the respective search result's relevancy value occurs only when the respective hover period is greater than a threshold value.
8. A server system for providing search results responsive to search queries, comprising:
a memory;
one or more processors; and
a program, wherein the program is stored in the memory and configured to be executed by the one or more processors, the program comprising:
instructions for receiving from client devices user hover periods associated with a plurality of search results which correspond to multiple search queries, a respective user hover period comprising information about a length of time that a user hovers a user-controlled pointer over a display region occupied by a respective search result of the plurality of search results and wherein the respective hover period comprises a period of time during which the user-controlled pointer hovers over the display region occupied by the respective search result without user selection of the respective search result;
instructions for updating relevancy values of the search results at least partially in accordance with their respective user hover periods; and
instructions for responding to a search query after the update of the relevancy values by identifying a set of search results for the search query in accordance with their relevancy values, the set of search results including at least one search result whose respective relevancy value has been updated at least partially in accordance with one or more respective user hover periods.
9. The system of claim 8 , wherein updating relevancy values includes:
instructions for retrieving impression data associated with the plurality of search results provided to the client devices in response to the search queries, wherein the impression data comprises data identifying how many times and in what order the search results in the plurality of search results have been provided to the client devices in response to the search queries;
instructions for receiving from at least a subset of the client devices client attention data, the client attention data including the user hover period associated with a respective search result if the hover period is greater than a threshold value; and
instructions for updating the relevancy values for at least a subset of the plurality of search results in accordance with their respective impression data and client attention data.
10. The system of claim 9 , wherein the updating the relevancy values includes:
instructions for generating at least one client attention coefficient for each of the search results in the subset of the plurality of search results in accordance with the impression data and the client attention data corresponding to the search results;
instructions for combining the at least one client attention coefficient associated with each search result in the subset of the plurality of search results with at least one other query-independent metric of the search result's importance or popularity; and
instructions for generating a relevancy value for each search result in the subset of the plurality of search results in accordance with its combined client attention coefficients and the at least one other query-independent metric of the search item's importance or popularity.
11. The system of claim 8 , further including instructions for providing to a respective client device of the client devices additional information concerning a respective search result of the set of search results over which the user-controlled pointer is hovering.
12. The system of claim 8 , wherein a respective search result of the plurality of search results includes at least a first portion and a second portion and the hover periods with respect to the first and second portions have different weights when they are used for updating the respective search result's relevancy value.
13. The system of claim 12 , wherein the first portion of the respective search result is a descriptor and the second portion of the respective search result is a snippet.
14. The system of claim 12 , wherein the updating the respective search result's relevancy value occurs when the respective hover period is greater than a threshold value.
15. A non-transitory computer readable storage medium storing one or more programs for execution by a server system, the one or more programs comprising:
instructions for receiving at the server from client devices user hover periods associated with a plurality of search results which correspond to multiple search queries, a respective user hover period comprising information about a length of time that a user hovers a user-controlled pointer over a display region occupied by a respective search result of the plurality of search results and wherein the respective hover period comprises a period of time during which the user-controlled pointer hovers over the display region occupied by the respective search result without user selection of the respective search result;
instructions for updating relevancy values of the search results at least partially in accordance with their respective user hover periods; and
instructions for responding to a search query after the update of the relevancy values by identifying a set of search results for the search query in accordance with their relevancy values, the set of search results including at least one search result whose respective relevancy value has been updated at least partially in accordance with one or more respective user hover periods.
16. The non-transitory computer readable storage medium of claim 15 , wherein the instructions for updating relevancy values include:
instructions for retrieving impression data associated with the plurality of search results provided to the client devices in response to the search queries, wherein the impression data comprises data identifying how many times and in what order the search results in the plurality of search results have been provided to the client devices in response to the search queries;
instructions for receiving from at least a subset of the client devices client attention data, the client attention data including the user hover period associated with a respective search result if the hover period is greater than a threshold value; and
instructions for updating the relevancy values for at least a subset of the plurality of search results in accordance with their respective impression data and client attention data.
17. The non-transitory computer readable storage medium of claim 16 , wherein the instructions for updating the relevancy values include:
instructions for generating at least one client attention coefficient for each of the search results in the subset of the plurality of search results in accordance with the impression data and the client attention data corresponding to the search results;
instructions for combining the at least one client attention coefficient associated with each search result in the subset of the plurality of search results with at least one other query-independent metric of the search result's importance or popularity; and
instructions for generating a relevancy value for each search result in the subset of the plurality of search results in accordance with its combined client attention coefficients and the at least one other query-independent metric of the search item's importance or popularity.
18. The non-transitory computer readable storage medium of claim 15 , further including instructions for providing to a respective client device of the client devices additional information concerning a respective search result of the set of search results over which the user-controlled pointer is hovering.
19. The non-transitory computer readable storage medium of claim 15 , wherein a respective search result of the plurality of search results includes at least a first portion and a second portion and the hover periods with respect to the first and second portions have different weights when they are used for updating the respective search result's relevancy value.
20. The non-transitory computer readable storage medium of claim 19 , wherein the first portion of the respective search result is a descriptor and the second portion of the respective search result is a snippet.
21. The non-transitory computer readable storage medium of claim 19 , wherein the instructions for updating the relevancy values include instructions for updating the respective search result's relevancy value only when the respective hover period is greater than a threshold value.
Priority Applications (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US12/752,017 US8620943B2 (en) | 2004-12-30 | 2010-03-31 | System and method for modulating search relevancy using pointer activity monitoring |
US14/094,419 US9396238B2 (en) | 2004-12-30 | 2013-12-02 | Systems and methods for determining user preferences |
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US2692104A | 2004-12-30 | 2004-12-30 | |
US11/059,794 US7756887B1 (en) | 2004-12-30 | 2005-02-16 | System and method for modulating search relevancy using pointer activity monitoring |
US12/752,017 US8620943B2 (en) | 2004-12-30 | 2010-03-31 | System and method for modulating search relevancy using pointer activity monitoring |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US11/059,794 Continuation US7756887B1 (en) | 2004-12-30 | 2005-02-16 | System and method for modulating search relevancy using pointer activity monitoring |
Related Child Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US14/094,419 Continuation US9396238B2 (en) | 2004-12-30 | 2013-12-02 | Systems and methods for determining user preferences |
Publications (2)
Publication Number | Publication Date |
---|---|
US20100191726A1 US20100191726A1 (en) | 2010-07-29 |
US8620943B2 true US8620943B2 (en) | 2013-12-31 |
Family
ID=42314194
Family Applications (3)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US11/059,794 Active 2026-05-08 US7756887B1 (en) | 2004-12-30 | 2005-02-16 | System and method for modulating search relevancy using pointer activity monitoring |
US12/752,017 Active US8620943B2 (en) | 2004-12-30 | 2010-03-31 | System and method for modulating search relevancy using pointer activity monitoring |
US14/094,419 Active US9396238B2 (en) | 2004-12-30 | 2013-12-02 | Systems and methods for determining user preferences |
Family Applications Before (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US11/059,794 Active 2026-05-08 US7756887B1 (en) | 2004-12-30 | 2005-02-16 | System and method for modulating search relevancy using pointer activity monitoring |
Family Applications After (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US14/094,419 Active US9396238B2 (en) | 2004-12-30 | 2013-12-02 | Systems and methods for determining user preferences |
Country Status (1)
Country | Link |
---|---|
US (3) | US7756887B1 (en) |
Cited By (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20150278353A1 (en) * | 2014-03-31 | 2015-10-01 | Linkedln Corporation | Methods and systems for surfacing content items based on impression discounting |
Families Citing this family (47)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8412514B1 (en) | 2005-10-27 | 2013-04-02 | At&T Intellectual Property Ii, L.P. | Method and apparatus for compiling and querying a QA database |
US9135304B2 (en) * | 2005-12-02 | 2015-09-15 | Salesforce.Com, Inc. | Methods and systems for optimizing text searches over structured data in a multi-tenant environment |
US8156073B1 (en) * | 2006-03-29 | 2012-04-10 | Amazon Technologies, Inc. | Item attribute generation using query and item data |
WO2008011065A2 (en) * | 2006-07-17 | 2008-01-24 | Next Jump, Inc. | Communication system and method for narrowcasting |
KR20080010898A (en) * | 2006-07-28 | 2008-01-31 | 삼성전자주식회사 | Method for preprocessing contents and contents providing apparatus using the method |
US8954886B2 (en) * | 2006-08-02 | 2015-02-10 | Ebay Inc. | System to present additional item information |
US20100191600A1 (en) * | 2006-08-10 | 2010-07-29 | Gil Sideman | System and method for targeted auctioning of available slots in a delivery network |
US8661029B1 (en) | 2006-11-02 | 2014-02-25 | Google Inc. | Modifying search result ranking based on implicit user feedback |
US8938463B1 (en) | 2007-03-12 | 2015-01-20 | Google Inc. | Modifying search result ranking based on implicit user feedback and a model of presentation bias |
US8694374B1 (en) | 2007-03-14 | 2014-04-08 | Google Inc. | Detecting click spam |
US9092510B1 (en) | 2007-04-30 | 2015-07-28 | Google Inc. | Modifying search result ranking based on a temporal element of user feedback |
US8694511B1 (en) | 2007-08-20 | 2014-04-08 | Google Inc. | Modifying search result ranking based on populations |
JP2009053757A (en) * | 2007-08-23 | 2009-03-12 | Toshiba Corp | Information processing apparatus, input method and program |
US8909655B1 (en) | 2007-10-11 | 2014-12-09 | Google Inc. | Time based ranking |
US8180780B2 (en) * | 2007-12-06 | 2012-05-15 | International Business Machines Corporation | Collaborative program development method and system |
US8261299B2 (en) | 2008-05-22 | 2012-09-04 | At&T Intellectual Property I, L.P. | Methods and computer program products for reporting internet protocol television related data collected from application and device data |
US8396865B1 (en) | 2008-12-10 | 2013-03-12 | Google Inc. | Sharing search engine relevance data between corpora |
US8315953B1 (en) | 2008-12-18 | 2012-11-20 | Andrew S Hansen | Activity-based place-of-interest database |
US9009146B1 (en) | 2009-04-08 | 2015-04-14 | Google Inc. | Ranking search results based on similar queries |
US20100287174A1 (en) * | 2009-05-11 | 2010-11-11 | Yahoo! Inc. | Identifying a level of desirability of hyperlinked information or other user selectable information |
US8447760B1 (en) | 2009-07-20 | 2013-05-21 | Google Inc. | Generating a related set of documents for an initial set of documents |
US8498974B1 (en) | 2009-08-31 | 2013-07-30 | Google Inc. | Refining search results |
US8972391B1 (en) | 2009-10-02 | 2015-03-03 | Google Inc. | Recent interest based relevance scoring |
US8874555B1 (en) | 2009-11-20 | 2014-10-28 | Google Inc. | Modifying scoring data based on historical changes |
US9262526B2 (en) * | 2010-01-28 | 2016-02-16 | Karl Muth | System and method for compiling search results using information regarding length of time users spend interacting with individual search results |
US8615514B1 (en) | 2010-02-03 | 2013-12-24 | Google Inc. | Evaluating website properties by partitioning user feedback |
US8924379B1 (en) | 2010-03-05 | 2014-12-30 | Google Inc. | Temporal-based score adjustments |
US8959093B1 (en) | 2010-03-15 | 2015-02-17 | Google Inc. | Ranking search results based on anchors |
US8880520B2 (en) * | 2010-04-21 | 2014-11-04 | Yahoo! Inc. | Selectively adding social dimension to web searches |
US20110264639A1 (en) * | 2010-04-21 | 2011-10-27 | Microsoft Corporation | Learning diverse rankings over document collections |
US8375305B1 (en) * | 2010-05-14 | 2013-02-12 | Amazon Technologies, Inc. | Placement of user interface elements based on a window entry or exit point |
US9623119B1 (en) | 2010-06-29 | 2017-04-18 | Google Inc. | Accentuating search results |
US8832083B1 (en) | 2010-07-23 | 2014-09-09 | Google Inc. | Combining user feedback |
US9002867B1 (en) | 2010-12-30 | 2015-04-07 | Google Inc. | Modifying ranking data based on document changes |
US11841912B2 (en) | 2011-05-01 | 2023-12-12 | Twittle Search Limited Liability Company | System for applying natural language processing and inputs of a group of users to infer commonly desired search results |
US8326862B2 (en) * | 2011-05-01 | 2012-12-04 | Alan Mark Reznik | Systems and methods for facilitating enhancements to search engine results |
US20130238612A1 (en) * | 2012-03-08 | 2013-09-12 | Xerox Corporation | Method and apparatus for providing refined search results for a query based on one or more user interactions |
US9304584B2 (en) | 2012-05-31 | 2016-04-05 | Ca, Inc. | System, apparatus, and method for identifying related content based on eye movements |
AU2013368884A1 (en) * | 2012-12-28 | 2015-08-13 | Fabtale Productions Pty Ltd | Method and system for analyzing the level of user engagement within an electronic document |
US9183499B1 (en) | 2013-04-19 | 2015-11-10 | Google Inc. | Evaluating quality based on neighbor features |
US10528980B2 (en) | 2014-06-09 | 2020-01-07 | Adobe Inc. | Targeted marketing using dynamically varied recommendations |
US9990116B2 (en) * | 2014-08-29 | 2018-06-05 | Sap Se | Systems and methods for self-learning dynamic interfaces |
US10229212B2 (en) | 2016-04-08 | 2019-03-12 | Microsoft Technology Licensing, Llc | Identifying Abandonment Using Gesture Movement |
US10970459B2 (en) | 2017-12-07 | 2021-04-06 | Paypal, Inc. | Dynamic web content based on contextual profile |
US11232163B2 (en) * | 2018-08-23 | 2022-01-25 | Walmart Apollo, Llc | Method and apparatus for ecommerce search ranking |
US11127064B2 (en) | 2018-08-23 | 2021-09-21 | Walmart Apollo, Llc | Method and apparatus for ecommerce search ranking |
US11709653B1 (en) | 2022-04-11 | 2023-07-25 | Google Llc | Contextual assistant using mouse pointing or touch cues |
Citations (26)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20010018685A1 (en) | 2000-02-21 | 2001-08-30 | Sony Corporation | Information processing apparatus and method and program storage medium |
US6285999B1 (en) | 1997-01-10 | 2001-09-04 | The Board Of Trustees Of The Leland Stanford Junior University | Method for node ranking in a linked database |
US20020042923A1 (en) | 1992-12-09 | 2002-04-11 | Asmussen Michael L. | Video and digital multimedia aggregator content suggestion engine |
US6563514B1 (en) * | 2000-04-13 | 2003-05-13 | Extensio Software, Inc. | System and method for providing contextual and dynamic information retrieval |
US20040003042A1 (en) * | 2001-06-28 | 2004-01-01 | Horvitz Eric J. | Methods and architecture for cross-device activity monitoring, reasoning, and visualization for providing status and forecasts of a users' presence and availability |
US20040098462A1 (en) | 2000-03-16 | 2004-05-20 | Horvitz Eric J. | Positioning and rendering notification heralds based on user's focus of attention and activity |
US20040128356A1 (en) | 2001-06-25 | 2004-07-01 | Keith Bernstein | Email integrated instant messaging |
US20040128359A1 (en) | 2000-03-16 | 2004-07-01 | Horvitz Eric J | Notification platform architecture |
US20040205514A1 (en) * | 2002-06-28 | 2004-10-14 | Microsoft Corporation | Hyperlink preview utility and method |
US20040267723A1 (en) | 2003-06-30 | 2004-12-30 | Krishna Bharat | Rendering advertisements with documents having one or more topics using user topic interest information |
US20050044224A1 (en) | 2003-06-29 | 2005-02-24 | Gyuchang Jun | Dynamic indicator for context sensitive real-time communications |
US20050084082A1 (en) | 2003-10-15 | 2005-04-21 | Microsoft Corporation | Designs, interfaces, and policies for systems that enhance communication and minimize disruption by encoding preferences and situations |
US20050149498A1 (en) * | 2003-12-31 | 2005-07-07 | Stephen Lawrence | Methods and systems for improving a search ranking using article information |
US20050182773A1 (en) * | 2004-02-18 | 2005-08-18 | Feinsmith Jason B. | Machine-implemented activity management system using asynchronously shared activity data objects and journal data items |
US20050210008A1 (en) * | 2004-03-18 | 2005-09-22 | Bao Tran | Systems and methods for analyzing documents over a network |
US20050223067A1 (en) | 2004-03-31 | 2005-10-06 | Buchheit Paul T | Providing snippets relevant to a search query in a conversation-based email system |
US20050289133A1 (en) * | 2004-06-25 | 2005-12-29 | Yan Arrouye | Methods and systems for managing data |
US20060031253A1 (en) | 2004-08-04 | 2006-02-09 | Newbold David L | System and method for locating documents a user has previously accessed |
US20060031183A1 (en) * | 2004-08-04 | 2006-02-09 | Tolga Oral | System and method for enhancing keyword relevance by user's interest on the search result documents |
US20060041521A1 (en) * | 2004-08-04 | 2006-02-23 | Tolga Oral | System and method for providing graphical representations of search results in multiple related histograms |
US20060047804A1 (en) * | 2004-06-30 | 2006-03-02 | Fredricksen Eric R | Accelerating user interfaces by predicting user actions |
US20060074984A1 (en) * | 2004-09-27 | 2006-04-06 | Scott Milener | Graphical tree depicting search or browsing history |
US7100123B1 (en) | 2002-01-25 | 2006-08-29 | Microsoft Corporation | Electronic content search and delivery based on cursor location |
US7130885B2 (en) | 2000-09-05 | 2006-10-31 | Zaplet, Inc. | Methods and apparatus providing electronic messages that are linked and aggregated |
US7162471B1 (en) | 1999-05-11 | 2007-01-09 | Maquis Techtrix Llc | Content query system and method |
US20080201315A1 (en) * | 2007-02-21 | 2008-08-21 | Microsoft Corporation | Content item query formulation |
Family Cites Families (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6448980B1 (en) * | 1998-10-09 | 2002-09-10 | International Business Machines Corporation | Personalizing rich media presentations based on user response to the presentation |
US7162473B2 (en) * | 2003-06-26 | 2007-01-09 | Microsoft Corporation | Method and system for usage analyzer that determines user accessed sources, indexes data subsets, and associated metadata, processing implicit queries based on potential interest to users |
GB2411014A (en) * | 2004-02-11 | 2005-08-17 | Autonomy Corp Ltd | Automatic searching for relevant information |
-
2005
- 2005-02-16 US US11/059,794 patent/US7756887B1/en active Active
-
2010
- 2010-03-31 US US12/752,017 patent/US8620943B2/en active Active
-
2013
- 2013-12-02 US US14/094,419 patent/US9396238B2/en active Active
Patent Citations (27)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20020042923A1 (en) | 1992-12-09 | 2002-04-11 | Asmussen Michael L. | Video and digital multimedia aggregator content suggestion engine |
US6285999B1 (en) | 1997-01-10 | 2001-09-04 | The Board Of Trustees Of The Leland Stanford Junior University | Method for node ranking in a linked database |
US7162471B1 (en) | 1999-05-11 | 2007-01-09 | Maquis Techtrix Llc | Content query system and method |
US20010018685A1 (en) | 2000-02-21 | 2001-08-30 | Sony Corporation | Information processing apparatus and method and program storage medium |
US20040098462A1 (en) | 2000-03-16 | 2004-05-20 | Horvitz Eric J. | Positioning and rendering notification heralds based on user's focus of attention and activity |
US20040128359A1 (en) | 2000-03-16 | 2004-07-01 | Horvitz Eric J | Notification platform architecture |
US7243130B2 (en) | 2000-03-16 | 2007-07-10 | Microsoft Corporation | Notification platform architecture |
US6563514B1 (en) * | 2000-04-13 | 2003-05-13 | Extensio Software, Inc. | System and method for providing contextual and dynamic information retrieval |
US7130885B2 (en) | 2000-09-05 | 2006-10-31 | Zaplet, Inc. | Methods and apparatus providing electronic messages that are linked and aggregated |
US20040128356A1 (en) | 2001-06-25 | 2004-07-01 | Keith Bernstein | Email integrated instant messaging |
US20040003042A1 (en) * | 2001-06-28 | 2004-01-01 | Horvitz Eric J. | Methods and architecture for cross-device activity monitoring, reasoning, and visualization for providing status and forecasts of a users' presence and availability |
US7100123B1 (en) | 2002-01-25 | 2006-08-29 | Microsoft Corporation | Electronic content search and delivery based on cursor location |
US20040205514A1 (en) * | 2002-06-28 | 2004-10-14 | Microsoft Corporation | Hyperlink preview utility and method |
US20050044224A1 (en) | 2003-06-29 | 2005-02-24 | Gyuchang Jun | Dynamic indicator for context sensitive real-time communications |
US20040267723A1 (en) | 2003-06-30 | 2004-12-30 | Krishna Bharat | Rendering advertisements with documents having one or more topics using user topic interest information |
US20050084082A1 (en) | 2003-10-15 | 2005-04-21 | Microsoft Corporation | Designs, interfaces, and policies for systems that enhance communication and minimize disruption by encoding preferences and situations |
US20050149498A1 (en) * | 2003-12-31 | 2005-07-07 | Stephen Lawrence | Methods and systems for improving a search ranking using article information |
US20050182773A1 (en) * | 2004-02-18 | 2005-08-18 | Feinsmith Jason B. | Machine-implemented activity management system using asynchronously shared activity data objects and journal data items |
US20050210008A1 (en) * | 2004-03-18 | 2005-09-22 | Bao Tran | Systems and methods for analyzing documents over a network |
US20050223067A1 (en) | 2004-03-31 | 2005-10-06 | Buchheit Paul T | Providing snippets relevant to a search query in a conversation-based email system |
US20050289133A1 (en) * | 2004-06-25 | 2005-12-29 | Yan Arrouye | Methods and systems for managing data |
US20060047804A1 (en) * | 2004-06-30 | 2006-03-02 | Fredricksen Eric R | Accelerating user interfaces by predicting user actions |
US20060031253A1 (en) | 2004-08-04 | 2006-02-09 | Newbold David L | System and method for locating documents a user has previously accessed |
US20060031183A1 (en) * | 2004-08-04 | 2006-02-09 | Tolga Oral | System and method for enhancing keyword relevance by user's interest on the search result documents |
US20060041521A1 (en) * | 2004-08-04 | 2006-02-23 | Tolga Oral | System and method for providing graphical representations of search results in multiple related histograms |
US20060074984A1 (en) * | 2004-09-27 | 2006-04-06 | Scott Milener | Graphical tree depicting search or browsing history |
US20080201315A1 (en) * | 2007-02-21 | 2008-08-21 | Microsoft Corporation | Content item query formulation |
Non-Patent Citations (5)
Title |
---|
Google News, messages 1-15, downloaded from http://www.webmasterworld.com/forum3/18425.htm on Nov. 20, 2003, 5 pages. |
Google News, messages 16-20 downloaded from http://www.webmasterworld.com/forum3/18425-2-15.htm on Nov. 20, 2003, 3 pages. |
Netflix Source Code, associated with http://www.netflix.com/RateMovies, downloaded over the Internet on Apr. 12, 2004, 10 pages. |
Rate Movies, downloaded from http://www.netflix.com/RateMovies on Apr. 12, 2004, 2 pages. |
XML-RPC JavaScript Message Builder, downloaded from http://www.scottandrew.com/xml-rcp/ on Apr. 6, 2004, 6 pages. |
Cited By (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20150278353A1 (en) * | 2014-03-31 | 2015-10-01 | Linkedln Corporation | Methods and systems for surfacing content items based on impression discounting |
Also Published As
Publication number | Publication date |
---|---|
US9396238B2 (en) | 2016-07-19 |
US20100191726A1 (en) | 2010-07-29 |
US20140089298A1 (en) | 2014-03-27 |
US7756887B1 (en) | 2010-07-13 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US9396238B2 (en) | Systems and methods for determining user preferences | |
US11347790B2 (en) | System and method for providing content to users based on interactions by similar other users | |
CN101454780B (en) | Method of generating a website profile bases on monitoring user activities | |
JP5572596B2 (en) | Personalize the ordering of place content in search results | |
US9165060B2 (en) | Content creation and management system | |
US8260774B1 (en) | Personalization search engine | |
CA2770868C (en) | Objective and subjective ranking of comments | |
US8745067B2 (en) | Presenting comments from various sources | |
US8176032B2 (en) | System and method for automatically publishing data items associated with an event | |
US20150066664A1 (en) | Selection of keyword phrases for providing contextually relevant content to users | |
US20150161256A1 (en) | Method, System, and Graphical User Interface for Providing Personalized Recommendations of Popular Search Queries | |
US20140372250A1 (en) | System and method for providing recommended content | |
US20120095834A1 (en) | Systems and methods for using a behavior history of a user to augment content of a webpage | |
US20150213484A1 (en) | System and method for tracking related events | |
US20070276812A1 (en) | Search Result Ranking Based on Usage of Search Listing Collections | |
KR20140034180A (en) | Priority dimensional data conversion path reporting | |
CA2682053A1 (en) | Method and system for ranking information items for display | |
US9477715B1 (en) | Personalizing aggregated news content | |
CN113905045A (en) | System, method, and medium for providing third-party content | |
US20130204864A1 (en) | Information provision device, information provision method, program, and information recording medium | |
US20090013068A1 (en) | Systems and processes for evaluating webpages | |
US8626753B1 (en) | Personalization search engine | |
WO2008061133A1 (en) | Search result ranking based on attributes of search listing collections |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044695/0115Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 8TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1552); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 8 |
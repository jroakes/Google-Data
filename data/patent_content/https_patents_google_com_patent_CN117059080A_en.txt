CN117059080A - Detection of duplicate packetized data transmissions - Google Patents
Detection of duplicate packetized data transmissions Download PDFInfo
- Publication number
- CN117059080A CN117059080A CN202310910488.0A CN202310910488A CN117059080A CN 117059080 A CN117059080 A CN 117059080A CN 202310910488 A CN202310910488 A CN 202310910488A CN 117059080 A CN117059080 A CN 117059080A
- Authority
- CN
- China
- Prior art keywords
- interface
- processing system
- data processing
- data
- digital component
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Pending
Links
- 230000005540 biological transmission Effects 0.000 title claims abstract description 52
- 238000001514 detection method Methods 0.000 title abstract description 4
- 230000009471 action Effects 0.000 claims abstract description 202
- 230000005236 sound signal Effects 0.000 claims abstract description 120
- 238000012545 processing Methods 0.000 claims description 205
- 238000000034 method Methods 0.000 claims description 68
- 230000004044 response Effects 0.000 claims description 37
- 238000007726 management method Methods 0.000 description 88
- 238000009877 rendering Methods 0.000 description 47
- 238000004891 communication Methods 0.000 description 17
- 230000008569 process Effects 0.000 description 16
- 238000004590 computer program Methods 0.000 description 12
- 238000013515 script Methods 0.000 description 11
- 230000000475 sunscreen effect Effects 0.000 description 10
- 239000000516 sunscreening agent Substances 0.000 description 10
- 230000003993 interaction Effects 0.000 description 8
- 230000008451 emotion Effects 0.000 description 6
- 238000006243 chemical reaction Methods 0.000 description 3
- 238000010586 diagram Methods 0.000 description 3
- 230000000694 effects Effects 0.000 description 3
- 230000003287 optical effect Effects 0.000 description 3
- 230000000644 propagated effect Effects 0.000 description 3
- 238000000926 separation method Methods 0.000 description 3
- 238000012546 transfer Methods 0.000 description 3
- 230000003068 static effect Effects 0.000 description 2
- 230000037072 sun protection Effects 0.000 description 2
- 230000001360 synchronised effect Effects 0.000 description 2
- 230000009466 transformation Effects 0.000 description 2
- 230000000007 visual effect Effects 0.000 description 2
- IRLPACMLTUPBCL-KQYNXXCUSA-N 5'-adenylyl sulfate Chemical compound C1=NC=2C(N)=NC=NC=2N1[C@@H]1O[C@H](COP(O)(=O)OS(O)(=O)=O)[C@@H](O)[C@H]1O IRLPACMLTUPBCL-KQYNXXCUSA-N 0.000 description 1
- LFQSCWFLJHTTHZ-UHFFFAOYSA-N Ethanol Chemical compound CCO LFQSCWFLJHTTHZ-UHFFFAOYSA-N 0.000 description 1
- 238000004364 calculation method Methods 0.000 description 1
- 239000003795 chemical substances by application Substances 0.000 description 1
- 238000001816 cooling Methods 0.000 description 1
- 230000008878 coupling Effects 0.000 description 1
- 238000010168 coupling process Methods 0.000 description 1
- 238000005859 coupling reaction Methods 0.000 description 1
- 239000006071 cream Substances 0.000 description 1
- 238000005516 engineering process Methods 0.000 description 1
- 230000000977 initiatory effect Effects 0.000 description 1
- 238000009434 installation Methods 0.000 description 1
- 239000004973 liquid crystal related substance Substances 0.000 description 1
- 239000011159 matrix material Substances 0.000 description 1
- 230000007246 mechanism Effects 0.000 description 1
- 230000005055 memory storage Effects 0.000 description 1
- 238000010295 mobile communication Methods 0.000 description 1
- 239000004065 semiconductor Substances 0.000 description 1
- 239000007787 solid Substances 0.000 description 1
- 239000000758 substrate Substances 0.000 description 1
- 238000012549 training Methods 0.000 description 1
- 230000001131 transforming effect Effects 0.000 description 1
- 238000013519 translation Methods 0.000 description 1
- 230000001960 triggered effect Effects 0.000 description 1
- XLYOFNOQVPJJNP-UHFFFAOYSA-N water Substances O XLYOFNOQVPJJNP-UHFFFAOYSA-N 0.000 description 1
Classifications
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L15/00—Speech recognition
- G10L15/22—Procedures used during a speech recognition process, e.g. man-machine dialogue
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L15/00—Speech recognition
- G10L15/08—Speech classification or search
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L15/00—Speech recognition
- G10L15/08—Speech classification or search
- G10L15/18—Speech classification or search using natural language modelling
- G10L15/1822—Parsing for meaning understanding
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L47/00—Traffic control in data switching networks
- H04L47/10—Flow control; Congestion control
- H04L47/12—Avoiding congestion; Recovering from congestion
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L15/00—Speech recognition
- G10L15/08—Speech classification or search
- G10L2015/088—Word spotting
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L15/00—Speech recognition
- G10L15/22—Procedures used during a speech recognition process, e.g. man-machine dialogue
- G10L2015/223—Execution procedure of a spoken command
Abstract
Detection of duplicate packetized data transmissions is disclosed. A system is provided for reducing transmission of packetized data in a computer network environment based on voice activated data packets. A natural language processor component can parse an input audio signal to identify a request and trigger key. Based on the input audio signal, the direct action application programming interface may generate a first action data structure and the content selector component may select the content item. An interface management component can identify candidate interfaces and determine whether a prior instance of packetized data is transmitted to the candidate interfaces. The packetized data is determined to be redundant, the interface management component may prevent transmission of the packetized data.
Description
Description of the division
The application belongs to a divisional application of Chinese application patent application No.201780013430.9 with the application date of 2017, 12 and 8.
Technical Field
The present application relates generally to the detection of duplicate packetized data transmissions.
Background
Packet-based or otherwise excessive network transmission of network traffic data between computing devices can prevent the computing devices from properly processing, completing operations related to, or responding to the network traffic data in a timely manner. Excessive network transmission of network traffic data can also complicate data routing or reduce the quality of the response if the responding computing device reaches or exceeds its processing capabilities, which can lead to inefficient bandwidth utilization. The large number of content item objects that may initiate network transmission of network traffic data between computing devices can complicate control of network transmissions corresponding to the content item objects.
Disclosure of Invention
At least one aspect relates to a system for transmitting packetized data in a voice activated packet-based computer network environment. The system may include a natural language processor component that may be executed by a data processing system. The data processing system may receive data packets, which may include an input audio signal, via an interface of the data processing system. The input audio signal may be detected by a sensor of the client device. The natural language processor component can parse the input audio signal to identify a request and a trigger key that can correspond to the request. The data processing system may include a direct action application programming interface for generating a first action data structure based on at least one of the request and the trigger key. The data processing system can include a content selector component for receiving at least one of a request and a trigger key identified by the natural language processor. The content selector component may select, via a real-time content selection process, a digital component to be displayed at the client device based on at least one of the request and the trigger key. The data processing system can include an interface management component for identifying a second interface associated with the client device. The interface management component may determine that a prior instance of the digital component was previously received by a second interface associated with the client device. The interface management component may transmit the first action data structure to the client device instead of the digital component for rendering as audio output from the client device.
At least one aspect relates to a method for transmitting packetized data in a voice activated packet-based computer network environment. The method may include: data packets, which may include an input audio signal, are received via an interface of a data processing system. The input audio signal may be detected by a sensor of the client device. The method may include: the input audio signal is parsed by a natural language processor component to identify a request and trigger keywords that may correspond to the request. The method may include: the first action data structure is generated by the direct action application programming interface based on at least one of the request and the trigger key. The method may include: at least one of the request and the trigger key identified by the natural language processor is received by the content selector component. The method may include: the digital component to be displayed at the client device is selected by the content selector component via a real-time content selection process based on at least one of the request and the trigger key. The method may include: a second interface associated with the client device is identified by the interface management component. The method may include: a prior instance of a digital component previously received by a second interface associated with the client device is determined. The method may include: the first action data structure is transmitted to the client device instead of the digital component for rendering as audio output from the client device.
These and other aspects and embodiments are discussed in detail below. The foregoing information and the following detailed description include illustrative examples of various aspects and embodiments, and provide an overview or framework for understanding the nature and character of the claimed aspects and embodiments. The accompanying drawings provide a description and a further understanding of various aspects and embodiments, and are incorporated in and constitute a part of this specification.
Drawings
The drawings are not intended to be drawn to scale. Like reference numbers and designations in the various drawings indicate like elements. For purposes of clarity, not every component may be labeled in every drawing.
In the drawings:
FIG. 1 depicts a system for multimodal transmission of packetized data in a voice activated computer network environment;
FIG. 2 depicts a flowchart of multi-modal transmission of packetized data in a voice-activated computer network environment;
FIG. 3 depicts a method of multimodal transmission of packetized data in a voice activated computer network environment; and
FIG. 4 is a block diagram illustrating a general architecture of a computer system that may be employed to implement the elements of the systems and methods described and illustrated herein.
Detailed Description
The following is a more detailed description of various concepts, implementations, and methods, apparatuses, and systems related to methods, apparatuses, and systems for multi-modal transmission of packetized data in a voice-activated data packet-based computer network environment. The various concepts introduced above and discussed in more detail below may be implemented in any of a number of ways.
The systems and methods of the present disclosure generally relate to a data processing system that identifies potentially redundant transmissions in a voice-activated computer network environment. The data processing system may improve the efficiency and effectiveness of transmission of data packets (or other protocol based) over one or more computer networks by, for example, preventing or reducing the number of redundant data packet transmissions. The system may consider transmission redundancy when correlating or similarly transmitting to a relevant client computing device. The system may consider these transmissions redundant because the user may have viewed the transmission results on the relevant client device. The system may select from a plurality of options a transmission modality for data packets routed through a computer network of content items to one or more client computing devices (also referred to as client devices) or to different interfaces (e.g., different applications or programs) of a single client computing device. Signals based on data packets or other protocols corresponding to the selected operation may be routed through a computer network between multiple computing devices. For example, the data processing system may route the content item to an interface different from the interface from which the request was received. The different interfaces may be on the same client computing device or different client computing devices from which the request was received. The data processing system may select at least one candidate interface from the plurality of candidate interfaces for transmission of the content item to the client computing device. The candidate interfaces may be determined based on technology or computational parameters such as processor capacity or utilization, memory capacity or availability, battery status, available power, network bandwidth utilization, interface parameters, or other resource utilization values. By selecting an interface from a client computing device for receiving and providing a content item for rendering based on a candidate interface or a utilization associated with the candidate interface, a data processing system may reduce network bandwidth utilization, latency, or processing utilization or power consumption of the client computing device rendering the content item. This saves processing power and other computing resources (such as memory), reduces power consumption of the data processing system, and reduced data transmission via the computer network reduces bandwidth requirements and use of the data processing system.
The systems and methods described herein may include a data processing system that receives an input audio query, which may also be referred to as an input audio signal. By entering an audio query, the data processing system may identify a request and a trigger key corresponding to the request. Based on the trigger key or the request, the data processing system may generate a first action data structure. For example, the first action data structure may include an organic response to an input audio query received from a client computing device, and the data processing system may provide the first action data structure to the same client computing device for rendering as audio output via the same interface from which the request was received.
The data processing system may also select at least one content item based on the trigger key or the request. The data processing system may identify or determine a plurality of candidate interfaces for rendering the content item. The interface may include one or more hardware or software interfaces, such as a display screen, an audio interface, a speaker, an application or program available on a client computing device that initiates an input audio query, or on a different client computing device. The interfaces may include a java script slot (slot) for inserting content items and a push notification interface for online documents. The data processing system may determine utilization values for different candidate interfaces. For example, the utilization value may indicate a power capability, a processing capability, a memory capability, a bandwidth capability, or an interface parameter capability. Based on the utilization value of the candidate interface, the data processing system may select the candidate interface as the selected interface for rendering or rendering the content item. For example, the data processing system may convert or provide the content item for delivery in a modality compatible with the selected interface. The selected interface may be the interface of the same client computing device that originated the input audio signal or a different client computing device. By routing data packets via the computing network based on the utilization value associated with the candidate interface, the data processing system selects a destination of the content item from the available options in the following manner: a minimum amount of processing power, memory, or bandwidth may be used, or power may be saved for one or more client computing devices.
The data processing system may provide the content item or the first action data structure to the client computing device via a computer network through data message transmission based on a packet or other protocol. The content item may also be referred to as a digital component. The content item may be included in the digital component. The output signal may cause an audio driver component of the client computing device to generate sound waves, such as audio output, that may be output from the client computing device. The audio (or other) output may correspond to a first action data structure or to a content item. For example, the first action data structure may be routed as an audio output and the content item may be routed as a text-based message. By routing the first action data structure and the content item to different interfaces, the data processing system may save resources utilized by each interface relative to providing both the first action data structure and the content item to the same interface. This results in fewer data processing operations, fewer memory uses, or fewer network bandwidth uses of the selected interface (or its corresponding device) than if the first action data structure and the content item were not separated and routed independently.
Fig. 1 depicts an example system 100 for multimodal transmission of packetized data in a voice activated data packet (or other protocol) based computer network environment. The system 100 may include at least one data processing system 105. The data processing system 105 can include at least one server having at least one processor. For example, data processing system 110 may include multiple servers located in at least one data center or server farm. The data processing system 105 may determine a request and a trigger key associated with the request from the input audio signal. Based on the request and trigger keywords, the data processing system 105 may determine or select at least one action data structure and may select at least one content item (and initiate other actions as described herein).
The data processing system 105 may identify candidate interfaces for rendering action data structures or content items. The data processing system 105 may provide action data structures or content items for rendering by one or more candidate interfaces on one or more client computing devices. The selection of an interface may be based on past delivery of content items to the interface or associated interfaces or resource utilization values for candidate interfaces. The action data structure (or content item) may include one or more audio files that provide audio output or sound waves when rendered. The action data structure or content item may include other content (e.g., text, video, or image content) in addition to audio content.
Data processing system 105 may include multiple logically grouped servers and facilitate distributed computing techniques. The logical group of servers may be referred to as a data center, a server farm, or a machine farm. Servers may be geographically dispersed. The data center or machine farm may be managed as a single entity or the machine farm may include multiple machine farms. The servers within each machine farm may be heterogeneous—one or more of the servers or machines may operate in accordance with one or more types of operating system platforms. Data processing system 105 may include servers in a data center, located in an enterprise data center, for example, that are stored in one or more high-density rack systems along with associated storage systems. Data processing system 105 with integrated servers in this manner may improve system manageability, data security, physical security of the system, and system performance by locating servers and high-performance storage systems on a localized high-performance network. Centralizing all or some of the data processing system 105 components (including servers and storage systems) and coupling them with advanced system management tools allows for more efficient use of server resources, which saves power and processing requirements, and reduces bandwidth usage.
The data processing system 105 may include: at least one Natural Language Processor (NLP) component 110, at least one interface 115, at least one prediction component 120, at least one content selector component 125, at least one audio signal generator component 130, at least one direct action Application Programming Interface (API) 135, at least one interface management component 140, and at least one data store 145.NLP component 110, interface 115, prediction component 120, content selector component 125, audio signal generator component 130, direct action API 135, and interface management component 140 can each include: at least one processing unit, server, virtual server, circuit, engine, agent, instrument, or other logic device, such as a programmable logic array, is configured to communicate with the data repository 145 and other computing devices (e.g., at least one client computing device 150, at least one content provider computing device 155, or at least one service provider computing device 160) via at least one computer network 165. Network 165 may include computer networks such as the internet, local area networks, wide area networks, metropolitan area networks or other area networks, intranets, satellite networks, other computer networks such as voice or data mobile phone communication networks, and combinations thereof.
The network 165 may include or constitute a display network, for example, a subset of information resources available on the internet that are associated with content delivery or search engine result systems or that are eligible to include third party content items as part of a content item delivery campaign (placement campaign). Network 165 may be used by data processing system 105 to access information resources, such as web pages, websites, domain names, or uniform resource locators that may be presented, output, rendered, or displayed by client computing device 150. For example, via network 165, a user of client computing device 150 may access information or data provided by data processing system 105, content provider computing device 155, or service provider computing device 160.
The network 165 may include: such as point-to-point networks, broadcast networks, wide area networks, local area networks, telecommunication networks, data communication networks, computer networks, ATM (asynchronous transfer mode) networks, SONET (synchronous optical network) networks, SDH (synchronous digital hierarchy) networks, wireless networks or wired networks, and combinations thereof. The network 165 may include wireless links, such as infrared channels or satellite bands. The topology of the network 165 may include a bus, star, or ring network topology. Network 165 may comprise a mobile telephone network that uses any one or more protocols for communicating between mobile devices, including: advanced mobile phone protocol ("AMPS"), time division multiple access ("TDMA"), code division multiple access ("CDMA"), global system for mobile communications ("GSM"), general packet radio service ("GPRS"), or universal mobile telecommunications system ("UMTS"). Different types of data may be transmitted via different protocols, or the same type of data may be transmitted via different protocols.
Client computing device 150, content provider computing device 155, and service provider computing device 160 may each include at least one logic device (such as a computing device with a processor) to communicate with each other or data processing system 105 via network 165. The client computing device 150, the content provider computing device 155, and the service provider computing device 160 may each include at least one server, a processor or memory, or a plurality of computing resources or servers located in at least one data center. The client computing device 150, the content provider computing device 155, and the service provider computing device 160 may each include at least one computing device, such as a desktop computer, a laptop computer, a tablet computer, a personal digital assistant, a smart phone, a portable computer, a server, a thin client computer, a virtual server, or other computing device.
The client computing device 150 may include: at least one sensor 151, at least one transducer 152, at least one audio driver 153, and at least one speaker 154. The sensor 151 may include a microphone or an audio input sensor. Transducer 152 may convert audio input into electrical signals, or vice versa. Audio driver 153 may include scripts or programs that are executed by one or more processors of client computing device 150 to control sensor 151, transducer 152, or audio driver 153, as well as other components of client computing device 150 to process audio inputs or provide audio outputs. Speaker 154 may transmit an audio output signal.
The client computing device 150 may be associated with an end user that enters a voice query as an audio input into the client computing device 150 (via the sensor 151) and receives an audio output in the form of computer-generated voice, which may be provided to the client computing device 150 from the data processing system 105 (or the content provider computing device 155 or the service provider computing device 160) and output from the speaker 154. The audio output may correspond to a action data structure received from the direct action API 135 or a content item selected by the content selector component 125. The computer-generated speech may include a sound recording from a real person or a computer-generated language.
The content provider computing device 155 (or the data processing system 105 or the service provider computing device 160) may provide an audio-based content item or action data structure for display by the client computing device 150 as an audio output. The action data structure or content item may include an organic response or proposal for the good or service, such as "Is today a beach day? (is today the day of going to the beach. The data processing system 105 (or other system 100 components, such as the content provider computing device 155) may also provide content items in response, such as voice or text message based content items that propose sunscreens.
The content provider computing device 155 or the data store 145 may include memory to store a series of audio action data structures or content items that may be provided in response to a voice-based query. The action data structures and content items may include packet-based data structures for transmission via the network 165. The content provider computing device 155 may also provide audio or text-based content items (or other content items) to the data processing system 105, where the audio or text-based content items (or other content items) may be stored in the data store 145. The data processing system 105 may select an audio action data structure or text-based content item and provide the audio action data structure or text-based content item (or instruct the content provider computing device 155 to provide) to the same or a different client computing device 150 in response to a query received from one of those client computing devices 150. The audio-based action data structure may be proprietary audio, or may be combined with text, image, or video data. The content item may be proprietary text or may be combined with audio, image or video data.
The service provider computing device 160 may include at least one service provider Natural Language Processor (NLP) component 161 and at least one service provider interface 162. Service provider NLP component 161 (or other component, such as a direct action API of service provider computing device 160) can interface (engage) with client computing device 150 (via data processing system 105 or bypass data processing system 105) to create a back and forth real-time voice or audio based dialog (e.g., session) between client computing device 150 and service provider computing device 160. For example, service provider interface 162 may receive data messages (e.g., action data structures or content items) or provide data messages to direct action API 135 of data processing system 105. The direct action API 135 may also generate an action data structure independent of or without input from the service provider computing device 160. The service provider computing device 160 and the content provider computing device 155 may be associated with the same entity. For example, the content provider computing device 155 may create, store, use or make available content items for beach related services, such as sunscreens, beach towels or swimwear, and the service provider computing device 160 may establish a session with the client computing device 150 in response to voice input queries regarding weather at the beach, directions to the beach, or recommendations for regional beach, and may provide these content items to an end user of the client computing device 150 via an interface of the same client computing device 150 from which the query was received, a different interface of the same client computing device 150, or an interface of a different client computing device. Via the direct action API 135, NLP component 110, or other components, the data processing system 105 can also establish a session with a client computing device (including or bypassing the service provider computing device 160) to, for example, provide an organic response to a beach-related query.
The data repository 145 may include one or more local or distributed databases and may include a database management system. The data repository 145 may include a computer data store or memory and may store one or more parameters 146, one or more policies 147, content data 148, or templates 149, among other data. Parameters 146, policies 147, and templates 149 may include information, such as rules regarding voice-based sessions between client computing device 150 and data processing system 105 (or service provider computing device 160). Content data 148 may include content items or associated metadata for audio output and may be an input audio message that is part of one or more communication sessions with client computing device 150.
The system 100 may optimize the processing of action data structures and content items in a voice-activated data packet (or other protocol) environment. For example, data processing system 105 may include or be part of a voice activated assistant service, a voice command device, a smart personal assistant, a knowledge navigator, an event schema, or other assistant program. The data processing system 105 may provide one or more instances of the action data structure from the client computing device 150 as audio output for display to accomplish tasks related to the input audio signal. For example, the data processing system may communicate with the service provider computing device 160 or other third party computing device, among other things, to generate an action data structure with information about the beach. For example, the end user may enter an input audio signal into the client computing device 150: "OK, I would like to go to the beach this weekend (good, this weekend i want to go to the beach)", and the action data structure may indicate a weekend weather forecast for the regional beach, such as "it will be sunny and 80 degrees at the beach on Saturday,with high tide at 3pm (Saturday will be a sunny day, beach air temperature 80, high tide time 3 pm)".
The action data structure may include a plurality of organic or non-sponsored responses to the input audio signal. For example, the action data structure may include beach weather forecast or directions to the beach. The action data structure in this example includes organic or non-sponsored content that is directly responsive to the input audio signal. The content items responsive to the input audio signal may include sponsored or non-organic content, such as offers to purchase sunscreens from convenience stores located near the beach. In this example, the organic action data structure (beach weather forecast) is responsive to the input audio signal (beach related query) and the content item (reminder or proposal for sunscreen) is also responsive to the same input audio signal. The data processing system 105 may provide the action data structure and content items to different candidate interfaces on the same client computing device 150 or to different candidate interfaces on different client computing devices 150 for parameters of the system 100 (e.g., power usage, available display, format of display, memory requirements, bandwidth usage, power capacity, or time to input power (e.g., internal battery or external power source such as power from wall output).
The data processing system 105 may include an application, script, or program installed at the client computing device 150, such as an application for transmitting an input audio signal (e.g., as a data packet via a transmission based on a packetization or other protocol) to at least one interface 115 of the data processing system 105 and driving components of the client computing device 150 to render an output audio signal (e.g., for an action data structure) or other output signal (e.g., a content item). The data processing system 105 may receive data packets or other signals that include or identify an input audio signal. For example, data processing system 105 may execute or run NLP component 110 to receive an input audio signal.
The NLP component 110 can convert an audio input signal to recognized text by comparing the input signal to a stored representative set of audio waveforms (e.g., in the data repository 145) and selecting the closest match. A representative waveform is generated across a large set of users and can be enhanced with voice samples. After converting the audio signal into recognized text, the NLP component 110 can match the text with words associated with actions that the data processing system 105 can service, for example, via training across users or through manual specification.
The audio input signal may be detected by a sensor 151 (e.g., a microphone) of the client computing device. The sensor 151 may be referred to as an interface of the client computing device 150. Via transducer 152, audio driver 153, or other components, client computing device 150 may provide input audio signals to data processing system 105 (e.g., via network 165), where audio input signals may be received (e.g., via interface 115) and provided to NLP component 110 or stored in data repository 145 as content data 148.
The NLP component 110 may receive or otherwise obtain an input audio signal. From the input audio signal, the NLP component 110 can identify at least one request or at least one trigger key corresponding to the request. The request may indicate an intent or topic of the input audio signal. The trigger key may indicate the type of action that is likely to be taken. For example, the NLP component 110 may parse the input audio signal to identify at least one request to go to the beach on a weekend. The trigger key may include: at least one word, phrase, root or partial word, or derivative indicative of an action to be taken. For example, the trigger keyword "go" or "go to" in the input audio signal may indicate a need for a travel trip or a travel away from home. In this example, the input audio signal (or identified request) does not directly express an intent for the travel of the traffic, however the trigger key indicates that the travel of the traffic is an auxiliary action to at least one other action indicated by the request.
NLP component 110 can identify emotion keywords or emotion states in an input audio signal. The emotion keywords or states may indicate the attitudes of the user when the user provides the input audio signal. Content selector component 125 can use the emotion keywords and status to select a content item. For example, based on the emotion keywords and the status, content selector component 125 can skip selection of the content item. For example, if NLP component 110 detects an emotion keyword such as "only" or "just" (e.g., "Ok, just give me the results for the movie times (good, only the result of me movie time)), content selector component 125 may skip selection of the content item, returning only the action data structure in response to the input audio signal.
The predictive component 120 (or other mechanism of the data processing system 105) can generate at least one action data structure associated with the input audio signal based on the request or trigger key. The action data structure may indicate information about a subject of the input audio signal. The action data structure may include one or more actions, such as an organic response to an input audio signal. For example, the input audio signal "OK, I would like to go to the beach this weekend" may include at least one request and at least one trigger key indicating an interest in beach weather forecast, surfing reports, or water temperature information, e.g., "go" indicating a trip to the beach, such as a need for an item that someone may want to take to the beach, or a need for a trip to the beach. The predictive component 120 can generate or identify a topic of at least one action data structure, an indication of a request for beach weather forecast, and a topic of a content item, such as an indication of a query for sponsored content related to spending a day at the beach. By requesting or triggering keywords, the prediction component 120 (or other system 100 components, such as the NLP component 110 or direct action API 135) predicts, estimates, or otherwise determines the topic of the action data structure or content item. With the subject matter, the direct action API 135 can generate at least one action data structure and can communicate with at least one content provider computing device 155 to obtain at least one content item 155. The prediction component 120 can access parameters 146 or policies 147 in the data repository 145 to determine or otherwise evaluate a request for an action data structure or content item. For example, parameter 146 or policy 147 may indicate a request for a beach weekend weather forecast action or a request for a content item related to going to the beach, such as a content item for a sun screen.
The content selector component 125 can obtain an indication of an action data structure or any interest or request for a content item. For example, the prediction component 120 can provide an indication of the action data structure or the content item directly or indirectly (e.g., via the data repository 145) to the content selector component 125. The content selector component 125 can obtain this information from the data store 145, where it can be stored as part of the content data 148. The indication of the action data structure may inform the content selector component 125 that regional beach information is needed, such as weather forecast or products or services that may be needed for the end user to travel to the beach. The NLP component 110 can detect keywords associated with a private mode and temporarily place one or more client computing devices 150 associated with a user in the private mode. For example, the input audio signal may include "Ok, private mode" or "Ok, don't save this search (good, not save the search)". While in private mode, the content selector component 125 may not store an indication of interest, a request for an action data structure, or a selected content item into the data repository 145 as part of the content data 148. In the private mode, when data processing system 105 is not in the private mode, data processing system 105 does not use the input signal (and the data and associations generated by the input signal) to select subsequent content items and action data structures. For example, during a first interaction, when a user wants to order a gift from a given store for important others via a speaker-based assistant device, the user may place the speaker-based assistant device in a privacy mode. During a second subsequent interaction (by the user or an important other person) with the speaker-based assistant device, the content selector component 125 will not select the content item associated with the request, action data structure, or content item from the first interaction. For example, the content selector component 125 will not select a content item associated with a store that purchased the gift. The content selector component 125 can use a request from the first interaction, the action data store, or the content item to select the content item to be transmitted to the client computing device 150 that is not to be in the private mode. Continuing with the above example, the content selector component 125 can use a request from the first interaction, the action data store, or the content item to select the content item for transmission to the interface of the user's mobile phone.
The content selector component 125 can identify at least one content item via information received by the content selector component 125 (e.g., an indication of impending beach travel). The content items may be responsive to or related to the subject matter of the input audio query. For example, the content item may include a data message identifying a store near a beach with a sun protection cream or suggesting a taxi-taking to the beach. The content selector component 125 can query the data repository 145 to select or identify content items, for example, from the content data 148. The content selector component 125 can also select content items from the content provider computing device 155. For example, in response to a query received from the data processing system 105, the content provider computing device 155 may provide content items to the data processing system 105 (or components thereof) for final output by the client computing device 150 initiating the input audio signal, or for output by the same end user through a different client computing device 150.
The audio signal generator component 130 can generate or otherwise obtain an output signal that includes content items (and action data structures) responsive to the input audio signal. For example, the data processing system 105 can execute the audio signal generator component 130 to generate or create an output signal corresponding to an action data structure or content item. The interface component 115 of the data processing system 105 may transmit one or more data packets comprising output signals to any client computing device 150 via the computer network 165. The interface 115 may be designed, configured, constructed, or operative to receive and transmit information using, for example, data packets. The interface 115 may receive and transmit information using one or more protocols, such as a network protocol. The interface 115 may include: a hardware interface, a software interface, a wired interface, or a wireless interface. The interface 115 may facilitate transforming or formatting data from one format to another. For example, the interface 115 may include an application programming interface that includes definitions for communication between various components, such as software components of the system 100.
Data processing system 105 can provide output signals including action data structures from data repository 145 or audio signal generator component 130 to client computing device 150. The data processing system 105 can provide output signals including content items from the data repository 145 or the audio signal generator component 130 to the same or different client computing devices 150.
The data processing system 105 may also instruct the content provider computing device 155 or the service provider computing device 160 to provide an output signal (e.g., an output signal corresponding to an action data structure or content item) to the client computing device 150 via data packet transmission. An output signal may be obtained, generated, transformed into, or transmitted as one or more data packets (or other communication protocols) from the data processing system 105 (or other computing device) to the client computing device 150.
The content selector component 125 can select a content item or action data structure as part of a real-time content selection process. For example, the action data structure may be provided to the client computing device 150 in a conversational manner in direct response to the input audio signal for transmission as an audio output by an interface of the client computing device 150. The real-time content selection process of identifying the action data structure and providing the content item to the client computing device 150 may occur within one minute or less from the time of inputting the audio signal and may be considered real-time. The data processing system 105 may also identify the content item and provide the content item to at least one interface of the client computing device 150 that originated the input audio signal or a different client computing device 150.
For example, an action data structure (or content item) obtained or generated by the audio signal generator component 130 transmitted to the client computing device 150 via the interface 115 and the computer network 165 may cause the client computing device 150 to execute the audio driver 153 to drive the speaker 154 to generate sound waves corresponding to the action data structure or content item. The sound waves may include words of or corresponding to the action data structure or content item.
Sound waves representing the action data structure may be output from the client computing device 150 separately from the content items. For example, the sound waves may include an audio output: "Today it will be sunny and 80 degrees at the beach (today will be a sunny day, beach air temperature 80)". In this example, the data processing system 105 obtains an input audio signal: for example, "OK, I would like to go to the beach this weekend". From this information, the NLP component 110 identifies at least one request or at least one trigger key, and the prediction component 120 uses the request or trigger key to identify a request for an action data structure or for a content item. The content selector component 125 (or other component) can identify, select, or generate content items for sunscreens available near, for example, a beach. The direct action API 135 (or other component) may identify, select, or generate an action data structure for, for example, a weekend beach weather forecast. The data processing system 105 or a component thereof, such as the audio signal generator component 130, can provide an action data structure for interface output by the client computing device 150. For example, sound waves corresponding to the action data structure may be output from the client computing device 150. The data processing system 105 may provide content items for output by different interfaces of the same client computing device 150 or interfaces of different client computing devices 150.
The packet-based transmission of the action data structure by data processing system 105 to client computing device 150 may include: a direct or real-time response to the input audio signal "OK, I would like to go to the beach this weekend" causes packet-based data transfer via the computer network 165 as part of a communication session between the data processing system 105 and the client computing device 150 to have a smooth and feel of a real-time person-to-person conversation. The packet-based data transfer communication session may also include a content provider computing device 155 or a service provider computing device 160.
The content selector component 125 can select a content item or action data structure based on at least one request or at least one trigger key of the input audio signal. For example, a request to input the audio signal "OK, I would like to go to the beach this weekend" may indicate a beach topic, a beach travel, or an item that facilitates a beach travel. The NLP component 110 or the prediction component 120 (or other data processing system 105 component executing as part of the direct action API 135) can identify a trigger key "go", "go to" or "to go to" and can determine a travel request to travel to the beach based at least in part on the trigger key. The NLP component 110 (or other system 100 component) can also determine a bid for a content item related to beach activity, such as a bid for a sunscreen or beach umbrella. Thus, the data processing system 105 may infer an action by being a secondary request (e.g., a request for sun screen) that is not the primary request or topic of the input audio signal (information about the beach of this weekend).
The action data structure and the content item may correspond to a theme of the input audio signal. The direct action API 135 may execute programs or scripts, for example, from the NLP component 110, the prediction component 120, or the content selector component 125 to identify action data structures or content items for one or more of these actions. The direct action API 135 may perform specified actions to satisfy the end user's intent as determined by the data processing system 105. Depending on the action specified in its input, the direct action API 135 may execute code or dialog scripts that identify parameters needed to fulfill the user request. Such code may, for example, look up additional information in data store 145 (such as the name of the home automation service), or such code may provide audio output for rendering at client computing device 150 to ask an end user for a question, such as the intended destination of the requested taxi. The direct action API 135 may determine the necessary parameters and may package the information into an action data structure that may then be sent to another component (such as the content selector component 125 or the service provider computing device 160) to be fulfilled.
The direct action API 135 of the data processing system 105 may generate an action data structure based on the request or trigger key. The action data structure may be generated in response to a request for an input audio signal. The action data structure may be included in a message transmitted to the service provider computing device 160 or received by the service provider computing device 160. Based on the input audio signal parsed by NLP component 110, direct action API 135 can determine which of the plurality of service provider computing devices 160, if any, should send the information to. For example, if the input audio signal includes "OK, I would like to go to the beach this weekend," the NLP component 110 may parse the input audio signal to identify a request or trigger keyword, such as the trigger keyword "to go to" as an indication that a taxi is desired. Direct action API 135 may encapsulate the request into an action data structure for transmission as a message to service provider computing device 160 of the taxi service. The message may also be passed to the content selector component 125. The action data structure may include information for completing the request. In this example, the information may include a pickup location (e.g., home) and a destination location (e.g., beach). The direct action API 135 may retrieve the templates 149 from the repository 145 to determine which fields to include in the action data structure. The direct action API 135 may retrieve content from the repository 145 to obtain information for fields in the data structure. The direct action API 135 may utilize this information to populate fields in the template to generate a data structure. The direct action API 135 may also populate the fields with data from the input audio signal. Templates 149 may be normalized for categories of service providers or templates 149 may be normalized for a particular service provider. For example, the ride share service provider may create the data structure using the following standardized templates 149: { client_device_identifier; authentication_encryption; pick_up_location; destination_location; no_passengers; service_level }.
The content selector component 125 can identify, select, or otherwise obtain a plurality of content items resulting from a plurality of content selection processes. The content selection process may be real-time, for example, the same conversation, a communication session, or a portion of a series of communication sessions involving a common theme between the data processing system 105 and the client computing device 150. For example, a conversation may include asynchronous communications that are separated from each other by hours or days. The conversation or communication session may continue for a period of time from receipt of the first input audio signal until the result of the final action related to the first input audio signal is estimated or known or an indication of the termination or expiration of the conversation is received by the data processing system 105. For example, the data processing system 105 may determine that a conversation related to a beach trip on a weekend begins when an input audio signal is received and expires or ends at the end of a weekend (e.g., sunday evening or monday morning). The data processing system 105 providing an action data structure or content item for rendering by the client computing device 150 or one or more interfaces of another client computing device 150 during an active period of a conversation (e.g., from receipt of an input audio signal until a determined expiration time) may be considered to be operating in real-time. In this example, the content selection process and rendering of the content item and action data structure occurs in real-time.
The interface management component 140 can poll, determine, identify, or select interfaces for rendering action data structures and content items. For example, the interface management component 140 may identify one or more candidate interfaces of the client computing device 150. The candidate interface may be associated with an end user entering an input audio signal (e.g., "What is the weather at the beach today. Alone or in combination with scripts or programs (e.g., audio drivers 153), as well as applications, computer programs, online document (e.g., web page) interfaces, and combinations thereof, the interfaces may include hardware, such as sensors 151 (e.g., microphones), speakers 154, or screen size of a computing device. Each of the candidate interfaces may be distributed within a single computing device or across multiple devices. For example, the first candidate interface may be the speaker 154 of the speaker-based assistant device, while the second candidate interface may be the screen of the mobile device.
The candidate interfaces may be hardware interfaces, software interfaces, or a combination of both. For example, the software interface may include a social media account (or a component of a social media account), a text messaging application, or an email account associated with an end user of the client computing device 150 that originated the input audio signal. The software interface may be accessed on a plurality of computing devices. For example, the candidate software interface may include a web-based email program accessed by a user via a public computer. The user may later access the interface (e.g., web-based email program) from the user's personal computer.
The interface may include audio output of a smart phone (an example of a hardware-based interface), or an application-based messaging device installed on a smart phone or on a wearable computing device, as well as other client computing devices 150. The interface may also include display screen parameters (e.g., size, resolution), audio parameters, mobile device parameters (e.g., processing power, battery life, presence of installed applications or programs, or sensor 151 or speaker 154 capabilities), content slots for text, image, or video rendering of content items on an online document, chat applications, laptop parameters, smart watches or other wearable device parameters (e.g., indications of their display or processing capabilities), or virtual reality headset parameters.
The interface management component 140 can poll multiple interfaces to identify candidate interfaces. Candidate interfaces include interfaces that have the ability to render a response to an input audio signal (e.g., an action data structure that is output as audio, or a content item that may be output in a variety of formats including non-audio formats). The interface management component 140 may determine parameters or other capabilities of the interfaces to determine whether they are (or are not) candidate interfaces. For example, the interface management component 140 may determine that the smartwatch includes an available visual interface of sufficient size or resolution for rendering the content item based on the content item or parameters 146 of the first client computing device 150 (e.g., the smartwatch wearable device). The interface management component 140 may also determine that the client computing device 150 that originated the input audio signal has speaker 154 hardware and installed programs, e.g., audio drivers or other scripts for rendering action data structures.
The interface management component 140 may determine utilization values for candidate interfaces. The utilization value may indicate that the candidate interface may (or cannot) render an action data structure or content item provided in response to the input audio signal. The utilization value may also include a parameter indicating a number of times a prior instance of the content item (or related content item) was transmitted or rendered over the interface. For example, whenever the interface management component 140 selects an interface from a plurality of candidate interfaces, the interface management component 140 may record the selection in the data repository 145. The utilization value may include parameters 146 obtained from the data repository 145 or other parameters obtained from the client computing device 150, such as bandwidth or processing utilization or requirements, processing power, power requirements, battery status, memory utilization or capabilities, or other interface parameters indicating that an interface is available to render an action data structure or content item. The battery status may indicate the type of power source (e.g., an internal battery or an external power source, such as via an output), the state of charge (e.g., currently charging or not charging), or the remaining battery level. The interface management component 140 can select an interface based on battery status or state of charge.
The interface management component 140 can rank the candidate interfaces by hierarchy or rank based on the utilization value. For example, different utilization values (e.g., number of times a content item is received, processing requirements, display screen size, accessibility to end users) may be given different weights. The interface management component 140 may rank one or more of the utilization values of the candidate interfaces based on their weights to determine the best corresponding candidate interface for rendering the content item (or action data structure). Based on the hierarchy, the interface management component 140 can select the highest ranked interface to render the content item.
Based on the utilization value of the candidate interfaces, the interface management component 140 can select at least one candidate interface as the selected interface for the content item. The interface selected for the content item may be the same interface from which the input audio signal was received (e.g., the audio interface of the client computing device 150) or a different interface (e.g., a text message based application of the same client computing device 150, or an email account accessible from the same client computing device 150).
The interface management component 140 can rank the candidate interfaces by hierarchy or ranking based on prior content items transmitted to the client computing device 150 or interfaces associated with the client computing device 150. For example, the interface management component 140 may access the content data 148 to determine which of the candidate interfaces were previously selected and what content items or action data structures were transmitted to each of those candidate interfaces. The interface management component 140 may rank candidate interfaces based on which of the candidate interfaces most recently received content items or action data structures related to the currently selected content item or action data structure. For example, when ranking a plurality of candidate interfaces for transmitting content items associated with a musical event, the interface management component 140 may determine which of the candidate interfaces were previously provided with the content items associated with the musical event. The candidate interfaces that most recently received content items associated with a musical event may be ranked higher than candidate interfaces that are not most recently received (or never received) content items associated with a musical event.
The interface management component 140 may rank candidate interfaces based on which of the candidate interfaces most recently received a response (or other interaction) to a content item or action data structure related to the currently selected content item or action data structure. For example, the response to the content item may include clicking on a link in the content item or a request for additional information related to the content item. Ranking candidate interfaces based on the time at which they receive a response to a content item or action data structure related to the currently selected content item or action data structure may reduce wasteful network data transmissions by transmitting the content item or action data structure to an interface where it was previously available to the user. For example, in response to the input audio signal "Ok, how do I get to the restaurant (good, how me arrived at the restaurant)", the data processing system 105 may provide instructions to the restaurant and then query "would you like additional details about the restaurant? (do you want other details about the restaurant. If the user responds affirmatively, the interface management component 140 can select a candidate interface associated with the user's mobile device, speaker-based assistant device, or other client computing device. During the first previous interaction, the user may not have interacted with the content item transmitted to the interface of the speaker-based assistant device, but may have interacted with the content item transmitted to the interface of the mobile device. In this example, the interface management component 140 may rank the interfaces of the mobile device relatively higher than the interfaces of the speaker-based assistant device among the candidate devices.
The interface management component 140 can rank candidate interfaces to throttle content items or action data structures transmitted to a given interface over time. For example, the interface management component 140 may record in the content data 148 or other portion of the data repository 145 each instance of the interface selected among the plurality of candidate interfaces. Once the rate of selecting candidate interfaces (e.g., selecting candidate interfaces more than a predetermined number of times during a certain interval), the interface management component 140 may decrease the rank of a given candidate interface.
The interface management component 140 may select an interface for the content item that is an interface of a client computing device 150 that is different from the device that originated the input audio signal. For example, the data processing system 105 may receive an input audio signal from a first client computing device 150 (e.g., a smart phone) and may select an interface, such as a display of a smart watch (or any other client computing device for rendering a content item). Multiple client computing devices 150 may all be associated with the same end user. The data processing system 105 may determine that multiple client computing devices 150 are associated with the same end user based on information received with the end user's consent, such as user access to common social media or email accounts across the multiple client computing devices 150.
The interface management component 140 can also determine that an interface is not available. If an instance of the content item was previously transferred to the interface, the interface can be unavailable. If a previously transmitted content item is associated with a content item for which interface management component 140 is now selecting an interface, interface management component 140 can determine that the interface is not available. For example, the content items may originate from the same content provider device 155, or the current and previously transmitted content items may relate to the same topic. Once the interface management component 140 selects the candidate interface, the interface management component 140 can record the timeout period in the data repository 145. The selected interface can be unavailable until the timeout period expires. For example, during a timeout period, data processing system 105 may transmit the selected action data structure, but determine not to transmit the digital component to client computing device 150. The user associated with the interface may set the duration of each timeout. The interface management component 140 can set a timeout period responsive to the length of the previous content item. For example, the interface management component 140 can set a proportionally longer timeout period for the interface after transmitting a proportionally longer content item to the interface.
The user associated with the interface may indicate to the interface management component 140 the type or category of content items that may be transferred to the interface. When the interface management component 140 selects an interface, the interface management component 140 can mark the interface as unavailable if the content item is associated with a category that the user indicates should not be transmitted to the corresponding interface. Each content item may include one or more tags indicating what category the content item belongs to. The interface management component 140 can parse the tag to determine whether the content item is associated with a category of content items that should not be transmitted to a given interface. For example, a user may set up that a speaker-based assistant device may be configured in the user's living room such that the assistant device's interface only receives content items that fit into the home. In this example, a content item with, for example, the category label "alcohol" will not be sent to the interface of the assistant device in the user's living room.
The interface management component 140 can determine whether an interface is unavailable based on a state or characteristic of the interface or associated computing device. For example, the interface management component 140 may poll the interface and determine that the battery state of the client computing device 150 associated with the interface is below a threshold level (such as 10%). Alternatively, the interface management component 140 may determine that the client computing device 150 associated with the interface lacks sufficient display size or processing power to render the content item, or may determine that the processor utilization is too high because the client computing device is currently executing another application, for example, to stream the content via the network 165. In these and other examples, the interface management component 140 may determine that the interface is not available and may exclude the interface as a candidate for rendering the content item or the action data structure.
Another feature that the interface management component 140 may use to determine if an interface is unavailable is the physical location of the candidate interface. The interface management component 140 may also determine a distance between the candidate interface and a location of a receiving interface (e.g., transducer 152) that received the input audio signal. The interface management component 140 may determine whether the distance between the candidate interface and the receiving interface is above a predetermined threshold at which the candidate interface is not available. For example, if the user leaves home and inputs an input audio signal into the microphone of the user's mobile phone, the interface management component 140 may determine that the distance between the mobile phone and the user's speaker-based assistant device at home is above a predetermined distance threshold. The interface management component 140 can designate the speaker-based assistant device as an unavailable interface. For example, the threshold may be a distance between about 10 and about 100, between about 10 and about 500, or between about 10 and about 1000. A threshold may be set to enable the interface management component 140 to determine whether the candidate interface and the receiving interface are within the same building, room, or general vicinity.
The interface management component 140 may determine to link a candidate interface accessible by the first client computing device 150 to an account of the end user and to link a second candidate interface accessible by the second client computing device 150 to the same account. For example, both client computing devices 150 can access the same social media account, e.g., via installation of an application or script at each client computing device 150. The interface management component 140 can also determine that multiple interfaces correspond to the same account and can provide multiple different content items to multiple interfaces corresponding to the common account. In the event of end user consent, for example, data processing system 105 may determine that the end user has accessed an account from different client computing devices 150. These multiple interfaces may be separate instances of the same interface (e.g., the same application installed on different client computing devices 150) or different interfaces, such as different applications for different social media accounts that are all linked to a common email address account, accessible from multiple client computing devices 150.
The interface management component 140 can also determine or estimate a distance between client computing devices 150 associated with the candidate interfaces. For example, with user consent, the data processing system 105 may obtain an indication that the input audio signal originated from the smartphone or virtual reality headset computing device 150 and that the end user is associated with an active smartwatch client computing device 150. From this information, the interface management component may determine that the smart watch is active, e.g., worn by the end user when the end user enters the input audio signal into the smart phone, such that the two client computing devices 150 are within a threshold distance of each other. In another example, with the end user's consent, the data processing system 105 may determine the location of the smartphone that is the source of the input audio signal, and may also determine that the laptop account associated with the end user is currently active. For example, the laptop may log into a social media account indicating that the user is currently active on the laptop. In this example, the data processing system 105 may determine that the end user is within a threshold distance of the smartphone and the laptop such that the laptop may be an appropriate choice for rendering the content item via the candidate interface.
The interface management component 140 can select an interface for the content item based on at least one utilization value that indicates that the selected interface is most efficient for the content item. For example, among candidate interfaces, the interface for rendering the content item at the smart watch uses the least bandwidth because the content item is smaller and may utilize less resources to transmit the content item. Alternatively, the interface management component 140 may determine that the candidate interface selected for rendering the content item is currently charging (e.g., accessing a power source) such that the interface rendering the content item will not drain the battery power of the corresponding client computing device 150. In another example, the interface management component 140 may select a candidate interface that is currently performing fewer processing operations than another unselected interface of, for example, a different client computing device 150 that is currently streaming video content over the network 165 and is less available for rendering the content item without delay.
The interface management component 140 (or other data processing system 105 component) can transform the content items for delivery in a modality compatible with the candidate interface. For example, if the candidate interface is a display of a smart watch, a smart phone, or a tablet computing device, the interface management component 140 may determine the size of the content item for an appropriate visual display given the size of the display screen associated with the interface. The interface management component 140 can also convert the content item to a packet or other protocol-based format (including proprietary or industry standard formats) for transmission to the client computing device 150 associated with the selected interface. The interface selected by the interface management component 140 for the content items can include interfaces accessible by end users from a plurality of client computing devices 150. For example, the interface may be or include a social media account that an end user may access via a client computing device 150 (e.g., a smart phone) that initiates an input audio signal, as well as other client computing devices (such as a desktop computer or other mobile computing device).
The interface management component 140 can also select at least one candidate interface for the action data structure. The interface may be the same interface from which the input audio signal was obtained, e.g., a voice activated assistant service executing at the client computing device 150. The interface may be the same interface as or a different interface than the interface management component 140 selects for the content item. The interface management component 140 (or other data processing system 105 component) can provide the action data structure to the same client computing device 150 that originated the input audio signal for rendering as an audio output as part of an assistant service. The interface management component 140 can also transmit or otherwise provide the content item to the selected interface for the content item in any converted modality suitable for rendering by the selected interface.
Thus, the interface management component 140 can provide the action data structure as an audio output responsive to the input audio signal received by the same client computing device 150 for interface rendering by the client computing device 150. The interface management component 140 can also provide content items for rendering by different interfaces of the same client computing device 150 or different client computing devices 150 associated with the same end user. For example, an action data structure (e.g., "it will be sunny and 80degrees at the beach on Saturday") may be provided for audio rendering by a client computing device as part of an assistant program interface that is executed in part at the client computing device 150, and content items, such as text, audio, or combined content items that indicate "sunscreen is available from the convenience store near the beach (available from convenience stores near the beach)", may be provided for rendering by an interface of the same or a different computing device 150, such as an email or text message that is accessible by the same or a different computing device 150 associated with an end user.
Separating the content item from the action data structure and sending the content item as, for example, a text message instead of an audio message may result in reduced processing power of the client computing device 150 accessing the content item, as, for example, text message data transmissions are less computationally intensive than audio message data transmissions. This separation may also reduce power usage, memory storage, or transmission bandwidth for rendering the content item. This results in increased processing, power, and bandwidth efficiency for the system 100 and devices (such as the client computing device 150 and the data processing system 105). This increases the efficiency of the computing device that processes the transactions and increases the speed at which content items can be rendered. The data processing system 105 may process thousands, tens of thousands, or more of input audio signals simultaneously, so bandwidth, power, and processing savings may be significant, not just incremental or incidental.
After passing the action data structure to the client computing device 150, the interface management component 140 may provide or pass the content item to the same client computing device 150 (or a different device) as the action data structure. For example, the content item may be provided for rendering via the selected interface at the end of audio output rendering of the action data structure. The interface management component 140 can also provide the content item to the selected interface while configuring the action data structure to the client computing device 150. The interface management component 140 can provide the content item for delivery via the selected interface for a predetermined period of time from receipt of the input audio signal by the NLP component 110. For example, the time period may be any time during the active length of the session dialog. For example, if the input audio signal is "I would like to go to the beach this weekend", the predetermined period of time may be any time from the receipt of the input audio signal to the end of the weekend, e.g., an active period of a conversation. The predetermined period of time may also be a time triggered by rendering of the action data structure as an audio output by the client computing device 150, such as within 5 minutes, 1 hour, or one day of the rendering.
The interface management component 140 can provide the action data structure to the client computing device 150 along with an indication of the presence of the content item. For example, the data processing system 105 may provide for rendering at the client computing device 150 to provide audio output: "it will be sunny and 80degrees at the beach on Saturday,check your email for more information (Saturday will be a sunny day, beach air temperature 80degrees, check your email for more information)". The phrase "check your email for more information" may indicate the presence of a content item (e.g., a content item for a sunscreen) provided by the data processing system 105 to an interface (e.g., an email). In this example, sponsored content may be provided as a content item to an email (or other) interface, and organic content (such as weather) may be provided as an action data structure for audio output.
The data processing system 105 may also provide cues to the action data structure that query the user to determine user interest in obtaining the content item. For example, the action data structure may indicate "it will be sunny and 80degrees at the beach on Saturday,would you like to hear about some services to assist with your trip? (Saturday will be a sunny day, beach air temperature 80degrees, do you want to listen to some services to assist your travel. In response to the prompt "would you like to hear about some services to assist with your trip? The data processing system 105 may receive another input audio signal, such as "sure" from the client computing device 150. The NLP component 110 can parse the response (e.g., "sure") and interpret it as approval for the client computing device 150 to render the content item audio. In response, the data processing system 105 may provide the content item for audio rendering by the same client computing device 150 from which the response "sure" originated.
The data processing system 105 may delay transmission of the content items associated with the action data structure to optimize processing utilization. For example, the data processing system 105 provides an action data structure for the client computing device to render in real-time, e.g., conversationally, to audio output in response to receiving the input audio signal, and may delay content item transmission until off-peak or off-peak periods of data center usage, which makes utilization of the data center more efficient by reducing peak bandwidth usage, thermal output, or cooling requirements. The data processing system 105 may also initiate conversion or other activities associated with the content item, such as reserving an automotive service responsive to a response to the action data structure or the content item, based on network 165 or a data center utilization or bandwidth metric or requirement of a data center that includes the data processing system 105.
Based on a response to the content item or an action data structure for a subsequent action (such as clicking on the content item rendered via the selected interface), the data processing system 105 may identify the transformation, or initiate the transformation or action. The processor of the data processing system 105 may call the direct action API 135 to execute scripts that facilitate the conversion action, such as reserving the car with a car sharing service to bring the end user to the beach or to bring the end user away from the beach. The direct action API 135 may obtain content data 148 (or parameters 146 or policies 147) from the data repository 145 and data received from the client computing device 150 with end user consent to determine location, time, user account, logistics, or other information to reserve a car with the car sharing service. Using the direct action API 135, the data processing system 105 may also communicate with the service provider computing device 160 to complete the conversion by making a car share pick-up reservation in this example.
Fig. 2 depicts a flow chart 200 for multimodal transmission of packetized data in a voice activated computer network environment. The data processing system 105 may receive an input audio signal 205, e.g., "OK, I would like to go to the beach this weekend". In response, the data processing system generates at least one action data structure 210 and at least one content item 215. The action data structure 210 may include organic content or non-sponsored content, such as a response to an audio rendering of statement "It will be sunny and 80degrees at the beach this weekend" or "high tide is at 3 pm". The data processing system 105 may provide the action data structure 210 to the same client computing device 150 that originated the input audio signal 205 for rendering as output, e.g., in real-time or conversational fashion, as part of a digital or conversational assistant platform, by a candidate interface of the client computing device 150.
The data processing system 105 may select the candidate interface 220 as the selected interface for the content item 215 and may provide the content item 215 to the selected interface 220. The content items 215 may also include data structures that are converted by the data processing system 105 to the appropriate modality for rendering by the interface 220 that is selected. Content item 215 may include sponsored content, such as rented beach chairs or offers for sun protection on the same day. The selected interface 220 may be part of the same client computing device 150 or performed by the same client computing device 150 or by a different device accessible to the end user of the client computing device 150. The transmission action data structure 210 and the content item 215 may occur at the same time or sequentially to each other. The action data structure 210 may include an indicator that the content item 215 is being or is to be individually transmitted to the selected interface 220 via a different modality or format, thereby alerting the end user to the presence of the content item 215.
The action data structure 210 and the content items 215 may be provided separately for rendering to an end user. By separating sponsored content (content item 215) from organic response (action data structure 210), there is no need to provide action data structure 210 to audio or other alerts indicating that content item 215 is sponsored. This may reduce bandwidth requirements associated with transmitting the action data structure 210 via the network 165 and may simplify rendering of the action data structure 210, e.g., without the need for audio disclaimers or alert messages.
The data processing system 105 may receive a response audio signal 225. The response audio signal 225 may include an audio signal such as "great, please book me a hotel on the beach this weekend (very stick, this weekend please me to reserve a hotel on the beach)". Receipt of the response audio signal 225 by the data processing system 105 may cause the data processing system to call the direct action API 135 to perform a translation of, for example, a hotel room on a reservation beach. The direct action API 135 may also communicate with at least one service provider computing device 160 to provide information to the service provider computing device 160 so that the service provider computing device 160 may complete or confirm the subscription process.
Fig. 3 depicts a block diagram of an example method 300 of multimodal transmission of packetized data in a voice-activated computer network environment. The method 300 may include: a data packet is received (ACT 305). The method 300 may include: the request and trigger keys are identified (ACT 310). The method 300 may include: an action data structure is generated (ACT 315). The method 300 may include: a content item is selected (ACT 320). The method 300 may include: a polling interface (ACT 325). The method 300 may include: it is determined whether an interface is not available (ACT 330). The method 300 may include: the action data structure is transmitted to the client computing device (ACT 335).
As set forth above, the method 300 may include: a data packet is received (ACT 305). For example, NLP component 110, executed by data processing system 105, may receive data packets including an input audio signal from client computing device 150. The data packets may be received via the network 165 as packet-based or other protocol data transmissions. Input (e.g., input audio signals) may be detected, recorded, or entered at an interface of the client computing device 150. For example, the interface may be a microphone.
The method 300 may include: the request and trigger keys are identified (ACT 310). The NLP component 110 can identify the request and trigger keywords in the input audio signal received by the data processing system 105 as data packets. For example, the NLP component 110 may parse an input audio signal to identify a request related to a subject of the input audio signal. The NLP component 110 can parse the input audio signal to identify trigger keywords that can indicate, for example, an action associated with the request.
The method 300 may include: at least one action data structure is generated (ACT 315). For example, the direct action API 135 may generate an action data structure based on a request or trigger key identified in the input audio signal. The action data structure may indicate organic content or non-sponsored content related to the input audio signal.
The method 300 may include: at least one content item is selected (ACT 320). For example, the content selector component 125 can receive a request or trigger key and based on this information, one or more content items can be selected. The content items may include sponsored items having topics related to the topics of the request or trigger keywords. The content items can be selected via a real-time content selection process by the content selector component 125.
The method 300 may include: the plurality of interfaces is polled to determine candidate interfaces (ACT 325). The candidate interfaces may include interfaces associated with users of client computing devices that transmit the input audio signals to the data processing system 105. The candidate interfaces may be interfaces of the client computing device or may be interfaces of different client computing devices. For example, the first candidate interface may be a speaker of a user's mobile phone and the second candidate interface may be a speaker of a user's speaker-based assistant device. Candidate interfaces may include interfaces capable of rendering selected content items (or action data structures).
The method 300 may include: a determination is made as to whether one or more interfaces are unavailable (ACT 330). The interface management component 140 may determine whether one or more of the candidate interfaces are unavailable or whether an interface through which the input audio signal is received on the client computing device is unavailable. The interface management component 140 can determine that an interface is unavailable based on a type or category of content items transmitted to one or more interfaces associated with a client computing device providing the input audio signal. For example, the interface management component 140 can determine whether a prior instance of a content item or a content item associated with a content item selected in ACT 320 was previously transmitted to one of the candidate interfaces. If any of the candidate interfaces receives a prior instance of the content item or a content item associated with the content item selected in ACT 320, interface management component 140 may designate each of the candidate interfaces as unavailable. In some implementations, only prior instances of content items previously received or candidate interfaces of content items associated with content items selected in ACT 320 are marked as unavailable.
The interface management component 140 can determine that an interface is unavailable based on a state or characteristic of the interface (or associated computing device). For example, the interface management component 140 can query the interface to obtain utilization values, such as parameter information or other characteristics about the interface. If, for example, the battery level associated with the interface is below a predetermined threshold, the interface management component 140 may mark the interface as unavailable. Based on determining that the interface is not available, the data processing system may determine not to transmit the digital component to the client computing device.
The method 300 may include: the action data structure is transmitted to the client computing device (ACT 335). The data processing system 105 may transmit the action data structure (rather than the digital component) to a client computing device that transmits the input audio signal to the data processing system 105. Data processing system 105 may transmit the action data structure (rather than the digital component) to a second or different client computing device. In some implementations, the content items may be transmitted to an interface of a second or different client computing device 150. In some implementations, the action data structure may be transmitted to an interface that detects or otherwise receives an input (e.g., an input audio signal). The method 300 may further include: the content item is converted into a modality for rendering via on the selected interface. For example, the data processing system 105 or a component thereof (such as the interface management component 140) can transform the content item for rendering in a content item slot of the online document (e.g., for display as an email (e.g., via a selected email interface) or as a text message for display in a chat application).
For example, based on the interface management component determining which of the candidate interfaces are available, the content item may be transmitted to at least one candidate interface for rendering the content item (or action data structure). For example, when one or more of the candidate interfaces are marked as unavailable, the data processing system 105 may transmit an action data structure to one of the candidate interfaces (or the client computing device) instead of the selected content item. For example, when it is decided not to transmit a content item, the data processing system 105 may discard, exclude, or limit transmission of the selected content item to the client computing device. In some implementations, discarding, excluding, or otherwise limiting the transmission of content items to the client computing device 150 may include: the content item is not included in the transmission with the action data structure or in a transmission within a predetermined time window of the transmission including the action data structure. The data processing system 105 may discard the selected content item by returning to ACT 320 and selecting a new content item (e.g., a second content item). The interface management component 140 may re-poll each of the interfaces (e.g., repeat ACT 325), or the method 300 may continue with the originally selected candidate interface. The data processing system 105 may transmit the second content item to the client computing device or one of the candidate interfaces from which the input audio signal originated.
Fig. 4 is a block diagram of an example computer system 400. Computer system or computing device 400 may include or be used to implement system 100 or components thereof, such as data processing system 105. Computing system 400 includes a bus 405 or other communication component for communicating information, and a processor 410 or processing circuit coupled to bus 405 for processing information. Computing system 400 may also include one or more processors 410 or processing circuits coupled to the bus for processing information. Computing system 400 also includes a main memory 415, such as a Random Access Memory (RAM) or other dynamic storage device, coupled to bus 405 for storing information and instructions to be executed by processor 410. The main memory 415 may be or include a data store 145. Main memory 415 also may be used for storing location information, temporary variables, or other intermediate information during execution of instructions by processor 410. Computing system 400 may further include a Read Only Memory (ROM) 420 or other static storage device coupled to bus 405 for storing static information and instructions for processor 410. A storage device 425 (such as a solid state device, magnetic disk, or optical disk) may be coupled to bus 405 to persistently store information and instructions. The storage device 425 may comprise the data store 145 or may be part of the data store 145.
The computing system 400 may be coupled via bus 405 to a display 435, such as a liquid crystal display, or an active matrix display, for displaying information to a user. An input device 430 such as a keyboard including alphanumeric and other keys may be coupled to bus 405 for communicating information and command selections to processor 410. The input device 430 may include a touch screen display 435. The input device 430 may also include a cursor controller (such as a mouse, a trackball, or cursor direction keys) for communicating direction information and command selections to the processor 410 and for controlling cursor movement on the display 435. For example, display 435 may be part of data processing system 105, client computing device 150, or other components of fig. 1.
The processes, systems, and methods described herein may be implemented by computing system 400 in response to processor 410 executing an arrangement of instructions contained in main memory 415. Such instructions may be read into main memory 415 by another computer-readable medium, such as storage device 425. Execution of the arrangement of instructions contained in main memory 415 enables computing system 400 to perform the illustrative processes described herein. One or more processors in a multi-processing arrangement may also be employed to execute the instructions included in main memory 415. Hardwired circuitry may be used in place of or in combination with software instructions and systems and methods described herein. The systems and methods described herein are not limited to any specific combination of hardware circuitry and software.
Although an example computing system has been described in FIG. 4, the subject matter comprising the operations described in this specification may be implemented in other types of digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them.
For situations where the system discussed herein gathers or may utilize personal information about a user, the user may be provided with an opportunity to control whether programs or features may gather personal information (e.g., information about the user's social network, social actions or activities, the user's preferences, or the user's location), or whether and/or how to receive content from a content server or other data processing system that may be more relevant to the user. In addition, prior to storing or using the particular data, the particular data may be anonymized in one or more ways such that personally identifiable information is removed when the parameters are generated. For example, the identity of the user may be anonymized such that personally identifiable information of the user cannot be determined, or the geographic location of the user may be generalized (such as to a city, zip code, or state county level) where location information is obtained such that a particular location of the user cannot be determined. Thus, the user can control the manner in which the content server gathers and uses information about him or her.
The subject matter and operations described in this specification can be implemented in digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them. The subject matter described in this specification can be implemented as one or more computer programs, e.g., one or more circuits of computer program instructions encoded on one or more computer storage media for execution by, or to control the operation of, data processing apparatus. Alternatively or additionally, the program instructions may be encoded on a manually-generated propagated signal, e.g., a machine-generated electrical, optical, or electromagnetic signal, that is generated to encode information for transmission to suitable receiver apparatus for execution by data processing apparatus. The computer storage medium may be or be included in the following: a computer readable storage device, a computer readable storage substrate, a random or serial access memory array or device, or a combination of one or more of them. When the computer storage medium is not a propagated signal, the computer storage medium may be a source or destination of computer program instructions encoded in an artificially generated propagated signal. The computer storage medium may also be or include the following: one or more individual components or media (e.g., multiple CDs, disks, or other storage devices). The operations described in this specification may be implemented as operations performed by a data processing apparatus on data stored in one or more computer readable storage devices or received from other sources.
The terms "data processing system," "computing device," "component," or "data processing apparatus" encompass various means, devices, and machines for processing data, including: such as a programmable processor, a computer, a system on a chip, or a combination or plurality of the foregoing. The apparatus may comprise dedicated logic circuitry, for example an FPGA (field programmable gate array) or an ASIC (application specific integrated circuit). In addition to hardware, the apparatus may include code that creates an execution environment for the computer program under discussion, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, a cross-platform runtime environment, a virtual machine, or a combination of one or more of them. The apparatus and execution environment may implement a variety of different computing model infrastructures, such as web services, distributed computing, and grid computing infrastructures. The interface management component 140, direct action API 135, content selector component 125, prediction component 120, or NLP component 110, as well as other data processing system 105 components, can include or share one or more data processing apparatuses, systems, computing devices, or processors.
A computer program (also known as a program, software application, script, or code) can be written in any form of programming language, including as a compiled or interpreted language, a declarative language, or a procedural language, and can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, object, or other unit suitable for use in a computing environment. The computer program may correspond to a file in a file system. A computer program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), or in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub-programs, or portions of code). A computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
The processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs (e.g., components of data processing system 105) to perform actions by operating on input data and generating output. The processes and logic flows can also be performed by, and apparatus can also be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit). Devices suitable for storing computer program instructions and data include all forms of non-volatile memory, media and memory devices, including: such as semiconductor memory devices (e.g., EPROM, EEPROM, and flash memory devices), magnetic disks (e.g., internal hard disk or removable disks), magneto-optical disks, CD-ROM disks, and DVD-ROM disks. The processor and the memory may be supplemented by, or incorporated in, special purpose logic circuitry.
The subject matter described herein may be implemented in a computing system that includes a back-end component (e.g., as a data server), or that includes a middleware component (e.g., an application server), or that includes a front-end component (e.g., a client computer having a graphical user interface or a web browser through which a user can interact with an implementation of the subject matter described in this specification), or a combination of one or more such back-end, middleware, or front-end components. The components of the system can be interconnected by any form or medium of digital data communication (e.g., a communication network). Examples of communication networks include: local area networks ("LANs") and wide area networks ("WANs"), the internet (e.g., the internet), and peer-to-peer networks (e.g., peer-to-peer networks).
A computing system, such as system 100 or system 400, may include clients and servers. The client and server are generally remote from each other and typically interact through a communication network (e.g., network 165). The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other. In some implementations, the server transmits data (e.g., data packets representing action data structures or content items) to the client device (e.g., to the client device 150 for the purpose of displaying data to and receiving user input from a user interacting with the client device, or to the service provider computing device 160 or the content provider computing device 155). Data generated on the client computing device (e.g., results of the user interaction) may be received from the client computing device at the server (e.g., received by the data processing system 105 from the computing device 150 or the content provider computing device 155 or the service provider computing device 160).
Although operations are depicted in the drawings in a particular order, such operations need not be performed in the particular order shown or in sequential order, and not all illustrated operations need be performed. The acts described herein may be performed in a different order.
The separation of individual system components does not require separation in all embodiments, and the described program components can be included in a single hardware or software product. For example, NLP component 110, content selector component 125, interface management component 140, or prediction component 120 can be a single component, an application, or program, or a logic device having one or more processing circuits, or a portion of one or more servers of data processing system 105.
Having now described a few illustrative embodiments, it should be apparent that the foregoing is illustrative and not limiting, and is presented by way of example. In particular, while many of the examples presented herein relate to a particular combination of method acts or system elements, these acts and these elements may be combined in other ways to achieve the same objectives. Acts, elements and features discussed in connection with one embodiment are not intended to be excluded from other embodiments or similar roles in an embodiment.
The phraseology and terminology used herein is for the purpose of description and should not be regarded as limiting. The use of "including," "having," "containing," "involving," "characterized by," and variations thereof herein, is meant to encompass the items listed thereafter and equivalents thereof as well as additional items and alternative embodiments consisting of items listed thereafter and thereafter in addition. In one embodiment, the systems and methods described herein consist of one of the described elements, acts, or components, each combination of more than one of the described elements, acts, or components, or all of the described elements, acts, or components.
Any reference to an embodiment or element or act of a system and method recited herein in the singular can also include an embodiment comprising a plurality of such elements, and any reference to any embodiment or element or act herein in the plural can also encompass embodiments comprising only a single element. References in the singular or plural are not intended to limit the presently disclosed systems or methods, their components, acts, or elements to either the singular or the plural configurations. References to any action or element based on any information, action, or element may include implementations in which the action or element is based at least in part on any information, action, or element.
Any embodiment disclosed herein may be combined with any other embodiment or example, and references to "an embodiment," "some embodiments," "one embodiment," etc., are not necessarily mutually exclusive and are intended to indicate that a particular feature, structure, or characteristic described in connection with the embodiment may be included in at least one embodiment or example. Such terms as used herein do not necessarily all refer to the same embodiment. Any embodiment may be combined with any other embodiment, including or excluding, in any manner consistent with aspects and embodiments disclosed herein.
Reference to "or" may be construed as inclusive such that any term described using "or" may indicate any one of a single described term, more than one described term, and all described terms. For example, references to "at least one of a 'and B' may include only 'a', only 'B', and both 'a' and 'B'. Such references, used in conjunction with "comprising" or other open-ended terms, may include additional terms.
Where technical features in the drawings, the detailed description, or any claim are followed by reference signs, the reference signs have been included for the purpose of increasing the intelligibility of the drawings, the detailed description, and the claims. Accordingly, neither the reference numerals nor the absence of reference numerals are intended to limit the scope of any claim element.
The systems and methods described herein may be embodied in other specific forms without departing from the characteristics of the systems and methods described herein. The above embodiments are illustrative and not limiting of the described systems and methods. The scope of the systems and methods described herein are, therefore, indicated by the appended claims rather than by the foregoing description, and all changes which come within the meaning and range of equivalency of the claims are therefore intended to be embraced therein.
Claims (21)
1. A system for transmitting packetized data in a voice activated packet-based computer network environment, comprising:
a data processing system having one or more processors coupled with a memory for:
identifying a request from a data packet comprising an input audio signal obtained via a first interface of a client device;
Selecting a digital component based on the request identified from the data packet;
identifying a plurality of candidate interfaces associated with the client device;
determining a plurality of utilization values corresponding to the plurality of candidate interfaces;
selecting a second interface from the plurality of candidate interfaces based on the plurality of utilization values, the second interface being on a second client device different from the client device; and
the digital component is transmitted to the second interface associated with the client device to output the digital component.
2. The system of claim 1, comprising the data processing system to:
generating an action data structure based on the request identified from the request, the action data structure comprising a response to the input audio signal and being separate from the digital component; and
a third interface is selected from the plurality of candidate interfaces, and the action data structure is transmitted to the third interface based on the plurality of utilization values.
3. The system of claim 1, comprising the data processing system to:
determining availability of the second interface for outputting the digital component based on a utilization value corresponding to the second interface; and
The digital component is transmitted to the second interface is determined based on the availability of the second interface.
4. The system of claim 1, comprising the data processing system to:
determining availability of a third interface for output based on a utilization value corresponding to the third interface; and
determining not to transmit the digital component to the third interface based on the availability of the third interface.
5. The system of claim 1, comprising the data processing system to:
ranking the plurality of candidate interfaces based on a corresponding plurality of utilization values; and
the second interface is selected from a plurality of candidate interfaces based on the ranking of the plurality of utilization values.
6. The system of claim 1, comprising the data processing system to:
determining a distance between the first interface and the second interface of the client device obtaining the input audio signal; and
an availability of the second interface to be presented is determined based on a comparison between the distance and a threshold.
7. The system of claim 1, comprising the data processing system to set a timeout period for the second interface after transmission of the digital component, prior to which transmission of the second digital component to the second interface associated with the client device is allowed.
8. The system of claim 1, comprising the data processing system for transmitting the digital component to the second interface associated with the client device to output an audio output.
9. The system of claim 1, comprising the data processing system to determine the plurality of utilization values corresponding to the plurality of candidate interfaces, each utilization value of the plurality of utilization values being indicative of at least one of: processing power, power requirements, battery status, memory utilization, or network bandwidth usage on a corresponding candidate interface of the plurality of candidate interfaces.
10. A method for transmitting packet data in a voice activated packet based computer network environment, comprising:
identifying, by the data processing system, a request from a data packet comprising an input audio signal obtained via a first interface of the client device;
selecting, by the data processing system, a digital component based on the request identified from the data packet;
identifying, by the data processing system, a plurality of candidate interfaces associated with the client device;
determining, by the data processing system, a plurality of utilization values corresponding to the plurality of candidate interfaces;
Selecting, by the data processing system, a second interface from the plurality of candidate interfaces based on the plurality of utilization values, the second interface on a second client device different from the client device; and
the digital component is transmitted by the data processing system to the second interface associated with the client device to output the digital component.
11. The method of claim 10, comprising:
generating, by the data processing system, a motion data structure based on the request identified from the requests, the motion data structure including a response to the input audio signal and being separate from the digital component; and
a third interface is selected from the plurality of candidate interfaces by the data processing system, and the action data structure is transmitted to the third interface based on the plurality of utilization values.
12. The method of claim 10, comprising:
determining, by the data processing system, availability of the second interface for output based on a utilization value corresponding to the second interface; and
transmitting the digital component to the second interface is determined by the data processing system based on the availability of the second interface.
13. The method of claim 10, comprising:
determining, by the data processing system, availability of a third interface for output based on a utilization value corresponding to the third interface; and
determining, by the data processing system, not to transmit the digital component to the third interface based on the availability of the third interface.
14. The method of claim 10, comprising:
ranking, by the data processing system, the plurality of candidate interfaces based on the corresponding plurality of utilization values; and
the second interface is selected from a plurality of candidate interfaces based on the ranking of the plurality of utilization values by the data processing system.
15. The method of claim 10, comprising the data processing system to:
determining, by the data processing system, a distance between the first interface and the second interface of the client device obtaining the input audio signal; and
an availability of the second interface to be presented is determined by the data processing system based on a comparison between the distance and a threshold.
16. The method of claim 10, comprising: a timeout period is set by the data processing system for the second interface after the digital component is transmitted, prior to which a transmission of a second digital component to the second interface associated with the client device is allowed.
17. The method of claim 10, comprising: the digital component is transmitted by the data processing system to the second interface associated with the client device for output as at least one of an audio output, an image output, or a text output.
18. The method of claim 10, comprising: determining, by the data processing system, the plurality of utilization values corresponding to the plurality of candidate interfaces, each utilization value of the plurality of utilization values indicating at least one of: processing power, power requirements, battery status, memory utilization, or network bandwidth usage on a corresponding candidate interface of the plurality of candidate interfaces.
19. A system for transmitting packetized data in a voice activated packet-based computer network environment, comprising:
a data processing system having one or more processors coupled with a memory for:
identifying a request from a data packet comprising an input audio signal obtained via a first interface of a client device;
selecting a digital component based on the request identified from the data packet;
identifying a plurality of candidate interfaces associated with the client device;
Determining a plurality of utilization values corresponding to the plurality of candidate interfaces;
selecting a second interface from the plurality of candidate interfaces based on the plurality of utilization values;
determining availability of the second interface for outputting the digital component based on a utilization value corresponding to the second interface; and
based on the availability of the second interface, the digital component is transmitted to the second interface associated with the client device to output the digital component.
20. A system for transmitting packetized data in a voice activated packet-based computer network environment, comprising:
a data processing system having one or more processors coupled with a memory for:
identifying a request from a data packet comprising an input audio signal obtained via a first interface of a client device;
selecting a digital component based on the request identified from the data packet;
identifying a plurality of candidate interfaces associated with the client device;
determining a plurality of utilization values corresponding to the plurality of candidate interfaces;
selecting a second interface from the plurality of candidate interfaces based on the plurality of utilization values;
Determining availability of a third interface for output based on a utilization value corresponding to the third interface;
determining not to transmit the digital component to the third interface based on availability of the third interface; and
the digital component is transmitted to the second interface associated with the client device to output the digital component.
21. A system for transmitting packetized data in a voice activated packet-based computer network environment, comprising:
a data processing system having one or more processors coupled with a memory for:
identifying a request from a data packet comprising an input audio signal obtained via a first interface of a client device;
selecting a digital component based on the request identified from the data packet;
identifying a plurality of candidate interfaces associated with the client device;
determining a plurality of utilization values corresponding to the plurality of candidate interfaces;
selecting a second interface from the plurality of candidate interfaces based on the plurality of utilization values;
determining a distance between the first interface and the second interface of the client device obtaining the input audio signal;
Determining availability of the second interface to be presented based on a comparison between the distance and a threshold; and
the digital component is transmitted to the second interface associated with the client device to output the digital component.
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
CN202310910488.0A CN117059080A (en) | 2017-12-08 | 2017-12-08 | Detection of duplicate packetized data transmissions |
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
CN202310910488.0A CN117059080A (en) | 2017-12-08 | 2017-12-08 | Detection of duplicate packetized data transmissions |
CN201780013430.9A CN110168636B (en) | 2017-12-08 | 2017-12-08 | Detection of duplicate packetized data transmissions |
PCT/US2017/065454 WO2019112621A1 (en) | 2017-12-08 | 2017-12-08 | Detection of duplicate packetized data transmission |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201780013430.9A Division CN110168636B (en) | 2017-12-08 | 2017-12-08 | Detection of duplicate packetized data transmissions |
Publications (1)
Publication Number | Publication Date |
---|---|
CN117059080A true CN117059080A (en) | 2023-11-14 |
Family
ID=60937882
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201780013430.9A Active CN110168636B (en) | 2017-12-08 | 2017-12-08 | Detection of duplicate packetized data transmissions |
CN202310910488.0A Pending CN117059080A (en) | 2017-12-08 | 2017-12-08 | Detection of duplicate packetized data transmissions |
Family Applications Before (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201780013430.9A Active CN110168636B (en) | 2017-12-08 | 2017-12-08 | Detection of duplicate packetized data transmissions |
Country Status (4)
Country | Link |
---|---|
US (2) | US11087751B2 (en) |
EP (2) | EP3519981B1 (en) |
CN (2) | CN110168636B (en) |
WO (1) | WO2019112621A1 (en) |
Family Cites Families (19)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20020059340A1 (en) * | 1998-10-09 | 2002-05-16 | Shari M. Centrone | Digital greetings |
US20170237801A1 (en) * | 2004-06-30 | 2017-08-17 | Google Inc. | Device configuration-based function delivery |
EA017014B1 (en) * | 2008-02-22 | 2012-09-28 | Сейдж Коннекс, Ллк | Personal data portal on a pstn and online home with virtual rooms and objects |
KR101184109B1 (en) * | 2008-03-31 | 2012-09-18 | 에코스타 테크놀로지스 엘엘씨 | Systems, methods and apparatus for transmitting data over a voice channel of a wireless telephone network |
US8818797B2 (en) * | 2010-12-23 | 2014-08-26 | Microsoft Corporation | Dual-band speech encoding |
US9576574B2 (en) * | 2012-09-10 | 2017-02-21 | Apple Inc. | Context-sensitive handling of interruptions by intelligent digital assistant |
US10735552B2 (en) | 2013-01-31 | 2020-08-04 | Google Llc | Secondary transmissions of packetized data |
CN104969289B (en) | 2013-02-07 | 2021-05-28 | 苹果公司 | Voice trigger of digital assistant |
KR102389312B1 (en) * | 2014-07-08 | 2022-04-22 | 삼성전자주식회사 | Method and apparatus for transmitting multimedia data |
US9508339B2 (en) * | 2015-01-30 | 2016-11-29 | Microsoft Technology Licensing, Llc | Updating language understanding classifier models for a digital personal assistant based on crowd-sourcing |
US10305911B1 (en) * | 2015-07-06 | 2019-05-28 | Amazon Technologies, Inc. | Systems and methods for managing access to web content |
US20170092278A1 (en) | 2015-09-30 | 2017-03-30 | Apple Inc. | Speaker recognition |
US9747926B2 (en) | 2015-10-16 | 2017-08-29 | Google Inc. | Hotword recognition |
US9928840B2 (en) | 2015-10-16 | 2018-03-27 | Google Llc | Hotword recognition |
US10691473B2 (en) | 2015-11-06 | 2020-06-23 | Apple Inc. | Intelligent automated assistant in a messaging environment |
US10192552B2 (en) | 2016-06-10 | 2019-01-29 | Apple Inc. | Digital assistant providing whispered speech |
US10297254B2 (en) * | 2016-10-03 | 2019-05-21 | Google Llc | Task initiation using long-tail voice commands by weighting strength of association of the tasks and their respective commands based on user feedback |
US10181323B2 (en) * | 2016-10-19 | 2019-01-15 | Sonos, Inc. | Arbitration-based voice recognition |
CN107124230B (en) * | 2017-04-25 | 2018-09-04 | 腾讯科技（深圳）有限公司 | Sound wave communication method, terminal and server |
-
2017
- 2017-12-08 US US16/063,122 patent/US11087751B2/en active Active
- 2017-12-08 WO PCT/US2017/065454 patent/WO2019112621A1/en unknown
- 2017-12-08 EP EP17826025.3A patent/EP3519981B1/en active Active
- 2017-12-08 EP EP21187967.1A patent/EP3920179A1/en active Pending
- 2017-12-08 CN CN201780013430.9A patent/CN110168636B/en active Active
- 2017-12-08 CN CN202310910488.0A patent/CN117059080A/en active Pending
-
2021
- 2021-08-03 US US17/393,258 patent/US11798555B2/en active Active
Also Published As
Publication number | Publication date |
---|---|
US20210366481A1 (en) | 2021-11-25 |
CN110168636B (en) | 2023-08-01 |
EP3519981A1 (en) | 2019-08-07 |
WO2019112621A1 (en) | 2019-06-13 |
US11087751B2 (en) | 2021-08-10 |
US11798555B2 (en) | 2023-10-24 |
EP3920179A1 (en) | 2021-12-08 |
EP3519981B1 (en) | 2021-07-28 |
CN110168636A (en) | 2019-08-23 |
US20200294498A1 (en) | 2020-09-17 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US11087760B2 (en) | Multimodal transmission of packetized data | |
AU2020217377B2 (en) | Multimodal transmission of packetized data | |
US11705121B2 (en) | Multimodal transmission of packetized data | |
US20220303225A1 (en) | Content Source Allocation Between Computing Devices | |
CN110168636B (en) | Detection of duplicate packetized data transmissions |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
SE01 | Entry into force of request for substantive examination |
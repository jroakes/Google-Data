CN115633542A - Attribution model for correlated and mixed content item responses - Google Patents
Attribution model for correlated and mixed content item responses Download PDFInfo
- Publication number
- CN115633542A CN115633542A CN202180007459.2A CN202180007459A CN115633542A CN 115633542 A CN115633542 A CN 115633542A CN 202180007459 A CN202180007459 A CN 202180007459A CN 115633542 A CN115633542 A CN 115633542A
- Authority
- CN
- China
- Prior art keywords
- product
- response
- content item
- node
- processing circuits
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Granted
Links
- 230000004044 response Effects 0.000 title claims abstract description 229
- 230000002596 correlated effect Effects 0.000 title description 2
- 230000003993 interaction Effects 0.000 claims abstract description 91
- 238000000034 method Methods 0.000 claims abstract description 73
- 238000012545 processing Methods 0.000 claims description 94
- 238000004458 analytical method Methods 0.000 claims description 18
- 238000012937 correction Methods 0.000 claims description 14
- 230000004931 aggregating effect Effects 0.000 claims description 7
- 230000035945 sensitivity Effects 0.000 claims description 7
- 230000002776 aggregation Effects 0.000 abstract description 3
- 238000004220 aggregation Methods 0.000 abstract description 3
- 238000004891 communication Methods 0.000 description 14
- 230000000694 effects Effects 0.000 description 13
- 239000013598 vector Substances 0.000 description 13
- 238000004590 computer program Methods 0.000 description 11
- 230000009471 action Effects 0.000 description 10
- 230000003287 optical effect Effects 0.000 description 6
- 230000006870 function Effects 0.000 description 5
- 230000006872 improvement Effects 0.000 description 5
- 230000008569 process Effects 0.000 description 5
- 238000004364 calculation method Methods 0.000 description 4
- 238000010586 diagram Methods 0.000 description 4
- 238000010606 normalization Methods 0.000 description 4
- 235000013311 vegetables Nutrition 0.000 description 4
- VYZAMTAEIAYCRO-UHFFFAOYSA-N Chromium Chemical compound [Cr] VYZAMTAEIAYCRO-UHFFFAOYSA-N 0.000 description 3
- 238000004422 calculation algorithm Methods 0.000 description 3
- 230000006855 networking Effects 0.000 description 3
- 230000000644 propagated effect Effects 0.000 description 3
- 238000013459 approach Methods 0.000 description 2
- 238000013528 artificial neural network Methods 0.000 description 2
- 230000001364 causal effect Effects 0.000 description 2
- 238000006243 chemical reaction Methods 0.000 description 2
- 239000004973 liquid crystal related substance Substances 0.000 description 2
- 238000013515 script Methods 0.000 description 2
- 238000000926 separation method Methods 0.000 description 2
- 230000003068 static effect Effects 0.000 description 2
- 230000004913 activation Effects 0.000 description 1
- 238000001994 activation Methods 0.000 description 1
- 238000007792 addition Methods 0.000 description 1
- 230000006399 behavior Effects 0.000 description 1
- 230000003542 behavioural effect Effects 0.000 description 1
- 230000005540 biological transmission Effects 0.000 description 1
- 230000008859 change Effects 0.000 description 1
- 230000001276 controlling effect Effects 0.000 description 1
- 238000013527 convolutional neural network Methods 0.000 description 1
- 235000014510 cooky Nutrition 0.000 description 1
- 125000004122 cyclic group Chemical group 0.000 description 1
- 238000005516 engineering process Methods 0.000 description 1
- 238000010413 gardening Methods 0.000 description 1
- 230000036541 health Effects 0.000 description 1
- 230000000977 initiatory effect Effects 0.000 description 1
- 238000012417 linear regression Methods 0.000 description 1
- 238000010801 machine learning Methods 0.000 description 1
- 239000011159 matrix material Substances 0.000 description 1
- 238000012986 modification Methods 0.000 description 1
- 230000004048 modification Effects 0.000 description 1
- 238000003032 molecular docking Methods 0.000 description 1
- 238000012544 monitoring process Methods 0.000 description 1
- 230000008520 organization Effects 0.000 description 1
- 238000003909 pattern recognition Methods 0.000 description 1
- 230000009467 reduction Effects 0.000 description 1
- 238000012552 review Methods 0.000 description 1
- 230000001932 seasonal effect Effects 0.000 description 1
- 239000004065 semiconductor Substances 0.000 description 1
- 230000001953 sensory effect Effects 0.000 description 1
- 239000007787 solid Substances 0.000 description 1
- 239000000758 substrate Substances 0.000 description 1
- 238000012546 transfer Methods 0.000 description 1
- 230000000007 visual effect Effects 0.000 description 1
- 238000005406 washing Methods 0.000 description 1
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q30/00—Commerce
- G06Q30/02—Marketing; Price estimation or determination; Fundraising
- G06Q30/0201—Market modelling; Market analysis; Collecting market data
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q30/00—Commerce
- G06Q30/02—Marketing; Price estimation or determination; Fundraising
- G06Q30/0241—Advertisements
- G06Q30/0242—Determining effectiveness of advertisements
- G06Q30/0243—Comparative campaigns
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q10/00—Administration; Management
- G06Q10/10—Office automation; Time management
- G06Q10/101—Collaborative creation, e.g. joint development of products or services
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q30/00—Commerce
- G06Q30/02—Marketing; Price estimation or determination; Fundraising
- G06Q30/0241—Advertisements
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q30/00—Commerce
- G06Q30/02—Marketing; Price estimation or determination; Fundraising
- G06Q30/0241—Advertisements
- G06Q30/0242—Determining effectiveness of advertisements
- G06Q30/0244—Optimization
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q30/00—Commerce
- G06Q30/02—Marketing; Price estimation or determination; Fundraising
- G06Q30/0241—Advertisements
- G06Q30/0242—Determining effectiveness of advertisements
- G06Q30/0246—Traffic
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q30/00—Commerce
- G06Q30/06—Buying, selling or leasing transactions
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q50/00—Systems or methods specially adapted for specific business sectors, e.g. utilities or tourism
- G06Q50/10—Services
Abstract
Systems, methods, and computer-readable storage media for determining a product response for an analytics system. One method comprises the following steps: a product response for a first product is received, and a relevance graph identifying a plurality of products, the product response including interaction data indicating user interaction with a content item of a second product, wherein the content item is associated with a content provider. The method further comprises the following steps: weights of degree measures of relevance of a first node of a first product to a second node of a second product in the relevance graph are aggregated, and a relevance index is generated based on normalizing the aggregation of the weights of degree measures. The method also includes, in response to the relevance index exceeding a threshold, calculating attribution credits assigned to product responses based on the relevance index, and providing the attribution credits to the content provider.
Description
Background
The present disclosure relates generally to the field of attribution models. In computer networking environments, such as the internet, attribution models have been used in an attempt to predict the impact of content.
Disclosure of Invention
Some embodiments relate to a method for determining a related product response, the method being implemented by one or more processing circuits. The method includes receiving a product response for a first product, the product response including interaction data indicating a user interaction with a content item of a second product, wherein the content item is associated with a content provider. Further, the method includes identifying a dependency graph for a plurality of products. Further, the method includes aggregating weights of the measure of the degree of relevance of the first node of the first product to the second node of the second product in the relevance graph. Further, the method includes generating a relevance index based on normalizing the aggregate of the weights of the degree metrics. Further, the method includes calculating attribution credit to assign to a product response based on the relevance index in response to the relevance index exceeding a threshold. Further, the method includes providing attribution credit to a content provider of the content item.
In some embodiments, the method further comprises: receiving a pingback correction indicating that a product response was sent back from an entity computing system associated with the first product, updating attribution credits reflecting the sent back product response, and providing the updated attribution credits to the content provider. In various embodiments, the method further comprises: identifying, by the one or more processors, a trend of the product response based on analyzing the interaction data and historical interaction data of previous product responses, determining, in response to identifying the trend, a different content item associated with the first product, and modifying a content item slot of the content item with the different content item. In some embodiments, the method further comprises: in response to identifying the trend, a new weight of the degree metric between the first node and the second node is calculated, and the relevance graph is updated with the new weight of the degree metric between the first node and the second node. In various embodiments, the dependency graph includes a plurality of nodes including a first node and a second node, and wherein each node of the plurality of nodes is associated with a product of the plurality of products. In some embodiments, each of a plurality of degree metrics connecting a plurality of nodes of the relevance graph is weighted based on a relationship between a plurality of products, wherein the relationship is at least one of an explicit designation of a relatively weighted entity between the relationships, a product identifier, one or more taxonomies, one or more n-gram sequences, or user device data. In various embodiments, normalizing includes linearly weighting a weight of the degree metric between the first node and the second node and scaling the weight of the linearly weighted degree metric to a scale of 1.0. In some implementations, the threshold is based on at least one of a first sensitivity set by the entity, a second sensitivity set by the content provider, the content item, the first product, or the second product, and wherein the interaction data includes a timestamp associated with the event and user device data.
Some embodiments relate to a method for determining a full product response, the method being implemented by one or more processing circuits. The method includes receiving a product response for a first product and a second product, the product response including interaction data indicating a user interaction with a content item of the second product, wherein the content item is associated with a content provider. Further, the method includes calculating a first attribution credit allocated to the product response. Further, the method includes identifying a dependency graph for a plurality of products. Further, the method includes aggregating weights of the measure of the degree of relevance of the first node of the first product to the second node of the second product in the relevance graph. Further, the method includes generating a relevance index based on normalizing the aggregate of the weights of the degree metric. Further, the method includes calculating a second attribution credit allocated to the full product response based on the relevance index in response to the relevance index exceeding a threshold. Further, the method includes providing the first attribution credit and the second attribution credit to a content provider of the content item.
In some embodiments, the method further comprises: receiving a pingback correction indicating that a full product response was sent back from an entity computing system associated with the first product, updating a second attribution credit reflecting the sent back product response, and providing the updated second attribution credit to the content provider. In various embodiments, the method further comprises: the method further includes identifying a trend of the product response based on analyzing the interaction data and historical interaction data of previous product responses, determining a different content item associated with the first product in response to identifying the trend, and modifying a content item slot of the content item with the different content item. In some embodiments, the method further comprises: in response to identifying the trend, a new weight of the degree metric between the first node and the second node is calculated, and the relevance graph is updated with the new weight of the degree metric between the first node and the second node.
Some embodiments relate to a system having at least one processing circuit. The at least one processing circuit may be configured to receive a product response for a first product, the product response including interaction data indicative of a user interaction with a content item of a second product, wherein the content item is associated with a content provider. Further, the at least one processing circuit may be configured to identify a dependency graph for a plurality of products. Further, the at least one processing circuit may be configured to aggregate weights of degree metrics of relevance of a first node of the first product to a second node of the second product in the relevance graph. Further, the at least one processing circuit may be configured to generate the relevance index based on normalizing the aggregate of the weights of the degree metrics. Further, the at least one processing circuit may be configured to calculate, by the one or more processing circuits, attribution credit to assign to the product response based on the relevance index in response to the relevance index exceeding a threshold. Further, the at least one processing circuit may be configured to provide attribution credit to a content provider of the content item.
In some embodiments, the at least one processing circuit may be configured to: receiving a pingback correction indicating that a product response was sent back from an entity computing system associated with the first product, updating attribution credits reflecting the sent back product response, and providing the updated attribution credits to the content provider. In various embodiments, the at least one processing circuit may be configured to: the method further includes identifying a trend of the product response based on analyzing the interaction data and historical interaction data of previous product responses, determining a different content item associated with the first product in response to identifying the trend, and modifying a content item slot of the content item with the different content item. In some implementations, the at least one processing circuit may be configured to: in response to identifying the trend, a new weight of the degree metric between the first node and the second node is calculated, and the relevance graph is updated with the new weight of the degree metric between the first node and the second node. In various embodiments, the at least one processing circuit may be configured to: updating the attribution credit reflecting the product response including the first product and the second product, and providing the updated attribution credit to the content provider.
Some implementations relate to one or more computer-readable storage media having instructions stored thereon that, when executed by at least one processing circuit, cause the at least one processing circuit to perform operations. The operations include receiving a product response for a first product, the product response including interaction data indicating a user interaction with a content item of a second product, wherein the content item is associated with a content provider. Further, the operations include identifying a dependency graph for a plurality of products. Further, the operations include aggregating weights of the degree metric of relevance of the first node of the first product to the second node of the second product in the relevance graph. Further, the operations include generating a relevance index based on normalizing the aggregate of the weights of the degree metrics. Further, the operations include calculating attribution credits assigned to the product responses based on the relevance index in response to the relevance index exceeding a threshold. Further, the operations include providing attribution credit to a content provider of the content item.
Drawings
The figures are not intended to be drawn to scale. Like reference numbers and designations in the various drawings indicate like elements. For purposes of clarity, not every component may be labeled in every drawing. In the drawings:
FIG. 1 is a block diagram of an analytics system and associated environment in accordance with an illustrative embodiment;
FIG. 2 is a flowchart of a method for determining a relevant product response in accordance with an illustrative embodiment;
FIG. 3 is a flowchart of a method for determining a full product response in accordance with an illustrative embodiment;
FIG. 4 is an exemplary representation of a dependency graph in accordance with an illustrative embodiment;
FIG. 5 is a block diagram of a computing system in accordance with an illustrative embodiment.
Detailed Description
The present disclosure relates generally to systems and methods for determining a full product response and a related product response for a content item. An attribution model (attribution model) may be used to measure the impact of the presentation of one or more content items on one or more resources (e.g., web pages, mobile applications, videos, smart assistants). In some embodiments, the third-party attribution model may attribute a single product to a single content item, but may not attribute related products or mixed products (e.g., more than a single product) to a single content item. That is, the attribution model may be trained to attribute credits (or attribution values) to content providers when product responses occur for a single product associated with a single content item. However, content items associated with different products that provide user responses may not be attributed (e.g., discarded and/or ignored) even though they may be related (e.g., headphone responses after selecting a content item associated with a phone). Furthermore, a mixed response that includes multiple products may be underestimated or overestimated based on the content items of a single product. Accordingly, the systems and methods described herein relate to accurately attributing related product responses and blended product responses from user interactions with content items.
In many systems, content providers may develop active recommendations (initiatives) in which they frequently employ content items associated with an entity's product between content networks. The attribution model may be used to estimate (e.g., based on causality) the impact of content items on responses. However, when receiving product responses from a product that is different from the product associated with the content item, it is challenging to accurately assign attribution credits to the content item based on the different product. Thus, the ability to attribute related products or mixed product bundles (bundles) such that attribute credits can be accurately assigned without underestimating, overestimating, or unevaluating responses provides an attribute model with enhanced performance and efficiency while reducing the amount of responses that are not evaluated. This causal approach allows the attribution model to provide significant improvements to the prediction, such that the accuracy of the prediction and the performance of the attribution model are improved, and as a result, content providers are enabled to make informed decisions about their active recommendations. Accordingly, aspects of the present disclosure address problems in attribution modeling architectures by designing an attribution model that utilizes a relevance graph (relatedness graph) to generate a relevance index for assigning attribution credits to content providers of content items.
Accordingly, the present disclosure includes systems and methods for determining a relevant product response and a full product response from user interaction with a content item. In some implementations, the described systems and methods involve utilizing a dependency graph. A dependency graph may be represented by a series of vectors between nodes (e.g., products), each vector having its own dependency weights, which may be aggregated and normalized to establish a dependency index between two or more nodes. In various embodiments, the weighting of the correlations may be based on a number of factors, such as, but not limited to, computational linguistics and probabilities, taxonomies, product data, user customizations, behavioral data, financial data, and the like. Further, the relevance index can be used to calculate attribution credits for relevant product responses and full product responses. Thus, the systems and methods described herein enable attribution models to improve the accuracy of predictions without discarding and/or evaluating portions of a mixed product bundle of different products that may be related or products associated with content items. In particular, the solution provides a significant improvement to an attribution modeling framework that computes attribution credits for responses. In some embodiments, the attribution model may also update and/or modify the attribution credits for the relevant product response and the full product response after the entity provides the credit back to the user of the relevant product response and the full product response.
Moreover, by using an improved attribution modeling architecture, aspects of the technical solution may reduce the amount of data discarded, which is a significant improvement over other attribution modeling architectures. That is, by using the relevance graph, the technical solution may provide accurate estimates of relevant and complete product responses without transmitting queries and/or requests for protected or private information (e.g., financial information, internet history, identifiers, etc.) of users and/or entities to determine the impact of content items on user responses. This protects not only the attribution models and their associated databases from exposing protected or private information of users and/or entities, but also client devices from exposing their protected or private information, which is a significant improvement over the security of networked systems.
Where the systems discussed herein collect or may utilize personal information about a user and/or entity, the user and/or entity is provided with an opportunity to control whether programs or features collect user information and/or entity information (e.g., information about the user's social network, social actions or activities, profession, the user's preferences, or the user's current location), or whether and/or how to receive content from a content server that may be more relevant to the user and/or entity. Additionally, or alternatively, certain data may be processed in one or more ways before it is stored or used, such that personally identifiable information is removed. For example, the identity of the user may be treated so that personally identifiable information of the user cannot be determined, or the geographic location of the user may be generalized to the place where the location information is obtained (such as to a city, ZIP code, or state level) so that the particular location of the user cannot be determined. Thus, the user and/or entity may control how the content server collects and uses information about the user and/or entity.
Referring now to FIG. 1, a block diagram of an analytics system 110 and associated environment 100 is shown, in accordance with an illustrative embodiment. One or more user devices 140 (e.g., smartphones, tablets, computers, etc.) may be used by a user to perform various actions and/or access various types of content, some of which may be provided over a network 130 (e.g., the internet, a LAN, a WAN, etc.). As used herein, a "user" or "entity" may refer to an individual operating a user device 140, interacting with a resource or content item via the user device 140, and the like. The user device 140 may be used to send data to the analytics system 110, or may be used to access websites (e.g., using an internet browser), access mobile applications, access videos (e.g., television, live streaming), media files, communicate with smart assistants, and/or any other type of content. In some implementations, the user device 140 has enabled location services that can be tracked over the network 130. The location service may use GPS or other techniques to determine the location of the user device 140.
The content provider device 150 may specify input (e.g., spending an amount), a set of one or more content items (e.g., some or all items associated with an activity that includes a product), and one or more product lists associated with one or more third parties. The analytics system 110 may be configured to generate a relevance graph based on information received from the content provider device 150 and/or with other information from other devices/systems described herein.
The content management system 170 may be configured to select content for display to a user within a resource (e.g., a web page, a mobile application (e.g., google Chrome, google bridging, google Pay), a video (e.g., youTube, video on Google Play), etc.) and provide the content item to the user device 140 over the network 130 for display within the resource. The content from which the content management system 170 selects an item may be provided by one or more content providers using one or more content provider devices 150 via the network 130. In some implementations, the content management system 170 can select (e.g., via a website, mobile application, and/or video, etc.) a content item from the content provider 150 to display on the user device 140. In such implementations, the content management system 170 can determine content to publish in one or more content interfaces of a resource (e.g., a web page, a mobile application, a video, etc.).
The content management system 170 may be communicatively and operatively coupled to a content database 172, and the content database 172 may be configured to store various information related to content items and content item slots. For example, the information may be received from the analytics system 110, the user device 140, the content provider device 150, and/or the data source 160. The content management system 170 may be configured to query the content database 172 for information and store the information in the content database 172. In various embodiments, content database 172 includes various transitory and/or non-transitory storage media. The storage medium may include, but is not limited to, magnetic storage, optical storage, flash memory, RAM, and the like. Content database 172 and/or content management system 170 may perform database functions (i.e., managing data stored in content items 174) using various APIs. The API may be, but is not limited to, SQL, noSQL, newSQL, ODBC, JDBC, etc.
The third party system 180 may be a computing device associated with an entity that provides input (e.g., content costs) to the content provider device 150 in an attempt to receive responses associated with one or more products of the entity. Third-party system 180 may be an internet commerce system (or "e-commerce system," e.g., business-to-business (B2B), business-to-customer (B2C), customer-to-customer (C2C), or customer-to-business (C2B)) configured to provide an interface (e.g., graphical User Interface (GUI)) to user device 140 via a website (e.g., using an internet browser), via a mobile application (e.g., google Chrome, google Maps, gmail), via video (e.g., television, live streaming), via a smart Assistant (e.g., google Assistant). In some embodiments, the third party system 180 may host the customization interface at a Uniform Resource Locator (URL) by a host device (e.g., a computing device), as well as a collection of files that define the customization interface and are stored on the host device (e.g., in a database). Each third-party system may host a combination of one or more websites, mobile applications, or videos that may present digital content.
In various embodiments, third-party system 180 may host the customized interface on a mobile application stored on user device 140 and downloaded in an application store. As such, each third party system (e.g., 180) may include the user's shopping experience. The user may be redirected to provide a response (e.g., purchase a product or service) based on selecting a content item in a content item slot hosted by the content provider device 150 and/or the content management system 170. For example, upon selection of a content item, a mobile application on the user device may present a response opportunity to the customer. In another example, upon selection of a content item in the video, the user device may be redirected to a website of the third-party system to complete the response. The redirection (e.g., based on a click or selection) may include interaction data associated with the content item. The interaction data may be delivered or provided to the third party system 180 as a packet of data, and any additional interactions on the third party system 180 may also be recorded and stored as a packet of interaction data. In some embodiments, after the product response, the packet of interaction data including the product response and the activity log may be sent to the analytics system 110 for analysis (e.g., to determine a relevant product response and/or a complete product response). Further, the analytics system 110 and the third party system 180 may be communicatively coupled using various APIs to exchange data (i.e., manage product response and interaction data stored in the analytics database 120). The API may be, but is not limited to, SQL, noSQL, newSQL, ODBC, JDBC, etc.
The analytics system 110 may be used by the content provider 150 to attempt to quantify the impact (e.g., inputs, responses) of content items. The analysis system 110 may include one or more processors (e.g., any general or special purpose processor), and may include and/or be operatively coupled to one or more transitory and/or non-transitory storage media and/or memory devices (e.g., any computer-readable storage medium, such as magnetic storage, optical storage, flash memory, RAM, etc.). In various implementations, the analytics system 110 and the content management system 170 may be implemented as separate systems or integrated within a single system (e.g., the content management system 170 may be configured to incorporate some or all of the functionality/capabilities of the analytics system 110). The analytics system 110 may be configured to communicate over the network 130 via various architectures (e.g., a client/server architecture, a peer-to-peer architecture, etc.). The analysis system 110 may be configured to provide various interfaces for analyzing attributed credits, monitoring product responses, and performing pingback corrections.
The analytics system 110 may be communicatively and operatively coupled to an analytics database 120, and the analytics database 120 may be configured to store various information related to determining correlations and attributed credits performed by the analytics system 110. For example, information may be received from the user device 140, the content provider device 150, the data source 160, and/or the content management system 170. The analytics system 110 may be configured to query the analytics database 120 for information and store the information in the analytics database 120. In various embodiments, the analytics database 120 includes various transitory and/or non-transitory storage media. The storage medium may include, but is not limited to, magnetic storage devices, optical storage devices, flash memory, RAM, and the like. Analysis database 120 and/or analysis system 110 may use various APIs to perform database functions (i.e., manage data stored in analysis database 120). The API may be, but is not limited to, SQL, noSQL, newSQL, ODBC, JDBC, etc.
In some implementations, the third party system 180 can transmit the response of the product and provide information (e.g., interaction data) about the response and/or the product, which can be stored in the analytics database 120 (e.g., the interaction data set 122). Further, the analytics system 110 may be configured to retrieve data (e.g., user activity data, content activity data, etc.) via the network 130, which may be stored in the interaction data set 122 of the analytics database 120. In various embodiments, the interaction data set 122 may include interactions (such as, but not limited to, last click, last view, play (playonce), historical data, etc.), product response information, content item information (such as, but not limited to, associated products, placement, timing information, etc.), product identifiers, purchase information (such as, but not limited to, customer financial information, purchase price, discounts, etc.), user information (such as, but not limited to, browser information, user device data, operating system, historical information, user identifiers, etc.), third party information, content provider information, virtual assistant information (such as, but not limited to, questions, user voice data, settings, notifications, etc.).
The analysis system 110 may be configured to communicate with any device or system shown in the environment 100 via the network 130. The analysis system 110 may be configured to receive information from the network 130. The information may include browsing history, cookie logs, television content data, printed publication content data, broadcast content data, and/or online content campaign data. The analytics system 110 may also be configured to receive and/or collect interactions of the user device 140 over the network 130. This information may be stored as content data in the interaction data set 122.
The data source 160 may include data collected by the analytics system 110 by receiving interaction data from the content provider device 150, the user device 140, and/or the third party system 180. The data may be content input (e.g., content spending), content response (e.g., content revenue), product response (e.g., product purchase) for a particular media channel (e.g., television, internet content, radio, billboard, printed publication) at one or more points in time. The content input may include costs on television content, billboard content, internet content (e.g., search content costs or display content costs, etc.). The data may be data input by a particular entity or user (e.g., patient, customer purchase, internet content item) at one or more points in time. The content input may include data associated with multiple entities, multiple users, a particular entity, a particular user, and the like. Data sources 160 may also include various data aggregation systems and/or entities that collect content data. The analysis system 110 may receive product response data from the data source 160 via the network 130. This information may be stored as product response data in the interaction data set 122.
The analytics system 110 may be configured to send information and/or notifications to the content provider device 150 regarding various metrics (e.g., predictions) or models it determines, generates, or fits. This may allow a user of one of the content provider devices 150 to view various metrics or models determined by the analysis system 110. Further, the analytics system 110 may use various indicators to identify the opportunistic times to contact the user or the appropriate amount (e.g., best mix media input) to enter on various media channels (e.g., television advertisements, internet advertisements, broadcast advertisements, etc.). The analytics system 110 may cause a message to be sent to the content management system 170 and/or the content provider device 150 to indicate that the content management system 170 should contact a particular user at a particular time and/or a content campaign operator with particular parameters.
The analytics system 110 may include one or more systems (i.e., computer readable instructions executable by a processor) and/or circuits (i.e., an ASIC, a processor memory combination, logic circuitry, etc.) configured to perform the various functions of the analytics system 110. In some implementations, the system may be or include a credit scoring system 112, a pingback system 114, a modeler 116, and a data manager 118. It is understood that various embodiments may include more, fewer, or different systems than those shown in fig. 1, and all such modifications are considered within the scope of this disclosure.
The data manager 118 may be configured to generate various data structures stored in the analytics database 120. For example, the data manager 118 may be configured to generate a dependency graph. In some embodiments, a dependency graph may be represented by a series of vectors between nodes, each vector having its own dependency weight (sometimes referred to herein as a "dependency index"). For example, one node may be a pair of headphones associated with company X, another node may be a phone associated with company X, and yet another node may be a smart speaker associated with company Y. In particular, the relevance graph can be a data structure included in the relevance data set 124 and indicate various relationships between items and/or products of one or more third parties. For example, a relevance graph can include a plurality of products associated with a plurality of third parties, which can include relevance indices between various nodes (e.g., items and/or products) within the relevance graph. The relevance graph can be generated by the data manager 118 based on receiving and collecting data from multiple sources to determine relevance between one or more items and/or products. In various embodiments, the plurality of sources may include, but are not limited to, data sources 160 (e.g., n-grams based on product descriptions (sometimes referred to as "Ngrams"), n-grams based on third party (or merchant) descriptions, n-grams based on public/private data collected by reviews, articles, and other, financial institutions), user devices 140 (e.g., user customizations, user co-response behavior, purchase history), content provider devices 150, third party systems 180, and so forth. In some implementations, the data manager 118 can continually update the relevance graph in real-time based on receiving and collecting data from multiple sources. Further, new and/or additional data sources (e.g., new n-gram data, additional user data, additional interaction data) may be used to update the dependency graph (e.g., update the dependency index, add new products, and determine dependencies with other products in the dependency graph, etc.) on a continuous basis (e.g., autonomously, after scanning for new/additional sources).
The data manager 118 may also be configured to receive a plurality of product responses from the plurality of user devices 140, the content provider device 150, the data source 160, and/or the third party system 180. For example, after a customer completes a purchase (e.g., a product response) on the online store (e.g., third-party system 180) of seller J, data manager 118 may receive a product response including interaction data indicating user interaction with a content item of a particular product. In another example, upon initiation of a service (e.g., a streaming service, an investment service, a tutorial service, etc.) by a customer of the service provider K (e.g., 180), the data manager 118 can receive a product response including interaction data indicative of user interaction with content items of the particular service. In yet another example, after the customer completes the transaction in person at company L, the data manager 118 may receive a product response including interaction data indicative of the transaction. However, in the following example, the data manager 118 may infer the content items with which the user interacted based on various other interaction data (e.g., user device data, financial information, content provider information, etc.).
The data manager 118 may be configured to receive interaction data (e.g., stored in the interaction data set 122). In some embodiments, the data manager 118 may be configured to receive interaction data from the third-party system 180, the user device 140, and/or the content provider device 150 from a plurality of responses, rather than data specific to a particular customer. Further, to protect specific customer information, the interaction data may be stripped and/or anonymized by the data manager 118 to remove the customer's identification information. In various embodiments, the received data received by the data manager 118 may be data aggregated by the analytics system 110 and/or data received by the analytics system 110 from the data source 160.
The data manager 118 may also be configured to communicate with the content management system 170 via the network 130 to determine a set of one or more content items associated with the content provider to analyze after receiving the product response. Further, the data manager 118 may be configured to determine one or more characteristics associated with one or more content items. The characteristics may include associated keywords used in the search query, website views, video views (e.g., via YouTube), content views, content clicks, mobile application views (e.g., via Google Chrome, google Maps, gmail), and so forth. For example, the data manager 118 may be configured to determine (e.g., via a campaign ID or other identifier) content items associated with the content campaign for the new restaurant. In this example, the data manager 118 can also determine that the set of content items is presented based on a set of target keywords (e.g., restaurants, new restaurants, restaurants in a geographic location, etc.). The data manager 118 may also be configured to initiate a change in the input level associated with the collection of content items based on the analysis of the product responses by the modeler 116.
The data manager 118 may also be configured to retrieve and analyze user interaction data, including actions performed by the user device 140 over the network 130. In some implementations, the data manager 118 retrieves the interaction data and creates an activity log having one or more log entries. The activity log may span any specified period of time (e.g., past month, past week, etc.) and may be user specific based on any constraints (e.g., users of los angeles, android users of boston, users with a product response to a pair of headphones, etc.). The data manager 118 may be configured to use the filtered activity logs to determine a subset of users (i.e., a subset of users associated with the original activity log). The subset of users may be users who are likely to be exposed to the content item being analyzed. Further, the data manager 118 may be configured to retrieve user activity data related to response metrics (e.g., product responses).
The interaction data set 122 may include subsets of data, each of the subsets of data including response data, content input data (e.g., input data), content type, control variables, and/or provider identifiers associated with the content item. The data may be data for one or more points in time over an interval (e.g., data for each hour of the day, data for each day of the year, data for each month of the decade, etc.). The content type may indicate a particular media channel of the collection of data, such as television, radio, internet content, newspaper or magazine content, and so forth. The response data may be the result of an action associated with the input data. That is, the response data may indicate a particular revenue amount (e.g., one or more products) at a particular time. In some embodiments, the response is one or more conversions, one or more sales, one or more purchases, one or more account registrations, one or more subscriptions, one or more product activations, and/or the like. The input data may indicate a particular amount of content (e.g., legal currency) to be entered for a type of content at a particular time. The input data may also indicate the number of runs of content. The interaction data set 122 may include a time series data structure indicating the amount of input data, response data over time for various media channels and/or various geographic regions.
The modeler 116 may be configured to determine a relevant product response and a complete product response based on the attribution model. In general, the attribution model may be configured to determine a relevance of a product response based on aggregating weights of a degree metric between a first node (e.g., product a associated with the product response) and a second node (e.g., product B associated with the content item) and normalizing the aggregated weights to generate a relevance index. As described above, the data manager 118 may be configured to maintain a dependency graph stored in the dependency data set 124. The modeler 116 may utilize the relevance graph to subsequently determine how relevant one product is to another product, such that relevance may be calculated, and potential attribution credits may be awarded (e.g., by the credit scoring system 112). In some embodiments, the attribution model may be a trained model stored in the analytics database 120, and may provide an output prediction (e.g., a relevance index) based on the variables of the input (e.g., the product of the product response). Further, the attribution model may quantify the relevance of a particular product response to a content item presented to a user (e.g., across media channels). This causal approach allows the attribution models to provide significant improvements in the prediction of product response relevance, so that the accuracy of the attribution models' predictions and the allocation of attribution credits are improved, and as a result, content providers are enabled to make informed decisions on their active recommendations. In some embodiments, the input data, response data may be inferred using one or more machine learning algorithms (e.g., neural networks, convolutional neural networks, cyclic neural networks, linear regression models, sparse vector machines, or any other algorithm known to one of ordinary skill in the art).
The modeler 116 may also be configured to identify trends in product responses based on analyzing the interaction data and historical interaction data of previous product responses. That is, each product response and associated attribution credit may be compared, historical product responses may be tracked, and trends (or patterns) may be established over time. Trend and pattern recognition operations may be performed to identify trends and/or patterns of various product responses. In particular, based on evaluating product responses and/or other interaction data in the interaction data set 122, the one or more processing circuits of the modeler 116 may identify trends and/or patterns (e.g., linear, exponential, seasonal, random, damped window, smooth, AI, and/or recurring trends and/or patterns) for various products, content items, and/or product responses. In some embodiments, the data manager 118 may update the correlation graph based on identifying trends in product responses. That is, in response to analyzing the historical product responses and/or receiving the product responses, the content management system 170 may be notified to update content item slots of the content items (e.g., website content item slots, video content item slots, mobile application content item slots, etc.). For example, multiple users may have recently responded (e.g., purchased) a newly released television model. In the following example, modeler 116 may determine a trend indicating that the newly released television model was purchased more than the previously released television model, and may provide an indication to content management system 170 to update the content item slot with a content item associated with the newly released television model. In some implementations, the modeler 116 may update the content item slots directly based on retrieving or generating content items for presentation (from the content items 174). In addition, the data manager 118 may also update the dependency graph including the newly published television model and/or update weights between previously published television model nodes and other nodes in the dependency graph (e.g., reduce dependencies, remove edges, etc.).
Using the relevance graph, the modeler 116 may attribute one or more product responses of a first product to content items in a content campaign associated with a potentially related second product. In addition, the modeler may further attribute one or more product responses of the first product and the second product to content items in a content activity associated with the second product to capture a full product response. In some embodiments, the modeler 116 may also attribute the response to a related product for which the modeler 116 has no response indicators in addition. In some implementations, the modeler 116 may combine the correlation graphs to determine a combined correlation index. For example, for a particular content item displayed on a different resource, a relevance index may be determined based on a combination of interactions associated with the plurality of content items, and attribution credits may be divided (e.g., equally, weighted, etc.) based on a number of combinations of interactions. Further, as described in more detail above, the modeler 116 may be used to adjust content activities of content providers. For example, a cost per action (cost per action) indicator may be adjusted for a content item in a content campaign based on the relevance index. The cost per action index typically represents the cost to the content provider to obtain the response (or conversion). By adjusting the cost-per-action index, the content provider may choose to pay more or less for providing content items for display on the resource, thereby adjusting the parameters of the content provider's content campaign. In other words, the content provider (e.g., 150) may adjust its policy for providing various content items in the content campaign based on a more accurate representation of the performance of the product response.
In another example, multiple users may have not responded to the smartphone for an extended period of time (e.g., 7 days, 1 month, etc.). In the examples below, modeler 116 may determine trends that indicate that the smartphone is out of date, and the content item slots may be updated (e.g., by modeler 116 and/or content management system 170) and the relevance graph may be updated (e.g., by data manager 118). In yet another example, a plurality of users may have responded to a content item associated with a dryer, but purchased a washing machine. In the following example, modeler 116 may determine to purchase more laundry machines than dryers, and may update the content items in the content item slots to include laundry machines, and may update the correlation graph (e.g., modify weights, add nodes, etc.).
The credit scoring system (crediting system) 112 may be configured to calculate an attribution credit for each of the plurality of product responses based on the relevance index generated by the modeler 116. In other words, the credit scoring system 112 may be configured to credit score the relevant responses and the full product response (e.g., the entire shopping cart value) such that accurate credits may be provided to the content provider (e.g., 150). In some embodiments, attributed credits may be calculated differently based on relevance indices (e.g., more relevant may equal higher credits, and less relevant may equal lower credits). In particular, the calculation may utilize various mathematical operations (e.g., algebra, calculus, boolean algebra) configured by one or more systems described herein such that attribution credit may be unique to a particular entity, user, and/or content provider. For example, entity X may have a higher threshold (e.g., correlation greater than 0.70) and calculate attribution credits using equation X (e.g., correlation index X (100 ÷ edges) = attribution credits), while entity Y may have a lower threshold (e.g., correlation greater than 0.50) and calculate attribution credits using equation Y (e.g., correlation index X100 (if correlation index > 0.90), correlation index X75 (if correlation index > 0.80), or correlation index X50 (if correlation index < 0.80) = attribution credits). As shown, each attribution credit calculation may be unique, such that the credit scoring system 112 may utilize different calculations based on the entity, user, and/or content provider.
The pingback system 114 may be configured to receive pingback corrections from the user device 140, the content provider device 150, and/or the third party system 180, all over the network 130. The pingback correction may include a return product response based on a return (return) of the product (e.g., a return, a refund, a replacement, a recall, etc.). In some embodiments, after the attribution credit is assigned to the content provider device 150, the pingback system 114 may establish a communication channel with the user device 140, the content provider device 150, the data source 160, and/or a third party system 180 (e.g., including a card provider entity such as a financial institution and/or a credit card entity) to receive the pingback correction. The established communication channel may be through the network 130 and may be established for a particular time (e.g., 30 days, 3 months, 3 years, etc.). The facilities of communication may be implemented as Application Programming Interfaces (APIs) (e.g., REST APIs, network APIs, custom APIs), batch files, and/or queries. In various arrangements, the pingback system 114 may also be configured to control access to resources of the user device 140, the content provider device 150, the data source 160, and/or the third party system 180. Further, the pingback system 114 may receive the pingback correction over the network 130 via the API, and the pingback system 114 may update the assigned attribution credit associated with the product response of the product sent back. In various embodiments, the updated attribution credits may re-evaluate the attribution credits as if the product was not responded to. In some embodiments, the data manager 118 may also update the interaction data set 122 (e.g., historical data) and the dependency data set 124 (e.g., a dependency graph) based on pingback corrections. For example, attribution credits may be reduced because the impact of content items responding with one or more products may be less influential. Further, the modeler 116 may retrain the attribution models stored in the analytics database 120 based on pingback corrections.
Referring now to FIG. 2, a flowchart of a method 200 of determining relevant product responses is shown in accordance with an illustrative embodiment. The analysis system 110 and associated environment 100 may be configured to perform the method 200. Further, any of the computing devices described herein may be configured to perform the method 200.
In the overview of the method 200, at block 210, one or more processing circuits may receive a product response for a first product. At block 220, the one or more processing circuits may identify a dependency graph. At block 230, the one or more processing circuits may aggregate the weights of the degree of correlation metrics. At block 240, the one or more processing circuits may generate a correlation index. At block 250, one or more processing circuits may calculate attribution credits. At block 260, the one or more processing circuits may provide attribution credits to the content provider. Additional, fewer, or different operations may be performed depending on the particular arrangement. In some arrangements, some or all of the operations of method 200 may be performed by one or more processors executing on one or more computing devices, systems, or servers. In various arrangements, each operation may be reordered, added, removed, or repeated.
Referring in more detail to method 200, at block 210, one or more processing circuits may receive a product response (e.g., an event) for a first product, the product response including interaction data indicative of user interaction with a content item of a second product, wherein the content item is associated with a content provider. In some embodiments, the product response may be received by the data manager 118 from a third-party system (e.g., third-party system 180) over the network 130. For example, after purchasing HDMI cable from a third-party system, the third-party system (e.g., website, in-store, mobile application, phone call, etc.) may provide interaction data (e.g., purchase information, user information, content item information) to the data manager 118. In various embodiments, the interaction data may be associated with a product response (or event) that may indicate a purchase of a product and/or service. The purchase may be linked to the content item based on information collected during the shopping experience (e.g., click on content item, play information, last click, search information, etc.). In particular, the content item is an advertisement in a content item slot associated with a second product (e.g., a smart television).
At block 220, the one or more processing circuits may identify a dependency graph for a plurality of products. In various embodiments, the dependency graph may be stored in the dependency data set 124 and may be generated and/or updated by the data manager 118 based on receiving additional interaction data and analyzing the interaction data set 122. In particular, the generation and updating of the dependency graph may include modifying the weight of the degree metric between two nodes. Each node in the relevance graph (e.g., associated with a product in the plurality of products) can be related to one or more nodes based on a weight of the degree metric. Additional details regarding the dependency graph are described in detail with reference to FIG. 4. Further, multiple relevance graphs may be stored in the relevance dataset 124, and each graph may be associated with a particular entity (e.g., company a), a group of entities (e.g., company a and company B), an entity type (e.g., hardware, technology, supermarket, etc.), a product type (e.g., telephone, television, apparel, etc.), and/or any characteristic of multiple products, but is not limited to such.
In blocks 230 and 240, the one or more processing circuits may aggregate weights of a degree metric of relevance of a first node of a first product to a second node of a second product in the relevance graph, and generate a relevance index based on normalizing the aggregate of the weights of the degree metric. In some embodiments, the path between the first node and the second node is determined based on the modeler 116 traversing the entire dependency graph starting from the first node associated with the first product. Traversal of the entire graph of relevance may be based on a traversal algorithm (e.g., breadth-first search (BFS), depth-first search (DFS)) that may determine a best path between a first product (e.g., a first node) and a second product (e.g., a second node), where the best path is the path with the lowest aggregate weight of the measure of degree of relevance. For example, after traversal, the weight of the measure of the degree of correlation between the first product (node 1) and the second product (node 4) may be (table 1):
in some embodiments, modeler 116 may aggregate weights for the degree of relevance metric and normalize the traversal path weights. The normalization may modify the aggregate weight in the natural range to a standard range (e.g., 0 to 1.0). For example, the modeler 116 may normalize the traversal path weights based on the number of edges traversed (table 2):
traversal path (node) | Edge | Normalization (correlation index) | |
1 | 1,3,7,8,4 | 4 | 2.62/4＝0.655 |
2 | 1,5,6,4 | 3 | 1.53/3＝0.51 |
3 | 1,9,4 | 2 | 1.38/2＝0.69 |
As shown above, the relevance index for path 1 may be 0.655, the relevance index for path 2 may be 0.51, and the relevance index for path 3 may be 0.69. Further, the modeler 116 may select the highest correlation index of the plurality of correlation indices. However, in some implementations, the modeler 116 may select a different relevance index (e.g., closest to a certain value, lowest relevance index, least edges traversed, etc.) based on, but not limited to, user customization, content provider customization, and/or third party customization, or a determination by the modeler 116 based on historical data. In some embodiments, normalization may be performed using various normalization techniques, such as, but not limited to, linear scaling, logarithmic scaling, clipping, z-scoring. In various embodiments, the modeler 116 may traverse a plurality of relevance graphs associated with the first product and the second product. For example, relevance graph A can be associated with a particular entity that sells a first product and a second product, while relevance graph B can be associated with a plurality of entities that sells the first product and the second product. In the following example, the modeler 116 may traverse the graphs in each of the relevance graphs and select the relevance index with the greatest relevance (e.g., closest to 1.0). In some embodiments, one relevance graph may be weighted more than another relevance graph, such that one relevance graph may be more favored and/or more accurate than another relevance graph. In particular, some correlation graphs may be constructed with more information (e.g., with more accurate weights) than another correlation graph, and the modeler 116 may weight the correlation graphs accordingly. For example, the correlation graph a may be weighted such that each correlation index may be a 1 to 1 weight ratio (e.g., a calculated correlation index equal to 0.94 would be weighted and would be equal to 0.94), but the correlation graph B may be weighted to a 1 to 1/2 weight (e.g., a calculated correlation index equal to 0.94 would be weighted and would be equal to 0.94/2 or 0.47).
In blocks 250 and 260, in response to the relevance index exceeding the threshold, the one or more processing circuits may calculate attribution credits assigned to the product responses based on the relevance index and provide the attribution credits to the content provider of the content item. In some embodiments, the threshold may be based on at least one of a first sensitivity set by the entity, a second sensitivity set by the content provider, the content item, the first product, or the second product. That is, the threshold may be a sensitivity based on one or more factors, and if the relevance index exceeds the threshold, an attribution credit may be calculated to attribute the related-product response to the content item of the content provider. For example, a user may purchase a pair of headphones after interacting with (e.g., viewing, selecting) a content item of a new phone. In the following example, a user (sometimes referred to herein as a "customer") may purchase a pair of headsets instead of purchasing a phone after being redirected to a third party website and/or mobile application (e.g., google Shopping, google Play). In this example, the relevance index may be above a threshold (e.g., 0.75> -0.5 (threshold)), and attribution credits may be calculated and provided to the content provider. In some embodiments, attribution credits may be normalized between two values (e.g., 0-1, 0-10, 0-100) and may be weighted based on a relevance index. For example, attribution credits may be calculated based on responses (e.g., $100, $ 2500) and relevance indices (e.g., 0.76, 0.32). For example, a $100 related product response may be credited with a credit score of $100x0.76=76 attribution credits, and a $2500 related product response may be credited with a credit score of $2,500x0.32=800 attribution credits. In another example, a full product response of $100 (e.g., more than one product) may be scored by credit as $100 ÷ 0.76=131.58 attributed credit (or $100+ (100 x 0.76) =176 attributed credit), and a related product response of $2500 may be scored by credit as 2500 attributed credit, because the relevance index is not above the threshold. As shown in the examples below, various calculations (e.g., operations and/or algebras (e.g., additions, subtractions, multiplications, divisions, squares, summations), calculus (e.g., derivatives), computational logic (e.g., boolean algebra) — in some embodiments, the analytics system 100, the user device 140, the content provider device 150, and/or any other system described herein may be configured to set parameters, configurations, and/or preferences for computing attribution credits.
In some embodiments, methods 200 and 300 may further include the one or more processing circuits receiving a pingback correction indicating that the product response was sent back (e.g., returned) from the entity computing system associated with the first product. Further, the one or more processing circuits may update attribution credits reflecting the returned product responses and provide the updated attribution credits to the content provider. That is, if the product response is sent back, the one or more processing circuits may correct the previously calculated attribution credits such that the attribution credits may also be attributed based on the product being responded to (excluding the sent back product).
Using the relevance graph and relevance index in this manner allows attribution credits for content items related to one product to be awarded in a simple and computationally efficient manner based on product responses (e.g., purchases) for different products. In particular, it allows relationships between many products to be recorded with their relevance metrics in a way that can be quickly and easily investigated by computationally traversing the graph. This helps to accurately and quickly provide attribution credits for a large number of products that are complex in relationship to each other.
In various embodiments, the methods 200 and 300 may further include identifying trends and/or patterns of product responses (e.g., increased product responses for one or more products, increased bundled product responses (e.g., multi-product or full products), reductions in product responses for one or more products, updates to slots of content items, increased content input, recent news (e.g., articles, world Health Organization (WHO) reports, epidemic guides, natural disasters, events (e.g., sports, music)), software updates, virtual assistant information (e.g., questions asked, commands by a user), search queries, user clicks, geographic location of one or more users, etc.) based on analysis of the interaction data and historical interaction data of previous product responses (e.g., stored in the interaction dataset 122). In particular, in response to identifying the trend, the one or more processing circuits may determine a different content item associated with the first product and modify a content item slot of the content item with the different content item. Alternatively or additionally, in response to identifying the trend, the one or more processing circuits may calculate a new weight of the degree metric between the first node and the second node and update the relevance graph with the new weight of the degree metric between the first node and the second node. Thus, the attribution model described herein may continually update and modify the relevance graph and content item slots based on identifying trends.
Referring now to FIG. 3, a flowchart of a method 300 of determining a full product response is shown in accordance with an illustrative embodiment. The analytics system 110 and associated environment 100 may be configured to perform the method 300. Further, any of the computing devices described herein may be configured to perform the method 300.
In the overview of the method 300, the one or more processing circuits may receive product responses for the first product and the second product at block 310. At block 320, the one or more processing circuits may calculate a first attribution credit. At block 330, the one or more processing circuits may identify a dependency graph. At block 340, the weights of the degree of correlation metrics are aggregated. At block 350, the one or more processing circuits may generate a correlation index. At block 360, the one or more processing circuits may calculate a second attribution credit. At block 370, the one or more processing circuits may provide the first attribution credit and the second attribution to the content provider. Additional, fewer, or different operations may be performed depending on the particular arrangement. In some arrangements, some or all of the operations of method 300 may be performed by one or more processors executing on one or more computing devices, systems, or servers. In various arrangements, each operation may be reordered, added, removed, or repeated.
Referring in more detail to method 300, at block 310, one or more processing circuits may receive a product response for a first product and a second product, the product response including interaction data indicative of user interaction with a content item of the second product, wherein the content item is associated with a content provider. In some embodiments, the product response may be received by the data manager 118 from a third-party system (e.g., third-party system 180) over the network 130. For example, after purchasing a dishwasher and warranty from a third-party system (e.g., a website, in-store, mobile application), the third-party system may provide interaction data (e.g., purchase information, user information, content item information) to the data manager 118. In various embodiments, the interaction data may be associated with a product response (or event) that may indicate one or more purchases of a plurality of products and/or services. The purchase may be linked to the content item based on information (e.g., activity data) collected during the shopping experience. In particular, the content item is an advertisement in a content item slot associated with a second product (e.g., a dishwasher).
In some embodiments, at block 310, the one or more processing circuits may receive a plurality of product responses related to at least a first product and a second product over a period of time. The plurality of product responses may include a plurality of interaction data, and the one or more processing circuits may associate the plurality of responses as a bundle based on similar interaction data. For example, a user may purchase a cell phone from company X at 14 days 3/2021 and a charging cable from company X at 15 days 3/15/2021. In the examples below, one or more processing circuits (e.g., analysis system 110) may receive interaction data from two responses (e.g., purchases) and may bundle them based on financial information (e.g., interaction data) used in the responses. In another example, a user may purchase a phone at a store of company Y on day 14, 3 months, 2021, and purchase cloud services online via company Z's website, company Z's mobile app, and/or a smart Assistant (e.g., google Assistant, smart speaker, etc.) on day 16, 3 months, 2021. In the following example, the interaction data may be received by the one or more processing circuits from both responses, and they may be bundled based on the user having viewed the content item (e.g., the interaction data) from their user device. As shown below, the second attributed credit may interpret phone and cloud services as a full product response. Further, at block 310, the one or more product responses may include a plurality of products (e.g., 20 products in one response, 10 products between three responses), and the one or more processing circuits may perform the following blocks (320-370) for each of the plurality of products, and/or perform the following blocks (320-370) for the plurality of products as a bundle of products.
At block 320, the one or more processing circuits may calculate a first attribution credit to assign to the product response. In various embodiments, the first attribution credit may be based on a product response of a second product (e.g., a dishwasher) of the plurality of products in the product response. As shown, the first attributed credit may underestimate (e.g., attribute a dishwasher purchase), overestimate (e.g., attribute an entire purchase price to one product), or not evaluate (e.g., not attribute a warranty purchase) the entire product response (e.g., purchase more than one product and/or service). In some embodiments, the analysis system 110 (e.g., the credit scoring system 112) may skip calculating the first attribution credit.
At blocks 330, 340, and 350, the one or more processing circuits may identify a relevance graph for a plurality of products, aggregate weights of degree metrics for relevance of a first node of a first product to a second node of a second product in the relevance graph, and generate a relevance index based on normalizing the aggregate of the weights of the degree metrics. Blocks 330-350 are similar to similar features and functions described in detail above with reference to blocks 220-240 of fig. 2.
In blocks 360 and 370, in response to the relevance index exceeding the threshold, the one or more processing circuits may calculate second attribution credits assigned to the full product response based on the relevance index and provide the first attribution credits and the second attribution credits to a content provider of the content item. Blocks 360-370 are similar to similar features and functions described in detail above with reference to blocks 250-260 of fig. 2. However, as shown, rather than assigning attribution credits to content items with which the user interacts (e.g., first attribution credits), second attribution credits may be assigned to full product responses (e.g., dishwasher and warranty). In some embodiments, the second attributed credit may be an accurate attributed credit without underestimating, overestimating, or not evaluating the response. As shown, attribution models may provide enhanced performance and efficiency while reducing the amount of responses that are not evaluated. As shown, using the attribution model, the one or more processing circuits may determine a full product response and attribute credits accordingly without underestimating, overestimating, or otherwise evaluating the product responses of multiple products related to a product in the content item. For example, if a user interacts with a content item associated with a laptop, but the response also includes a laptop mouse and a docking station, attribution credits may be evaluated such that additional products (or full product responses) purchased may be accurately credit scored (e.g., added attribution credits). In another example, if a user interacts with a content item associated with a laptop, but the response also includes a vegetable seed for gardening, attribution credits may be evaluated such that additional products (or full product responses) purchased may be accurately credited (e.g., the vegetable seed relevance index may not reach a relevance threshold for modifying attribution credits). However, in the following example, if the user continues to purchase vegetable seeds along with purchasing a laptop, modeler 116 may update the content item in the content item slot to include the vegetable seed on the screen of the laptop as an example user interface displayed on the laptop.
Referring now to FIG. 4, an exemplary representation of a dependency graph is shown in accordance with an illustrative embodiment. In some implementations, the relevance graph can include a plurality of nodes (e.g., 410, 420, 430, 440, 450, 460, 470) with a plurality of weighting vectors (or degree metrics). For example, product 1 (e.g., 410) may include a relevance vector of 0.65 to product 4 (e.g., 440), 0.78 to product 5 (e.g., 450), 0.35 to product 6 (e.g., 460), and 0.75 to product 7 (e.g., 470). As shown, product 1 may not have a vector to product 2 (e.g., 420), but multiple vectors (e.g., product 1 to product 5 vector, and product 5 to product 2 vector) may be aggregated with the modeler 116 attributed to the model and the aggregation normalized to obtain the relevance index. Further, in some embodiments, the relevance vectors may have different relevance indices based on direction (e.g., relevance indices from 440 to 420 are 0.80, while relevance indices from 420 to 440 are 0.21). In this example shown, each node may be a product, service, or combination thereof associated with one or more entities, and the relevance vector may indicate a relevance index. Thus, in this particular example, the dependency graph can provide insight into products/products, products/services, and/or services/service relationships. One insight can include a particular relevance of a first product (e.g., 410) to a second product (e.g., 440).
Fig. 5 shows a diagram of a computer system 500, which computer system 500 may be used, for example, to implement the illustrative user device 140, the illustrative content provider device 150, the illustrative analysis system 110, and/or various other illustrative systems described in this disclosure. Computing system 500 includes a bus 505 or other communication component for communicating information, and a processor 510 coupled to bus 505 for processing information. Computing system 500 also includes a main memory 515, such as a Random Access Memory (RAM) or other dynamic storage device, coupled to bus 505 for storing information and instructions to be executed by processor 510. Main memory 515 also may be used for storing location information, temporary variables, or other intermediate information during execution of instructions by processor 510. Computing system 500 may also include a Read Only Memory (ROM) 520 or other static storage device coupled to bus 505 for storing static information and instructions for processor 510. A storage device 525, such as a solid state device, magnetic disk or optical disk, is coupled to bus 505 for persistently storing information and instructions.
In some implementations, the computing system 500 may include a communications adapter 540, such as a networking adapter. A communication adapter 540 may be coupled to bus 505 and may be configured to enable communication with a computing or communication network 130 and/or other computing systems. In various illustrative embodiments, any type of networking configuration (such as wired (e.g., via ethernet), wireless (e.g., via WiFi, bluetooth, etc.), pre-configured, ad hoc, LAN, WAN, etc.) may be implemented using the communications adapter 540.
According to various embodiments, the processes for carrying out the illustrative embodiments described herein may be implemented by the computing system 500 in response to the processor 510 executing an arrangement of instructions contained in main memory 515. Such instructions may be read into main memory 515 from another computer-readable medium, such as storage device 525. Execution of the arrangement of instructions contained in main memory 515 causes computing system 500 to perform the illustrative processes described herein. One or more processors in a multi-processing arrangement may also be employed to execute the instructions contained in main memory 515. In alternative implementations, hard-wired circuitry may be used in place of or in combination with software instructions to implement the illustrative embodiments. Thus, implementations are not limited to any specific combination of hardware circuitry and software.
Although an example processing system has been described in fig. 5, implementations of the subject matter and the functional operations described in this specification can be implemented using other types of digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them.
Embodiments of the subject matter and the operations described in this specification can be implemented using digital electronic circuitry, or in computer software, firmware, or hardware embodied in tangible media, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them. Embodiments of the subject matter described in this specification can be implemented as one or more computer programs (i.e., one or more modules of computer program instructions) encoded on one or more computer storage media for execution by, or to control the operation of, data processing apparatus. Alternatively or additionally, the program instructions may be encoded on an artificially generated propagated signal (e.g., a machine-generated electrical, optical, or electromagnetic signal) that is generated to encode information for transmission to suitable receiver apparatus for execution by data processing apparatus. The computer readable storage medium may be or be included in a computer readable storage device, a computer readable storage substrate, a random or serial access memory array or device, or a combination of one or more of them. Further, although the computer storage medium is not a propagated signal, the computer storage medium can be a source or destination of computer program instructions encoded in an artificially generated propagated signal. The computer storage medium may also be or be included in one or more separate components or media (e.g., multiple CDs, disks, or other storage devices). Accordingly, computer storage media are both tangible and non-transitory.
The operations described in this specification may be implemented as operations performed by data processing apparatus on data stored on one or more computer-readable storage devices or received from other sources.
The term "data processing apparatus" or "computing device" encompasses all kinds of apparatus, devices, and machines for processing data, including by way of example a programmable processor, a computer, a system on a chip, or a plurality or combination of the foregoing. The apparatus can comprise special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit). The apparatus can include, in addition to hardware, code that creates an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, a cross-platform runtime environment, a virtual machine, or a combination of one or more of them. The apparatus and execution environment may implement a variety of different computing model infrastructures, such as web services, distributed computing and grid computing infrastructures.
A computer program (also known as a program, software application, script, or code) can be written in any form of programming language, including compiled or interpreted languages, declarative or procedural languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, object, or other unit suitable for use in a computing environment. A computer program may, but need not, correspond to a file in a file system. A program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub programs, or portions of code). A computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
The processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform actions by operating on input data and generating output. The processes and logic flows can also be performed by, and apparatus can also be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).
Processors suitable for the execution of a computer program include, by way of example, both general and special purpose microprocessors, and any one or more processors of any kind of digital computer. Generally, a processor will receive instructions and data from a read-only memory or a random access memory or both. The essential elements of a computer are a processor for performing actions in accordance with the instructions and one or more memory devices for storing instructions and data. Generally, a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks. However, a computer need not have such a device. Moreover, a computer may be embedded in another device, e.g., a mobile telephone, a Personal Digital Assistant (PDA), a mobile audio or video player, a game console, a Global Positioning System (GPS) receiver, or a portable storage device (e.g., a Universal Serial Bus (USB) flash drive), to name a few. Devices suitable for storing computer program instructions and data include all forms of non-volatile memory, media and memory devices, including by way of example: semiconductor memory devices such as EPROM, EEPROM, and flash memory devices; magnetic disks, such as internal hard disks or removable disks; magneto-optical disks; and CD-ROM and DVD-ROM disks. The processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
To provide for interaction with a user, embodiments of the subject matter described in this specification can be implemented using a computer having a display device (e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor) for displaying information to the user and a keyboard and a pointing device (e.g., a mouse or a trackball) by which the user can provide input to the computer. Other kinds of devices may also be used to provide for interaction with a user; for example, feedback provided to the user can be any form of sensory feedback, such as visual feedback, auditory feedback, or tactile feedback; and input from the user may be received in any form, including acoustic, speech, or tactile input. In addition, the computer may interact with the user by sending and receiving documents to and from the device used by the user; for example, by sending a web page to a web browser on a user's client device in response to a request received from the web browser.
Implementations of the subject matter described in this specification can be implemented using a computing system that includes a back-end component (e.g., as a data server), or that includes a middleware component (e.g., an application server), or that includes a front-end component (e.g., a client computer having a graphical user interface or a web browser through which a user can interact with an implementation of the subject matter described in this specification), or any combination of one or more such back-end, middleware, or front-end components. The components of the system can be interconnected by any form or medium of digital data communication, e.g., a communication network. Examples of communication networks include local area networks ("LANs") and wide area networks ("WANs"), the internet (e.g., the internet), and peer-to-peer networks (e.g., ad hoc peer-to-peer networks, distributed ledger networks).
The computing system may include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other. In some implementations, the server transmits data (e.g., HTML pages) to the client device (e.g., for purposes of displaying data to and receiving user input from a user interacting with the client device). Data generated at the client device (e.g., a result of the user interaction) may be received at the server from the client device.
In some demonstrative embodiments, the features disclosed herein may be implemented on a smart television module (or a connected television module, a hybrid television module, etc.), which may include processing circuitry configured to integrate an internet connection with a more traditional television program source (e.g., received via cable, satellite, over-the-air wireless, or other signal). The smart television module may be physically incorporated into a television, or may comprise a separate device, such as a set-top box, a blu-ray or other digital media player, a game console, a hotel television system, and other companion devices. The smart television module may be configured to allow viewers to search and find videos, movies, photos and other content on a network, on local cable television channels, on satellite television channels, or stored on a local hard drive. A set-top box (STB) or set-top unit (STU) may include an information appliance device that may contain a tuner and connect to a television and an external signal source to convert the signal into content, which is then displayed on a television screen or other display device. The smart television module may be configured to provide a home screen or top-level screen including icons for a plurality of different applications, such as a web browser and a plurality of streaming media services (e.g., web flyers, vudu, hulu, disney +, etc.), connected cable or satellite media sources, other network "channels," etc. The smart television module may also be configured to provide an electronic program guide to the user. A companion application to the smart television module may operate on the mobile computing device to provide additional information to the user about available programming, to allow the user to control the smart television module, and so on. In alternative implementations, these features may be implemented on a laptop or other personal computer, smart phone, other mobile phone, handheld computer, smart watch, tablet PC, or other computing device.
While this specification contains many specific implementation details, these should not be construed as limitations on the scope of any disclosure or of what may be claimed, but rather as descriptions of features specific to particular implementations of particular disclosure. Certain features that are described in this specification in the context of separate embodiments can also be implemented in combination or in a single embodiment. Conversely, various features that are described in the context of a single embodiment can also be implemented in multiple embodiments, separately or in any suitable subcombination. Moreover, although features may be described above as acting in certain combinations and even initially claimed as such, one or more features from a claimed combination can in some cases be excised from the combination, and the claimed combination may be directed to a subcombination or variation of a subcombination. Furthermore, features described with respect to particular headings may be used with and/or in connection with illustrative embodiments described under other headings; headings (when provided) are included for readability purposes only, and should not be construed as limiting any features provided for these headings.
Similarly, while operations are depicted in the drawings in a particular order, this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order, or that all illustrated operations be performed, to achieve desirable results. In some cases, multitasking and parallel processing may be advantageous. Moreover, the separation of various system components in the implementations described above should not be understood as requiring such separation in all implementations, and it should be understood that the described program components and systems can generally be integrated together in a single software product or packaged into multiple software products embodied on tangible media.
Thus, particular embodiments of the subject matter have been described. Other implementations are within the scope of the following claims. In some cases, the actions recited in the claims can be performed in a different order and still achieve desirable results. Moreover, the processes depicted in the accompanying figures do not necessarily require the particular order shown, or sequential order, to achieve desirable results. In some embodiments, multitasking and parallel processing may be advantageous.
Claims (20)
1. A computer-implemented method for determining a related-product response, the method comprising:
receiving, by one or more processing circuits, a product response for a first product, the product response including interaction data indicating user interaction with a content item of a second product, wherein the content item is associated with a content provider;
identifying, by the one or more processing circuits, a dependency graph for a plurality of products;
aggregating, by the one or more processing circuits, weights of degree metrics of relevance of a first node of the first product to a second node of the second product in the relevance graph;
generating, by the one or more processing circuits, a relevance index based on normalizing an aggregate of the weights of the degree metrics;
in response to the relevance index exceeding a threshold, calculating, by the one or more processing circuits, attribution credits assigned to the product response based on the relevance index; and
providing, by the one or more processing circuits, the attribution credit to a content provider of the content item.
2. The method of claim 1, further comprising:
receiving, by the one or more processing circuits, a pingback correction indicating that the product response was sent back from an entity computing system associated with the first product;
updating, by the one or more processing circuits, attribution credits reflecting the returned product responses; and
providing, by the one or more processing circuits, the updated attribution credit to the content provider.
3. The method of claim 1, further comprising:
identifying, by the one or more processing circuits, a trend of the product response based on an analysis of the interaction data and historical interaction data of previous product responses.
4. The method of claim 3, further comprising:
determining, by the one or more processing circuits, a different content item associated with the first product in response to identifying the trend; and
modifying, by the one or more processing circuits, a content item slot of the content item with the different content item.
5. The method of claim 3 or 4, further comprising:
calculating, by the one or more processing circuits, a new weight of the degree metric between the first node and the second node in response to identifying the trend; and
updating, by the one or more processing circuits, the dependency graph with a new weight of the degree metric between the first node and the second node.
6. The method of any preceding claim, wherein the dependency graph comprises a plurality of nodes including the first node and the second node, and wherein each node of the plurality of nodes is associated with a product of the plurality of products.
7. The method of claim 6, wherein each of a plurality of degree metrics connecting the plurality of nodes of the dependency graph is weighted based on a relationship between the plurality of products, wherein the relationship is at least one of a relatively weighted entity explicit designation between the relationships, a product identifier, one or more taxonomies, one or more n-gram sequences, or user device data.
8. The method of any preceding claim, wherein normalizing comprises linearly weighting the weight of the degree metric between the first node and the second node, and scaling the weight of the linearly weighted degree metric to a scale of 1.0.
9. The method of any preceding claim, wherein the threshold is based on at least one of a first sensitivity set by an entity, a second sensitivity set by a content provider, the content item, the first product, or the second product, and wherein the interaction data comprises a timestamp and user device data associated with an event.
10. A computer-implemented method for determining a full product response, the method comprising:
receiving, by one or more processing circuits, a product response for a first product and a second product, the product response comprising interaction data indicative of a user interaction with a content item of the second product, wherein the content item is associated with a content provider;
calculating, by the one or more processing circuits, a first attribution credit to assign to the product response;
identifying, by the one or more processing circuits, a dependency graph for a plurality of products;
aggregating, by the one or more processing circuits, weights of degree metrics of relevance of a first node of the first product to a second node of the second product in the relevance graph;
generating, by the one or more processing circuits, a relevance index based on normalizing an aggregate of the weights of the degree metrics;
in response to the relevance index exceeding a threshold, calculating, by the one or more processing circuits, a second attribution credit allocated to a full product response based on the relevance index; and
providing, by the one or more processing circuits, the first attribution credit and the second attribution credit to a content provider of the content item.
11. The method of claim 10, further comprising:
receiving, by the one or more processing circuits, a pingback correction indicating that the full product response was sent back from an entity computing system associated with the first product;
updating, by the one or more processing circuits, a second attribution credit reflecting the returned product response; and
providing, by the one or more processing circuits, the updated second attribution credit to the content provider.
12. The method of claim 10 or 11, further comprising:
identifying, by the one or more processing circuits, a trend of the product response based on an analysis of the interaction data and historical interaction data of previous product responses.
13. The method of claim 12, further comprising:
determining, by the one or more processing circuits, a different content item associated with the first product in response to identifying the trend; and
modifying, by the one or more processing circuits, a content item slot of the content item with the different content item.
14. The method of claim 12 or 13, further comprising:
in response to identifying the trend, calculating, by the one or more processing circuits, a new weight for the degree metric between the first node and the second node; and
updating, by the one or more processing circuits, the dependency graph with a new weight of the degree metric between the first node and the second node.
15. A system, comprising:
at least one processing circuit configured to:
receiving a product response for a first product, the product response including interaction data indicating user interaction with a content item of a second product, wherein the content item is associated with a content provider;
identifying a dependency graph for a plurality of products;
aggregating weights of degree metrics of relevance of a first node of the first product to a second node of the second product in the relevance graph;
generating a relevance index based on normalizing an aggregate of the weights of the degree metrics;
in response to the relevance index exceeding a threshold, calculating attribution credits assigned to the product response based on the relevance index; and
providing the attribution credit to a content provider of the content item.
16. The system of claim 15, the at least one processing circuit further configured to:
receiving a pingback correction indicating that the product response was sent back from an entity computing system associated with the first product;
updating attribution credits reflecting returned product responses; and
providing updated attribution credits to the content provider.
17. The system of claim 15 or 16, the at least one processing circuit further configured to:
identifying trends in the product response based on analyzing the interaction data and historical interaction data of previous product responses.
18. The system of claim 17, the at least one processing circuit further configured to:
in response to identifying the trend, determining a different content item associated with the first product; and
modifying a content item slot of the content item with the different content item.
19. The system of claim 17 or 18, the at least one processing circuit further configured to:
in response to identifying the trend, calculating a new weight for the degree metric between the first node and the second node; and
updating the relevance graph with a new weight of the degree metric between the first node and the second node.
20. The system of any of claims 15 to 19, wherein the product response further comprises the second product, and wherein the at least one processing circuit is further configured to:
updating attribution credits reflecting product responses including the first product and the second product;
providing updated attribution credits to the content provider.
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
PCT/US2021/030712 WO2022235263A1 (en) | 2021-05-04 | 2021-05-04 | Attribution model for related and mixed content item responses |
Publications (2)
Publication Number | Publication Date |
---|---|
CN115633542A true CN115633542A (en) | 2023-01-20 |
CN115633542B CN115633542B (en) | 2024-05-14 |
Family
ID=
Citations (10)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20120054019A1 (en) * | 2010-08-30 | 2012-03-01 | Brendan Kitts | System and method for attributing multi-channel conversion events and subsequent activity to multi-channel media sources |
CN103608830A (en) * | 2010-12-22 | 2014-02-26 | 脸谱公司 | Providing relevant notifications for a user based on location and social information |
US20140188596A1 (en) * | 2012-12-28 | 2014-07-03 | International Business Machines Corporation | Statistical marketing attribution correlation |
US20160034930A1 (en) * | 2014-07-31 | 2016-02-04 | Genesys Telecommunications Laboratories, Inc. | System and method for managing customer feedback |
CN105960656A (en) * | 2013-12-05 | 2016-09-21 | 谷歌公司 | Methods and systems for creating data-driven attribution model for assigning attribution credit to multiple events |
CN107402944A (en) * | 2016-05-18 | 2017-11-28 | 谷歌公司 | Attribution model for content item conversion |
CN108027935A (en) * | 2016-02-09 | 2018-05-11 | 谷歌有限责任公司 | Attribution conversion relevant with content item |
US10169778B1 (en) * | 2015-03-26 | 2019-01-01 | Amazon Technologies, Inc. | Cross-channel online advertising attribution |
CN110741390A (en) * | 2017-03-28 | 2020-01-31 | 甲骨文国际公司 | System and method for intelligently providing supporting information using machine learning |
CN111401788A (en) * | 2020-04-10 | 2020-07-10 | 支付宝(杭州)信息技术有限公司 | Attribution method and device of service timing sequence index |
Patent Citations (11)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20120054019A1 (en) * | 2010-08-30 | 2012-03-01 | Brendan Kitts | System and method for attributing multi-channel conversion events and subsequent activity to multi-channel media sources |
US20120054021A1 (en) * | 2010-08-30 | 2012-03-01 | Brendan Kitts | System and method for determining effects of multi-channel media sources on multi-channel conversion events |
CN103608830A (en) * | 2010-12-22 | 2014-02-26 | 脸谱公司 | Providing relevant notifications for a user based on location and social information |
US20140188596A1 (en) * | 2012-12-28 | 2014-07-03 | International Business Machines Corporation | Statistical marketing attribution correlation |
CN105960656A (en) * | 2013-12-05 | 2016-09-21 | 谷歌公司 | Methods and systems for creating data-driven attribution model for assigning attribution credit to multiple events |
US20160034930A1 (en) * | 2014-07-31 | 2016-02-04 | Genesys Telecommunications Laboratories, Inc. | System and method for managing customer feedback |
US10169778B1 (en) * | 2015-03-26 | 2019-01-01 | Amazon Technologies, Inc. | Cross-channel online advertising attribution |
CN108027935A (en) * | 2016-02-09 | 2018-05-11 | 谷歌有限责任公司 | Attribution conversion relevant with content item |
CN107402944A (en) * | 2016-05-18 | 2017-11-28 | 谷歌公司 | Attribution model for content item conversion |
CN110741390A (en) * | 2017-03-28 | 2020-01-31 | 甲骨文国际公司 | System and method for intelligently providing supporting information using machine learning |
CN111401788A (en) * | 2020-04-10 | 2020-07-10 | 支付宝(杭州)信息技术有限公司 | Attribution method and device of service timing sequence index |
Non-Patent Citations (2)
Title |
---|
沈军威;郑德俊;万虹育;: "基于Shapley值法的移动图书馆服务质量不满因素识别", 情报理论与实践, no. 10 * |
花胜强;高磊;潘琳;周锡琅;: "基于典型相关和人工粒子群的大坝监测分析模型", 水电能源科学, no. 10 * |
Also Published As
Publication number | Publication date |
---|---|
KR20220151154A (en) | 2022-11-14 |
WO2022235263A1 (en) | 2022-11-10 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US10679260B2 (en) | Cross-device message touchpoint attribution | |
CN105960656B (en) | Method and system for creating a data-driven attribution model for assigning an attribution score to a plurality of events | |
US20190012683A1 (en) | Method for predicting purchase probability based on behavior sequence of user and apparatus for the same | |
US20170337578A1 (en) | Dynamic media buy optimization using attribution-informed media buy execution feeds | |
US20160210658A1 (en) | Determining touchpoint attributions in a segmented media campaign | |
US8732015B1 (en) | Social media pricing engine | |
US20170091810A1 (en) | Brand engagement touchpoint attribution using brand engagement event weighting | |
US20120046996A1 (en) | Unified data management platform | |
US20170300939A1 (en) | Optimizing promotional offer mixes using predictive modeling | |
US20160275545A1 (en) | Methods and systems for using device connectivity information in on-line advertising | |
US20160210656A1 (en) | System for marketing touchpoint attribution bias correction | |
JP2014515517A (en) | Multiple attribution models including return on investment | |
KR20140038405A (en) | Conversion path based segmentation | |
US9875484B1 (en) | Evaluating attribution models | |
US20150220971A1 (en) | Optimization and attribution of marketing resources | |
US20210192549A1 (en) | Generating analytics tools using a personalized market share | |
JP6748312B2 (en) | System and method for eliminating bias in media mix modeling | |
CN105335518A (en) | Method and device for generating user preference information | |
CN115633542B (en) | Attribution model for related and mixed content item responses | |
CN115633542A (en) | Attribution model for correlated and mixed content item responses | |
CN111784091A (en) | Method and apparatus for processing information | |
US20160148242A1 (en) | Automatic generation of personalized reward points |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
SE01 | Entry into force of request for substantive examination | ||
GR01 | Patent grant |
US10997560B2 - Systems and methods to improve job posting structure and presentation - Google Patents
Systems and methods to improve job posting structure and presentation Download PDFInfo
- Publication number
- US10997560B2 US10997560B2 US15/389,681 US201615389681A US10997560B2 US 10997560 B2 US10997560 B2 US 10997560B2 US 201615389681 A US201615389681 A US 201615389681A US 10997560 B2 US10997560 B2 US 10997560B2
- Authority
- US
- United States
- Prior art keywords
- job posting
- computing devices
- job
- portions
- posting
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active, expires
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q10/00—Administration; Management
- G06Q10/10—Office automation; Time management
- G06Q10/105—Human resources
- G06Q10/1053—Employment or hiring
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/30—Information retrieval; Database structures therefor; File system structures therefor of unstructured textual data
- G06F16/35—Clustering; Classification
- G06F16/353—Clustering; Classification into predefined classes
Definitions
- the present disclosure relates generally to job postings. More particularly, the present disclosure relates to systems and methods for improving job posting structure and presentation by, for example, classifying portions of job postings into informative sections.
- An employer can post or otherwise submit a job posting to a company career site, a job board, an employment website, an applicant tracking system, or other job posting and search platforms.
- Job postings can include a number of sections that include information that describes various facets of the corresponding job that the employer is seeking to fill.
- Example sections that a job posting can include are “requirements,” “responsibility and description,” “company,” “benefits,” “other,” or other sections (e.g., “environment”).
- a search engine can search available job postings (e.g., on the basis of a search query) to identify postings that may be applicable to an applicant.
- Job postings are ill structured. For example, some job postings wholly lack a breakdown into sections like requirements, responsibilities, etc. For example, some job postings may include only large chunks of plain text. Job postings of this nature are difficult to read. Therefore, job seekers are required to spend a significant amount of time going through lengthy job postings to find useful information or realize that the job is missing information important to them.
- job postings may have information categorized into certain sections, but such information may be miscategorized or disjointed. For example, due to a lack of experience or skill by the job posting creator, information that should be placed within the benefits section may instead be incorrectly placed within the requirements section.
- a job posting can describe benefits in a first paragraph, requirements in the next paragraph, and then return to discuss benefits in a third paragraph. Instead, it would be more user-friendly to have a defined structure in which all benefits are discussed in one section while all requirements are discussed in a separate section.
- job seekers may value each section very differently. For example, some job seekers might care most about the job requirements, while other job seekers place more value on the benefits that the job has to offer.
- job posting platforms do not display job postings or generate snippets of job search results according to job seekers' preferences. Instead, job postings are snipped and displayed in the same way to all job seekers, which is not flexible and makes job hunting less user-friendly and a more time consuming process.
- One example aspect of the present disclosure is directed to a computer-implemented method to improve job posting structure.
- the method includes obtaining, by one or more computing devices, a job posting.
- the method includes separating, by the one or more computing devices, the job posting into a plurality of portions.
- the method includes classifying, by the one or more computing devices, each portion of the job posting into one of a plurality of sections.
- the method includes modifying, by the one or more computing devices, the job posting based at least in part on the respective sections into which the portions of the job posting are respectively classified.
- the computing system includes a machine-learned classifier model, one or more processors, and one or more non-transitory computer-readable medium that store instructions that, when executed by the one or more processors, cause the computing system to perform operations.
- the operations include obtaining a job posting.
- the operations include separating the job posting into a plurality of portions.
- the operations include respectively inputting each portion of the job posting into the machine-learned classifier model.
- the operations include receiving a respective classification of each portion of the job posting into one of a plurality of sections as an output of the machine-learned classifier model.
- the operations include modifying the job posting based at least in part on the respective sections into which the portions of the job posting are respectively classified.
- Another example aspect of the present disclosure is directed to a non-transitory, computer-readable medium that stores instructions that, when executed by one or more processors of one or more computing devices, cause the one or more computing devices to perform operations.
- the operations include obtaining a job posting.
- the operations include segmenting the job posting into a plurality of paragraphs.
- the operations include determining an initial classification for each of the plurality of paragraphs into one of a plurality of sections.
- the operations include comparing, for each of the plurality of paragraphs, the initial classification for such paragraph to the initial classification for one or more neighboring paragraphs.
- the operations include adjusting the initial classification for at least a first paragraph based at least in part on the comparison performed for the first paragraph.
- FIG. 1 depicts a block diagram of an example computing system to improve job posting structure according to example embodiments of the present disclosure.
- FIG. 2 depicts a flow chart diagram of an example method to improve job posting structure according to example embodiments of the present disclosure.
- FIG. 3 depicts a flow chart diagram of an example method to separate job postings into portions according to example embodiments of the present disclosure.
- FIG. 4 depicts a flow chart diagram of an example method to classify portions of job postings into sections according to example embodiments of the present disclosure.
- FIG. 5 depicts a flow chart diagram of an example method to classify portions of job postings into sections according to example embodiments of the present disclosure.
- the present disclosure is directed to systems and methods for improving job posting structure and presentation by, for example, classifying portions of job postings into informative sections.
- a computing system implementing aspects of the present disclosure can separate the job posting into multiple portions.
- the computing system can separate the job posting into the portions based on syntactic cues such as, for example, HTML tags.
- the computing system can classify each portion into the most plausible job-posting-specific section.
- example sections include company information, responsibilities, requirements, benefits, etc.
- the computing system can include and implement a machine-learned classification model to classify the portions into the sections.
- the computing system can modify the job posting based on the classification of the portions.
- the structure and/or presentation of the job posting can be improved based on the classification of the portions into the sections.
- a computing system implementing aspects of the present disclosure can add a header for a particular section to the job posting if such header is missing. For example, if a portion of the job posting is classified into the requirements section, but there is not a header or label of any sort mentioning “Requirements” in the original job posting, then the computing system can add a label or header just before the portion.
- the header can have the appropriate font, indentation, etc. Addition of a header in this fashion can render the job posting more readable and improve the job posting structure.
- the computing system can color the portions of the job posting differently according to the sections into which they were classified. For example, all portions classified into the requirements section can be colored red while all portions classified into the benefits section can be colored green. Since certain portions classified into the same section might appear in the job posting at multiple places unconnected to each other, the addition of coloring as described above can make it easier for a job seeker to recognize all the text belonging to a section in which they are interested.
- the colors respectively assigned to the sections can be adjustable and/or toggleable by a user, so that a user can easily recognize the sections in which they are specifically interested.
- the computing system can reconstruct the job posting by, for example, reordering the portions such that portions of the job posting that are classified into a same respective section are placed adjacent to each other.
- the structure of the job posting can be improved by placing related portions together.
- the original job posting may have included the portions in a less orderly fashion.
- a snippet of such job posting can include structured and informative information for each of one or more of the sections.
- the snippet of the job postings can include portions that have been classified into the sections that are generally regarded as the most important. For example, the requirements section is generally regarded as more important than the other section and, as such, portions classified into such section can be featured prominently in the snippet.
- the computing system can modify the job posting to provide a personalized version of the job posting or personalized snippet of the job posting. For example, when providing the job posting or a snippet of the job posting for display to a particular user, the computing system can first retrieve user preference information associated with such user. In particular, the particular user may have explicitly entered a ranking of section importance. Additionally or alternatively, such user preference information can be inferred based on user feedback, user actions/activity, or other information. For example, if a user more frequently performs searches the include terms related to benefits, then the computing system can infer that the user places a higher importance on the benefits section. Likewise, if the user more frequency clicks on or interacts with the benefits sections of job postings, then again it can be inferred that the user places higher importance on the benefits section.
- the computing system can reorder the portions of the job posting such that the portions are presented according to a ranking of section importance associated with the particular user.
- a user may have explicitly or implicitly indicated that she prefers to first review the benefits section, then the requirements section, and so forth.
- the computing system can reorder the portions of the job posting based on their assigned classifications so that portions classified into the benefits section are provided first, the portions classified into the requirements section are provided second, and so forth. Other users may have different rankings of section importance and the job posting can be modified according to such different rankings.
- the computing system can generate a personalized snippet of the job posting based at least in part on the ranking of section importance.
- the personalized snippet may include only a limited number of snippets from the highest ranked sections.
- snippets can be selected according to the ranking until a defined screen space or area is filled.
- the size of a respective snippet taken from each section can be correlated to the importance of such section (e.g., higher ranked sections have larger snippets taken therefrom).
- the computing system can use user preference information in combination with the classification of the portions into the sections to provide the particular user with a personalized version of the job posting or personalized snippet of the job posting.
- Generation and presentation of user-specific job postings and snippets provides a unique and user-friendly job search experience that is tailored to each particular user's preferences.
- any aspects described by the present disclosure as applicable to provide improved and/or personalized search results can equally be applied to provide improved and/or personalized recommendations, dashboard information, or other information presentations in which information (e.g., job postings or snippets of job postings) is provided without receipt of an explicit search query from the user.
- a personal assistant application can automatically retrieve and present job postings or job posting snippets without being prompted by the user with an explicit search query.
- the predicted classifications for the portions of the job posting can affect the job posting's ranking as a search result.
- the computing system can penalize a job posting that, following classification, is missing significant sections (e.g., the job posting does not have at least one portion classified into each of a plurality of required sections).
- the set of required sections can be user-defined, such that a job posting's search result ranking is penalized if the job posting does not include at least one portion classified into each of such user-defined required sections.
- the computing system can assign different weights to keyword matches found in different sections.
- the classification of a portion into a particular section will influence the weight assigned to keywords matched to a search query from such section. For example, matching keywords from a portion classified into the company section might be weighted less than matching keywords from a portion classified into the requirements section.
- the weighting applied to keyword matches from different sections can be user-defined or based on the user-specific ranking of section importance described above.
- the computing system can provide improved, user-specific search results by weighting keywords according to user preferences regarding section importance.
- the classification of the portions into sections can yield benefits when attempting to classify the job posting as a whole into a job category that is descriptive of the type of position listed by the job posting (e.g., road construction job category vs dental hygienist category).
- some sections are not as meaningful as others when it comes to classifying jobs into job categories.
- these less meaningful sections can be denominated as “noisy.”
- the “benefits” and “other” sections tend to be similar across all job postings and therefore contribute less toward performing whole-posting job category classification.
- the computing system can remove one or more portions of the job posting that have been classified into one or more noisy sections and, subsequently, classify the job posting into one of a plurality of job categories based on the remaining portions of the job posting.
- the classification of the portions into sections can yield benefits when attempting to extract certain features from the job posting.
- a skill extractor can be implemented to attempt to extract required skills from the job posting;
- a benefits extractor can be implemented to attempt to extract benefits from the job posting;
- a years of experience extractor can be implemented to extract a number of years of experience required for the job; and/or other extractors can be implemented to extract other features.
- such extractors can be applied to only portions of the job posting that have been classified into a section that is relevant to the feature such extractors are attempting to extract.
- the skill extractor can be applied to only portions of the job posting that have been classified into the requirements section; the benefits extractor can be applied to only portions of the job posting that have been classified into the benefits section; and the years of experience extractor can be applied to only portions of the job posting that have been classified into the requirements section.
- the extractors are given only the most pertinent portions of the job posting, thereby enabling the extractors to provide more precise, less noisy results and fewer false positives. Providing only certain portions to the extractors also reduces computational time associated with the extractors.
- portions classified into the company section can serve as a description for the company in a profile page for the company.
- the classification techniques described herein can also provide benefits when applied to a scenario in which a job posting is being actively created. In some instances, these benefits may be denominated as “coaching” a job posting creator.
- a computing system assisting an employer in creating a job posting can perform classification (e.g., in the background iteratively) on the current draft of the posting and can provide a notification to the employer if certain important sections are missing (e.g., if the classification results in no portions being classified into a certain important section).
- the computing system can generally indicate which sections are most important.
- the computing system can determine that a first portion of the job posting is misplaced based at least in part on the classification. For example, the first portion may be classified into the benefits section but be separated from a main sequence of portions classified into the benefits section.
- the computing system can provide a notification to an owner or creator of the job posting that indicates that the first portion is misplaced.
- the owner or creator can edit the job posting to reposition the first portion into the correct location/order.
- the computing system can provide statistical feedback to the posting creator. For example, the computing system can indicate sections that would benefit from additional information and can provide an indication of an estimated increase in click-throughs that the posting would receive if such information were provided.
- the present disclosure provides systems and methods for improving job posting structure and presentation by, for example, classifying portions of job postings into informative sections.
- FIG. 1 depicts a block diagram of an example computing system 100 that improves the structure and user-friendliness of job postings according to example embodiments of the present disclosure.
- the system 100 includes a user computing device 102 , a server computing system 130 , and, in some implementations, a training computing system 150 that are communicatively coupled over a network 180 . In other implementations, the training system 150 is not included.
- the user computing device 102 can be any type of computing device, such as, for example, a personal computing device (e.g., laptop or desktop), a mobile computing device (e.g., smartphone or tablet), a gaming console or controller, a wearable computing device, an embedded computing device, or any other type of computing device.
- a personal computing device e.g., laptop or desktop
- a mobile computing device e.g., smartphone or tablet
- a gaming console or controller e.g., a gaming console or controller
- a wearable computing device e.g., an embedded computing device, or any other type of computing device.
- the user computing device 102 includes one or more processors 112 and a memory 114 .
- the one or more processors 112 can be any suitable processing device (e.g., a processor core, a microprocessor, an ASIC, a FPGA, a controller, a microcontroller, etc.) and can be one processor or a plurality of processors that are operatively connected.
- the memory 114 can include one or more non-transitory computer-readable storage mediums, such as RAM, ROM, EEPROM, EPROM, flash memory devices, magnetic disks, etc., and combinations thereof.
- the memory 114 can store data 116 and instructions 118 which are executed by the processor 112 to cause the user computing device 102 to perform operations.
- the user computing device 102 can also include one or more user input component 122 that receives user input.
- the user input component 122 can be a touch-sensitive component (e.g., a touch-sensitive display screen or a touch pad) that is sensitive to the touch of a user input object (e.g., a finger or a stylus).
- the touch-sensitive component can serve to implement a virtual keyboard.
- Other example user input components include a microphone, a traditional keyboard, or other means by which a user can enter a communication (e.g., a search query).
- the user computing device 102 includes a browser application 124 .
- the browser application 124 can be implemented by the one or more processors 112 .
- the browser application 124 can retrieve, present, and traverse information resources from the World Wide Web.
- the browser application 124 can be a mobile web browser.
- the browser application 124 can communication with the server computing system 130 over network 180 to receive a search results page that includes job postings or snippets of job postings.
- the user computing device 102 includes a display 126 .
- the display 126 can include different types of display components, such as, for example, a light-emitting diode display (e.g., organic light-emitting diode display), a liquid-crystal display (e.g., thin-film-transistor liquid-crystal display), a thin-film diode display, etc.
- the display 126 can also be touch-sensitive.
- the display can be a capacitive touchscreen, a resistive touchscreen, or other touch-sensitive technologies.
- the server computing system 130 includes one or more processors 132 and a memory 134 .
- the one or more processors 132 can be any suitable processing device (e.g., a processor core, a microprocessor, an ASIC, a FPGA, a controller, a microcontroller, etc.) and can be one processor or a plurality of processors that are operatively connected.
- the memory 134 can include one or more non-transitory computer-readable storage mediums, such as RAM, ROM, EEPROM, EPROM, flash memory devices, magnetic disks, etc., and combinations thereof.
- the memory 134 can store data 136 and instructions 138 which are executed by the processor 132 to cause the server computing system 130 to perform operations.
- the server computing system 130 includes or is otherwise implemented by one or more server computing devices. In instances in which the server computing system 130 includes plural server computing devices, such server computing devices can operate according to sequential computing architectures, parallel computing architectures, or some combination thereof.
- the server computing system 130 can include one or more search tools 138 .
- Search tools 138 can include a job posting search tool or search engine. In some implementations, the search tools 138 can be included in the user computing device 102 .
- the search tools 138 can locate or otherwise retrieve information (e.g., job postings or job posting snippets) that is relevant to a query or other request for information.
- the search tools 138 and other components of the server computing system 130 and/or user computing device 102 can access one or more job postings 190 from a database.
- the database of job postings 190 can be one database or can be multiple databases.
- the job postings 190 can be obtained from databases associated with company job posting sites, employment web sites or platforms, or other data sources.
- the job postings 190 can be accessible via an application programming interface.
- the job postings 190 can be HTML documents.
- the server computing system 139 can include a posting separator 139 .
- the posting separator 139 can be implemented to separate a job posting into a plurality of portions.
- computing system 130 can implement the posting separator 139 to perform some or all of methods 200 and 300 of FIGS. 2 and 3 .
- the server computing system 130 can also store or otherwise include one or more classification models 140 .
- the classification model(s) 140 can be implemented to classify portions of a job posting into sections.
- computing system 130 can implement the classification model(s) 140 to perform some or all of methods 200 , 400 , and 500 of FIGS. 2, 4 , and 5 .
- the classification models 140 can be or can otherwise include various machine-learned models such as neural networks (e.g., deep neural networks) or other multi-layer non-linear models.
- the classification models 140 can be or can otherwise include one or more support vector machines (e.g., structured support vector machines); logistic regression models; and/or other machine-learned models or classifiers.
- the classification models 140 can be implemented by the server computing system 140 as a portion of a web service (e.g., a search or information retrieval service and/or a job post coaching service).
- a web service e.g., a search or information retrieval service and/or a job post coaching service.
- one or more classification models can be received by the user computing device 102 from the server computing system 130 over network 180 , stored in the user computing device memory 114 , and then used or otherwise implemented by the one or more processors 112 .
- one or more classification models can be stored and implemented at the user computing device 102 and/or one or more models can be stored and implemented at the server computing system 130 .
- the server computing system 130 can further include a job posting manager 142 .
- the server computing system 130 can implement the job posting manager 142 to perform various actions on job postings, including, for example, modification of job postings, generation of personalized job postings or job posting snippets, job posting coaching, job posting categorization, or other tasks.
- computing system 130 can implement job posting manager 142 to perform various aspects of method 200 or other aspects of the present disclosure.
- Each of the posting separator 139 , classification model 140 , and job posting manager 142 can include computer logic utilized to provide desired functionality.
- Each of the posting separator 139 , classification model 140 , and job posting manager 142 can be implemented in hardware, firmware, and/or software controlling a general purpose processor.
- each of the posting separator 139 , classification model 140 , and job posting manager 142 includes program files stored on a storage device, loaded into a memory and executed by one or more processors.
- each of the posting separator 139 , classification model 140 , and job posting manager 142 includes one or more sets of computer-executable instructions that are stored in a tangible computer-readable storage medium such as RAM hard disk or optical or magnetic media.
- the server computing system 130 can train each classification model 140 via interaction with the training computing system 150 that is communicatively coupled over the network 180 .
- the training computing system 150 can be separate from the server computing system 130 or can be a portion of the server computing system 130 .
- the training computing system 150 includes one or more processors 152 and a memory 154 .
- the one or more processors 152 can be any suitable processing device (e.g., a processor core, a microprocessor, an ASIC, a FPGA, a controller, a microcontroller, etc.) and can be one processor or a plurality of processors that are operatively connected.
- the memory 154 can include one or more non-transitory computer-readable storage mediums, such as RAM, ROM, EEPROM, EPROM, flash memory devices, magnetic disks, etc., and combinations thereof.
- the memory 154 can store data 156 and instructions 158 which are executed by the processor 152 to cause the training computing system 150 to perform operations.
- the training computing system 150 includes or is otherwise implemented by one or more server computing devices.
- the training computing system 150 can include a model trainer 160 that trains the machine-learned models 140 stored at the server computing system 130 using various training or learning techniques, such as, for example, backwards propagation of errors.
- performing backwards propagation of errors can include performing truncated backpropagation through time.
- the model trainer 160 can perform a number of generalization techniques (e.g., weight decays, dropouts, etc.) to improve the generalization capability of the models being trained.
- the model trainer 160 can train a classification model 140 based on a set of training data 162 .
- the training data 162 can include, for example, pairs of job text and section label (e.g., ⁇ “qualification: 3 years of java experience”, “requirement”>).
- the section label can be a manually generated label.
- the training data 162 can be extracted from job postings mainly based on HTML tags in the format of [job_id, raw_text, section].
- the classifier model 140 can be trained via logistic regression on bag of words features (e.g., after term frequency, inverse document frequency, and normalization).
- the model trainer 160 includes computer logic utilized to provide desired functionality.
- the model trainer 160 can be implemented in hardware, firmware, and/or software controlling a general purpose processor.
- the model trainer 160 includes program files stored on a storage device, loaded into a memory and executed by one or more processors.
- the model trainer 160 includes one or more sets of computer-executable instructions that are stored in a tangible computer-readable storage medium such as RAM hard disk or optical or magnetic media.
- the network 180 can be any type of communications network, such as a local area network (e.g., intranet), wide area network (e.g., Internet), or some combination thereof and can include any number of wired or wireless links.
- communication over the network 180 can be carried via any type of wired and/or wireless connection, using a wide variety of communication protocols (e.g., TCP/IP, HTTP, SMTP, FTP), encodings or formats (e.g., HTML, XML), and/or protection schemes (e.g., VPN, secure HTTP, SSL).
- FIG. 1 illustrates one example computing system that can be used to implement the present disclosure.
- the user computing device 102 can include the model trainer 160 and the training dataset 162 .
- the classification models can be both trained and used locally at the user computing device 102 .
- the user computing device 102 can implement the model trainer 160 to personalize the classification models based on user-specific data.
- the models 140 can be included in an application of the computing device. In other example systems, the models 140 can be included in an operating system of the computing device and can interface with applications via an application programming interface.
- FIG. 2 depicts a flow chart diagram of an example method 200 to improve job posting structure according to example embodiments of the present disclosure.
- a computing system obtains a job posting.
- the job posting can be submitted to the computing system by a user.
- the job posting can be retrieved from a database of a job posting board or other job search/posting platform.
- the job posting can be obtained by crawling web pages to identify and extract job postings.
- the computing system separates the job posting into a plurality of portions.
- the job posting can be separated into the plurality of portions based on syntactic features (e.g., HTML tags), contextual features, or other features.
- the portions can correspond to paragraphs and the job posting can be separated into the paragraphs based on paragraph breaks.
- the job posting can be separated into the portions based on page breaks, line breaks, and/or sentence breaks.
- other separation logic can be implemented.
- FIG. 3 depicts a flow chart diagram of an example method 300 to separate job postings into portions according to example embodiments of the present disclosure.
- a computing system separates a job posting into a first number of paragraphs based on a first set of HTML tags.
- the first set of HTML tags can include the following HTML tags: ul, ol, p, h[1-6], /ul, /ol, /p, /h[1-6], and/or other tags (ignoring case).
- the computing system can clean the paragraphs by first removing those tags included in a blacklist after lowercase. For the remaining paragraphs, the computing system can strip away the HTML tags, split on consecutive whitespace ( ⁇ s+), and/or remove any empty strings. The computing system can join the parts back with a single whitespace as the joiner.
- the blacklist can include the following: [“br”, “div”, “ul”, “ol”, “li”, “p”, “h1”, “h2”, “h3”, “h4”, “h5”, “h6”, “/br”, “/div”, “/ul”, “/ol”, “/li”, “/p”, “/h1”, “/h2”, “/h3”, “/h4”, “/h5”, “/h6”, “tr”, “/tr”].
- the computing system can remove any empty paragraph.
- the computing system concatenates any of the first number of paragraphs that has fewer characters than a minimum character threshold.
- some paragraphs are too short and do not contain enough information for the classifier to make a correct classification.
- short paragraphs are concatenated together (e.g., each short paragraph is concatenated to the previous or subsequent paragraph) until the minimum character threshold is reached.
- the minimum character threshold can equal 40 characters.
- one exception to the above concatenation scheme is enforced. If the last paragraph in the job posting that is too short, since there is not a subsequent paragraph to which it can be concatenated, the last paragraph would still be valid. In other implementations, if the last paragraph is too short, it can be concatenated to the previous paragraph.
- the computing system determines whether the first number of paragraphs contains less than a first threshold number of paragraphs. For example, the first threshold number of paragraphs can equal two. If the computing system determines at 306 that the first number of paragraphs does not contain less than the first threshold number of paragraphs, then method 300 ends.
- method 300 proceeds to 308 .
- the computing system separates the job posting into a second number of paragraphs based on a second set of HTML tags.
- the second set of HTML tags includes a larger number of tags than the first set of HTML tags.
- the computing system can perform steps 304 and 306 again with one difference: the second set of HTML tags can include the following HTML tags: ul, ol, p, h[1-6], /ul, /ol, /p, /h[1-6], br, /br, div, /div, and/or other tags (ignoring case).
- Use of the second set of HTML tags can separate the job posting into a larger number of paragraphs at a finer grain.
- the computing system determines whether the second number of paragraphs contains less than a second threshold number of paragraphs.
- the second threshold number can equal two. If the computing system determines at 310 that the second number of paragraphs does not contain less than the second threshold number of paragraphs, then method 300 ends. However if the computing system determines at 310 that the second number of paragraphs does contain less than the second threshold number of paragraphs, then method 300 proceeds to 312
- the computing system classifies each of the second number of paragraphs into a default section.
- the default section can be a responsibility and description section.
- method 300 provides one example technique to separate job postings into portions. Other techniques can be used as well.
- the computing system classifies each portion of the job posting into one of a plurality of sections.
- the computing system can classify each portion based on various syntactic and/or contextual features associated with such portion and/or words or tokens included in such portion.
- the computing system can include and use a machine-learned classifier model to classify each section.
- the machine-learned classifier model can include various types of machine-learned models such as, for example, support vector machines, artificial neural networks (e.g., deep neural networks), logistic regression classifiers, and/or other types of machine-learned models.
- classifying each portion at 206 can include respectively inputting each portion in the machine-learned classifier and, in response, respectively receiving a classification for each portion as an output of the machine-learned classifier.
- the machine-learned classifier model can be trained on a set of training data that includes pairs of job text and section label, ex. ⁇ “qualification: 3 years of java experience”, “requirement”>.
- the section label can be a manually generated label or a label generated according to a computer-implemented processing algorithm.
- FIG. 4 depicts a flow chart diagram of an example method 400 to classify portions of job postings into sections according to example embodiments of the present disclosure.
- a computing system generates a log-scaled term frequency vector for each portion of the job posting.
- the computing system can split each job portion into tokens by anything other than letters, digits, and/or underscores.
- the computing system can then create a map to store the frequencies of words in each portion.
- the computing system can logarithmically scale the counts. For example, logarithmic scaling can be performed as follows: 1+log(raw term frequency+1), using base 10 for log.
- the computing system can obtain a “vector” (which in some instances may actually be a map) that is in pairs of (token, logarithmically scaled term frequency).
- a “vector” (which in some instances may actually be a map) that is in pairs of (token, logarithmically scaled term frequency).
- One example vector is as follows: ⁇ ‘python’: 1.23819, ‘java’: 1.13819, ‘development’: 1.0183922 . . . ⁇ .
- the computing system normalizes the log-scaled term frequency vector for each portion using inverse document frequency (IDF).
- IDF is a calculation technique that penalizes common terms.
- the IDF technique can be performed on the basis of the frequency of words or tokens contained in a corpus of other job postings included in a training set.
- the computing system can generate or obtain IDF values in a map form (e.g., token, IDF value of the token).
- a map form e.g., token, IDF value of the token.
- the computing system can multiply, for each portion, all values in the log-scaled term frequency vector by the corresponding IDF value for the corresponding token in the IDF map.
- the computing system can renormalize the vector for each portion.
- One example renormalization process can proceed as follows:
- euclidean_norm euclidean_sum ⁇ circumflex over ( ) ⁇ 0.5
- the computing system compares the normalized term frequency vector for each portion to a regression coefficients hashmap to obtain, for each portion, a plurality of probabilities respectively for the plurality of sections.
- the regression coefficients hashmap can be of size M ⁇ (N+1) where M is the number of sections and N is the number of features (e.g., tokens appeared in training set). The “+1” can account for the intercept.
- the computing system can calculate a score for each section as follows (the benefit section is used in the following example):
- the computing system can then convert the score for each section into an assignment probability as follows:
- the computing system can provide assignment probabilities sorted in descending order.
- One example set of probabilities for a particular portion is as follows: [(‘Requirement’, 1.0), (‘Responsibility and Desc’, 0.043), (‘Benefit’, 0.03), (‘Company’, 0.007), (‘Other’, 0.004)].
- the computing system classifies each portion of the job posting into a respective section based at least in part on the respective probabilities obtained for such portion for the plurality of sections. For example, in some implementations, at 408 , each portion can be classified in the section that received the highest probability for such portion. For example, for the example probabilities provided above, such portion would be classified into the requirements section.
- the computing system can return the section with the highest probability so long as the probability for such section exceeds a corresponding threshold value.
- the corresponding threshold value used for each section may be the same for all sections or may be specific to the particular section. If the probability for the section with the highest probability does not exceed the corresponding threshold value, then the portion can be classified into the “Other” section with some artificial confidence.
- method 400 provides one example technique to classify portions of a job posting into sections. Other methods can be used as well.
- method 400 can further include performing a smoothing technique.
- the smoothing technique can be performed prior to or subsequent to step 408 .
- the techniques described herein can separate a large portion into multiple smaller portions that might receive different classification results.
- classification is not necessarily “wrong”, but people would usually expect the whole of the large portion to get classified into one single section.
- the computing system can smooth the classification results according to the neighboring portions.
- FIG. 5 depicts a flow chart diagram of an example method 500 to classify portions of job postings into sections according to example embodiments of the present disclosure.
- a computing system determines an initial classification and an initial probability for each portion of the job posting. For example, the initial classification and an initial probability for each portion can be determined as described with reference to FIG. 4 .
- the computing system considers the next portion of the job posting. For example, at the first instance of 504 , the computing system can consider the first portion of the job posting. At subsequent instances of 504 , the computing system considers the next or subsequent portion of the job posting. In such fashion, each portion of the job posting can be considered.
- the computing system determines whether the portions before and after the currently considered portion both have a same initial classification and both have an initial probability that is greater than a high confidence threshold.
- the high confidence threshold can be set to 0.6.
- method 500 proceeds to 514 . However, if the computing system determines at 506 that such conditions are met, then method 500 proceeds to 508 .
- the computing system determines whether the currently considered portion has a different initial classification than the portions before and after the currently considered portion. If the computing system determines at 508 that such condition is not met, then method 500 proceeds to 514 . However, if the computing system determines at 508 that such condition is met, then method 500 proceeds to 510 .
- the computing system determines whether the currently considered portion has a probability for the initial classification of the portions before and after that is greater than a low confidence threshold.
- the low confidence threshold can be set to 0.25.
- method 500 proceeds to 514 . However, if the computing system determines at 510 that such condition is met, then method 500 proceeds to 512 .
- the computing system re-classifies the currently considered portion into the section indicated by the initial classification of the portions before and after the currently considered portion.
- the computing system can further set the top probability for the currently considered portion as the same probability value that the currently considered portion initially received for the section into which it has been reclassified (e.g., the section associated with the portions before and after).
- a particular portion has the following initial probabilities: [(‘Requirement’, 1.0), (‘Responsibility and Desc’, 0.56), (‘Benefit’, 0.03), (‘Company’, 0.007), (‘Other’, 0.004)].
- Such portion would initially be classified into the Requirement section.
- the particular portion has been reclassified into the ‘Responsibility and Desc’ section at 512 .
- the final classification and probability should be: (‘Responsibility and Desc’, 0.56).
- the computing system can add a flag indicating that smoothing has affected the result for the currently considered portion. Such flag can be useful for future debugging use and refinement on thresholds.
- the computing system determines whether additional portions remain. If the computing system determines at 514 that additional portions do remain, then method 500 returns to 504 and considers the next portion of the job posting. In such fashion, steps 504 through 514 can be iteratively repeated until all portions have been considered. However, if the computing system determines at 514 that additional portions do not remain, then method 500 ends.
- the computing system can simply provide a notification to the owner of creator of the job posting that the identified portion may be misplaced.
- aspects of method 500 can be used to provide real-time or after-the-fact job post coaching.
- the computing system modifies the job posting based at least in part on the respective sections into which the portions of the job posting are respectively classified.
- the computing system can add a header for a particular section to the job posting if such header is missing. For example, if a portion of the job posting is classified into the requirements section, but there is not a header or label of any sort mentioning “Requirements” in the original job posting, then the computing system can add a label or header just before the portion.
- the header can have the appropriate font, indentation, etc. Addition of a header in this fashion can render the job posting more readable and improve the job posting structure.
- the computing system can color the portions of the job posting differently according to the sections into which they were classified. For example, all portions classified into the requirements section can be colored red while all portions classified into the benefits section can be colored green. Since certain portions classified into the same section might appear in the job posting at multiple places unconnected to each other, the addition of coloring as described above can make it easier for a job seeker to recognize all the text belonging to a section in which they are interested.
- the colors respectively assigned to the sections can be adjustable and/or toggleable by a user, so that a user can easily recognize the sections in which they are specifically interested.
- the computing system can reconstruct the job posting by, for example, reordering the portions such that portions of the job posting such that each set of one or more portions that are classified into a same respective section are placed in adjacent to each other.
- the structure of the job posting can be improved by placing related portions together, when the original job posting may have included the portions in a less orderly fashion.
- a snippet of such job posting can include structured and informative information for each of one or more of the sections.
- the snippet of the job postings can include portions that have been classified into the sections that are generally regarded as the most important. For example, the requirements section is generally regarded as more important than the other section.
- the computing system can modify the job posting at 208 to provide a personalized version of the job posting or personalized snippet of the job posting. For example, when providing the job posting or a snippet of the job posting for display to a particular user, the computing system can first retrieve user preference information associated with such user. In particular, the particular user may have explicitly entered a ranking of section importance. Additionally or alternatively, such user preference information can be inferred based on user feedback, user actions/activity, or other information. For example, if a user more frequently performs searches the include terms related to benefits, then the computing system can infer that the user places a higher importance on the benefits section. Likewise, if the user more frequency clicks on or interacts with the benefits sections of job postings, then again it can be inferred that the user places higher importance on the benefits section.
- the computing system can reorder the portions of the job posting such that the portions are presented according to a ranking of section importance associated with the particular user.
- a user may have explicitly or implicitly indicated that she prefers to first review the benefits section, then the requirements section, and so forth.
- the computing system can reorder the portions of the job posting based on their assigned classifications so that portions classified into the benefits section are provided first, the portions classified into the requirements section are provided second, and so forth. Other users may have different rankings of section importance and the job posting can be modified according to such different rankings.
- the computing system can generate a personalized snippet of the job posting based at least in part on the ranking of section importance.
- the personalized snippet can include only a maximum number of snippets from the maximum number of highest ranked sections.
- snippets can be selected according to the ranking until a defined screen space or area is filled.
- the size of a respective snippet taken from each section can be correlated to the importance of such section (e.g., higher ranked sections have larger snippets taken therefrom).
- the computing system can use user preference information in combination with the classification of the portions into the sections to provide the particular user with a personalized version of the job posting or personalized snippet of the job posting.
- Generation and presentation of user-specific job postings and snippets provides a unique and user-friendly job search experience that is tailored to each particular user's preferences.
- the predicted classifications for the portions of the job posting can affect the job posting's ranking as a search result.
- the computing system can penalize a job posting that, following classification, is missing significant sections (e.g., the job posting does not have at least a respective one of the plurality of portions classified into each of a plurality of required sections).
- the set of required sections can be user-defined, such that a job posting's search result ranking is penalized if the job posting does not include at least one portion classified into each of such user-defined required sections
- the computing system can assign different weights to keyword matches found in different sections.
- the classification of a portion into a particular section will influence the weight assigned to keywords matched to a search query from such section. For example, matching keywords from a portion classified into the company section might be weighted less than matching keywords from a portion classified into the requirements section.
- the weighting applied to keyword matches from different sections can be user-defined or based on the user-specific ranking of section importance described above.
- the computing system can provide improved, user-specific search results by weighting keywords according to user preferences regarding section importance.
- the classification of the portions into sections can yield benefits when attempting to classify the job posting as a whole into a job category that is descriptive of the type of position listed by the job posting (e.g., road construction job category vs dental hygienist category).
- some sections are not as meaningful as others when it comes to classifying jobs into job categories.
- these less meaningful sections can be denominated as “noisy.”
- the “benefits” and “other” sections tend to be similar across all job postings and therefore contribute less toward performing whole-posting job category classification.
- the computing system can remove one or more portions of the job posting that have been classified into one or more noisy sections and, subsequently, classify the job posting into one of a plurality of job categories based on the remaining portions of the job posting.
- the classification of the portions into sections can yield benefits when attempting to extract certain features from the job posting.
- a skill extractor can be implemented to attempt to extract required skills from the job posting;
- a benefits extractor can be implemented to attempt to extract benefits from the job posting;
- a years of experience extractor can be implemented to extract a number of years of experience required for the job; and/or other extractors can be implemented to extract other features.
- such extractors can be applied to only portions of the job posting that have been classified into a section that is relevant to the feature such extractors are attempting to extract.
- the skill extractor can be applied to only portions of the job posting that have been classified into the requirements section; the benefits extractor can be applied to only portions of the job posting that have been classified into the benefits section; and the years of experience extractor can be applied to only portions of the job posting that have been classified into the requirements section.
- the extractors are given only the most pertinent portions, thereby enabling the extractors to provide more precise, less noisy results and fewer false positives. Providing only certain portions to the extractors also reduces computational time associated with the extractors.
- portions classified into the company section can serve as a description for the company in a profile page for the company.
- the classification techniques described herein can also provide benefits when applied to a scenario in which a job posting is being actively created. In some instances, these benefits may be denominated as “coaching” a job posting creator.
- a computing system assisting an employer in creating a job posting can perform classification (e.g., in the background iteratively) on the current draft of the posting and can provide a notification to the employer if certain important sections are missing (e.g., if the classification results in no portions being classified into a certain “important” section).
- the computing system can generally indicate which sections are most important.
- the computing system can determine that a first portion of the job posting is misplaced based at least in part on the classification. For example, the first portion may be classified into the benefits section but be separated from a main body of portions classified into the benefits section.
- the computing system can provide a notification to an owner or creator of the job posting that indicates that the first portion is misplaced.
- the owner or creator can edit the job posting to reposition the first portion into the correct location/order.
- the computing system can provide statistical feedback to the posting creator. For example, the computing system can indicate sections that would benefit from additional information and can provide an indication of an estimated increase in click-throughs that the posting would receive if such information were provided.
- the technology discussed herein makes reference to servers, databases, software applications, and other computer-based systems, as well as actions taken and information sent to and from such systems.
- the inherent flexibility of computer-based systems allows for a great variety of possible configurations, combinations, and divisions of tasks and functionality between and among components.
- processes discussed herein can be implemented using a single device or component or multiple devices or components working in combination.
- Databases and applications can be implemented on a single system or distributed across multiple systems. Distributed components can operate sequentially or in parallel.
- FIGS. 2-5 depicts steps performed in a particular order for purposes of illustration and discussion, the methods of the present disclosure are not limited to the particularly illustrated order or arrangement.
- the various steps of each of methods 200 , 300 , 400 , and 500 can be omitted, rearranged, combined, and/or adapted in various ways without deviating from the scope of the present disclosure.
- the present disclosure is specifically discussed with reference to improving job posting structure, the systems, methods, techniques, and aspects of the present disclosure can also be applied to improve the structure of other types of postings or information.
- the systems, methods, techniques, and aspects of the present disclosure can also be applied to improve the structure of for sale listings, apartment or home listings, dating profiles, or any other unstructured or semi-structured text.
Abstract
Description
-
- euclidean_sum+=log_term_freq_vector[term]{circumflex over ( )}2
-
- log_term_freq_vector[term]/=euclidean_norm
-
- if term in coef_hashmap[“benefit”]:
- score+=nm_log_tf_vector[term] *coef_hashmap[“benefit”][term]
- if term in coef_hashmap[“benefit”]:
Claims (19)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US15/389,681 US10997560B2 (en) | 2016-12-23 | 2016-12-23 | Systems and methods to improve job posting structure and presentation |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US15/389,681 US10997560B2 (en) | 2016-12-23 | 2016-12-23 | Systems and methods to improve job posting structure and presentation |
Publications (2)
Publication Number | Publication Date |
---|---|
US20180181915A1 US20180181915A1 (en) | 2018-06-28 |
US10997560B2 true US10997560B2 (en) | 2021-05-04 |
Family
ID=62630755
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US15/389,681 Active 2039-10-14 US10997560B2 (en) | 2016-12-23 | 2016-12-23 | Systems and methods to improve job posting structure and presentation |
Country Status (1)
Country | Link |
---|---|
US (1) | US10997560B2 (en) |
Cited By (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20200372341A1 (en) * | 2019-05-21 | 2020-11-26 | Salesforce.Com, Inc. | Systems and Methods for Reading Comprehension for a Question Answering Task |
US20230222538A1 (en) * | 2021-08-13 | 2023-07-13 | Pandologic Ltd | System and method for multi campaign optimization |
US11907652B2 (en) | 2022-06-02 | 2024-02-20 | On Time Staffing, Inc. | User interface and systems for document creation |
Families Citing this family (10)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10565562B2 (en) * | 2017-07-25 | 2020-02-18 | Microsoft Technology Licensing, Llc | Hashing query and job posting features for improved machine learning model performance |
US20190197484A1 (en) * | 2017-12-22 | 2019-06-27 | Microsoft Technology Licensing, Llc | Segmentation and labeling of job postings |
US11176152B2 (en) * | 2018-01-29 | 2021-11-16 | Torre Labs, Inc. | Job matching method and system |
US11107040B2 (en) * | 2018-06-13 | 2021-08-31 | Adp, Inc | Job description generator |
US11100143B2 (en) * | 2018-07-19 | 2021-08-24 | Steady Platform Llc | Structuring of unstructured web posting |
US11222310B2 (en) * | 2018-08-27 | 2022-01-11 | Jobiak LLC | Automatic tagging for online job listings |
TWI709050B (en) * | 2018-09-20 | 2020-11-01 | 一零四資訊科技股份有限公司 | Recommendation method and recommendation system |
US11164153B1 (en) | 2021-04-27 | 2021-11-02 | Skyhive Technologies Inc. | Generating skill data through machine learning |
US11373146B1 (en) * | 2021-06-30 | 2022-06-28 | Skyhive Technologies Inc. | Job description generation based on machine learning |
US11526850B1 (en) * | 2022-02-09 | 2022-12-13 | My Job Matcher, Inc. | Apparatuses and methods for rating the quality of a posting |
Citations (24)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
WO2000026839A1 (en) | 1998-11-04 | 2000-05-11 | Infodream Corporation | Advanced model for automatic extraction of skill and knowledge information from an electronic document |
WO2001004811A1 (en) | 1999-07-07 | 2001-01-18 | Careerbuilder, Inc. | A system for searching multiple job posting web sites through a single web site |
US6370510B1 (en) | 1997-05-08 | 2002-04-09 | Careerbuilder, Inc. | Employment recruiting system and method using a computer network for posting job openings and which provides for automatic periodic searching of the posted job openings |
CA2484440A1 (en) | 2003-10-10 | 2005-04-10 | Daniel Nicholas Crow | Matching job candidate information |
US20080065630A1 (en) | 2006-09-08 | 2008-03-13 | Tong Luo | Method and Apparatus for Assessing Similarity Between Online Job Listings |
WO2008034114A2 (en) | 2006-09-14 | 2008-03-20 | Monster (California), Inc. | A method for interactive employment searching and skills specification |
US20080086366A1 (en) | 2006-09-14 | 2008-04-10 | David Joseph Concordia | Method For Interactive Employment Searching And Skills Specification |
US20080147575A1 (en) * | 2006-12-19 | 2008-06-19 | Yahoo! Inc. | System and method for classifying a content item |
US7555441B2 (en) | 2003-10-10 | 2009-06-30 | Kronos Talent Management Inc. | Conceptualization of job candidate information |
US20090276415A1 (en) | 2008-05-01 | 2009-11-05 | Myperfectgig | System and method for automatically processing candidate resumes and job specifications expressed in natural language into a common, normalized, validated form |
WO2010009370A2 (en) | 2008-07-18 | 2010-01-21 | Hire Reach, Inc. | Methods and systems for providing targeted advertisements over a network |
US7734627B1 (en) | 2003-06-17 | 2010-06-08 | Google Inc. | Document similarity detection |
US7761320B2 (en) | 2003-07-25 | 2010-07-20 | Sap Aktiengesellschaft | System and method for generating role templates based on skills lists using keyword extraction |
US8117024B2 (en) | 2008-05-01 | 2012-02-14 | My Perfect Gig, Inc. | System and method for automatically processing candidate resumes and job specifications expressed in natural language into a normalized form using frequency analysis |
US8438137B2 (en) | 2011-02-28 | 2013-05-07 | Hewlett-Packard Development Company, L.P. | Automatic selection of source or target deduplication |
US20130218620A1 (en) | 2012-02-21 | 2013-08-22 | Xerox Corporation | Method and system for skill extraction, analysis and recommendation in competency management |
US8650177B2 (en) | 2011-01-27 | 2014-02-11 | Linkedin Corporation | Skill extraction system |
US20140122990A1 (en) * | 2012-10-25 | 2014-05-01 | Diego Puppin | Customized e-books |
US20140201204A1 (en) * | 2003-12-31 | 2014-07-17 | Google Inc. | Systems and methods for personalizing aggregated news content |
US20160078361A1 (en) * | 2014-09-11 | 2016-03-17 | Amazon Technologies, Inc. | Optimized training of linear machine learning models |
US9298724B1 (en) | 2013-06-14 | 2016-03-29 | Symantec Corporation | Systems and methods for preserving deduplication efforts after backup-job failures |
WO2016053382A1 (en) | 2014-09-30 | 2016-04-07 | Linkedin Corporation | Job posting standardization and deduplication |
US20180060788A1 (en) * | 2016-08-31 | 2018-03-01 | Beyrep | System and method for attribute matching |
US20180114279A1 (en) * | 2016-10-26 | 2018-04-26 | Nuzzel, Inc. | Automatic Newsletter Creation |
-
2016
- 2016-12-23 US US15/389,681 patent/US10997560B2/en active Active
Patent Citations (26)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6370510B1 (en) | 1997-05-08 | 2002-04-09 | Careerbuilder, Inc. | Employment recruiting system and method using a computer network for posting job openings and which provides for automatic periodic searching of the posted job openings |
WO2000026839A1 (en) | 1998-11-04 | 2000-05-11 | Infodream Corporation | Advanced model for automatic extraction of skill and knowledge information from an electronic document |
WO2001004811A1 (en) | 1999-07-07 | 2001-01-18 | Careerbuilder, Inc. | A system for searching multiple job posting web sites through a single web site |
US7734627B1 (en) | 2003-06-17 | 2010-06-08 | Google Inc. | Document similarity detection |
US7761320B2 (en) | 2003-07-25 | 2010-07-20 | Sap Aktiengesellschaft | System and method for generating role templates based on skills lists using keyword extraction |
CA2484440A1 (en) | 2003-10-10 | 2005-04-10 | Daniel Nicholas Crow | Matching job candidate information |
WO2005038584A2 (en) | 2003-10-10 | 2005-04-28 | Unicru, Inc. | Matching job candidate information |
US7555441B2 (en) | 2003-10-10 | 2009-06-30 | Kronos Talent Management Inc. | Conceptualization of job candidate information |
US20140201204A1 (en) * | 2003-12-31 | 2014-07-17 | Google Inc. | Systems and methods for personalizing aggregated news content |
US20080065630A1 (en) | 2006-09-08 | 2008-03-13 | Tong Luo | Method and Apparatus for Assessing Similarity Between Online Job Listings |
WO2008034114A2 (en) | 2006-09-14 | 2008-03-20 | Monster (California), Inc. | A method for interactive employment searching and skills specification |
US20080086366A1 (en) | 2006-09-14 | 2008-04-10 | David Joseph Concordia | Method For Interactive Employment Searching And Skills Specification |
US20080147575A1 (en) * | 2006-12-19 | 2008-06-19 | Yahoo! Inc. | System and method for classifying a content item |
US8117024B2 (en) | 2008-05-01 | 2012-02-14 | My Perfect Gig, Inc. | System and method for automatically processing candidate resumes and job specifications expressed in natural language into a normalized form using frequency analysis |
US20090276415A1 (en) | 2008-05-01 | 2009-11-05 | Myperfectgig | System and method for automatically processing candidate resumes and job specifications expressed in natural language into a common, normalized, validated form |
WO2010009370A2 (en) | 2008-07-18 | 2010-01-21 | Hire Reach, Inc. | Methods and systems for providing targeted advertisements over a network |
US8650177B2 (en) | 2011-01-27 | 2014-02-11 | Linkedin Corporation | Skill extraction system |
US20140081928A1 (en) | 2011-01-27 | 2014-03-20 | Linkedin Corporation | Skill extraction system |
US8438137B2 (en) | 2011-02-28 | 2013-05-07 | Hewlett-Packard Development Company, L.P. | Automatic selection of source or target deduplication |
US20130218620A1 (en) | 2012-02-21 | 2013-08-22 | Xerox Corporation | Method and system for skill extraction, analysis and recommendation in competency management |
US20140122990A1 (en) * | 2012-10-25 | 2014-05-01 | Diego Puppin | Customized e-books |
US9298724B1 (en) | 2013-06-14 | 2016-03-29 | Symantec Corporation | Systems and methods for preserving deduplication efforts after backup-job failures |
US20160078361A1 (en) * | 2014-09-11 | 2016-03-17 | Amazon Technologies, Inc. | Optimized training of linear machine learning models |
WO2016053382A1 (en) | 2014-09-30 | 2016-04-07 | Linkedin Corporation | Job posting standardization and deduplication |
US20180060788A1 (en) * | 2016-08-31 | 2018-03-01 | Beyrep | System and method for attribute matching |
US20180114279A1 (en) * | 2016-10-26 | 2018-04-26 | Nuzzel, Inc. | Automatic Newsletter Creation |
Non-Patent Citations (14)
Title |
---|
"Near-Duplicates and Shingling", http://nlp.stanford.edu/IR-book/html/htmledition/near-duplicates-and-shingling-1, retrieved on Nov. 30, 2016, 5 pages. |
Barkley et al., "Pivot", 2015 Master's Project, University of California, Berkeley, 61 pages. |
Carty, "Did Indeed Hide Your Job Postings? Deduplication Explained", www.retruitingblogs.com/profiles/blogs/did-indeed-hide-your-job-postings-deduplication-explained, retrieved on Nov. 30, 2016, 10 pages. |
Facebook Screenshot of "produ", retrieved on Dec. 19, 2016, 1 page. |
Javed et al., "Towards a Job Title Classification System", arXiv:1606,00917v1, 2016—4 pages. |
Kivimaki et al., "A Graph-Based Approach to Skill Extraction from Text", Proceedings of the TextGraphs-8 Workshop, Seattle, Washington, Oct. 18, 2013, pp. 79-87. |
Lamche et al., "Interactive Explanations in Mobile Shopping Recommender Systems", ACM Conference Series on Recommender Systems—Joint Workshop on Interfaces and Human Decision Making for Recommender Systems, Foster City, Silicon Valley, California, Oct. 6, 2014, 8 pages. |
Li et al., "One Permutation Hashing", Proceedings of the 25th International Conference on Neural Information Processing Systems, Lake Tahoe, Nevada, Dec. 3-6, 2012, 9 pages. |
LinkedIn Screenshot of "pro", retrieved on Dec. 19, 2016, 1 page. |
Pathak, "Combating Web Plagiarism and Improving Internet Safety by Authenticating Web Content", 2010 International Conference for Internet Technology and Secured Transactions, London, United Kingdom, Nov. 8-11, 2010, 6 pages. |
Spirin et al., "Unsupervised Approach to Generate Informative Structured Snippets for Job Search Engines", Proceedings of the 22nd International Conference on World Wide Web Companion, Rio de Janeiro, Brazil, May 13-17, 20.13, pp. 203-204. |
Tintarev et al., "A Survey of Explanations in Recommender Systems", Proceedings of the 2007 IEEE 23rd Conference on Data Engineering Workshop, Istanbul, Turkey, Apr. 17-20, 2007, pp. 801-810. |
Wikipedia, "MinHash", https://en.wikipedia.orglwiki/MinHash, retrieved on Dec. 19, 2016, 6 pages. |
Zhao et al., "SKILL: A System for Skill Identification and Normalization", Proceedings of the Twenty-Seventh Conference on Innovative Applications of Artificial Intelligence, Austin, Texas, Jan. 25-30, 2015, pp. 4012-4017. |
Cited By (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20200372341A1 (en) * | 2019-05-21 | 2020-11-26 | Salesforce.Com, Inc. | Systems and Methods for Reading Comprehension for a Question Answering Task |
US11775775B2 (en) * | 2019-05-21 | 2023-10-03 | Salesforce.Com, Inc. | Systems and methods for reading comprehension for a question answering task |
US20230222538A1 (en) * | 2021-08-13 | 2023-07-13 | Pandologic Ltd | System and method for multi campaign optimization |
US11907652B2 (en) | 2022-06-02 | 2024-02-20 | On Time Staffing, Inc. | User interface and systems for document creation |
Also Published As
Publication number | Publication date |
---|---|
US20180181915A1 (en) | 2018-06-28 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US10997560B2 (en) | Systems and methods to improve job posting structure and presentation | |
US11537820B2 (en) | Method and system for generating and correcting classification models | |
US11657231B2 (en) | Capturing rich response relationships with small-data neural networks | |
US11645317B2 (en) | Recommending topic clusters for unstructured text documents | |
JP5171962B2 (en) | Text classification with knowledge transfer from heterogeneous datasets | |
US8103650B1 (en) | Generating targeted paid search campaigns | |
US9183285B1 (en) | Data clustering system and methods | |
US9715531B2 (en) | Weighting search criteria based on similarities to an ingested corpus in a question and answer (QA) system | |
JP6118468B2 (en) | How to systematically normalize names in large numbers | |
US11461353B2 (en) | Identifying and extracting addresses within content | |
US10311374B2 (en) | Categorization of forms to aid in form search | |
RU2583716C2 (en) | Method of constructing and detection of theme hull structure | |
US10678769B2 (en) | Artificial intelligence system and method for auto-naming customer tree nodes in a data structure | |
US8788503B1 (en) | Content identification | |
US20210125108A1 (en) | Training a ranking model | |
US11023503B2 (en) | Suggesting text in an electronic document | |
CN104471568A (en) | Learning-based processing of natural language questions | |
US20180181544A1 (en) | Systems for Automatically Extracting Job Skills from an Electronic Document | |
US9516089B1 (en) | Identifying and processing a number of features identified in a document to determine a type of the document | |
CN115210705A (en) | Vector embedding model for relational tables with invalid or equivalent values | |
US20220138259A1 (en) | Automated document intake system | |
US8195458B2 (en) | Open class noun classification | |
CN112287215A (en) | Intelligent employment recommendation method and device | |
JP2005141476A (en) | Document management device, program and recording medium | |
Pinto et al. | Intelligent and fuzzy systems applied to language & knowledge engineering |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:CHEN, PEI-CHUN;POSSE, CHRISTIAN;ZHANG, ZHAO;REEL/FRAME:040758/0664Effective date: 20161220 |
|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:TAO, XUEJUN;REEL/FRAME:041025/0591Effective date: 20161220 |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: DOCKETED NEW CASE - READY FOR EXAMINATION |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044567/0001Effective date: 20170929 |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: NON FINAL ACTION MAILED |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: RESPONSE TO NON-FINAL OFFICE ACTION ENTERED AND FORWARDED TO EXAMINER |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: FINAL REJECTION MAILED |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: ADVISORY ACTION MAILED |
|
STCV | Information on status: appeal procedure |
Free format text: NOTICE OF APPEAL FILED |
|
STCV | Information on status: appeal procedure |
Free format text: NOTICE OF APPEAL FILED |
|
STCV | Information on status: appeal procedure |
Free format text: NOTICE OF APPEAL FILED |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: NOTICE OF ALLOWANCE MAILED -- APPLICATION RECEIVED IN OFFICE OF PUBLICATIONS |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: PUBLICATIONS -- ISSUE FEE PAYMENT RECEIVED |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: PUBLICATIONS -- ISSUE FEE PAYMENT VERIFIED |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
US6470365B1 - Method and architecture for complex datapath decimation and channel filtering - Google Patents
Method and architecture for complex datapath decimation and channel filtering Download PDFInfo
- Publication number
- US6470365B1 US6470365B1 US09/378,932 US37893299A US6470365B1 US 6470365 B1 US6470365 B1 US 6470365B1 US 37893299 A US37893299 A US 37893299A US 6470365 B1 US6470365 B1 US 6470365B1
- Authority
- US
- United States
- Prior art keywords
- decimation
- filter
- channel
- format
- combined
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Lifetime
Links
Images
Classifications
-
- H—ELECTRICITY
- H03—ELECTRONIC CIRCUITRY
- H03H—IMPEDANCE NETWORKS, e.g. RESONANT CIRCUITS; RESONATORS
- H03H17/00—Networks using digital techniques
- H03H17/02—Frequency selective networks
- H03H17/06—Non-recursive filters
- H03H17/0621—Non-recursive filters with input-sampling frequency and output-delivery frequency which differ, e.g. extrapolation; Anti-aliasing
- H03H17/0635—Non-recursive filters with input-sampling frequency and output-delivery frequency which differ, e.g. extrapolation; Anti-aliasing characterized by the ratio between the input-sampling and output-delivery frequencies
- H03H17/065—Non-recursive filters with input-sampling frequency and output-delivery frequency which differ, e.g. extrapolation; Anti-aliasing characterized by the ratio between the input-sampling and output-delivery frequencies the ratio being integer
- H03H17/0664—Non-recursive filters with input-sampling frequency and output-delivery frequency which differ, e.g. extrapolation; Anti-aliasing characterized by the ratio between the input-sampling and output-delivery frequencies the ratio being integer where the output-delivery frequency is lower than the input sampling frequency, i.e. decimation
-
- H—ELECTRICITY
- H03—ELECTRONIC CIRCUITRY
- H03H—IMPEDANCE NETWORKS, e.g. RESONANT CIRCUITS; RESONATORS
- H03H17/00—Networks using digital techniques
- H03H17/02—Frequency selective networks
- H03H17/06—Non-recursive filters
- H03H17/0621—Non-recursive filters with input-sampling frequency and output-delivery frequency which differ, e.g. extrapolation; Anti-aliasing
- H03H17/0635—Non-recursive filters with input-sampling frequency and output-delivery frequency which differ, e.g. extrapolation; Anti-aliasing characterized by the ratio between the input-sampling and output-delivery frequencies
- H03H17/0671—Cascaded integrator-comb [CIC] filters
-
- H—ELECTRICITY
- H03—ELECTRONIC CIRCUITRY
- H03H—IMPEDANCE NETWORKS, e.g. RESONANT CIRCUITS; RESONATORS
- H03H2218/00—Indexing scheme relating to details of digital filters
- H03H2218/04—In-phase and quadrature [I/Q] signals
Definitions
- the present invention is directed to an efficient method and architecture that performs both decimation and channel filtering for complex signals, and more particularly to a communication device capable of decimation and channel filtering using the same architecture for both functions.
- a multi-bit digital detector such as a correlator based demodulator is typically required.
- a sufficient number of bits of dynamic range must be provided at the input of such a type of detector to achieve this.
- an analog-to-digital (A/D) conversion needs to be performed at a particular point in the receiver signal path to provide the desired number of bits of resolution at the detector.
- A/D analog-to-digital
- a decimation filter is required.
- a channel filter is typically needed in a wireless receiver to sufficiently attenuate interfering adjacent channel signals before digital detection can be performed.
- a very low cost and power efficient hardware architecture to perform both decimation as well as channel filtering using the same basic architecture.
- FIG. 1 is a block diagram of a selective call receiver having an architecture for complex datapath decimation and channel filtering in accordance with the present invention.
- FIG. 2 illustrates a block diagram of a cascaded comb filter used in a single stage decimation along with a channel filter that may be used in accordance with the present invention.
- FIG. 3 illustrates another cascaded comb filter used in multistage decimation along with a channel filter in accordance with the present invention.
- FIG. 4 illustrates another cascaded comb filter after term cancellation in accordance with the present invention.
- FIG. 5 illustrates a block diagram of a N-Tap channel filter with out optimization.
- FIG. 6 illustrates a block diagram of a N-Tap channel filter after optimization.
- FIG. 7 illustrates a block diagram of a dedicated hardware architecture for performing both decimation an d channel filtering.
- FIG. 8 discloses a flow chart of a decimation and channel filtering method in an oversampling system in accordance with the present invention.
- FIG. 9 discloses a flow chart of a decimation filtering algorithm in an oversampling system in accordance with the present invention.
- FIG. 10 discloses a flow chart of a channel filtering algorithm in an oversampling system in accordance with the present invention.
- FIG. 1 illustrates a selective call receiver 10 arranged and constructed in accordance with the present invention.
- a multi-bit digital detector such as a correlator based demodulator is typically required.
- a sufficient number of bits of dynamic range must be provided at the input of such a detector to achieve such optimum performance.
- an analog-to-digital (A/D) conversion needs to be performed at a particular point in the receiver signal path to provide the desired number of bits of resolution at the detector.
- A/D analog-to-digital
- one of the most cost and power efficient ways to provide a large dynamic range is to use a 1-bit oversampled sigma delta A/D converter.
- a decimation filter is required.
- a channel filter is typically needed in a wireless receiver to sufficiently attenuate interfering adjacent channel signals before digital detection can be performed.
- the present invention provides a very low cost and power efficient hardware architecture to perform both decimation as well as channel filtering using the same basic architecture. The architecture allows for the practical implementation of the indicated functions in a low cost and power efficient dedicated hardware solution.
- the selective call receiver 10 preferably comprises an antenna 12 for receiving radio frequency (RF) signals coupled to a RF frontend section 14 .
- the RF frontend section 14 would be comprised of an RF amplifier (not shown) which selects the desired frequency and amplifies it, a mixer 16 mixes a local oscillator signal ( 18 ) with the signal from section 14 and converts the desired spectrum to baseband (in zero IF receivers), and an IF amplifier 20 amplifies the baseband signal. After this, the baseband analog signal must be converted to B bits of digital resolution to support the dynamic range desired by the digital detector.
- the decimation filter must convert the highly oversampled 1-bit data stream from the sigma delta to B bits of resolution running at a much lower sampling rate. As it performs this, it must filter out the out-of-band quantization noise created by the sigma delta as well as preserve the in-band signal-to-noise ratio when an off-channel signal that can alias into the band of interest is present.
- a channel filter 26 is typically also needed to sufficiently attenuate adjacent channel interfering signals which may affect the signal-to-noise ratio in the band of interest.
- the present invention provides for a unique architecture in the form of a combined decimation and channel filter 23 that performs both functions efficiently to achieve minimal cost and current drain for an I and Q quadrature signal path. It has been shown that one of the most cost, power, and performance efficient ways to meet the specified criteria of attenuating out-of-band quantization noise created by a sigma delta converter is to use a cascaded comb filter for decimation filtering purposes.
- the filter 30 shown in FIG. 2 is an example of 3 cascading comb filters in a single stage decimation along with a channel filter.
- the filter 30 includes an integrator block 40 having 3 summing devices 42 coupled to 3 delay devices 44 as shown.
- the decimation ratio D as embodied in a down sampling element 46 couples to the differentiator block 50 which has 3 subtracting devices 52 coupled to 3 delay devices 54 as shown.
- a single stage decimation structure as shown in FIG. 2 requires a very large number of cascaded comb filters. This is very undesirable, particularly from a current drain and performance perspective, because it requires an unreasonably large number of integrators to run at the highest clock frequency.
- FIG. 3 only shows a 2-stage decimation with channel filter architecture 60 , however, it may be extended to as many stages as desired. Also, note that in most cases, M will be greater than L to provide sufficient aliasing attenuation at the first stopband edge in the decimator output.
- Filter 60 receives a one bit input from the A/D converter (not shown) into a L cascaded comb filter section 64 having L integrators in block 61 , L differentiators in block 63 with a down sampling element 62 coupled between blocks 61 and 63 as shown.
- the filter 60 further comprises a M cascaded comb filter section 68 (coupled to the L cascaded comb filter section 64 ) having M integrators in block 65 , M differentiators in block 67 with a down sampling element 66 coupled between blocks 65 and 67 as shown.
- the output from the M cascaded comb filter section 68 preferably provides the input to a N-Tap FIR channel filter 69 .
- FIG. 3 shows a channel filter which is typically needed after decimation in wireless receivers.
- the channel filter 69 sufficiently attenuates interfering adjacent channel signals.
- Channel filter 69 also compensates for unacceptable passband droop that is typically caused by the preceding stages of comb filters.
- an FIR type of filter is typically desirable to implement the channel filter.
- the L differentiators in the section or stage 64 can cancel L of the M integrators in the section or stage 68 . This can be done because we are simply canceling the zeros in the differentiators with their counterpart poles in the integrators.
- the resulting architecture, after the cancellation of terms, is shown in the filter architecture 70 of FIG. 4 .
- the filter architecture 70 preferably has a first section 71 with L integrators coupled to a second section 73 with M-L integrators.
- the second section 73 is preferably coupled to a third section 75 with M differentiators. Between the first section 71 and second section 73 is a down sampling element 72 . Likewise, between the second section 73 and third section 75 is a down sampling element 74 .
- the output from section 75 preferably provides the input to a N-Tap FIR channel filter 76 .
- the architecture shown in FIG. 4 fails to provide sufficient attenuation in the first stopband edge without significantly increasing M.
- M is the number of comb filters cascaded in the last decimation stage.
- D is the decimation ratio in the last stage. The effect of this is to shift one of the zeros in the last decimation stage just slightly relative the other ones in the same stage to provide improved stopband attenuation at a negligible cost impact.
- an cascading comb filter implementing this improvement would preferably comprise a first section with L integrators, a second section with M-L- 1 integrators downsampled for a third stage and M-L integrators separately downsampled for the third stage, and wherein the third stage has M diferentiators and wherein M is greater than L (not shown).
- an FIR type of filter is typically desirable to use in the channel filter. This is so that the passband droop created by the comb filters can be efficiently and systematically compensated using efficient FIR filter coefficient design methods as well as achieve the desired adjacent channel attenuation. Another reason for using an FIR type of filter is so that the linear phase properties of the received signal is preserved. This leads to better static and simulcast performance of the receiver.
- the generalized hardware architecture shown in FIG. 5 is also used for the channel filtering functionality which occurs immediately after the decimation filtering process.
- the N-Tap channel filter 80 of FIG. 5 preferably includes a series of delays elements 81 coupled to filters 82 - 86 with predetermined coefficients. The output of the filters are summed using summing elements 87 as shown.
- the N-Tap channel filter 90 of FIG. 6 preferably comprises a series of delay elements 91 coupled to summing elements 92 and 93 .
- the summing elements provide corresponding outputs to filters 96 and 97 whose outputs are likewise summed using summing elements 94 and 95 as shown to obtain the current output data sample y(n).
- the present invention illustrates a very low cost and power efficient hardware architecture that can use any one of the single or multistage architectures discussed previously to perform decimation and channel filtering. Note that our hardware architecture is not limited to a 2-stage decimation architecture, but any number of stages of decimation can be used.
- FIG. 7 shows an architecture 100 to perform single or multistage decimation filtering as well as channel filtering in a single dedicated hardware architecture.
- a single resource shared RAM 108 is employed to provide the storage needs for the decimation and channel filters.
- the bit width at the output of the final stage decimation filter is typically much larger than the final bit width precision desired at the channel filter output. This is because the bit width growth at each successive decimation stage is “K ⁇ log 2 D” bits larger than that in the previous stage to support the largest possible values in the later stages.
- all stages of the resulting multistage decimation filter must support the largest bit width determined by the final stage.
- the memory allocation scheme shown in FIG. 7 is used to store the intermediate results of the I (In-phase) and Q (Quadrature-phase) decimation and channel filters.
- the bit width of the multistage decimation filter is typically much larger than that of the channel filter, the intermediate result stored in a first format and the decimation final result stored in a second format of the I and Q decimation filter share the same RAM locations to minimize cost.
- the second format storage scheme is unlike the storage scheme used in the first format employed by the I and Q decimation filters because of the much larger bit width of the first format.
- the storage scheme used by the channel filters greatly aids in significantly reducing number of cycles needed to generate a new result.
- decimation filtering is primarily composed of consecutive integrators and differentiators running at different sampling rates. It can be seen from FIG. 4 that the total number of integrators and differentiators in either of these multistage decimators is 2M. Hence, for both the I and Q signal paths, the total number of the integrators and differentiators is 4M. Thus, the total number of delay elements for both the integrators and differentiators is 4M. This is taken into account in a cost-efficient manner in FIG. 7 by the sequential I and Q storage space allocated in the RAM for decimation filtering.
- An integrator function is performed as follows in FIG. 7 .
- the current input data sample is added (using the adder/subtractor element Al or element 122 ) to the RAM location which performs the storage operation for the delay element of that particular integrator.
- the result is then stored in the temporary register REG 0 (element 114 ) adder/subtractor as well as back into the same RAM location.
- the former type of storage is performed so that the result is available as an input data sample for the next integration operation.
- the latter type of storage is performed because the RAM is performing the cost-efficient storage operation for each delay element in each integrator. Note that the input data sample for a given integration operation can also come from either of the external I_IN or Q_IN input if such a new data sample is available.
- a differentiation operation in the specified figure occurs in a similar fashion.
- the memory location which performs the storage for a given differentiator's delay element is subtracted (using element Al or 122 ) from the input data sample.
- the result may then be stored in register REG 0 (element 114 ) as well as back into the same RAM location.
- the reasons for this is similar to that previously described for the integration operations.
- the input data sample for a particular differentiation operation can come from either the specified register or from the external I_IN/Q_IN inputs.
- the former path is employed for a nested differentiation operation while the latter path is used when a new external data sample is available.
- pipeline registers that may be required in the datapaths described to satisfy the speed limitations of the semiconductor process are purposely omitted so as to remain technology independent. These include any pipeline registers that may be required between REG 0 , REG 1 , and I-REG, Q-REG.
- Equation 2 By taking advantage of the symmetrical coefficients in a linear phase FIR filter (see Equation 2), the number of coefficients which need to be stored in a look up table 127 is reduced by a factor of 2 (see FIG. 7 ). This further reduces the overall cost. Note that in an actual hardware implementation, it may be more desirable to implement the coefficient lookup table in either a custom ROM or in random combinatorial logic depending upon the total number of bits in the lookup table. Cost, current drain, and performance tradeoffs would need to be performed based upon the specified number of total bits.
- New results are generated in our architecture at the I-REG and Q-REG register outputs after every N+4 clock cycles relative to the time that new I and Q input data samples are received from the decimation filter.
- new I and Q data samples are received, they are stored in the same row of the RAM based upon the current position of the start_ptr address pointer.
- This pointer essentially behaves the same way as that for a circular buffer.
- the indicated pointer addresses the channel filter RAM locations in a circular modulo N and consecutive fashion when performing the filtering calculations after new pair of I and Q data samples have been received.
- new I and Q data samples are received, they are stored in the memory location containing the oldest data samples.
- This storage scheme is similar to that used in a circular FIFO (First-In-First-Out) register file.
- the REG 0 and REG 1 temporary registers are also initialized using these new I and Q data samples as follows:
- I[ 0 ] and Q[ 0 ] represent the most recent input sample data.
- the accumulator registers, I-REG and Q-REG must also be reset during this initialization clock cycle before any new filtering calculations can begin.
- the first intermediate result for the I-channel is evaluated by performing:
- I - REG ⁇ I - REG +( I [ 0 ]+ I [( N ⁇ 1) modulo N ])* C [ 0 ]
- the temporary registers, REG 0 and REG 1 are loaded with the next I and Q channel data for the next index increment:
- I - REG ⁇ I - REG +( I [ 1 ]+ I [( N ⁇ 2) modulo N ])* C [ 1 ]
- FIGS. 8-10 attempt to algorithmically describe how the hardware architecture in FIG. 7 is efficiently used to perform decimation and channel filtering for both the I and Q channels. Also note the following nomenclature with respect to the description of FIGS. 5 - 8 :
- RAM[i] denotes the contents of RAM location i
- I_RAM[i] denotes the contents of RAM location I in the most significant half of the RAM (in the second format)
- Q_RAM[i] denotes the contents of RAM location i in the least significant half of the RAM (in the second format)
- a ⁇ B denotes that the element A is loaded with the contents of element B. Multiple assignments of this type performed in the same box indicate that these assignments are executed during the same clock cycle.
- REG 0 , REG 1 , I-REG, and Q-REG are elements 114 , 116 , 138 , and 136 as shown in FIG. 7, respectively.
- FIG. 8 provides an overview of a decimation and channel filtering method 600 in an oversampling system.
- an oversampled I and Q complex signal is provided at step 602 to a combined decimation and channel filter.
- This preferably comprises the step of providing a pair of 1-bit or more highly oversampled sampled data from a pair of I and Q signals from an analog-to-digital converter.
- sampled outputs are provided by a decimation filter of the combined decimation and channel filter to a memory to provide intermediate results. This step preferably preserves a desired in-band signal-to-noise ratio at a lower sampling rate.
- the intermediate results from the decimation filter is stored in the memory in a first format.
- the intermediate result gets processed by the decimation filter to provide a decimation final result.
- the decimation final results are stored in the memory in a second format at step 612 .
- the storing of the intermediate results and the storing of the decimation final results comprise the step of storing the intermediate result in a random access memory in the first format and reusing the same random access memory to store the decimation final result in a second format.
- a flow chart of the decimation filtering algorithm 700 is shown in accordance with the present invention.
- the RAM address pointer i ( 154 ) from a list of pointer registers ( 150 ) is initialized.
- the current input data sample is added with the current RAM ( 108 ) contents (at location i) and the result is stored in the same RAM location. This result is also stored in REG 0 ( 114 ) during the same cycle.
- the pointer i ( 154 ) is then updated to point to the next location in a circular buffer approach.
- step 702 the contents of the next RAM location is added with REG 0 ( 114 ) and the result is stored in the same RAM location as well as REG 0 ( 114 ).
- the RAM pointer I is updated in a similar fashion as in step 701 .
- step 703 step 702 is repeated M ⁇ 2 times to compute the result of M integrations required by the decimation filtering algorithm.
- step 704 the current contents of the RAM at the specified location is subtracted from REG 0 ( 114 ) with the result being stored in REG 0 . In the same clock cycle, the same RAM location is loaded with the prior contents of REG 0 .
- the I pointer ( 154 ) is then updated.
- step 704 is repeated M ⁇ 1 times.
- step 706 the RAM location pointed to by CHAN_ADDR pointer ( 153 ) is loaded with the rounded value of REG 0 (rounding is done to accommodate the second format without losing any significant performance in practical applications).
- the current value of I is saved in the I_DEC_ADDR pointer ( 151 ).
- steps 701 through steps 706 are repeated using a Q_IN data sample, Q_DEC_ADDR RAM pointer ( 152 ) and Q_RAM (instead of I_RAM.)
- a flow chart of the channel filtering algorithm 800 is shown in accordance with the present invention.
- the inner-most I and Q RAM locations are loaded in REG 0 and REG 1 .
- a pointer is updated to point to the outer-most elements of I and Q.
- REG 0 is combined with the outer-most element of I to compute I_REG ( 138 ).
- REG 0 is loaded with the outer-most value of Q.
- REG 0 (containing the outermost value of Q) is combined with REG 1 (which contains the inner-most value of Q from step 701 ) to compute Q-REG ( 136 ).
- steps 802 and 803 are repeated N/2 times.
- the CHAN_ADDR pointer is updated and the decimation filtering algorithm ( 700 ) of FIG. 9 starts again.
- the I and Q datapaths are alternated to reduce the number of cycles to perform I and Q channel filtering by a factor of 2 (N clock cycles as opposed to 2N+4 clock cycles).
- the present invention provides advantages in reduced current drain and higher possible clock rates by using the techniques described above.
- the decimation filter may be either a single stage cascaded comb filter, a multistage cascaded comb filter, or a multistage structure but with a shifted zero in the last decimation stage. Any one of these cost and power efficient decimation structures is supported by the hardware architecture presented herein.
- the same hardware architecture is also used for the N-tap linear phase FIR channel filter.
- the present invention illustrates a combined decimation filter and channel filter performing a decimation function and a channel filtering function by using a single memory element with a dedicated hardware architecture wherein the architecture includes two temporary registers, an adder/subtractor, a multiplier, and an accumulator and wherein the decimation function utilizes the single memory element in a first format along with a first of the two temporary registers and the adder/substractor and wherein the channel filtering function utilizes the single memory element in a second format along with a second of the two temporary registers and the adder/subtractor, the multiplier, and the accumulator.
- a channel filter algorithm uses a single memory element to reduce the number of clock cycles by a factor of two when taking advantage of the second format.
Abstract
Description
Claims (14)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US09/378,932 US6470365B1 (en) | 1999-08-23 | 1999-08-23 | Method and architecture for complex datapath decimation and channel filtering |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US09/378,932 US6470365B1 (en) | 1999-08-23 | 1999-08-23 | Method and architecture for complex datapath decimation and channel filtering |
Publications (1)
Publication Number | Publication Date |
---|---|
US6470365B1 true US6470365B1 (en) | 2002-10-22 |
Family
ID=23495131
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US09/378,932 Expired - Lifetime US6470365B1 (en) | 1999-08-23 | 1999-08-23 | Method and architecture for complex datapath decimation and channel filtering |
Country Status (1)
Country | Link |
---|---|
US (1) | US6470365B1 (en) |
Cited By (23)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20030110194A1 (en) * | 2001-12-11 | 2003-06-12 | Gorbics Mark Steven | Parallel decimation circuits |
US20030182089A1 (en) * | 2000-04-25 | 2003-09-25 | Philippe Rubbers | Low noise to signal evaluation |
US6643675B2 (en) * | 2000-11-03 | 2003-11-04 | Nokia Corporation | Filtering method and filter |
US20030220089A1 (en) * | 2002-05-23 | 2003-11-27 | Chang Tsung Yuan | Method and circuit to reduce intermodulation distortion |
US20040021595A1 (en) * | 2001-12-18 | 2004-02-05 | Erdogan Alper Tunga | Method and system for implementing a sigma delta analog-to-digital converter |
US20040088343A1 (en) * | 2002-11-06 | 2004-05-06 | Cannon Richard Hollingsworth | Digital decimation filter having finite impulse response (FIR) decimation stages |
US20040205827A1 (en) * | 2003-04-14 | 2004-10-14 | Krone Andrew W. | Multi-stage channel select filter and associated method |
US6871207B1 (en) * | 1999-12-20 | 2005-03-22 | Cirrus Logic, Inc. | Techniques for spreading zeros in a digital filter with minimal use of registers |
US7170959B1 (en) * | 1999-09-21 | 2007-01-30 | Rockwell Collins, Inc. | Tailored response cascaded integrator comb digital filter and methodology for parallel integrator processing |
US20070052557A1 (en) * | 2005-09-02 | 2007-03-08 | Thomas Magdeburger | Shared memory and shared multiplier programmable digital-filter implementation |
US20070080160A1 (en) * | 2005-10-11 | 2007-04-12 | Lutzke David E | Tote clip and assembly |
US20070216550A1 (en) * | 2006-03-20 | 2007-09-20 | Yamaha Corporation | Signal processing method and device |
US20080123772A1 (en) * | 2006-09-05 | 2008-05-29 | Hung-Kun Chen | Sound signal processing system and related apparatus and method |
US20090135035A1 (en) * | 2004-10-26 | 2009-05-28 | Koninklijke Philips Electronics N.V. | Adapting filter to detected interference level |
WO2009106557A1 (en) * | 2008-02-28 | 2009-09-03 | Continental Automotive Gmbh | Device for processing a knock sensor signal |
EP2293097A3 (en) * | 2009-09-01 | 2011-04-20 | Robert Bosch GmbH | Method and device for providing a reflection signal |
US20110231466A1 (en) * | 2010-03-17 | 2011-09-22 | Novatek Microelectronics Corp. | Time-division decimation filter bank and time-division decimation filtering method |
US20150127696A1 (en) * | 2012-06-08 | 2015-05-07 | Nec Corporation | Multi-stage filter processing device and method |
GB2524051A (en) * | 2014-03-12 | 2015-09-16 | Univ Ljubljana | Apparatus and method for filtering digital signals |
WO2016131319A1 (en) * | 2015-08-14 | 2016-08-25 | 中兴通讯股份有限公司 | Filter circuit and method |
JPWO2016021382A1 (en) * | 2014-08-04 | 2017-05-25 | アズビル株式会社 | Digital filter |
WO2017193877A1 (en) * | 2016-05-10 | 2017-11-16 | 深圳市中兴微电子技术有限公司 | Pulse density modulation switching circuit and method and storage medium |
US9837988B1 (en) | 2015-03-26 | 2017-12-05 | Altera Corporation | Dynamically adjustable decimation filter circuitry |
Citations (9)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5410498A (en) * | 1994-04-05 | 1995-04-25 | General Electric Company | Decimation circuit and method for filtering quantized signals while providing a substantially uniform magnitude and a substantially linear phase response |
US5621345A (en) * | 1995-04-07 | 1997-04-15 | Analog Devices, Inc. | In-phase and quadrature sampling circuit |
US5689449A (en) * | 1993-04-05 | 1997-11-18 | Saramaeki; Tapio | Decimation filter |
US5717617A (en) * | 1993-04-16 | 1998-02-10 | Harris Corporation | Rate change filter and method |
US5751615A (en) * | 1995-11-14 | 1998-05-12 | Advanced Micro Devices, Inc. | Implementation of a digital decimation filter and method |
US5777908A (en) * | 1995-09-08 | 1998-07-07 | Matsushita Electric Industrial Co., Ltd. | Comb filter with a smaller number of delay elements |
US5880973A (en) * | 1996-11-20 | 1999-03-09 | Graychip Inc. | Signal processing system and method for enhanced cascaded integrator-comb interpolation filter stabilization |
US6260053B1 (en) * | 1998-12-09 | 2001-07-10 | Cirrus Logic, Inc. | Efficient and scalable FIR filter architecture for decimation |
US6279019B1 (en) * | 1997-12-31 | 2001-08-21 | Samsung Electronics Co., Ltd. | Decimation filtering apparatus and method |
-
1999
- 1999-08-23 US US09/378,932 patent/US6470365B1/en not_active Expired - Lifetime
Patent Citations (9)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5689449A (en) * | 1993-04-05 | 1997-11-18 | Saramaeki; Tapio | Decimation filter |
US5717617A (en) * | 1993-04-16 | 1998-02-10 | Harris Corporation | Rate change filter and method |
US5410498A (en) * | 1994-04-05 | 1995-04-25 | General Electric Company | Decimation circuit and method for filtering quantized signals while providing a substantially uniform magnitude and a substantially linear phase response |
US5621345A (en) * | 1995-04-07 | 1997-04-15 | Analog Devices, Inc. | In-phase and quadrature sampling circuit |
US5777908A (en) * | 1995-09-08 | 1998-07-07 | Matsushita Electric Industrial Co., Ltd. | Comb filter with a smaller number of delay elements |
US5751615A (en) * | 1995-11-14 | 1998-05-12 | Advanced Micro Devices, Inc. | Implementation of a digital decimation filter and method |
US5880973A (en) * | 1996-11-20 | 1999-03-09 | Graychip Inc. | Signal processing system and method for enhanced cascaded integrator-comb interpolation filter stabilization |
US6279019B1 (en) * | 1997-12-31 | 2001-08-21 | Samsung Electronics Co., Ltd. | Decimation filtering apparatus and method |
US6260053B1 (en) * | 1998-12-09 | 2001-07-10 | Cirrus Logic, Inc. | Efficient and scalable FIR filter architecture for decimation |
Cited By (41)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7170959B1 (en) * | 1999-09-21 | 2007-01-30 | Rockwell Collins, Inc. | Tailored response cascaded integrator comb digital filter and methodology for parallel integrator processing |
US6871207B1 (en) * | 1999-12-20 | 2005-03-22 | Cirrus Logic, Inc. | Techniques for spreading zeros in a digital filter with minimal use of registers |
US20030182089A1 (en) * | 2000-04-25 | 2003-09-25 | Philippe Rubbers | Low noise to signal evaluation |
US7035776B2 (en) * | 2000-04-25 | 2006-04-25 | Eskom | Low noise to signal evaluation |
US6643675B2 (en) * | 2000-11-03 | 2003-11-04 | Nokia Corporation | Filtering method and filter |
US7124159B2 (en) | 2001-12-11 | 2006-10-17 | Lecroy Corporation | Parallel decimation circuits |
US20030110194A1 (en) * | 2001-12-11 | 2003-06-12 | Gorbics Mark Steven | Parallel decimation circuits |
US6859813B2 (en) * | 2001-12-11 | 2005-02-22 | Lecroy Corporation | Parallel decimation circuits |
US20050144207A1 (en) * | 2001-12-11 | 2005-06-30 | Gorbics Mark S. | Parallel decimation circuits |
US20040021595A1 (en) * | 2001-12-18 | 2004-02-05 | Erdogan Alper Tunga | Method and system for implementing a sigma delta analog-to-digital converter |
US6788236B2 (en) * | 2001-12-18 | 2004-09-07 | Globespanvirata, Inc. | Method and system for implementing a sigma delta analog-to-digital converter |
US20030220089A1 (en) * | 2002-05-23 | 2003-11-27 | Chang Tsung Yuan | Method and circuit to reduce intermodulation distortion |
US6975846B2 (en) * | 2002-05-23 | 2005-12-13 | Intel Corporation | Method and circuit to reduce intermodulation distortion |
US7117235B2 (en) * | 2002-11-06 | 2006-10-03 | Comtech Ef Data | Digital decimation filter having finite impulse response (FIR) decimation stages |
US20060031275A1 (en) * | 2002-11-06 | 2006-02-09 | Comtech Efdata, Inc. | Digital IF processing block having finite impulse response (FIR) decimation stages |
US20040088343A1 (en) * | 2002-11-06 | 2004-05-06 | Cannon Richard Hollingsworth | Digital decimation filter having finite impulse response (FIR) decimation stages |
US7213042B2 (en) * | 2002-11-06 | 2007-05-01 | Comtech Ef Data, Inc. | Digital IF processing block having finite impulse response (FIR) decimation stages |
US20040205827A1 (en) * | 2003-04-14 | 2004-10-14 | Krone Andrew W. | Multi-stage channel select filter and associated method |
US20090135035A1 (en) * | 2004-10-26 | 2009-05-28 | Koninklijke Philips Electronics N.V. | Adapting filter to detected interference level |
US7791515B2 (en) * | 2004-10-26 | 2010-09-07 | Nxp B.V. | Adapting filter to detected interference level |
US20070052557A1 (en) * | 2005-09-02 | 2007-03-08 | Thomas Magdeburger | Shared memory and shared multiplier programmable digital-filter implementation |
US20070080160A1 (en) * | 2005-10-11 | 2007-04-12 | Lutzke David E | Tote clip and assembly |
US20070216550A1 (en) * | 2006-03-20 | 2007-09-20 | Yamaha Corporation | Signal processing method and device |
US7492289B2 (en) * | 2006-03-20 | 2009-02-17 | Yamaha Corporation | Signal processing method and device |
US20080123772A1 (en) * | 2006-09-05 | 2008-05-29 | Hung-Kun Chen | Sound signal processing system and related apparatus and method |
US7860913B2 (en) * | 2006-09-05 | 2010-12-28 | Mstar Semiconductor, Inc. | Sound signal processing system and related apparatus and method |
US8250905B2 (en) * | 2008-02-28 | 2012-08-28 | Continental Automotive Gmbh | Device for processing a knock sensor signal |
WO2009106557A1 (en) * | 2008-02-28 | 2009-09-03 | Continental Automotive Gmbh | Device for processing a knock sensor signal |
US20100326170A1 (en) * | 2008-02-28 | 2010-12-30 | Klaus-Dieter Schneider | Device for processing a knock sensor signal |
EP2293097A3 (en) * | 2009-09-01 | 2011-04-20 | Robert Bosch GmbH | Method and device for providing a reflection signal |
US8924450B2 (en) * | 2010-03-17 | 2014-12-30 | Novatek Microelectronics Corp. | Time-division decimation filter bank and time-division decimation filtering method |
US20110231466A1 (en) * | 2010-03-17 | 2011-09-22 | Novatek Microelectronics Corp. | Time-division decimation filter bank and time-division decimation filtering method |
US20150127696A1 (en) * | 2012-06-08 | 2015-05-07 | Nec Corporation | Multi-stage filter processing device and method |
US9673780B2 (en) * | 2012-06-08 | 2017-06-06 | Nec Corporation | Multi-stage filter processing device and method |
GB2524051A (en) * | 2014-03-12 | 2015-09-16 | Univ Ljubljana | Apparatus and method for filtering digital signals |
JPWO2016021382A1 (en) * | 2014-08-04 | 2017-05-25 | アズビル株式会社 | Digital filter |
US9837988B1 (en) | 2015-03-26 | 2017-12-05 | Altera Corporation | Dynamically adjustable decimation filter circuitry |
WO2016131319A1 (en) * | 2015-08-14 | 2016-08-25 | 中兴通讯股份有限公司 | Filter circuit and method |
CN106470022A (en) * | 2015-08-14 | 2017-03-01 | 中兴通讯股份有限公司 | A kind of filter circuit and method |
WO2017193877A1 (en) * | 2016-05-10 | 2017-11-16 | 深圳市中兴微电子技术有限公司 | Pulse density modulation switching circuit and method and storage medium |
CN107359868A (en) * | 2016-05-10 | 2017-11-17 | 深圳市中兴微电子技术有限公司 | Pulse density modulated change-over circuit and method |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US6470365B1 (en) | Method and architecture for complex datapath decimation and channel filtering | |
JP4213348B2 (en) | Digital reception with radio frequency sampling | |
US7466781B2 (en) | Programmable filter | |
Gao et al. | A fifth-order comb decimation filter for multi-standard transceiver applications | |
US5455782A (en) | Decimation filter and method | |
JPH08181573A (en) | Cascade connection integrator | |
JPWO2008108090A1 (en) | Discrete time direct sampling circuit and receiver | |
KR100616767B1 (en) | Receiver with improved digital intermediate to base band demodulator | |
US6647075B1 (en) | Digital tuner with optimized clock frequency and integrated parallel CIC filter and local oscillator | |
JPH09326672A (en) | Multistage comb-line filter | |
US6408318B1 (en) | Multiple stage decimation filter | |
JP3210219B2 (en) | Comb filter and transmitting / receiving device using the same | |
Shahana et al. | Polyphase implementation of non-recursive comb decimators for sigma-delta A/D converters | |
US6233594B1 (en) | Decimation filter for oversampling analog-to digital converter | |
KR20010075519A (en) | Reduced complexity and increased flexibility modified fast convolution algorithm | |
Jou et al. | Low-power multirate architecture for IF digital frequency down converter | |
KR100432987B1 (en) | Receiver circuit for a communications terminal and method for processing signals in a receiver circuit | |
RU2289202C2 (en) | Digital multi-channel reprogrammable reception path | |
Zhang et al. | Low power non-recursive decimation filters | |
Chan et al. | On the design and multiplier-less realization of digital IF for software radio receivers with prescribed output accuracy | |
de Aquino et al. | Design of CIC filters for software radio system | |
Poulose Jacob et al. | Decimation Filter Design Toolbox for Multi-Standard Wireless Transceivers using MATLAB. | |
Zhu et al. | ASIC implementation architecture for pulse shaping FIR filters in 3G mobile communications | |
JP2002271431A (en) | Low-pass filter | |
Ghazel et al. | Design of down-sampling processors for radio communications |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: MOTOROLA, INC., ILLINOISFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:RAHMAN, MAHIBUR;THOMAS, CHRISTOPHER T.;REEL/FRAME:010213/0305Effective date: 19990817 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
FPAY | Fee payment |
Year of fee payment: 8 |
|
AS | Assignment |
Owner name: MOTOROLA MOBILITY, INC, ILLINOISFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MOTOROLA, INC;REEL/FRAME:025673/0558Effective date: 20100731 |
|
AS | Assignment |
Owner name: MOTOROLA MOBILITY LLC, ILLINOISFree format text: CHANGE OF NAME;ASSIGNOR:MOTOROLA MOBILITY, INC.;REEL/FRAME:029216/0282Effective date: 20120622 |
|
FPAY | Fee payment |
Year of fee payment: 12 |
|
AS | Assignment |
Owner name: GOOGLE TECHNOLOGY HOLDINGS LLC, CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MOTOROLA MOBILITY LLC;REEL/FRAME:034490/0001Effective date: 20141028 |
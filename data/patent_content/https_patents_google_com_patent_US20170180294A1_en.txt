US20170180294A1 - Automatic suggestions for message exchange threads - Google Patents
Automatic suggestions for message exchange threads Download PDFInfo
- Publication number
- US20170180294A1 US20170180294A1 US15/386,162 US201615386162A US2017180294A1 US 20170180294 A1 US20170180294 A1 US 20170180294A1 US 201615386162 A US201615386162 A US 201615386162A US 2017180294 A1 US2017180294 A1 US 2017180294A1
- Authority
- US
- United States
- Prior art keywords
- user
- conversation
- suggestion
- entity
- message
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Granted
Links
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L51/00—User-to-user messaging in packet-switching networks, transmitted according to store-and-forward or real-time protocols, e.g. e-mail
- H04L51/21—Monitoring or handling of messages
- H04L51/216—Handling conversation history, e.g. grouping of messages in sessions or threads
-
- H04L51/16—
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L51/00—User-to-user messaging in packet-switching networks, transmitted according to store-and-forward or real-time protocols, e.g. e-mail
- H04L51/02—User-to-user messaging in packet-switching networks, transmitted according to store-and-forward or real-time protocols, e.g. e-mail using automatic reactions or user delegation, e.g. automatic replies or chatbot-generated messages
-
- H04L67/20—
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/50—Network services
- H04L67/53—Network services using third party service providers
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L51/00—User-to-user messaging in packet-switching networks, transmitted according to store-and-forward or real-time protocols, e.g. e-mail
- H04L51/04—Real-time or near real-time messaging, e.g. instant messaging [IM]
- H04L51/046—Interoperability with other network applications or services
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L51/00—User-to-user messaging in packet-switching networks, transmitted according to store-and-forward or real-time protocols, e.g. e-mail
- H04L51/06—Message adaptation to terminal or network requirements
- H04L51/063—Content adaptation, e.g. replacement of unsuitable content
Definitions
- the conversations may not be easily searchable, for example, a user may need to scroll up and down from a lot of search results to find a piece of information the user really wants.
- the present disclosure relates to systems and methods for identifying an entity from a message exchange thread (also referred to herein as a “conversation”), and generating a suggestion for presentation to participant(s) of the conversation via computing device(s) of the participant(s), where the suggestion is a suggestion for the participant(s) to take an action on the entity.
- a message exchange thread also referred to herein as a “conversation”
- the suggestion is a suggestion for the participant(s) to take an action on the entity.
- an entity is a thing or a concept that is singular, well-defined, and distinguishable.
- an entity may be a person, place, item, idea, or any combination thereof.
- the suggestion is directed toward the entity based on identifying the entity from one or more messages of the message exchange thread.
- one or more contextual indicators of the entity are also determined, the contextual indicators are utilized to determine whether the entity is actionable, and the suggestion is provided for presentation to participant(s) only when it is determined that the entity is actionable.
- the entity may be determined to be actionable by determining whether the entity is, in a context of the message exchange thread, where a user is going to take an action on the entity.
- contextual indicators may be utilized such as contextual indicators that are based on content external to the message exchange thread itself (e.g., prior electronic messages of participants in prior message exchange threads), contextual indicators that are based on natural language processing of message(s) (of the message exchange thread and/or prior message exchange thread(s)), contextual indicators that are based on conversation flow of the message exchange thread, contextual indicators that are based on sentiment determined based on message(s) (of the message exchange thread and/or prior message exchange thread(s)), etc. Additional and alternative contextual indicators are described in more detail herein. Providing suggestions only when it is determined (based on contextual indicators) that the entity is actionable may prevent participant(s) from being distracted by irrelevant suggestions and/or may conserve various computational resources by not transmitting and/or providing for presentation, irrelevant suggestions.
- suggestions may be provided only when they are determined to be contextually relevant, which, when compared to providing suggestions without regard to contextual relevance, may lead to a decrease in the providing of suggestions and a corresponding conservation of computational resources.
- some implementations of providing suggestions according to techniques described herein may be of particular benefit to users that have low dexterity, or users who otherwise have difficulties making user inputs to a device. For at least these users, the incorporation of the selectable suggestions into the message exchange thread may increase the reliability and speed of use of the device, e.g. by saving the user making errors due to low dexterity.
- the suggestion is a selectable suggestion.
- the suggestion in response to selection of the suggestion by a participant of the conversation, the suggestion (and/or related content) may be incorporated into a transcript of the conversation and/or a computer-based action directed toward the entity may be performed (e.g., within the message exchange thread and/or separate from the message exchange thread).
- the suggestion may initially be provided as a non-static graphical element for presentation to one or more of the participants and, only upon selection of the suggestion by one or more of the participants, is the suggestion (and/or related content) statically incorporated into a transcript of the conversation.
- the suggestion may form part of the transcript and continue to be viewed (e.g., by scrolling) in the conversation even after further messages have been submitted for inclusion in the transcript of the conversation.
- the suggestion may be indexed in association with the conversation enabling participants to search for the conversation in the future based on the suggestion.
- the suggestion may include an affirmative interface element and a negative interface element.
- the suggestion may be incorporated in the transcript and in response to selection(s) of the affirmative interface element the suggestion may be discarded without static incorporation of the suggestion into the transcript.
- providing contextually relevant suggestions during an ongoing message exchange thread may enable participants to add the suggestions (or related content) to the message exchange thread in a simple manner (e.g., via a single-tap and/or other single selection interface action).
- contextually relevant suggestions may provide participant(s) with content that is directed to a contextually relevant entity, without requiring the participant(s) to switch from an application rendering the message exchange thread to another application in order to acquire such content.
- providing a suggestion for presentation via a message exchange client and/or incorporating content based on the suggestion (e.g., in response to a user selection of the suggestion) into a transcript of a message exchange thread may obviate the need to switch from the message exchange client to acquire such content.
- switching to another application may require usage of processor, memory, and/or battery resources via launching and/or surfacing of the application.
- switching to another application to obtain content in lieu of obtaining the content in a message exchange thread may increase the amount of time a participant needs to spend obtaining the content—which may lead to a corresponding increase in consumption of computational resources in obtaining the content.
- participant(s) may be presented with contextually relevant suggestions, but still be allowed to control whether those suggestions form part of the conversation. This may mitigate clutter in user interfaces that render message exchange threads and/or may reduce usage of various computational resources (e.g., reduce storage space required to index or otherwise store a transcript of a message exchange thread since all suggestions are not automatically stored).
- a method implemented by one or more processors includes receiving an electronic message submitted by a first user for display in a transcript of a message exchange thread.
- the electronic message is submitted in response to user interface input provided by the first user via a client device of the first user.
- the message exchange thread is between at least the first user and a second user via a first message exchange client of the first user and a second message exchange client of the second user.
- the method further includes: identifying an entity from the electronic message, determining contextual indicators of the entity, and determining whether the entity is actionable based on the contextual indicators.
- the method further includes, responsive to determining that the entity is actionable: providing, for presentation via at least one of the first message exchange client and the second message exchange client, a suggestion that is directed to the entity.
- the method further includes: receiving an affirmative selection of the suggestion by the second user via the second message exchange client; and responsive to the affirmative selection, providing content based on the suggestion for presentation to the first user via the first message exchange client.
- the content based on the suggestion is the suggestion itself.
- the method further includes: receiving an affirmative selection of the suggestion; and responsive to the affirmative selection, incorporating content that is based on the suggestion in the transcript of the message exchange thread.
- the method further includes: monitoring for selection of either the affirmative interface element or the negative interface element; and incorporating content that is based on the suggestion in the transcript of the message exchange thread only in response to selection of the affirmative interface element.
- the method further includes: responsive to determining that the entity is actionable: transmitting the entity to a third-party server; and receiving the suggestion from the third-party server in response to transmitting the entity.
- determining the contextual indicators includes determining at least one contextual indicator based on a separate prior message exchange thread that involves at least one of the first user and the second user. In some of those implementations, the at least one contextual indicator is based on sentiment expressed by at least one of the first user and the second user in one or more prior messages of the prior message exchange thread. In some versions of those implementations, the sentiment is directed to the entity and determining the at least one contextual indicator includes determining the at least one contextual indicator based on the sentiment being directed to the entity.
- determining the contextual indicators includes determining at least one contextual indicator based on performing a sentiment analysis of a prior message of the first user or the second user.
- the prior message is in the message exchange thread or in a prior message exchange thread.
- performing the sentiment analysis is based at least in part on a non-textual graphical element included in the prior message.
- the prior message is in the prior message exchange thread and the at least one contextual indicator is selected based on the sentiment being directed toward the entity in the prior message.
- the suggestion is provided for presentation to the second user and the contextual indicators are based on a prior message of the first user.
- the prior message is submitted by the first user in a prior message exchange thread that does not involve the second user.
- the method further includes performing natural language analysis on the at least one electronic message based on a machine learning model, and identifying the entity that is actionable from the electronic message and determining the contextual indicators of the entity are based on the natural language analysis.
- the method further includes tracking conversation flows from each participant of the message exchange thread to create tracking information, and generating the contextual indicators based on the tracking information.
- the method further includes determining the suggestion using a trained machine learning model and the contextual indicators. In some of those implementations, the method further includes: receiving a user reaction to the suggestion provided for the entity; generating a training example with training example input based on the contextual indicators and with training example output based on the user reaction; and revising the trained machine learning model based on further training the trained machine learning model based on the training example.
- the method further includes indexing, in a computer readable medium, the message exchange thread based on the contextual indicators.
- implementations these and other methods may include corresponding systems, apparatus, and computer programs, configured to perform the actions of the methods, encoded on computer storage devices.
- implementations of the subject matter described in this disclosure may be embodied in methods that include receiving, using one or more processors, at least one conversation message from a conversation, identifying, using one or more processors, an entity that can be actionable from a conversation message, determining, using one or more processors, contextual indicators of the entity, determining, using one or more processors, whether the entity is actionable based on the contextual indicators, and responsive to the entity being actionable, providing a suggestion to a user to take an action on the entity.
- the features may include performing a natural language analysis on the at least one conversation message based on a machine learning model and wherein identifying the entity that can be actionable from the conversation message and determining the contextual indicators of the entity are based on the analysis.
- the features may include tracking conversation flows from each participant of the conversation and refining the contextual indicators based on the tracking information.
- the features may include determining the suggestion for the user to take an action on based on a machine learning model and the contextual indicators.
- the features may include receiving, from the user, an indication to mark the entity as actionable, sending the user indication as a training signal to a machine learning model, searching for information relevant to the entity and providing the information to the user.
- the features may include receiving data from a variety of sources including queries and document retrievals, extracting features from the data, generating a machine learning model based on the extracted features, receiving a user action, the user action including a reaction to the suggestion provided for the entity, and training the machine learning module based on the user action.
- the features may include feeding entity information to an application, the entity information including participants of the conversation, generating the suggestion by the application and providing the suggestion to the participants of the conversation.
- the features may include detecting a question for the user in the conversation, the question being related to the entity, determining a potential user reply to the question, and providing the potential user reply in a one-tap form to the user.
- the features may include organizing the at least one conversation based on the contextual indicators and indexing the at least one conversation.
- implementations these and other methods may include corresponding systems, apparatus, and computer programs, configured to perform the actions of the methods, encoded on computer storage devices.
- a suggestion may be generated based on a machine learning model that learns over time to understand the semantics of a conversation and derives meaning from the real time conversation, and is therefore efficient and accurate.
- the suggestion may also generated based on contextual analysis including sentiment analysis and conversation flows.
- An appropriate suggestion is generated under an appropriate contextual condition, and is therefore intelligent. For example, no celebration message will be sent to a sad user.
- the suggestion may offer rich context and next step(s) that can be directly used for a user to complete an action.
- important suggestions and updates may be provided by other services in one place for all participants of a conversation.
- the organization and summarization mechanism may allow users to easily look back at a meaningful trail of information shared in conversations.
- FIG. 1 is a block diagram illustrating an example system for identifying an entity from a conversation and generating a suggestion for a user to take an action on the entity.
- FIG. 2 is a block diagram illustrating an example suggestion application.
- FIG. 3 is a flowchart of an example method for identifying an entity from a conversation and generating a suggestion for a user to take an action on the entity.
- FIG. 4 is a flowchart of a specific example method for identifying an entity from a conversation and generating a suggestion for a user to take an action on the entity.
- FIG. 5 is a flowchart of an example method for manually determining an actionable entity from a conversation.
- FIG. 6 is a flowchart of an example method for generating and updating a machine learning model.
- FIG. 7 is a flowchart of an example method for feeding entity information from a first application to a second application to generate a suggestion.
- FIG. 8 is a flowchart of an example method for predicting a potential user reply in a conversation.
- FIG. 9 is a flowchart of an example method for selectively retrieving conversations and/or conversation messages in response to search requests.
- FIG. 10 includes graphic representations of example conversation interfaces showing a suggestion.
- FIG. 11A is a graphic representation of an example conversation interface showing a conversation generated by a first application.
- FIG. 11B is a graphic representation of an example conversation interface showing a suggestion generated by a second application.
- FIG. 12 is a graphic representation of an example conversation interface showing one-tap replies.
- FIG. 13 is a graphic representation of an example conversation interface showing a conversation report.
- FIG. 14 is a graphic representation of an example conversation interface showing a conversation summary.
- FIG. 15 includes graphic representations of example conversation interfaces showing serial presentation of suggestions.
- Systems, methods and interfaces for automatic suggestion generation are disclosed.
- the systems, methods and interfaces for automatic suggestion generation are based on conversation analysis.
- the message is analyzed to determine one or more entities that a user can take an action on.
- Other messages of the conversation or even other conversations involving the user and/or other participant(s) of the conversation are then analyzed to determine the contextual indicators.
- a suggestion is generated based on the contextual indicators. For example, if two users want to meet at a store, a map and a calendar could be suggested to direct the users to the store and set up a meeting time. Based on the contextual indicators, the map may only indicate directions to a particular store close to both users, and the calendar may highlight the available time of both users. In some instances, the suggestion offers next steps of the action.
- the suggestion generation process is automatic in many aspects. For example, implementations of the present disclosure determine whether to generate a suggestion, and: when and where in the conversation to insert the suggestion; and/or when to recommend the suggestion to one or more participants for potential insertion in the conversation. For instance, for a question “meet at coffee house?” from user A to user B, a map that includes the coffee house may be suggested to one or both of the two users if user B answers “great!” to the question, while the map suggestion will not be provided to either of the two users if user B answers “I'd like to go, but . . .
- different versions of the suggested map may be provided to each of the users, such as a first version provided to the first user with directions to the coffee house from the first user's current location and a second version provided to the second user with directions to the coffee house from the second user's current location.
- Implementations of the present disclosure also determine what suggestion is appropriate, and/or when it is appropriate to provide the suggestion, based on contextual indicators. For example, if a user just received bad news (e.g., as determined based on analysis of another conversation of the user), it may be determined that a celebration suggestion is inappropriate for providing to the user in a conversation.
- a user may be determined that a suggestion of such thing is not appropriate for providing to the user in the conversation.
- client devices a third-party server, an email server, and/or a server where a suggestion application is stored may provide some or all of the functionality described herein and may employ a cluster of servers in order to provide such functionality.
- client hardware may be a mobile phone or tablet device.
- FIG. 1 illustrates a block diagram of a system 100 for identifying an entity from a conversation and generating a suggestion for a user to take an action on the entity.
- the illustrated system 100 includes client devices 102 a , 102 n that are accessed by users 104 a , 104 n , a server 106 , an email server 108 , a third-party server 110 and a search server 112 .
- these entities are communicatively coupled via a network 114 .
- a letter after a reference number for example, “ 102 a ” is a reference to the element having that particular reference number.
- a reference number in the text without a following letter, for example, “102” is a general reference to different instances of the element bearing that reference number. Although only two client devices 102 a , 102 n are illustrated, persons of ordinary skill in the art will recognize that arbitrary number of client devices 102 n is available to arbitrary number of users 104 n.
- the network 114 can be a conventional type, wired or wireless, and may have numerous different configurations including a star configuration, token ring configuration or other configurations. Furthermore, the network 114 may include a local area network (LAN), a wide area network (WAN) (e.g., the Internet), and/or other interconnected data paths across which multiple devices may communicate. In some instances, the network 114 may be a peer-to-peer network. The network 114 may also be coupled to or includes portions of a telecommunications network for sending data in a variety of different communication protocols.
- LAN local area network
- WAN wide area network
- the network 114 may also be coupled to or includes portions of a telecommunications network for sending data in a variety of different communication protocols.
- the network 114 includes Bluetooth communication networks or a cellular communications network for sending and receiving data including via short messaging service (SMS), multimedia messaging service (MMS), hypertext transfer protocol (HTTP), direct data connection, Wireless Application Protocol (WAP), email, etc.
- SMS short messaging service
- MMS multimedia messaging service
- HTTP hypertext transfer protocol
- WAP Wireless Application Protocol
- FIG. 1 illustrates one network 114 coupled to the client devices 102 a , 102 n , the email server 108 , the third-party server 110 and the search server 112 , in practice one or more networks 114 can be connected to these entities.
- the client devices 102 a , 102 n in FIG. 1 are used by way of example. Although only two client devices 102 are illustrated, the disclosure applies to a system architecture having any number of client devices 102 .
- the users 104 a , 104 n interact with the client device 102 a , 102 n via signal line 116 a , 116 n respectively.
- the client devices 102 a , 102 n are communicatively coupled to the network 114 via signal line 120 a , 120 n respectively, and exchange information with the server 106 , the email sever 108 , the third-party server 110 and the search server 112 .
- the client device 102 a sends a conversation message (also referred to herein as an “electronic message”) to the server 106 .
- the server 106 processes the conversation message and generates a suggestion based on the conversation message.
- the server 106 receives one or more conversation messages and generates the suggestion based on the one or more conversation messages.
- the server 106 also uses other inputs (e.g., prior user activities, user profile information, etc.) to generate the suggestion.
- Authorization is obtained prior to the use of any profile information or personal information of the user.
- the client device 102 a receives the suggestion without unintended delays from the server 106 .
- the client device 102 receives a suggestion including an arrival time and a status of a flight right after sending a message “has John's flight landed?”
- a delay may be desirable, for example, when a suggestion best fits at a future time in the conversation or when the server 106 waits for more conversation messages for context and confirmation to send the suggestion.
- the server 106 may wait for a message from the client device 102 n (e.g., “I hate coffee”) before generating and/or providing the suggestion.
- the client device 102 can be any computing device that includes a memory and a processor.
- the client device 102 can be a laptop computer, a desktop computer, a tablet computer, a mobile telephone, a personal digital assistant, a mobile email device, a portable game player, a portable music player, a television with one or more processors embedded therein or coupled thereto or any other electronic device capable of accessing the network 114 , etc.
- the server 106 can be a hardware server that includes a processor, a memory and network communication capabilities.
- the server 106 is communicatively coupled to the network 114 via signal line 122 .
- the server 106 sends and receives data to and from one or more of the client devices 102 , the email server 108 , the third-party server 110 and the search server 112 via the network 114 .
- the server 106 optionally includes a social network application 124 .
- a social network can be a network where the users may be connected by common feature(s).
- the common feature(s) may include relationships/connections, e.g., friendship, family, work, an interest, etc.
- the common feature(s) may be provided by one or more social networking systems including explicitly defined relationships and relationships implied by social connections with other online users, where the relationships form a social graph.
- the social graph can reflect a mapping of these users and how they can be related.
- the social network application 124 in the server 106 manages the social network by handling registration of users, publication of content (e.g. posts, comments, photos, links, check-ins, etc.), hosting multi-user communication sessions, managing of groups, managing different sharing levels, updating the social graph, etc.
- publication of content e.g. posts, comments, photos, links, check-ins, etc.
- the social network application 124 registers a user by receiving information such as a username and password and generates a user profile that is associated with the user and stored as part of the social graph.
- the user profile includes additional information about the user including interests (e.g. soccer, reading, food, subscriptions, etc.), activities (e.g. search history, indications of approval, posts, comments, multi-user communication sessions, etc.), demographics (e.g. age, ethnicity, location, etc.) and profile rating and reputation (e.g., intelligence rating, humor rating, etc.).
- the system 100 may include multiple servers 106 that include traditional social network servers, email servers, micro-blog servers, blog servers, forum servers, message servers, etc.
- server 106 and the social network application 124 may be representative of one social network.
- a first social network may be more directed to business networking
- a second may be more directed to or centered on academics
- a third may be more directed to local business.
- the email server 108 can be a hardware server that includes a processor, a memory and network communication capabilities.
- the email server 108 is communicatively coupled to the network 114 via signal line 126 .
- the email server 108 exchanges user data with the server 106 so that the server 106 can generate a suggestion for an entity in a conversation message based on the user data. For example, when a user talks about buying a toy in a conversation, the server 106 can communicate with the email server 108 to get the user's purchase history (e.g., from purchase receipts for toys in emails), and determines a suggestion based at least in part on the purchase history. Authorization is obtained prior to the use of any purchase history or other personal information of the user.
- the third-party server 110 can be a computing device that includes a processor, a memory and network communication capabilities.
- the third-party server 110 is coupled to the network 114 via signal line 128 .
- the third-party server 110 sends and receives data to and from the client device 102 , the server 106 and the search server 112 of the system 100 via the network 114 .
- the third-party server 110 may store different applications.
- the server 106 can receive conversation messages from a conversation application stored on the third-party server 110 .
- the server 106 feeds entity information to an application stored on the third-party server 110 (e.g., via an application programming interface (API) of the third-party server 110 ) so that the application can generate a suggestion based on the entity information.
- API application programming interface
- third-party servers may be provided and the server 106 may select an appropriate third-party server (for providing entity information and receiving a responsive suggestion) based on various factors. For example, a semantic type of the entity and/or action(s) mentioned in association with the entity in a conversation may be utilized to select a given third-party server in lieu of other available third-party servers.
- third-party server 110 may provide suggestions for restaurant reservations and may be selected based on an entity being of a “restaurant” semantic type and/or based on “reserve”, “book”, and/or other “reservation” terms being mentioned in association with the entity.
- contextual indicators described herein may be utilized to determine whether an entity is actionable, and the server 106 may optionally provide entity information to a third-party server only when it is determined the entity is actionable. This may reduce network traffic by preventing some transmissions of entity information for an entity to a third-party server when the entity is not deemed actionable.
- the search server 112 can be a computing device that includes a processor, a memory and network communication capabilities.
- the search server 112 is coupled to the network 114 via signal line 130 .
- the search server 112 includes a search engine that provides a search result to a user responsive to a search request from the user.
- the server 106 communicates with the search server 112 to search for information related to an entity and generates a suggestion to take an action on the entity based on the information returned by the search server 112 in response to the searching.
- the server 106 comprises a suggestion application 132 b .
- the suggestion application 132 b may additionally or alternatively be stored on the client device 102 .
- the suggestion application 132 b may be a thin-client application that includes part of the suggestion application 132 b on the client device 102 and part of the suggestion application 132 b on the server 106 to identify an entity from a conversation and generate a suggestion for a user to take an action on the entity.
- the suggestion application 132 b receives at least one conversation message from a conversation and identifies an entity from a conversation message.
- An entity can be a portion of a conversation message, for example, a person or an object in the conversation message.
- the suggestion application 132 b parses a conversation message based on analyzing the grammatical constituents of the conversation message and identifies one or more entities from the parsed conversation message. For example, the suggestion application 132 b identifies that the message “great weather!” includes “great,” “weather” and ‘!” based on parsing the message, and determines a first entity “great” and a second entity “weather” from the message.
- the suggestion application 132 b further extends the analysis to the entire conversation or even other conversations (e.g., previous conversations, conversations from a third-party application) to determine contextual indicators. For example, from the message “would you like to meet at ABC coffee store?” and user profile information, the suggestion application 132 b determines that an entity “ABC coffee store” is near the user's office. Authorization is obtained prior to the use of any profile information or personal information of the user.
- Other contextual indicators include sentiment indicators, conversation flows, tense of the message, recency of the message, the day and/or time at which the message was sent, the day and/or time associated with the entity, conversation metadata, etc.
- the suggestion application 132 b further determines whether an entity is actionable based on determining whether the entity is in a context of conversation where a user is going to take an action on the entity. For example, the suggestion application 132 b determines the A entity in the message “I like A” is non-actionable, but determines that the A entity in the message “I am going to buy A” is actionable. The suggestion application 132 b determines whether an entity is actionable based on contextual indicators including conversation flows, tense, sentiment indicators (e.g., based on an emotion symbol), verbs used in the message, whether a question is asked in the message, conversation metadata, etc. If user A asks user B “meet at XYZ?,” the suggestion application 132 b will only determine that the location “XYZ” is actionable after receiving user B's positive answer in the conversation flow.
- the suggestion application 132 b determines whether an entity is actionable based on determining whether the entity is in a context of conversation where a user is going to take an
- the suggestion application 132 b generates a suggestion for an actionable entity based on contextual indicators. For example, the suggestion application 132 b uses the messages “I hate A restaurant,” “I like B restaurant,” “C restaurant is ok” from a first user as contextual indicators to determine a suggestion B when a second user invites the first user to go to dinner. For example, the suggestion may be directed to B restaurant and/or C restaurant, but not A restaurant, based on the corresponding sentiments expressed with respect to each of those entities in the messages. As described herein, the messages may be from the conversation in which the second user invites the first user to go to dinner and/or may be from other conversations, that may or may not include the second user.
- the suggestion B determined based on the first user's messages may be provided for presentation to the first user and/or the second user (if appropriate authorization is obtained).
- the suggestion B may be generated based on the first user's messages, and provided for presentation to the second user.
- the suggestion based on the first user's messages may only be provided to the second user if it is determined the first user's messages are from conversation(s) that also included the second user.
- the suggestion based on the first user's messages may be provided to the second user even if one or more of the first user's messages are from conversation(s) that do not include the second user.
- the suggestion application 132 b may feed entity information to a separate application (e.g., hosted by third-party server 110 ) and, in response, get a suggestion from the separate application.
- Feeding entity information to a separate application may include transmitting the entity information to the separate application utilizing one or more networks, and optionally utilizing an API of the separate application.
- Receiving a suggestion in response to feeding the entity information may include receiving the suggestion over one or more networks in response to transmitting the entity information, and may optionally utilize an API (e.g., the same API utilized in transmitting the entity information).
- a weather service may send an hourly weather report to the users.
- the hourly weather report may be incorporated into a transcript of the conversation for viewing by all of the users and/or may be provided to the users via separate applications than the message exchange clients/applications utilized to engage in the conversation.
- the suggestion application 132 b connects users with the separate application without the users manually installing the separate application on a client device and provides important suggestions in a place for presentation to all participants of a conversation (e.g., in a transcript of the conversation).
- the suggestion application 132 b additionally or alternatively predicts a possible reply for a user to answer a question in a conversation, and so saves the user time. In other instances, the suggestion application 132 b additionally or alternatively organizes information of a conversation so that users can easily reference back to any information they want in the conversation. Various implementations of the suggestion application 132 b are discussed in further detail herein, e.g. with reference to FIG. 2 .
- FIG. 2 is a block diagram of a computing device 200 that includes a processor 202 , memory 204 , a communication unit 208 , a storage 210 and a suggestion application 132 b according to some implementations.
- the computing device 200 is a server 106 .
- the computing device is a client device 102 .
- the computing device is a distributed computing device such as one that operates on both server 106 and client device 102 .
- the components of the computing device 200 are illustrated in FIG. 2 as communicatively coupled by a bus 206 .
- the processor 202 includes some or all of an arithmetic logic unit, a microprocessor, a general purpose controller or some other processor array to perform computations and provide electronic display signals to a display device.
- the processor 202 is coupled to the bus 206 for communication with the other components.
- Processor 202 processes data signals and may include various computing architectures including a complex instruction set computer (CISC) architecture, a reduced instruction set computer (RISC) architecture, or an architecture implementing a combination of instruction sets.
- FIG. 2 includes a single processor, multiple processors may be included.
- the processing capability may be limited to supporting the display of images and the capture and transmission of images. The processing capability might be enough to perform more complex tasks, including various types of feature extraction and sampling. It will be obvious to one skilled in the art that other processors, operating systems, sensors, displays and physical configurations are possible.
- the memory 204 stores instructions and/or data that may be executed by processor 202 .
- the memory 204 is coupled to the bus 206 for communication with the other components.
- the instructions and/or data may include code for performing any and/or all of the techniques described herein.
- the memory 204 may be a dynamic random access memory (DRAM) device, a static random access memory (SRAM) device, flash memory or some other memory device known in the art.
- DRAM dynamic random access memory
- SRAM static random access memory
- flash memory or some other memory device known in the art.
- the memory 204 also includes a non-volatile memory or similar permanent storage and media, for example, a hard disk drive, a floppy disk drive, a CD-ROM device, a DVD-ROM device, a DVD-RAM device, a DVD-RW device, a flash memory device, or some other mass storage known in the art for storing information on a more permanent basis.
- a non-volatile memory or similar permanent storage and media for example, a hard disk drive, a floppy disk drive, a CD-ROM device, a DVD-ROM device, a DVD-RAM device, a DVD-RW device, a flash memory device, or some other mass storage known in the art for storing information on a more permanent basis.
- the communication unit 208 transmits and receives data to and from at least one of: the client devices 102 , the server 106 , the email server 108 , the third-party server 110 , and the search server 112 .
- the communication unit 208 is coupled to the bus 206 .
- the communication unit 208 receives data including a conversation message from the client device 102 and transmits the data to the server 106 .
- the server 106 generates a suggestion based on the conversation message using a suggestion application 132 b stored on the server 106 and transmits the suggestion to the client device 102 .
- the communication unit 208 includes a port for direct physical connection to the client device 206 or to another communication channel.
- the communication unit 208 includes an RJ45 port or similar port for wired communication with the client device 206 .
- the communication unit 208 includes a wireless transceiver (not shown) for exchanging data with the client device 206 or any other communication channel using one or more wireless communication methods, such as IEEE 1502.11, IEEE 1502.16, Bluetooth® or another suitable wireless communication method.
- the communication unit 208 includes a cellular communications transceiver for sending and receiving data over a cellular communications network such as via short messaging service (SMS), multimedia messaging service (MMS), hypertext transfer protocol (HTTP), direct data connection, wireless application protocol (WAP), e-mail or another suitable type of electronic communication.
- SMS short messaging service
- MMS multimedia messaging service
- HTTP hypertext transfer protocol
- WAP wireless application protocol
- the communication unit 208 includes a wired port and a wireless transceiver.
- the communication unit 208 also provides other conventional connections to the network 114 for distribution of files and/or media objects using standard network protocols such as TCP/IP, HTTP, HTTPS and SMTP as will be understood to those skilled in the art.
- the storage 210 is a non-transitory memory that stores data for providing the functionality described herein.
- the storage 210 is coupled to the bus 206 .
- the storage 210 may be a dynamic random access memory (DRAM) device, a static random access memory (SRAM) device, flash memory or some other memory devices.
- DRAM dynamic random access memory
- SRAM static random access memory
- the storage 210 also includes a non-volatile memory or similar permanent storage and media including a hard disk drive, a floppy disk drive, a CD-ROM device, a DVD-ROM device, a DVD-RAM device, a DVD-RW device, a flash memory device, or some other mass storage for storing information on a more permanent basis.
- the storage 210 stores social network profiles associated with users in a social network, conversation messages in a conversation, actionable entities identified from the conversation, contextual indicators determined from the conversation and/or other conversations, suggestions generated based on the actionable entities of the conversation, etc.
- the suggestion application 132 b comprises a controller 220 , a conversation management module 222 , a model builder 224 , a conversation analyzer 226 , a determining engine 228 , a suggestion generator 230 , and a user interface engine 236 .
- the controller 220 can be code and routines for receiving data and transmitting the data to an appropriate component.
- the controller 220 can be a set of instructions executable by the processor 202 to provide the functionality described below for receiving and transmitting the data.
- the controller 220 can be stored in the memory 204 of the computing device 200 and can be accessible and executable by the processor 202 .
- the controller 220 can be adapted for cooperation and communication with the processor 202 and other components of the computing device 200 .
- the controller 220 receives data via the communication unit 208 and transmits the data to the appropriate module of the suggestion application 132 .
- the controller 220 receives user information from the client device 102 via the communication unit 208 and transmits the user information to the model builder 224 to build and update a machine learning model.
- the controller 220 receives contextual indicators of an entity in a conversation from the conversation analyzer 226 and a determination that the entity is actionable from the determining engine 228 , and transmits the contextual indicators of the actionable entity to the suggestion generator 230 to generate a suggestion for a user to take an action on the entity.
- the conversation management module 222 can be code and routines for generating and managing a conversation session.
- the conversation management module 222 can be a set of instructions executable by the processor 202 to provide the functionality described below for generating and managing a conversation session.
- the conversation management module 222 can be stored in the memory 204 of the computing device 200 and can be accessible and executable by the processor 202 .
- the conversation management module 222 can be adapted for cooperation and communication with the processor 202 and other components of the computing device 200 .
- the conversation management module 222 generates a conversation session and instructs the user interface engine 236 to generate graphical data for displaying the conversation session in a conversation interface.
- a conversation session or a conversation is a multi-user communication session that comprises at least one of a video conference, an audio conference, and instant messaging.
- a conversation includes at least one conversation message.
- a conversation message may include a video message, an audio message, a text message, a photo, a hyperlink, etc.
- the conversation management module 222 generates a conversation by interacting with audio and video capture devices of the client device 102 to obtain a real-time audio-video synchronous communication data stream of the user 104 .
- the conversation management module 222 interfaces with a software driver stored on the client device 102 that controls the functionality of a microphone and a video camera (e.g., a webcam or forward facing camera) included in the client device 102 , and generates a conversation based on the audio-video data captured by the client device 102 .
- the audio-video data can be encoded using various audio and video codecs.
- the conversation management module 222 generates a conversation that allows users participating in the conversation to share documents, a scratchpad, and/or computing device screens with one another.
- the conversation management module 222 receives a suggestion automatically generated by the suggestion generator 230 based on a conversation message of a conversation, and communicates with the user interface engine 236 to generate graphical data for displaying the suggestion along with the conversation message in the conversation.
- the conversation management module 222 provides one or more applications or services in a conversation and instructs the user interface engine 236 to generate one or more tools in a conversation interface for a user to interact with the one or more applications or services.
- the conversation management module 222 instructs the user interface engine 236 to generate a search box in a conversation interface for a user to search conversations based on topics, time, etc.
- the conversation management module 222 also communicates with other servers (e.g., a third-party server 110 ) via the communication unit 208 to receive conversation messages from other conversations.
- the other conversations may be generated by other applications on the other servers.
- the conversation management module 222 forwards the conversation messages to other components (e.g., 224 - 236 ) of the suggestion application 132 b to generate a suggestion.
- the conversation management module 222 also stores the conversation messages in storage 210 .
- the model builder 224 can be code and routines for generating and/or updating a machine learning model.
- the model builder 224 can be a set of instructions executable by the processor 202 to provide the functionality described below for generating and/or updating a machine learning model.
- the model builder 224 can be stored in the memory 204 of the computing device 200 and can be accessible and executable by the processor 202 .
- the model builder 224 can be adapted for cooperation and communication with the processor 202 and other components of the computing device 200 .
- the model builder 224 receives information from the conversation generated and received by the conversation management module 222 , extracts features from the information and generates a model based on the extracted features.
- the model includes items relevant to users such as a location, a list of interests, etc.
- An interest can be explicit from a user's indication of what he or she likes.
- An interest can also be information inferred from a user's activities. For example, if a user talks about hiking equipment in several conversations, the model builder 224 infers that the user is interested in outdoor activities.
- the model builder 224 also receives user information from a variety of sources including, for example, queries, document retrieval, user interactions, emails, etc., and builds a model based on the information.
- the model builder 224 includes a user's search history into the model.
- the model builder 224 upon receiving a collection of documents returned for a query and ranks associated with each document, builds the model to include the ranks to show the relevancy between a document and the query.
- the model builder 224 generates the model to include user statistics and user behavior pattern data, for example, how often a user joins a conversation, with whom a user talks most in conversations, what time a user likes to have a conversation with others, whether a user likes to share photos in a conversation, what kind of photos the user likes to share, etc.
- the model builder 224 generates the model to include a sequence of weights and multipliers that are used to make predictions about a user action.
- the model builder 224 determines weights and multipliers based on social relationships between users. For example, the model builder 224 receives conversation messages from the conversation management module 222 .
- the conversation messages include a question raised in a conversation and replies of a first user and a second user to the question.
- the model builder 224 communicates with the social network application 124 to determine that the first user is a close friend of a third user and the second user does not know the third user personally based on the social graph managed by the social network application 124 .
- the model builder 224 assigns a higher weight to the first user than to the second user. Later when the model is used to predict the user's behavior based on the actions of similar users, the reply of the first user will weigh more in predicting a potential answer of the third user to the question. In other instances, the model builder 224 determines weights and multipliers based on recency of conversation messages.
- the model builder 224 determines a higher weight for game B than game A when predicting which game forum the user would subscribe to. In some other instances, the model builder 224 determines weights and multipliers based on other factors including how often a user joins a conversation, what time a user likes to have a conversation with others, etc.
- the model builder 224 generates a model and maps a user to one or more categories based on the model.
- the category can be an entity identified by the conversation analyzer 226 as described below. For example, the model builder 224 determines that a user likes playing basketball, and categories the user into a category “sportsman” and a category “basketball.” Or the model builder 224 categories a user that talks with other users every day into a category “talker.”
- the model builder 224 generates a machine learning model.
- the model builder 224 collects data from a variety of sources including at least one conversation and uses a machine learning algorithm to learn certain properties from the collected data.
- the machine learning algorithms may include, but are not limited to, regression techniques, instance-based algorithms, decision trees, Bayesian algorithms, kernel methods, clustering methods, association rule learning, artificial neural networks, etc.
- the model builder 224 trains the model over time to understand the semantics of a conversation and derives meaning from the real time conversation. As the model evolves, the efficiency and accuracy of using the model in suggestion making, behavior prediction, etc., are improved.
- the model builder 224 uses user actions as training signals to train the model.
- the model builder 224 tracks actions of a user in previous conversations and trains the model to learn from those user actions. For example, the model builder 224 learns that a user never buys anything that was offered in a conversation interface with a purchase tool or learns that two users always choose a particular coffee house as their meeting spot from the previous conversations between them.
- the model builder 224 tracks the non-chat actions of a user and trains the model to learn from the non-chat actions. For example, the model builder 224 learns a user's favorite chocolate brand from the user's purchase history. Based on what was learned by the model, a suggestion can be made for a user.
- a suggestion of flight itineraries can be made to the user since the model builder 224 learns that the user likes this airline and often takes the flights around that time from previous actions of users.
- the model builder 224 receives a user reaction to a suggestion provided to the user in a conversation and in turn uses the reaction (and other data from the conversation) as a training signal to train the model (e.g., uses the reaction to generate a training example that is used to refine the model through further training).
- the model builder 224 may take this negative reaction as a signal to train the model. As a result, a different airline may be suggested to the user in the future.
- the model builder 224 updates the model when receiving a request.
- the suggestion generator 230 requests the model builder 224 to update the model when generating a suggestion using the model.
- the model builder 224 periodically (once an hour, once a day, once a week, etc.) and/or non-periodically receives data and/or non-periodic data from a variety of sources for updating the model and updates the model accordingly.
- the model builder 224 updates the model once a user action in a conversation, a non-chat action, or a user reaction is received.
- the conversation analyzer 226 can be code and routines for analyzing a conversation to identify an entity that a user may take an action on from a conversation message and determine contextual indicators of the entity in the conversation.
- the conversation analyzer 226 can be a set of instructions executable by the processor 202 to provide the functionality described below for analyzing a conversation to identify an entity that a user may take an action on from a conversation message and determine contextual indicators of the entity in the conversation.
- the conversation analyzer 226 can be stored in the memory 204 of the computing device 200 and can be accessible and executable by the processor 202 .
- the conversation analyzer 226 can be adapted for cooperation and communication with the processor 202 and other components of the computing device 200 .
- the conversation analyzer 226 processes one or more conversation messages of a conversation received from the conversation management module 222 based on a machine learning model generated by the model builder 224 .
- the conversation analyzer 226 analyzes each conversation message using natural language processing (NLP) techniques.
- NLP natural language processing
- the conversation analyzer 226 parses the conversation message and implements NLP entity extraction on the parsed conversation message to obtain an entity.
- the entity can be a portion of a conversation message, for example, a person or an object in the conversation and the entity can be at various levels of granularity (e.g., a restaurant, an Italian restaurant, a particular Italian restaurant).
- the NLP entity extraction is based on a semantic annotation for text (SAFT) library that works in the machine learning model.
- SAFT semantic annotation for text
- the model builder 224 receives a flight number, builds an annotator into the model to recognize the flight number in a conversation based on the general format of flight numbers, and trains the annotator.
- the conversation analyzer 226 communicates with the model builder 224 to use the annotator to determine that one entity in the conversation message is the flight number.
- the conversation analyzer 226 parses and extracts entities “beautiful,” “weather” and “Store A” from a conversation message. The conversation analyzer 226 then determines that “beautiful” is an adjective, “weather” is a noun, and “Store A” is a location and a noun based on the language semantic analysis using the SAFT library.
- An entity identified by the conversation analyzer 226 can be actionable or non-actionable depending on whether a user can take an action on it. The determination whether an entity is actionable or non-actionable is described in more detail with reference to the determining engine 228 .
- the conversation analyzer 226 determines contextual indicators of the entity in the conversation. For example, for a location entity, the conversation analyzer 226 determines when the location was mentioned in the conversation, who mentioned the location in the conversation, which content of the conversation included the location, which kind of content followed the location in the conversation, and/or other contextual indicators. In some instances, the conversation analyzer 226 analyzes multiple conversations (e.g., previous conversations, conversations generated by other applications) to determine contextual indicators of an entity in a conversation.
- the conversation analyzer 226 performs NLP to determine the contextual indicators of an entity in a conversation.
- the NLP is based on the machine learning model generated by the model builder 224 and may be more sophisticated than conventional NLP in many aspects.
- the conversation analyzer 226 performs the NLP based on pattern matching in combination with user information of one or more users in a conversation. For example, the conversation analyzer 226 can detect the phrase “Basil Thai restaurant” from a conversation message based on pattern matching, and match that phrase to one or more particular restaurants named “Basil Thai” based on user information of one or more user(s) (e.g.
- the conversation analyzer 226 can detect a particular “Coffee house” near user A from a conversation message based on pattern matching in combination with user information.
- using user information to select one or more particular entities may lead to improved suggestions. For example, based on “Basil Thai restaurant” without user information, 3 restaurants named “Basil Thai” may be identified and, if a driving direction is suggested to participant(s) in a conversation, the suggestion may include three maps to all three “Basil Thai restaurants”. The participant(s) then have to choose which map is relevant and accurate.
- only one relevant and accurate driving direction to a “Basil Thai restaurant” may be provided (e.g., the one that is most convenient to all participants of the conversation and/or the one most frequently visited by participant(s)).
- the conversation analyzer 226 additionally or alternatively determines contextual indicators by performing sentiment analysis on a conversation message and associating the conversation message with a weight. For example, the conversation analyzer 226 receives messages “I hate coffee,” “tea is ok” and “coke is my favorite” from user A, and associates a most favorable to least favorable sentiment weight to the messages including coke, tea, and coffee, respectively.
- the weights indicate user A's beverage taste. In other words, the weights may each indicate a sentiment of user A with respect to each “beverage” entity corresponding to the entities of “coffee”, “tea”, and “coke”.
- the messages may be from a current conversation in which a suggestion is to be provided and/or from a prior conversation that includes the user (with or without other participants of the current conversation).
- the conversation analyzer 226 assigns a positive number to indicate a positive sentiment, a negative number to indicate a negative sentiment, and a zero to indicate indifference.
- the conversation analyzer 226 may use the magnitude of the number as the weight or intensity of a sentiment and may assign the sentiment to a corresponding entity. For the above example, the conversation analyzer 226 weights a positive two, a positive one, and a negative two, to the messages including coke, tea and coffee, respectively.
- the conversation analyzer 226 determines a sentiment from an emotion symbol and/or other non-textual element included in a conversation message and assigns a weight to the sentiment. For example, the conversation analyzer 226 may determine that a user is happy and excited from the message “mom is coming ,” (e.g., based on presence of the emotion symbol “ ” and assignment of that symbol to a happy sentiment) and may determine that the user is unhappy from the message “I wish mom is still here ” (e.g., based on presence of the emotion symbol “ ” and assignment of that symbol to a sad sentiment) The conversation analyzer 226 may associate each message with a positive number (or other measure) or a negative number (or other measure) to indicate how happy the user is.
- the conversation analyzer 226 may determine an overall sentiment based on the weights and the number of the conversation messages. Such information become contextual indicators and contribute to generating a suggestion. For example, if a user says that “I wish mom is still here ,” “Amy is not here too” and “I should go see a movie,” the conversation analyzer 226 determines that overall the user is not happy. As a result, a comedy movie instead of a tragedy movie may be suggested to cheer the user up. The sentiment analysis on a conversation therefore makes a suggestion more intelligent.
- the conversation analyzer 226 determines contextual indicators by taking more than one piece of conversation message for analysis.
- Standard and conventional conversational semantics may be generated, for example, “Barack Obama” in response to a query of “Who is the president of the USA?” in a conversation and to generate “Michelle Obama” in response to a query of “Who is the wife of Barack Obama?” in the conversation. Later when “him” and “her” are mentioned in the conversation, the conversation analyzer 226 references him with “Barack Obama” and references her with “Michelle Obama” using coreference resolution.
- the conversational NLP may be similar to conventional conversational semantics in some implementations. Both conventional conversational semantics and the conversational NLP may be based on semantic analysis on individual messages.
- the conversation analyzer 226 may further analyze contiguous and/or non-contiguous messages in a conversation rather than analyzing only a single message.
- the conversation analyzer 226 analyzes multiple conversation messages to track conversation flows from each participant of a conversation.
- the conversation analyzer 226 tracks users for possible participants of a conversation and determines the conversation flow, i.e., which participant sends which message in what order.
- the conversation analyzer 226 refines the contextual indicators based on the tracking information. For example, the conversation analyzer 226 may analyze two contiguous messages “would you like to meet?” and “how about ABC?” of a conversation.
- the conversation analyzer 226 tracks participants of the conversations, and determines that a first participant sent the first message and a second participant sent the second message.
- the conversation analyzer 226 determines that the location entity “ABC” is proposed by the second participant to respond to a question from the first participant.
- the conversation analyzer 226 refines the contextual indicators based on information tracked from multiple conversations.
- the conversation analyzer 226 may refine the contextual indicators based on common terms that have occurred in multiple conversations. For example, the conversation analyzer 226 identifies an entity “hiking” from a message “do you want to go hiking?” sent from user A when talking with user B today.
- the conversation analyzer 226 tracks conversation flows and determines that a message “I prefer fishing to hiking” from user B in a previous conversation should be used as contextual indicators for the entity “hiking.”
- the conversation analyzer 226 may refine the contextual indicators based on concept clustering of terms occurred in multiple conversations.
- the conversation analyzer 226 determines messages including “mountain bike,” “backpack,” “camping” from multiple conversations can be used as contextual indicators for the message “do you want to go hiking” received in an ongoing conversation since the terms “mountain bike,” “backpack,” “camping” and “hiking” can be classified into a cluster “outdoor activity” based on concept clustering.
- the conversation analyzer 226 also analyzes a conversation to determine the tense (e.g., whether a conversation message is in the past tense), the recency (e.g., whether a conversation message is new, how to weigh a new or old conversation message), etc.
- the conversation analyzer 226 further collects data including user profile information (e.g., an age, a gender), conversation metadata (e.g., a start time and an end time of a conversation, participants of the conversation, timestamps associated with each conversation message), and uses the collected data as contextual indicators. Authorization is obtained prior to the use of any profile information or personal information of the user.
- the determining engine 228 can be code and routines for determining whether an entity is actionable. In some instances, the determining engine 228 can be a set of instructions executable by the processor 202 to provide the functionality described herein for determining whether an entity is actionable. In other instances, the determining engine 228 can be stored in the memory 204 of the computing device 200 and can be accessible and executable by the processor 202 . In some instances, the determining engine 228 can be adapted for cooperation and communication with the processor 202 and other components of the computing device 200 .
- the conversation analyzer 226 identifies an entity from a conversation message of a conversation and determines contextual indicators of the entity in the conversation
- the determining engine 228 determines whether the determined entity is actionable. An entity is actionable if a user is likely to take an action on it.
- the determining engine 228 determines an entity is an actionable entity when the entity is in a context of conversation where a user is likely to take an action on the entity. As described herein, whether a user is likely to take action on an entity is determined by the determining engine 228 utilizing one or more of various techniques and is based on one or more contextual parameters described herein.
- the determining engine 228 detects one or more action verbs, the subject and/or the object of the one or more verbs and associated context, and determines an actionable entity based on the detected information.
- An action verb is a verb that expresses physical or mental action such as walk, read, want, think, etc. For example, if the conversation analyzer 226 identifies the location entity “supermarket C” from a message “meet at supermarket C” between user A and user B in the conversation, the determining engine 228 may detect an action verb “meet,” an object “supermarket C” of the verb “meet,” and determine that this location entity “supermarket C” is actionable because users A and B may meet at the place.
- the determining engine 228 fails to detect an action verb and associated object/subject. As a result, the determining engine 228 may not determine that the location entity “supermarket C” is actionable because no action is detected.
- the determining engine 228 classifies the entity as actionable or non-actionable. When the entity is classified as actionable, the determining engine 228 highlights or otherwise annotates the actionable entity for use by one or more other components as described herein.
- the conversation analyzer 226 analyzes all conversation messages in the conversation to determine contextual indicators of an entity identified from a conversation message of the conversation.
- the determining engine 228 determines whether the entity is actionable based on the contextual indicators. In some instances, the determining engine 228 determines whether an entity is actionable based on a conversation flow. For example, user A enters a question “meet at ABC?” In certain examples, the determining engine 228 may not determine whether the location “ABC” is actionable until receiving user B's answer in the conversation flow. If user B says “Sure,” the determining engine 228 then determines that “ABC” is actionable. Otherwise, the determining engine may determine “ABC” as non-actionable.
- the determining engine 228 may determine “DEF” rather than “ABC” as an actionable entity. In other instances, the determining engine 228 determines whether an entity is actionable based on the tense of the message. For example, the determining engine 228 may determine that the flight number 1234 in the message “I used to take 1234 to New York” is non-actionable since the message is in the past tense.
- the determining engine 228 determines whether an entity is actionable based on sentiment indicators. For example, the determining engine 228 determines “pasta” is non-actionable based on the message “want pasta for dinner?” from user A and the message “I hate pasta” from user B. However, the determining engine 228 may still determine that “dinner” is actionable. A suggestion that gives more details or completes an action (e.g., a pizza restaurant) may still be provided to user A. The determining engine 228 also determines whether an entity is actionable based on other contextual indicators determined by the conversation analyzer 226 .
- the determining engine 228 determines whether an entity is actionable based on contextual indicators, which differs the present disclosure from some approaches and may therefore be advantageous.
- the conventional approaches may determine that today is Alice's birthday based on a previous conversation between Alice and her friend, and automatically send her a “Happy Birthday” message and a fun video clip to celebrate her birthday. Implementations of the present disclosure sends such automatic celebration messages to Alice only if the contextual condition is determined to be appropriate. If Alice said that “my house was burn down” a few hours ago, the determining engine 228 decides not to send any celebration message to Alice since the message can only be an annoying spam for Alice.
- a suggestion directed to “Coffee Shop A” may be provided to User B for incorporation in the current conversation.
- the suggestion may be provided based on User A's previous expression of positive sentiment directed toward “Coffee Shop A” and may optionally be provided even if User B was not involved in the prior conversation.
- the determining engine 228 in addition to automatically determining an actionable entity based on contextual indicators in a conversation, the determining engine 228 also allows a user to manually determine which entity is actionable. Even if the determining engine 228 did not detect that an entity is actionable, the determining engine 228 allows a user to make the entity actionable. As a result, any message in a conversation can be actionable. In some instances, the determining engine 228 receives an indication from a user to mark an entity in a conversation message as actionable and returns information relevant to the entity to the user. For example, a user mentions “panda” in a conversation message.
- the user determines that this word is the most important entity in the message and indicates that this word is actionable (e.g., by labelling the word via user interface input such as a “tap on” or other selection of the word). Responsive to receiving this indication, the determining engine 228 communicates with other servers or applications (e.g., a search server 112 and/or third-party server 110 ) to retrieve information related to “panda” (e.g., a first search result from search server 112 ) to the user. In some instances, responsive to receiving an indication that a user wants to take an action on an entity, the determining engine 228 also sends the indication as a training signal to the model builder 224 to train the machine learning model based on the indication.
- a search server 112 and/or third-party server 110 to retrieve information related to “panda” (e.g., a first search result from search server 112 ) to the user.
- the determining engine 228 responsive to receiving an indication that a user wants to take
- the model builder 224 may, based on the indication, generate a positive training example with training example output indicating an actionable entity and training example input that is based on the message in which the indication was made, the word(s) that were the focus of the indication, and/or contextual indicators associated with the conversation.
- the model builder 224 may refine the machine learning model by further training the model based on the positive training example.
- the suggestion generator 230 can be code and routines for generating a suggestion for a user to take an action on an entity.
- the suggestion generator 230 can be a set of instructions executable by the processor 202 to provide the functionality described herein for generating a suggestion for a user to take an action on an entity.
- the suggestion generator 230 can be stored in the memory 204 of the computing device 200 and can be accessible and executable by the processor 202 .
- the suggestion generator 230 can be adapted for cooperation and communication with the processor 202 and other components of the computing device 200 .
- the suggestion generator 230 Responsive to receiving an actionable entity from the determining engine 228 , the suggestion generator 230 generates a suggestion for the actionable entity to offer richer context and next steps.
- the suggestion is information that is useful to make an entity more actionable for a user or to complete an action for a user. For example, when users suggest meeting at a restaurant, the suggestion generator 230 can provide more details about the restaurant and offer to book a table. When users talk about watching a movie, the suggestion generator 230 can offer show times or a link to the movie stream. When users mention a video clip from a website, the suggestion generator 230 can bring it up for users to play in the conversation. In some instances, the suggestion generator 230 generates a real-time suggestion. For example, when users are talking about lunch at a restaurant, the suggestion generator 230 generates a map in real time to direct the users to the restaurant.
- the suggestion generator 230 instructs the user interface engine 236 to incorporate at least one suggestion tool into a conversation interface.
- the suggestion generator 230 uses the suggestion tool to display a suggestion and receive user interactions with the suggestion.
- the suggestion generator 230 instructs the user interface engine 236 to generate at least one suggestion tool to display a map for a user viewing and selecting, to display a calendar for a user viewing and scheduling, to find and share contact information, to share a file, to set up a reminder, to display a video or initiate a video call, to share stickers, to display weather information, to display sports scores, to display product or service (e.g., clothes, movies, medical service) purchase information, to display flight information, to provide traffic data, to provide local event information, to provide local merchant information (e.g., restaurants, movie theaters), to share user status (e.g., driving, biking, running), to find and share a product (e.g., a mobile application, a game), to pay or receive a payment for a product or service, etc.
- the suggestion provided by the suggestion generator 230 is a selectable suggestion.
- the suggestion generator in response to selection of the suggestion by a participant of the conversation, may incorporate the suggestion (and/or related content) into a transcript of the conversation.
- the suggestion generator 230 in response to selection of the suggestion, may cause it (and/or related content) to be statically displayed in the transcript for all participants of the conversation.
- the suggestion may initially be provided to the user interface engine 236 for presentation to one or more of the recipients in their corresponding conversation interfaces as a non-static graphical element (e.g., presented in the interface, but not fully incorporated in the transcript).
- the suggestion in response to selection of the suggestion by one or more of the participants, the suggestion (and/or related content) may be statically incorporated into the transcript of the conversation.
- the suggestion may include an affirmative interface element and a negative interface element.
- the suggestion In response to selection(s) of the affirmative interface element, the suggestion may be incorporated in the transcript and in response to selection(s) of the affirmative interface element the suggestion may be discarded without static incorporation of the suggestion into the transcript.
- the suggestion generator 230 generates a suggestion based on what the machine learning model from the model builder 224 learns from user actions.
- the model builder 224 trains the machine learning model to learn from user's non-chat actions and the suggestion generator 230 generates a suggestion based on the machine learning model. For example, if a user talks about taking a flight to Las Vegas next weekend, the determining engine 228 determines an actionable entity “flight” and the suggestion generator 230 offers a suggestion of a flight itinerary (e.g., time and airline) based on user's previous purchase history learned in the machine learning model.
- a flight itinerary e.g., time and airline
- the model builder 224 trains the machine learning model to learn from reactions of a user to previous suggestions and the suggestion generator 230 generates a suggestion based on the machine learning model.
- the suggestion generator 230 may communicate with the user interface engine 236 to customize a new suggestion tool in a conversation interface based on user actions taken to previous suggestion tools offered in the conversation interface. For example, the model builder 224 trains the machine learning model to learn that a user never made any purchase using purchase tools previously offered in a conversation interface displayed to the user. As a result, the suggestion generator 230 determines no longer to incorporate a purchase tool in the conversation interface.
- the suggestion generator 230 used to provide a traffic map tool and a public transport tool to a user.
- the suggestion generator 230 learns from the machine learning model that the user always interacted with the public transport tool, and therefore determines to generate and provide only a public transport tool to the user in the future.
- user A and user B always discuss or select Coffee house as a meetup spot.
- the suggestion generator 230 generates a map suggestion and instructs the user interface engine 236 to include a map tool and highlight the Coffee house nearby in the map tool.
- the suggestion generator 230 generates a suggestion based on the conversation analysis (e.g., NLP) and contextual indicators determined from the conversation analyzer 226 .
- the suggestion generator 230 generates a suggestion based on the sentiment analysis. For example, user A asks “Coffee house, 8 am tomorrow?” and user B answers “really? early bird on Sunday?”
- the suggestion generator 230 may highlight the available time around noon on the calendar based on the sentiment analysis.
- the suggestion generator 230 generates a suggestion based on user information conveyed in a conversation. For example, if user A says “let's meet tomorrow” and user B says “great!
- the suggestion generator 230 may provide a map of San Francisco to users A and B even if neither user is at San Francisco when the conversation occurs.
- the suggestion generator 230 generates a suggestion based on user profile information. Authorization is obtained prior to the use of any profile information or personal information of the user.
- the suggestion generator 230 generates a suggestion by pulling data from a search engine and/or other applications into a conversation. For example, the suggestion generator 230 receives map data around a location from a map service in the conversation and generates a map suggestion for the actionable location entity. An example conversation interface including a suggestion is depicted in FIG. 10 . In other instances, instead of itself generating a suggestion for a user to take an action on an entity, the suggestion generator 230 feeds the entity information into other applications and services. The other applications and services may themselves optionally directly provide a suggestion for a user to take an action on the entity.
- the suggestion generator 230 notifies a third-party server to provide flight feeds (e.g., delay information) to one or more participants in the conversation (e.g., by incorporating those flight feeds into the transcript of the conversation and/or via notifications provided via another application). If the user mentions a friend that the user likes in the conversation, the suggestion generator 230 communicates with an advertisement application to use this information to target the user with advertising. If the user mentions a sports game in the conversation, the suggestion generator 230 communicates with a third-party service to provide the sports scores of the sports game to the user.
- An example conversation interface including a suggestion provided by a different application is depicted in FIGS. 11A and 11B .
- the entity information includes participants of the conversation from which the entity is identified.
- the suggestion generator 230 feeds the entity information into other services
- the other services may provide a suggestion to all (or a subset of) the participants of the conversation. For example, if user A mentions weather in a conversation with user B and user C, a weather service may send a hourly weather report to users A, B and C after receiving entity information of “weather” from the suggestion generator 230 .
- the suggestion generator 230 also communicates with the conversation management module 222 and the user interface engine 236 to initiate a live conversation in a conversation interface.
- the other service provides a suggestion for the user to take an action on the entity in the live conversation.
- the other services may provide the hourly weather report either in an interface provided by the other services or in the live conversation provided by the conversation management module 222 and the user interface engine 236 .
- the suggestion generator 230 can provide smarter, more relevant, more searchable suggestions to a user, and therefore is more useful and effective.
- the suggestion generator 230 takes a step further and ventures into a personal assist space. Instead of receiving user questions “can you recommend me of a show this weekend in San Francisco? can you book a flight to Seattle on Tuesday morning?” and answering the questions based on multiple applications, searches, comparisons and form fillings, the suggestion generator 230 asks questions for users and answers the questions on their behalf.
- chat is becoming the go to application on user's smart phone, the suggestion generator 230 incorporating with other modules and engines now fits well into this area by drawing information from the chat and providing relevant updates.
- the suggestion generator 230 communicates with other services to provide important updates in one place for all participants. Connecting users with other services by the suggestion generator 230 could also drive more users into other services since it wouldn't require users to download a separate mobile application for another service. Furthermore, the suggestion generator 230 offers developer components to build different type of services including understanding and translating user's conversations into actions, for example, voice commands and wear equipment.
- the suggestion generator 230 comprises a response predictor 232 and a report module 234 .
- the response predictor 232 can be code and routines for detecting a question for a user in a conversation and determining a potential user reply to the question.
- the response predictor 232 can be a set of instructions executable by the processor 202 to provide the functionality described below for detecting a question for a user in a conversation and determining a potential user reply to the question.
- the response predictor 232 can be stored in the memory 204 of the computing device 200 and can be accessible and executable by the processor 202 .
- the response predictor 232 can be adapted for cooperation and communication with the processor 202 and other components of the computing device 200 .
- the response predictor 232 predicts users' potential answer and supplies users with a next reply, which is better than typing or copy-paste. For example, when a user is asked in a conversation when his or her flight is going to land, the response predictor 232 can make flight information available as a reply for the actionable entity “flight.”
- the response predictor 232 predicts how a user would want to reply to a question based on the contextual indicators and the conversational analysis from the conversation analyzer 226 and the machine learning model from the model builder 224 . For example, the response predictor 232 determines how a user tends to reply a certain type of questions based on what the machine learning model has learned from the conversation history and then offers one or more potential replies for the user. If the response predictor 232 learns that 30% of the time people respond A and 70% of the time people respond B to a question from the machine learning model, the response predictor 232 may supply answer B for a user that is going to answer the same question.
- the response predictor 232 is at a particular advantage because of the contextual indicators and the conversational analysis received from the conversation analyzer 226 . Knowing users' location, context, and other personal information enables the response predictor 232 to more easily and/or accurately predict a reply. For example, given the messages “I hate coffee” and “the tea house on the X street is the best” from user A in previous conversations, the response predictor 232 can easily supply the address of “the tea house on the X street” as the potential answer for user A when user B asks user A “which is your favorite place for coffee or tea?.”
- the response predictor 232 also determines the type of answers based on the type of questions.
- the response predictor 232 determines the type of questions based on the understanding of the sentence structure from the conversation analyzer 226 . For example, the response predictor 232 provides A and B as potential answers if the question is “A or B?.” Or the response predictor 232 provides “yes” and “no” as potential answers when the question is “do you like A?.”
- the response predictor 232 also determines the type of questions based on other contextual indicators determined by the conversation analyzer 226 .
- the response predictor 232 would determine this is a yes or no question and provide “yes” or “no” as potential answers for user A. However, if the previous conversations show that user A has booked a ticket but has not received a confirmation number after a few days, the response predictor 232 may not think this is a yes or no question and instead provide “I don't know” as a potential answer.
- the response predictor 232 provides a potential user reply in one-tap form and/or other single selection form. For example, assume the question is “can I send your contact info?.” The question includes an actionable entity “contact info.” Further assume a previous conversation includes “your” contact info. The response predictor 232 may provide a one-tap contact info as an answer.
- a one-tap suggestion offered by the response predictor 232 based on the context of a conversation is convenient for a user in many ways (e.g., time, safety). For example, when user A sends user B a chat conversation, the response predictor 232 can send a one-tap suggestion saying that “I am driving” or even send “I will be home in 20 minutes” for user B to respond user A. When user B is flying and does not turn on the cell phone, the response predictor 232 can still automatically respond “I will be available four hours later” for user B based on a calendar. An example interface showing one-tap replies is depicted in FIG. 10 .
- the report module 234 can be code and routines for generating one or more reports related to a conversation based on organizing the conversation.
- the report module 234 can be a set of instructions executable by the processor 202 to provide the functionality described below for generating one or more reports related to a conversation based on organizing the conversation.
- the report module 234 can be stored in the memory 204 of the computing device 200 and can be accessible and executable by the processor 202 .
- the report module 234 can be adapted for cooperation and communication with the processor 202 and other components of the computing device 200 .
- the report module 234 aggregates information across conversations, organizes the conversations, and makes the conversations easily searchable by topics, objects, and/or other metadata.
- the report module 234 receives conversations and contextual indicators determined from the conversations by the conversation analyzer 226 , and organizes the conversations based on the contextual indicators. In some instances, the report module 234 organizes the conversations based on content. For example, the report module 234 organizes the conversations to find conversations that talk about a movie or mention a location. In other instances, the report module 234 organizes the conversations based on timeline. For example, the report module 234 organizes the conversations that mention a location in a descending time order. In other instances, the report module 234 organizes the conversations based on conversation flows. For example, the report module 234 retrieves conversation messages that include a location from the conversations, associates each message with a particular user who sent the message, and arranges the conversation messages in a descending time order.
- the report module 234 may determine that the next message in the conversation flow will be the word that the user specified in the search box and organizes the conversation in this order. In other instances, the report module 234 organizes the conversations based on sentiment and/or other feature(s). For example, the report module 234 organizes the conversations based on classifying people as electronic-book reader or paper-book reader. One skilled in the art, having had the benefit of the present disclosure, will understand that the report module 234 can organize the conversation based on other contextual indicators.
- the report module 234 also labels the important message (e.g., an actionable entity) for later follow up.
- the label can be flags, stars, etc.
- the report module 234 can easily retrieve it.
- the report module 234 obtains additional information by labelling the messages, for example, how often this message was mentioned, when a user mentioned this message, etc.
- the report module 234 indexes the conversations (e.g., in a database stored in storage 210 ) based on organizing the conversations.
- the report module 234 searches the conversations using the indexes, generates a report and returns the report to a user. For example, responsive to receiving a search request for conversations talking about a movie, the report module 234 searches conversation content about the movie.
- the report module 234 organizes the search result based on ordering conversations according to the timeline of the conversations, associating each conversation message in a conversation with a user and a time, highlighting the important entities (e.g., movie names, theater names, show time, etc.,) and providing references back to the previous conversations based on the indexes.
- the report module 234 generates a report for a user based on organizing the conversation.
- An example conversation interface showing a conversation report is depicted in FIG. 13 .
- the report module 234 also generates a summary by organizing and summarizing conversations within a time period. For example, the report module 234 generates a summary for a user to show how many conversations the user participated in within a week, who the user talks with in the week, what topics the user talked about in the week, how many photos the user shared in the week, etc.
- An example conversation interface showing a conversation summary is depicted in FIG. 14 .
- the report module 234 can retrieve the details for a user without necessitating that the user dig through and/or scroll through a verbatim transcript of a conversation.
- the report module 234 also gets updates on topics discussed in the conversation for a user (e.g., game scores or shows).
- the report module 234 provides not only a search result since users can look back at a meaningful trail of information shared based on events, places, people.
- the report module 234 also allows users to interact with a collection of things they've shared or discussed such as a list of all restaurants they've talked about in the past few months.
- the report module 234 provides a way to gain insights from conversations and to gauge context, sentiment, and/or other features. For example, the report module 234 can get valuable insights to gauge sentiment towards certain brands and to identify trending topics.
- the user interface engine 236 can be code and routines for generating a conversation interface that displays conversation messages and suggestions of a conversation.
- the user interface engine 236 can be a set of instructions executable by the processor 202 to provide the functionality described below for generating a user interface that displays conversation messages and suggestions of a conversation.
- the user interface engine 236 can be stored in the memory 204 of the computing device 200 and can be accessible and executable by the processor 202 .
- the user interface engine 236 can be adapted for cooperation and communication with the processor 202 and other components of the computing device 200 .
- the conversation management module 222 instructs the user interface engine 236 to generate graphical data for displaying a conversation and conversation messages in a conversation interface.
- the suggestion generator 230 generates a suggestion for an actionable entity in a conversation.
- the conversation management module 222 instructs the user interface engine 236 to generate graphical data for displaying the suggestion along with a conversation message in a conversation interface.
- the user interface engine 236 generates multiple suggestion tools in a conversation interface for displaying one or more suggestions and receiving user interactions with the suggestion(s).
- a suggestion includes information for a user to take an action on an entity.
- the user interface engine 236 generates multiple suggestion tools for presenting the suggestion in parallel with the message including the entity. For example, the user interface engine 236 shows the map tool of ski resorts and a snow report along with the message “go skiing” on the same screen. A user can view and select the map with the map tool. Or the user interface engine 236 may show two calendar tools for two users along with the message discussing meeting up next day. A user can view and schedule a calendar using the calendar tool. Or the user interface engine 236 may show different purchase tools for dress and shoes along with the message discussing celebrity's outfit.
- the user interface engine 236 may show a calendar tool highlighting times that two users are free next day and show a map tool highlighting coffee shops near addresses of both users along with the message “meet for coffee next day?” Or the user interface engine 236 may show a traffic map tool and a public transport tool along with the message “go from A to B?” In some instances, if a suggestion tool cannot fit into a screen (e.g., the small screen of a smart phone), the user interface engine 236 will show tool options first as multiple tools.
- the user interface engine 236 generates multiple suggestion tools for serially presenting one or more suggestions. For example, upon receiving the message “meet up for a meal,” the user interface engine 236 shows options for lunch or dinner. Upon a user selection of lunch, the user interface engine 236 shows the restaurants open for lunch. Or upon receiving message “meet for coffee next day,” the user interface engine 236 shows a calendar tool first. The user interface engine 236 may also highlight times on the calendar when all users are available. Once a time is selected, the user interface engine 236 shows a map of coffee shops open at that time. Or upon receiving a message “buy skiing equipment in Los Angeles,” the user interface engine 236 first shows a map of sports stores in Los Angeles. After a store is selected, the user interface engine 236 shows a purchase tool for equipment in that store. An example conversation interface showing serial presentation of suggestions is depicted in FIG. 15 .
- FIG. 3 includes a flowchart of an example method 300 for identifying an entity from a conversation and generating a suggestion for a user to take an action on the entity.
- the method 300 begins by receiving 302 at least one conversation message from a conversation.
- a conversation message may include a video message, an audio message, a text message, etc.
- the method 300 then identifies 304 an entity that can be actionable from a conversation message and determines 306 contextual indicators of the entity.
- the entity can be a person in a conversation message, an object in the conversation message, etc.
- the conversation analyzer 226 discussed in further detail with reference to FIG. 2 above may identify the entity and determine contextual indicators.
- the conversation analyzer 226 may identify a location entity from a conversation message and determine contextual indicators of the location entity. For instance, for the location entity, the conversation analyzer 226 may determine contextual indicators based on when the location was mentioned, who mentioned the location in the conversation, which content of the conversation caused the location be perceived, which kind of content followed the location in the conversation, prior sentiment expressed toward the entity and/or related entities in prior conversations, etc.
- the method 200 next determines 208 whether the entity is actionable based on the contextual indicators.
- the determining engine 228 discussed in further detail with reference to FIG. 2 may determine an actionable entity. For example, if the conversation analyzer 226 identifies the location entity “supermarket C” from a message “meet at supermarket C” between user A and user B in the conversation, the determining engine 228 may determine that this location entity “supermarket C” is actionable because users A and B will meet at the place. If the determining engine 228 determines that the entity is actionable, the method 300 moves to step 310 . Otherwise, the method 300 ends. The method 300 provides 310 a suggestion to a user to take an action on the entity.
- the suggestion generator 230 discussed in further detail with reference to FIG. 2 above may provide a suggestion.
- the suggestion generator 230 provides a map to “supermarket C” and a public transport tool to direct how a user can get to the “supermarket C.”
- the suggestion is provided to all participants of the conversation.
- the suggestion is provided to a subset of the participants of the conversation.
- the suggestion may initially be provided to one or more participants without immediate incorporation of the suggestion into the transcript of the conversation.
- the suggestion may only be incorporated into the transcript in response to one or more (e.g., at least a threshold quantity of) providing “affirmative” user interface input directed toward the suggestion.
- FIG. 4 is a flowchart of a specific example method 400 for identifying an entity from a conversation and generating a suggestion for a user to take an action on the entity.
- the method 400 receives 402 at least one conversation message from a conversation.
- the method then performs 404 a natural language analysis (NLP) on the at least one conversation message based on a machine learning model, and identifies 406 an entity that can be actionable from a conversation message based on the analysis.
- NLP natural language analysis
- the conversation analyzer 226 determines entities “beautiful,” “weather” and “Store A” from a conversation message by parsing, extracting, and pattern matching.
- the conversation analyzer 226 determines that “beautiful” is an adjective, “weather” is a noun, and “Store A” is a location based on the language semantic analysis using the SAFT library.
- An entity identified by the conversation analyzer 226 can be actionable or non-actionable depending on whether it is determined that a user can take an action on it.
- the method 400 determines 408 contextual indicators of the entity based on the analysis.
- the conversation analyzer 226 performs the NLP based on pattern matching in combination with user information.
- the conversation analyzer 226 can detect, from a conversation message, a “Coffee house” near user A instead of any arbitrary “Coffee house” in a city based on pattern matching in combination with user information of user A.
- the conversation analyzer 226 may additionally or alternatively determine contextual indicators by performing sentiment analysis on a conversation message and associating the conversation message with a weight.
- the conversation analyzer 226 receives messages “I hate coffee,” “tea is ok” and “coke is my favorite” from user A, and associates a most favorable to least favorable sentiment weight to coke, tea and coffee, respectively.
- the weight indicates user A's beverage taste.
- the conversation analyzer 226 may additionally and/or alternatively analyze a conversation to determine the tense (e.g., whether a conversation message is in the past tense) and/or the recency of the conversation message (e.g., whether a conversation message is new, how to weigh a new or old conversation message); and/or or collects user profile information (e.g., an age, a gender) and/or conversation metadata (e.g., a start time and an end time of a conversation, participants of the conversation, timestamps associated with each conversation message) as contextual indicators.
- the tense e.g., whether a conversation message is in the past tense
- the recency of the conversation message e.g., whether a conversation message is new, how to weigh a new or old conversation message
- user profile information e.g., an age, a gender
- conversation metadata e.g., a start time and an end time of a conversation, participants of the conversation, timestamps associated with each conversation message
- the method 400 further tracks 410 conversation flows from each participant of the conversation and refines 412 the contextual indicators based on the tracking information.
- the conversation analyzer 226 tracks users for possible participants of a conversation and determines which participant sends which message in what order. For example, the conversation analyzer 226 identifies an entity “hiking” from a message “do you want to go hiking?” sent from user A when talking with user B today. The conversation analyzer 226 tracks conversation flows and determines that a message “I prefer fishing than hiking” from user B in a previous conversation should be used as contextual indicators for the entity “hiking.”
- the method 400 determines 414 whether the entity is actionable based on the contextual indicators.
- the determining engine 228 determines whether an entity is actionable based on a conversation flow. For example, user A enters a question “meet at ABC?” The determining engine 228 will not determine whether the location “ABC” is actionable until receiving user B's answer in the conversation flow.
- the determining engine 228 determines whether an entity is actionable based on the tense of the message. For example, the determining engine 228 may determine an entity in a past tense message is non-actionable.
- the determining engine 228 also determines whether an entity is actionable based on sentiment indicators and other contextual indicators. If the determining engine 228 determines that the entity is actionable, the method 400 moves to step 416 . Otherwise, the method 400 ends.
- the method 400 determines 416 a suggestion for a user to take an action on the entity based on the machine learning model and the contextual indicators. For example, if a user talks about taking a flight to Las Vegas next weekend, the determining engine 228 determines an actionable entity “flight” and the suggestion generator 230 offers a suggestion of a flight itinerary (e.g., time and airline) based on user's previous purchase history learned in the machine learning model. The method 400 provides 418 the suggestion to the user to take an action on the entity.
- a flight itinerary e.g., time and airline
- FIG. 5 is a flowchart 500 of an example method for manually determining an actionable entity from a conversation.
- the method 500 receives 502 an indication to mark an entity in a conversation message as actionable.
- the indication to mark the entity in a conversation message as actionable is received from a user (e.g., based on user interface input directed to term(s) in the conversation message that correspond to the entity).
- the method 500 sends 504 the user indication, and optionally additional data (e.g., the conversation message, contextual indicators) as a training signal to a machine learning model.
- the method 500 searches 506 for information relevant to the entity and provides 508 the information to the user.
- a user determines “Green Park Museum” is the most important word in a message and indicates that this word is actionable by flagging the word. Responsive to receiving this indication, the determining engine 228 searches information related to “Green Park Museum” and retrieves the top five results to the user. The determining engine 228 also sends the indication as a training signal to train a machine learning model.
- FIG. 6 is a flowchart 600 of an example method for generating and updating a machine learning model.
- the model builder 224 discussed in further detail with reference to FIG. 2 above may generate and update a machine learning model.
- the method 600 receives 602 data from a variety of sources including queries and document retrieval, extracts 604 features from the data and generates 606 a machine learning model based on the extracted features.
- the model builder 224 includes a user's search history into the model.
- the model builder 224 upon receiving a collection of documents returned for a query and ranks associated with each document, builds the model to include the ranks to show the relevancy between a document and the query.
- the model builder 224 may also generate the model to include user statistics, user behavior pattern data, a sequence of weights and multipliers that are used to make predictions about a user action.
- the model builder 224 generates the machine learning model and trains the model over time to understand the semantics of a conversation and derives meaning from the real time conversation. As the model evolves, the efficiency and accuracy of using the model in suggestion making, behavior prediction, etc., are improved.
- the method 600 receive 608 a user action, the user action including a reaction to a suggestion provided for an entity, and trains 610 the machine learning model based on the user action.
- This may include generating a training example based on the user action and other associated data and training the machine learning model based on the training example.
- the model builder 224 learns that a user never buys anything that was offered in a conversation interface with a purchase tool.
- the model builder 224 receives a comment “I do not like this airline” regarding a flight itinerary suggestion.
- the model builder 224 takes this negative reaction as a signal to train the model. As a result, a different airline may be suggested to the user in the future.
- FIG. 7 is a flowchart 700 of an example method for feeding entity information from a first application to a second application to generate a suggestion.
- the method 700 receives 702 at least one conversation message from a conversation hosted by a first application and determines 704 that an entity in a conversation message is actionable.
- the method 700 feeds 706 entity information to a second application, the entity information including participants of the conversation in the first application.
- the method moves to step 708 , where the second application generates a suggestion for a user to take an action on the entity. For example, if a flight number is mentioned in a conversation, the suggestion generator 230 notifies a third-party server to provide flight feeds (e.g., delay information) to a user.
- flight feeds e.g., delay information
- the suggestion generator 230 communicates with an advertisement application to use this information to target the user with advertising.
- the method 700 provides 710 the suggestion to the participants of the conversation in the first application. For example, if user A mentions weather in a conversation with user B and user C, a weather service may send a hourly weather report to users A, B and C after receiving entity information of “weather” from the suggestion generator 230 .
- FIG. 8 is a flowchart 800 of an example method for predicting a potential user reply in a conversation.
- the method 800 receives 802 at least one conversation message from a conversation and determines 804 that an entity in a conversation message is actionable.
- the method 800 detects 806 a question for a user in the conversation, the question being related to the entity and determines 808 a potential user reply to the question.
- the response predictor 232 discussed in further detail with reference to FIG. 2 below may detect a question and determine a potential user reply. For example, if the response predictor 232 learns that 30% of the time people respond A and 70% of the time people respond B to a question, the response predictor 232 may supply answer B for a user that is going to answer the same question.
- the response predictor 232 also determines a potential reply based on contextual indicators (e.g., users' location, context, and other personal information). For example, given the messages “I hate coffee” and “the tea house on the X street is the best” from user A in previous conversations, the response predictor 232 can easily supply the address of “the tea house on the X street” as the potential answer for user A when user B asks user A “which is your favorite place for coffee or tea?.”
- contextual indicators e.g., users' location, context, and other personal information
- the method 800 provides 810 the potential user reply in a one-tap form to the user.
- the response predictor 232 can send a one-tap suggestion saying that “I am driving” or even send “I will be home in 20 minutes” for user B to respond user A.
- the suggestion may then be incorporated in a transcript of the chat conversation.
- the response predictor 232 can still automatically respond “I will be available four hours later” for user B based on a calendar.
- FIG. 9 is a flowchart 900 of an example method for selectively retrieving conversations and/or conversation messages in response to search requests.
- the method 900 receives 902 at least one conversation and determines 904 contextual indicators from the at least one conversation.
- the method 900 organizes 906 the at least one conversation based on the contextual indicators and indexes 908 the at least one conversation.
- the report module 234 discussed in further detail with reference to FIG. 2 above may organize and index the conversation.
- the report module 234 may organize the conversations based on participant identities, entities referenced in the conversations, times of the conversation messages, other conversation content, and the like. In one example, the report module 234 may organize the conversations that mention a location in a descending time order.
- the report module 234 may also organize the conversations based on conversation flows. For example, if a user says “I will search it,” the report module 234 may determine that the next message in the conversation flow will be the word that the user specified in the search box and may organize the conversation in this order. The report module 234 may also organize and index the conversations based on sentiment and other contextual indicators.
- the method 900 receives 910 a search request for the at least one conversation and retrieves 912 a portion of the at least one conversation based on indexing the at least one conversation.
- the report module 234 responsive to receiving a search request for conversations talking about a movie, the report module 234 generates a report for a user based on organizing the conversations by searching conversation content about the movie, ordering conversations according to the timeline of the conversations, associating each conversation message in a conversation with a user and a time, highlighting the important entities (e.g., movie names, theater names, show time, etc.,) and providing references back to the previous conversations based on the indexes.
- important entities e.g., movie names, theater names, show time, etc.
- FIG. 10 includes graphic representations of example conversation interfaces showing a suggestion.
- the conversation interfaces 1000 , 1050 are displayed on Aaron's mobile screen.
- Aaron receives a message 1002 “Want to eat at Park Chow?” from Bob.
- the suggestion application 132 b which is described above with reference to FIGS. 1 and 2 , determines that the location “Park Chow” is actionable. A suggestion therefore can be generated for Aaron and Bob to take an action on the location.
- the suggestion application 132 b generates a map 1004 of the location “Park Chow” for Aaron and/or Bob.
- Aaron and/or Bob can view the map 1004 or share the map 1004 using the share button 1006 .
- the map 1004 is displayed twice before and after Aaron sends a message 1008 “Sure” to respond the message 1002 .
- the determining engine 228 determines that the location “Park Chow” is actionable only if Aaron positively answers the question 1002 , for example, with the message 1008 “Sure”.
- the location suggestion (e.g., the map 1004 ) may only be displayed once after Aaron sends the message 1008 . In other words, the location suggestion may not be incorporated into the transcript of the conversation until Aaron sends the message 1008 via interaction with the affirmative interaction element “Sure””.
- Aaron and Bob may alternatively select the “Umm, nope” option 1010 to indicate that the map is not the suggestion the users want or the map is wrong or other negative reactions. In those situations the suggestion may be discarded without static implementation into a transcript of the conversation.
- the entire suggestion generation process is handled by a suggestion application 132 .
- FIG. 11A is a graphic representation of an example conversation interface showing a conversation generated by a conversation service.
- An ongoing conversation between users Melissa G., Alice Z., Chris B. is displayed on the conversation interface 1100 .
- the users Melissa G., Alice Z., Chris B may be members of a social network in this non-limiting example.
- the conversation session between the users is generated and managed by a first application (e.g., a suggestion application 132 ) in the social network.
- the conversation interface 1100 can be displayed on Melissa's computer screen.
- the users converse about a plan that night, Melissa expresses interest in shopping and states that “Dress Factory is good.
- the suggestion application 132 b identifies that the important entities in this message are “Dress Factory” and “discount,” the suggestion application 132 b generates a suggestion based on these important entities. However, instead of generating a suggestion by the suggestion application 132 b as in FIG. 10 , the suggestion application 132 b feeds the information “Dress Factory” and “discount” to another service (e.g., a third-party promotion service) to generate a suggestion.
- another service e.g., a third-party promotion service
- FIG. 11B is a graphic representation of an example conversation interface showing a suggestion generated by a third-party promotion service.
- the conversation interface 1150 is displayed on Melissa's mobile screen.
- the conversation interface 1150 includes a suggestion 1152 “Dress Factory has 20% off for dress and jewelry until May 30.”
- the promotion service generates suggestion 1152 based on the entities “Dress Factory” and “discount” identified by the suggestion application 132 b in FIG. 11A (e.g., after being fed that information by a separate server handling the conversation).
- the promotion service may perform a search for the entities on the Internet to generate the suggestion 1152 .
- the suggestion generator 132 b may receive the suggestion 1152 and then provide the suggestion 1152 to all, or a subset of, participants of the conversation in FIG. 11A , e.g., Melissa G., Alice Z., and/or Chris B.
- FIG. 11B displays the suggestion 1152 on a mobile screen of Melissa, identical to the suggestions shown to Alice or Chris.
- FIG. 12 is a graphic representation of an example conversation interface showing one-tap replies.
- the conversation interface 1200 is displayed on Aaron's mobile screen.
- the suggestion application 132 b may predict a potential response from Aaron based on previous user actions of Aaron (e.g., a purchase history), and generates a one-tap reply 1204 for Aaron.
- the auto reply 1004 lists the flight number, the arrival time and a flight status. Aaron therefore saves time to type an answer to Bob.
- the suggestion application 132 b determines that this is a yes or no question, and generates a one-tap auto reply 1008 to include two options “YES” or “NO” for Aaron to choose.
- FIG. 13 is a graphic representation of an example conversation interface showing a conversation report.
- the conversation interface 1300 includes a search box 1302 , where the user can search for conversations based on participant name, topic, time, combinations thereof, etc.
- the user searched for conversations about a movie “star wars.”
- the suggestion application 132 b may generate a report.
- the report may start with a summary 1304 on when the user discussed the topic and the other participants in the conversations, e.g., that Mellissa, Alice and Jenny discussed “star wars” between 7:10-7:30 pm on Wednesday.
- the report may also include the conversation messages from each participant in a time order.
- the report may also highlight the keyword “star wars” 1306 searched by the user.
- the report may highlight certain entities (e.g., actors “AA” 1108 and “BB” 1310 ), to enable the user to retrieve more information (e.g., biography, photos) on the entities.
- Each highlighted and identified entity may be associated with a hyperlink that enables the user to perform a search for the entity on the Internet.
- FIG. 14 is a graphic representation of an example conversation interface showing a conversation summary.
- the conversation interface 1400 includes a conversation summary 1402 generated by the suggestion application 132 b for a user summarizing the conversations that the user participated in during a week.
- the conversation summary may include two exemplary portions 1402 and 1404 .
- the summary may include the number of conversations the user participated in during the past week, and some basic information on the conversations, e.g., time of day, date, identities of the other participants, and the like.
- the first portion 1402 may also include a detail option 1406 for each conversation that provides further details on each conversation including conversation messages from each participant, the time when each message was sent, etc.
- the second portion 1404 may include salient information on the conversations conducted in the past week including, for example, the topics discussed in the conversations (optionally, a pie chart 1408 describing the percentage of each topic in the conversations), audio/visual content shared in the conversations (optionally, a link 1410 to play the content), the photos 1412 shared in the two conversations.
- FIG. 15 includes graphic representations of example conversation interfaces showing serial presentation of suggestions.
- the conversation interface 1500 is displayed on a user's mobile screen. Responsive to receiving a message 1502 “meet up for a meal?,” the suggestion application 132 b generates and displays options 1504 for “lunch,” “dinner,” “brunch,” etc. The user may select one of the options 1504 first suggested to the user and triggers a second suggestion to be generated.
- FIG. 15 displays a conversation interface 1550 generated responsive to receiving the user selection as shown in the option 1506 . Upon the user's selection for lunch in the option 1506 , the suggestion application 132 b generates and displays certain restaurants open for lunch. In certain implementations, the suggestion application 132 b may display only those restaurants that are within a certain distance range of all of the participants in the conversation.
- the restaurant information 1508 may include a restaurant name, a restaurant type, a review and a price.
- the displayed restaurant information may be selectable and actionable.
- the user may select a particular restaurant and display it to the other participants in the conversation, e.g., as a message including the restaurant name, as a message including the restaurant name and prefilled default words suitable to the conversation (e.g., “let's meet at . . . ”).
- the user may select a particular restaurant to perform a search for the restaurant on the Internet, retrieve merchant information from a website, retrieve a map of the restaurant location, and the like. The user may then choose to display the retrieved information to the other participants in the conversation, e.g., by inserting a map of the restaurant location into the conversation interface.
- the specification also relates to an apparatus for performing the operations herein.
- This apparatus may be specially constructed for the required purposes, or it may include a general-purpose computer selectively activated or reconfigured by a computer program stored in the computer.
- a computer program may be stored in a non-transitory computer readable storage medium, such as, but is not limited to, any type of disk including floppy disks, optical disks, CD-ROMs, and magnetic disks, read-only memories (ROMs), random access memories (RAMs), erasable programmable read-only memory (EPROMs), electrically erasable programmable read-only memory (EEPROMs), magnetic or optical cards, flash memories including USB keys with non-volatile memory or any type of media suitable for storing electronic instructions, each coupled to a computer system bus.
- ROMs read-only memories
- RAMs random access memories
- EPROMs erasable programmable read-only memory
- EEPROMs electrically erasable programmable read-only memory
- the specification can take the form of an entirely hardware embodiment, an entirely software embodiment or embodiments containing both hardware and software elements.
- the specification is implemented in software, which includes but is not limited to firmware, resident software, microcode, etc.
- a non-transitory computer-usable or computer-readable medium providing program code for use by or in connection with a computer or any instruction execution system.
- a non-transitory computer-usable or computer readable medium can be any apparatus that can contain, store, communicate, propagate, or transport the program for use by or in connection with the instruction execution system, apparatus, or device.
- a data processing system suitable for storing and/or executing program code will include at least one processor coupled directly or indirectly to memory elements through a system bus.
- the memory elements can include local memory employed during actual execution of the program code, bulk storage, and cache memories which provide temporary storage of at least some program code in order to reduce the number of times code must be retrieved from bulk storage during execution.
- I/O devices including but not limited to keyboards, displays, pointing devices, etc.
- I/O controllers can be coupled to the system either directly or through intervening I/O controllers.
- Network adapters may also be coupled to the system to enable the data processing system to become coupled to other data processing systems or remote printers or social network data stores through intervening private or public networks.
- Modems, cable modem and Ethernet cards are just a few of the currently available types of network adapters.
- the users may be provided with an opportunity to control whether programs or features collect user information (e.g., information about a user's social network, social actions or activities, profession, a user's preferences, or a user's current location), or to control whether and/or how to receive content from the content server that may be more relevant to the user.
- user information e.g., information about a user's social network, social actions or activities, profession, a user's preferences, or a user's current location
- certain data may be treated in one or more ways before it is stored or used, so that personally identifiable information is removed.
- a user's identity may be treated so that no personally identifiable information can be determined for the user, or a user's geographic location may be generalized where location information is obtained (such as to a city, ZIP code, or state level), so that a particular location of a user cannot be determined.
- location information such as to a city, ZIP code, or state level
- the user may have control over how information is collected about the user and used by the various components of the system.
- modules, routines, features, attributes, methodologies and other aspects of the disclosure can be implemented as software, hardware, firmware or any combination of the three.
- a component an example of which is a module, of the specification is implemented as software
- the component can be implemented as a standalone program, as part of a larger program, as a plurality of separate programs, as a statically or dynamically linked library, as a kernel loadable module, as a device driver, and/or in every and any other way known now or in the future to those of ordinary skill in the art of computer programming.
- the disclosure is in no way limited to implementation in any specific programming language, or for any specific operating system or environment. Accordingly, the disclosure is intended to be illustrative, but not limiting, of the scope of the specification, which is set forth in the following claims.
Abstract
Description
- Mobile is clearly overtaking desktop for user attention. Chat is where users spend a lot of their time or maybe most of their time on their mobile devices. In the meantime, as the contact lists of users become larger and larger or even unmanageable in social networks, users get increasingly worried about privacy and start to move more and more information sharing to chat conversations. As a result, more of the information we care about is now contained in our conversations. An approach to handle conversations in a more intuitive and efficient way is desirable.
- Users share a lot of information every day, for example, times, locations, places, people, events, videos. However, most of the information they share is static. Users need to go somewhere else to get more information or complete an action. For example, users are talking about going to a theater to watch a movie, but need to check the website of the theater to book tickets.
- Users reply to messages either by typing, which can be especially hard on a touch screen of a mobile device, or by copying and pasting from other places where users find answers. Neither provides a good experience for user reply.
- Users lose track of things they share in conversations. The conversations may not be easily searchable, for example, a user may need to scroll up and down from a lot of search results to find a piece of information the user really wants.
- Additionally, there is no easy way to gain insights from conversations, to gauge context or sentiment, for example. There is also no information feed from a conversation to a different application.
- The present disclosure relates to systems and methods for identifying an entity from a message exchange thread (also referred to herein as a “conversation”), and generating a suggestion for presentation to participant(s) of the conversation via computing device(s) of the participant(s), where the suggestion is a suggestion for the participant(s) to take an action on the entity. In some implementations, an entity is a thing or a concept that is singular, well-defined, and distinguishable. For example, an entity may be a person, place, item, idea, or any combination thereof.
- In some implementations, the suggestion is directed toward the entity based on identifying the entity from one or more messages of the message exchange thread. In some of those implementations, one or more contextual indicators of the entity are also determined, the contextual indicators are utilized to determine whether the entity is actionable, and the suggestion is provided for presentation to participant(s) only when it is determined that the entity is actionable. The entity may be determined to be actionable by determining whether the entity is, in a context of the message exchange thread, where a user is going to take an action on the entity. Various contextual indicators may be utilized such as contextual indicators that are based on content external to the message exchange thread itself (e.g., prior electronic messages of participants in prior message exchange threads), contextual indicators that are based on natural language processing of message(s) (of the message exchange thread and/or prior message exchange thread(s)), contextual indicators that are based on conversation flow of the message exchange thread, contextual indicators that are based on sentiment determined based on message(s) (of the message exchange thread and/or prior message exchange thread(s)), etc. Additional and alternative contextual indicators are described in more detail herein. Providing suggestions only when it is determined (based on contextual indicators) that the entity is actionable may prevent participant(s) from being distracted by irrelevant suggestions and/or may conserve various computational resources by not transmitting and/or providing for presentation, irrelevant suggestions. For instance, suggestions may be provided only when they are determined to be contextually relevant, which, when compared to providing suggestions without regard to contextual relevance, may lead to a decrease in the providing of suggestions and a corresponding conservation of computational resources. Also, some implementations of providing suggestions according to techniques described herein may be of particular benefit to users that have low dexterity, or users who otherwise have difficulties making user inputs to a device. For at least these users, the incorporation of the selectable suggestions into the message exchange thread may increase the reliability and speed of use of the device, e.g. by saving the user making errors due to low dexterity.
- In some implementations, the suggestion is a selectable suggestion. In some of those implementations, in response to selection of the suggestion by a participant of the conversation, the suggestion (and/or related content) may be incorporated into a transcript of the conversation and/or a computer-based action directed toward the entity may be performed (e.g., within the message exchange thread and/or separate from the message exchange thread). For example, the suggestion may initially be provided as a non-static graphical element for presentation to one or more of the participants and, only upon selection of the suggestion by one or more of the participants, is the suggestion (and/or related content) statically incorporated into a transcript of the conversation. For instance, once statically incorporated the suggestion may form part of the transcript and continue to be viewed (e.g., by scrolling) in the conversation even after further messages have been submitted for inclusion in the transcript of the conversation. Also, for instance, once statically incorporated the suggestion may be indexed in association with the conversation enabling participants to search for the conversation in the future based on the suggestion. In some implementations where the suggestion is selectable, it may include an affirmative interface element and a negative interface element. In response to selection(s) of the affirmative interface element, the suggestion may be incorporated in the transcript and in response to selection(s) of the affirmative interface element the suggestion may be discarded without static incorporation of the suggestion into the transcript.
- In some implementations, providing contextually relevant suggestions during an ongoing message exchange thread may enable participants to add the suggestions (or related content) to the message exchange thread in a simple manner (e.g., via a single-tap and/or other single selection interface action). Additionally or alternatively, contextually relevant suggestions may provide participant(s) with content that is directed to a contextually relevant entity, without requiring the participant(s) to switch from an application rendering the message exchange thread to another application in order to acquire such content. For example, providing a suggestion for presentation via a message exchange client and/or incorporating content based on the suggestion (e.g., in response to a user selection of the suggestion) into a transcript of a message exchange thread may obviate the need to switch from the message exchange client to acquire such content. This may reduce the use of certain computational resources that would otherwise be consumed in switching to another application to satisfy the informational needs. For example, switching to another application may require usage of processor, memory, and/or battery resources via launching and/or surfacing of the application. Further, switching to another application to obtain content in lieu of obtaining the content in a message exchange thread may increase the amount of time a participant needs to spend obtaining the content—which may lead to a corresponding increase in consumption of computational resources in obtaining the content.
- Moreover, in implementations where participant(s) are presented with the option of whether to statically incorporate a suggestion in a transcript of a conversation, the participant(s) may be presented with contextually relevant suggestions, but still be allowed to control whether those suggestions form part of the conversation. This may mitigate clutter in user interfaces that render message exchange threads and/or may reduce usage of various computational resources (e.g., reduce storage space required to index or otherwise store a transcript of a message exchange thread since all suggestions are not automatically stored).
- In some implementations, a method implemented by one or more processors is provided and includes receiving an electronic message submitted by a first user for display in a transcript of a message exchange thread. The electronic message is submitted in response to user interface input provided by the first user via a client device of the first user. The message exchange thread is between at least the first user and a second user via a first message exchange client of the first user and a second message exchange client of the second user. The method further includes: identifying an entity from the electronic message, determining contextual indicators of the entity, and determining whether the entity is actionable based on the contextual indicators. The method further includes, responsive to determining that the entity is actionable: providing, for presentation via at least one of the first message exchange client and the second message exchange client, a suggestion that is directed to the entity.
- These and other implementations may optionally include one or more of the following features.
- In some implementations, responsive to determining that the entity is actionable, the suggestion is provided for presentation to the second user via the second message exchange client, but is not provided to the first user. In some of those implementations, the method further includes: receiving an affirmative selection of the suggestion by the second user via the second message exchange client; and responsive to the affirmative selection, providing content based on the suggestion for presentation to the first user via the first message exchange client. In some versions of those implementations, the content based on the suggestion is the suggestion itself. Some of these implementations thus only initially present a subset of participants of a message exchange thread with a suggestion, and further only present content based on that suggestion to other participant(s) not of the subset in response to affirmative selection of the suggestion by participant(s) of the subset. This may prevent consumption of various computational resources of client devices of the other participant(s) not of the subset by preventing provision of suggestions and/or content in situations where affirmative selection is not provided.
- In some implementations, responsive to determining that the entity is actionable the suggestion is provided for presentation without incorporation of the suggestion in the transcript of the message exchange thread. In some of those implementations, the method further includes: receiving an affirmative selection of the suggestion; and responsive to the affirmative selection, incorporating content that is based on the suggestion in the transcript of the message exchange thread. Some of these implementations thus only incorporate, into a transcript of a message exchange thread, content that is based a suggestion in response to affirmative selection of the suggestion. This may prevent consumption of various computational resources, such as resources required to store the transcript and/or resources required to provide and/or render the content in the message exchange thread.
- In some implementations, responsive to determining that the entity is actionable the suggestion is provided for presentation without incorporation of the suggestion in the transcript of the message exchange thread, and the suggestion includes an affirmative interface element and a negative interface element. In some of those implementations, the method further includes: monitoring for selection of either the affirmative interface element or the negative interface element; and incorporating content that is based on the suggestion in the transcript of the message exchange thread only in response to selection of the affirmative interface element. Some of these implementations thus only incorporate, into a transcript of a message exchange thread, content that is based a suggestion in response to affirmative selection of the suggestion. This may prevent consumption of various computational resources, such as resources required to store the transcript and/or resources required to provide and/or render the content in the message exchange thread.
- In some implementations, the method further includes: responsive to determining that the entity is actionable: transmitting the entity to a third-party server; and receiving the suggestion from the third-party server in response to transmitting the entity.
- In some implementations, determining the contextual indicators includes determining at least one contextual indicator based on a separate prior message exchange thread that involves at least one of the first user and the second user. In some of those implementations, the at least one contextual indicator is based on sentiment expressed by at least one of the first user and the second user in one or more prior messages of the prior message exchange thread. In some versions of those implementations, the sentiment is directed to the entity and determining the at least one contextual indicator includes determining the at least one contextual indicator based on the sentiment being directed to the entity.
- In some implementations, determining the contextual indicators includes determining at least one contextual indicator based on performing a sentiment analysis of a prior message of the first user or the second user. The prior message is in the message exchange thread or in a prior message exchange thread. In some of those implementations, performing the sentiment analysis is based at least in part on a non-textual graphical element included in the prior message. In some versions of those implementations, the prior message is in the prior message exchange thread and the at least one contextual indicator is selected based on the sentiment being directed toward the entity in the prior message.
- In some implementations, the suggestion is provided for presentation to the second user and the contextual indicators are based on a prior message of the first user. In some of those implementations, the prior message is submitted by the first user in a prior message exchange thread that does not involve the second user.
- In some implementations, the method further includes performing natural language analysis on the at least one electronic message based on a machine learning model, and identifying the entity that is actionable from the electronic message and determining the contextual indicators of the entity are based on the natural language analysis.
- In some implementations, the method further includes tracking conversation flows from each participant of the message exchange thread to create tracking information, and generating the contextual indicators based on the tracking information.
- In some implementations, the method further includes determining the suggestion using a trained machine learning model and the contextual indicators. In some of those implementations, the method further includes: receiving a user reaction to the suggestion provided for the entity; generating a training example with training example input based on the contextual indicators and with training example output based on the user reaction; and revising the trained machine learning model based on further training the trained machine learning model based on the training example.
- In some implementations, the method further includes indexing, in a computer readable medium, the message exchange thread based on the contextual indicators.
- Other implementations these and other methods may include corresponding systems, apparatus, and computer programs, configured to perform the actions of the methods, encoded on computer storage devices.
- In general, other implementations of the subject matter described in this disclosure may be embodied in methods that include receiving, using one or more processors, at least one conversation message from a conversation, identifying, using one or more processors, an entity that can be actionable from a conversation message, determining, using one or more processors, contextual indicators of the entity, determining, using one or more processors, whether the entity is actionable based on the contextual indicators, and responsive to the entity being actionable, providing a suggestion to a user to take an action on the entity.
- These and other implementations may each optionally include one or more of the following features. For instance, the features may include performing a natural language analysis on the at least one conversation message based on a machine learning model and wherein identifying the entity that can be actionable from the conversation message and determining the contextual indicators of the entity are based on the analysis. The features may include tracking conversation flows from each participant of the conversation and refining the contextual indicators based on the tracking information. The features may include determining the suggestion for the user to take an action on based on a machine learning model and the contextual indicators. The features may include receiving, from the user, an indication to mark the entity as actionable, sending the user indication as a training signal to a machine learning model, searching for information relevant to the entity and providing the information to the user. The features may include receiving data from a variety of sources including queries and document retrievals, extracting features from the data, generating a machine learning model based on the extracted features, receiving a user action, the user action including a reaction to the suggestion provided for the entity, and training the machine learning module based on the user action. The features may include feeding entity information to an application, the entity information including participants of the conversation, generating the suggestion by the application and providing the suggestion to the participants of the conversation. The features may include detecting a question for the user in the conversation, the question being related to the entity, determining a potential user reply to the question, and providing the potential user reply in a one-tap form to the user. The features may include organizing the at least one conversation based on the contextual indicators and indexing the at least one conversation.
- Other implementations these and other methods may include corresponding systems, apparatus, and computer programs, configured to perform the actions of the methods, encoded on computer storage devices.
- Some of the above and/or other implementations may be advantageous in a number of respects. For instance, a suggestion may be generated based on a machine learning model that learns over time to understand the semantics of a conversation and derives meaning from the real time conversation, and is therefore efficient and accurate. The suggestion may also generated based on contextual analysis including sentiment analysis and conversation flows. An appropriate suggestion is generated under an appropriate contextual condition, and is therefore intelligent. For example, no celebration message will be sent to a sad user. Moreover, the suggestion may offer rich context and next step(s) that can be directly used for a user to complete an action. Further, important suggestions and updates may be provided by other services in one place for all participants of a conversation. Also the organization and summarization mechanism may allow users to easily look back at a meaningful trail of information shared in conversations.
- It should be understood, however, that the above features and advantages are not all-inclusive and many additional features and advantages are contemplated and fall within the scope of the present disclosure. Moreover, it should be understood that the language used in the present disclosure has been principally selected for readability and instructional purposes, and not to limit the scope of the subject matter disclosed herein.
- The specification is illustrated by way of example, and not by way of limitation in the figures of the accompanying drawings in which like reference numerals are used to refer to similar elements.
-
FIG. 1 is a block diagram illustrating an example system for identifying an entity from a conversation and generating a suggestion for a user to take an action on the entity. -
FIG. 2 is a block diagram illustrating an example suggestion application. -
FIG. 3 is a flowchart of an example method for identifying an entity from a conversation and generating a suggestion for a user to take an action on the entity. -
FIG. 4 is a flowchart of a specific example method for identifying an entity from a conversation and generating a suggestion for a user to take an action on the entity. -
FIG. 5 is a flowchart of an example method for manually determining an actionable entity from a conversation. -
FIG. 6 is a flowchart of an example method for generating and updating a machine learning model. -
FIG. 7 is a flowchart of an example method for feeding entity information from a first application to a second application to generate a suggestion. -
FIG. 8 is a flowchart of an example method for predicting a potential user reply in a conversation. -
FIG. 9 is a flowchart of an example method for selectively retrieving conversations and/or conversation messages in response to search requests. -
FIG. 10 includes graphic representations of example conversation interfaces showing a suggestion. -
FIG. 11A is a graphic representation of an example conversation interface showing a conversation generated by a first application. -
FIG. 11B is a graphic representation of an example conversation interface showing a suggestion generated by a second application. -
FIG. 12 is a graphic representation of an example conversation interface showing one-tap replies. -
FIG. 13 is a graphic representation of an example conversation interface showing a conversation report. -
FIG. 14 is a graphic representation of an example conversation interface showing a conversation summary. -
FIG. 15 includes graphic representations of example conversation interfaces showing serial presentation of suggestions. - Systems, methods and interfaces for automatic suggestion generation are disclosed. In some implementations, the systems, methods and interfaces for automatic suggestion generation are based on conversation analysis. When a user sends a message in a conversation, the message is analyzed to determine one or more entities that a user can take an action on. Other messages of the conversation or even other conversations involving the user and/or other participant(s) of the conversation are then analyzed to determine the contextual indicators. A suggestion is generated based on the contextual indicators. For example, if two users want to meet at a store, a map and a calendar could be suggested to direct the users to the store and set up a meeting time. Based on the contextual indicators, the map may only indicate directions to a particular store close to both users, and the calendar may highlight the available time of both users. In some instances, the suggestion offers next steps of the action.
- The suggestion generation process is automatic in many aspects. For example, implementations of the present disclosure determine whether to generate a suggestion, and: when and where in the conversation to insert the suggestion; and/or when to recommend the suggestion to one or more participants for potential insertion in the conversation. For instance, for a question “meet at coffee house?” from user A to user B, a map that includes the coffee house may be suggested to one or both of the two users if user B answers “great!” to the question, while the map suggestion will not be provided to either of the two users if user B answers “I'd like to go, but . . . ” In some implementations, different versions of the suggested map may be provided to each of the users, such as a first version provided to the first user with directions to the coffee house from the first user's current location and a second version provided to the second user with directions to the coffee house from the second user's current location. Implementations of the present disclosure also determine what suggestion is appropriate, and/or when it is appropriate to provide the suggestion, based on contextual indicators. For example, if a user just received bad news (e.g., as determined based on analysis of another conversation of the user), it may be determined that a celebration suggestion is inappropriate for providing to the user in a conversation. As another example, if it is determined a user hates something (e.g., based on sentiment expressed by the user about such thing in the conversation and/or a prior conversation), it may be determined that a suggestion of such thing is not appropriate for providing to the user in the conversation.
- While the systems, methods and interfaces of the present disclosure are now described in the context of a client-server system, it should be understood that the systems, methods and interfaces can be applied to systems other than a single client-server system operably connected over a network. For example, client devices, a third-party server, an email server, and/or a server where a suggestion application is stored may provide some or all of the functionality described herein and may employ a cluster of servers in order to provide such functionality. As an additional example, client hardware may be a mobile phone or tablet device.
- Turning now to the figures,
FIG. 1 illustrates a block diagram of asystem 100 for identifying an entity from a conversation and generating a suggestion for a user to take an action on the entity. The illustratedsystem 100 includesclient devices users server 106, anemail server 108, a third-party server 110 and asearch server 112. In the illustrated example, these entities are communicatively coupled via anetwork 114. InFIG. 1 and the remaining figures, a letter after a reference number, for example, “102 a” is a reference to the element having that particular reference number. A reference number in the text without a following letter, for example, “102” is a general reference to different instances of the element bearing that reference number. Although only twoclient devices client devices 102 n is available to arbitrary number ofusers 104 n. - The
network 114 can be a conventional type, wired or wireless, and may have numerous different configurations including a star configuration, token ring configuration or other configurations. Furthermore, thenetwork 114 may include a local area network (LAN), a wide area network (WAN) (e.g., the Internet), and/or other interconnected data paths across which multiple devices may communicate. In some instances, thenetwork 114 may be a peer-to-peer network. Thenetwork 114 may also be coupled to or includes portions of a telecommunications network for sending data in a variety of different communication protocols. In some other instances, thenetwork 114 includes Bluetooth communication networks or a cellular communications network for sending and receiving data including via short messaging service (SMS), multimedia messaging service (MMS), hypertext transfer protocol (HTTP), direct data connection, Wireless Application Protocol (WAP), email, etc. AlthoughFIG. 1 illustrates onenetwork 114 coupled to theclient devices email server 108, the third-party server 110 and thesearch server 112, in practice one ormore networks 114 can be connected to these entities. - The
client devices FIG. 1 are used by way of example. Although only two client devices 102 are illustrated, the disclosure applies to a system architecture having any number of client devices 102. In the illustrated implementation, theusers client device signal line client devices network 114 viasignal line server 106, the email sever 108, the third-party server 110 and thesearch server 112. For example, theclient device 102 a sends a conversation message (also referred to herein as an “electronic message”) to theserver 106. Theserver 106 processes the conversation message and generates a suggestion based on the conversation message. In some instances, theserver 106 receives one or more conversation messages and generates the suggestion based on the one or more conversation messages. In other instances, theserver 106 also uses other inputs (e.g., prior user activities, user profile information, etc.) to generate the suggestion. Authorization is obtained prior to the use of any profile information or personal information of the user. Theclient device 102 a receives the suggestion without unintended delays from theserver 106. For example, the client device 102 receives a suggestion including an arrival time and a status of a flight right after sending a message “has John's flight landed?” In some instances, a delay may be desirable, for example, when a suggestion best fits at a future time in the conversation or when theserver 106 waits for more conversation messages for context and confirmation to send the suggestion. For example, when theclient device 102 a sent a message “let's grab coffee” to theclient device 102 n, rather than instantly suggesting a map of coffee shops, theserver 106 may wait for a message from theclient device 102 n (e.g., “I hate coffee”) before generating and/or providing the suggestion. - In some instances, the client device 102 can be any computing device that includes a memory and a processor. For example, the client device 102 can be a laptop computer, a desktop computer, a tablet computer, a mobile telephone, a personal digital assistant, a mobile email device, a portable game player, a portable music player, a television with one or more processors embedded therein or coupled thereto or any other electronic device capable of accessing the
network 114, etc. - The
server 106 can be a hardware server that includes a processor, a memory and network communication capabilities. Theserver 106 is communicatively coupled to thenetwork 114 viasignal line 122. In some instances, theserver 106 sends and receives data to and from one or more of the client devices 102, theemail server 108, the third-party server 110 and thesearch server 112 via thenetwork 114. Theserver 106 optionally includes asocial network application 124. - A social network can be a network where the users may be connected by common feature(s). The common feature(s) may include relationships/connections, e.g., friendship, family, work, an interest, etc. The common feature(s) may be provided by one or more social networking systems including explicitly defined relationships and relationships implied by social connections with other online users, where the relationships form a social graph. In some examples, the social graph can reflect a mapping of these users and how they can be related. The
social network application 124 in theserver 106 manages the social network by handling registration of users, publication of content (e.g. posts, comments, photos, links, check-ins, etc.), hosting multi-user communication sessions, managing of groups, managing different sharing levels, updating the social graph, etc. Thesocial network application 124 registers a user by receiving information such as a username and password and generates a user profile that is associated with the user and stored as part of the social graph. In some instances, the user profile includes additional information about the user including interests (e.g. soccer, reading, food, subscriptions, etc.), activities (e.g. search history, indications of approval, posts, comments, multi-user communication sessions, etc.), demographics (e.g. age, ethnicity, location, etc.) and profile rating and reputation (e.g., intelligence rating, humor rating, etc.). Thesystem 100 may includemultiple servers 106 that include traditional social network servers, email servers, micro-blog servers, blog servers, forum servers, message servers, etc. - Furthermore, the
server 106 and thesocial network application 124 may be representative of one social network. There may be multiple social networks coupled to thenetwork 114, each having its own server, application and social graph. For example, a first social network may be more directed to business networking, a second may be more directed to or centered on academics, and a third may be more directed to local business. - The
email server 108 can be a hardware server that includes a processor, a memory and network communication capabilities. Theemail server 108 is communicatively coupled to thenetwork 114 viasignal line 126. In some instances, theemail server 108 exchanges user data with theserver 106 so that theserver 106 can generate a suggestion for an entity in a conversation message based on the user data. For example, when a user talks about buying a toy in a conversation, theserver 106 can communicate with theemail server 108 to get the user's purchase history (e.g., from purchase receipts for toys in emails), and determines a suggestion based at least in part on the purchase history. Authorization is obtained prior to the use of any purchase history or other personal information of the user. - The third-
party server 110 can be a computing device that includes a processor, a memory and network communication capabilities. The third-party server 110 is coupled to thenetwork 114 viasignal line 128. The third-party server 110 sends and receives data to and from the client device 102, theserver 106 and thesearch server 112 of thesystem 100 via thenetwork 114. The third-party server 110 may store different applications. For example, theserver 106 can receive conversation messages from a conversation application stored on the third-party server 110. In another example, theserver 106 feeds entity information to an application stored on the third-party server 110 (e.g., via an application programming interface (API) of the third-party server 110) so that the application can generate a suggestion based on the entity information. Multiple third-party servers may be provided and theserver 106 may select an appropriate third-party server (for providing entity information and receiving a responsive suggestion) based on various factors. For example, a semantic type of the entity and/or action(s) mentioned in association with the entity in a conversation may be utilized to select a given third-party server in lieu of other available third-party servers. For instance, third-party server 110 may provide suggestions for restaurant reservations and may be selected based on an entity being of a “restaurant” semantic type and/or based on “reserve”, “book”, and/or other “reservation” terms being mentioned in association with the entity. Moreover, in some implementations contextual indicators described herein may be utilized to determine whether an entity is actionable, and theserver 106 may optionally provide entity information to a third-party server only when it is determined the entity is actionable. This may reduce network traffic by preventing some transmissions of entity information for an entity to a third-party server when the entity is not deemed actionable. - The
search server 112 can be a computing device that includes a processor, a memory and network communication capabilities. Thesearch server 112 is coupled to thenetwork 114 via signal line 130. Thesearch server 112 includes a search engine that provides a search result to a user responsive to a search request from the user. In some instances, theserver 106 communicates with thesearch server 112 to search for information related to an entity and generates a suggestion to take an action on the entity based on the information returned by thesearch server 112 in response to the searching. - In some instances, the
server 106 comprises asuggestion application 132 b. In other instances, thesuggestion application 132 b may additionally or alternatively be stored on the client device 102. For example, thesuggestion application 132 b may be a thin-client application that includes part of thesuggestion application 132 b on the client device 102 and part of thesuggestion application 132 b on theserver 106 to identify an entity from a conversation and generate a suggestion for a user to take an action on the entity. - The
suggestion application 132 b receives at least one conversation message from a conversation and identifies an entity from a conversation message. An entity can be a portion of a conversation message, for example, a person or an object in the conversation message. In some instances, thesuggestion application 132 b parses a conversation message based on analyzing the grammatical constituents of the conversation message and identifies one or more entities from the parsed conversation message. For example, thesuggestion application 132 b identifies that the message “great weather!” includes “great,” “weather” and ‘!” based on parsing the message, and determines a first entity “great” and a second entity “weather” from the message. - In some implementations, the
suggestion application 132 b further extends the analysis to the entire conversation or even other conversations (e.g., previous conversations, conversations from a third-party application) to determine contextual indicators. For example, from the message “would you like to meet at ABC coffee store?” and user profile information, thesuggestion application 132 b determines that an entity “ABC coffee store” is near the user's office. Authorization is obtained prior to the use of any profile information or personal information of the user. Other contextual indicators include sentiment indicators, conversation flows, tense of the message, recency of the message, the day and/or time at which the message was sent, the day and/or time associated with the entity, conversation metadata, etc. - In some implementations, the
suggestion application 132 b further determines whether an entity is actionable based on determining whether the entity is in a context of conversation where a user is going to take an action on the entity. For example, thesuggestion application 132 b determines the A entity in the message “I like A” is non-actionable, but determines that the A entity in the message “I am going to buy A” is actionable. Thesuggestion application 132 b determines whether an entity is actionable based on contextual indicators including conversation flows, tense, sentiment indicators (e.g., based on an emotion symbol), verbs used in the message, whether a question is asked in the message, conversation metadata, etc. If user A asks user B “meet at XYZ?,” thesuggestion application 132 b will only determine that the location “XYZ” is actionable after receiving user B's positive answer in the conversation flow. - In some implementations, the
suggestion application 132 b generates a suggestion for an actionable entity based on contextual indicators. For example, thesuggestion application 132 b uses the messages “I hate A restaurant,” “I like B restaurant,” “C restaurant is ok” from a first user as contextual indicators to determine a suggestion B when a second user invites the first user to go to dinner. For example, the suggestion may be directed to B restaurant and/or C restaurant, but not A restaurant, based on the corresponding sentiments expressed with respect to each of those entities in the messages. As described herein, the messages may be from the conversation in which the second user invites the first user to go to dinner and/or may be from other conversations, that may or may not include the second user. Further, and as also described herein, the suggestion B determined based on the first user's messages may be provided for presentation to the first user and/or the second user (if appropriate authorization is obtained). In other words, in some implementations the suggestion B may be generated based on the first user's messages, and provided for presentation to the second user. In some of those implementations, the suggestion based on the first user's messages may only be provided to the second user if it is determined the first user's messages are from conversation(s) that also included the second user. In some other implementations, the suggestion based on the first user's messages may be provided to the second user even if one or more of the first user's messages are from conversation(s) that do not include the second user. - In addition, in some implementations the
suggestion application 132 b may feed entity information to a separate application (e.g., hosted by third-party server 110) and, in response, get a suggestion from the separate application. Feeding entity information to a separate application may include transmitting the entity information to the separate application utilizing one or more networks, and optionally utilizing an API of the separate application. Receiving a suggestion in response to feeding the entity information may include receiving the suggestion over one or more networks in response to transmitting the entity information, and may optionally utilize an API (e.g., the same API utilized in transmitting the entity information). - As one example, if a user mentions weather in a conversation with other users, a weather service may send an hourly weather report to the users. For instance, the hourly weather report may be incorporated into a transcript of the conversation for viewing by all of the users and/or may be provided to the users via separate applications than the message exchange clients/applications utilized to engage in the conversation. In this way, the
suggestion application 132 b connects users with the separate application without the users manually installing the separate application on a client device and provides important suggestions in a place for presentation to all participants of a conversation (e.g., in a transcript of the conversation). In some instances, thesuggestion application 132 b additionally or alternatively predicts a possible reply for a user to answer a question in a conversation, and so saves the user time. In other instances, thesuggestion application 132 b additionally or alternatively organizes information of a conversation so that users can easily reference back to any information they want in the conversation. Various implementations of thesuggestion application 132 b are discussed in further detail herein, e.g. with reference toFIG. 2 . - Referring now to
FIG. 2 , an example of thesuggestion application 132 b is shown in more detail.FIG. 2 is a block diagram of acomputing device 200 that includes aprocessor 202,memory 204, acommunication unit 208, astorage 210 and asuggestion application 132 b according to some implementations. In some instances, thecomputing device 200 is aserver 106. In other instances, the computing device is a client device 102. In yet other instances, the computing device is a distributed computing device such as one that operates on bothserver 106 and client device 102. The components of thecomputing device 200 are illustrated inFIG. 2 as communicatively coupled by abus 206. - The
processor 202 includes some or all of an arithmetic logic unit, a microprocessor, a general purpose controller or some other processor array to perform computations and provide electronic display signals to a display device. Theprocessor 202 is coupled to thebus 206 for communication with the other components.Processor 202 processes data signals and may include various computing architectures including a complex instruction set computer (CISC) architecture, a reduced instruction set computer (RISC) architecture, or an architecture implementing a combination of instruction sets. AlthoughFIG. 2 includes a single processor, multiple processors may be included. The processing capability may be limited to supporting the display of images and the capture and transmission of images. The processing capability might be enough to perform more complex tasks, including various types of feature extraction and sampling. It will be obvious to one skilled in the art that other processors, operating systems, sensors, displays and physical configurations are possible. - The
memory 204 stores instructions and/or data that may be executed byprocessor 202. Thememory 204 is coupled to thebus 206 for communication with the other components. The instructions and/or data may include code for performing any and/or all of the techniques described herein. Thememory 204 may be a dynamic random access memory (DRAM) device, a static random access memory (SRAM) device, flash memory or some other memory device known in the art. In some instances, thememory 204 also includes a non-volatile memory or similar permanent storage and media, for example, a hard disk drive, a floppy disk drive, a CD-ROM device, a DVD-ROM device, a DVD-RAM device, a DVD-RW device, a flash memory device, or some other mass storage known in the art for storing information on a more permanent basis. - The
communication unit 208 transmits and receives data to and from at least one of: the client devices 102, theserver 106, theemail server 108, the third-party server 110, and thesearch server 112. Thecommunication unit 208 is coupled to thebus 206. For example, thecommunication unit 208 receives data including a conversation message from the client device 102 and transmits the data to theserver 106. Theserver 106 generates a suggestion based on the conversation message using asuggestion application 132 b stored on theserver 106 and transmits the suggestion to the client device 102. - In some instances, the
communication unit 208 includes a port for direct physical connection to theclient device 206 or to another communication channel. For example, thecommunication unit 208 includes an RJ45 port or similar port for wired communication with theclient device 206. In other instances, thecommunication unit 208 includes a wireless transceiver (not shown) for exchanging data with theclient device 206 or any other communication channel using one or more wireless communication methods, such as IEEE 1502.11, IEEE 1502.16, Bluetooth® or another suitable wireless communication method. - In some other instances, the
communication unit 208 includes a cellular communications transceiver for sending and receiving data over a cellular communications network such as via short messaging service (SMS), multimedia messaging service (MMS), hypertext transfer protocol (HTTP), direct data connection, wireless application protocol (WAP), e-mail or another suitable type of electronic communication. In still another instance, thecommunication unit 208 includes a wired port and a wireless transceiver. Thecommunication unit 208 also provides other conventional connections to thenetwork 114 for distribution of files and/or media objects using standard network protocols such as TCP/IP, HTTP, HTTPS and SMTP as will be understood to those skilled in the art. - The
storage 210 is a non-transitory memory that stores data for providing the functionality described herein. Thestorage 210 is coupled to thebus 206. Thestorage 210 may be a dynamic random access memory (DRAM) device, a static random access memory (SRAM) device, flash memory or some other memory devices. In some instances, thestorage 210 also includes a non-volatile memory or similar permanent storage and media including a hard disk drive, a floppy disk drive, a CD-ROM device, a DVD-ROM device, a DVD-RAM device, a DVD-RW device, a flash memory device, or some other mass storage for storing information on a more permanent basis. - In some instances, the
storage 210 stores social network profiles associated with users in a social network, conversation messages in a conversation, actionable entities identified from the conversation, contextual indicators determined from the conversation and/or other conversations, suggestions generated based on the actionable entities of the conversation, etc. - In some instances, the
suggestion application 132 b comprises acontroller 220, aconversation management module 222, amodel builder 224, aconversation analyzer 226, a determiningengine 228, asuggestion generator 230, and a user interface engine 236. - The
controller 220 can be code and routines for receiving data and transmitting the data to an appropriate component. In some instances, thecontroller 220 can be a set of instructions executable by theprocessor 202 to provide the functionality described below for receiving and transmitting the data. In other instances, thecontroller 220 can be stored in thememory 204 of thecomputing device 200 and can be accessible and executable by theprocessor 202. In some instances, thecontroller 220 can be adapted for cooperation and communication with theprocessor 202 and other components of thecomputing device 200. - In some instances, the
controller 220 receives data via thecommunication unit 208 and transmits the data to the appropriate module of the suggestion application 132. For example, thecontroller 220 receives user information from the client device 102 via thecommunication unit 208 and transmits the user information to themodel builder 224 to build and update a machine learning model. In another example, thecontroller 220 receives contextual indicators of an entity in a conversation from theconversation analyzer 226 and a determination that the entity is actionable from the determiningengine 228, and transmits the contextual indicators of the actionable entity to thesuggestion generator 230 to generate a suggestion for a user to take an action on the entity. - The
conversation management module 222 can be code and routines for generating and managing a conversation session. In some instances, theconversation management module 222 can be a set of instructions executable by theprocessor 202 to provide the functionality described below for generating and managing a conversation session. In other instances, theconversation management module 222 can be stored in thememory 204 of thecomputing device 200 and can be accessible and executable by theprocessor 202. In some instances, theconversation management module 222 can be adapted for cooperation and communication with theprocessor 202 and other components of thecomputing device 200. - In some instances, the
conversation management module 222 generates a conversation session and instructs the user interface engine 236 to generate graphical data for displaying the conversation session in a conversation interface. A conversation session or a conversation is a multi-user communication session that comprises at least one of a video conference, an audio conference, and instant messaging. A conversation includes at least one conversation message. A conversation message may include a video message, an audio message, a text message, a photo, a hyperlink, etc. In some instances, theconversation management module 222 generates a conversation by interacting with audio and video capture devices of the client device 102 to obtain a real-time audio-video synchronous communication data stream of the user 104. For example, theconversation management module 222 interfaces with a software driver stored on the client device 102 that controls the functionality of a microphone and a video camera (e.g., a webcam or forward facing camera) included in the client device 102, and generates a conversation based on the audio-video data captured by the client device 102. The audio-video data can be encoded using various audio and video codecs. In other instances, theconversation management module 222 generates a conversation that allows users participating in the conversation to share documents, a scratchpad, and/or computing device screens with one another. - In some instances, the
conversation management module 222 receives a suggestion automatically generated by thesuggestion generator 230 based on a conversation message of a conversation, and communicates with the user interface engine 236 to generate graphical data for displaying the suggestion along with the conversation message in the conversation. In other instances, theconversation management module 222 provides one or more applications or services in a conversation and instructs the user interface engine 236 to generate one or more tools in a conversation interface for a user to interact with the one or more applications or services. For example, theconversation management module 222 instructs the user interface engine 236 to generate a search box in a conversation interface for a user to search conversations based on topics, time, etc. - In some instances, the
conversation management module 222 also communicates with other servers (e.g., a third-party server 110) via thecommunication unit 208 to receive conversation messages from other conversations. The other conversations may be generated by other applications on the other servers. Theconversation management module 222 forwards the conversation messages to other components (e.g., 224-236) of thesuggestion application 132 b to generate a suggestion. In some instances, theconversation management module 222 also stores the conversation messages instorage 210. - The
model builder 224 can be code and routines for generating and/or updating a machine learning model. In some instances, themodel builder 224 can be a set of instructions executable by theprocessor 202 to provide the functionality described below for generating and/or updating a machine learning model. In other instances, themodel builder 224 can be stored in thememory 204 of thecomputing device 200 and can be accessible and executable by theprocessor 202. In some instances, themodel builder 224 can be adapted for cooperation and communication with theprocessor 202 and other components of thecomputing device 200. - The
model builder 224 receives information from the conversation generated and received by theconversation management module 222, extracts features from the information and generates a model based on the extracted features. The model includes items relevant to users such as a location, a list of interests, etc. An interest can be explicit from a user's indication of what he or she likes. An interest can also be information inferred from a user's activities. For example, if a user talks about hiking equipment in several conversations, themodel builder 224 infers that the user is interested in outdoor activities. In some instances, themodel builder 224 also receives user information from a variety of sources including, for example, queries, document retrieval, user interactions, emails, etc., and builds a model based on the information. For example, themodel builder 224 includes a user's search history into the model. In another example, upon receiving a collection of documents returned for a query and ranks associated with each document, themodel builder 224 builds the model to include the ranks to show the relevancy between a document and the query. - In some instances, the
model builder 224 generates the model to include user statistics and user behavior pattern data, for example, how often a user joins a conversation, with whom a user talks most in conversations, what time a user likes to have a conversation with others, whether a user likes to share photos in a conversation, what kind of photos the user likes to share, etc. In other instances, themodel builder 224 generates the model to include a sequence of weights and multipliers that are used to make predictions about a user action. In some instances, themodel builder 224 determines weights and multipliers based on social relationships between users. For example, themodel builder 224 receives conversation messages from theconversation management module 222. The conversation messages include a question raised in a conversation and replies of a first user and a second user to the question. Themodel builder 224 communicates with thesocial network application 124 to determine that the first user is a close friend of a third user and the second user does not know the third user personally based on the social graph managed by thesocial network application 124. Themodel builder 224 assigns a higher weight to the first user than to the second user. Later when the model is used to predict the user's behavior based on the actions of similar users, the reply of the first user will weigh more in predicting a potential answer of the third user to the question. In other instances, themodel builder 224 determines weights and multipliers based on recency of conversation messages. For example, if a user talked about game A in a conversation last month and talked about game B in a conversation this month, themodel builder 224 determines a higher weight for game B than game A when predicting which game forum the user would subscribe to. In some other instances, themodel builder 224 determines weights and multipliers based on other factors including how often a user joins a conversation, what time a user likes to have a conversation with others, etc. - In some instances, the
model builder 224 generates a model and maps a user to one or more categories based on the model. The category can be an entity identified by theconversation analyzer 226 as described below. For example, themodel builder 224 determines that a user likes playing basketball, and categories the user into a category “sportsman” and a category “basketball.” Or themodel builder 224 categories a user that talks with other users every day into a category “talker.” - In some implementations the
model builder 224 generates a machine learning model. Themodel builder 224 collects data from a variety of sources including at least one conversation and uses a machine learning algorithm to learn certain properties from the collected data. The machine learning algorithms may include, but are not limited to, regression techniques, instance-based algorithms, decision trees, Bayesian algorithms, kernel methods, clustering methods, association rule learning, artificial neural networks, etc. Themodel builder 224 trains the model over time to understand the semantics of a conversation and derives meaning from the real time conversation. As the model evolves, the efficiency and accuracy of using the model in suggestion making, behavior prediction, etc., are improved. - The
model builder 224 uses user actions as training signals to train the model. In some instances, themodel builder 224 tracks actions of a user in previous conversations and trains the model to learn from those user actions. For example, themodel builder 224 learns that a user never buys anything that was offered in a conversation interface with a purchase tool or learns that two users always choose a particular coffee house as their meeting spot from the previous conversations between them. In other instances, themodel builder 224 tracks the non-chat actions of a user and trains the model to learn from the non-chat actions. For example, themodel builder 224 learns a user's favorite chocolate brand from the user's purchase history. Based on what was learned by the model, a suggestion can be made for a user. For example, when a user talks about flying to Florida for a vacation in a conversation, a suggestion of flight itineraries (e.g., a time and airline) can be made to the user since themodel builder 224 learns that the user likes this airline and often takes the flights around that time from previous actions of users. In some instances, themodel builder 224 receives a user reaction to a suggestion provided to the user in a conversation and in turn uses the reaction (and other data from the conversation) as a training signal to train the model (e.g., uses the reaction to generate a training example that is used to refine the model through further training). Continuing with the above example, if the user drops the flight itinerary suggestion or explicitly states a dislike of the airline (e.g., by writing “I do not like this airline”) in a conversation, themodel builder 224 may take this negative reaction as a signal to train the model. As a result, a different airline may be suggested to the user in the future. - In some instances, the
model builder 224 updates the model when receiving a request. For example, thesuggestion generator 230 requests themodel builder 224 to update the model when generating a suggestion using the model. In other instances, themodel builder 224 periodically (once an hour, once a day, once a week, etc.) and/or non-periodically receives data and/or non-periodic data from a variety of sources for updating the model and updates the model accordingly. In some other instances, themodel builder 224 updates the model once a user action in a conversation, a non-chat action, or a user reaction is received. - The conversation analyzer 226 can be code and routines for analyzing a conversation to identify an entity that a user may take an action on from a conversation message and determine contextual indicators of the entity in the conversation. In some instances, the
conversation analyzer 226 can be a set of instructions executable by theprocessor 202 to provide the functionality described below for analyzing a conversation to identify an entity that a user may take an action on from a conversation message and determine contextual indicators of the entity in the conversation. In other instances, theconversation analyzer 226 can be stored in thememory 204 of thecomputing device 200 and can be accessible and executable by theprocessor 202. In some instances, theconversation analyzer 226 can be adapted for cooperation and communication with theprocessor 202 and other components of thecomputing device 200. - The conversation analyzer 226 processes one or more conversation messages of a conversation received from the
conversation management module 222 based on a machine learning model generated by themodel builder 224. In some instances, theconversation analyzer 226 analyzes each conversation message using natural language processing (NLP) techniques. In some instances, theconversation analyzer 226 parses the conversation message and implements NLP entity extraction on the parsed conversation message to obtain an entity. The entity can be a portion of a conversation message, for example, a person or an object in the conversation and the entity can be at various levels of granularity (e.g., a restaurant, an Italian restaurant, a particular Italian restaurant). In some instances, the NLP entity extraction is based on a semantic annotation for text (SAFT) library that works in the machine learning model. For example, themodel builder 224 receives a flight number, builds an annotator into the model to recognize the flight number in a conversation based on the general format of flight numbers, and trains the annotator. When this flight number is mentioned in a conversation message, theconversation analyzer 226 communicates with themodel builder 224 to use the annotator to determine that one entity in the conversation message is the flight number. In another example, theconversation analyzer 226 parses and extracts entities “beautiful,” “weather” and “Store A” from a conversation message. The conversation analyzer 226 then determines that “beautiful” is an adjective, “weather” is a noun, and “Store A” is a location and a noun based on the language semantic analysis using the SAFT library. An entity identified by theconversation analyzer 226 can be actionable or non-actionable depending on whether a user can take an action on it. The determination whether an entity is actionable or non-actionable is described in more detail with reference to the determiningengine 228. - In combination with (e.g., before, after, and/or during) identifying an entity, the
conversation analyzer 226 determines contextual indicators of the entity in the conversation. For example, for a location entity, theconversation analyzer 226 determines when the location was mentioned in the conversation, who mentioned the location in the conversation, which content of the conversation included the location, which kind of content followed the location in the conversation, and/or other contextual indicators. In some instances, theconversation analyzer 226 analyzes multiple conversations (e.g., previous conversations, conversations generated by other applications) to determine contextual indicators of an entity in a conversation. - In certain implementations, the
conversation analyzer 226 performs NLP to determine the contextual indicators of an entity in a conversation. In some of those implementations, the NLP is based on the machine learning model generated by themodel builder 224 and may be more sophisticated than conventional NLP in many aspects. In some instances, theconversation analyzer 226 performs the NLP based on pattern matching in combination with user information of one or more users in a conversation. For example, theconversation analyzer 226 can detect the phrase “Basil Thai restaurant” from a conversation message based on pattern matching, and match that phrase to one or more particular restaurants named “Basil Thai” based on user information of one or more user(s) (e.g. “Basil Thai” restaurant(s) that are most proximal to location(s) of the user(s)). As another example, theconversation analyzer 226 can detect a particular “Coffee house” near user A from a conversation message based on pattern matching in combination with user information. In some implementations, using user information to select one or more particular entities may lead to improved suggestions. For example, based on “Basil Thai restaurant” without user information, 3 restaurants named “Basil Thai” may be identified and, if a driving direction is suggested to participant(s) in a conversation, the suggestion may include three maps to all three “Basil Thai restaurants”. The participant(s) then have to choose which map is relevant and accurate. On the other hand, where user information is utilized, only one relevant and accurate driving direction to a “Basil Thai restaurant” may be provided (e.g., the one that is most convenient to all participants of the conversation and/or the one most frequently visited by participant(s)). - In other instances, the
conversation analyzer 226 additionally or alternatively determines contextual indicators by performing sentiment analysis on a conversation message and associating the conversation message with a weight. For example, theconversation analyzer 226 receives messages “I hate coffee,” “tea is ok” and “coke is my favorite” from user A, and associates a most favorable to least favorable sentiment weight to the messages including coke, tea, and coffee, respectively. The weights indicate user A's beverage taste. In other words, the weights may each indicate a sentiment of user A with respect to each “beverage” entity corresponding to the entities of “coffee”, “tea”, and “coke”. The messages may be from a current conversation in which a suggestion is to be provided and/or from a prior conversation that includes the user (with or without other participants of the current conversation). In some instances, theconversation analyzer 226 assigns a positive number to indicate a positive sentiment, a negative number to indicate a negative sentiment, and a zero to indicate indifference. The conversation analyzer 226 may use the magnitude of the number as the weight or intensity of a sentiment and may assign the sentiment to a corresponding entity. For the above example, theconversation analyzer 226 weights a positive two, a positive one, and a negative two, to the messages including coke, tea and coffee, respectively. In some instances, theconversation analyzer 226 determines a sentiment from an emotion symbol and/or other non-textual element included in a conversation message and assigns a weight to the sentiment. For example, theconversation analyzer 226 may determine that a user is happy and excited from the message “mom is comingconversation analyzer 226 may determine an overall sentiment based on the weights and the number of the conversation messages. Such information become contextual indicators and contribute to generating a suggestion. For example, if a user says that “I wish mom is still hereconversation analyzer 226 determines that overall the user is not happy. As a result, a comedy movie instead of a tragedy movie may be suggested to cheer the user up. The sentiment analysis on a conversation therefore makes a suggestion more intelligent. - In certain examples, the
conversation analyzer 226 determines contextual indicators by taking more than one piece of conversation message for analysis. Standard and conventional conversational semantics may be generated, for example, “Barack Obama” in response to a query of “Who is the president of the USA?” in a conversation and to generate “Michelle Obama” in response to a query of “Who is the wife of Barack Obama?” in the conversation. Later when “him” and “her” are mentioned in the conversation, theconversation analyzer 226 references him with “Barack Obama” and references her with “Michelle Obama” using coreference resolution. The conversational NLP may be similar to conventional conversational semantics in some implementations. Both conventional conversational semantics and the conversational NLP may be based on semantic analysis on individual messages. The conversation analyzer 226 may further analyze contiguous and/or non-contiguous messages in a conversation rather than analyzing only a single message. In some instances, theconversation analyzer 226 analyzes multiple conversation messages to track conversation flows from each participant of a conversation. The conversation analyzer 226 tracks users for possible participants of a conversation and determines the conversation flow, i.e., which participant sends which message in what order. Theconversation analyzer 226 refines the contextual indicators based on the tracking information. For example, theconversation analyzer 226 may analyze two contiguous messages “would you like to meet?” and “how about ABC?” of a conversation. The conversation analyzer 226 tracks participants of the conversations, and determines that a first participant sent the first message and a second participant sent the second message. Further, theconversation analyzer 226 determines that the location entity “ABC” is proposed by the second participant to respond to a question from the first participant. In other instances, theconversation analyzer 226 refines the contextual indicators based on information tracked from multiple conversations. The conversation analyzer 226 may refine the contextual indicators based on common terms that have occurred in multiple conversations. For example, theconversation analyzer 226 identifies an entity “hiking” from a message “do you want to go hiking?” sent from user A when talking with user B today. The conversation analyzer 226 tracks conversation flows and determines that a message “I prefer fishing to hiking” from user B in a previous conversation should be used as contextual indicators for the entity “hiking.” The conversation analyzer 226 may refine the contextual indicators based on concept clustering of terms occurred in multiple conversations. For example, theconversation analyzer 226 determines messages including “mountain bike,” “backpack,” “camping” from multiple conversations can be used as contextual indicators for the message “do you want to go hiking” received in an ongoing conversation since the terms “mountain bike,” “backpack,” “camping” and “hiking” can be classified into a cluster “outdoor activity” based on concept clustering. - In some instances, the
conversation analyzer 226 also analyzes a conversation to determine the tense (e.g., whether a conversation message is in the past tense), the recency (e.g., whether a conversation message is new, how to weigh a new or old conversation message), etc. The conversation analyzer 226 further collects data including user profile information (e.g., an age, a gender), conversation metadata (e.g., a start time and an end time of a conversation, participants of the conversation, timestamps associated with each conversation message), and uses the collected data as contextual indicators. Authorization is obtained prior to the use of any profile information or personal information of the user. - The determining
engine 228 can be code and routines for determining whether an entity is actionable. In some instances, the determiningengine 228 can be a set of instructions executable by theprocessor 202 to provide the functionality described herein for determining whether an entity is actionable. In other instances, the determiningengine 228 can be stored in thememory 204 of thecomputing device 200 and can be accessible and executable by theprocessor 202. In some instances, the determiningengine 228 can be adapted for cooperation and communication with theprocessor 202 and other components of thecomputing device 200. - Whereas the
conversation analyzer 226 identifies an entity from a conversation message of a conversation and determines contextual indicators of the entity in the conversation, the determiningengine 228 determines whether the determined entity is actionable. An entity is actionable if a user is likely to take an action on it. The determiningengine 228 determines an entity is an actionable entity when the entity is in a context of conversation where a user is likely to take an action on the entity. As described herein, whether a user is likely to take action on an entity is determined by the determiningengine 228 utilizing one or more of various techniques and is based on one or more contextual parameters described herein. In some instances, the determiningengine 228 detects one or more action verbs, the subject and/or the object of the one or more verbs and associated context, and determines an actionable entity based on the detected information. An action verb is a verb that expresses physical or mental action such as walk, read, want, think, etc. For example, if theconversation analyzer 226 identifies the location entity “supermarket C” from a message “meet at supermarket C” between user A and user B in the conversation, the determiningengine 228 may detect an action verb “meet,” an object “supermarket C” of the verb “meet,” and determine that this location entity “supermarket C” is actionable because users A and B may meet at the place. However, if theconversation analyzer 226 identifies the location entity “supermarket C” because user A comments that “supermarket C is super good” in the conversation, the determiningengine 228 fails to detect an action verb and associated object/subject. As a result, the determiningengine 228 may not determine that the location entity “supermarket C” is actionable because no action is detected. Each time when an entity appears in a conversation, the determiningengine 228 classifies the entity as actionable or non-actionable. When the entity is classified as actionable, the determiningengine 228 highlights or otherwise annotates the actionable entity for use by one or more other components as described herein. - In some instances, the
conversation analyzer 226 analyzes all conversation messages in the conversation to determine contextual indicators of an entity identified from a conversation message of the conversation. The determiningengine 228 determines whether the entity is actionable based on the contextual indicators. In some instances, the determiningengine 228 determines whether an entity is actionable based on a conversation flow. For example, user A enters a question “meet at ABC?” In certain examples, the determiningengine 228 may not determine whether the location “ABC” is actionable until receiving user B's answer in the conversation flow. If user B says “Sure,” the determiningengine 228 then determines that “ABC” is actionable. Otherwise, the determining engine may determine “ABC” as non-actionable. In another example, if the conversation flow includes a first message “where would you like to meet?” from user A, a second message “how about ABC?” from user B, a third message “I like DEF better” from user A and a fourth message “DEF is good” from user B, the determiningengine 228 may determine “DEF” rather than “ABC” as an actionable entity. In other instances, the determiningengine 228 determines whether an entity is actionable based on the tense of the message. For example, the determiningengine 228 may determine that theflight number 1234 in the message “I used to take 1234 to New York” is non-actionable since the message is in the past tense. In some other instances, the determiningengine 228 determines whether an entity is actionable based on sentiment indicators. For example, the determiningengine 228 determines “pasta” is non-actionable based on the message “want pasta for dinner?” from user A and the message “I hate pasta” from user B. However, the determiningengine 228 may still determine that “dinner” is actionable. A suggestion that gives more details or completes an action (e.g., a pizza restaurant) may still be provided to user A. The determiningengine 228 also determines whether an entity is actionable based on other contextual indicators determined by theconversation analyzer 226. - The determining
engine 228 determines whether an entity is actionable based on contextual indicators, which differs the present disclosure from some approaches and may therefore be advantageous. For example, the conventional approaches may determine that today is Alice's birthday based on a previous conversation between Alice and her friend, and automatically send her a “Happy Birthday” message and a fun video clip to celebrate her birthday. Implementations of the present disclosure sends such automatic celebration messages to Alice only if the contextual condition is determined to be appropriate. If Alice said that “my house was burn down” a few hours ago, the determiningengine 228 decides not to send any celebration message to Alice since the message can only be an annoying spam for Alice. As another example, if User A provided a message of “I love Coffee Shop A” in a prior conversation, then in a current conversation provides a message to User B of “Want to grab some coffee”, a suggestion directed to “Coffee Shop A” may be provided to User B for incorporation in the current conversation. The suggestion may be provided based on User A's previous expression of positive sentiment directed toward “Coffee Shop A” and may optionally be provided even if User B was not involved in the prior conversation. - In some implementations, in addition to automatically determining an actionable entity based on contextual indicators in a conversation, the determining
engine 228 also allows a user to manually determine which entity is actionable. Even if the determiningengine 228 did not detect that an entity is actionable, the determiningengine 228 allows a user to make the entity actionable. As a result, any message in a conversation can be actionable. In some instances, the determiningengine 228 receives an indication from a user to mark an entity in a conversation message as actionable and returns information relevant to the entity to the user. For example, a user mentions “panda” in a conversation message. The user (or another user) determines that this word is the most important entity in the message and indicates that this word is actionable (e.g., by labelling the word via user interface input such as a “tap on” or other selection of the word). Responsive to receiving this indication, the determiningengine 228 communicates with other servers or applications (e.g., asearch server 112 and/or third-party server 110) to retrieve information related to “panda” (e.g., a first search result from search server 112) to the user. In some instances, responsive to receiving an indication that a user wants to take an action on an entity, the determiningengine 228 also sends the indication as a training signal to themodel builder 224 to train the machine learning model based on the indication. For example, themodel builder 224 may, based on the indication, generate a positive training example with training example output indicating an actionable entity and training example input that is based on the message in which the indication was made, the word(s) that were the focus of the indication, and/or contextual indicators associated with the conversation. Themodel builder 224 may refine the machine learning model by further training the model based on the positive training example. - The
suggestion generator 230 can be code and routines for generating a suggestion for a user to take an action on an entity. In some instances, thesuggestion generator 230 can be a set of instructions executable by theprocessor 202 to provide the functionality described herein for generating a suggestion for a user to take an action on an entity. In other instances, thesuggestion generator 230 can be stored in thememory 204 of thecomputing device 200 and can be accessible and executable by theprocessor 202. In some instances, thesuggestion generator 230 can be adapted for cooperation and communication with theprocessor 202 and other components of thecomputing device 200. - Responsive to receiving an actionable entity from the determining
engine 228, thesuggestion generator 230 generates a suggestion for the actionable entity to offer richer context and next steps. The suggestion is information that is useful to make an entity more actionable for a user or to complete an action for a user. For example, when users suggest meeting at a restaurant, thesuggestion generator 230 can provide more details about the restaurant and offer to book a table. When users talk about watching a movie, thesuggestion generator 230 can offer show times or a link to the movie stream. When users mention a video clip from a website, thesuggestion generator 230 can bring it up for users to play in the conversation. In some instances, thesuggestion generator 230 generates a real-time suggestion. For example, when users are talking about lunch at a restaurant, thesuggestion generator 230 generates a map in real time to direct the users to the restaurant. - In some instances, the
suggestion generator 230 instructs the user interface engine 236 to incorporate at least one suggestion tool into a conversation interface. Thesuggestion generator 230 uses the suggestion tool to display a suggestion and receive user interactions with the suggestion. For example, thesuggestion generator 230 instructs the user interface engine 236 to generate at least one suggestion tool to display a map for a user viewing and selecting, to display a calendar for a user viewing and scheduling, to find and share contact information, to share a file, to set up a reminder, to display a video or initiate a video call, to share stickers, to display weather information, to display sports scores, to display product or service (e.g., clothes, movies, medical service) purchase information, to display flight information, to provide traffic data, to provide local event information, to provide local merchant information (e.g., restaurants, movie theaters), to share user status (e.g., driving, biking, running), to find and share a product (e.g., a mobile application, a game), to pay or receive a payment for a product or service, etc. One skilled in the art will recognize that other types of suggestions are possible. - In some implementations, the suggestion provided by the
suggestion generator 230 is a selectable suggestion. In some of those implementations, in response to selection of the suggestion by a participant of the conversation, the suggestion generator may incorporate the suggestion (and/or related content) into a transcript of the conversation. For example, thesuggestion generator 230, in response to selection of the suggestion, may cause it (and/or related content) to be statically displayed in the transcript for all participants of the conversation. For instance, the suggestion may initially be provided to the user interface engine 236 for presentation to one or more of the recipients in their corresponding conversation interfaces as a non-static graphical element (e.g., presented in the interface, but not fully incorporated in the transcript). Then, in response to selection of the suggestion by one or more of the participants, the suggestion (and/or related content) may be statically incorporated into the transcript of the conversation. In some implementations where the suggestion is selectable, it may include an affirmative interface element and a negative interface element. In response to selection(s) of the affirmative interface element, the suggestion may be incorporated in the transcript and in response to selection(s) of the affirmative interface element the suggestion may be discarded without static incorporation of the suggestion into the transcript. - In some instances, the
suggestion generator 230 generates a suggestion based on what the machine learning model from themodel builder 224 learns from user actions. In some instances, themodel builder 224 trains the machine learning model to learn from user's non-chat actions and thesuggestion generator 230 generates a suggestion based on the machine learning model. For example, if a user talks about taking a flight to Las Vegas next weekend, the determiningengine 228 determines an actionable entity “flight” and thesuggestion generator 230 offers a suggestion of a flight itinerary (e.g., time and airline) based on user's previous purchase history learned in the machine learning model. In other instances, themodel builder 224 trains the machine learning model to learn from reactions of a user to previous suggestions and thesuggestion generator 230 generates a suggestion based on the machine learning model. Thesuggestion generator 230 may communicate with the user interface engine 236 to customize a new suggestion tool in a conversation interface based on user actions taken to previous suggestion tools offered in the conversation interface. For example, themodel builder 224 trains the machine learning model to learn that a user never made any purchase using purchase tools previously offered in a conversation interface displayed to the user. As a result, thesuggestion generator 230 determines no longer to incorporate a purchase tool in the conversation interface. Similarly, thesuggestion generator 230 used to provide a traffic map tool and a public transport tool to a user. Thesuggestion generator 230 learns from the machine learning model that the user always interacted with the public transport tool, and therefore determines to generate and provide only a public transport tool to the user in the future. In another example, user A and user B always discuss or select Coffee house as a meetup spot. When user A asks user B “meet today?,” thesuggestion generator 230 generates a map suggestion and instructs the user interface engine 236 to include a map tool and highlight the Coffee house nearby in the map tool. - In other instances, the
suggestion generator 230 generates a suggestion based on the conversation analysis (e.g., NLP) and contextual indicators determined from theconversation analyzer 226. Thesuggestion generator 230 generates a suggestion based on the sentiment analysis. For example, user A asks “Coffee house, 8 am tomorrow?” and user B answers “really? early bird on Sunday?” When thesuggestion generator 230 generates a map and a calendar for the actionable entity “Coffee house,” thesuggestion generator 230 may highlight the available time around noon on the calendar based on the sentiment analysis. Thesuggestion generator 230 generates a suggestion based on user information conveyed in a conversation. For example, if user A says “let's meet tomorrow” and user B says “great! I'll be in San Francisco,” thesuggestion generator 230 may provide a map of San Francisco to users A and B even if neither user is at San Francisco when the conversation occurs. Thesuggestion generator 230 generates a suggestion based on user profile information. Authorization is obtained prior to the use of any profile information or personal information of the user. - In some instances, the
suggestion generator 230 generates a suggestion by pulling data from a search engine and/or other applications into a conversation. For example, thesuggestion generator 230 receives map data around a location from a map service in the conversation and generates a map suggestion for the actionable location entity. An example conversation interface including a suggestion is depicted inFIG. 10 . In other instances, instead of itself generating a suggestion for a user to take an action on an entity, thesuggestion generator 230 feeds the entity information into other applications and services. The other applications and services may themselves optionally directly provide a suggestion for a user to take an action on the entity. For example, if a flight number is mentioned in a conversation, thesuggestion generator 230 notifies a third-party server to provide flight feeds (e.g., delay information) to one or more participants in the conversation (e.g., by incorporating those flight feeds into the transcript of the conversation and/or via notifications provided via another application). If the user mentions a friend that the user likes in the conversation, thesuggestion generator 230 communicates with an advertisement application to use this information to target the user with advertising. If the user mentions a sports game in the conversation, thesuggestion generator 230 communicates with a third-party service to provide the sports scores of the sports game to the user. An example conversation interface including a suggestion provided by a different application is depicted inFIGS. 11A and 11B . - In some instances, the entity information includes participants of the conversation from which the entity is identified. When the
suggestion generator 230 feeds the entity information into other services, the other services may provide a suggestion to all (or a subset of) the participants of the conversation. For example, if user A mentions weather in a conversation with user B and user C, a weather service may send a hourly weather report to users A, B and C after receiving entity information of “weather” from thesuggestion generator 230. In other instances, at the time thesuggestion generator 230 feeds entity information into other services, thesuggestion generator 230 also communicates with theconversation management module 222 and the user interface engine 236 to initiate a live conversation in a conversation interface. The other service provides a suggestion for the user to take an action on the entity in the live conversation. In the above example, the other services may provide the hourly weather report either in an interface provided by the other services or in the live conversation provided by theconversation management module 222 and the user interface engine 236. - By understanding the context of a conversation and connecting users with other services, the
suggestion generator 230 can provide smarter, more relevant, more searchable suggestions to a user, and therefore is more useful and effective. Thesuggestion generator 230 takes a step further and ventures into a personal assist space. Instead of receiving user questions “can you recommend me of a show this weekend in San Francisco? can you book a flight to Seattle on Tuesday morning?” and answering the questions based on multiple applications, searches, comparisons and form fillings, thesuggestion generator 230 asks questions for users and answers the questions on their behalf. As chat is becoming the go to application on user's smart phone, thesuggestion generator 230 incorporating with other modules and engines now fits well into this area by drawing information from the chat and providing relevant updates. In particular, thesuggestion generator 230 communicates with other services to provide important updates in one place for all participants. Connecting users with other services by thesuggestion generator 230 could also drive more users into other services since it wouldn't require users to download a separate mobile application for another service. Furthermore, thesuggestion generator 230 offers developer components to build different type of services including understanding and translating user's conversations into actions, for example, voice commands and wear equipment. - In some instances, the
suggestion generator 230 comprises aresponse predictor 232 and areport module 234. - The
response predictor 232 can be code and routines for detecting a question for a user in a conversation and determining a potential user reply to the question. In some instances, theresponse predictor 232 can be a set of instructions executable by theprocessor 202 to provide the functionality described below for detecting a question for a user in a conversation and determining a potential user reply to the question. In other instances, theresponse predictor 232 can be stored in thememory 204 of thecomputing device 200 and can be accessible and executable by theprocessor 202. In some instances, theresponse predictor 232 can be adapted for cooperation and communication with theprocessor 202 and other components of thecomputing device 200. - Users reply to a question either by typing, which can be especially hard on a touch screen of a client device, or by copying and pasting from other places where the users find answers. The
response predictor 232 predicts users' potential answer and supplies users with a next reply, which is better than typing or copy-paste. For example, when a user is asked in a conversation when his or her flight is going to land, theresponse predictor 232 can make flight information available as a reply for the actionable entity “flight.” - In some instances, the
response predictor 232 predicts how a user would want to reply to a question based on the contextual indicators and the conversational analysis from theconversation analyzer 226 and the machine learning model from themodel builder 224. For example, theresponse predictor 232 determines how a user tends to reply a certain type of questions based on what the machine learning model has learned from the conversation history and then offers one or more potential replies for the user. If theresponse predictor 232 learns that 30% of the time people respond A and 70% of the time people respond B to a question from the machine learning model, theresponse predictor 232 may supply answer B for a user that is going to answer the same question. Theresponse predictor 232 is at a particular advantage because of the contextual indicators and the conversational analysis received from theconversation analyzer 226. Knowing users' location, context, and other personal information enables theresponse predictor 232 to more easily and/or accurately predict a reply. For example, given the messages “I hate coffee” and “the tea house on the X street is the best” from user A in previous conversations, theresponse predictor 232 can easily supply the address of “the tea house on the X street” as the potential answer for user A when user B asks user A “which is your favorite place for coffee or tea?.” - In other instances, the
response predictor 232 also determines the type of answers based on the type of questions. Theresponse predictor 232 determines the type of questions based on the understanding of the sentence structure from theconversation analyzer 226. For example, theresponse predictor 232 provides A and B as potential answers if the question is “A or B?.” Or theresponse predictor 232 provides “yes” and “no” as potential answers when the question is “do you like A?.” Theresponse predictor 232 also determines the type of questions based on other contextual indicators determined by theconversation analyzer 226. For example, user A is asked “will you be in Los Angeles tomorrow?.” If the previous conversations show that user A has a ticket to Los Angeles, theresponse predictor 232 would determine this is a yes or no question and provide “yes” or “no” as potential answers for user A. However, if the previous conversations show that user A has booked a ticket but has not received a confirmation number after a few days, theresponse predictor 232 may not think this is a yes or no question and instead provide “I don't know” as a potential answer. - In some instances, the
response predictor 232 provides a potential user reply in one-tap form and/or other single selection form. For example, assume the question is “can I send your contact info?.” The question includes an actionable entity “contact info.” Further assume a previous conversation includes “your” contact info. Theresponse predictor 232 may provide a one-tap contact info as an answer. A one-tap suggestion offered by theresponse predictor 232 based on the context of a conversation is convenient for a user in many ways (e.g., time, safety). For example, when user A sends user B a chat conversation, theresponse predictor 232 can send a one-tap suggestion saying that “I am driving” or even send “I will be home in 20 minutes” for user B to respond user A. When user B is flying and does not turn on the cell phone, theresponse predictor 232 can still automatically respond “I will be available four hours later” for user B based on a calendar. An example interface showing one-tap replies is depicted inFIG. 10 . - The
report module 234 can be code and routines for generating one or more reports related to a conversation based on organizing the conversation. In some instances, thereport module 234 can be a set of instructions executable by theprocessor 202 to provide the functionality described below for generating one or more reports related to a conversation based on organizing the conversation. In other instances, thereport module 234 can be stored in thememory 204 of thecomputing device 200 and can be accessible and executable by theprocessor 202. In some instances, thereport module 234 can be adapted for cooperation and communication with theprocessor 202 and other components of thecomputing device 200. - Users lose track of things they share in conversations. The conversations may not be easily searchable, for example, a user may need to scroll up and down from a lot of search results to find a piece of information the user really wants. The
report module 234 aggregates information across conversations, organizes the conversations, and makes the conversations easily searchable by topics, objects, and/or other metadata. - The
report module 234 receives conversations and contextual indicators determined from the conversations by theconversation analyzer 226, and organizes the conversations based on the contextual indicators. In some instances, thereport module 234 organizes the conversations based on content. For example, thereport module 234 organizes the conversations to find conversations that talk about a movie or mention a location. In other instances, thereport module 234 organizes the conversations based on timeline. For example, thereport module 234 organizes the conversations that mention a location in a descending time order. In other instances, thereport module 234 organizes the conversations based on conversation flows. For example, thereport module 234 retrieves conversation messages that include a location from the conversations, associates each message with a particular user who sent the message, and arranges the conversation messages in a descending time order. In another example, if a user says “click the search box,” thereport module 234 may determine that the next message in the conversation flow will be the word that the user specified in the search box and organizes the conversation in this order. In other instances, thereport module 234 organizes the conversations based on sentiment and/or other feature(s). For example, thereport module 234 organizes the conversations based on classifying people as electronic-book reader or paper-book reader. One skilled in the art, having had the benefit of the present disclosure, will understand that thereport module 234 can organize the conversation based on other contextual indicators. - In some instances, the
report module 234 also labels the important message (e.g., an actionable entity) for later follow up. The label can be flags, stars, etc. When a user mentions this message or searches for the message, thereport module 234 can easily retrieve it. Thereport module 234 obtains additional information by labelling the messages, for example, how often this message was mentioned, when a user mentioned this message, etc. - The
report module 234 indexes the conversations (e.g., in a database stored in storage 210) based on organizing the conversations. When thereport module 234 receives a search request for the conversations, thereport module 234 searches the conversations using the indexes, generates a report and returns the report to a user. For example, responsive to receiving a search request for conversations talking about a movie, thereport module 234 searches conversation content about the movie. Thereport module 234 organizes the search result based on ordering conversations according to the timeline of the conversations, associating each conversation message in a conversation with a user and a time, highlighting the important entities (e.g., movie names, theater names, show time, etc.,) and providing references back to the previous conversations based on the indexes. Thereport module 234 generates a report for a user based on organizing the conversation. An example conversation interface showing a conversation report is depicted inFIG. 13 . In some instances, thereport module 234 also generates a summary by organizing and summarizing conversations within a time period. For example, thereport module 234 generates a summary for a user to show how many conversations the user participated in within a week, who the user talks with in the week, what topics the user talked about in the week, how many photos the user shared in the week, etc. An example conversation interface showing a conversation summary is depicted inFIG. 14 . - What the
report module 234 does is more than a trivial conversation search or a simple conversation summarization that a person can do. Thereport module 234 can retrieve the details for a user without necessitating that the user dig through and/or scroll through a verbatim transcript of a conversation. Thereport module 234 also gets updates on topics discussed in the conversation for a user (e.g., game scores or shows). In some implementations, thereport module 234 provides not only a search result since users can look back at a meaningful trail of information shared based on events, places, people. Thereport module 234 also allows users to interact with a collection of things they've shared or discussed such as a list of all restaurants they've talked about in the past few months. In addition, thereport module 234 provides a way to gain insights from conversations and to gauge context, sentiment, and/or other features. For example, thereport module 234 can get valuable insights to gauge sentiment towards certain brands and to identify trending topics. - The user interface engine 236 can be code and routines for generating a conversation interface that displays conversation messages and suggestions of a conversation. In some instances, the user interface engine 236 can be a set of instructions executable by the
processor 202 to provide the functionality described below for generating a user interface that displays conversation messages and suggestions of a conversation. In other instances, the user interface engine 236 can be stored in thememory 204 of thecomputing device 200 and can be accessible and executable by theprocessor 202. In some instances, the user interface engine 236 can be adapted for cooperation and communication with theprocessor 202 and other components of thecomputing device 200. - In some instances, the
conversation management module 222 instructs the user interface engine 236 to generate graphical data for displaying a conversation and conversation messages in a conversation interface. In other instances, thesuggestion generator 230 generates a suggestion for an actionable entity in a conversation. Theconversation management module 222 instructs the user interface engine 236 to generate graphical data for displaying the suggestion along with a conversation message in a conversation interface. In some instances, the user interface engine 236 generates multiple suggestion tools in a conversation interface for displaying one or more suggestions and receiving user interactions with the suggestion(s). - A suggestion includes information for a user to take an action on an entity. In some instances, the user interface engine 236 generates multiple suggestion tools for presenting the suggestion in parallel with the message including the entity. For example, the user interface engine 236 shows the map tool of ski resorts and a snow report along with the message “go skiing” on the same screen. A user can view and select the map with the map tool. Or the user interface engine 236 may show two calendar tools for two users along with the message discussing meeting up next day. A user can view and schedule a calendar using the calendar tool. Or the user interface engine 236 may show different purchase tools for dress and shoes along with the message discussing celebrity's outfit. Or the user interface engine 236 may show a calendar tool highlighting times that two users are free next day and show a map tool highlighting coffee shops near addresses of both users along with the message “meet for coffee next day?” Or the user interface engine 236 may show a traffic map tool and a public transport tool along with the message “go from A to B?” In some instances, if a suggestion tool cannot fit into a screen (e.g., the small screen of a smart phone), the user interface engine 236 will show tool options first as multiple tools.
- In other instances, the user interface engine 236 generates multiple suggestion tools for serially presenting one or more suggestions. For example, upon receiving the message “meet up for a meal,” the user interface engine 236 shows options for lunch or dinner. Upon a user selection of lunch, the user interface engine 236 shows the restaurants open for lunch. Or upon receiving message “meet for coffee next day,” the user interface engine 236 shows a calendar tool first. The user interface engine 236 may also highlight times on the calendar when all users are available. Once a time is selected, the user interface engine 236 shows a map of coffee shops open at that time. Or upon receiving a message “buy skiing equipment in Los Angeles,” the user interface engine 236 first shows a map of sports stores in Los Angeles. After a store is selected, the user interface engine 236 shows a purchase tool for equipment in that store. An example conversation interface showing serial presentation of suggestions is depicted in
FIG. 15 . - In the above and following descriptions, for purposes of explanation, numerous specific details are set forth in order to provide a thorough understanding of the specification. It will be apparent, however, to one skilled in the art, having had the benefit of the present disclosure, that the technology can be practiced without these specific details. In other instances, structures and devices are shown in block diagram form in order to avoid obscuring the description. For example, the specification is described in some instances above with reference to user interfaces and particular hardware. However, the description applies to any type of computing device that can receive data and commands, and any peripheral devices providing services.
-
FIG. 3 includes a flowchart of anexample method 300 for identifying an entity from a conversation and generating a suggestion for a user to take an action on the entity. Themethod 300 begins by receiving 302 at least one conversation message from a conversation. A conversation message may include a video message, an audio message, a text message, etc. Themethod 300 then identifies 304 an entity that can be actionable from a conversation message and determines 306 contextual indicators of the entity. The entity can be a person in a conversation message, an object in the conversation message, etc. In one example, theconversation analyzer 226 discussed in further detail with reference toFIG. 2 above may identify the entity and determine contextual indicators. For example, theconversation analyzer 226 may identify a location entity from a conversation message and determine contextual indicators of the location entity. For instance, for the location entity, theconversation analyzer 226 may determine contextual indicators based on when the location was mentioned, who mentioned the location in the conversation, which content of the conversation caused the location be perceived, which kind of content followed the location in the conversation, prior sentiment expressed toward the entity and/or related entities in prior conversations, etc. - The
method 200 next determines 208 whether the entity is actionable based on the contextual indicators. In one example, the determiningengine 228 discussed in further detail with reference toFIG. 2 may determine an actionable entity. For example, if theconversation analyzer 226 identifies the location entity “supermarket C” from a message “meet at supermarket C” between user A and user B in the conversation, the determiningengine 228 may determine that this location entity “supermarket C” is actionable because users A and B will meet at the place. If the determiningengine 228 determines that the entity is actionable, themethod 300 moves to step 310. Otherwise, themethod 300 ends. Themethod 300 provides 310 a suggestion to a user to take an action on the entity. In one example, thesuggestion generator 230 discussed in further detail with reference toFIG. 2 above may provide a suggestion. For example, thesuggestion generator 230 provides a map to “supermarket C” and a public transport tool to direct how a user can get to the “supermarket C.” In some implementations, the suggestion is provided to all participants of the conversation. In some other implementations, the suggestion is provided to a subset of the participants of the conversation. Moreover, in some implementations the suggestion may initially be provided to one or more participants without immediate incorporation of the suggestion into the transcript of the conversation. In some of those implementations, the suggestion may only be incorporated into the transcript in response to one or more (e.g., at least a threshold quantity of) providing “affirmative” user interface input directed toward the suggestion. -
FIG. 4 is a flowchart of aspecific example method 400 for identifying an entity from a conversation and generating a suggestion for a user to take an action on the entity. Themethod 400 receives 402 at least one conversation message from a conversation. The method then performs 404 a natural language analysis (NLP) on the at least one conversation message based on a machine learning model, and identifies 406 an entity that can be actionable from a conversation message based on the analysis. For example, theconversation analyzer 226 determines entities “beautiful,” “weather” and “Store A” from a conversation message by parsing, extracting, and pattern matching. The conversation analyzer 226 then determines that “beautiful” is an adjective, “weather” is a noun, and “Store A” is a location based on the language semantic analysis using the SAFT library. An entity identified by theconversation analyzer 226 can be actionable or non-actionable depending on whether it is determined that a user can take an action on it. - Next, the
method 400 determines 408 contextual indicators of the entity based on the analysis. For example, theconversation analyzer 226 performs the NLP based on pattern matching in combination with user information. For instance, theconversation analyzer 226 can detect, from a conversation message, a “Coffee house” near user A instead of any arbitrary “Coffee house” in a city based on pattern matching in combination with user information of user A. The conversation analyzer 226 may additionally or alternatively determine contextual indicators by performing sentiment analysis on a conversation message and associating the conversation message with a weight. For example, theconversation analyzer 226 receives messages “I hate coffee,” “tea is ok” and “coke is my favorite” from user A, and associates a most favorable to least favorable sentiment weight to coke, tea and coffee, respectively. The weight indicates user A's beverage taste. The conversation analyzer 226 may additionally and/or alternatively analyze a conversation to determine the tense (e.g., whether a conversation message is in the past tense) and/or the recency of the conversation message (e.g., whether a conversation message is new, how to weigh a new or old conversation message); and/or or collects user profile information (e.g., an age, a gender) and/or conversation metadata (e.g., a start time and an end time of a conversation, participants of the conversation, timestamps associated with each conversation message) as contextual indicators. - The
method 400further tracks 410 conversation flows from each participant of the conversation and refines 412 the contextual indicators based on the tracking information. For example, theconversation analyzer 226 tracks users for possible participants of a conversation and determines which participant sends which message in what order. For example, theconversation analyzer 226 identifies an entity “hiking” from a message “do you want to go hiking?” sent from user A when talking with user B today. The conversation analyzer 226 tracks conversation flows and determines that a message “I prefer fishing than hiking” from user B in a previous conversation should be used as contextual indicators for the entity “hiking.” - The
method 400 determines 414 whether the entity is actionable based on the contextual indicators. The determiningengine 228 determines whether an entity is actionable based on a conversation flow. For example, user A enters a question “meet at ABC?” The determiningengine 228 will not determine whether the location “ABC” is actionable until receiving user B's answer in the conversation flow. The determiningengine 228 determines whether an entity is actionable based on the tense of the message. For example, the determiningengine 228 may determine an entity in a past tense message is non-actionable. The determiningengine 228 also determines whether an entity is actionable based on sentiment indicators and other contextual indicators. If the determiningengine 228 determines that the entity is actionable, themethod 400 moves to step 416. Otherwise, themethod 400 ends. - The
method 400 determines 416 a suggestion for a user to take an action on the entity based on the machine learning model and the contextual indicators. For example, if a user talks about taking a flight to Las Vegas next weekend, the determiningengine 228 determines an actionable entity “flight” and thesuggestion generator 230 offers a suggestion of a flight itinerary (e.g., time and airline) based on user's previous purchase history learned in the machine learning model. Themethod 400 provides 418 the suggestion to the user to take an action on the entity. -
FIG. 5 is aflowchart 500 of an example method for manually determining an actionable entity from a conversation. Themethod 500 receives 502 an indication to mark an entity in a conversation message as actionable. In some instances, the indication to mark the entity in a conversation message as actionable is received from a user (e.g., based on user interface input directed to term(s) in the conversation message that correspond to the entity). Themethod 500 sends 504 the user indication, and optionally additional data (e.g., the conversation message, contextual indicators) as a training signal to a machine learning model. Themethod 500searches 506 for information relevant to the entity and provides 508 the information to the user. For example, a user determines “Green Park Museum” is the most important word in a message and indicates that this word is actionable by flagging the word. Responsive to receiving this indication, the determiningengine 228 searches information related to “Green Park Museum” and retrieves the top five results to the user. The determiningengine 228 also sends the indication as a training signal to train a machine learning model. -
FIG. 6 is aflowchart 600 of an example method for generating and updating a machine learning model. In one example, themodel builder 224 discussed in further detail with reference toFIG. 2 above may generate and update a machine learning model. Themethod 600 receives 602 data from a variety of sources including queries and document retrieval, extracts 604 features from the data and generates 606 a machine learning model based on the extracted features. For example, themodel builder 224 includes a user's search history into the model. In another example, upon receiving a collection of documents returned for a query and ranks associated with each document, themodel builder 224 builds the model to include the ranks to show the relevancy between a document and the query. Themodel builder 224 may also generate the model to include user statistics, user behavior pattern data, a sequence of weights and multipliers that are used to make predictions about a user action. Themodel builder 224 generates the machine learning model and trains the model over time to understand the semantics of a conversation and derives meaning from the real time conversation. As the model evolves, the efficiency and accuracy of using the model in suggestion making, behavior prediction, etc., are improved. - The
method 600 receive 608 a user action, the user action including a reaction to a suggestion provided for an entity, and trains 610 the machine learning model based on the user action. This may include generating a training example based on the user action and other associated data and training the machine learning model based on the training example. For example, themodel builder 224 learns that a user never buys anything that was offered in a conversation interface with a purchase tool. In another example, themodel builder 224 receives a comment “I do not like this airline” regarding a flight itinerary suggestion. Themodel builder 224 takes this negative reaction as a signal to train the model. As a result, a different airline may be suggested to the user in the future. -
FIG. 7 is aflowchart 700 of an example method for feeding entity information from a first application to a second application to generate a suggestion. Themethod 700 receives 702 at least one conversation message from a conversation hosted by a first application and determines 704 that an entity in a conversation message is actionable. Themethod 700 feeds 706 entity information to a second application, the entity information including participants of the conversation in the first application. Next, the method moves to step 708, where the second application generates a suggestion for a user to take an action on the entity. For example, if a flight number is mentioned in a conversation, thesuggestion generator 230 notifies a third-party server to provide flight feeds (e.g., delay information) to a user. If the user mentions a friend that the user likes in the conversation, thesuggestion generator 230 communicates with an advertisement application to use this information to target the user with advertising. Themethod 700 provides 710 the suggestion to the participants of the conversation in the first application. For example, if user A mentions weather in a conversation with user B and user C, a weather service may send a hourly weather report to users A, B and C after receiving entity information of “weather” from thesuggestion generator 230. -
FIG. 8 is aflowchart 800 of an example method for predicting a potential user reply in a conversation. Themethod 800 receives 802 at least one conversation message from a conversation and determines 804 that an entity in a conversation message is actionable. Themethod 800 then detects 806 a question for a user in the conversation, the question being related to the entity and determines 808 a potential user reply to the question. In one example, theresponse predictor 232 discussed in further detail with reference toFIG. 2 below may detect a question and determine a potential user reply. For example, if theresponse predictor 232 learns that 30% of the time people respond A and 70% of the time people respond B to a question, theresponse predictor 232 may supply answer B for a user that is going to answer the same question. Theresponse predictor 232 also determines a potential reply based on contextual indicators (e.g., users' location, context, and other personal information). For example, given the messages “I hate coffee” and “the tea house on the X street is the best” from user A in previous conversations, theresponse predictor 232 can easily supply the address of “the tea house on the X street” as the potential answer for user A when user B asks user A “which is your favorite place for coffee or tea?.” - The
method 800 provides 810 the potential user reply in a one-tap form to the user. For example, when user A sends user B a chat conversation, theresponse predictor 232 can send a one-tap suggestion saying that “I am driving” or even send “I will be home in 20 minutes” for user B to respond user A. In response to on-tap selection of the one-tap suggestion, the suggestion may then be incorporated in a transcript of the chat conversation. When user B is flying and does not turn on the cell phone, theresponse predictor 232 can still automatically respond “I will be available four hours later” for user B based on a calendar. -
FIG. 9 is aflowchart 900 of an example method for selectively retrieving conversations and/or conversation messages in response to search requests. Themethod 900 receives 902 at least one conversation and determines 904 contextual indicators from the at least one conversation. Themethod 900 organizes 906 the at least one conversation based on the contextual indicators andindexes 908 the at least one conversation. In one example, thereport module 234 discussed in further detail with reference toFIG. 2 above may organize and index the conversation. Thereport module 234 may organize the conversations based on participant identities, entities referenced in the conversations, times of the conversation messages, other conversation content, and the like. In one example, thereport module 234 may organize the conversations that mention a location in a descending time order. Thereport module 234 may also organize the conversations based on conversation flows. For example, if a user says “I will search it,” thereport module 234 may determine that the next message in the conversation flow will be the word that the user specified in the search box and may organize the conversation in this order. Thereport module 234 may also organize and index the conversations based on sentiment and other contextual indicators. - The
method 900 receives 910 a search request for the at least one conversation and retrieves 912 a portion of the at least one conversation based on indexing the at least one conversation. For example, responsive to receiving a search request for conversations talking about a movie, thereport module 234 generates a report for a user based on organizing the conversations by searching conversation content about the movie, ordering conversations according to the timeline of the conversations, associating each conversation message in a conversation with a user and a time, highlighting the important entities (e.g., movie names, theater names, show time, etc.,) and providing references back to the previous conversations based on the indexes. -
FIG. 10 includes graphic representations of example conversation interfaces showing a suggestion. In the illustrated example, the conversation interfaces 1000, 1050 are displayed on Aaron's mobile screen. Aaron receives amessage 1002 “Want to eat at Park Chow?” from Bob. Thesuggestion application 132 b, which is described above with reference toFIGS. 1 and 2 , determines that the location “Park Chow” is actionable. A suggestion therefore can be generated for Aaron and Bob to take an action on the location. In this example, thesuggestion application 132 b generates amap 1004 of the location “Park Chow” for Aaron and/or Bob. Aaron and/or Bob can view themap 1004 or share themap 1004 using theshare button 1006. In this scenario, themap 1004 is displayed twice before and after Aaron sends amessage 1008 “Sure” to respond themessage 1002. In a different scenario, the determiningengine 228 determines that the location “Park Chow” is actionable only if Aaron positively answers thequestion 1002, for example, with themessage 1008 “Sure”. As a result, the location suggestion (e.g., the map 1004) may only be displayed once after Aaron sends themessage 1008. In other words, the location suggestion may not be incorporated into the transcript of the conversation until Aaron sends themessage 1008 via interaction with the affirmative interaction element “Sure””. Aaron and Bob may alternatively select the “Umm, nope” option 1010 to indicate that the map is not the suggestion the users want or the map is wrong or other negative reactions. In those situations the suggestion may be discarded without static implementation into a transcript of the conversation. InFIG. 10 , the entire suggestion generation process is handled by a suggestion application 132. -
FIG. 11A is a graphic representation of an example conversation interface showing a conversation generated by a conversation service. An ongoing conversation between users Melissa G., Alice Z., Chris B. is displayed on theconversation interface 1100. The users Melissa G., Alice Z., Chris B may be members of a social network in this non-limiting example. The conversation session between the users is generated and managed by a first application (e.g., a suggestion application 132) in the social network. Theconversation interface 1100 can be displayed on Melissa's computer screen. In this example, the users converse about a plan that night, Melissa expresses interest in shopping and states that “Dress Factory is good. I am wondering if they have any discount right now.” When thesuggestion application 132 b identifies that the important entities in this message are “Dress Factory” and “discount,” thesuggestion application 132 b generates a suggestion based on these important entities. However, instead of generating a suggestion by thesuggestion application 132 b as inFIG. 10 , thesuggestion application 132 b feeds the information “Dress Factory” and “discount” to another service (e.g., a third-party promotion service) to generate a suggestion. - Now referring to
FIG. 11B , which is a graphic representation of an example conversation interface showing a suggestion generated by a third-party promotion service. In the illustrated example, theconversation interface 1150 is displayed on Melissa's mobile screen. Theconversation interface 1150 includes asuggestion 1152 “Dress Factory has 20% off for dress and jewelry until May 30.” The promotion service generatessuggestion 1152 based on the entities “Dress Factory” and “discount” identified by thesuggestion application 132 b inFIG. 11A (e.g., after being fed that information by a separate server handling the conversation). In one example, the promotion service may perform a search for the entities on the Internet to generate thesuggestion 1152. Thesuggestion generator 132 b may receive thesuggestion 1152 and then provide thesuggestion 1152 to all, or a subset of, participants of the conversation inFIG. 11A , e.g., Melissa G., Alice Z., and/or Chris B.FIG. 11B displays thesuggestion 1152 on a mobile screen of Melissa, identical to the suggestions shown to Alice or Chris. -
FIG. 12 is a graphic representation of an example conversation interface showing one-tap replies. In the illustratedFIG. 12 , theconversation interface 1200 is displayed on Aaron's mobile screen. Responsive to receiving aquestion 1202 “when is mom's flight going to land?’ from Bob, thesuggestion application 132 b may predict a potential response from Aaron based on previous user actions of Aaron (e.g., a purchase history), and generates a one-tap reply 1204 for Aaron. Theauto reply 1004 lists the flight number, the arrival time and a flight status. Aaron therefore saves time to type an answer to Bob. Similarly, when Bob sends anotherquestion 1206 “will you pick her up at the airport?,” thesuggestion application 132 b determines that this is a yes or no question, and generates a one-tap auto reply 1008 to include two options “YES” or “NO” for Aaron to choose. -
FIG. 13 is a graphic representation of an example conversation interface showing a conversation report. Theconversation interface 1300 includes asearch box 1302, where the user can search for conversations based on participant name, topic, time, combinations thereof, etc. In the illustrated example inFIG. 13 , the user searched for conversations about a movie “star wars.” Responsive to the search request from the user, thesuggestion application 132 b may generate a report. In certain examples, the report may start with asummary 1304 on when the user discussed the topic and the other participants in the conversations, e.g., that Mellissa, Alice and Jenny discussed “star wars” between 7:10-7:30 pm on Wednesday. The report may also include the conversation messages from each participant in a time order. The report may also highlight the keyword “star wars” 1306 searched by the user. In addition, the report may highlight certain entities (e.g., actors “AA” 1108 and “BB” 1310), to enable the user to retrieve more information (e.g., biography, photos) on the entities. Each highlighted and identified entity may be associated with a hyperlink that enables the user to perform a search for the entity on the Internet. -
FIG. 14 is a graphic representation of an example conversation interface showing a conversation summary. In the illustrated example, theconversation interface 1400 includes aconversation summary 1402 generated by thesuggestion application 132 b for a user summarizing the conversations that the user participated in during a week. The conversation summary may include twoexemplary portions first portion 1402, the summary may include the number of conversations the user participated in during the past week, and some basic information on the conversations, e.g., time of day, date, identities of the other participants, and the like. Thefirst portion 1402 may also include adetail option 1406 for each conversation that provides further details on each conversation including conversation messages from each participant, the time when each message was sent, etc. Thesecond portion 1404 may include salient information on the conversations conducted in the past week including, for example, the topics discussed in the conversations (optionally, apie chart 1408 describing the percentage of each topic in the conversations), audio/visual content shared in the conversations (optionally, alink 1410 to play the content), thephotos 1412 shared in the two conversations. -
FIG. 15 includes graphic representations of example conversation interfaces showing serial presentation of suggestions. In the illustratedFIG. 15 , theconversation interface 1500 is displayed on a user's mobile screen. Responsive to receiving amessage 1502 “meet up for a meal?,” thesuggestion application 132 b generates and displaysoptions 1504 for “lunch,” “dinner,” “brunch,” etc. The user may select one of theoptions 1504 first suggested to the user and triggers a second suggestion to be generated.FIG. 15 displays aconversation interface 1550 generated responsive to receiving the user selection as shown in theoption 1506. Upon the user's selection for lunch in theoption 1506, thesuggestion application 132 b generates and displays certain restaurants open for lunch. In certain implementations, thesuggestion application 132 b may display only those restaurants that are within a certain distance range of all of the participants in the conversation. In some examples, therestaurant information 1508 may include a restaurant name, a restaurant type, a review and a price. - In certain implementations, the displayed restaurant information may be selectable and actionable. In one example, the user may select a particular restaurant and display it to the other participants in the conversation, e.g., as a message including the restaurant name, as a message including the restaurant name and prefilled default words suitable to the conversation (e.g., “let's meet at . . . ”). In another example, the user may select a particular restaurant to perform a search for the restaurant on the Internet, retrieve merchant information from a website, retrieve a map of the restaurant location, and the like. The user may then choose to display the retrieved information to the other participants in the conversation, e.g., by inserting a map of the restaurant location into the conversation interface.
- Reference in the specification to “some instances” or “an embodiment” means that a particular feature, structure, or characteristic described in connection with the embodiment is included in at least some instances of the description. The appearances of the phrase “in some instances” in various places in the specification are not necessarily all referring to the same embodiment.
- Some portions of the detailed description are presented in terms of algorithms and symbolic representations of operations on data bits within a computer memory. These algorithmic descriptions and representations are the means used by those skilled in the data processing arts to most effectively convey the substance of their work to others skilled in the art. An algorithm is here, and generally, conceived to be a self-consistent sequence of steps leading to a desired result. The steps are those requiring physical manipulations of physical quantities. Usually, though not necessarily, these quantities take the form of electrical or magnetic signals capable of being stored, transferred, combined, compared, and otherwise manipulated. It has proven convenient at times, principally for reasons of common usage, to refer to these signals as bits, values, elements, symbols, characters, terms, numbers or the like.
- It should be borne in mind, however, that all of these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to these quantities. Unless specifically stated otherwise as apparent from the following discussion, it is appreciated that throughout the description, discussions utilizing terms such as “processing” or “computing” or “calculating” or “determining” or “displaying” or the like, refer to the action and processes of a computer system, or similar electronic computing device, that manipulates and transforms data represented as physical (electronic) quantities within the computer system's registers and memories into other data similarly represented as physical quantities within the computer system memories or registers or other such information storage, transmission or display devices.
- The specification also relates to an apparatus for performing the operations herein. This apparatus may be specially constructed for the required purposes, or it may include a general-purpose computer selectively activated or reconfigured by a computer program stored in the computer. Such a computer program may be stored in a non-transitory computer readable storage medium, such as, but is not limited to, any type of disk including floppy disks, optical disks, CD-ROMs, and magnetic disks, read-only memories (ROMs), random access memories (RAMs), erasable programmable read-only memory (EPROMs), electrically erasable programmable read-only memory (EEPROMs), magnetic or optical cards, flash memories including USB keys with non-volatile memory or any type of media suitable for storing electronic instructions, each coupled to a computer system bus.
- The specification can take the form of an entirely hardware embodiment, an entirely software embodiment or embodiments containing both hardware and software elements. In some instances, the specification is implemented in software, which includes but is not limited to firmware, resident software, microcode, etc.
- Furthermore, the description can take the form of a computer program product accessible from a non-transitory computer-usable or computer-readable medium providing program code for use by or in connection with a computer or any instruction execution system. For the purposes of this description, a non-transitory computer-usable or computer readable medium can be any apparatus that can contain, store, communicate, propagate, or transport the program for use by or in connection with the instruction execution system, apparatus, or device.
- A data processing system suitable for storing and/or executing program code will include at least one processor coupled directly or indirectly to memory elements through a system bus. The memory elements can include local memory employed during actual execution of the program code, bulk storage, and cache memories which provide temporary storage of at least some program code in order to reduce the number of times code must be retrieved from bulk storage during execution.
- Input/output or I/O devices (including but not limited to keyboards, displays, pointing devices, etc.) can be coupled to the system either directly or through intervening I/O controllers.
- Network adapters may also be coupled to the system to enable the data processing system to become coupled to other data processing systems or remote printers or social network data stores through intervening private or public networks. Modems, cable modem and Ethernet cards are just a few of the currently available types of network adapters.
- Finally, the algorithms and displays presented herein are not inherently related to any particular computer or other apparatus. Various general-purpose systems may be used with programs in accordance with the teachings herein, or it may prove convenient to construct more specialized apparatus to perform the required method steps. The required structure for a variety of these systems will appear from the description below. In addition, the specification is not described with reference to any particular programming language. It will be appreciated that a variety of programming languages may be used to implement the teachings of the specification as described herein.
- In situations in which the systems discussed here collect personal information about users, or may make use of personal information, the users may be provided with an opportunity to control whether programs or features collect user information (e.g., information about a user's social network, social actions or activities, profession, a user's preferences, or a user's current location), or to control whether and/or how to receive content from the content server that may be more relevant to the user. In addition, certain data may be treated in one or more ways before it is stored or used, so that personally identifiable information is removed. For example, a user's identity may be treated so that no personally identifiable information can be determined for the user, or a user's geographic location may be generalized where location information is obtained (such as to a city, ZIP code, or state level), so that a particular location of a user cannot be determined. Thus, the user may have control over how information is collected about the user and used by the various components of the system.
- The foregoing description of the embodiments of the specification has been presented for the purposes of illustration and description. It is not intended to be exhaustive or to limit the specification to the precise form disclosed. Many modifications and variations are possible in light of the above teaching. It is intended that the scope of the disclosure be limited not by this detailed description, but rather by the claims of this application. As will be understood by those familiar with the art, the specification may be embodied in other specific forms without departing from the spirit or essential characteristics thereof. Likewise, the particular naming and division of the modules, routines, features, attributes, methodologies and other aspects are not mandatory or significant, and the mechanisms that implement the specification or its features may have different names, divisions and/or formats. Furthermore, as will be apparent to one of ordinary skill in the relevant art, the modules, routines, features, attributes, methodologies and other aspects of the disclosure can be implemented as software, hardware, firmware or any combination of the three. Also, wherever a component, an example of which is a module, of the specification is implemented as software, the component can be implemented as a standalone program, as part of a larger program, as a plurality of separate programs, as a statically or dynamically linked library, as a kernel loadable module, as a device driver, and/or in every and any other way known now or in the future to those of ordinary skill in the art of computer programming. Additionally, the disclosure is in no way limited to implementation in any specific programming language, or for any specific operating system or environment. Accordingly, the disclosure is intended to be illustrative, but not limiting, of the scope of the specification, which is set forth in the following claims.
Claims (20)
Priority Applications (5)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
JP2018551908A JP6638087B2 (en) | 2015-12-21 | 2016-12-21 | Automatic suggestions for conversation threads |
US15/386,162 US10530723B2 (en) | 2015-12-21 | 2016-12-21 | Automatic suggestions for message exchange threads |
PCT/US2016/068059 WO2017112786A1 (en) | 2015-12-21 | 2016-12-21 | Automatic suggestions for message exchange threads |
KR1020187019756A KR20180093040A (en) | 2015-12-21 | 2016-12-21 | Automatic suggestions for message exchange threads |
US16/692,821 US11418471B2 (en) | 2015-12-21 | 2019-11-22 | Automatic suggestions for message exchange threads |
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US201562270454P | 2015-12-21 | 2015-12-21 | |
US15/386,162 US10530723B2 (en) | 2015-12-21 | 2016-12-21 | Automatic suggestions for message exchange threads |
Related Child Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US16/692,821 Continuation US11418471B2 (en) | 2015-12-21 | 2019-11-22 | Automatic suggestions for message exchange threads |
Publications (2)
Publication Number | Publication Date |
---|---|
US20170180294A1 true US20170180294A1 (en) | 2017-06-22 |
US10530723B2 US10530723B2 (en) | 2020-01-07 |
Family
ID=59066635
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US15/386,162 Active 2037-06-11 US10530723B2 (en) | 2015-12-21 | 2016-12-21 | Automatic suggestions for message exchange threads |
US16/692,821 Active 2037-06-27 US11418471B2 (en) | 2015-12-21 | 2019-11-22 | Automatic suggestions for message exchange threads |
Family Applications After (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US16/692,821 Active 2037-06-27 US11418471B2 (en) | 2015-12-21 | 2019-11-22 | Automatic suggestions for message exchange threads |
Country Status (6)
Country | Link |
---|---|
US (2) | US10530723B2 (en) |
EP (1) | EP3395018A1 (en) |
JP (1) | JP6638087B2 (en) |
KR (1) | KR20180093040A (en) |
CN (1) | CN108781175B (en) |
WO (1) | WO2017112786A1 (en) |
Cited By (83)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20170201481A1 (en) * | 2016-01-13 | 2017-07-13 | Pooja Bisarya | Method and system for enabling messaging between users |
US20170222956A1 (en) * | 2016-02-01 | 2017-08-03 | Priya Jain | Method and system for enabling an auto response facility between users |
US10015124B2 (en) * | 2016-09-20 | 2018-07-03 | Google Llc | Automatic response suggestions based on images received in messaging applications |
US20180331839A1 (en) * | 2015-12-22 | 2018-11-15 | Microsoft Technology Licensing, Llc | Emotionally intelligent chat engine |
US10146768B2 (en) | 2017-01-25 | 2018-12-04 | Google Llc | Automatic suggested responses to images received in messages using language model |
FR3067554A1 (en) * | 2017-06-23 | 2018-12-14 | Orange | METHOD AND DEVICE FOR PROCESSING TEXT MESSAGES RECEIVED BY A MESSENGER APPLICATION EXECUTED IN A USER COMMUNICATION TERMINAL |
WO2019005348A1 (en) * | 2017-06-28 | 2019-01-03 | Microsoft Technology Licensing, Llc | Virtual assistant providing enhanced communication session services |
US20190005021A1 (en) * | 2017-06-29 | 2019-01-03 | Microsoft Technology Licensing, Llc | Virtual assistant for generating personalized responses within a communication session |
US20190050774A1 (en) * | 2017-08-08 | 2019-02-14 | General Electric Company | Methods and apparatus to enhance emotional intelligence using digital technology |
US20190081916A1 (en) * | 2016-04-08 | 2019-03-14 | Microsoft Technology Licensing, Llc | Proactive intelligent personal assistant |
US10296830B2 (en) * | 2017-04-28 | 2019-05-21 | International Business Machines Corporation | Dynamic topic guidance in the context of multi-round conversation |
US20190182616A1 (en) * | 2017-12-08 | 2019-06-13 | Facebook, Inc. | Techniques for providing meeting location suggestions |
US10348658B2 (en) | 2017-06-15 | 2019-07-09 | Google Llc | Suggested items for use with embedded applications in chat conversations |
US20190222544A1 (en) * | 2017-09-27 | 2019-07-18 | Slack Technologies, Inc. | Triggering event identification and application dialog validation |
JP2019133385A (en) * | 2018-01-31 | 2019-08-08 | Ｄｙｎａｂｏｏｋ株式会社 | Electronic apparatus, control method and program |
US10387461B2 (en) | 2016-08-16 | 2019-08-20 | Google Llc | Techniques for suggesting electronic messages based on user activity and other context |
US10404636B2 (en) | 2017-06-15 | 2019-09-03 | Google Llc | Embedded programs and interfaces for chat conversations |
US10416846B2 (en) | 2016-11-12 | 2019-09-17 | Google Llc | Determining graphical element(s) for inclusion in an electronic communication |
US20190327200A1 (en) * | 2018-04-20 | 2019-10-24 | Microsoft Technology Licensing, Llc | Customized controls for handling communication content |
US10511450B2 (en) | 2016-09-20 | 2019-12-17 | Google Llc | Bot permissions |
US20190384811A1 (en) * | 2018-06-14 | 2019-12-19 | Pubali Sen | System and method for communication exchange feedback |
US10530723B2 (en) | 2015-12-21 | 2020-01-07 | Google Llc | Automatic suggestions for message exchange threads |
US10547574B2 (en) | 2016-09-20 | 2020-01-28 | Google Llc | Suggested responses based on message stickers |
CN110741396A (en) * | 2017-11-06 | 2020-01-31 | 谷歌有限责任公司 | Training and/or utilizing an interaction prediction model to determine when to interact with and/or prompt for interaction with an application based on electronic communications |
US10552747B2 (en) | 2014-04-22 | 2020-02-04 | Google Llc | Automatic actions based on contextual replies |
US20200044990A1 (en) * | 2018-07-31 | 2020-02-06 | Microsoft Technology Licensing, Llc | Sequence to sequence to classification model for generating recommended messages |
US20200053035A1 (en) * | 2018-08-10 | 2020-02-13 | International Business Machines Corporation | Electronic communication message coaching service |
US20200066255A1 (en) * | 2018-08-24 | 2020-02-27 | International Business Machines Corporation | Unsupervised Learning of Interpretable Conversation Models from Conversation Logs |
US10587553B1 (en) * | 2017-12-29 | 2020-03-10 | Entefy Inc. | Methods and systems to support adaptive multi-participant thread monitoring |
US10601937B2 (en) * | 2017-11-22 | 2020-03-24 | Spredfast, Inc. | Responsive action prediction based on electronic messages among a system of networked computing devices |
US20200159861A1 (en) * | 2018-11-16 | 2020-05-21 | Sap Se | Combination content search |
US20200159827A1 (en) * | 2018-11-15 | 2020-05-21 | Nuance Communications, Inc. | System and method for accelerating user agent chats |
US10757048B2 (en) | 2016-04-08 | 2020-08-25 | Microsoft Technology Licensing, Llc | Intelligent personal assistant as a contact |
US10757043B2 (en) | 2015-12-21 | 2020-08-25 | Google Llc | Automatic suggestions and other content for messaging applications |
US10764534B1 (en) | 2017-08-04 | 2020-09-01 | Grammarly, Inc. | Artificial intelligence communication assistance in audio-visual composition |
US10785222B2 (en) | 2018-10-11 | 2020-09-22 | Spredfast, Inc. | Credential and authentication management in scalable data networks |
US10846618B2 (en) | 2016-09-23 | 2020-11-24 | Google Llc | Smart replies using an on-device model |
US10855657B2 (en) | 2018-10-11 | 2020-12-01 | Spredfast, Inc. | Multiplexed data exchange portal interface in scalable data networks |
US10860854B2 (en) | 2017-05-16 | 2020-12-08 | Google Llc | Suggested actions for images |
US10862834B2 (en) * | 2016-11-14 | 2020-12-08 | Tencent Technology (Shenzhen) Company Limited | Method and apparatus for generating descriptive texts corresponding to chat message images via a condition probability model |
US10866989B1 (en) * | 2018-04-06 | 2020-12-15 | Architecture Technology Corporation | Real time recommender modeling system, methods of construction, and methods of use |
US10891526B2 (en) | 2017-12-22 | 2021-01-12 | Google Llc | Functional image archiving |
US10901577B2 (en) | 2018-07-17 | 2021-01-26 | Google Llc | Methods and systems for input suggestion |
US10902462B2 (en) | 2017-04-28 | 2021-01-26 | Khoros, Llc | System and method of providing a platform for managing data content campaign on social networks |
US10902190B1 (en) * | 2019-07-03 | 2021-01-26 | Microsoft Technology Licensing Llc | Populating electronic messages with quotes |
US10931540B2 (en) | 2019-05-15 | 2021-02-23 | Khoros, Llc | Continuous data sensing of functional states of networked computing devices to determine efficiency metrics for servicing electronic messages asynchronously |
CN112448879A (en) * | 2019-08-27 | 2021-03-05 | 腾讯科技（深圳）有限公司 | Reminding message pushing method and device, terminal and computer readable storage medium |
US10956459B2 (en) | 2017-10-12 | 2021-03-23 | Spredfast, Inc. | Predicting performance of content and electronic messages among a system of networked computing devices |
US10956474B2 (en) | 2019-03-14 | 2021-03-23 | Microsoft Technology Licensing, Llc | Determination of best set of suggested responses |
US10999278B2 (en) | 2018-10-11 | 2021-05-04 | Spredfast, Inc. | Proxied multi-factor authentication using credential and authentication management in scalable data networks |
US20210136164A1 (en) * | 2017-06-22 | 2021-05-06 | Numberai, Inc. | Automated communication-based intelligence engine |
US20210182879A1 (en) * | 2019-12-13 | 2021-06-17 | Jpmorgan Chase Bank, N.A. | System and method for providing intelligent dashboards for critical business flows |
US11050704B2 (en) | 2017-10-12 | 2021-06-29 | Spredfast, Inc. | Computerized tools to enhance speed and propagation of content in electronic messages among a system of networked computing devices |
US11061900B2 (en) | 2018-01-22 | 2021-07-13 | Spredfast, Inc. | Temporal optimization of data operations using distributed search and server management |
US11074284B2 (en) * | 2018-05-07 | 2021-07-27 | International Business Machines Corporation | Cognitive summarization and retrieval of archived communications |
US11102271B2 (en) | 2018-01-22 | 2021-08-24 | Spredfast, Inc. | Temporal optimization of data operations using distributed search and server management |
US11128589B1 (en) | 2020-09-18 | 2021-09-21 | Khoros, Llc | Gesture-based community moderation |
US11159473B2 (en) * | 2016-10-10 | 2021-10-26 | Facebook, Inc. | Systems and methods for sharing content |
US11182860B2 (en) * | 2018-10-05 | 2021-11-23 | The Toronto-Dominion Bank | System and method for providing photo-based estimation |
US11322264B2 (en) | 2018-04-23 | 2022-05-03 | DNAFeed Inc. | Systems and methods for human-augmented communications |
US11321410B2 (en) * | 2018-12-18 | 2022-05-03 | Tencent Technology (Shenzhen) Company Limited | Information recommendation method and apparatus, device, and storage medium |
US20220139383A1 (en) * | 2020-10-30 | 2022-05-05 | Nvidia Corporation | Real-time video conference chat filtering using machine learning models |
US11329934B2 (en) * | 2019-06-07 | 2022-05-10 | Fujitsu Limited | Recording medium, information management method, and information management apparatus |
US20220166737A1 (en) * | 2019-03-29 | 2022-05-26 | Aill Inc. | Communication support server, communication support system, communication support method, and communication support program |
US20220191156A1 (en) * | 2016-06-03 | 2022-06-16 | Spotify Ab | System and method for providing digital media content with a conversational messaging environment |
US11436408B2 (en) * | 2020-07-01 | 2022-09-06 | Motorola Mobility Llc | Targeted natural language responses for electronic communications |
US11438282B2 (en) | 2020-11-06 | 2022-09-06 | Khoros, Llc | Synchronicity of electronic messages via a transferred secure messaging channel among a system of various networked computing devices |
US11436415B2 (en) * | 2017-02-27 | 2022-09-06 | International Business Machines Corporation | Message sentiment based alert |
US11438289B2 (en) | 2020-09-18 | 2022-09-06 | Khoros, Llc | Gesture-based community moderation |
US20220291789A1 (en) * | 2019-07-11 | 2022-09-15 | Google Llc | System and Method for Providing an Artificial Intelligence Control Surface for a User of a Computing Device |
US11470161B2 (en) | 2018-10-11 | 2022-10-11 | Spredfast, Inc. | Native activity tracking using credential and authentication management in scalable data networks |
US11494440B1 (en) * | 2017-04-12 | 2022-11-08 | Meta Platforms, Inc. | Proactive and reactive suggestions for a messaging system |
US11521611B2 (en) | 2019-12-19 | 2022-12-06 | Palo Alto Research Center Incorporated | Using conversation structure and content to answer questions in multi-part online interactions |
CN115550304A (en) * | 2018-08-22 | 2022-12-30 | 谷歌有限责任公司 | Method, apparatus, and storage medium for determining a set of activity instances for a group of users |
US11555622B2 (en) * | 2019-12-19 | 2023-01-17 | International Business Machines Corporation | Intelligent context-based control of air flow |
US11570128B2 (en) | 2017-10-12 | 2023-01-31 | Spredfast, Inc. | Optimizing effectiveness of content in electronic messages among a system of networked computing device |
US11627100B1 (en) | 2021-10-27 | 2023-04-11 | Khoros, Llc | Automated response engine implementing a universal data space based on communication interactions via an omnichannel electronic data channel |
US11714629B2 (en) | 2020-11-19 | 2023-08-01 | Khoros, Llc | Software dependency management |
US11741551B2 (en) | 2013-03-21 | 2023-08-29 | Khoros, Llc | Gamification for online social communities |
US20230306515A1 (en) * | 2020-04-15 | 2023-09-28 | Xero Limited | Systems and Computer-Implemented Methods for Capital Management |
US11777874B1 (en) * | 2018-12-14 | 2023-10-03 | Carvana, LLC | Artificial intelligence conversation engine |
EP4156696A4 (en) * | 2020-11-25 | 2023-11-22 | Beijing Zitiao Network Technology Co., Ltd. | Method, apparatus, and device for publishing and replying to multimedia content |
US11924375B2 (en) | 2021-10-27 | 2024-03-05 | Khoros, Llc | Automated response engine and flow configured to exchange responsive communication data via an omnichannel electronic communication channel independent of data source |
Families Citing this family (17)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CA2763862C (en) | 2009-06-09 | 2017-04-25 | Mardi Medicines Ltd. | Halogenated aliphatic carboxylic acids, oligomers and/or polymers thereof and their use in devitalizing external and internal neoplasms |
US10846475B2 (en) * | 2015-12-23 | 2020-11-24 | Beijing Xinmei Hutong Technology Co., Ltd. | Emoji input method and device thereof |
US10263933B2 (en) | 2016-05-17 | 2019-04-16 | Google Llc | Incorporating selectable application links into message exchange threads |
US10291565B2 (en) | 2016-05-17 | 2019-05-14 | Google Llc | Incorporating selectable application links into conversations with personal assistant modules |
US10652189B2 (en) | 2017-10-19 | 2020-05-12 | Chicago Mercantile Exchange Inc. | Message encoding and transmission across multiple platforms |
US20220180069A1 (en) * | 2019-03-29 | 2022-06-09 | Aill Inc. | Communication assistance server, communication assistance system, communication assistance method, and communication assistance program |
JP7409781B2 (en) * | 2019-04-01 | 2024-01-09 | Ｌｉｎｅヤフー株式会社 | Output program, output device and output method |
US11176520B2 (en) | 2019-04-18 | 2021-11-16 | Microsoft Technology Licensing, Llc | Email content modification system |
US11023298B1 (en) * | 2020-02-28 | 2021-06-01 | Snap Inc. | Displaying items based on a configuration file |
US11462220B2 (en) * | 2020-03-04 | 2022-10-04 | Accenture Global Solutions Limited | Infrastructure automation platform to assist in performing actions in response to tasks |
US10951564B1 (en) | 2020-04-17 | 2021-03-16 | Slack Technologies, Inc. | Direct messaging instance generation |
US11784949B2 (en) | 2020-10-06 | 2023-10-10 | Salesforce, Inc. | Limited functionality interface for communication platform |
US11283751B1 (en) * | 2020-11-03 | 2022-03-22 | International Business Machines Corporation | Using speech and facial bio-metrics to deliver text messages at the appropriate time |
US11792141B2 (en) * | 2021-01-12 | 2023-10-17 | Meta Platforms Technologies, Llc | Automated messaging reply-to |
US11816097B2 (en) | 2021-06-08 | 2023-11-14 | Capital One Services, Llc | Geographical location determination system |
US11743215B1 (en) | 2021-06-28 | 2023-08-29 | Meta Platforms Technologies, Llc | Artificial reality messaging with destination selection |
US11822562B2 (en) | 2022-03-31 | 2023-11-21 | Capital One Services, Llc | Unstructured text processing for geographical location determination system |
Family Cites Families (309)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5963649A (en) | 1995-12-19 | 1999-10-05 | Nec Corporation | Message authorization system for authorizing message for electronic document |
US6092102A (en) | 1997-10-24 | 2000-07-18 | University Of Pittsburgh Of The Commonwealth System Of Higher Education | System and method for notifying users about information or events of an enterprise |
US7904187B2 (en) | 1999-02-01 | 2011-03-08 | Hoffberg Steven M | Internet appliance system and method |
JP2000298676A (en) | 1999-04-14 | 2000-10-24 | Bandai Co Ltd | Information supply device |
US7216080B2 (en) | 2000-09-29 | 2007-05-08 | Mindfabric Holdings Llc | Natural-language voice-activated personal assistant |
JP2002132804A (en) | 2000-10-24 | 2002-05-10 | Sanyo Electric Co Ltd | User support system |
US20020103837A1 (en) | 2001-01-31 | 2002-08-01 | International Business Machines Corporation | Method for handling requests for information in a natural language understanding system |
WO2003024094A1 (en) | 2001-09-10 | 2003-03-20 | Nikon Corporation | Digital camera system, image storage apparatus, and digital camera |
US7636750B2 (en) | 2001-10-24 | 2009-12-22 | Sprint Spectrum L.P. | Method and system for controlling scope of user participation in a communication session |
US7283992B2 (en) | 2001-11-30 | 2007-10-16 | Microsoft Corporation | Media agent to suggest contextually related media content |
US20040001099A1 (en) | 2002-06-27 | 2004-01-01 | Microsoft Corporation | Method and system for associating actions with semantic labels in electronic documents |
US7234117B2 (en) | 2002-08-28 | 2007-06-19 | Microsoft Corporation | System and method for shared integrated online social interaction |
US20110107223A1 (en) | 2003-01-06 | 2011-05-05 | Eric Tilton | User Interface For Presenting Presentations |
JP3669702B2 (en) | 2003-02-25 | 2005-07-13 | 松下電器産業株式会社 | Application program prediction method and mobile terminal |
BRPI0410362B1 (en) | 2003-05-16 | 2017-06-20 | Google Inc. | SYSTEMS AND METHODS OF SHARING NETWORK AND NETWORK MEDIA |
US8645697B1 (en) | 2003-08-08 | 2014-02-04 | Radix Holdings, Llc | Message authorization |
US7363029B2 (en) | 2003-09-12 | 2008-04-22 | Core Mobility, Inc. | Unified interface for voice, text or picture message authoring |
US20120322428A1 (en) | 2004-09-30 | 2012-12-20 | Motedata Inc. | Network of tags |
US10635723B2 (en) | 2004-02-15 | 2020-04-28 | Google Llc | Search engines and systems with handheld document data capture devices |
US7363295B2 (en) | 2004-04-19 | 2008-04-22 | Yahoo! Inc. | Techniques for inline searching in an instant messenger environment |
US20060029106A1 (en) | 2004-06-14 | 2006-02-09 | Semandex Networks, Inc. | System and method for providing content-based instant messaging |
US7464110B2 (en) | 2004-06-30 | 2008-12-09 | Nokia Corporation | Automated grouping of image and other user data |
US7734927B2 (en) | 2004-07-21 | 2010-06-08 | International Business Machines Corporation | Real-time voting based authorization in an autonomic workflow process using an electronic messaging system |
US7917582B2 (en) | 2004-07-27 | 2011-03-29 | Siemens Enterprise Communications, Inc. | Method and apparatus for autocorrelation of instant messages |
US20060150119A1 (en) | 2004-12-31 | 2006-07-06 | France Telecom | Method for interacting with automated information agents using conversational queries |
US7720436B2 (en) | 2006-01-09 | 2010-05-18 | Nokia Corporation | Displaying network objects in mobile devices based on geolocation |
US7197324B2 (en) | 2005-01-31 | 2007-03-27 | Sweeney Robert J | Permission based text messaging |
US7603413B1 (en) | 2005-04-07 | 2009-10-13 | Aol Llc | Using automated agents to facilitate chat communications |
US7860319B2 (en) | 2005-05-11 | 2010-12-28 | Hewlett-Packard Development Company, L.P. | Image management |
US7512580B2 (en) | 2005-08-04 | 2009-03-31 | Sap Ag | Confidence indicators for automated suggestions |
CN1988461A (en) | 2005-12-23 | 2007-06-27 | 腾讯科技（深圳）有限公司 | Chat scence music playing method and system for instant communication tool |
US7747785B2 (en) | 2006-04-14 | 2010-06-29 | Microsoft Corporation | Instant messaging plug-ins |
US9318108B2 (en) | 2010-01-18 | 2016-04-19 | Apple Inc. | Intelligent automated assistant |
US20090187831A1 (en) | 2006-10-10 | 2009-07-23 | Shahzad Tiwana | Integrated Electronic Mail and Instant Messaging System |
US20080120371A1 (en) | 2006-11-16 | 2008-05-22 | Rajat Gopal | Relational framework for non-real-time audio/video collaboration |
WO2008072093A2 (en) | 2006-12-13 | 2008-06-19 | Quickplay Media Inc. | Mobile media platform |
JP2008191748A (en) | 2007-02-01 | 2008-08-21 | Oki Electric Ind Co Ltd | Inter-user communication method, inter-user communication program and inter-user communication device |
WO2008153098A1 (en) | 2007-06-14 | 2008-12-18 | Sharp Kabushiki Kaisha | Image data reception device, operation device, operation system, image data structure, control method, operation method, program, and recording medium |
JP2009009334A (en) | 2007-06-27 | 2009-01-15 | Ricoh Co Ltd | Image processor, image processing method, and image processing program |
CN101159576B (en) | 2007-08-30 | 2013-07-17 | 腾讯科技（深圳）有限公司 | Chatting method, chatting room client terminal, system management background and server |
US20110145068A1 (en) | 2007-09-17 | 2011-06-16 | King Martin T | Associating rendered advertisements with digital content |
US8638363B2 (en) | 2009-02-18 | 2014-01-28 | Google Inc. | Automatically capturing information, such as capturing information using a document-aware device |
US8082151B2 (en) | 2007-09-18 | 2011-12-20 | At&T Intellectual Property I, Lp | System and method of generating responses to text-based messages |
US20090119584A1 (en) | 2007-11-02 | 2009-05-07 | Steve Herbst | Software Tool for Creating Outlines and Mind Maps that Generates Subtopics Automatically |
CA2708757A1 (en) | 2007-12-17 | 2009-06-25 | Play Megaphone | System and method for managing interaction between a user and an interactive system |
US20110022992A1 (en) | 2008-03-31 | 2011-01-27 | Koninklijke Philips Electronics N.V. | Method for modifying a representation based upon a user instruction |
US20090282114A1 (en) | 2008-05-08 | 2009-11-12 | Junlan Feng | System and method for generating suggested responses to an email |
US20090327436A1 (en) | 2008-06-30 | 2009-12-31 | Chen Shihn-Cheng | Instant messaging network control module |
US8166019B1 (en) | 2008-07-21 | 2012-04-24 | Sprint Communications Company L.P. | Providing suggested actions in response to textual communications |
JP5273712B2 (en) | 2008-08-11 | 2013-08-28 | シャープ株式会社 | Information processing apparatus, information processing method, and information processing program |
US8805110B2 (en) | 2008-08-19 | 2014-08-12 | Digimarc Corporation | Methods and systems for content processing |
EP2321948B1 (en) | 2008-08-25 | 2017-11-15 | Orange | Method to identify and transfer to a wireless device actionable items based on user selected content |
US8391618B1 (en) | 2008-09-19 | 2013-03-05 | Adobe Systems Incorporated | Semantic image classification and search |
US8055710B2 (en) | 2008-09-24 | 2011-11-08 | International Business Machines Corporation | System, method and computer program product for intelligent multi-person chat history injection |
USD611053S1 (en) | 2008-11-24 | 2010-03-02 | Microsoft Corporation | Transitional user interface for a portion of a display screen |
USD599363S1 (en) | 2008-11-24 | 2009-09-01 | Microsoft Corporation | Transitional cursor user interface for a portion of a display screen |
US20130036162A1 (en) | 2009-02-10 | 2013-02-07 | Mikekoenigs.Com, Inc. | Automated Communication Techniques |
US20100228590A1 (en) | 2009-03-03 | 2010-09-09 | International Business Machines Corporation | Context-aware electronic social networking |
JP4739438B2 (en) | 2009-03-26 | 2011-08-03 | 株式会社エヌ・ティ・ティ・ドコモ | Communication terminal and mail reply method |
US8938677B2 (en) | 2009-03-30 | 2015-01-20 | Avaya Inc. | System and method for mode-neutral communications with a widget-based communications metaphor |
US9195898B2 (en) | 2009-04-14 | 2015-11-24 | Qualcomm Incorporated | Systems and methods for image recognition using mobile devices |
US20120131520A1 (en) | 2009-05-14 | 2012-05-24 | Tang ding-yuan | Gesture-based Text Identification and Selection in Images |
US9782527B2 (en) | 2009-05-27 | 2017-10-10 | Tc1 Llc | Monitoring of redundant conductors |
US9043407B1 (en) | 2009-06-12 | 2015-05-26 | Avaya Inc. | Interactive user interface to communication-enabled business process platforms method and apparatus |
USD651609S1 (en) | 2009-06-26 | 2012-01-03 | Microsoft Corporation | Display screen with an animated image |
CA2767033A1 (en) | 2009-07-02 | 2011-01-06 | Livechime, Inc. | System and method for enhancing digital content |
US8572084B2 (en) | 2009-07-28 | 2013-10-29 | Fti Consulting, Inc. | System and method for displaying relationships between electronically stored information to provide classification suggestions via nearest neighbor |
US9128610B2 (en) | 2009-09-30 | 2015-09-08 | At&T Mobility Ii Llc | Virtual predictive keypad |
US8121618B2 (en) | 2009-10-28 | 2012-02-21 | Digimarc Corporation | Intuitive computing methods and systems |
US8831279B2 (en) | 2011-03-04 | 2014-09-09 | Digimarc Corporation | Smartphone-based methods and systems |
US8400548B2 (en) | 2010-01-05 | 2013-03-19 | Apple Inc. | Synchronized, interactive augmented reality displays for multifunction devices |
USD624927S1 (en) | 2010-01-19 | 2010-10-05 | Microsoft Corporation | User interface for a portion of a display screen |
US8650210B1 (en) | 2010-02-09 | 2014-02-11 | Google Inc. | Identifying non-search actions based on a search query |
US8782556B2 (en) * | 2010-02-12 | 2014-07-15 | Microsoft Corporation | User-centric soft keyboard predictive technologies |
US8655965B2 (en) | 2010-03-05 | 2014-02-18 | Qualcomm Incorporated | Automated messaging response in wireless communication systems |
US8266109B1 (en) | 2010-03-09 | 2012-09-11 | Symantec Corporation | Performance of scanning containers for archiving |
JP2011211696A (en) | 2010-03-10 | 2011-10-20 | Nikon Corp | Image data processing system, image data processing program, and image data processing apparatus |
JP5733907B2 (en) | 2010-04-07 | 2015-06-10 | キヤノン株式会社 | Image processing apparatus, image processing method, and computer program |
US20110252207A1 (en) | 2010-04-08 | 2011-10-13 | Oracle International Corporation | Dynamic content archiving |
US9929982B2 (en) | 2010-04-08 | 2018-03-27 | Microsoft Technology Licensing, Llc | Designating automated agents as friends in a social network service |
US20170098122A1 (en) | 2010-06-07 | 2017-04-06 | Affectiva, Inc. | Analysis of image content with associated manipulation of expression presentation |
USD648343S1 (en) | 2010-06-24 | 2011-11-08 | Microsoft Corporation | Display screen with user interface |
USD648735S1 (en) | 2010-06-25 | 2011-11-15 | Microsoft Corporation | Display screen with animated user interface |
US20120030289A1 (en) | 2010-07-30 | 2012-02-02 | Avaya Inc. | System and method for multi-model, context-sensitive, real-time collaboration |
US8781152B2 (en) | 2010-08-05 | 2014-07-15 | Brian Momeyer | Identifying visual media content captured by camera-enabled mobile device |
KR101722687B1 (en) | 2010-08-10 | 2017-04-04 | 삼성전자주식회사 | Method for providing information between objects or object and user, user device, and storage medium thereof |
US9936333B2 (en) | 2010-08-10 | 2018-04-03 | Microsoft Technology Licensing, Llc | Location and contextual-based mobile application promotion and delivery |
US8966590B2 (en) | 2010-08-17 | 2015-02-24 | Facebook, Inc. | Managing social network accessibility based on age |
US9262517B2 (en) | 2010-08-18 | 2016-02-16 | At&T Intellectual Property I, L.P. | Systems and methods for social media data mining |
US8566911B2 (en) | 2010-10-06 | 2013-10-22 | Blackberry Limited | Method of obtaining authorization for accessing a service |
KR101753031B1 (en) | 2010-11-15 | 2017-06-30 | 엘지전자 주식회사 | Mobile terminal and Method for setting metadata thereof |
KR101060753B1 (en) | 2011-01-04 | 2011-08-31 | (주)올라웍스 | Method, terminal, and computer-readable recording medium for supporting collection of object included in inputted image |
US20120179717A1 (en) * | 2011-01-11 | 2012-07-12 | Sony Corporation | System and method for effectively providing entertainment recommendations to device users |
US8688698B1 (en) | 2011-02-11 | 2014-04-01 | Google Inc. | Automatic text suggestion |
GB2502736A (en) | 2011-02-23 | 2013-12-04 | Bottlenose Inc | System and method for analyzing messages in a network or across networks |
US8938669B1 (en) | 2011-03-15 | 2015-01-20 | Google Inc. | Inline user addressing in chat and document editing sessions |
US8849931B2 (en) | 2011-03-15 | 2014-09-30 | Idt Messaging, Llc | Linking context-based information to text messages |
US20130262574A1 (en) | 2011-03-15 | 2013-10-03 | Gabriel Cohen | Inline User Addressing in Chat Sessions |
US8554701B1 (en) | 2011-03-18 | 2013-10-08 | Amazon Technologies, Inc. | Determining sentiment of sentences from customer reviews |
JP2012221480A (en) | 2011-04-06 | 2012-11-12 | L Is B Corp | Message processing system |
WO2012150602A1 (en) | 2011-05-03 | 2012-11-08 | Yogesh Chunilal Rathod | A system and method for dynamically monitoring, recording, processing, attaching dynamic, contextual & accessible active links & presenting of physical or digital activities, actions, locations, logs, life stream, behavior & status |
EP2523436A1 (en) | 2011-05-11 | 2012-11-14 | Alcatel Lucent | Mobile device and method of managing applications for a mobile device |
USD658201S1 (en) | 2011-05-27 | 2012-04-24 | Microsoft Corporation | Display screen with animated user interface |
USD658677S1 (en) | 2011-05-27 | 2012-05-01 | Microsoft Corporation | Display screen with animated user interface |
USD658678S1 (en) | 2011-05-27 | 2012-05-01 | Microsoft Corporation | Display screen with animated user interface |
US8832284B1 (en) | 2011-06-16 | 2014-09-09 | Google Inc. | Virtual socializing |
US8881250B2 (en) | 2011-06-17 | 2014-11-04 | Ebay Inc. | Passporting credentials between a mobile app and a web browser |
US8589407B2 (en) | 2011-06-17 | 2013-11-19 | Google Inc. | Automated generation of suggestions for personalized reactions in a social network |
US8700480B1 (en) | 2011-06-20 | 2014-04-15 | Amazon Technologies, Inc. | Extracting quotes from customer reviews regarding collections of items |
US9588668B2 (en) | 2011-07-21 | 2017-03-07 | Imerj, Llc | Methods of displaying a second view |
US9245253B2 (en) | 2011-08-19 | 2016-01-26 | Disney Enterprises, Inc. | Soft-sending chat messages |
US8659667B2 (en) | 2011-08-29 | 2014-02-25 | Panasonic Corporation | Recipe based real-time assistance for digital image capture and other consumer electronics devices |
US9179278B2 (en) | 2011-09-01 | 2015-11-03 | Qualcomm Incorporated | Systems and methods involving augmented menu using mobile device |
US10102546B2 (en) | 2011-09-15 | 2018-10-16 | Stephan HEATH | System and method for tracking, utilizing predicting, and implementing online consumer browsing behavior, buying patterns, social networking communications, advertisements and communications, for online coupons, products, goods and services, auctions, and service providers using geospatial mapping technology, and social networking |
GB2495222B (en) | 2011-09-30 | 2016-10-26 | Apple Inc | Using context information to facilitate processing of commands in a virtual assistant |
US20180032997A1 (en) | 2012-10-09 | 2018-02-01 | George A. Gordon | System, method, and computer program product for determining whether to prompt an action by a platform in connection with a mobile device |
KR101521332B1 (en) | 2011-11-08 | 2015-05-20 | 주식회사 다음카카오 | Method of provicing a lot of services extended from a instant messaging service and the instant messaging service |
US9697016B2 (en) | 2011-11-15 | 2017-07-04 | Microsoft Technology Licensing, Llc | Search augmented menu and configuration for computer applications |
USD673172S1 (en) | 2011-11-21 | 2012-12-25 | Microsoft Corporation | Display screen with animated graphical user interface |
KR101402506B1 (en) | 2011-12-01 | 2014-06-03 | 라인 가부시키가이샤 | System and method for providing information interactively by instant messaging application |
USD699744S1 (en) | 2012-01-06 | 2014-02-18 | Microsoft Corporation | Display screen with an animated graphical user interface |
USD701228S1 (en) | 2012-01-06 | 2014-03-18 | Samsung Electronics Co., Ltd. | Display screen or portion thereof with transitional graphical user interface |
AU344579S (en) | 2012-01-09 | 2012-09-27 | Samsung Electronics Co Ltd | Display screen for an electronic device |
USD705802S1 (en) | 2012-02-07 | 2014-05-27 | Microsoft Corporation | Display screen with animated graphical user interface |
USD705251S1 (en) | 2012-02-09 | 2014-05-20 | Microsoft Corporation | Display screen with animated graphical user interface |
US9306878B2 (en) | 2012-02-14 | 2016-04-05 | Salesforce.Com, Inc. | Intelligent automated messaging for computer-implemented devices |
GB2499395A (en) | 2012-02-14 | 2013-08-21 | British Sky Broadcasting Ltd | Search method |
USD699739S1 (en) | 2012-02-22 | 2014-02-18 | Microsoft Corporation | Display screen with animated graphical user interface |
US20130218885A1 (en) * | 2012-02-22 | 2013-08-22 | Salesforce.Com, Inc. | Systems and methods for context-aware message tagging |
USD701527S1 (en) | 2012-02-23 | 2014-03-25 | Htc Corporation | Display screen with transitional graphical user interface |
USD701528S1 (en) | 2012-02-24 | 2014-03-25 | Htc Corporation | Display screen with transitional graphical user interface |
US8620021B2 (en) | 2012-03-29 | 2013-12-31 | Digimarc Corporation | Image-related methods and arrangements |
US8855430B1 (en) | 2012-05-30 | 2014-10-07 | Google Inc. | Refining image annotations |
US20130346235A1 (en) | 2012-06-20 | 2013-12-26 | Ebay, Inc. | Systems, Methods, and Computer Program Products for Caching of Shopping Items |
USD705244S1 (en) | 2012-06-20 | 2014-05-20 | Microsoft Corporation | Display screen with animated graphical user interface |
US9191786B2 (en) | 2012-06-27 | 2015-11-17 | At&T Intellectual Property I, L.P. | Method and apparatus for generating a suggested message to be sent over a network |
US9412136B2 (en) | 2012-07-09 | 2016-08-09 | Facebook, Inc. | Creation of real-time conversations based on social location information |
KR20140011073A (en) | 2012-07-17 | 2014-01-28 | 삼성전자주식회사 | Method and apparatus for recommending text |
US9019415B2 (en) | 2012-07-26 | 2015-04-28 | Qualcomm Incorporated | Method and apparatus for dual camera shutter |
US9195645B2 (en) | 2012-07-30 | 2015-11-24 | Microsoft Technology Licensing, Llc | Generating string predictions using contexts |
KR101899817B1 (en) | 2012-08-01 | 2018-09-19 | 엘지전자 주식회사 | Mobile terminal and controlling method thereof |
USD695755S1 (en) | 2012-08-06 | 2013-12-17 | Samsung Electronics Co., Ltd. | TV monitor with graphical user interface |
US20140047413A1 (en) | 2012-08-09 | 2014-02-13 | Modit, Inc. | Developing, Modifying, and Using Applications |
US20140052540A1 (en) * | 2012-08-20 | 2014-02-20 | Giridhar Rajaram | Providing content using inferred topics extracted from communications in a social networking system |
USD706802S1 (en) | 2012-08-28 | 2014-06-10 | Samsung Electronics Co., Ltd. | Portable electronic device displaying transitional graphical user interface |
KR102068604B1 (en) | 2012-08-28 | 2020-01-22 | 삼성전자 주식회사 | Apparatus and method for recognizing a character in terminal equipment |
US9218333B2 (en) | 2012-08-31 | 2015-12-22 | Microsoft Technology Licensing, Llc | Context sensitive auto-correction |
JP6160996B2 (en) | 2012-09-12 | 2017-07-12 | パナソニックＩｐマネジメント株式会社 | Imaging device |
US20140088954A1 (en) | 2012-09-27 | 2014-03-27 | Research In Motion Limited | Apparatus and method pertaining to automatically-suggested emoticons |
US10691743B2 (en) | 2014-08-05 | 2020-06-23 | Sri International | Multi-dimensional realization of visual content of an image collection |
US9299060B2 (en) | 2012-10-12 | 2016-03-29 | Google Inc. | Automatically suggesting groups based on past user interaction |
KR20140052155A (en) | 2012-10-19 | 2014-05-07 | 삼성전자주식회사 | Display apparatus, method for controlling the display apparatus and processor for controlling the display apparatus |
USD714821S1 (en) | 2012-10-24 | 2014-10-07 | Microsoft Corporation | Display screen with animated graphical user interface |
US20150286371A1 (en) | 2012-10-31 | 2015-10-08 | Aniways Advertising Solutions Ltd. | Custom emoticon generation |
US20140156801A1 (en) * | 2012-12-04 | 2014-06-05 | Mobitv, Inc. | Cowatching and connected platforms using a push architecture |
US9244905B2 (en) | 2012-12-06 | 2016-01-26 | Microsoft Technology Licensing, Llc | Communication context based predictive-text suggestion |
US20140164506A1 (en) | 2012-12-10 | 2014-06-12 | Rawllin International Inc. | Multimedia message having portions of networked media content |
US20140171133A1 (en) | 2012-12-18 | 2014-06-19 | Google Inc. | Query response |
CN103067490B (en) | 2012-12-26 | 2015-11-25 | 腾讯科技（深圳）有限公司 | The Notification Method of mobile terminal communication session, terminal, server and system |
GB201322037D0 (en) | 2013-12-12 | 2014-01-29 | Touchtype Ltd | System and method for inputting images/labels into electronic devices |
US20140189538A1 (en) | 2012-12-31 | 2014-07-03 | Motorola Mobility Llc | Recommendations for Applications Based on Device Context |
US8930481B2 (en) | 2012-12-31 | 2015-01-06 | Huawei Technologies Co., Ltd. | Message processing method, terminal and system |
US9020956B1 (en) | 2012-12-31 | 2015-04-28 | Google Inc. | Sentiment and topic based content determination methods and systems |
US9374327B2 (en) | 2013-01-08 | 2016-06-21 | Vmware, Inc. | Intelligent chat system |
KR20140091633A (en) | 2013-01-11 | 2014-07-22 | 삼성전자주식회사 | Method for providing recommended items based on conext awareness and the mobile terminal therefor |
KR101821358B1 (en) | 2013-01-22 | 2018-01-25 | 네이버 주식회사 | Method and system for providing multi-user messenger service |
US20140237057A1 (en) | 2013-02-21 | 2014-08-21 | Genesys Telecommunications Laboratories, Inc. | System and method for processing private messages in a contact center |
JP6255646B2 (en) | 2013-03-04 | 2018-01-10 | 株式会社Ｌ ｉｓ Ｂ | Message system |
USD704726S1 (en) | 2013-03-04 | 2014-05-13 | Roger Leslie Maxwell | Display screen or portion thereof with animated graphical user interface |
US20140344058A1 (en) | 2013-03-15 | 2014-11-20 | Fision Holdings, Inc | Systems and methods for distributed marketing automation |
US20140298364A1 (en) | 2013-03-26 | 2014-10-02 | Rawllin International Inc. | Recommendations for media content based on emotion |
US8825474B1 (en) | 2013-04-16 | 2014-09-02 | Google Inc. | Text suggestion output using past interaction data |
US9177318B2 (en) | 2013-04-22 | 2015-11-03 | Palo Alto Research Center Incorporated | Method and apparatus for customizing conversation agents based on user characteristics using a relevance score for automatic statements, and a response prediction function |
US9923849B2 (en) | 2013-05-09 | 2018-03-20 | Ebay Inc. | System and method for suggesting a phrase based on a context |
US10523454B2 (en) | 2013-06-13 | 2019-12-31 | Evernote Corporation | Initializing chat sessions by pointing to content |
US10599765B2 (en) | 2013-06-27 | 2020-03-24 | Avaya Inc. | Semantic translation model training |
CA2918459C (en) | 2013-07-16 | 2019-06-04 | Pinterest, Inc. | Object based contextual menu controls |
US9330110B2 (en) | 2013-07-17 | 2016-05-03 | Xerox Corporation | Image search system and method for personalized photo applications using semantic networks |
US9794198B2 (en) | 2013-07-19 | 2017-10-17 | Tencent Technology (Shenzhen) Company Limited | Methods and systems for creating auto-reply messages |
US10162884B2 (en) | 2013-07-23 | 2018-12-25 | Conduent Business Services, Llc | System and method for auto-suggesting responses based on social conversational contents in customer care services |
US9161188B2 (en) | 2013-08-22 | 2015-10-13 | Yahoo! Inc. | System and method for automatically suggesting diverse and personalized message completions |
CN104035947B (en) * | 2013-09-16 | 2016-04-13 | 腾讯科技（深圳）有限公司 | Point of interest recommend method and device, acquisition recommend method and the device of point of interest |
EP2852105A1 (en) | 2013-09-20 | 2015-03-25 | Ignazio Di Tocco | Computer system and related process supporting the communication of users located in the same geographical area, in order to establish a starting contact leading to a personal communication |
US9401881B2 (en) | 2013-09-26 | 2016-07-26 | International Business Machines Corporation | Automatic question generation and answering based on monitored messaging sessions |
US9329692B2 (en) | 2013-09-27 | 2016-05-03 | Microsoft Technology Licensing, Llc | Actionable content displayed on a touch screen |
US20150100537A1 (en) | 2013-10-03 | 2015-04-09 | Microsoft Corporation | Emoji for Text Predictions |
US8996639B1 (en) | 2013-10-15 | 2015-03-31 | Google Inc. | Predictive responses to incoming communications |
US20150127753A1 (en) | 2013-11-04 | 2015-05-07 | Meemo, Llc | Word Recognition and Ideograph or In-App Advertising System |
WO2015089483A1 (en) | 2013-12-12 | 2015-06-18 | Mobile Iron, Inc. | Application synchornization |
KR20150071768A (en) | 2013-12-18 | 2015-06-29 | 에스케이하이닉스 주식회사 | Image sensor and method for fabricating the same |
US10565268B2 (en) * | 2013-12-19 | 2020-02-18 | Adobe Inc. | Interactive communication augmented with contextual information |
WO2015100362A1 (en) | 2013-12-23 | 2015-07-02 | 24/7 Customer, Inc. | Systems and methods for facilitating dialogue mining |
US9519408B2 (en) | 2013-12-31 | 2016-12-13 | Google Inc. | Systems and methods for guided user actions |
US9817813B2 (en) | 2014-01-08 | 2017-11-14 | Genesys Telecommunications Laboratories, Inc. | Generalized phrases in automatic speech recognition systems |
US20150207765A1 (en) | 2014-01-17 | 2015-07-23 | Nathaniel Brantingham | Messaging Service with Conversation Suggestions |
US9721183B2 (en) | 2014-01-31 | 2017-08-01 | Hulu, LLC | Intelligent determination of aesthetic preferences based on user history and properties |
US9515968B2 (en) | 2014-02-05 | 2016-12-06 | Facebook, Inc. | Controlling access to ideograms |
WO2015120019A1 (en) | 2014-02-10 | 2015-08-13 | Google Inc. | Smart camera user interface |
CN104836720B (en) * | 2014-02-12 | 2022-02-25 | 北京三星通信技术研究有限公司 | Method and device for information recommendation in interactive communication |
US10095748B2 (en) | 2014-03-03 | 2018-10-09 | Microsoft Technology Licensing, Llc | Personalized information query suggestions |
CN103841007B (en) | 2014-03-04 | 2017-05-10 | 腾讯科技（深圳）有限公司 | Data processing method, device and system in online game system |
KR102106787B1 (en) | 2014-03-17 | 2020-05-06 | 에스케이텔레콤 주식회사 | Method for coupling application with instant messenger, apparatus and system for the same |
CN104951428B (en) | 2014-03-26 | 2019-04-16 | 阿里巴巴集团控股有限公司 | User's intension recognizing method and device |
US9544257B2 (en) | 2014-04-04 | 2017-01-10 | Blackberry Limited | System and method for conducting private messaging |
US9213941B2 (en) | 2014-04-22 | 2015-12-15 | Google Inc. | Automatic actions based on contextual replies |
US10482163B2 (en) | 2014-04-23 | 2019-11-19 | Klickafy, Llc | Clickable emoji |
CN103995872B (en) | 2014-05-21 | 2017-04-05 | 王青 | It is a kind of in the application based on developing scenes discussion with chat method and system |
US10255449B2 (en) | 2014-05-30 | 2019-04-09 | Apple Inc. | Permission request |
US10445396B2 (en) | 2014-05-31 | 2019-10-15 | Apple Inc. | Device, method, and graphical user interface for extending functionality of a host application to another application |
US9380010B2 (en) | 2014-06-03 | 2016-06-28 | International Business Machines Corporation | Conversation branching for more efficient resolution |
WO2015200350A1 (en) | 2014-06-24 | 2015-12-30 | Google Inc. | Ranking and selecting images for display from a set of images |
US10785173B2 (en) | 2014-07-03 | 2020-09-22 | Nuance Communications, Inc. | System and method for suggesting actions based upon incoming messages |
US9420331B2 (en) | 2014-07-07 | 2016-08-16 | Google Inc. | Method and system for categorizing detected motion events |
US9043196B1 (en) | 2014-07-07 | 2015-05-26 | Machine Zone, Inc. | Systems and methods for identifying and suggesting emoticons |
US9990105B2 (en) | 2014-07-08 | 2018-06-05 | Verizon Patent And Licensing Inc. | Accessible contextual controls within a graphical user interface |
US20160043817A1 (en) | 2014-07-18 | 2016-02-11 | RSS Technologies, LLC | Methods and apparatus for locality based broadcasting |
WO2016018111A1 (en) | 2014-07-31 | 2016-02-04 | Samsung Electronics Co., Ltd. | Message service providing device and method of providing content via the same |
CN104202718A (en) | 2014-08-05 | 2014-12-10 | 百度在线网络技术（北京）有限公司 | Method and device for providing information for user |
US10218652B2 (en) | 2014-08-08 | 2019-02-26 | Mastercard International Incorporated | Systems and methods for integrating a chat function into an e-reader application |
US9965559B2 (en) | 2014-08-21 | 2018-05-08 | Google Llc | Providing automatic actions for mobile onscreen content |
US9705832B2 (en) | 2014-08-27 | 2017-07-11 | Lenovo (Singapore) Pte. Ltd. | Context-aware aggregation of text-based messages |
US10447621B2 (en) | 2014-09-04 | 2019-10-15 | Microsoft Technology Licensing, Llc | App powered extensibility of messages on an existing messaging service |
US10146748B1 (en) | 2014-09-10 | 2018-12-04 | Google Llc | Embedding location information in a media collaboration using natural language processing |
US11010726B2 (en) | 2014-11-07 | 2021-05-18 | Sony Corporation | Information processing apparatus, control method, and storage medium |
US20160140477A1 (en) | 2014-11-13 | 2016-05-19 | Xerox Corporation | Methods and systems for assigning tasks to workers |
US9569728B2 (en) | 2014-11-14 | 2017-02-14 | Bublup Technologies, Inc. | Deriving semantic relationships based on empirical organization of content by users |
CN105786455B (en) | 2014-12-17 | 2020-02-18 | 深圳市腾讯计算机系统有限公司 | Data processing method and device and terminal |
US20160179816A1 (en) | 2014-12-22 | 2016-06-23 | Quixey, Inc. | Near Real Time Auto-Suggest Search Results |
US9727218B2 (en) | 2015-01-02 | 2017-08-08 | Microsoft Technology Licensing, Llc | Contextual browser frame and entry box placement |
KR101634086B1 (en) | 2015-01-19 | 2016-07-08 | 주식회사 엔씨소프트 | Method and computer system of analyzing communication situation based on emotion information |
KR20160089152A (en) | 2015-01-19 | 2016-07-27 | 주식회사 엔씨소프트 | Method and computer system of analyzing communication situation based on dialogue act information |
US20160224524A1 (en) | 2015-02-03 | 2016-08-04 | Nuance Communications, Inc. | User generated short phrases for auto-filling, automatically collected during normal text use |
US20160226804A1 (en) | 2015-02-03 | 2016-08-04 | Google Inc. | Methods, systems, and media for suggesting a link to media content |
US9661386B2 (en) | 2015-02-11 | 2017-05-23 | Google Inc. | Methods, systems, and media for presenting a suggestion to watch videos |
US10079785B2 (en) | 2015-02-12 | 2018-09-18 | Google Llc | Determining reply content for a reply to an electronic communication |
US20160284011A1 (en) | 2015-03-25 | 2016-09-29 | Facebook, Inc. | Techniques for social messaging authorization and customization |
US10353542B2 (en) | 2015-04-02 | 2019-07-16 | Facebook, Inc. | Techniques for context sensitive illustrated graphical user interface elements |
US10965622B2 (en) | 2015-04-16 | 2021-03-30 | Samsung Electronics Co., Ltd. | Method and apparatus for recommending reply message |
US9703541B2 (en) | 2015-04-28 | 2017-07-11 | Google Inc. | Entity action suggestion on a mobile device |
US9883358B2 (en) | 2015-05-08 | 2018-01-30 | Blackberry Limited | Electronic device and method of determining suggested responses to text-based communications |
US10909329B2 (en) | 2015-05-21 | 2021-02-02 | Baidu Usa Llc | Multilingual image question answering |
US10504509B2 (en) | 2015-05-27 | 2019-12-10 | Google Llc | Providing suggested voice-based action queries |
US10091140B2 (en) | 2015-05-31 | 2018-10-02 | Microsoft Technology Licensing, Llc | Context-sensitive generation of conversational responses |
KR20160148260A (en) | 2015-06-16 | 2016-12-26 | 삼성전자주식회사 | Electronic device and Method for controlling the electronic device thereof |
US10274911B2 (en) | 2015-06-25 | 2019-04-30 | Intel Corporation | Conversational interface for matching text of spoken input based on context model |
US10042866B2 (en) | 2015-06-30 | 2018-08-07 | Adobe Systems Incorporated | Searching untagged images with text-based queries |
US9712466B2 (en) | 2015-11-10 | 2017-07-18 | Wrinkl, Inc. | Integrating actionable objects into an on-line chat communications platform |
CN108604234A (en) | 2015-07-15 | 2018-09-28 | 查比公司 | System and method for screenshot capture link |
US20170031575A1 (en) | 2015-07-28 | 2017-02-02 | Microsoft Technology Licensing, Llc | Tailored computing experience based on contextual signals |
CN105183276A (en) | 2015-08-19 | 2015-12-23 | 小米科技有限责任公司 | Method and apparatus for realizing game in chat interface, and and terminal device |
US9467435B1 (en) | 2015-09-15 | 2016-10-11 | Mimecast North America, Inc. | Electronic message threat protection system for authorized users |
US10445425B2 (en) | 2015-09-15 | 2019-10-15 | Apple Inc. | Emoji and canned responses |
US11025569B2 (en) | 2015-09-30 | 2021-06-01 | Apple Inc. | Shared content presentation with integrated messaging |
US10789525B2 (en) | 2015-10-02 | 2020-09-29 | Adobe Inc. | Modifying at least one attribute of an image with at least one attribute extracted from another image |
KR20170048964A (en) | 2015-10-27 | 2017-05-10 | 라인 가부시키가이샤 | Method and apparatus of providing message, Method and apparatus of controlling display and computer program for executing one of the method |
CN105262675A (en) | 2015-10-29 | 2016-01-20 | 北京奇虎科技有限公司 | Method and apparatus for controlling chat based on electronic book |
KR102393928B1 (en) | 2015-11-10 | 2022-05-04 | 삼성전자주식회사 | User terminal apparatus for recommanding a reply message and method thereof |
US9633048B1 (en) | 2015-11-16 | 2017-04-25 | Adobe Systems Incorporated | Converting a text sentence to a series of images |
US10129193B2 (en) | 2015-11-17 | 2018-11-13 | International Business Machines Corporation | Identifying relevant content contained in message streams that appear to be irrelevant |
US20170147202A1 (en) | 2015-11-24 | 2017-05-25 | Facebook, Inc. | Augmenting text messages with emotion information |
KR102427833B1 (en) | 2015-11-30 | 2022-08-02 | 삼성전자주식회사 | User terminal device and method for display thereof |
US20170171117A1 (en) | 2015-12-10 | 2017-06-15 | International Business Machines Corporation | Message Suggestion Using Dynamic Information |
EP3395019B1 (en) | 2015-12-21 | 2022-03-30 | Google LLC | Automatic suggestions and other content for messaging applications |
CN108781175B (en) | 2015-12-21 | 2021-09-21 | 谷歌有限责任公司 | Method, medium, and system for automatic suggestion of message exchange contexts |
US10732783B2 (en) | 2015-12-28 | 2020-08-04 | Microsoft Technology Licensing, Llc | Identifying image comments from similar images |
KR101712180B1 (en) | 2015-12-29 | 2017-03-06 | 라인 가부시키가이샤 | Computer Readable Recording Medium with Program, method and apparatus for Transmitting/Receiving Message |
US9560152B1 (en) | 2016-01-27 | 2017-01-31 | International Business Machines Corporation | Personalized summary of online communications |
US20170250935A1 (en) | 2016-02-25 | 2017-08-31 | Facebook, Inc. | Techniques for messaging bot app interactions |
US11477139B2 (en) | 2016-02-25 | 2022-10-18 | Meta Platforms, Inc. | Techniques for messaging bot rich communication |
US20170250930A1 (en) | 2016-02-29 | 2017-08-31 | Outbrain Inc. | Interactive content recommendation personalization assistant |
US20170288942A1 (en) | 2016-03-30 | 2017-10-05 | Microsoft Technology Licensing, Llc | Portal for Provisioning Autonomous Software Agents |
US10831802B2 (en) | 2016-04-11 | 2020-11-10 | Facebook, Inc. | Techniques to respond to user requests using natural-language machine learning based on example conversations |
US10452671B2 (en) | 2016-04-26 | 2019-10-22 | Facebook, Inc. | Recommendations from comments on online social networks |
US9866693B2 (en) | 2016-05-06 | 2018-01-09 | Genesys Telecommunications Laboratories, Inc. | System and method for monitoring progress of automated chat conversations |
US20170344224A1 (en) | 2016-05-27 | 2017-11-30 | Nuance Communications, Inc. | Suggesting emojis to users for insertion into text-based messages |
CN105898627B (en) | 2016-05-31 | 2019-04-12 | 北京奇艺世纪科技有限公司 | A kind of video broadcasting method and device |
US10785175B2 (en) | 2016-06-12 | 2020-09-22 | Apple Inc. | Polling extension application for interacting with a messaging application |
US20170359283A1 (en) | 2016-06-12 | 2017-12-14 | Apple Inc. | Music creation app in messaging app |
US10194288B2 (en) | 2016-06-12 | 2019-01-29 | Apple Inc. | Sticker distribution system for messaging apps |
US10554599B2 (en) | 2016-06-12 | 2020-02-04 | Apple Inc. | Conversion of detected URL in text message |
US10505872B2 (en) | 2016-06-12 | 2019-12-10 | Apple Inc. | Messaging application interacting with one or more extension applications |
US11088973B2 (en) | 2016-06-12 | 2021-08-10 | Apple Inc. | Conversion of text relating to media content and media extension apps |
US10368208B2 (en) | 2016-06-12 | 2019-07-30 | Apple Inc. | Layers in messaging applications |
US10852912B2 (en) | 2016-06-12 | 2020-12-01 | Apple Inc. | Image creation app in messaging app |
US10595169B2 (en) | 2016-06-12 | 2020-03-17 | Apple Inc. | Message extension app store |
US9990128B2 (en) | 2016-06-12 | 2018-06-05 | Apple Inc. | Messaging application interacting with one or more extension applications |
US20170366479A1 (en) | 2016-06-20 | 2017-12-21 | Microsoft Technology Licensing, Llc | Communication System |
US10254935B2 (en) | 2016-06-29 | 2019-04-09 | Google Llc | Systems and methods of providing content selection |
US10515393B2 (en) | 2016-06-30 | 2019-12-24 | Paypal, Inc. | Image data detection for micro-expression analysis and targeted data services |
US10387888B2 (en) | 2016-07-08 | 2019-08-20 | Asapp, Inc. | Assisting entities in responding to a request of a user |
US20180032499A1 (en) | 2016-07-28 | 2018-02-01 | Google Inc. | Automatically Generating Spelling Suggestions and Corrections Based on User Context |
US10049310B2 (en) | 2016-08-30 | 2018-08-14 | International Business Machines Corporation | Image text analysis for identifying hidden text |
KR20180026983A (en) | 2016-09-05 | 2018-03-14 | 삼성전자주식회사 | Electronic device and control method thereof |
CN117634495A (en) | 2016-09-20 | 2024-03-01 | 谷歌有限责任公司 | Suggested response based on message decal |
US10511450B2 (en) | 2016-09-20 | 2019-12-17 | Google Llc | Bot permissions |
WO2018057537A1 (en) | 2016-09-20 | 2018-03-29 | Google Llc | Bot interaction |
US10015124B2 (en) | 2016-09-20 | 2018-07-03 | Google Llc | Automatic response suggestions based on images received in messaging applications |
US11176931B2 (en) | 2016-09-23 | 2021-11-16 | Microsoft Technology Licensing, Llc | Conversational bookmarks |
CN106484831A (en) | 2016-09-29 | 2017-03-08 | 百度在线网络技术（北京）有限公司 | Search system, method and apparatus |
US10416846B2 (en) | 2016-11-12 | 2019-09-17 | Google Llc | Determining graphical element(s) for inclusion in an electronic communication |
US20180196854A1 (en) | 2017-01-11 | 2018-07-12 | Google Inc. | Application extension for generating automatic search queries |
US10146768B2 (en) | 2017-01-25 | 2018-12-04 | Google Llc | Automatic suggested responses to images received in messages using language model |
US10229427B2 (en) | 2017-04-10 | 2019-03-12 | Wildfire Systems, Inc. | Virtual keyboard trackable referral system |
US20180316637A1 (en) | 2017-05-01 | 2018-11-01 | Microsoft Technology Licensing, Llc | Conversation lens for context |
AU2018261870B2 (en) | 2017-05-05 | 2020-11-05 | Seetvun AMIR | Dynamic response prediction for improved bot task processing |
US10860854B2 (en) | 2017-05-16 | 2020-12-08 | Google Llc | Suggested actions for images |
US10827319B2 (en) | 2017-06-02 | 2020-11-03 | Apple Inc. | Messaging system interacting with dynamic extension app |
US10348658B2 (en) | 2017-06-15 | 2019-07-09 | Google Llc | Suggested items for use with embedded applications in chat conversations |
US10404636B2 (en) | 2017-06-15 | 2019-09-03 | Google Llc | Embedded programs and interfaces for chat conversations |
-
2016
- 2016-12-21 CN CN201680082643.2A patent/CN108781175B/en active Active
- 2016-12-21 WO PCT/US2016/068059 patent/WO2017112786A1/en active Application Filing
- 2016-12-21 KR KR1020187019756A patent/KR20180093040A/en active Search and Examination
- 2016-12-21 EP EP16825663.4A patent/EP3395018A1/en not_active Withdrawn
- 2016-12-21 JP JP2018551908A patent/JP6638087B2/en active Active
- 2016-12-21 US US15/386,162 patent/US10530723B2/en active Active
-
2019
- 2019-11-22 US US16/692,821 patent/US11418471B2/en active Active
Cited By (153)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US11741551B2 (en) | 2013-03-21 | 2023-08-29 | Khoros, Llc | Gamification for online social communities |
US10552747B2 (en) | 2014-04-22 | 2020-02-04 | Google Llc | Automatic actions based on contextual replies |
US11669752B2 (en) | 2014-04-22 | 2023-06-06 | Google Llc | Automatic actions based on contextual replies |
US11418471B2 (en) | 2015-12-21 | 2022-08-16 | Google Llc | Automatic suggestions for message exchange threads |
US11502975B2 (en) | 2015-12-21 | 2022-11-15 | Google Llc | Automatic suggestions and other content for messaging applications |
US10757043B2 (en) | 2015-12-21 | 2020-08-25 | Google Llc | Automatic suggestions and other content for messaging applications |
US10530723B2 (en) | 2015-12-21 | 2020-01-07 | Google Llc | Automatic suggestions for message exchange threads |
US20180331839A1 (en) * | 2015-12-22 | 2018-11-15 | Microsoft Technology Licensing, Llc | Emotionally intelligent chat engine |
US10212119B2 (en) * | 2016-01-13 | 2019-02-19 | Pooja Bisarya | Method and system for enabling messaging between users |
US20170201481A1 (en) * | 2016-01-13 | 2017-07-13 | Pooja Bisarya | Method and system for enabling messaging between users |
US20170222956A1 (en) * | 2016-02-01 | 2017-08-03 | Priya Jain | Method and system for enabling an auto response facility between users |
US10666594B2 (en) * | 2016-04-08 | 2020-05-26 | Microsoft Technology Licensing, Llc | Proactive intelligent personal assistant |
US20190081916A1 (en) * | 2016-04-08 | 2019-03-14 | Microsoft Technology Licensing, Llc | Proactive intelligent personal assistant |
US10757048B2 (en) | 2016-04-08 | 2020-08-25 | Microsoft Technology Licensing, Llc | Intelligent personal assistant as a contact |
US20220191156A1 (en) * | 2016-06-03 | 2022-06-16 | Spotify Ab | System and method for providing digital media content with a conversational messaging environment |
US10387461B2 (en) | 2016-08-16 | 2019-08-20 | Google Llc | Techniques for suggesting electronic messages based on user activity and other context |
US10412030B2 (en) * | 2016-09-20 | 2019-09-10 | Google Llc | Automatic response suggestions based on images received in messaging applications |
US10547574B2 (en) | 2016-09-20 | 2020-01-28 | Google Llc | Suggested responses based on message stickers |
US10979373B2 (en) | 2016-09-20 | 2021-04-13 | Google Llc | Suggested responses based on message stickers |
US11303590B2 (en) | 2016-09-20 | 2022-04-12 | Google Llc | Suggested responses based on message stickers |
US11700134B2 (en) | 2016-09-20 | 2023-07-11 | Google Llc | Bot permissions |
US11336467B2 (en) | 2016-09-20 | 2022-05-17 | Google Llc | Bot permissions |
US10511450B2 (en) | 2016-09-20 | 2019-12-17 | Google Llc | Bot permissions |
US10862836B2 (en) * | 2016-09-20 | 2020-12-08 | Google Llc | Automatic response suggestions based on images received in messaging applications |
US20190394153A1 (en) * | 2016-09-20 | 2019-12-26 | Google Llc | Automatic response suggestions based on images received in messaging applications |
US10015124B2 (en) * | 2016-09-20 | 2018-07-03 | Google Llc | Automatic response suggestions based on images received in messaging applications |
US10846618B2 (en) | 2016-09-23 | 2020-11-24 | Google Llc | Smart replies using an on-device model |
US11159473B2 (en) * | 2016-10-10 | 2021-10-26 | Facebook, Inc. | Systems and methods for sharing content |
US10416846B2 (en) | 2016-11-12 | 2019-09-17 | Google Llc | Determining graphical element(s) for inclusion in an electronic communication |
US10862834B2 (en) * | 2016-11-14 | 2020-12-08 | Tencent Technology (Shenzhen) Company Limited | Method and apparatus for generating descriptive texts corresponding to chat message images via a condition probability model |
US10146768B2 (en) | 2017-01-25 | 2018-12-04 | Google Llc | Automatic suggested responses to images received in messages using language model |
US11436415B2 (en) * | 2017-02-27 | 2022-09-06 | International Business Machines Corporation | Message sentiment based alert |
US11494440B1 (en) * | 2017-04-12 | 2022-11-08 | Meta Platforms, Inc. | Proactive and reactive suggestions for a messaging system |
US11538064B2 (en) | 2017-04-28 | 2022-12-27 | Khoros, Llc | System and method of providing a platform for managing data content campaign on social networks |
US10296830B2 (en) * | 2017-04-28 | 2019-05-21 | International Business Machines Corporation | Dynamic topic guidance in the context of multi-round conversation |
US20190205753A1 (en) * | 2017-04-28 | 2019-07-04 | International Business Machines Corporation | Dynamic topic guidance in the context of multi-round conversation |
US10726333B2 (en) * | 2017-04-28 | 2020-07-28 | International Business Machines Corporation | Dynamic topic guidance in the context of multi-round conversation |
US10902462B2 (en) | 2017-04-28 | 2021-01-26 | Khoros, Llc | System and method of providing a platform for managing data content campaign on social networks |
US10891485B2 (en) | 2017-05-16 | 2021-01-12 | Google Llc | Image archival based on image categories |
US10860854B2 (en) | 2017-05-16 | 2020-12-08 | Google Llc | Suggested actions for images |
US11574470B2 (en) | 2017-05-16 | 2023-02-07 | Google Llc | Suggested actions for images |
US10404636B2 (en) | 2017-06-15 | 2019-09-03 | Google Llc | Embedded programs and interfaces for chat conversations |
US10348658B2 (en) | 2017-06-15 | 2019-07-09 | Google Llc | Suggested items for use with embedded applications in chat conversations |
US11451499B2 (en) | 2017-06-15 | 2022-09-20 | Google Llc | Embedded programs and interfaces for chat conversations |
US11050694B2 (en) | 2017-06-15 | 2021-06-29 | Google Llc | Suggested items for use with embedded applications in chat conversations |
US10880243B2 (en) | 2017-06-15 | 2020-12-29 | Google Llc | Embedded programs and interfaces for chat conversations |
US20210136164A1 (en) * | 2017-06-22 | 2021-05-06 | Numberai, Inc. | Automated communication-based intelligence engine |
US11553055B2 (en) * | 2017-06-22 | 2023-01-10 | Numberai, Inc. | Automated communication-based intelligence engine |
FR3067554A1 (en) * | 2017-06-23 | 2018-12-14 | Orange | METHOD AND DEVICE FOR PROCESSING TEXT MESSAGES RECEIVED BY A MESSENGER APPLICATION EXECUTED IN A USER COMMUNICATION TERMINAL |
CN110892395A (en) * | 2017-06-28 | 2020-03-17 | 微软技术许可有限责任公司 | Virtual assistant providing enhanced communication session services |
WO2019005348A1 (en) * | 2017-06-28 | 2019-01-03 | Microsoft Technology Licensing, Llc | Virtual assistant providing enhanced communication session services |
US11699039B2 (en) | 2017-06-28 | 2023-07-11 | Microsoft Technology Licensing, Llc | Virtual assistant providing enhanced communication session services |
US20190005024A1 (en) * | 2017-06-28 | 2019-01-03 | Microsoft Technology Licensing, Llc | Virtual assistant providing enhanced communication session services |
US10585991B2 (en) * | 2017-06-29 | 2020-03-10 | Microsoft Technology Licensing, Llc | Virtual assistant for generating personalized responses within a communication session |
US20190005021A1 (en) * | 2017-06-29 | 2019-01-03 | Microsoft Technology Licensing, Llc | Virtual assistant for generating personalized responses within a communication session |
US10922483B1 (en) | 2017-08-04 | 2021-02-16 | Grammarly, Inc. | Artificial intelligence communication assistance for providing communication advice utilizing communication profiles |
US11871148B1 (en) | 2017-08-04 | 2024-01-09 | Grammarly, Inc. | Artificial intelligence communication assistance in audio-visual composition |
US10771529B1 (en) | 2017-08-04 | 2020-09-08 | Grammarly, Inc. | Artificial intelligence communication assistance for augmenting a transmitted communication |
US11258734B1 (en) | 2017-08-04 | 2022-02-22 | Grammarly, Inc. | Artificial intelligence communication assistance for editing utilizing communication profiles |
US11463500B1 (en) | 2017-08-04 | 2022-10-04 | Grammarly, Inc. | Artificial intelligence communication assistance for augmenting a transmitted communication |
US11727205B1 (en) | 2017-08-04 | 2023-08-15 | Grammarly, Inc. | Artificial intelligence communication assistance for providing communication advice utilizing communication profiles |
US10764534B1 (en) | 2017-08-04 | 2020-09-01 | Grammarly, Inc. | Artificial intelligence communication assistance in audio-visual composition |
US11321522B1 (en) | 2017-08-04 | 2022-05-03 | Grammarly, Inc. | Artificial intelligence communication assistance for composition utilizing communication profiles |
US11620566B1 (en) | 2017-08-04 | 2023-04-04 | Grammarly, Inc. | Artificial intelligence communication assistance for improving the effectiveness of communications using reaction data |
US11228731B1 (en) | 2017-08-04 | 2022-01-18 | Grammarly, Inc. | Artificial intelligence communication assistance in audio-visual composition |
US11146609B1 (en) | 2017-08-04 | 2021-10-12 | Grammarly, Inc. | Sender-receiver interface for artificial intelligence communication assistance for augmenting communications |
WO2019032128A1 (en) * | 2017-08-08 | 2019-02-14 | General Electric Company | Methods and apparatus to enhance emotional intelligence using digital technology |
US20190050774A1 (en) * | 2017-08-08 | 2019-02-14 | General Electric Company | Methods and apparatus to enhance emotional intelligence using digital technology |
US10951558B2 (en) * | 2017-09-27 | 2021-03-16 | Slack Technologies, Inc. | Validating application dialog associated with a triggering event identification within user interaction data received via a group-based communication interface |
US20190222544A1 (en) * | 2017-09-27 | 2019-07-18 | Slack Technologies, Inc. | Triggering event identification and application dialog validation |
US11706168B2 (en) | 2017-09-27 | 2023-07-18 | Salesforce, Inc. | Triggering event identification and application dialog validation |
US11687573B2 (en) | 2017-10-12 | 2023-06-27 | Spredfast, Inc. | Predicting performance of content and electronic messages among a system of networked computing devices |
US11050704B2 (en) | 2017-10-12 | 2021-06-29 | Spredfast, Inc. | Computerized tools to enhance speed and propagation of content in electronic messages among a system of networked computing devices |
US10956459B2 (en) | 2017-10-12 | 2021-03-23 | Spredfast, Inc. | Predicting performance of content and electronic messages among a system of networked computing devices |
US11570128B2 (en) | 2017-10-12 | 2023-01-31 | Spredfast, Inc. | Optimizing effectiveness of content in electronic messages among a system of networked computing device |
US11539655B2 (en) | 2017-10-12 | 2022-12-27 | Spredfast, Inc. | Computerized tools to enhance speed and propagation of content in electronic messages among a system of networked computing devices |
CN110741396A (en) * | 2017-11-06 | 2020-01-31 | 谷歌有限责任公司 | Training and/or utilizing an interaction prediction model to determine when to interact with and/or prompt for interaction with an application based on electronic communications |
US11887006B2 (en) | 2017-11-06 | 2024-01-30 | Google Llc | Training and/or utilizing an interaction prediction model to determine when to interact, and/or prompt for interaction, with an application on the basis of an electronic communication |
US11765248B2 (en) * | 2017-11-22 | 2023-09-19 | Spredfast, Inc. | Responsive action prediction based on electronic messages among a system of networked computing devices |
US20220232086A1 (en) * | 2017-11-22 | 2022-07-21 | Spredfast, Inc. | Responsive action prediction based on electronic messages among a system of networked computing devices |
US10601937B2 (en) * | 2017-11-22 | 2020-03-24 | Spredfast, Inc. | Responsive action prediction based on electronic messages among a system of networked computing devices |
US11297151B2 (en) * | 2017-11-22 | 2022-04-05 | Spredfast, Inc. | Responsive action prediction based on electronic messages among a system of networked computing devices |
US10609511B2 (en) * | 2017-12-08 | 2020-03-31 | Facebook, Inc. | Techniques for providing meeting location suggestions |
US20190182616A1 (en) * | 2017-12-08 | 2019-06-13 | Facebook, Inc. | Techniques for providing meeting location suggestions |
US11829404B2 (en) | 2017-12-22 | 2023-11-28 | Google Llc | Functional image archiving |
US10891526B2 (en) | 2017-12-22 | 2021-01-12 | Google Llc | Functional image archiving |
US10587553B1 (en) * | 2017-12-29 | 2020-03-10 | Entefy Inc. | Methods and systems to support adaptive multi-participant thread monitoring |
US11657053B2 (en) | 2018-01-22 | 2023-05-23 | Spredfast, Inc. | Temporal optimization of data operations using distributed search and server management |
US11102271B2 (en) | 2018-01-22 | 2021-08-24 | Spredfast, Inc. | Temporal optimization of data operations using distributed search and server management |
US11496545B2 (en) | 2018-01-22 | 2022-11-08 | Spredfast, Inc. | Temporal optimization of data operations using distributed search and server management |
US11061900B2 (en) | 2018-01-22 | 2021-07-13 | Spredfast, Inc. | Temporal optimization of data operations using distributed search and server management |
JP7073122B2 (en) | 2018-01-31 | 2022-05-23 | Ｄｙｎａｂｏｏｋ株式会社 | Electronic devices, control methods and programs |
JP2019133385A (en) * | 2018-01-31 | 2019-08-08 | Ｄｙｎａｂｏｏｋ株式会社 | Electronic apparatus, control method and program |
US20220382814A1 (en) * | 2018-04-06 | 2022-12-01 | Architecture Technology Corporation | Systems and Methods for Generating Real-Time Recommendations |
US11449553B2 (en) * | 2018-04-06 | 2022-09-20 | Architecture Technology Corporation | Systems and methods for generating real-time recommendations |
US10866989B1 (en) * | 2018-04-06 | 2020-12-15 | Architecture Technology Corporation | Real time recommender modeling system, methods of construction, and methods of use |
US11755676B2 (en) * | 2018-04-06 | 2023-09-12 | Architecture Technology Corporation | Systems and methods for generating real-time recommendations |
US20190327200A1 (en) * | 2018-04-20 | 2019-10-24 | Microsoft Technology Licensing, Llc | Customized controls for handling communication content |
US11322264B2 (en) | 2018-04-23 | 2022-05-03 | DNAFeed Inc. | Systems and methods for human-augmented communications |
US11074284B2 (en) * | 2018-05-07 | 2021-07-27 | International Business Machines Corporation | Cognitive summarization and retrieval of archived communications |
US20190384811A1 (en) * | 2018-06-14 | 2019-12-19 | Pubali Sen | System and method for communication exchange feedback |
US10901577B2 (en) | 2018-07-17 | 2021-01-26 | Google Llc | Methods and systems for input suggestion |
US11803290B2 (en) | 2018-07-17 | 2023-10-31 | Google Llc | Methods and systems for input suggestion |
US10721190B2 (en) * | 2018-07-31 | 2020-07-21 | Microsoft Technology Licensing, Llc | Sequence to sequence to classification model for generating recommended messages |
US20200044990A1 (en) * | 2018-07-31 | 2020-02-06 | Microsoft Technology Licensing, Llc | Sequence to sequence to classification model for generating recommended messages |
US20200053035A1 (en) * | 2018-08-10 | 2020-02-13 | International Business Machines Corporation | Electronic communication message coaching service |
US11252117B2 (en) * | 2018-08-10 | 2022-02-15 | International Business Machines Corporation | Electronic communication message coaching service |
CN115550304A (en) * | 2018-08-22 | 2022-12-30 | 谷歌有限责任公司 | Method, apparatus, and storage medium for determining a set of activity instances for a group of users |
US11843655B2 (en) | 2018-08-22 | 2023-12-12 | Google Llc | Automatically resolving, with reduced user inputs, a set of activity instances for a group of users |
US10909327B2 (en) * | 2018-08-24 | 2021-02-02 | International Business Machines Corporation | Unsupervised learning of interpretable conversation models from conversation logs |
US20200066255A1 (en) * | 2018-08-24 | 2020-02-27 | International Business Machines Corporation | Unsupervised Learning of Interpretable Conversation Models from Conversation Logs |
US20220044330A1 (en) * | 2018-10-05 | 2022-02-10 | The Toronto-Dominion Bank | System and method for providing photo-based estimation |
US11182860B2 (en) * | 2018-10-05 | 2021-11-23 | The Toronto-Dominion Bank | System and method for providing photo-based estimation |
US11941703B2 (en) * | 2018-10-05 | 2024-03-26 | The Toronto-Dominion Bank | System and method for providing photo-based estimation |
US11936652B2 (en) | 2018-10-11 | 2024-03-19 | Spredfast, Inc. | Proxied multi-factor authentication using credential and authentication management in scalable data networks |
US11546331B2 (en) | 2018-10-11 | 2023-01-03 | Spredfast, Inc. | Credential and authentication management in scalable data networks |
US11470161B2 (en) | 2018-10-11 | 2022-10-11 | Spredfast, Inc. | Native activity tracking using credential and authentication management in scalable data networks |
US11805180B2 (en) | 2018-10-11 | 2023-10-31 | Spredfast, Inc. | Native activity tracking using credential and authentication management in scalable data networks |
US10855657B2 (en) | 2018-10-11 | 2020-12-01 | Spredfast, Inc. | Multiplexed data exchange portal interface in scalable data networks |
US10785222B2 (en) | 2018-10-11 | 2020-09-22 | Spredfast, Inc. | Credential and authentication management in scalable data networks |
US11601398B2 (en) | 2018-10-11 | 2023-03-07 | Spredfast, Inc. | Multiplexed data exchange portal interface in scalable data networks |
US10999278B2 (en) | 2018-10-11 | 2021-05-04 | Spredfast, Inc. | Proxied multi-factor authentication using credential and authentication management in scalable data networks |
US20200159827A1 (en) * | 2018-11-15 | 2020-05-21 | Nuance Communications, Inc. | System and method for accelerating user agent chats |
US11238226B2 (en) * | 2018-11-15 | 2022-02-01 | Nuance Communications, Inc. | System and method for accelerating user agent chats |
US11048767B2 (en) * | 2018-11-16 | 2021-06-29 | Sap Se | Combination content search |
US20200159861A1 (en) * | 2018-11-16 | 2020-05-21 | Sap Se | Combination content search |
US11777874B1 (en) * | 2018-12-14 | 2023-10-03 | Carvana, LLC | Artificial intelligence conversation engine |
US11321410B2 (en) * | 2018-12-18 | 2022-05-03 | Tencent Technology (Shenzhen) Company Limited | Information recommendation method and apparatus, device, and storage medium |
US10956474B2 (en) | 2019-03-14 | 2021-03-23 | Microsoft Technology Licensing, Llc | Determination of best set of suggested responses |
US11799813B2 (en) * | 2019-03-29 | 2023-10-24 | Aill Inc. | Communication support server, communication support system, communication support method, and communication support program |
US20220166737A1 (en) * | 2019-03-29 | 2022-05-26 | Aill Inc. | Communication support server, communication support system, communication support method, and communication support program |
US11627053B2 (en) | 2019-05-15 | 2023-04-11 | Khoros, Llc | Continuous data sensing of functional states of networked computing devices to determine efficiency metrics for servicing electronic messages asynchronously |
US10931540B2 (en) | 2019-05-15 | 2021-02-23 | Khoros, Llc | Continuous data sensing of functional states of networked computing devices to determine efficiency metrics for servicing electronic messages asynchronously |
US11329934B2 (en) * | 2019-06-07 | 2022-05-10 | Fujitsu Limited | Recording medium, information management method, and information management apparatus |
US10902190B1 (en) * | 2019-07-03 | 2021-01-26 | Microsoft Technology Licensing Llc | Populating electronic messages with quotes |
US20220291789A1 (en) * | 2019-07-11 | 2022-09-15 | Google Llc | System and Method for Providing an Artificial Intelligence Control Surface for a User of a Computing Device |
CN112448879A (en) * | 2019-08-27 | 2021-03-05 | 腾讯科技（深圳）有限公司 | Reminding message pushing method and device, terminal and computer readable storage medium |
US20210182879A1 (en) * | 2019-12-13 | 2021-06-17 | Jpmorgan Chase Bank, N.A. | System and method for providing intelligent dashboards for critical business flows |
US11551242B2 (en) * | 2019-12-13 | 2023-01-10 | Jpmorgan Chase Bank, N.A. | System and method for providing intelligent dashboards for critical business flows |
US11521611B2 (en) | 2019-12-19 | 2022-12-06 | Palo Alto Research Center Incorporated | Using conversation structure and content to answer questions in multi-part online interactions |
US11555622B2 (en) * | 2019-12-19 | 2023-01-17 | International Business Machines Corporation | Intelligent context-based control of air flow |
US20230306515A1 (en) * | 2020-04-15 | 2023-09-28 | Xero Limited | Systems and Computer-Implemented Methods for Capital Management |
US11436408B2 (en) * | 2020-07-01 | 2022-09-06 | Motorola Mobility Llc | Targeted natural language responses for electronic communications |
US11729125B2 (en) | 2020-09-18 | 2023-08-15 | Khoros, Llc | Gesture-based community moderation |
US11438289B2 (en) | 2020-09-18 | 2022-09-06 | Khoros, Llc | Gesture-based community moderation |
US11128589B1 (en) | 2020-09-18 | 2021-09-21 | Khoros, Llc | Gesture-based community moderation |
US11741949B2 (en) * | 2020-10-30 | 2023-08-29 | Nvidia Corporation | Real-time video conference chat filtering using machine learning models |
US20220139383A1 (en) * | 2020-10-30 | 2022-05-05 | Nvidia Corporation | Real-time video conference chat filtering using machine learning models |
US11438282B2 (en) | 2020-11-06 | 2022-09-06 | Khoros, Llc | Synchronicity of electronic messages via a transferred secure messaging channel among a system of various networked computing devices |
US11714629B2 (en) | 2020-11-19 | 2023-08-01 | Khoros, Llc | Software dependency management |
EP4156696A4 (en) * | 2020-11-25 | 2023-11-22 | Beijing Zitiao Network Technology Co., Ltd. | Method, apparatus, and device for publishing and replying to multimedia content |
US11627100B1 (en) | 2021-10-27 | 2023-04-11 | Khoros, Llc | Automated response engine implementing a universal data space based on communication interactions via an omnichannel electronic data channel |
US11924375B2 (en) | 2021-10-27 | 2024-03-05 | Khoros, Llc | Automated response engine and flow configured to exchange responsive communication data via an omnichannel electronic communication channel independent of data source |
Also Published As
Publication number | Publication date |
---|---|
JP6638087B2 (en) | 2020-01-29 |
US20200092243A1 (en) | 2020-03-19 |
EP3395018A1 (en) | 2018-10-31 |
KR20180093040A (en) | 2018-08-20 |
CN108781175A (en) | 2018-11-09 |
CN108781175B (en) | 2021-09-21 |
JP2019508820A (en) | 2019-03-28 |
US11418471B2 (en) | 2022-08-16 |
US10530723B2 (en) | 2020-01-07 |
WO2017112786A1 (en) | 2017-06-29 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US11418471B2 (en) | Automatic suggestions for message exchange threads | |
US11502975B2 (en) | Automatic suggestions and other content for messaging applications | |
US10979373B2 (en) | Suggested responses based on message stickers | |
US9946782B2 (en) | System and method for message clustering | |
US8166124B2 (en) | System and method for delivery of augmented messages | |
US20130238727A1 (en) | System and method for context enhanced messaging | |
US20170200128A1 (en) | Creating digital events utilizing natural language processing | |
US20190361857A1 (en) | Method and system for associating data from different sources to generate a person-centric space | |
US11232522B2 (en) | Methods, systems and techniques for blending online content from multiple disparate content sources including a personal content source or a semi-personal content source | |
US20170097933A1 (en) | Methods, systems and techniques for ranking blended content retrieved from multiple disparate content sources | |
CN113689186A (en) | Active drawing | |
US20170097959A1 (en) | Method and system for searching in a person-centric space | |
Joly | A Context Management Framework based on Wisdom of Crowds for Social Awareness applications |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:MILLIGAN, TIMOTHY SEEDS;SHEMER, HILA;KIILERICH, DENNIS;AND OTHERS;SIGNING DATES FROM 20161223 TO 20170104;REEL/FRAME:040863/0684 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044129/0001Effective date: 20170929 |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: RESPONSE TO NON-FINAL OFFICE ACTION ENTERED AND FORWARDED TO EXAMINER |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: FINAL REJECTION MAILED |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: NOTICE OF ALLOWANCE MAILED -- APPLICATION RECEIVED IN OFFICE OF PUBLICATIONS |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: AWAITING TC RESP., ISSUE FEE NOT PAID |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: AWAITING TC RESP, ISSUE FEE PAYMENT VERIFIED |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: PUBLICATIONS -- ISSUE FEE PAYMENT VERIFIED |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 4 |
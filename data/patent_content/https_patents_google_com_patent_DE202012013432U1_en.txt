DE202012013432U1 - Storing data on storage nodes - Google Patents
Storing data on storage nodes Download PDFInfo
- Publication number
- DE202012013432U1 DE202012013432U1 DE202012013432.9U DE202012013432U DE202012013432U1 DE 202012013432 U1 DE202012013432 U1 DE 202012013432U1 DE 202012013432 U DE202012013432 U DE 202012013432U DE 202012013432 U1 DE202012013432 U1 DE 202012013432U1
- Authority
- DE
- Germany
- Prior art keywords
- storage node
- storage
- cache
- file
- data
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Lifetime
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/06—Digital input from, or digital output to, record carriers, e.g. RAID, emulated record carriers or networked record carriers
- G06F3/0601—Interfaces specially adapted for storage systems
- G06F3/0602—Interfaces specially adapted for storage systems specifically adapted to achieve a particular effect
- G06F3/0614—Improving the reliability of storage systems
- G06F3/0619—Improving the reliability of storage systems in relation to data integrity, e.g. data losses, bit errors
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/06—Digital input from, or digital output to, record carriers, e.g. RAID, emulated record carriers or networked record carriers
- G06F3/0601—Interfaces specially adapted for storage systems
- G06F3/0602—Interfaces specially adapted for storage systems specifically adapted to achieve a particular effect
- G06F3/061—Improving I/O performance
- G06F3/0613—Improving I/O performance in relation to throughput
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F11/00—Error detection; Error correction; Monitoring
- G06F11/07—Responding to the occurrence of a fault, e.g. fault tolerance
- G06F11/08—Error detection or correction by redundancy in data representation, e.g. by using checking codes
- G06F11/10—Adding special bits or symbols to the coded information, e.g. parity check, casting out 9's or 11's
- G06F11/1008—Adding special bits or symbols to the coded information, e.g. parity check, casting out 9's or 11's in individual solid state devices
- G06F11/1044—Adding special bits or symbols to the coded information, e.g. parity check, casting out 9's or 11's in individual solid state devices with specific ECC/EDC distribution
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F11/00—Error detection; Error correction; Monitoring
- G06F11/07—Responding to the occurrence of a fault, e.g. fault tolerance
- G06F11/08—Error detection or correction by redundancy in data representation, e.g. by using checking codes
- G06F11/10—Adding special bits or symbols to the coded information, e.g. parity check, casting out 9's or 11's
- G06F11/1076—Parity data used in redundant arrays of independent storages, e.g. in RAID systems
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F12/00—Accessing, addressing or allocating within memory systems or architectures
- G06F12/02—Addressing or allocation; Relocation
- G06F12/08—Addressing or allocation; Relocation in hierarchically structured memory systems, e.g. virtual memory systems
- G06F12/0802—Addressing of a memory level in which the access to the desired data or data block requires associative addressing means, e.g. caches
- G06F12/0866—Addressing of a memory level in which the access to the desired data or data block requires associative addressing means, e.g. caches for peripheral storage systems, e.g. disk cache
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F15/00—Digital computers in general; Data processing equipment in general
- G06F15/16—Combinations of two or more digital computers each having at least an arithmetic unit, a program unit and a register, e.g. for a simultaneous processing of several programs
- G06F15/161—Computing infrastructure, e.g. computer clusters, blade chassis or hardware partitioning
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/06—Digital input from, or digital output to, record carriers, e.g. RAID, emulated record carriers or networked record carriers
- G06F3/0601—Interfaces specially adapted for storage systems
- G06F3/0628—Interfaces specially adapted for storage systems making use of a particular technique
- G06F3/0638—Organizing or formatting or addressing of data
- G06F3/0643—Management of files
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/06—Digital input from, or digital output to, record carriers, e.g. RAID, emulated record carriers or networked record carriers
- G06F3/0601—Interfaces specially adapted for storage systems
- G06F3/0628—Interfaces specially adapted for storage systems making use of a particular technique
- G06F3/0655—Vertical data movement, i.e. input-output transfer; data movement between one or more hosts and one or more storage devices
- G06F3/0656—Data buffering arrangements
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/06—Digital input from, or digital output to, record carriers, e.g. RAID, emulated record carriers or networked record carriers
- G06F3/0601—Interfaces specially adapted for storage systems
- G06F3/0628—Interfaces specially adapted for storage systems making use of a particular technique
- G06F3/0662—Virtualisation aspects
- G06F3/0665—Virtualisation aspects at area level, e.g. provisioning of virtual or logical volumes
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/06—Digital input from, or digital output to, record carriers, e.g. RAID, emulated record carriers or networked record carriers
- G06F3/0601—Interfaces specially adapted for storage systems
- G06F3/0668—Interfaces specially adapted for storage systems adopting a particular infrastructure
- G06F3/067—Distributed or networked storage systems, e.g. storage area networks [SAN], network attached storage [NAS]
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/06—Digital input from, or digital output to, record carriers, e.g. RAID, emulated record carriers or networked record carriers
- G06F3/0601—Interfaces specially adapted for storage systems
- G06F3/0668—Interfaces specially adapted for storage systems adopting a particular infrastructure
- G06F3/0671—In-line storage system
- G06F3/0683—Plurality of storage devices
- G06F3/0685—Hybrid storage combining heterogeneous device types, e.g. hierarchical storage, hybrid arrays
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F2211/00—Indexing scheme relating to details of data-processing equipment not covered by groups G06F3/00 - G06F13/00
- G06F2211/10—Indexing scheme relating to G06F11/10
- G06F2211/1002—Indexing scheme relating to G06F11/1076
- G06F2211/1009—Cache, i.e. caches used in RAID system with parity
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F2211/00—Indexing scheme relating to details of data-processing equipment not covered by groups G06F3/00 - G06F13/00
- G06F2211/10—Indexing scheme relating to G06F11/10
- G06F2211/1002—Indexing scheme relating to G06F11/1076
- G06F2211/1028—Distributed, i.e. distributed RAID systems with parity
Abstract
System, umfassend ein oder mehrere Datenverarbeitungsgeräten, die konfiguriert sind, um Vorgänge auszuführen, Folgendes umfassend: das Empfangen der Datei zum Speichern auf einer Vielzahl von Speicherknoten, von denen jeder einen Zwischenspeicher hat; das Speichern der Datei durch Speichern einer Vielzahl von Dateianteilen auf einem anderen Speicherknoten, einschließlich des Schreibens eines ersten Anteils auf den Zwischenspeicher eines ersten Speicherknotens, bis festgelegt wird, dass der Zwischenspeicher des ersten Speicherknotens voll ist, und das Auswählen eines anderen zweiten Speicherknotens in Folge des Festlegens, dass der Zwischenspeicher des ersten Speicherknotens voll ist; und das Aufzeichnen des Speicherorts des Anteils für jeden Dateianteil, wobei der Speicherort mindestens einen Speicherknoten angibt, der den Anteil speichert.A system comprising one or more computing devices configured to perform operations, comprising: receiving the file for storage on a plurality of storage nodes, each of which has a cache; storing the file by storing a plurality of file portions on another storage node, including writing a first portion to the cache of a first storage node until it is determined that the cache of the first storage node is full and selecting another second storage node in sequence determining that the cache of the first storage node is full; and recording the location of the share for each piece of file, the storage location indicating at least one storage node storing the share.
Description
VERWEISREFERENCE
Unter Schutz gestellt werden und Gegenstand des Gebrauchsmusters sind dabei, entsprechend den Vorschriften des Gebrauchsmustergesetzes, lediglich Vorrichtungen wie in den beigefügten Schutzansprüchen definiert, jedoch keine Verfahren. Soweit nachfolgend in der Beschreibung gegebenenfalls auf Verfahren Bezug genommen wird, dienen diese Bezugnahmen lediglich der beispielhaften Erläuterung der in den beigefügten Schutzansprüchen unter Schutz gestellten Vorrichtung oder Vorrichtungen.Be provided under protection and subject of the utility model are, according to the provisions of the utility model law, only devices as defined in the appended claims, but no method. Wherever in the description, if appropriate, reference is made to methods, these references are merely illustrative of the device or devices set forth in the appended claims.
HINTERGRUNDBACKGROUND
Diese Spezifizierung bezieht sich auf das Speichern von digitalen Daten auf physischen Speichergeräten.This specification refers to storing digital data on physical storage devices.
Data-Striping beinhaltet das Speichern von Daten auf einer Reihe von Speichergeräten. Anstatt alle Daten auf ein einziges Gerät zu schreiben, werden die Daten parallel auf mehrere Geräte geschrieben, damit die allgemeine geschriebene Datenrate höher ist, als dies mit nur einem einzigen Gerät möglich wäre. Data-Striping kann mit anderen Techniken zur Datenspeicherung kombiniert werden, zum Beispiel dem Speichern von veralteten Daten, von Fehlererkennung oder Fehlerkorrektur-Codes mit den Daten, um einen schnellen, verlässlichen Speicher zu erstellen.Data striping involves storing data on a variety of storage devices. Instead of writing all the data to a single device, the data is written in parallel to multiple devices so that the overall written data rate is higher than would be possible with a single device. Data striping can be combined with other data storage techniques, such as storing stale data, error detection, or error correction codes with the data to create fast, reliable storage.
ZUSAMMENFASSUNGSUMMARY
Ein Computer-Speichersystem speichert eine Datei auf einer Anzahl von Speicherknoten. Jeder Speicherknoten beinhaltet ein oder mehrere Speichergeräte und jeder Speicherknoten beinhaltet einen Zwischenspeicher (z. B.: Arbeitsspeicher (RAM)) und einen langsameren Speicher (z. B.: eine Festplatte). Der Zwischenspeicher kann Daten schneller speichern, als der langsamere Speicher. Ein Speicherknoten kann zum Beispiel eine Festplatte mit den Fähigkeiten eines Zwischenspeichers sein. Das Computer-Speichersystem schreibt Daten von der Datei auf einen ersten Speicherknoten bis der Zwischenspeicher des ersten Speicherknoten voll ist und schreibt die Daten dann von der Datei auf einen zweiten Speicherknoten. Der erste Speicherknoten kopiert die Daten vom Zwischenspeicher des ersten Speicherknoten auf den langsameren Speicher des ersten Speicherknotens. Das Computer-Speichersystem schreibt Daten weiterhin auf verschiedene Speichergeräte, damit die Datei vollständig gespeichert wird. Daten, die auf Speicherknoten geschrieben sind, können in gleicher Weise geschrieben werden, ungeachtet dessen, ob die Speicherknoten zum Beispiel an einen einzelnen Computer oder mehrere Datenverarbeitungsgeräte angeschlossen sind.A computer storage system stores a file on a number of storage nodes. Each storage node includes one or more storage devices and each storage node includes a cache (e.g., random access memory (RAM)) and a slower storage (eg, a hard disk). The cache can store data faster than the slower memory. For example, a storage node may be a hard disk with the capabilities of a cache. The computer storage system writes data from the file to a first storage node until the cache of the first storage node is full and then writes the data from the file to a second storage node. The first storage node copies the data from the cache of the first storage node to the slower storage of the first storage node. The computer memory system continues to write data to various storage devices to completely save the file. Data written on storage nodes can be written equally regardless of whether the storage nodes are connected to, for example, a single computer or multiple computing devices.
Im allgemeinen kann ein innovativer Aspekt der in dieser Spezifizierung beschriebenen Thematik in Methoden ausgedrückt werden, die Aktionen zum Empfang einer Datei zur Speicherung auf einer Vielzahl von Speicherknoten beinhalten, wobei jeder Speicherknoten einen Zwischenspeicher beinhaltet; das Speichern der Datei durch Speichern einer Vielzahl von Dateianteilen, jedes auf einem unterschiedlichen Speicherknoten, einschließlich Schreiben eines ersten Teils auf dem Zwischenspeicher eines ersten Speicherknotens bis festgelegt wird, dass der Zwischenspeicher des ersten Speicherknotens voll ist und Auswählen eines anderen zweiten Speicherknotens als Folge der Festlegung, dass der Zwischenspeicher des ersten Speicherknotens voll ist, und der Aufzeichnung, für jeden Teil der Datei, des Orts, der mindestens einen Speicherknoten angibt, der den Teil speichert. Weitere Ausführungsformen dieses Aspektes umfassen entsprechende Systeme, Apparate und Computerprogramme, die so konfiguriert sind, dass sie die auf Computerspeichergeräten kodierten Handlungen des Verfahrens ausführen.In general, an innovative aspect of the subject matter described in this specification may be expressed in methods involving actions to receive a file for storage on a plurality of storage nodes, each storage node including a cache; storing the file by storing a plurality of file parts, each on a different storage node, including writing a first part on the cache of a first storage node until the cache of the first storage node is full and selecting another second storage node as a result of the setting in that the buffer of the first storage node is full and the record, for each part of the file, of the location indicating at least one storage node storing the part. Other embodiments of this aspect include corresponding systems, apparatus, and computer programs that are configured to perform the acts of the method encoded on computer storage devices.
Diese und andere Ausführungsformen können als Option eins oder mehrere der folgenden Eigenschaften beinhalten. Festlegen, dass der Zwischenspeicher des ersten Speicherknotens voll ist besteht aus der Festlegung, dass eine Datenspeicherungsrate für das Schreiben des ersten Teils gesunken ist. Festlegen, dass der Zwischenspeicher des ersten Speicherknotens voll ist besteht aus dem Festlegen einer Menge des ersten Teils auf eine bekannte Größe des Zwischenspeichers des ersten Speicherknotens und Festlegen, dass die Menge mit der bekannten Größe übereinstimmt oder diese übersteigt. Auswählen des zweiten Speicherknotens umfasst die willkürliche Auswahl des zweiten Speicherknotens aus den Speicherknoten. Auswählen des zweiten Speicherknotens umfasst die Auswahl eines Speicherknotens mit einer Schreibzeit, die am weitesten zurück in der Vergangenheit liegt. Die Aktionen umfassen desweiteren die Zuteilung eines Stellenwerts für jeden der Speicherknoten, wobei die Auswahl des zweiten Speicherknotens die Verwendung der Stellenwerte beinhaltet. Jeder Stellenwert eines Speicherknotens basiert auf einem Leistungsmerkmal des Speicherknotens. Die Auswahl des zweiten Speicherknotens basiert auf einem oder mehrerer der: Leistungsmerkmale des zweiten Speicherknotens, Nutzungsgeschichte des zweiten Speicherknotens und vergangener Leistungsnachweis des zweiten Speicherknotens. Die Auswahl des zweiten Speicherknotens basiert auf einem oder mehrerer der: absoluten Mengen, die vom zweiten Speicherknoten gespeichert werden und eine Menge an Daten, die vom zweiten Speicherknoten relativ zur Kapazität des zweiten Speicherknotens gespeichert werden. Der erste Speicherknoten kopiert den ersten Teil vom Zwischenspeicher des ersten Speicherknotens auf den langsameren Speicher als Folge des Schreibens des ersten Teils aus dem Zwischenspeicher des ersten Speicherknotens. Das Speichern der Datei umfasst das Schreiben des zweiten Teils auf den zweiten Speicherknoten. Das Schreiben des zweiten Teils auf den zweiten Speicherknoten umfasst das Schreiben des zweiten Teils auf den Zwischenspeicher des zweiten Speicherknotens bis festgelegt wird, dass der Zwischenspeicher des zweiten Speicherknotens voll ist. Das Speichern der Datei umfasst das fortgeführte Schreiben der Teile auf die Datei auf verschiedene Speicherknoten bis die Datei vollständig auf den Speicherknoten gespeichert ist. Die Aktionen umfassen desweiteren den Empfang einer Anfrage für die Datei; Lesen des ersten Teils vom ersten Speicherknoten; und Lesen des zweiten Teils vom zweiten Speicherknoten.These and other embodiments may optionally include one or more of the following features. Determining that the cache of the first storage node is full consists of determining that a data storage rate for writing the first part has dropped. Determining that the cache of the first storage node is full consists of setting a quantity of the first part to a known size of the cache of the first storage node and determining that the amount matches or exceeds the known size. Selecting the second storage node includes arbitrary selection of the second storage node from the storage nodes. Selecting the second storage node involves selecting a storage node with a writing time farthest back in time. The actions further include allocating a location for each of the storage nodes, wherein the selection of the second storage node includes the use of the locations. Each value of a storage node is based on a feature of the Storage node. The selection of the second storage node is based on one or more of the: performance characteristics of the second storage node, usage history of the second storage node, and past performance verification of the second storage node. The selection of the second storage node is based on one or more of the: absolute amounts stored by the second storage node and an amount of data stored by the second storage node relative to the capacity of the second storage node. The first storage node copies the first part from the cache of the first storage node to the slower storage as a result of writing the first part from the cache of the first storage node. Saving the file involves writing the second part to the second storage node. The writing of the second part to the second storage node comprises writing the second part to the buffer of the second storage node until it is determined that the buffer of the second storage node is full. Saving the file involves continuing writing the parts to the file on different storage nodes until the file is completely stored on the storage node. The actions further include receiving a request for the file; Reading the first part from the first storage node; and reading the second part from the second storage node.
Bestimmte Ausführungsformen des in dieser Spezifikation beschriebenen Gegenstands können so implementiert werden, dass sie einen oder mehrere der folgenden Vorteile verwirklichen. Ein Computer-Speichersystem kann seine Speichergeschwindigkeit erhöhen, indem auf Speicherknoten mit Zwischenspeichern geschrieben wird.Certain embodiments of the subject matter described in this specification may be implemented to achieve one or more of the following advantages. A computer storage system can increase its storage speed by writing to storage buffers with buffers.
Die Speicherknoten werden öfter in einem Zwischenspeicherungsmodus gelassen, um Wartezeiten zu verringern und den Datendurchlauf zu erhöhen. Das Computer-Speichersystem kann die gespeicherten Daten unter Verwendung des Speicherprotokolls wiederherstellen.The storage nodes are left in a caching mode more often to reduce latencies and increase data throughput. The computer storage system can recover the stored data using the storage protocol.
Die Details einer oder mehrerer Ausführungsformen des in dieser Spezifikation behandelten und beschriebenen Gegenstands sind in den begleitenden Bildern und der Beschreibung unten dargelegt. Andere Merkmale, Aspekte und Vorteile des Gegenstands werden aus der Beschreibung, den Zeichnungen und den Ansprüchen deutlich.The details of one or more embodiments of the subject matter treated and described in this specification are set forth in the accompanying drawings and the description below. Other features, aspects and advantages of the subject matter will be apparent from the description, drawings and claims.
KURZBESCHREIBUNG DER ZEICHNUNGENBRIEF DESCRIPTION OF THE DRAWINGS
Entsprechende Referenznummern und Kennzeichnungen in den verschiedenen Zeichnungen zeigen entsprechende Elemente an.Corresponding reference numbers and markings in the various drawings indicate corresponding elements.
AUSFÜHRLICHE BESCHREIBUNGDETAILED DESCRIPTION
Jeder Speicherknoten
Ein Speicherknoten
Obwohl der Speicherknoten
Die Speicher-Engine
Ein Zwischenspeicher ist dann voll, wenn dieser eine Menge an Daten speichert, der seine Kapazität erreicht oder beinahe erreicht, so dass dieser keine neuen Daten zur Speicherung mehr annehmen kann. Techniken zum Festlegen, dass der Zwischenspeicher voll ist, werden im Folgenden beschrieben. Die Speicher-Engine
Die Speicher-Engine
Die Speicher-Engine
Betrachten Sie zum Beispiel ein beispielhaftes Szenario für das Speichern der „Datei 1”, wie in Tabelle 1 dargestellt. Die ersten drei Zeilen sind über die erste Spalte mit Datei 1 assoziiert. Die erste Zeile gibt an, dass zum vom Zeitstempel 1 angegebenen Zeitpunkt die Speicher-Engine
Die von Tabelle 1 dargestellten Adressen sind beispielhafte Adressen. Im Allgemeinen beziehen sich die Adressen auf den Speicherorten der Daten auf einem langsameren Speicher an einem Speicherknoten. Obwohl Daten üblicherweise anfänglich auf einen Zwischenspeicher geschrieben werden, beziehen sich die Adressen auf Speicherorten auf einem langsameren Speicher, da die Speicherknoten Daten vom Zwischenspeicher auf den langsameren Speicher kopieren. Ein Speicherknoten kann zum Beispiel den Speicherort der Daten festlegen, die auf dessen Zwischenspeicher auf einem Zielort in einem langsameren Speicher geschrieben wurden.The addresses shown in Table 1 are exemplary addresses. In general, the addresses in the storage locations of the data refer to a slower storage at a storage node. Although data is typically initially written to a cache, as the storage nodes copy data from the cache to the slower memory, the addresses refer to locations on slower storage. For example, a storage node may specify the location of the data that has been written to its cache on a destination in a slower memory.
Die Speicher-Engine
Wenn die Speicher-Engine
Im ersten Beispiel kann die Speicher-Engine
In einem zweiten Beispiel kann die Speicher-Engine
In einem dritten Beispiel kann der Speicherknoten
In einem vierten Beispiel kann die Speicher-Engine
Die Speicher-Engine
In einem anderen Beispiel kann die Speicher-Engine
Das System benennt eine Datei zum Speichern auf den Speicherknoten (Schritt
Das System wählt einen Speicherknoten aus (Schritt
Das System speichert Daten von der Datei auf dem ausgewählten Speicherknoten (Schritt
Das System zeichnet den Speicherort der gespeicherten Daten am ausgewählten Speicherknoten aus (Schritt
Das System legt fest, ob die Datei vollständig gespeichert ist (Schritt
Falls der Zwischenspeicher des ausgewählten Speicherknotens voll ist, wählt das System einen anderen Speicherknoten aus (Rückkehr zu Schritt
Das System empfängt eine Datei (Schritt
In einigen Implementierungen umfasst das Festlegen, dass der Zwischenspeicher des Speicherknotens voll ist das Festlegen, dass eine Datenspeicherrate gesunken ist. In einigen Implementierungen umfasst das Festlegen, dass der Zwischenspeicher voll ist das Vergleichen einer Menge an Daten mit einer bekannte Größe des Zwischenspeichers des Speicherknotens und Festlegen, dass die Menge die bekannte Größe übersteigt. Das System zeichnet einen Speicherort des Teils der Daten auf dem Speicherknoten auf und assoziiert den Ort mit der Datei (Schritt
Das System wählt einen anderen Speicherknoten aus in Folge der Festlegung, dass der Zwischenspeicher des Speicherknotens voll ist (Schritt
Das System empfängt eine Anfrage für eine Datei (Schritt
Das System legt fest, ob alle Daten in der Datei gelesen wurden (Schritt
Das System
Das System
Jedes Modul ist konfiguriert, um auf dem System
Das System
Ausführungsformen des Gegenstands und die in dieser Spezifikation beschriebenen Tätigkeiten können in digitalen elektronischen Schaltungen oder in Computer-Software, Firmware oder Hardware implementiert werden, einschließlich der in dieser Spezifikation offengelegten Strukturen und ihrer strukturellen Entsprechungen oder in Kombinationen von einer oder mehrerer von ihnen. Ausführungsformen des in dieser Spezifikation beschriebenen Gegenstands können als ein oder mehrere Computerprogramme, d. h. als ein oder mehrere Module von Computerprogrammanweisungen implementiert werden, die auf einem Computer-Speichermedium für die Ausführung durch oder die Steuerung des Betriebs des datenverarbeitenden Apparats kodiert werden. Alternativ oder zusätzlich können die Programmanweisungen auf einem künstlich erzeugten propagierten Signal, z. B. einem maschinell erzeugten elektrischen, optischen oder elektromagnetischen Signal künstlich kodiert werden, das erzeugt wird, um Informationen für die Übertragung auf einen geeigneten Empfängerapparat für die Ausführung durch einen datenverarbeitenden Apparat zu kodieren. Bei einem Computer-Speichermedium kann es sich um ein maschinell lesbares Speichergerät, einen maschinell lesbaren Speicherträger, ein zufälliges oder serielles Speicher-Array oder Speichergerät oder um eine Kombination aus einem oder mehreren dieser Geräte handeln oder in ihnen enthalten sein. Außerdem ist ein Computer-Speichermedium zwar kein verbreitetes Signal, aber ein Computer-Speichermedium kann eine Quelle oder ein Bestimmungsort von Computerprogrammanweisungen sein, die in einem künstlich erzeugten verbreiteten Signal kodiert werden. Bei dem Computer-Speichermedium kann es sich auch um eine oder mehrere unterschiedliche physische Komponenten oder Medien (z. B. mehrere CDs, Plattenlaufwerke oder andere Speichergeräte) handeln, bzw. kann das Speichermedium darin enthalten sein.Embodiments of the subject matter and the activities described in this specification may be implemented in digital electronic circuits or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them. Embodiments of the subject matter described in this specification may be embodied as one or more computer programs, i. H. are implemented as one or more modules of computer program instructions encoded on a computer storage medium for execution by or control of the operation of the data processing apparatus. Alternatively or additionally, the program instructions may be based on an artificially generated propagated signal, e.g. A machine generated electrical, optical or electromagnetic signal which is generated to encode information for transmission to a suitable receiver apparatus for execution by a data processing apparatus. A computer storage medium may be or may be included in a machine-readable storage device, a machine-readable storage medium, a random or serial storage array or storage device, or a combination of one or more of these devices. In addition, although a computer storage medium is not a common signal, a computer storage medium may be a source or destination of computer program instructions encoded in an artificially generated broadcast signal. The computer storage medium may also be one or more different physical components or media (eg, multiple CDs, disk drives, or other storage devices), or the storage medium may be included therein.
Die in dieser Spezifikation beschriebenen Tätigkeiten können als Tätigkeiten implementiert werden, die von einem datenverarbeitenden Apparat mit Daten durchgeführt werden, die auf einem oder mehreren maschinell lesbaren Speichergeräten gespeichert werden oder von anderen Quellen entgegengenommen werden.The activities described in this specification may be implemented as activities performed by a data processing apparatus with data stored on or read from other sources by one or more machine-readable storage devices.
Der Begriff „datenverarbeitender Apparat” umfasst alle Arten von Apparaten, Geräten und Maschinen für die Verarbeitung von Daten, einschließlich beispielsweise durch einen programmierbaren Prozessor, einen Computer, ein System auf einem oder mehreren Chips oder Kombinationen des Vorstehenden. Der Apparat kann logische Schaltungen mit einem Sonderzweck, z. B. ein FPGA („Field Programmable Gate Array”) oder eine ASIC (anwendungsspezifische integrierte Schaltung) enthalten. Der Apparat kann neben der Hardware auch einen Code einschließen, der eine Ausführungsumgebung für das betreffende Computerprogramm in der Frage erstellt, z. B. einen Code, der Prozessor-Firmware, einen Protokollstapel, ein Datenbank-Managementsystem, ein Betriebssystem, eine plattformunabhängige Laufzeitumgebung, eine virtuelle Maschine oder eine Kombination einer oder mehrerer der genannten darstellt. Der Apparat und die Ausführungsumgebung können verschiedene unterschiedliche Rechnermodell-Infrastrukturen umsetzen, wie Webdienstleistungen, verteilte Rechen- und Grid-Computing-Infrastrukturen.The term "data processing apparatus" encompasses all types of apparatus, devices and machines for processing data including, for example, a programmable processor, a computer, a system on one or more chips, or combinations of the foregoing. The apparatus can logic circuits with a special purpose, eg. As an FPGA ("Field Programmable Gate Array") or an ASIC (application-specific integrated circuit) included. The apparatus may include, in addition to hardware, code that provides an execution environment for the particular computer program in question, e.g. For example, a code representing processor firmware, a protocol stack, a database management system, an operating system, a platform-independent runtime environment, a virtual machine, or a combination of one or more of these. The device and execution environment can implement various different computer model infrastructures, such as web services, distributed computing and grid computing infrastructures.
Ein Computerprogramm (auch bezeichnet als Programm, Software, Softwareanwendung, Script oder Code) kann in einer beliebigen Form von Programmiersprache geschrieben sein, einschließlich kompilierter oder interpretierter Sprachen, deklarativer oder verfahrensorientierter Sprachen, und das Programm kann in jeder beliebigen Form eingesetzt sein, darunter als unabhängiges Programm oder als ein Modul, eine Komponente, eine Subroutine, ein Objekt oder eine andere Einheit, die zur Benutzung in einer Rechenumgebung geeignet ist. Ein Computerprogramm kann, muss aber nicht, einer Datei in einem Dateisystem entsprechen. Ein Programm kann in einem Teil einer Datei gespeichert sein, die andere Programme oder Daten enthält (z. B. ein oder mehrere Scripts, die in einem Dokument in Markup-Sprache gespeichert sind), in einer einzelnen Datei speziell für das betreffende Programm oder in mehreren koordinierten Dateien (z. B. Dateien, die ein oder mehrere Module, Unterprogramme oder Teile von Code speichern). Ein Computerprogramm kann auf einem Computer oder mehreren Computer eingerichtet sein oder ausgeführt werden, die an einem Standort angeordnet sind oder über mehrere Standorte verteilt sind und über ein Kommunikationsnetz verbunden sind.A computer program (also referred to as program, software, software application, script or code) may be written in any form of programming language, including compiled or interpreted languages, declarative or procedural languages, and the program may be in any form, including as independent program or as a module, component, subroutine, object or other entity suitable for use in a computing environment. A computer program may or may not be equivalent to a file in a file system. A program may be stored in a portion of a file containing other programs or data (eg, one or more scripts stored in a document in markup language), in a single file specific to that program, or in multiple coordinated files (for example, files that store one or more modules, subprograms, or pieces of code). A computer program may be set up or executed on one or more computers located at a site or distributed over multiple sites and connected via a communications network.
Die Verfahren und Logikflüsse, die in dieser Spezifikation beschrieben sind, können durch Handlungen, wie dem Betreiben von Eingabedaten und dem Erzeugen von Ausgaben. durch einen oder mehrere programmierbare Prozessoren, die einen oder mehrere Computerprogramme ausführen, durchgeführt werden. Die Prozesse und die logischen Abläufe können auch durch logische Sonderzweckschaltungen durchgeführt werden, und der Apparat kann als Sonderzweckschaltungen implementiert werden, z. B. ein FPGA (Field Programmable Gate Array) oder eine ASIC (anwendungsspezifische integrierte Schaltung).The methods and logic flows described in this specification may be accomplished through acts such as operating input data and generating outputs. by one or more programmable processors executing one or more computer programs. The processes and logical operations may also be performed by special purpose logic circuits, and the apparatus may be implemented as special purpose circuits, e.g. As an FPGA (Field Programmable Gate Array) or an ASIC (application-specific integrated circuit).
Prozessoren, die für die Durchführung eines Computerprogramms geeignet sind, schließen beispielsweise sowohl allgemeine und als auch Spezial-Mikroprozessoren sowie alle Arten eines oder mehrerer Prozessoren jeglicher Art Digitalrechner ein. Ganz allgemein nimmt ein Prozessor Befehle und Daten von einem Festwertspeicher oder einem Arbeitsspeicher oder von beiden entgegen. Die wesentlichen Elemente eines Computers sind ein Prozessor für das Durchführen von Handlungen gemäß Anweisungen und ein oder mehr Speichergeräte für das Speichern von Anweisungen und Daten. Ganz allgemein gehören zu einem Computer auch ein oder mehrere Massenspeichergeräte für das Speichern von Daten, z. B. Magnet-, magnetooptische oder optische Disketten, um Daten entgegenzunehmen und/oder zu übertragen, bzw. ist ein Computer operativ an ein solches Speichergerät gekoppelt. Jedoch muss ein Computer solche Geräte nicht haben. Außerdem kann ein Computer in einem anderen Gerät eingebettet sein, z. B. in einem Mobiltelefon, einem Organizer (PDA), einem mobilen Audio- oder Videoplayer, einer Spielkonsole, einem Funknavigationsempfänger oder einem tragbaren Speichergerät (z. B. in einem USB-Stick), um nur einige zu nennen. Geräte, die für das Speichern von Computerprogrammanweisungen und -daten geeignet sind, schließen alle Formen von Dauerspeichern, Medien- und Speichergeräten ein, einschließlich beispielsweise Halbleiter-Speichergeräte, z. B. EPROM, EEPROM und USB-Flash-Speicher; Magnetplatten, z. B. interne Festplatten oder herausnehmbare Platten; magnetooptische Platten; und CD-ROMs und DVD-ROMs. Der Prozessor und der Speicher können durch logische Sonderzweckschaltungen ergänzt werden oder darin eingebaut sein.Processors suitable for running a computer program include, for example, both general and special purpose microprocessors, as well as all types of one or more processors of any type of digital computer. In general, a processor accepts instructions and data from read-only memory or memory, or both. The essential elements of a computer are a processor for performing actions in accordance with instructions and one or more storage devices for storing instructions and data. Generally, a computer also includes one or more mass storage devices for storing data, e.g. As magnetic, magneto-optical or optical disks to receive and / or transmit data, or a computer is operatively coupled to such a storage device. However, a computer does not have to have such devices. In addition, a computer may be embedded in another device, e.g. In a mobile phone, an organizer (PDA), a mobile audio or video player, a game console, a radio navigation receiver, or a portable storage device (eg, a USB stick), to name but a few. Devices suitable for storing computer program instructions and data include all forms of persistent storage, media and storage devices, including, for example, semiconductor storage devices, e.g. EPROM, EEPROM and USB flash memory; Magnetic disks, z. Internal hard disks or removable disks; magneto-optical disks; and CD-ROMs and DVD-ROMs. The processor and memory may be supplemented or incorporated by special purpose logic circuits.
Um die Interaktion mit einem Benutzer zu ermöglichen, können in dieser Spezifikation beschriebene Ausführungsformen des Gegenstands auf einem Computer mit einem Anzeigegerät implementiert werden, z. B. einem CRT (Kathodenstrahlröhre) oder LCD-(Flüssigkristallanzeige)Monitor, mit welchem dem Benutzer Informationen angezeigt werden, sowie einer Tastatur und einem Anzeigegerät, z. B. einer Maus oder einem Trackball, mit denen der Benutzer Eingaben in den Computer vornehmen kann. Es können auch andere Arten von Einrichtungen verwendet werden, um für eine Interaktion mit einem Nutzer zu sorgen; beispielsweise kann eine dem Benutzer gelieferte Rückkopplung beliebiger Form von sensorischer Rückkopplung vorliegen, z. B. eine visuelle Rückkopplung, auditive Rückkopplung oder taktile Rückkopplung; und die Eingabe von dem Nutzer kann in beliebiger Form empfangen werden, einschließlich akustischer, Sprach- oder taktiler Eingabe. Darüber hinaus kann ein Computer über das Senden von Dokumenten an und das Empfangen von Dokumenten von einer Einrichtung, die vom Benutzer verwendet wird, mit einem Benutzer interagieren; beispielsweise über das Senden von Webpages an einen Webbrowser auf dem Clientgerät des Benutzers als Antwort auf die vom Webbrowser empfangenen Aufforderungen.To facilitate interaction with a user, embodiments of the subject matter described in this specification may be implemented on a computer with a display device, e.g. As a CRT (cathode ray tube) or LCD (liquid crystal display) monitor, with which the user information is displayed, and a keyboard and a display device, eg. As a mouse or a trackball, with which the user can make inputs to the computer. Other types of devices may be used to provide for interaction with a user; For example, a user-supplied feedback of any form of sensory feedback may be present, e.g. A visual feedback, auditory feedback or tactile feedback; and the input from the user may be received in any form, including acoustic, voice or tactile input. In addition, a computer may interact with a user by sending documents to and receiving documents from a device used by the user; for example, by sending webpages to a web browser on the user's client device in response to prompts received from the web browser.
Ausführungsformen des in dieser Spezifikation betrachteten Gegenstands können in ein Computersystem implementiert werden, das eine Backend-Komponente (z. B. einen Datenserver), oder eine Middleware-Komponente (z. B. einen Anwendungsserver) oder eine Frontend-Komponente (z. B. einen Kundencomputer mit graphischer Benutzeroberfläche oder einem Webbrowser) umfasst, worüber der Benutzer mit einer Implementierung des in dieser Spezifikation beschriebenen Gegenstands interagieren kann oder eine beliebige Kombination aus solchen Backend, Middleware- oder Frontend-Komponenten. Die Komponenten des Systems können durch eine beliebige Form oder ein beliebiges Medium digitaler Datenkommunikation miteinander verbunden sein, z. B. ein Kommunikationsnetz. Zu Beispielen für Kommunikationsnetze zählen ein lokales Netzwerk („LAN”), ein Fernnetzwerk („WAN”), eine netzübergreifende Verbindung (z. B. das Internet) und Peer-to-Peer Netzwerke (z. B. Ad-Hoc Peer-to-Peer Netzwerke).Embodiments of the subject matter contemplated in this specification may be implemented in a computer system that includes a backend component (eg, a data server), or a middleware component (eg, an application server) or a front end component (e.g. a graphical user interface client computer or web browser) over which the user may interact with an implementation of the subject matter described in this specification or any combination of such backend, middleware or frontend components. The components of the system may be interconnected by any form or medium of digital data communication, e.g. B. a communication network. Examples of communication networks include a local area network ("LAN"), a wide area network ("WAN"), a cross-network connection (e.g., the Internet), and peer-to-peer networks (e.g., ad hoc peer networks). to-peer networks).
Das Informatiksystem kann Kunden und Server umfassen. Ein Client und Server befinden sich im Allgemeinen ortsfern voneinander und interagieren typischerweise über ein Kommunikationsnetz. Die Beziehung zwischen Client und Server entsteht aufgrund von Computerprogrammen, die auf den jeweiligen Computern laufen und die eine Client-Server-Beziehung zueinander haben. In einigen Ausführungsformen überträgt ein Server Daten (z. B. eine HTML-Seite) an ein Client-Gerät (z. B. zum Anzeigen von Daten auf und zum Empfangen von Benutzereingaben von einem Benutzer, der mit dem Client-Gerät interagiert). Am Client-Gerät erzeugte Daten (z. B. infolge der Benutzerinteraktion) können vom Client-Gerät am Server empfangen werden.The IT system can include customers and servers. A client and server are generally remote from each other and typically interact over a communications network. The relationship between client and server arises due to computer programs running on the respective computers and having a client-server relationship with each other. In some embodiments, a server transmits data (eg, an HTML page) to a client device (eg, for displaying data and receiving user input from a user interacting with the client device). Data generated at the client device (eg, as a result of user interaction) may be received by the client device at the server.
Zwar enthält diese Spezifikation viele spezifische Implementierungsdetails, jedoch sollten diese nicht als Beschränkungen des Umfangs oder des Anspruchs ausgelegt werden, sondern vielmehr als Beschreibungen spezifischer Merkmale bestimmter Ausführungsformen bestimmter Erfindungen. Bestimmte Merkmale, die in dieser Spezifikation im Kontext der unterschiedlichen Ausführungsformen beschrieben werden, können auch in Kombination in einer einzelnen Ausführungsform implementiert werden. Andererseits können verschiedene Merkmale, die im Kontext einer einzelnen Ausführungsform beschrieben werden, in mehreren Ausführungsformen oder in jeder geeigneten Unterkombination implementiert werden. Außerdem können ein oder mehrere Merkmale einer beanspruchten Kombination in einigen Fällen aus der Kombination herausgelöst werden, auch wenn die Merkmale vorstehend als in gewissen Kombinationen funktionierend beschrieben oder gar als eine Kombination beansprucht werden, und die beanspruchte Kombination kann an eine Unterkombination oder eine Variation einer Unterkombination verwiesen werden.While this specification contains many specific implementation details, these should not be construed as limitations on the scope or on the claims, but rather as descriptions of specific features of particular embodiments of particular inventions. Certain features described in this specification in the context of the various embodiments may also be implemented in combination in a single embodiment. On the other hand, various features described in the context of a single embodiment may be implemented in multiple embodiments or in any suitable subcombination. In addition, one or more features of a claimed combination may in some instances be released from the combination, even if the features are described above as functioning in some combinations or even claimed as a combination, and the claimed combination may be attached to a subcombination or variation of a subcombination to get expelled.
Ebenso werden Tätigkeiten in den Zeichnungen zwar in einer bestimmten Reihenfolge dargestellt, aber dies sollte nicht als Anforderung verstanden werden, dass solche Tätigkeiten in der bestimmten gezeigten Reihenfolge oder in einer aufeinanderfolgenden Reihenfolge ausgeführt werden müssen oder dass alle dargestellten Tätigkeiten ausgeführt werden müssen, um erwünschte Ergebnisse zu erzielen. Unter bestimmten Umständen können ein Mehrprogrammbetrieb und eine Parallelbearbeitung vorteilhaft sein. Darüber hinaus sollte die Trennung verschiedener Systemkomponenten in den oben beschriebenen Ausführungsformen nicht in allen Ausführungsformen erforderlich aufgefasst werden, und es versteht sich, dass die beschriebenen Programmkomponenten und Systeme im Allgemeinen zusammen in ein einziges Softwareprodukt integriert oder zu mehreren Softwareprodukten verkapselt werden können.Also, while activities in the drawings are presented in a particular order, this should not be construed as a requirement that such activities be performed in the particular order shown or in a sequential order, or that all activities shown must be performed to achieve desired results to achieve. Under certain circumstances, multi-program operation and parallel processing may be advantageous. Moreover, the separation of various system components in the embodiments described above should not be construed as required in all embodiments, and it should be understood that the described program components and systems generally can be integrated together into a single software product or encapsulated into multiple software products.
Folglich wurden bestimmte Ausführungsformen des Gegenstands beschrieben. Weitere Ausführungsformen gehören zum Umfang der folgenden Ansprüche. In einigen Fällen können die in den Ansprüchen beschriebenen Handlungen in einer anderen Reihenfolge durchgeführt werden und dennoch erwünschte Ergebnisse erzielen. Zusätzlich erfordern die in den beigefügten Figuren dargestellten Prozesse nicht notwendigerweise die bestimmte gezeigte Reihenfolge oder aufeinanderfolgende Reihenfolge, um erwünschte Ergebnisse zu erzielen. Bei bestimmten Implementierungen können Mehrprogrammbetrieb und eine Parallelbearbeitung vorteilhaft sein.Thus, certain embodiments of the subject matter have been described. Other embodiments are within the scope of the following claims. In some cases, the acts described in the claims may be performed in a different order and still achieve desirable results. In addition, the processes illustrated in the attached figures do not necessarily require the particular order shown or sequential order to achieve desired results. In certain implementations, multi-program operation and parallel processing may be advantageous.
Claims (15)
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US201113010548 | 2011-01-20 | ||
US13/010,548 US8745329B2 (en) | 2011-01-20 | 2011-01-20 | Storing data across a plurality of storage nodes |
Publications (1)
Publication Number | Publication Date |
---|---|
DE202012013432U1 true DE202012013432U1 (en) | 2017-01-13 |
Family
ID=46516075
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
DE202012013432.9U Expired - Lifetime DE202012013432U1 (en) | 2011-01-20 | 2012-01-19 | Storing data on storage nodes |
Country Status (6)
Country | Link |
---|---|
US (3) | US8745329B2 (en) |
EP (1) | EP2666111B1 (en) |
CN (2) | CN106909317B (en) |
AU (3) | AU2012207328B2 (en) |
DE (1) | DE202012013432U1 (en) |
WO (1) | WO2012100037A1 (en) |
Families Citing this family (40)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9135037B1 (en) | 2011-01-13 | 2015-09-15 | Google Inc. | Virtual network protocol |
US8533343B1 (en) | 2011-01-13 | 2013-09-10 | Google Inc. | Virtual network pairs |
US8874888B1 (en) | 2011-01-13 | 2014-10-28 | Google Inc. | Managed boot in a cloud system |
US8745329B2 (en) | 2011-01-20 | 2014-06-03 | Google Inc. | Storing data across a plurality of storage nodes |
US8812586B1 (en) | 2011-02-15 | 2014-08-19 | Google Inc. | Correlating status information generated in a computer network |
US8261295B1 (en) | 2011-03-16 | 2012-09-04 | Google Inc. | High-level language for specifying configurations of cloud-based deployments |
US8533796B1 (en) | 2011-03-16 | 2013-09-10 | Google Inc. | Providing application programs with access to secured resources |
US9063818B1 (en) | 2011-03-16 | 2015-06-23 | Google Inc. | Automated software updating based on prior activity |
US9237087B1 (en) | 2011-03-16 | 2016-01-12 | Google Inc. | Virtual machine name resolution |
US9075979B1 (en) | 2011-08-11 | 2015-07-07 | Google Inc. | Authentication based on proximity to mobile device |
US8966198B1 (en) | 2011-09-01 | 2015-02-24 | Google Inc. | Providing snapshots of virtual storage devices |
US9069616B2 (en) | 2011-09-23 | 2015-06-30 | Google Inc. | Bandwidth throttling of virtual disks |
CN105897859B (en) * | 2016-03-25 | 2021-07-30 | 北京书生云科技有限公司 | Storage system |
US8958293B1 (en) | 2011-12-06 | 2015-02-17 | Google Inc. | Transparent load-balancing for cloud computing services |
US9178698B1 (en) | 2011-12-21 | 2015-11-03 | Google Inc. | Dynamic key management |
US8983860B1 (en) | 2012-01-30 | 2015-03-17 | Google Inc. | Advertising auction system |
US8996887B2 (en) | 2012-02-24 | 2015-03-31 | Google Inc. | Log structured volume encryption for virtual machines |
US8677449B1 (en) | 2012-03-19 | 2014-03-18 | Google Inc. | Exposing data to virtual machines |
US9069806B2 (en) | 2012-03-27 | 2015-06-30 | Google Inc. | Virtual block devices |
US9529772B1 (en) * | 2012-11-26 | 2016-12-27 | Amazon Technologies, Inc. | Distributed caching cluster configuration |
US9847907B2 (en) | 2012-11-26 | 2017-12-19 | Amazon Technologies, Inc. | Distributed caching cluster management |
US9262323B1 (en) | 2012-11-26 | 2016-02-16 | Amazon Technologies, Inc. | Replication in distributed caching cluster |
US9602614B1 (en) | 2012-11-26 | 2017-03-21 | Amazon Technologies, Inc. | Distributed caching cluster client configuration |
US9430255B1 (en) | 2013-03-15 | 2016-08-30 | Google Inc. | Updating virtual machine generated metadata to a distribution service for sharing and backup |
CN107037984B (en) * | 2013-12-27 | 2019-10-18 | 威盛电子股份有限公司 | Data memory device and its method for writing data |
US20150271096A1 (en) | 2014-03-24 | 2015-09-24 | Google Technology Holdings LLC | Allocation of Client Device Memory for Content from Content Sources |
CN106796491A (en) * | 2014-10-03 | 2017-05-31 | 新加坡科技研究局 | The method for optimizing the data reconstruction of blending objects storage device |
US10031679B2 (en) * | 2014-11-21 | 2018-07-24 | Security First Corp. | Gateway for cloud-based secure storage |
US10572443B2 (en) | 2015-02-11 | 2020-02-25 | Spectra Logic Corporation | Automated backup of network attached storage |
US20160349993A1 (en) * | 2015-05-29 | 2016-12-01 | Cisco Technology, Inc. | Data-driven ceph performance optimizations |
US11586647B2 (en) | 2016-10-03 | 2023-02-21 | Ocient, Inc. | Randomized data distribution in highly parallel database management system |
US11314648B2 (en) * | 2017-02-08 | 2022-04-26 | Arm Limited | Data processing |
CN110069210B (en) * | 2018-01-23 | 2021-09-28 | 杭州海康威视系统技术有限公司 | Storage system, and method and device for allocating storage resources |
JP7082373B2 (en) * | 2019-03-27 | 2022-06-08 | 日本電信電話株式会社 | Data management device and data management method |
US11847333B2 (en) * | 2019-07-31 | 2023-12-19 | EMC IP Holding Company, LLC | System and method for sub-block deduplication with search for identical sectors inside a candidate block |
CN110989934B (en) * | 2019-12-05 | 2023-08-25 | 达闼机器人股份有限公司 | Block chain link point data storage method, block chain system and block chain node |
US20210200717A1 (en) * | 2019-12-26 | 2021-07-01 | Oath Inc. | Generating full metadata from partial distributed metadata |
CN111427854B (en) * | 2020-03-23 | 2024-01-30 | 深圳震有科技股份有限公司 | Stack structure realizing method, device, equipment and medium for supporting storage batch data |
JP7102460B2 (en) * | 2020-05-27 | 2022-07-19 | 株式会社日立製作所 | Data management method in distributed storage device and distributed storage device |
US20220276800A1 (en) * | 2021-02-26 | 2022-09-01 | EMC IP Holding Company LLC | Mapping Storage Volumes to Storage Processing Nodes Using Input/Output Operation Constraints and Cost Function |
Family Cites Families (90)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5463768A (en) | 1994-03-17 | 1995-10-31 | General Electric Company | Method and system for analyzing error logs for diagnostics |
US5778444A (en) | 1996-05-06 | 1998-07-07 | Motorola, Inc. | Method and apparatus for reset-sensitive and controlled register write accesses in a data processing system with user and test modes |
US6148368A (en) * | 1997-07-31 | 2000-11-14 | Lsi Logic Corporation | Method for accelerating disk array write operations using segmented cache memory and data logging |
US6282607B1 (en) * | 1997-09-18 | 2001-08-28 | Lucent Technologies, Inc. | Efficient scheduling of reading data from multiple storage mediums to satisfy multiple requests |
US6178482B1 (en) | 1997-11-03 | 2001-01-23 | Brecis Communications | Virtual register sets |
JP4543554B2 (en) * | 1999-03-03 | 2010-09-15 | ソニー株式会社 | Data processing apparatus and data processing method |
US6449671B1 (en) * | 1999-06-09 | 2002-09-10 | Ati International Srl | Method and apparatus for busing data elements |
US6598179B1 (en) | 2000-03-31 | 2003-07-22 | International Business Machines Corporation | Table-based error log analysis |
US6829678B1 (en) * | 2000-07-18 | 2004-12-07 | International Business Machines Corporation | System for determining the order and frequency in which space is allocated on individual storage devices |
JP2002207620A (en) | 2001-01-10 | 2002-07-26 | Toshiba Corp | File system and data caching method of the same system |
US7685126B2 (en) * | 2001-08-03 | 2010-03-23 | Isilon Systems, Inc. | System and methods for providing a distributed file system utilizing metadata to track information about data stored throughout the system |
US7627860B2 (en) | 2001-08-14 | 2009-12-01 | National Instruments Corporation | Graphically deployment of a program with automatic conversion of program type |
US7117243B2 (en) | 2001-10-02 | 2006-10-03 | Citrix Systems, Inc. | Methods for distributed program execution with file-type association in a client-server network |
US7509645B2 (en) * | 2002-10-17 | 2009-03-24 | Intel Corporation | Methods and apparatus for load balancing storage nodes in a distributed network attached storage system |
US7660790B1 (en) * | 2005-02-24 | 2010-02-09 | Symantec Operating Corporation | Method and apparatus for utilizing a file change log |
AU2003300350A1 (en) * | 2003-01-02 | 2004-07-29 | Attune Systems, Inc. | Metadata based file switch and switched file system |
US7055071B2 (en) | 2003-01-09 | 2006-05-30 | International Business Machines Corporation | Method and apparatus for reporting error logs in a logical environment |
US7127568B2 (en) * | 2003-01-23 | 2006-10-24 | Hitachi, Ltd. | Throttling in storage systems |
US7373451B2 (en) | 2003-12-08 | 2008-05-13 | The Board Of Trustees Of The Leland Stanford Junior University | Cache-based system management architecture with virtual appliances, network repositories, and virtual appliance transceivers |
US20050125456A1 (en) * | 2003-12-09 | 2005-06-09 | Junichi Hara | File migration method based on access history |
US7103740B1 (en) * | 2003-12-31 | 2006-09-05 | Veritas Operating Corporation | Backup mechanism for a multi-class file system |
US20050166011A1 (en) | 2004-01-23 | 2005-07-28 | Burnett Robert J. | System for consolidating disk storage space of grid computers into a single virtual disk drive |
US7610319B1 (en) * | 2004-03-01 | 2009-10-27 | Symantec Operating Corporation | Efficient operations using assistance from secondary site |
US20070271604A1 (en) | 2004-03-17 | 2007-11-22 | Fidelitygenetic Ltd. | Secure Transaction of Dna Data |
JP4147198B2 (en) | 2004-03-23 | 2008-09-10 | 株式会社日立製作所 | Storage system |
JP4402997B2 (en) * | 2004-03-26 | 2010-01-20 | 株式会社日立製作所 | Storage device |
US7512721B1 (en) | 2004-05-25 | 2009-03-31 | Qlogic, Corporation | Method and apparatus for efficient determination of status from DMA lists |
US7650331B1 (en) | 2004-06-18 | 2010-01-19 | Google Inc. | System and method for efficient large-scale data processing |
EP1622009A1 (en) * | 2004-07-27 | 2006-02-01 | Texas Instruments Incorporated | JSM architecture and systems |
US7908302B1 (en) * | 2004-09-17 | 2011-03-15 | Symantec Operating Corporation | In-place splitting and merging of files |
GB2418326B (en) | 2004-09-17 | 2007-04-11 | Hewlett Packard Development Co | Network vitrualization |
GB2419697A (en) | 2004-10-29 | 2006-05-03 | Hewlett Packard Development Co | Virtual overlay infrastructures each having an infrastructure controller |
GB2419701A (en) | 2004-10-29 | 2006-05-03 | Hewlett Packard Development Co | Virtual overlay infrastructure with dynamic control of mapping |
GB2419702A (en) | 2004-10-29 | 2006-05-03 | Hewlett Packard Development Co | Virtual overlay infrastructures which can be suspended and later reactivated |
US20060161753A1 (en) | 2005-01-18 | 2006-07-20 | Aschoff John G | Method, apparatus and program storage device for providing automatic performance optimization of virtualized storage allocation within a virtualized storage subsystem |
US7346734B2 (en) * | 2005-05-25 | 2008-03-18 | Microsoft Corporation | Cluster storage collection based data management |
JP4681374B2 (en) * | 2005-07-07 | 2011-05-11 | 株式会社日立製作所 | Storage management system |
US7761573B2 (en) | 2005-12-07 | 2010-07-20 | Avaya Inc. | Seamless live migration of virtual machines across optical networks |
EP1818844B1 (en) | 2006-02-10 | 2013-03-13 | Secunet Security Networks Aktiengesellschaft | Method for using security tokens |
US7814279B2 (en) * | 2006-03-23 | 2010-10-12 | International Business Machines Corporation | Low-cost cache coherency for accelerators |
US20070288921A1 (en) | 2006-06-13 | 2007-12-13 | King Steven R | Emulating a network-like communication connection between virtual machines on a physical device |
US8103870B2 (en) * | 2006-09-12 | 2012-01-24 | Foleeo, Inc. | Hive-based peer-to-peer network |
JP2008077290A (en) * | 2006-09-20 | 2008-04-03 | Hitachi Ltd | Information processor, information processing method and storage system |
US20080077635A1 (en) * | 2006-09-22 | 2008-03-27 | Digital Bazaar, Inc. | Highly Available Clustered Storage Network |
US20080086515A1 (en) | 2006-10-06 | 2008-04-10 | International Business Machines Corporation | Method and System for a Soft Error Collection of Trace Files |
US7653833B1 (en) | 2006-10-31 | 2010-01-26 | Hewlett-Packard Development Company, L.P. | Terminating a non-clustered workload in response to a failure of a system with a clustered workload |
US7953925B2 (en) * | 2006-12-29 | 2011-05-31 | Teradata Us, Inc. | Transparent data temperature sensitive cluster duplication |
US20080205415A1 (en) | 2007-02-28 | 2008-08-28 | Morales Henry N Jerez | Access, Connectivity and Interoperability for Devices and Services |
US7865575B2 (en) * | 2007-03-30 | 2011-01-04 | Sterling Commerce, Inc. | Methods and apparatus to perform file transfers in distributed file systems |
US20080270704A1 (en) | 2007-04-30 | 2008-10-30 | He Dingshan | Cache arrangement for improving raid i/o operations |
US8051362B2 (en) * | 2007-06-15 | 2011-11-01 | Microsoft Corporation | Distributed data storage using erasure resilient coding |
US8055864B2 (en) * | 2007-08-06 | 2011-11-08 | International Business Machines Corporation | Efficient hierarchical storage management of a file system with snapshots |
US20090097657A1 (en) | 2007-10-05 | 2009-04-16 | Scheidt Edward M | Constructive Channel Key |
JP4480756B2 (en) | 2007-12-05 | 2010-06-16 | 富士通株式会社 | Storage management device, storage system control device, storage management program, data storage system, and data storage method |
CN101470683B (en) * | 2007-12-26 | 2010-12-08 | 深圳市闪联信息技术有限公司 | Apparatus and system for copying data to multiple memory media, and copying method thereof |
JP2009205555A (en) * | 2008-02-28 | 2009-09-10 | Toshiba Corp | Memory system |
US20090222509A1 (en) * | 2008-02-29 | 2009-09-03 | Chao King | System and Method for Sharing Storage Devices over a Network |
US8156491B2 (en) | 2008-02-29 | 2012-04-10 | Red Hat, Inc. | Fault tolerant virtual machine |
US8146147B2 (en) | 2008-03-27 | 2012-03-27 | Juniper Networks, Inc. | Combined firewalls |
US8418238B2 (en) | 2008-03-30 | 2013-04-09 | Symplified, Inc. | System, method, and apparatus for managing access to resources across a network |
US8103776B2 (en) | 2008-08-29 | 2012-01-24 | Red Hat, Inc. | Systems and methods for storage allocation in provisioning of virtual machines |
US8315995B1 (en) * | 2008-09-09 | 2012-11-20 | Peer Fusion, Inc. | Hybrid storage system |
US8065714B2 (en) | 2008-09-12 | 2011-11-22 | Hytrust, Inc. | Methods and systems for securely managing virtualization platform |
US8086634B2 (en) * | 2008-10-07 | 2011-12-27 | Hitachi, Ltd. | Method and apparatus for improving file access performance of distributed storage system |
CN101408855B (en) * | 2008-11-07 | 2010-06-02 | 北京威视数据系统有限公司 | Method for protecting remote backup equipment of temporary abnormity by continuous data protective system |
WO2010090664A1 (en) | 2009-02-05 | 2010-08-12 | Wwpass Corporation | Centralized authentication system with safe private data storage and method |
JP5478107B2 (en) * | 2009-04-22 | 2014-04-23 | 株式会社日立製作所 | Management server device for managing virtual storage device and virtual storage device management method |
WO2010127365A1 (en) | 2009-05-01 | 2010-11-04 | Citrix Systems, Inc. | Systems and methods for establishing a cloud bridge between virtual storage resources |
US8429647B2 (en) | 2009-05-06 | 2013-04-23 | Vmware, Inc. | Virtual machine migration across network by publishing routes to the associated virtual networks via virtual router after the start of migration of the virtual machine |
CN101639848B (en) * | 2009-06-01 | 2011-06-01 | 北京四维图新科技股份有限公司 | Spatial data engine and method applying management spatial data thereof |
US8463885B2 (en) | 2009-08-31 | 2013-06-11 | Red Hat, Inc. | Systems and methods for generating management agent installations |
US8693485B2 (en) | 2009-10-14 | 2014-04-08 | Dell Products, Lp | Virtualization aware network switch |
US8537860B2 (en) | 2009-11-03 | 2013-09-17 | International Business Machines Corporation | Apparatus for switching traffic between virtual machines |
US8949408B2 (en) | 2009-12-18 | 2015-02-03 | Microsoft Corporation | Session monitoring of virtual desktops in a virtual machine farm |
US8429346B1 (en) * | 2009-12-28 | 2013-04-23 | Emc Corporation | Automated data relocation among storage tiers based on storage load |
US9953178B2 (en) | 2010-02-03 | 2018-04-24 | Os Nexus, Inc. | Role based access control utilizing scoped permissions |
WO2011116248A1 (en) | 2010-03-17 | 2011-09-22 | Siamak Farah | A cloud-based desktop and subscription application platform apparatuses, methods and systems |
US9443078B2 (en) | 2010-04-20 | 2016-09-13 | International Business Machines Corporation | Secure access to a virtual machine |
US8874888B1 (en) | 2011-01-13 | 2014-10-28 | Google Inc. | Managed boot in a cloud system |
US20120185688A1 (en) | 2011-01-13 | 2012-07-19 | Google Inc. | Processor mode locking |
US8745329B2 (en) | 2011-01-20 | 2014-06-03 | Google Inc. | Storing data across a plurality of storage nodes |
US8812586B1 (en) | 2011-02-15 | 2014-08-19 | Google Inc. | Correlating status information generated in a computer network |
US8261295B1 (en) | 2011-03-16 | 2012-09-04 | Google Inc. | High-level language for specifying configurations of cloud-based deployments |
US8533796B1 (en) | 2011-03-16 | 2013-09-10 | Google Inc. | Providing application programs with access to secured resources |
US9069616B2 (en) | 2011-09-23 | 2015-06-30 | Google Inc. | Bandwidth throttling of virtual disks |
US8276140B1 (en) | 2011-11-14 | 2012-09-25 | Google Inc. | Adjustable virtual network performance |
US8800009B1 (en) | 2011-12-30 | 2014-08-05 | Google Inc. | Virtual machine service access |
US8677449B1 (en) | 2012-03-19 | 2014-03-18 | Google Inc. | Exposing data to virtual machines |
US8909939B1 (en) | 2012-04-04 | 2014-12-09 | Google Inc. | Distribution of cryptographic host keys in a cloud computing environment |
US8813240B1 (en) | 2012-05-30 | 2014-08-19 | Google Inc. | Defensive techniques to increase computer security |
-
2011
- 2011-01-20 US US13/010,548 patent/US8745329B2/en active Active
-
2012
- 2012-01-19 EP EP12736911.4A patent/EP2666111B1/en active Active
- 2012-01-19 WO PCT/US2012/021846 patent/WO2012100037A1/en active Application Filing
- 2012-01-19 CN CN201710008369.0A patent/CN106909317B/en active Active
- 2012-01-19 DE DE202012013432.9U patent/DE202012013432U1/en not_active Expired - Lifetime
- 2012-01-19 AU AU2012207328A patent/AU2012207328B2/en active Active
- 2012-01-19 CN CN201280012751.4A patent/CN103597482B/en active Active
-
2014
- 2014-06-02 US US14/293,330 patent/US9250830B2/en active Active
-
2015
- 2015-12-09 AU AU2015268620A patent/AU2015268620B1/en active Active
-
2016
- 2016-01-19 US US15/000,718 patent/US20160132263A1/en not_active Abandoned
- 2016-04-14 AU AU2016202362A patent/AU2016202362B2/en active Active
Also Published As
Publication number | Publication date |
---|---|
AU2016202362B2 (en) | 2017-09-21 |
WO2012100037A1 (en) | 2012-07-26 |
EP2666111A4 (en) | 2017-12-06 |
CN106909317A (en) | 2017-06-30 |
CN103597482B (en) | 2017-02-15 |
EP2666111A1 (en) | 2013-11-27 |
AU2015268620B1 (en) | 2016-01-14 |
AU2012207328B2 (en) | 2015-09-10 |
EP2666111B1 (en) | 2019-07-31 |
US20120191912A1 (en) | 2012-07-26 |
US9250830B2 (en) | 2016-02-02 |
US8745329B2 (en) | 2014-06-03 |
US20160132263A1 (en) | 2016-05-12 |
US20140281233A1 (en) | 2014-09-18 |
AU2016202362A1 (en) | 2016-05-05 |
CN103597482A (en) | 2014-02-19 |
CN106909317B (en) | 2020-05-19 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
DE202012013432U1 (en) | Storing data on storage nodes | |
DE102012215665B4 (en) | Dynamically changing the TTL values in a data cache | |
DE60117818T2 (en) | MANAGEMENT OF THE REPLACEMENT OF DATA IN A INTERMEDIATE MEMBERS ON A NODE ON THE BASIS OF INTERMEDIATE MEMBERS OF OTHER NODES | |
DE60311116T2 (en) | METHOD, SYSTEM AND PROGRAM FOR MANAGING DATA IN DISTRIBUTED CACHE STORES | |
DE112010004931B4 (en) | Multi-phase recovery of file systems with selective data availability as required | |
DE112018000193T5 (en) | Store data sequentially in zones in a scattered storage network | |
DE102013204186B4 (en) | Determining priorities for cached objects to order the broadcast of changes to cached objects based on measured network bandwidth | |
DE112011104787B4 (en) | Use of content via personal clouds | |
DE112013001308T5 (en) | Managing tenant-specific records in a multi-tenant environment | |
DE112011100819T5 (en) | Storage space reservation in a deduplication system | |
DE112012005037T5 (en) | Manage redundant immutable files using deduplications in storage clouds | |
DE112012001302T5 (en) | Caching data in a multi-cache memory system | |
DE112010003610T5 (en) | Prefilling a cache on thread migration | |
DE112011103276T5 (en) | Pre-read processing in a client-server network architecture | |
DE202010018490U1 (en) | Architectural pattern for persistent web application design | |
DE112017006106T5 (en) | Create, access, and view lineage metadata | |
DE202020005693U1 (en) | External credential-free tiers for database integrations | |
DE202014010951U1 (en) | Distance-dependent downgrading of search rankings | |
DE202015009292U1 (en) | Generation of an activity flow | |
DE202014010885U1 (en) | Acceleration based on cached flows | |
DE112013000650T5 (en) | Data staging area | |
DE112018002955T5 (en) | COGNITIVE FILE AND OBJECT MANAGEMENT FOR DISTRIBUTED STORAGE ENVIRONMENTS | |
DE102013200030B4 (en) | HASH-BASED MANAGEMENT OF STORAGE IDS | |
DE202023101653U1 (en) | Cross-organization and cross-cloud automated data pipelines | |
DE112019000402T5 (en) | CHRONOLOGICALLY ORDERED OUT-OF-PLACE UPDATE KEY VALUE STORAGE SYSTEM |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
R207 | Utility model specification | ||
R150 | Utility model maintained after payment of first maintenance fee after three years | ||
R081 | Change of applicant/patentee |
Owner name: GOOGLE LLC (N.D.GES.D. STAATES DELAWARE), MOUN, USFree format text: FORMER OWNER: GOOGLE INC., MOUNTAIN VIEW, CALIF., US |
|
R082 | Change of representative |
Representative=s name: BETTEN & RESCH PATENT- UND RECHTSANWAELTE PART, DE |
|
R081 | Change of applicant/patentee |
Owner name: GOOGLE LLC (N.D.GES.D. STAATES DELAWARE), MOUN, USFree format text: FORMER OWNER: GOOGLE LLC (N.D.GES.D. STAATES DELAWARE), MOUNTAIN VIEW, CALIF., US |
|
R082 | Change of representative |
Representative=s name: BETTEN & RESCH PATENT- UND RECHTSANWAELTE PART, DE |
|
R151 | Utility model maintained after payment of second maintenance fee after six years | ||
R152 | Utility model maintained after payment of third maintenance fee after eight years | ||
R071 | Expiry of right |
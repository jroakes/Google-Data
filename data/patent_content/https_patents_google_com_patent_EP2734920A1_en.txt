EP2734920A1 - Distribution of multiple application versions - Google Patents
Distribution of multiple application versionsInfo
- Publication number
- EP2734920A1 EP2734920A1 EP12740847.4A EP12740847A EP2734920A1 EP 2734920 A1 EP2734920 A1 EP 2734920A1 EP 12740847 A EP12740847 A EP 12740847A EP 2734920 A1 EP2734920 A1 EP 2734920A1
- Authority
- EP
- European Patent Office
- Prior art keywords
- application
- version
- software
- versions
- user
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Granted
Links
- 238000000034 method Methods 0.000 claims abstract description 72
- 230000004044 response Effects 0.000 claims abstract description 18
- 230000007246 mechanism Effects 0.000 claims description 8
- 238000009434 installation Methods 0.000 claims description 7
- 238000012545 processing Methods 0.000 claims description 5
- 230000008520 organization Effects 0.000 claims description 2
- 230000015654 memory Effects 0.000 description 33
- 238000004891 communication Methods 0.000 description 20
- 230000008569 process Effects 0.000 description 13
- 238000010586 diagram Methods 0.000 description 10
- 238000004590 computer program Methods 0.000 description 8
- 238000013500 data storage Methods 0.000 description 6
- 230000006835 compression Effects 0.000 description 5
- 238000007906 compression Methods 0.000 description 5
- 230000008685 targeting Effects 0.000 description 5
- 238000013459 approach Methods 0.000 description 3
- 230000003287 optical effect Effects 0.000 description 3
- 230000008901 benefit Effects 0.000 description 2
- 230000001413 cellular effect Effects 0.000 description 2
- 230000006870 function Effects 0.000 description 2
- 230000003993 interaction Effects 0.000 description 2
- 239000004973 liquid crystal related substance Substances 0.000 description 2
- 239000000047 product Substances 0.000 description 2
- 241000206601 Carnobacterium mobile Species 0.000 description 1
- 238000005516 engineering process Methods 0.000 description 1
- 238000001914 filtration Methods 0.000 description 1
- 238000012986 modification Methods 0.000 description 1
- 230000004048 modification Effects 0.000 description 1
- 230000006855 networking Effects 0.000 description 1
- 238000012552 review Methods 0.000 description 1
- 230000001953 sensory effect Effects 0.000 description 1
- 239000007787 solid Substances 0.000 description 1
- 239000013589 supplement Substances 0.000 description 1
- 230000000007 visual effect Effects 0.000 description 1
- 238000012800 visualization Methods 0.000 description 1
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F8/00—Arrangements for software engineering
- G06F8/70—Software maintenance or management
- G06F8/71—Version control; Configuration management
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q30/00—Commerce
- G06Q30/06—Buying, selling or leasing transactions
- G06Q30/0601—Electronic shopping [e-shopping]
- G06Q30/0621—Item configuration or customization
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F8/00—Arrangements for software engineering
- G06F8/60—Software deployment
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q20/00—Payment architectures, schemes or protocols
- G06Q20/08—Payment architectures
- G06Q20/12—Payment architectures specially adapted for electronic shopping systems
- G06Q20/123—Shopping for digital content
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q30/00—Commerce
- G06Q30/06—Buying, selling or leasing transactions
- G06Q30/0601—Electronic shopping [e-shopping]
- G06Q30/0603—Catalogue ordering
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/34—Network arrangements or protocols for supporting network services or applications involving the movement of software or configuration parameters
Definitions
- This document generally relates to software distribution systems.
- the application marketplace may generally facilitate the transaction. For example, in the case of a free application, the application marketplace may simply provide the application for download to one or more of the user's devices. In the case of a paid application, the application
- Application marketplace may provide the application for download, and may also provide services related to collecting payment from the user and compensating the software developer.
- Application marketplaces may typically be operated by organizations that are trusted by both the software developers and the users to handle any such application transactions appropriately.
- This document describes systems and techniques that allow software developers or publishers to provide multiple versions of a particular application in a software distribution system, such as an application marketplace.
- Different versions of an application may be targeted for distribution to different devices or device types based on the capabilities of the particular device requesting the application or other attributes associated with the device.
- a standard version of an application may be targeted to basic smartphones with standard capabilities, and a large-screen version of the same application may be targeted to tablets or to smartphones with screens above a certain size.
- a basic version of an application may be targeted to a device with a particular operating system, while an advanced version of the application that takes advantage of some features of a newer operating system may be targeted to devices that have the newer operating system installed.
- the application marketplace may instead determine which of the multiple versions most appropriately matches the user's device, and only present that particular version to the user.
- a software developer may publish multiple different versions of an application on an application marketplace without worrying about users accidently choosing a version that is incompatible with or non-optimized for the users' respective devices.
- the application marketplace may be able to monitor various application metrics, such as user rankings and installation statistics, across the different versions of the application.
- the method also includes providing, for display to the user and in response to the request, information related to the particular version of the software application.
- this application describes a computer- implemented method for distributing software through an application marketplace.
- the method includes receiving, at a computer system and from an application developer, a plurality of versions of a software program.
- the method also includes associating, with the computer system, particular ones of the versions of the software program with particular computing devices, device classes, or device capabilities.
- the method also includes receiving, at the computer system and from a prospective user of the software program, a request for the software program along with information that defines capabilities of a device of the user.
- the method also includes selecting, from among the plurality of versions of the software program, a particular version that matches the defined capabilities of the device of the user, and delivering the selected version of the software program over an electronic network to the device of the user.
- this application describes a computer- implemented system for distributing software through an application marketplace.
- the system includes an application publisher computing system that receives a plurality of versions of a software program from an application publisher, and that associates particular ones of the versions of the software program with particular computing devices, device classes, or device capabilities.
- the system also includes an application marketplace computing system that receives, from a prospective user of the software program, a request for the software program along with information that defines capabilities of a device of the user.
- the application marketplace computing system also selects, from among the plurality of versions of the software program, a version that matches the defined capabilities of the device of the user, and delivers the selected version of the software program over an electronic network to the device of the user.
- FIG. 2 is a diagram of an example user interface that allows software publishers to upload multiple versions of a software application.
- Another software developer may wish to support devices with different operating frameworks (e.g., operating systems or application programming interfaces (APIs)), and may want to provide features that are specific to the particular framework of the device.
- the software developer may choose to publish different versions of the application, and may rely on the application marketplace to distribute the appropriate version to the particular device for which the application is requested.
- the application marketplace may identify the appropriate version of the application for a device by determining certain attributes associated with the device.
- the application may identify the appropriate version of the application for a device by determining certain attributes associated with the device.
- such functionality may be transparent to the user in that the user need not be aware of the different versions of the application. Instead, in such implementations, the application marketplace may only show the user the version of the application that is targeted to the user's particular device. In this manner, the application marketplace may prevent user confusion that may otherwise occur if the user is presented with multiple different choices for download.
- FIG. 1 A is a conceptual diagram showing an example of an environment 100 for publishing and distributing software applications.
- a software publisher using a computing device 102 may interact with a publisher system 104 to upload and/or publish multiple versions of an application, as shown by the arrow labeled A.
- the software publisher may also use publisher system 104 to define particular devices, device types, or device groups to which particular versions of the application are to be targeted. For example, the software publisher may specify that one version of an application should be provided to mobile computing devices that have a camera, while another version of the same application should be provided to mobile computing devices without a camera (e.g., a less complicated version that does not include picture- taking capabilities).
- the application publisher system 104 may automatically target the application version to devices that have an OS of 2.0 or above.
- Another version of the application may include a manifest that declares compatibility with OS 1 .6 through 1 .8, and the application publisher system 104 may therefore target the application version to devices having an OS of 1 .6 through 1 .8.
- the application publisher system 104 may provide a user interface that allows the software publisher to define device groups using various device attributes.
- the device groups may each correspond to a different version of the software application.
- the software publisher may choose one or more device attributes on which to distinguish the various device groups, and may provide values or ranges of values for each of the device attributes to define the device groups.
- the software publisher may define any appropriate number of device groups, each of which may be associated with one particular version of the application, to control the distribution of the respective application versions to appropriate devices for which the application version is targeted. By defining the device groups using multiple different device attribute combinations, the software publisher may be able to specify distribution of its application versions using any appropriate level of granularity.
- the publisher system 104 may initially set up the device groups automatically using information from the manifest included with the application binaries, and may then allow the software publisher to adjust or tweak the device groups as appropriate.
- Communication between computing device 102 and publisher system 104 may occur over any appropriate network (e.g., Internet, LAN, WAN, wireless broadband, or any combination thereof).
- Computing device 102 is depicted as a desktop computer, but other types of computing devices (e.g., laptop computers, netbooks, tablets, smartphones, set-top boxes, and the like) may also communicate with publisher system 104.
- publisher system 104 is depicted as a stand-alone server, but publisher system 104 may represent a cluster of servers, a server farm, or other groupings of servers that can be used to host the functionality of publisher system 104.
- publisher system 104 may be operated by a trusted organization that provides the publishing services described here.
- publisher system 104 may write certain information about the application to one or more data structures in application data storage 106, as shown by the arrow labeled B.
- the data structures may generally be used to describe the application, and may also be used to describe the various published and/or unpublished versions of the application.
- the data structures may include such information as versioning information that describes the various versions of the application, device group information that describes the devices or device types to which the versions are targeted, and other appropriate metadata associated with the application generally or with specific versions of the application (e.g., pricing information, a textual description, screen shots, icons, an account for receiving payments from users who download the application, etc.).
- the application market system 108 may respond differently, such as by identifying a different version of the application that is targeted to tablets running OS 3.0 or higher, and providing the different version for download by the tablet computing device.
- the application market system 108 may receive requests from devices that are different from the ones that will be installing and executing the application.
- the application market system 108 may provide a web-based frontend that allows users to browse and search the application market, e.g., using a desktop computer, for the purposes of finding applications they wish to install on one or more of their mobile devices.
- the device for which the application is intended may be unknown at the time the user submits the request.
- the user may be browsing the frontend anonymously, or may be logged in, but have multiple computing devices associated with the user's account.
- the system may provide general information about the application to the user. For example, the system 108 may display summary information that is representative of all versions of the software application (e.g., pricing that is the same across all versions, screen shots that are representative of all versions, etc.). The system 108 may also indicate that specific details about the application may vary based on the version of the application that is appropriate for the intended device.
- summary information that is representative of all versions of the software application (e.g., pricing that is the same across all versions, screen shots that are representative of all versions, etc.).
- the system 108 may also indicate that specific details about the application may vary based on the version of the application that is appropriate for the intended device.
- the application market system 108 may proceed as previously described.
- the application market system 108 may determine one or more device attributes that are associated with the intended device, and may identify the particular version of the application that is appropriate for that device.
- the application market system 108 may then provide information about the particular version to the intended device, and may facilitate the download of the particular version to the intended device.
- a logged in user may be able to initiate an install to a different device via the web-based frontend, where the appropriate version of the application is delivered to the intended device, e.g., by way of a push notification or other appropriate mechanism.
- the application market system 108 may store various metric values associated with applications that are published on the system.
- the application market system 108 may store installation metric values, rankings metric values, and other appropriate metric values associated with the various applications that are distributed by the system.
- Such metric values may be stored in application data storage 106 in association with the particular application to which the metric values apply.
- the metric values associated with different versions of an application may be aggregated across the multiple versions. For example, if ten thousand copies of version 1 .2 have been downloaded and installed on computing devices, and twenty thousand copies of version 1 .4 have been installed, the installation metric value provided by application market system 108 may reflect that the total installation base of the application is thirty thousand devices.
- ranking information for a particular application may be aggregated across multiple versions of the application such that an overall ranking score, which takes into account the rankings received for each of the separate versions, may be monitored and stored.
- application publisher system 104 application data storage 106
- application market system 108 application market system 108
- functionality provided by the systems shown in environment 100 may be provided by fewer devices or systems (e.g., combining multiple devices or systems into a single device or system), may be distributed amongst additional devices or system, or may be provided by different devices or systems than those shown.
- Application publisher system 104 may include an interface 120, a request processor 122, a device group manager 124, a dimension information database 126, a binary parser 128, and a response formatter 130.
- Interface 120 may provide software publishers with access to the publisher system 104, and may provide appropriate user interfaces, such as those described in greater detail below in association with FIGs. 2 and 3. Requests from and responses to the software publishers may be handled by the request processor 122 and the response formatter 130, respectively.
- the device group manager 124 may control the targeting of various application versions toward specific devices, device types, or groups of devices.
- the device group manager 124 may allow software publishers to create and/or modify device groups, each of which may correspond to a different version of a particular application.
- the device groups may be defined using any appropriate number of
- dimensions which may generally correspond to the capabilities or attributes of a device or device type.
- the various dimensions may be stored and/or updated in dimension information database 126.
- the publisher system 104 may allow software publishers to define device groups using three dimensions, including an installed device framework, a display screen size, and a graphics processing capability. Other and/or additional dimensions may also be used in the system, including for example, dimensions related to an OpenGL ES version, the native platform of a computing device (e.g., ARM EABI v7, INTEL, etc.), various device hardware or software features (e.g., camera, Bluetooth, Wi-Fi, telephony, etc.), the device's carrier, and/or its location.
- a computing device e.g., ARM EABI v7, INTEL, etc.
- various device hardware or software features e.g., camera, Bluetooth, Wi-Fi, telephony, etc.
- Software publishers may choose to utilize one or more of the available dimensions when defining a particular device group using the publisher system 104.
- a software publisher may have different versions of an application that are all related to different device frameworks (e.g., one version for OS version 1 .6 to 1 .8, a second version for OS version 2.0 to 2.2, and a third version for OS version 3.0 and above).
- the software publisher may define three different device groups that are only distinguished by the device framework dimension.
- the software publisher may choose to further refine the device groups using additional and/or different dimensions.
- the publisher system 104 may, in various implementations, be configured to provide as many or as few dimensions as are appropriate for the particular implementation being provided.
- the binary parser 128 may parse application binaries that have been uploaded by a software publisher to the system. Parser 128 may, for example, be used to separate application data from metadata that describes the application. For example, in some implementations, the binary parser 128 may be used to extract a manifest file that is embedded in the application binary. In some cases, information in the manifest file (or other appropriate information associated with the binary) may be used to automatically specify a device or type of device to which the application binary is targeted.
- the device identifier module 136 may be used to identify particular devices that are associated with a given request. For example, for requests that are provided through an application market client executing on a particular device, the request may include a unique device identifier or other information that is specific to an individual device. The device identifier module 136 may use the device identifier information in the request to query the user and/or device information database 138 to determine certain attributes associated with the requesting device. These attributes may then be passed to the application manager 140 for use in determining which version of a requested application should be provided to the requesting device. In some implementations, the request itself may include device attribute information that may be used to identify an appropriate version of the application for the requesting device.
- the device identifier module 136 may use login information, or other user- provided information, to determine the particular device that is associated with the request. For example, if the user is logged in to the system, device identifier module 136 may query the user and/or device information database 138 to determine one or more devices that are associated with the logged in user. If the user only has one associated device, or if the user has specified a particular device with which the request is associated (e.g., by selecting a device for which a requested application is intended), the device identifier module 136 may determine the attributes associated with the user's device, which may then be provided to the application manager 140 as described above.
- login information or other user- provided information
- requests that are provided through the web- based frontend are received from anonymous users, or from users who are logged in, but who are associated with multiple devices.
- the device for which the application is intended may be unknown at the time the user submits the request.
- the system may provide general information about the application to the user. For example, the system 108 may display summary information that is representative of all versions of the software application (e.g., pricing that is the same across all versions, screen shots that are representative of all versions, etc.).
- the system 108 may also indicate that certain details about the application may vary based on the version of the application that is appropriate for the intended device, e.g., by displaying a "varies by device" message.
- the application market system 108 is able to ascertain the intended device for the application, e.g., if the user indicates a particular device on which the application will be installed, the system 108 may proceed as previously described to determine the attributes associated with the user's device, and to provide the attributes to the application manager 140 for further processing.
- Application manager 140 may be used to determine an appropriate version of a requested application to provide to a requesting device.
- application manager 140 may compare the device attributes associated with a requesting device to the specifications of the different available application versions to determine whether any of the versions are targeted to the requesting device. If so, then the application market system 108 may provide the particular version of the application to the requesting device, such as by displaying information about the particular version in response to the request. In some cases, the response may include a mechanism, e.g., a link, that causes the application to be downloaded to the requesting device. In cases where the application manager 140 determines that none of the versions of the application are targeted to a particular requesting device, the application manager 140 may return a null result, and the application market system 108 may provide a response that the application is not available for the requesting device.
- the application manager 140 may return a null result, and the application market system 108 may provide a response that the application is not available for the requesting device.
- the application manager 140 may provide the application version with the highest version code, from among the device groups that match the device attributes, to the requesting device.
- additional or alternative tie-breaking rules may be applied in such situations (e.g., the most recently updated application version may be provided to the requesting device, or an application version associated with a preferred device group may be provided, or the most specific or most restricted application version may be provided).
- the application manager 140 may determine an appropriate version of a requested application to provide to a requesting device using a predetermined procedure.
- the predetermined procedure may first order the device groups in reverse order of the published application version codes. Then, the device attributes may be matched against each of the corresponding device group attributes until a matching device group is identified.
- the application version associated with the device group may further be evaluated to determine whether the application version is compatible for use on the device (e.g., in cases where the application has restrictions other than those used for defining the dimensions of the device group). If an appropriate application version is identified for the device, then it is provided to the requesting device. Otherwise, the system may respond that the application is not available for the requesting device.
- FIG. 2 is a diagram of an example user interface 202 that allows software publishers to upload multiple versions of a software application.
- User interface 202 may provide a number of different controls and inputs to allow a software publisher to associate the application versions that are uploaded with a particular device group.
- user interface 202 is shown as including a specific configuration of text boxes 204, 210, buttons 206, 208, and 214, and a drop-down box 212, it should be understood that other configurations and/or input mechanisms may also be provided.
- a software publisher may specify the path of an application binary in text box 204.
- the application binary may correspond to one of the versions of the software application.
- user interface 202 may also include a browse button 206 that allows the software publisher to browse the file system of the local computing device, or of other accessible computing devices. After the path to the application binary has been entered, the software publisher may click the upload button 208 to upload the binary to the publisher system.
- User interface 202 may also include a text box 210 that allows the software publisher to describe recent changes that have been made to the application version. For example, in cases where the application version that is to be uploaded is an update to a previous application version, the software publisher may enter text in the form of release notes that may be presented to users when they are presented with the update. Such information may be helpful to the user in deciding whether or not to install the update on his or her computing device, and to potentially alert the user to new features that may have been added to the application since the last update.
- the drop-down box 212 may provide a suggested device group that has been preselected from the defined device groups, e.g., based on information that has been parsed from a manifest file associated with the application binary.
- the software publisher may accept the suggested device group for the application version, or may be allowed to choose a different device group available in the drop-down box.
- FIG. 3 is a diagram of an example user interface 302 that allows software publishers to describe and modify device groups to which different versions of a software application are targeted.
- User interface 302 like user interface 202, may provide a number of different controls and inputs to allow a software publisher to specify how different versions of a software application are handled.
- user interface 302 is shown as including a specific configuration of tabs 304, buttons 314, 316, and 318, sliders, and a drop-down box 312, it should be understood that other configurations and/or input mechanisms may also be provided.
- user interface 302 may provide software publishers with control over how versions of their applications are targeted to particular device groups, and may provide a visualization of which devices will receive a particular application version.
- User interface 302 may present a tabbed interface, which as illustrated, includes a Product Details tab, a Device Groups tab 304, and an APKs tab.
- the Device Groups tab 304 is active.
- the Product Details tab may allow software publishers to specify various information about the application in general, such as a description of the application, screen shots of the application, and the like. Such information may be applicable to all of the different versions of the application.
- the Device Groups tab 304 as described in greater detail below, may allow software publishers to create and/or modify the device groups that may be used to associate specific application versions with particular devices or device types for which the particular application version is targeted.
- the APKs tab may allow software publishers to manage the binaries that have already been uploaded for a particular application, or to upload additional binaries associated with the application. It should be understood that, although this document discusses application binaries in the form of APK files, other types of application binaries may also be processed according to the techniques described here.
- GL_ATI_texture_compression_atitc OpenGL texture compression format.
- Application version 1 .3 is associated with device group 308, which is labeled "High End Phones,” and is targeted to devices with OS 1 .8 through 2.1 and small through large screen sizes.
- device group 308 is compatible with any OpenGL texture compression format.
- Device group 310 is labeled “Tablets,” and is targeted to devices with OS 3.0 having an extra-large screen size.
- the device groups may include any appropriate number of device attributes or dimensions that may be used to target specific versions of an application for specific devices.
- the device groups may allow software publishers to specify a particular operating system or other operational framework associated with the device, and/or a particular screen size associated with the device, and/or particular graphics capabilities associated with the device, e.g., OpenGL texture compression formats that are compatible with the device.
- Other attributes or dimensions that may be used in accordance with the techniques described here may include, for example, an OpenGL ES version, a native device platform (e.g., ARM EABI v7, INTEL, etc.), or certain device features or device capabilities (e.g., camera, Bluetooth, telephony, GPS, motion sensors, etc.).
- additional dimensions such as the device's carrier and/or location may also be used in accordance with the techniques described here.
- These and other appropriate attributes or dimensions may be further segmented (e.g., by specifying a front-facing versus a rear-facing camera) in an appropriate manner to allow for as much or as little device granularity as may be appropriate for a particular implementation.
- additional granularity may provide software publishers with greater control over how the different versions of an application are distributed, while less granularity may provide for a less complicated interface for software publishers.
- the system may allow the software publishers to define the level of granularity that they wish to utilize in targeting their application versions to specific device groups.
- the device group attributes may be described in terms of a specific value, a set of specific values, or a range of values.
- the OpenGL texture compression format for device group 306 is defined using the specific value
- the OS versions that are targeted by device group 308 includes a range from OS 1 .8 up to OS 2.1 .
- a device having a device attribute that falls anywhere within the range may be considered to fit within the device group.
- a device group attribute is described using a set of specific values, a device that has a device attribute that matches any of the specific values may be considered to match the particular device group attribute.
- the publisher system may allow device groups to describe overlapping device group attributes. For example, as shown in user interface 302, small and normal screen sizes are specified in device groups 306 and 308, and device group 308 additionally specifies large screen sizes.
- the system may utilize appropriate rules to determine which application versions should be provided to a user. Continuing with the example above, one approach may be to provide the application version with the highest version code to the user. In some implementations, such an overlap may cause the system to provide a warning to the software publisher to ensure that he or she is aware of the overlap before confirming the device group configuration.
- User interface 302 may be programmed to identify errors when a software publisher chooses device group settings that are not permitted by the system. For example, in some implementations, a software publisher may define two device groups such that one of the two is completely subsumed by the other, and where the application version associated with one of the device groups would never be provided to users. If this functionality is impermissible under the publication rules provided by the system, then the system may generate an error. Such errors may be raised to the software publisher using familiar techniques, such as by displaying a visible error message that describes the error, by playing an audible alert, or the like. In some implementations, if an error is raised during publication, the software publisher may not be allowed to continue with the publication process before fixing the cause of the error.
- User interface 302 may also be programmed to identify warnings when a software publisher chooses device group settings that, while they may not rise to the level of being impermissible, may create some ambiguity regarding how the application versions are to be handled. For example, in some implementations, a warning may be generated when two application versions partially overlap in one or more dimensions. In such cases, the system may provide a default set of rules that handle the overlapping dimensions according to a predefined procedure, e.g., by providing the version with the higher version code to the device. As another example, a warning may be generated when a software publisher changes a device group such that devices that were previously provided access to a version of the application are no longer associated with any versions of the application. In such an example, a user may not be provided with any updates to the application since none of the device groups are targeted to the user's device.
- the definitions that are used to describe the various device groups may be generated using information associated with the application version itself.
- a binary that corresponds to a particular application version may include embedded information, such as in an application manifest, that is used to describe particular device attributes that are compatible with the application version.
- an application manifest may declare that the binary is only compatible with OS 2.0 or above.
- the publisher system may automatically create a device group that corresponds to the compatibility of the binary, namely by creating a device group that targets devices having OS 2.0 or above.
- a combination of the user interface 302 and automatic application version targeting may be utilized. For example, as an initial approach, the publisher system may utilize
- a software publisher may be able to adjust the device group by way of user interface 302, e.g., by expanding or contracting the range of one or more particular device group attributes. For example, continuing with the example above, the software publisher may decide that, although the application version is compatible with OS 2.0 and above, a different application version may be better targeted to OS 2.2 and above, and the publisher may therefore decide to tweak the device group for the present application version to devices having OS 2.0 or OS 2.1 , thus contracting the original target group of devices.
- FIG. 4 is a swim-lane diagram of an example process 400 for publishing and distributing software applications that have multiple versions.
- Process 400 may be implemented, for example, by the publisher system 104 and application market system 108 of FIGs. 1A and 1 B.
- the description that follows uses these systems as the basis for describing process 400. However, other systems, or combination of systems, may also or alternatively be used to perform the process.
- Process 400 begins when a software developer writes a software application for publication on an application market system.
- the software developer develops multiple different versions of the application for publication on the application market system (402).
- the software developer is described as being the same entity as the software publisher in process 400, but in some cases, a different entity may be responsible for publishing software applications that another entity has developed.
- the software publisher may then upload the various versions to the publisher system (404).
- the software publisher may upload all of the different versions of the application at the same time, or may choose to upload the different versions over time. Regardless of when the versions are uploaded, the publisher system may parse the binaries that correspond to each of the application versions as they are uploaded to the system (406). Such parsing may allow the publisher system to extract certain metadata related to the application version, which may then be used to create a device group for each respective binary (408).
- the publisher may request publication of the binaries (412).
- the publisher system may publish the version binaries on the application market system (414), e.g., by updating a database used by the application market system, and the application market system may provide the appropriate version binaries (416) to users accessing the market according to the techniques described here.
- the user access portion of process 400 begins when a user requests a particular application from the application market (420).
- the request may be made through any appropriate interface.
- the user's device may include a client marketplace application that
- the application market system communicates with the application market system to provide access to the applications provided by the market system.
- the user may access a web-based frontend to the application market system to request an application. Requests for applications may be provided in different forms. For example, a user may be able to browse through the various applications hosted by the application market, or may search for applications using conventional searching tools.
- the application market system may determine one or more device attributes associated with the user's computing device (422). For example, if the user accesses the application market from a computing device by way of a client marketplace application executing on the computing device, the request may include device information (e.g., a device identifier) that allows the application market system to determine various device attributes associated with the device. In some implementations, the application market system may determine the device attributes based on the device identifier included with the request (e.g., by looking up attributes of a registered device using the device identifier sent with the request). In other implementations, the request itself may include certain device attributes that may be utilized by the application market system as described below.
- device information e.g., a device identifier
- the application market system may determine the device attributes based on the device identifier included with the request (e.g., by looking up attributes of a registered device using the device identifier sent with the request).
- the request itself may include certain device attributes that may be utilized by the application market system as described
- the application market system may then identify a particular version of the software application, from among the multiple versions that had previously been uploaded by the software publisher as described above, that is targeted for the user's device (424). For example, the application market system may use the device attributes that were determined to identify a particular application version that is targeted to devices having those device attributes. After identifying the appropriate application version for the device, the application market system may provide information about the application version to the user (426). For example, the application market system may provide certain information related to the specific version of the application, e.g., for display to the user. The information may include, for example, file size, pricing, and other information related to the application generally, or to the specific version of the application that is targeted to the user's device. In addition, the information may include a mechanism (e.g., a button or a link) that allows the user to download the identified application version.
- a mechanism e.g., a button or a link
- the user may then review the version information (428), and may request to download the application version (430), e.g., using the mechanism that is provided by the application market system.
- the application market system may facilitate the download (432), e.g., by collecting payment information for a paid application, and authorizing the download for the user.
- Computing device 500 includes a processor 502, memory 504, a storage device 506, a high-speed interface 508 connecting to memory 504 and high-speed expansion ports 510, and a low speed interface 512 connecting to low speed bus 514 and storage device 506.
- Each of the components 502, 504, 506, 508, 510, and 512 are interconnected using various busses, and may be mounted on a common motherboard or in other manners as appropriate.
- the processor 502 can process instructions for execution within the computing device 500, including instructions stored in the memory 504 or on the storage device 506 to display graphical information for a GUI on an external input/output device, such as display 516 coupled to high speed interface 508.
- the memory 504 stores information within the computing device 500.
- the memory 504 is a volatile memory unit or units.
- the memory 504 is a non-volatile memory unit or units.
- the memory 504 may also be another form of computer- readable medium, such as a magnetic or optical disk.
- the storage device 506 is capable of providing mass storage for the computing device 500.
- the storage device 506 may be or contain a computer-readable medium, such as a floppy disk device, a hard disk device, an optical disk device, a tape device, a flash memory or other similar solid state memory device, or an array of devices, including devices in a storage area network or other configurations.
- a computer program product can be tangibly embodied in an information carrier.
- the computer program product may also contain instructions that, when executed, perform one or more methods, such as those described above.
- the information carrier is a computer- or machine-readable medium, such as the memory 504, the storage device 506, or memory on processor 502.
- the high-speed controller 508 manages bandwidth-intensive operations for the computing device 500, while the low speed controller 512 manages lower bandwidth-intensive operations. Such allocation of functions is exemplary only.
- the high-speed controller 508 is coupled to memory 504, display 516 (e.g., through a graphics processor or accelerator), and to high-speed expansion ports 510, which may accept various expansion cards (not shown).
- display 516 e.g., through a graphics processor or accelerator
- high-speed expansion ports 510 which may accept various expansion cards (not shown).
- low-speed controller 512 is coupled to storage device 506 and low-speed expansion port 514.
- the low-speed expansion port which may include various communication ports (e.g., USB, Bluetooth, Ethernet, wireless Ethernet), may be coupled to one or more input/output devices, such as a keyboard, a pointing device, a scanner, or a networking device such as a switch or router, e.g., through a network adapter.
- the computing device 500 may be implemented in a number of different forms, as shown in the figure. For example, it may be
- computing device 500 may be combined with other components in a mobile device (not shown), such as device 550.
- mobile device not shown
- Each of such devices may contain one or more of computing device 500, 550, and an entire system may be made up of multiple computing devices 500, 550 communicating with each other.
- Computing device 550 includes a processor 552, memory 564, an input/output device such as a display 554, a communication interface 566, and a transceiver 568, among other components.
- the device 550 may also be provided with a storage device, such as a microdrive or other device, to provide additional storage.
- a storage device such as a microdrive or other device, to provide additional storage.
- Each of the components 550, 552, 564, 554, 566, and 568, are interconnected using various busses, and several of the components may be mounted on a common motherboard or in other manners as appropriate.
- the processor 552 can execute instructions within the computing device 550, including instructions stored in the memory 564.
- the processor may be implemented as a chipset of chips that include separate and multiple analog and digital processors.
- the processor may provide, for example, for coordination of the other components of the device 550, such as control of user interfaces, applications run by device 550, and wireless communication by device 550.
- Processor 552 may communicate with a user through control interface 558 and display interface 556 coupled to a display 554.
- the display 554 may be, for example, a TFT LCD (Thin-Film-Transistor Liquid Crystal Display) or an OLED (Organic Light Emitting Diode) display, or other appropriate display technology.
- the display interface 556 may comprise appropriate circuitry for driving the display 554 to present graphical and other information to a user.
- the control interface 558 may receive commands from a user and convert them for submission to the processor 552.
- an external interface 562 may be provided in communication with processor 552, so as to enable near area
- External interface 562 may provide, for example, for wired communication in some embodiments.
- the memory 564 stores information within the computing device 550.
- the memory 564 can be implemented as one or more of a computer- readable medium or media, a volatile memory unit or units, or a non-volatile memory unit or units.
- Expansion memory 574 may also be provided and connected to device 550 through expansion interface 572, which may include, for example, a SIMM (Single In Line Memory Module) card interface.
- SIMM Single In Line Memory Module
- expansion memory 574 may provide extra storage space for device 550, or may also store applications or other information for device 550.
- expansion memory 574 may include instructions to carry out or supplement the processes described above, and may include secure information also.
- expansion memory 574 may be provide as a security module for device 550, and may be programmed with instructions that permit secure use of device 550.
- secure applications may be provided via the SIMM cards, along with additional information, such as placing identifying information on the SIMM card in a non-hackable manner.
- the memory may include, for example, flash memory and/or NVRAM memory, as discussed below.
- a computer program product is tangibly embodied in an information carrier.
- the computer program product contains instructions that, when executed, perform one or more methods, such as those described above.
- the information carrier is a computer- or machine-readable medium, such as the memory 564, expansion memory 574, or memory on processor 552.
- Device 550 may communicate wirelessly through
- Communication interface 566 may include digital signal processing circuitry where necessary. Communication interface 566 may provide for communications under various modes or protocols, such as GSM voice calls, SMS, EMS, or MMS messaging, CDMA, TDMA, PDC, WCDMA, CDMA2000, or GPRS, among others. Such communication may occur, for example, through radio-frequency transceiver 568. In addition, short-range communication may occur, such as using a Bluetooth, Wi-Fi, or other such transceiver (not shown). In addition, GPS (Global Positioning System) receiver module 570 may provide additional navigation- and location- related wireless data to device 550, which may be used as appropriate by applications running on device 550.
- GPS Global Positioning System
- Device 550 may also communicate audibly using audio codec 560, which may receive spoken information from a user and convert it to usable digital information. Audio codec 560 may likewise generate audible sound for a user, such as through a speaker, e.g., in a handset of device 550. Such sound may include sound from voice telephone calls, may include recorded sound (e.g., voice messages, music files, etc.) and may also include sound generated by applications operating on device 550.
- Audio codec 560 may receive spoken information from a user and convert it to usable digital information. Audio codec 560 may likewise generate audible sound for a user, such as through a speaker, e.g., in a handset of device 550. Such sound may include sound from voice telephone calls, may include recorded sound (e.g., voice messages, music files, etc.) and may also include sound generated by applications operating on device 550.
- the computing device 550 may be implemented in a number of different forms, as shown in the figure. For example, it may be
- cellular telephone 580 implemented as a cellular telephone 580. It may also be implemented as part of a smartphone 582, personal digital assistant, or other similar mobile device.
- USB flash drives may store operating systems and other applications.
- the USB flash drives can include input/output components, such as a wireless transmitter or USB connector that may be inserted into a USB port of another computing device.
- Various implementations of the systems and techniques described here can be realized in digital electronic circuitry, integrated circuitry, specially designed ASICs (application specific integrated circuits), computer hardware, firmware, software, and/or combinations thereof.
- ASICs application specific integrated circuits
- These various implementations can include implementation in one or more computer programs that are executable and/or interpretable on a programmable system including at least one programmable processor, which may be special or general purpose, coupled to receive data and instructions from, and to transmit data and instructions to, a storage system, at least one input device, and at least one output device.
- the systems and techniques described here can be implemented on a computer having a display device (e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor) for displaying information to the user and a keyboard and a pointing device (e.g., a mouse or a trackball) by which the user can provide input to the computer.
- a display device e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor
- a keyboard and a pointing device e.g., a mouse or a trackball
- Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback (e.g., visual feedback, auditory feedback, or tactile feedback); and input from the user can be received in any form, including acoustic, speech, or tactile input.
- a computing system that includes a back end component (e.g., as a data server), or that includes a middleware component (e.g., an application server), or that includes a front end component (e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the systems and techniques described here), or any combination of such back end, middleware, or front end components.
- the components of the system can be interconnected by any form or medium of digital data communication (e.g., a communication network). Examples of communication networks include a local area network ("LAN”), a wide area network (“WAN”), and the Internet.
- LAN local area network
- WAN wide area network
- the Internet the global information network
- the computing system can include clients and servers.
- a client and server are generally remote from each other and typically interact through a communication network.
- the relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.
Abstract
Description
Claims
Priority Applications (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
EP17194428.3A EP3293630B1 (en) | 2011-07-20 | 2012-07-20 | Distribution of multiple application versions |
EP21171033.0A EP3907604A1 (en) | 2011-07-20 | 2012-07-20 | Distribution of multiple application versions |
EP20210736.3A EP3809258A1 (en) | 2011-07-20 | 2012-07-20 | Distribution of multiple application versions |
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/187,198 US8707289B2 (en) | 2011-07-20 | 2011-07-20 | Multiple application versions |
PCT/US2012/047639 WO2013013166A1 (en) | 2011-07-20 | 2012-07-20 | Distribution of multiple application versions |
Related Child Applications (4)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
EP17194428.3A Division-Into EP3293630B1 (en) | 2011-07-20 | 2012-07-20 | Distribution of multiple application versions |
EP17194428.3A Division EP3293630B1 (en) | 2011-07-20 | 2012-07-20 | Distribution of multiple application versions |
EP20210736.3A Division EP3809258A1 (en) | 2011-07-20 | 2012-07-20 | Distribution of multiple application versions |
EP21171033.0A Division EP3907604A1 (en) | 2011-07-20 | 2012-07-20 | Distribution of multiple application versions |
Publications (3)
Publication Number | Publication Date |
---|---|
EP2734920A1 true EP2734920A1 (en) | 2014-05-28 |
EP2734920B1 EP2734920B1 (en) | 2017-10-04 |
EP2734920B8 EP2734920B8 (en) | 2017-12-13 |
Family
ID=46584411
Family Applications (4)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
EP12740847.4A Active EP2734920B8 (en) | 2011-07-20 | 2012-07-20 | Distribution of multiple application versions |
EP20210736.3A Pending EP3809258A1 (en) | 2011-07-20 | 2012-07-20 | Distribution of multiple application versions |
EP17194428.3A Active EP3293630B1 (en) | 2011-07-20 | 2012-07-20 | Distribution of multiple application versions |
EP21171033.0A Pending EP3907604A1 (en) | 2011-07-20 | 2012-07-20 | Distribution of multiple application versions |
Family Applications After (3)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
EP20210736.3A Pending EP3809258A1 (en) | 2011-07-20 | 2012-07-20 | Distribution of multiple application versions |
EP17194428.3A Active EP3293630B1 (en) | 2011-07-20 | 2012-07-20 | Distribution of multiple application versions |
EP21171033.0A Pending EP3907604A1 (en) | 2011-07-20 | 2012-07-20 | Distribution of multiple application versions |
Country Status (5)
Country | Link |
---|---|
US (6) | US8707289B2 (en) |
EP (4) | EP2734920B8 (en) |
KR (3) | KR102111080B1 (en) |
CN (2) | CN103890723A (en) |
WO (1) | WO2013013166A1 (en) |
Families Citing this family (98)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8756488B2 (en) | 2010-06-18 | 2014-06-17 | Sweetlabs, Inc. | Systems and methods for integration of an application runtime environment into a user computing environment |
JP2012085176A (en) * | 2010-10-13 | 2012-04-26 | Konica Minolta Business Technologies Inc | Image forming apparatus, information apparatus and computer program |
US8707289B2 (en) | 2011-07-20 | 2014-04-22 | Google Inc. | Multiple application versions |
US9646292B2 (en) * | 2011-08-24 | 2017-05-09 | Follett Corporation | Method and system for distributing digital media content |
US20130081007A1 (en) * | 2011-09-27 | 2013-03-28 | International Business Machines Corporation | Providing continuous application availability during application update |
US10147123B2 (en) | 2011-09-29 | 2018-12-04 | Amazon Technologies, Inc. | Electronic marketplace for hosted service images |
US8776043B1 (en) * | 2011-09-29 | 2014-07-08 | Amazon Technologies, Inc. | Service image notifications |
US9530156B2 (en) | 2011-09-29 | 2016-12-27 | Amazon Technologies, Inc. | Customizable uniform control user interface for hosted service images |
US9626700B1 (en) | 2011-09-29 | 2017-04-18 | Amazon Technologies, Inc. | Aggregation of operational data for merchandizing of network accessible services |
US10148762B2 (en) * | 2011-10-18 | 2018-12-04 | Facebook, Inc. | Platform-specific notification delivery channel |
US20130232229A1 (en) * | 2012-03-02 | 2013-09-05 | Ilya Firman | Distribution of Application Files |
US8973090B1 (en) * | 2012-03-14 | 2015-03-03 | Symantec Corporation | Systems and methods for protecting platform-as-a-service platforms |
US9096347B2 (en) | 2012-03-20 | 2015-08-04 | Berry Plastics Corporation | Stand-up Package |
US9239817B2 (en) * | 2012-04-19 | 2016-01-19 | Microsoft Technology Licensing, Llc | Managing web extension through manifest file |
WO2013175560A1 (en) * | 2012-05-21 | 2013-11-28 | 株式会社日立製作所 | Information communicating system and information converting method |
US9710247B2 (en) * | 2012-06-26 | 2017-07-18 | Microsoft Technology Licensing, Llc | Identification of host-compatible downloadable applications |
US9189220B2 (en) * | 2012-07-02 | 2015-11-17 | Amazon Technologies, Inc. | Evaluating application compatibility |
CN107479911B (en) * | 2012-07-27 | 2021-07-16 | 华为终端有限公司 | Method for downloading application program, user equipment and application server |
JP2014063450A (en) * | 2012-08-27 | 2014-04-10 | Sony Corp | Mobile terminal, information processing apparatus, and information processing method |
US8938726B2 (en) * | 2012-08-28 | 2015-01-20 | Sap Ag | Integrating native application into web portal |
US8775925B2 (en) | 2012-08-28 | 2014-07-08 | Sweetlabs, Inc. | Systems and methods for hosted applications |
US9146720B1 (en) * | 2012-09-14 | 2015-09-29 | Amazon Technologies, Inc. | Binary file application processing |
US9229632B2 (en) | 2012-10-29 | 2016-01-05 | Facebook, Inc. | Animation sequence associated with image |
US9235321B2 (en) | 2012-11-14 | 2016-01-12 | Facebook, Inc. | Animation sequence associated with content item |
US9507757B2 (en) * | 2012-11-14 | 2016-11-29 | Facebook, Inc. | Generating multiple versions of a content item for multiple platforms |
US9606695B2 (en) | 2012-11-14 | 2017-03-28 | Facebook, Inc. | Event notification |
US9547627B2 (en) | 2012-11-14 | 2017-01-17 | Facebook, Inc. | Comment presentation |
US9684935B2 (en) | 2012-11-14 | 2017-06-20 | Facebook, Inc. | Content composer for third-party applications |
US9081410B2 (en) | 2012-11-14 | 2015-07-14 | Facebook, Inc. | Loading content on electronic device |
US9696898B2 (en) | 2012-11-14 | 2017-07-04 | Facebook, Inc. | Scrolling through a series of content items |
US9218188B2 (en) | 2012-11-14 | 2015-12-22 | Facebook, Inc. | Animation sequence associated with feedback user-interface element |
US9607289B2 (en) | 2012-11-14 | 2017-03-28 | Facebook, Inc. | Content type filter |
US9547416B2 (en) | 2012-11-14 | 2017-01-17 | Facebook, Inc. | Image presentation |
US9245312B2 (en) | 2012-11-14 | 2016-01-26 | Facebook, Inc. | Image panning and zooming effect |
US9507483B2 (en) | 2012-11-14 | 2016-11-29 | Facebook, Inc. | Photographs with location or time information |
US10530853B2 (en) * | 2012-12-12 | 2020-01-07 | Futurewei Technologies, Inc. | Multi-screen application enabling and distribution service |
US9877082B2 (en) * | 2013-03-15 | 2018-01-23 | Echostar Technologies Llc | Addressable realtime messaging for television receivers |
US20140289158A1 (en) * | 2013-03-20 | 2014-09-25 | Adobe Systems Inc. | Method and apparatus for rating a multi-version product |
US20140366002A1 (en) * | 2013-06-11 | 2014-12-11 | Sap Ag | Searching for an entity most suited to provide knowledge regarding an object |
US8918775B1 (en) * | 2013-07-12 | 2014-12-23 | Ca, Inc. | Dynamic release control of software application version changes |
KR20150026656A (en) * | 2013-09-03 | 2015-03-11 | 삼성전자주식회사 | Method for controlling an application and an electronic device |
US20150128121A1 (en) * | 2013-11-06 | 2015-05-07 | Improvement Interactive, LLC | Dynamic application version selection |
US20150156257A1 (en) * | 2013-12-04 | 2015-06-04 | Huawei Technologies Co., Ltd. | Application service providing method and system, and related device |
ES2655207T3 (en) * | 2013-12-27 | 2018-02-19 | Buongiorno S.p.A. | Method and system to implement sets of software development tools in application |
US9367299B2 (en) | 2013-12-31 | 2016-06-14 | Google Inc. | Preventing application downgrade in an application store |
US9749440B2 (en) * | 2013-12-31 | 2017-08-29 | Sweetlabs, Inc. | Systems and methods for hosted application marketplaces |
US9817646B1 (en) | 2014-03-17 | 2017-11-14 | Google Llc | Multiplatform and multichannel distribution of web applications across devices |
US10140654B2 (en) * | 2014-03-20 | 2018-11-27 | United Parcel Service Of America, Inc. | Concepts for repair and service of a consumer device using a network connection and diagnostic test |
US10089098B2 (en) | 2014-05-15 | 2018-10-02 | Sweetlabs, Inc. | Systems and methods for application installation platforms |
US10019247B2 (en) | 2014-05-15 | 2018-07-10 | Sweetlabs, Inc. | Systems and methods for application installation platforms |
US20150370548A1 (en) * | 2014-06-23 | 2015-12-24 | Google Inc. | Automated Mobile Application Publishing |
US9853929B2 (en) | 2014-09-30 | 2017-12-26 | Apple Inc. | Service compatibility check for messages |
US10095500B2 (en) * | 2014-09-30 | 2018-10-09 | Apple Inc. | Revision locking |
CN104317914B (en) * | 2014-10-28 | 2018-07-31 | 小米科技有限责任公司 | Data capture method and device |
CN104375891A (en) * | 2014-11-04 | 2015-02-25 | 普华基础软件股份有限公司 | Application program management system |
US10949075B2 (en) | 2014-11-06 | 2021-03-16 | Microsoft Technology Licensing, Llc | Application command control for small screen display |
US20160132992A1 (en) | 2014-11-06 | 2016-05-12 | Microsoft Technology Licensing, Llc | User interface scaling for devices based on display size |
WO2016086124A1 (en) * | 2014-11-25 | 2016-06-02 | Berry Plastics Corporation | Package |
US10532872B2 (en) | 2014-12-08 | 2020-01-14 | Berry Plastics Corporation | Package |
US9760113B2 (en) | 2015-02-20 | 2017-09-12 | Sony Interactive Entertainment America Llc | Backward compatibility through use of spoof clock and fine grain frequency control |
LU92690B1 (en) * | 2015-04-03 | 2016-10-04 | Iee Int Electronics & Eng Sa | Heating device for curved surfaces |
US9472196B1 (en) * | 2015-04-22 | 2016-10-18 | Google Inc. | Developer voice actions system |
US20160313958A1 (en) * | 2015-04-27 | 2016-10-27 | Microsoft Technology Licensing, Llc | Cross-platform command extensibility |
US10042626B2 (en) * | 2015-06-29 | 2018-08-07 | Verizon Patent And Licensing Inc. | Software updates using client self-reporting and a hierarchical data structure |
US10320879B2 (en) * | 2015-07-09 | 2019-06-11 | Verizon Patent And Licensing Inc. | Software service discovery and service evolution management |
KR101935847B1 (en) * | 2015-07-17 | 2019-01-07 | 인핸스 인코퍼레이티드 | Method and system for modifying machine instructions in compiled software |
US10572248B2 (en) * | 2015-08-12 | 2020-02-25 | Blackberry Limited | Groups of endpoints and targeting of releases and packages to endpoints |
US10365912B2 (en) | 2015-08-12 | 2019-07-30 | Blackberry Limited | Delivery mechanisms for deployment of releases of packages to endpoints |
US10229137B2 (en) | 2015-08-12 | 2019-03-12 | Blackberry Limited | Management of upgradeable endpoints |
US10656935B2 (en) * | 2015-10-13 | 2020-05-19 | Home Box Office, Inc. | Maintaining and updating software versions via hierarchy |
US10623514B2 (en) | 2015-10-13 | 2020-04-14 | Home Box Office, Inc. | Resource response expansion |
US9986064B2 (en) | 2015-12-03 | 2018-05-29 | International Business Machines Corporation | Adaptable applications in a client/server architecture |
US10242386B2 (en) * | 2015-12-16 | 2019-03-26 | Facebook, Inc. | Grouping users into tiers based on similarity to a group of seed users |
US9823919B2 (en) * | 2015-12-30 | 2017-11-21 | Microsoft Technology Licensing, Llc | Controlled deployment of application feature in mobile environment |
CN105988688A (en) * | 2016-01-22 | 2016-10-05 | 腾讯科技（深圳）有限公司 | Screen capture method and apparatus |
US9910663B1 (en) | 2016-02-23 | 2018-03-06 | Mackson Consulting, LLC | Network-independent modular applications |
US10057263B2 (en) * | 2016-03-01 | 2018-08-21 | Cay JEGLINSKI | Application management system |
CN105867879A (en) * | 2016-03-21 | 2016-08-17 | 合肥赛猊腾龙信息技术有限公司 | Method and device for simulating microprocessor instruction |
US10044832B2 (en) | 2016-08-30 | 2018-08-07 | Home Box Office, Inc. | Data request multiplexing |
CN110168651A (en) * | 2016-10-11 | 2019-08-23 | 基因组系统公司 | Method and system for selective access storage or transmission biological data |
US20180157478A1 (en) * | 2016-12-02 | 2018-06-07 | Coursera, Inc. | Deployment of immutable web application builds |
US10649753B2 (en) * | 2016-12-14 | 2020-05-12 | Verizon Patent And Licensing Inc. | Enabling user device application modularity |
US10698740B2 (en) | 2017-05-02 | 2020-06-30 | Home Box Office, Inc. | Virtual graph nodes |
US10635699B2 (en) * | 2017-05-03 | 2020-04-28 | Servicenow, Inc. | Fuzzy matching for computing resources |
CN107220066B (en) * | 2017-06-28 | 2020-08-28 | 北京金山安全软件有限公司 | Method and device for releasing application software in application store |
JP7009909B2 (en) * | 2017-10-26 | 2022-01-26 | 富士フイルムビジネスイノベーション株式会社 | Information processing equipment, programs, and management systems |
US11157258B2 (en) * | 2017-11-16 | 2021-10-26 | Atlassian Pty Ltd. | Systems and processes for updating computer applications |
MY191530A (en) * | 2017-11-20 | 2022-06-29 | Emerico Sdn Bhd | A system for operating an electronic platform |
US10630808B1 (en) * | 2018-02-02 | 2020-04-21 | Dell Products L.P. | Contextual routing for directing requests to different versions of an application |
US11640429B2 (en) | 2018-10-11 | 2023-05-02 | Home Box Office, Inc. | Graph views to improve user interface responsiveness |
CN109240740B (en) * | 2018-11-15 | 2022-08-02 | 北京金山云网络技术有限公司 | Console version compatibility method and device and electronic equipment |
US11307840B2 (en) | 2019-07-05 | 2022-04-19 | Hewlett Packard Enterprise Development Lp | Software version determinations based on release notes and support file |
CN110377330B (en) * | 2019-07-22 | 2023-07-04 | 国美视界(北京)科技有限公司 | Method and device for configuring operating system of electronic device |
CN110766526B (en) * | 2019-10-28 | 2023-10-10 | 陈灏 | Application discovery and customization system and method for accessing application store of tablet computer |
KR20210055387A (en) | 2019-11-07 | 2021-05-17 | 삼성전자주식회사 | Context based application providing server and controlling method thereof |
US11061667B1 (en) | 2020-04-27 | 2021-07-13 | Citrix Systems, Inc. | Selecting a version of an application |
US11556320B2 (en) | 2020-08-06 | 2023-01-17 | Bank Of America Corporation | Electronic system for dynamic analysis and detection of transformed transient data in a distributed system network |
CN114827133A (en) * | 2022-06-27 | 2022-07-29 | 浪潮云信息技术股份公司 | Application software management method and device and computer |
Family Cites Families (68)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6151643A (en) | 1996-06-07 | 2000-11-21 | Networks Associates, Inc. | Automatic updating of diverse software products on multiple client computer systems by downloading scanning application to client computer and generating software list on client computer |
US5991856A (en) * | 1997-09-30 | 1999-11-23 | Network Associates, Inc. | System and method for computer operating system protection |
US6226618B1 (en) | 1998-08-13 | 2001-05-01 | International Business Machines Corporation | Electronic content delivery system |
US20030041110A1 (en) | 2000-07-28 | 2003-02-27 | Storymail, Inc. | System, Method and Structure for generating and using a compressed digital certificate |
GB2367216B (en) | 2000-09-26 | 2004-01-21 | Hewlett Packard Co | Selection of content for downloading |
US20040068721A1 (en) | 2000-11-17 | 2004-04-08 | O'neill Patrick | Network for updating firmware and / or software in wireless communication devices |
AU2002232464A1 (en) | 2001-02-09 | 2002-08-28 | Microsoft Corporation | Distribution of binary executables and content from peer locations/machines |
US7130951B1 (en) * | 2002-04-18 | 2006-10-31 | Advanced Micro Devices, Inc. | Method for selectively disabling interrupts on a secure execution mode-capable processor |
AU2003231070A1 (en) * | 2002-04-18 | 2003-11-03 | Advanced Micro Devices Inc. | A computer system including a secure execution mode - capable cpu and a security services processor connected via a secure communication path |
US20030221190A1 (en) | 2002-05-22 | 2003-11-27 | Sun Microsystems, Inc. | System and method for performing patch installation on multiple devices |
US20040002943A1 (en) | 2002-06-28 | 2004-01-01 | Merrill John Wickens Lamb | Systems and methods for application delivery and configuration management of mobile devices |
US20040203681A1 (en) | 2002-07-01 | 2004-10-14 | Ross David J. | Application catalog on an application server for wireless devices |
US20040098715A1 (en) | 2002-08-30 | 2004-05-20 | Parixit Aghera | Over the air mobile device software management |
US7409208B1 (en) | 2003-07-02 | 2008-08-05 | Cellco Partnership | Self-subscription to catalogs of mobile application software |
US20050177829A1 (en) | 2003-10-10 | 2005-08-11 | Vipul Vishwanath | Method of applying constraints against discovered attributes in provisioning computers |
US20050108690A1 (en) * | 2003-11-17 | 2005-05-19 | Tira Wireless Inc. | System and method of generating applications for mobile devices |
US7509636B2 (en) | 2003-12-15 | 2009-03-24 | Microsoft Corporation | System and method for updating files utilizing delta compression patching |
US7257583B2 (en) | 2004-01-09 | 2007-08-14 | Microsoft Corporation | System and method for updating an on-device application catalog in a mobile device receiving a push message from a catalog server indicating availability of an application for download |
US8239858B2 (en) * | 2004-02-25 | 2012-08-07 | Research In Motion Limited | Method and system for selecting a program for download |
US7707242B2 (en) * | 2004-09-30 | 2010-04-27 | Bally Gaming, Inc. | Internet browser-based gaming system and method for providing browser operations to a non-browser enabled gaming network |
GB0426736D0 (en) * | 2004-12-06 | 2005-01-12 | Omnifone Ltd | MyFone |
US9535679B2 (en) | 2004-12-28 | 2017-01-03 | International Business Machines Corporation | Dynamically optimizing applications within a deployment server |
US7818734B2 (en) | 2005-01-21 | 2010-10-19 | Callwave, Inc. | Methods and systems for transferring data over a network |
US20060217111A1 (en) | 2005-02-11 | 2006-09-28 | Sunil Marolia | Network for customer care and distribution of firmware and software updates |
US8027684B2 (en) | 2005-08-22 | 2011-09-27 | Infosys Technologies, Ltd. | System for performing a task in a communication network and methods thereof |
US8346223B1 (en) | 2005-11-07 | 2013-01-01 | Flurry, Inc. | Delivering a customized service to a mobile device using a link |
US7475358B2 (en) | 2006-02-14 | 2009-01-06 | International Business Machines Corporation | Alternate progress indicator displays |
US20070255576A1 (en) | 2006-04-26 | 2007-11-01 | Macrovision Corporation | Service providing an electronic market for the distribution of promotional material using software installation packages |
GB0702587D0 (en) | 2006-05-05 | 2007-03-21 | Omnifone Ltd | Digital rights management |
US20080052383A1 (en) | 2006-08-25 | 2008-02-28 | Gpxs Holding Ltd. | System and method for mobile device application management |
US9231904B2 (en) | 2006-09-25 | 2016-01-05 | Weaved, Inc. | Deploying and managing networked devices |
US8370479B2 (en) * | 2006-10-03 | 2013-02-05 | Axeda Acquisition Corporation | System and method for dynamically grouping devices based on present device conditions |
US8413135B2 (en) * | 2006-10-30 | 2013-04-02 | At&T Intellectual Property I, L.P. | Methods, systems, and computer program products for controlling software application installations |
KR101430442B1 (en) | 2007-01-08 | 2014-08-14 | 엘지전자 주식회사 | Method for updating session using network-based management of capability of terminal |
US7844658B2 (en) | 2007-01-22 | 2010-11-30 | Comcast Cable Holdings, Llc | System and method for providing an application to a device |
JP4946592B2 (en) | 2007-04-20 | 2012-06-06 | 株式会社日立製作所 | Download apparatus and method, content transmission / reception system and method |
CN101119517B (en) * | 2007-07-12 | 2010-11-10 | 深圳市融创天下科技发展有限公司 | Method of automatic downloading software from network server |
US20090037287A1 (en) * | 2007-07-31 | 2009-02-05 | Ahmad Baitalmal | Software Marketplace and Distribution System |
CN101378561B (en) | 2007-08-29 | 2013-01-02 | 华为技术有限公司 | Method for providing terminal appearance contents, appearance customization server and system |
US8862657B2 (en) | 2008-01-25 | 2014-10-14 | Seven Networks, Inc. | Policy based content service |
US20090307683A1 (en) * | 2008-06-08 | 2009-12-10 | Sam Gharabally | Network-Based Update of Application Programs |
JP2011527465A (en) | 2008-06-30 | 2011-10-27 | モミニス リミテッド | Generation and distribution of computer applications |
US8650561B2 (en) | 2008-07-10 | 2014-02-11 | Apple Inc. | System and method for localizing display of applications for download |
US8607208B1 (en) * | 2008-10-01 | 2013-12-10 | Oracle International Corporation | System and methods for object code hot updates |
US8213924B2 (en) | 2008-10-06 | 2012-07-03 | Facebook, Inc. | Providing distributed online services for mobile devices |
US20100088367A1 (en) * | 2008-10-08 | 2010-04-08 | Research In Motion Limited | Mobile wireless communications device and system providing dynamic management of carrier applications and related methods |
EP2175366B1 (en) * | 2008-10-08 | 2012-10-10 | Research In Motion Limited | Server for sending new application portions to mobile wireless communications devices and related methods |
EP2175612B1 (en) * | 2008-10-08 | 2016-11-02 | BlackBerry Limited | Mobile wireless communications system providing downloading and installation of mobile device applications upon registration and related methods |
US9367680B2 (en) * | 2008-10-21 | 2016-06-14 | Lookout, Inc. | System and method for mobile communication device application advisement |
US8745153B2 (en) * | 2009-02-09 | 2014-06-03 | Apple Inc. | Intelligent download of application programs |
US8340635B2 (en) * | 2009-03-16 | 2012-12-25 | Apple Inc. | Capability model for mobile devices |
US8725745B2 (en) | 2009-04-13 | 2014-05-13 | Microsoft Corporation | Provision of applications to mobile devices |
US8346847B2 (en) | 2009-06-03 | 2013-01-01 | Apple Inc. | Installing applications based on a seed application from a separate device |
US20100325624A1 (en) * | 2009-06-22 | 2010-12-23 | Stephen John Bartolo | Method and System for Application Portability |
US20100332296A1 (en) * | 2009-06-25 | 2010-12-30 | Apple Inc. | Systems, methods, and computer-readable media for community review of items in an electronic store |
KR101369773B1 (en) * | 2009-07-08 | 2014-03-06 | 한국전자통신연구원 | Method and apparatus for installation of application using application identifier |
US8849717B2 (en) | 2009-07-09 | 2014-09-30 | Simon Cooper | Methods and systems for upgrade and synchronization of securely installed applications on a computing device |
KR20110042982A (en) | 2009-10-20 | 2011-04-27 | 삼성전자주식회사 | Method for providing contents download service and terminal apparatus applying the same |
CN102098660A (en) * | 2009-12-15 | 2011-06-15 | 上海苏腾信息科技有限公司 | System for automatically adapting local program of mobile client based on server |
US8719776B2 (en) | 2009-12-30 | 2014-05-06 | Foneclay, Inc. | System for creation and distribution of software applications usable on multiple mobile device platforms |
US20110246618A1 (en) | 2010-04-02 | 2011-10-06 | Apple Inc. | Caching multiple views corresponding to multiple aspect ratios |
CN105760716B (en) | 2010-05-19 | 2018-12-14 | 谷歌有限责任公司 | Digital certificates management |
JP2012018657A (en) | 2010-06-11 | 2012-01-26 | Nintendo Co Ltd | Information processing terminal, information processing system, and information processing program |
US8819123B1 (en) | 2011-05-17 | 2014-08-26 | Amazon Technologies, Inc. | Web document transfers |
US8707289B2 (en) | 2011-07-20 | 2014-04-22 | Google Inc. | Multiple application versions |
US8903955B2 (en) | 2011-12-02 | 2014-12-02 | Cisco Technology, Inc. | Systems and methods for intelligent video delivery and cache management |
US20130198342A1 (en) | 2012-01-26 | 2013-08-01 | General Instrument Corporation | Media format negotiation mechanism delivering client device media capabilities to a server |
US9785424B2 (en) | 2015-06-05 | 2017-10-10 | Apple Inc. | Capability attributes based application packaging |
-
2011
- 2011-07-20 US US13/187,198 patent/US8707289B2/en active Active
-
2012
- 2012-07-03 US US13/541,001 patent/US8621450B2/en active Active
- 2012-07-20 EP EP12740847.4A patent/EP2734920B8/en active Active
- 2012-07-20 EP EP20210736.3A patent/EP3809258A1/en active Pending
- 2012-07-20 CN CN201280045508.2A patent/CN103890723A/en active Pending
- 2012-07-20 KR KR1020187002510A patent/KR102111080B1/en active IP Right Grant
- 2012-07-20 KR KR1020207013139A patent/KR102156815B1/en active IP Right Grant
- 2012-07-20 WO PCT/US2012/047639 patent/WO2013013166A1/en active Application Filing
- 2012-07-20 KR KR1020147004308A patent/KR101824666B1/en active IP Right Grant
- 2012-07-20 CN CN201610074408.2A patent/CN105677361A/en active Pending
- 2012-07-20 EP EP17194428.3A patent/EP3293630B1/en active Active
- 2012-07-20 EP EP21171033.0A patent/EP3907604A1/en active Pending
-
2014
- 2014-02-21 US US14/186,439 patent/US9098380B2/en active Active
-
2015
- 2015-06-18 US US14/743,014 patent/US9595027B2/en active Active
-
2017
- 2017-01-27 US US15/417,789 patent/US10290035B2/en active Active
-
2019
- 2019-05-02 US US16/401,415 patent/US10740813B2/en active Active
Non-Patent Citations (1)
Title |
---|
See references of WO2013013166A1 * |
Also Published As
Publication number | Publication date |
---|---|
US20170140451A1 (en) | 2017-05-18 |
US20150287003A1 (en) | 2015-10-08 |
CN105677361A (en) | 2016-06-15 |
US10290035B2 (en) | 2019-05-14 |
US8707289B2 (en) | 2014-04-22 |
US9595027B2 (en) | 2017-03-14 |
EP3809258A1 (en) | 2021-04-21 |
KR102111080B1 (en) | 2020-05-15 |
US8621450B2 (en) | 2013-12-31 |
CN103890723A (en) | 2014-06-25 |
EP3907604A1 (en) | 2021-11-10 |
KR102156815B1 (en) | 2020-09-16 |
EP2734920B8 (en) | 2017-12-13 |
US20130024852A1 (en) | 2013-01-24 |
US20130024851A1 (en) | 2013-01-24 |
US20140173585A1 (en) | 2014-06-19 |
KR20200052991A (en) | 2020-05-15 |
KR20180014199A (en) | 2018-02-07 |
KR20140054100A (en) | 2014-05-08 |
US10740813B2 (en) | 2020-08-11 |
EP3293630B1 (en) | 2022-03-16 |
KR101824666B1 (en) | 2018-02-01 |
EP2734920B1 (en) | 2017-10-04 |
WO2013013166A1 (en) | 2013-01-24 |
EP3293630A1 (en) | 2018-03-14 |
US20190259078A1 (en) | 2019-08-22 |
US9098380B2 (en) | 2015-08-04 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US10740813B2 (en) | Multiple application versions | |
US10248401B1 (en) | Multiplatform and multichannel distribution of web applications across devices | |
CA2800917C (en) | Applications including multiple experience modules | |
US20130232229A1 (en) | Distribution of Application Files | |
JP6564034B2 (en) | Item map for app store app | |
US11321422B1 (en) | User-configurable aggregate web components | |
US20170060891A1 (en) | File-Type-Dependent Query System | |
US11256603B2 (en) | Generating and attributing unique identifiers representing performance issues within a call stack | |
US20220245206A1 (en) | Process flow builder for user-configurable web component sequences | |
US10382541B2 (en) | Server and method for providing design data for application and system for generating application | |
US20240054123A1 (en) | Database systems and methods for custom sorting records | |
US20230237032A1 (en) | On-demand ingestion of records from a staging storage into a primary database | |
US20220269738A1 (en) | Aggregate component for parallel browser-initiated actions |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PUAI | Public reference made under article 153(3) epc to a published international application that has entered the european phase |
Free format text: ORIGINAL CODE: 0009012 |
|
17P | Request for examination filed |
Effective date: 20140123 |
|
AK | Designated contracting states |
Kind code of ref document: A1Designated state(s): AL AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HR HU IE IS IT LI LT LU LV MC MK MT NL NO PL PT RO RS SE SI SK SM TR |
|
DAX | Request for extension of the european patent (deleted) | ||
GRAP | Despatch of communication of intention to grant a patent |
Free format text: ORIGINAL CODE: EPIDOSNIGR1 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: GRANT OF PATENT IS INTENDED |
|
RIC1 | Information provided on ipc code assigned before grant |
Ipc: G06F 9/44 20060101ALI20170315BHEPIpc: G06F 9/445 20060101AFI20170315BHEPIpc: G06Q 20/12 20120101ALI20170315BHEPIpc: G06Q 30/06 20120101ALI20170315BHEP |
|
INTG | Intention to grant announced |
Effective date: 20170418 |
|
RIN1 | Information on inventor provided before grant (corrected) |
Inventor name: WOMACK, MARK D.Inventor name: HSIEH, SHENG-CHIInventor name: LIN, YU-KUANInventor name: FIRMAN, ILYAInventor name: TSANG, JULIANAInventor name: LIN, JASPER S. |
|
GRAA | (expected) grant |
Free format text: ORIGINAL CODE: 0009210 |
|
GRAS | Grant fee paid |
Free format text: ORIGINAL CODE: EPIDOSNIGR3 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: THE PATENT HAS BEEN GRANTED |
|
AK | Designated contracting states |
Kind code of ref document: B1Designated state(s): AL AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HR HU IE IS IT LI LT LU LV MC MK MT NL NO PL PT RO RS SE SI SK SM TR |
|
REG | Reference to a national code |
Ref country code: GBRef legal event code: FG4D |
|
REG | Reference to a national code |
Ref country code: CHRef legal event code: EP |
|
REG | Reference to a national code |
Ref country code: ATRef legal event code: REFRef document number: 934627Country of ref document: ATKind code of ref document: TEffective date: 20171015 |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R082Ref document number: 602012038122Country of ref document: DERepresentative=s name: BETTEN & RESCH PATENT- UND RECHTSANWAELTE PART, DE |
|
REG | Reference to a national code |
Ref country code: IERef legal event code: FG4D |
|
RAP2 | Party data changed (patent owner data changed or rights of a patent transferred) |
Owner name: GOOGLE LLC |
|
REG | Reference to a national code |
Ref country code: NLRef legal event code: FP |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R096Ref document number: 602012038122Country of ref document: DE |
|
REG | Reference to a national code |
Ref country code: LTRef legal event code: MG4D |
|
REG | Reference to a national code |
Ref country code: ATRef legal event code: MK05Ref document number: 934627Country of ref document: ATKind code of ref document: TEffective date: 20171004 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: FIFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20171004Ref country code: NOFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180104Ref country code: ESFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20171004Ref country code: LTFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20171004Ref country code: SEFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20171004 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: BGFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180104Ref country code: ATFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20171004Ref country code: HRFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20171004Ref country code: ISFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180204Ref country code: GRFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180105Ref country code: RSFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20171004Ref country code: LVFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20171004 |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R097Ref document number: 602012038122Country of ref document: DE |
|
REG | Reference to a national code |
Ref country code: FRRef legal event code: PLFPYear of fee payment: 7 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: SKFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20171004Ref country code: CZFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20171004Ref country code: EEFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20171004Ref country code: DKFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20171004 |
|
PLBE | No opposition filed within time limit |
Free format text: ORIGINAL CODE: 0009261 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: NO OPPOSITION FILED WITHIN TIME LIMIT |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: SMFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20171004Ref country code: ROFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20171004Ref country code: ITFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20171004Ref country code: PLFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20171004 |
|
26N | No opposition filed |
Effective date: 20180705 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: SIFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20171004 |
|
REG | Reference to a national code |
Ref country code: CHRef legal event code: PL |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: LUFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20180720Ref country code: MCFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20171004 |
|
REG | Reference to a national code |
Ref country code: BERef legal event code: MMEffective date: 20180731 |
|
REG | Reference to a national code |
Ref country code: IERef legal event code: MM4A |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: IEFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20180720Ref country code: LIFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20180731Ref country code: CHFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20180731 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: BEFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20180731 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: MTFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20180720 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: TRFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20171004 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: PTFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20171004Ref country code: HUFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMIT; INVALID AB INITIOEffective date: 20120720 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: CYFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20171004Ref country code: MKFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20171004 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: ALFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20171004 |
|
P01 | Opt-out of the competence of the unified patent court (upc) registered |
Effective date: 20230510 |
|
PGFP | Annual fee paid to national office [announced via postgrant information from national office to epo] |
Ref country code: NLPayment date: 20230726Year of fee payment: 12 |
|
PGFP | Annual fee paid to national office [announced via postgrant information from national office to epo] |
Ref country code: GBPayment date: 20230727Year of fee payment: 12 |
|
PGFP | Annual fee paid to national office [announced via postgrant information from national office to epo] |
Ref country code: FRPayment date: 20230725Year of fee payment: 12Ref country code: DEPayment date: 20230727Year of fee payment: 12 |
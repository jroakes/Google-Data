US6052687A - Relational database search system and method, and intermediate link table generating method and storage medium - Google Patents
Relational database search system and method, and intermediate link table generating method and storage medium Download PDFInfo
- Publication number
- US6052687A US6052687A US08/990,578 US99057897A US6052687A US 6052687 A US6052687 A US 6052687A US 99057897 A US99057897 A US 99057897A US 6052687 A US6052687 A US 6052687A
- Authority
- US
- United States
- Prior art keywords
- link
- intermediate link
- condition
- sql
- tables
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Lifetime
Links
- 238000000034 method Methods 0.000 title claims description 145
- 230000004044 response Effects 0.000 claims description 80
- 239000013589 supplement Substances 0.000 claims description 15
- 238000012937 correction Methods 0.000 claims description 2
- 230000006870 function Effects 0.000 description 13
- 238000005516 engineering process Methods 0.000 description 7
- 238000000605 extraction Methods 0.000 description 5
- 239000000047 product Substances 0.000 description 5
- 230000001174 ascending effect Effects 0.000 description 1
- 238000007796 conventional method Methods 0.000 description 1
- 230000006866 deterioration Effects 0.000 description 1
- 239000000284 extract Substances 0.000 description 1
- 238000012545 processing Methods 0.000 description 1
- 230000008707 rearrangement Effects 0.000 description 1
- 239000004065 semiconductor Substances 0.000 description 1
- 238000012360 testing method Methods 0.000 description 1
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/93—Document management systems
- G06F16/94—Hypermedia
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/28—Databases characterised by their database models, e.g. relational or object models
- G06F16/284—Relational databases
-
- Y—GENERAL TAGGING OF NEW TECHNOLOGICAL DEVELOPMENTS; GENERAL TAGGING OF CROSS-SECTIONAL TECHNOLOGIES SPANNING OVER SEVERAL SECTIONS OF THE IPC; TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10—TECHNICAL SUBJECTS COVERED BY FORMER USPC
- Y10S—TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10S707/00—Data processing: database and file management or data structures
- Y10S707/99931—Database or file accessing
- Y10S707/99933—Query processing, i.e. searching
Definitions
- the present invention relates to a relational database search system and method, and more particularly to a method of automatically generating an intermediate link table containing link information among relational database tables, and to a program storage medium.
- RDB relational database
- a storage device 3 stores a relational database and contains a basic table of the relational database.
- the storage device 3 stores, for example, a basic table 3g (table TECT), a basic table 3b (table IPPANT), and a basic table 3c (table SOURCET).
- a RDB server 2 manages the relational database, and includes an RDB basic process unit 2a and an SQL execution unit 2b.
- the RDB basic process unit 2a provides a basic process function for the relational database.
- the SQL execution unit 2b issues an SQL statement which is a query to the relational database.
- Each RDB client 1 is a user terminal which utilizes the relational database, and includes a GUI process unit 1a.
- the GUI process unit 1a provides a graphical user interface (GUI) for access to the relational database.
- GUI graphical user interface
- a table TECT relates to technology and has a figure number field ZUB, a classification field BUN, a name field MEI, etc.
- the table IPPANT relates to a common symbol and has a circuit symbol field KAI, a figure number field ZUB, a registration date field TNEN, etc.
- the table SOURCET is a product information table for each circuit symbol and has a circuit symbol field KAI, a basic rank field KRAN, and an arrangement number field TEH, etc.
- the table TECT and the table IPPANT are linked to each other through the field name ZUB.
- the table IPPANT and the table SOURCET are linked to each other through the field name KAI.
- the table TECT and the table SOURCET do not share any common field and therefore are not directly linked to each other.
- SELECT specifies an extraction item
- FROM specifies a table name
- WHERE specifies a retrieval condition.
- the information can only be extracted through the table IPPANT as an intermediate table because the table TECT and the table SOURCET have no direct link condition.
- the GUI process unit la of the RDB client 1 allows the user to input an item to be processed according to a displayed menu, etc., and to fill in a plurality of forms of standard SQL statements prepared by the GUI process unit 1a with items to be processed.
- the RDB server 2 is requested to execute the SQL statement.
- GUI process unit la Even if the function of the GUI process unit la can be flexible to some extent, it is limited to that a fixed SQL statement is allowed an optional query condition. Therefore, if the user retrieves data over a plurality of tables, he or she should be aware of the existence of an intermediate table and include it in the condition.
- the user has to understand the table structure and field information in a relational database and also understand the linkage of tables and field information so that an appropriate SQL statement can be generated with an intermediate table taken into account.
- the present invention aims at providing a relational database search system capable of obtaining a desired retrieval result even when a user does not fully understand the table structure and the field information in the relational database. Furthermore, the present invention aims at providing a rapid-execution-response relational database search system.
- a further object of the present invention is to provide a relational database search system capable of amending an incorrect query statement into a correct query statement if the user inputs an incorrect query statement whose specification for a link condition is insufficient, etc.
- the relational database search system includes a basic table storage unit for storing a plurality of basic tables to be searched; an intermediate link table generation unit for automatically generating an intermediate link table indicating the link condition for directly or indirectly linking two optional basic tables stored in the basic table storage unit; and an intermediate link table storage unit for storing an intermediate link table generated by the intermediate link table generation unit.
- the relational database search system further includes an SQL response trial unit for automatically generating quicker response SQL statements when a plurality of SQL statements that output the same retrieval result in response to given selection information can be generated.
- the relational database search system further comprises an SQL statement correction unit for determining whether or not an input SQL statement is correct, and correcting an incorrect SQL statement if the SQL statement is incorrect.
- FIG. 1 shows an example of the conventional search system
- FIG. 2 shows the configuration (1) according to the present invention
- FIG. 3 shows the configuration (2) according to the present invention
- FIG. 4 shows an example of the configuration of the hardware
- FIG. 5 shows an example of the linkage of basic tables
- FIG. 6 shows an example of intermediate link table
- FIG. 7 is a flowchart showing an intermediate link table generating process
- FIGS. 8A and 8B show examples of the primary link
- FIG. 9 shows an example of an intermediate link table
- FIG. 10 shows an example of the secondary link
- FIG. 11 shows an example of an intermediate link table
- FIG. 12 shows an example of the tertiary link
- FIG. 13 shows an example of an intermediate link table
- FIG. 14 is a flowchart showing an SQL generation process
- FIG. 15 shows an example (1) of an input screen of the GUI process unit
- FIG. 16 shows an example (2) of an input screen of the GUI process unit
- FIG. 17 shows an example (3) of an input screen of the GUI process unit
- FIG. 18 shows an example of the configuration of the SQL response monitor log file
- FIG. 19 is a flowchart showing the SQL response trial process.
- FIG. 20 is a flowchart showing a user-generated SQL check and a supplement process.
- FIG. 2 shows an example (1) of the configuration of the relational database system according to the present invention.
- an RDB server 10 manages a relational database.
- An RDB basic process unit 11 provides a basic process function for the relational database.
- An SQL execution unit 12 executes an SQL statement.
- An intermediate link table generation unit 13 generates an intermediate link table containing link information about the relationship between tables.
- An SQL response monitor unit 14 monitors the execution response of an SQL statement.
- An SQL response trial unit 15 makes a trial with the retrieval condition amended within the range in which an equal result can be obtained using an SQL statement.
- Each client 20 is a user terminal which utilizes a relational database (RDB).
- a GUI process unit 21 provides a graphical user interface for access to the relational database.
- An SQL generation process unit 22 automatically generates an SQL statement.
- An SQL supplement process unit 23 adds a description when the description of a retrieval condition in an SQL statement is insufficient.
- a storage device 30 can be a disk device, a semiconductor storage device, etc.
- Each basic table 31 is a target to be retrieved from a relational database.
- An intermediate link table 32 contains link information about the relationship between tables.
- An SQL response monitor log file 33 stores information about the execution response of an SQL statement.
- the RDB server 10 and each client 20 functions through a process unit comprising a CPU and memory connected through a network.
- the RDB basic process unit 11 manages a relational database (RDB).
- the SQL execution unit 12 executes a query statement described in structured query language (SQL) for the RDB.
- SQL structured query language
- the intermediate link table generation unit 13 automatically generates a table containing the link information about the relationship between the tables, and stores it as the intermediate link table 32 in the storage device 30.
- the SQL response monitor unit 14 measures the response time of the executed SQL statement. If the response time exceeds a reference time predetermined by the system, the SQL statement, the issue date and time, and the response time are stored in the SQL response monitor log file 33.
- the SQL response trial unit 15 changes the query condition in the SQL statement stored in the SQL response monitor log file 33 into another representation within a range in which an equal query result can be obtained, and then executes the SQL statement. If the response time is shorter than a predetermined time or the response time stored in the SQL response monitor log file 33, then the SQL response trial unit 15 updates the corresponding condition in the link information in the intermediate link table 32 in the SQL statement into the above described other representation for quicker response time. An issue test of an SQL statement whose query condition has been changed is performed on all possible combinations of link conditions that output the same result.
- a user inputs selection information for use in generating an SQL statement.
- the GUI process unit 21 of this system needs only inputting the minimal selection information about the table, field, and condition.
- the SQL generation process unit 22 refers to the link information in the intermediate link table 32 generated by the intermediate link table generation unit 13 of the RDB server 10 based on the selection information input from the GUI process unit 21, generates a normal SQL statement, and requests the RDB server 10 to execute the SQL statement.
- the SQL supplement process unit 23 When the SQL supplement process unit 23 receives a notification from the RDB basic process unit 11 about the user-input SQL statement that the SQL statement is not normal, it refers to the link information about the intermediate link table 32 and corrects the SQL statement.
- the intermediate link table generation unit 13 checks the relationship between the tables in all basic tables 31, generates or updates the link condition based on the table name and field name in the basic table 31, and stores the link information including a link condition in the intermediate link table 32.
- the SQL generation process unit 22 When selection information for use in generating an SQL statement is input from the GUI process unit 21, the SQL generation process unit 22 refers to the link information in the intermediate link table 32. Necessary link information is obtained to generate an SQL statement describing a necessary table name and link condition, and the SQL statement is issued to the RDB server 10. The issued SQL statement is passed to the SQL execution unit 12 through the RDB basic process unit 11, and is then executed.
- the input SQL statement is checked by the RDB basic process unit 11.
- the SQL supplement process unit 23 adds necessary link information by referring to the link information in the intermediate link table 32, issues a new SQL statement, and returns it to the RDB basic process unit 11.
- the response of the generated SQL statement at the execution of the SQL statement is checked by the SQL response monitor unit 14 and the SQL response trial unit 15. Then, the link condition in the intermediate link table 32 is updated in a way that the execution performance can be improved. Thus, the performance of the SQL statement generated or corrected using the link condition in the intermediate link table 32 can be improved.
- FIG. 3 shows an example of the configuration (2) of the relational database system according to the present invention.
- a client 50 comprises a GUI process unit 51, an SQL generation process unit 52, and an SQL supplement process unit 53, and has a configuration similar to that of the client 20 shown in FIG. 2.
- An RDB server 40 comprises an RDB basic unit 41, an SQL execution unit 42, an intermediate link table generation unit 43, an SQL response management unit 44, and an SQL response trial unit 45.
- the configuration is the same as that of the RDB server 10 shown in FIG. 2.
- the RDB server 40 further comprises an SQL generation process unit 46 and an SQL supplement process unit 47 similar to the units in the client 50.
- the user can utilize the functions of the present invention even if the user terminal only has a GUI process unit 61 such as a client 60.
- FIG. 4 shows an example of the configuration of the hardware of the RDB servers 10 and 40, or the clients 20, 50, and 60.
- the configuration of the hardware of the RDB servers 10 and 40 is almost the same as the clients 20, 50, and 60 except that the RDB servers 10 and 40 can omit an input unit 72 and a display unit 73.
- a CPU 71 is a central processing device for controlling the entire system.
- the input unit 72 has a keyboard, a mouse, etc.
- the display unit 73 displays a menu, etc. through the GUI process unit 21, etc.
- a memory 74 such as RAM, etc. temporarily stores a program, data, etc. when, for example, an application program described later is activated to perform a process through the SQL generation process unit 22, the SQL supplement process unit 23, etc.
- a storage unit 75 is, for example, a hard disk drive (HDD), etc. for storing an operation system (OS), various application programs (at least an application program for realizing a function provided by the present invention).
- OS operation system
- application programs at least an application program for realizing a function provided by the present invention.
- a storage medium drive unit 76 reads a program, data, etc. stored in a portable storage medium 76a such as an FD, CD-ROM, etc., writes data to the portable storage medium 55, etc. under the control of the CPU 71, and is, for example, a floppy disk drive (FDD), CD-ROM, etc.
- a portable storage medium 76a such as an FD, CD-ROM, etc.
- the portable storage medium 76a is a portable storage medium for storing, in a format in which a program can be read by the storage medium drive unit 76 and can be executed by the CPU 71, at least an application program which realizes a function (of the SQL generation process unit 22, the SQL supplement process unit 23, etc.) provided by the present invention.
- a communications unit 77 is connected to a network 4 such as a LAN, etc. and transmits and receives data to and from the RDB server 10, etc.
- the above described application program is not limited to those stored in the storage unit 75, the portable storage medium 76a, etc. Using the communications functions through the communications unit 77, the above described application program, etc. can be received and stored after being transferred as necessary from another client 20, RDB server 10, or other devices (not shown in the drawings) connected through the network 4 such as a LAN, etc.
- FIG. 5 shows an example of the link between basic tables of a relational database used to explain the embodiments of the present invention.
- the table TECT shown in FIG. 5 is a table relating to technology, and has a figure number field ZUB, a classification field BUN, a name field MEI, etc.
- the table IPPANT is a table relating to a common symbol, and has a circuit symbol field KAI, a figure number field ZUB, a registration date field TNEN, etc.
- the table SOURCET is a product information table for each circuit symbol, and has a circuit symbol field KAI, a base rank field KRAN, an added arrangement number field TEHS, an arrangement number field TEH, a field GAI indicating whether or not a product is externally purchased, an added product number field HINS, a manufacturer's abbreviation field MAK, etc.
- a table MAKER is a table relating to a manufacturer of a product, and has a manufacturer's abbreviation field MAK, a manufacturer's name English representation field MAKM, a manufacturer's name Japanese representation field MAKK, a registrar's name field MTOU, etc.
- a common field name is assigned to the fields relating to the same target.
- the table TECT and the table IPPANT have a common field ZUB.
- the table IPPANT and the table SOURCET have a common field KAI.
- the table SOURCET and the table MAKER have a common field MAK.
- the relationship between two tables having a common field is referred to as a primary link.
- table TECT and the table MAKER are linked through the table IPPANT and the table SOURCET. This is referred to as a tertiary link.
- FIG. 6 shows an example of an intermediate link table generated by an intermediate link table generation unit.
- the intermediate link table generation unit 13 automatically generates an intermediate link table shown in FIG. 6 when there is a basic table of the relational database shown in FIG. 5.
- An intermediate link table stores a source table name, a destination table name, a link table name, and a link condition for each entry (record).
- An source table name indicates the table name of a basic table (source table), that is, a base of a link.
- a destination table name indicates the table name of a basic table (destination table), that is, a linked-to table.
- a link table name indicates the table name of a basic table (link table) through which a source table and a destination table are linked in the chain through a common field.
- a link condition defines a link between a source table and a destination table, and includes the information indicating the primary link between tables and combinations of the primary links.
- the information indicating the primary link is defined by a source table name, a destination table name, and a name of a common field which is a key to the primary link.
- TECT.ZUB IPPANT.ZUB
- This link condition is a combination of the link condition indicating the primary link between the TECT and the IPPANT (the TECT and the IPPANT are linked through the ZUB) and the link condition indicating the primary link between the IPPANT and the SOURCET (the IPPANT and the SOURCET are linked through the KAI).
- FIG. 7 is a flowchart of an intermediate link table generation process.
- the intermediate link table generation unit 13 performs the process shown in FIG. 7 when the basic table 31 of a new relational database is generated or when the configuration of the basic table 31 in an existing relational database is amended.
- step S1 through S4 in FIG. 7 the primary link information is set.
- step S1 it is determined for, and starting with, each of all basic tables managed in the relational database whether or not the attribute of a field in a table is found in another table. If a field having the same name and attribute is found, then control is passed to step S2, and a source table name (original table), a destination table name (another table), and a link condition are set and defined in the intermediate link table.
- step S3 When there are no fields having the same name and attribute, control is passed to step S3 and a source table name (originating table), a destination table name (another table), and ⁇ no direct link ⁇ as a link condition are set and defined in the intermediate link table.
- step S4 It is determined in step S4 whether or not the primary link process has been completed for all tables, and all processes in steps S1 through S3 are repeated until the process is completed.
- steps S1 through S3 are performed as follows. That is, the intermediate link table generation unit 13 extracts a combination of the basic tables 31. Then, the intermediate link table generation unit 13 defines a link condition when there is a primary link between the originating table (source table) and another table (destination table). That is, when there is a common field between the source table and the destination table, a link condition is generated using each table name and the common field name. For the combination of a source table and a destination table in which there is not a primary link defined between the source table and the destination table, "no direct link" is set in the link condition column.
- FIGS. 8A and 8B show examples of the primary link relating to the above described steps S1 through S3.
- FIG. 8A There are primary links indicated by 1 shown in FIG. 8A among the basic tables ⁇ TECT>, ⁇ IPPANT>, ⁇ SOURCET>, and ⁇ MAKER>.
- FIG. 8B clearly shows the primary link that there are the primary links between ⁇ TECT> and ⁇ IPPANT>, ⁇ IPPANT> and ⁇ SOURCET>, ⁇ SOURCET> and ⁇ MAKER>, and that there is no primary link between ⁇ TECT> and ⁇ SOURCET> or ⁇ IPPANT> and ⁇ MAKER>.
- FIG. 9 shows an example of an intermediate link table in which the primary link is defined in steps S1 through S3. 1 shown in FIG. 9 indicates that the combination of the tables implies a primary link.
- step S6 records having a link condition "no direct link” (entry in an intermediate link table) are sequentially retrieved from the intermediate link table (FIG. 9).
- step S6 records having a link condition "no direct link” (entry in an intermediate link table) are sequentially retrieved from the intermediate link table (FIG. 9).
- step S7 It is checked in step S7 whether or not there are two records which link the source table and the destination table of the record (target record) having a link condition "no direct link".
- the record shown in FIG. 9 (having a source table name TECT and a destination table name SOURCET) has a link condition "no direct link".
- it can be linked using the link condition (primary link) of a record having a source table name TECT and a destination table name IPPANT and a record having a source table name IPPANT and a destination table name SOURCET (secondary link).
- control is passed to step S8.
- control is passed to step S9.
- the intermediate link table generation unit 13 defines a new link from two primary links one of which has a destination table functioning as source table for another primary link.
- FIG. 10 shows an example of a secondary link generated from two primary links.
- step S8 the name of an intermediate table (IPPANT in the above described example) which relates a source table to a destination table is set in the link table name column of the target record, and a link condition extracted from the two records is set in the link condition column.
- IPPANT in the above described example
- step S9 It is determined in step S9 whether or not the N-th link process has been completed for all records in the intermediate link table. If there is an unprocessed record, then control is returned to step S6, and the process is similarly repeated.
- FIG. 11 shows an example of an intermediate link table in which the secondary link shown in FIG. 10 has been defined (set).
- the name of an intermediate basic table is set in the link table name column in the intermediate link table.
- step S10 it is determined in step S10 whether or not the entire link process has been completed. If there are no more records having a link condition "no direct link", and if a new link cannot be set, then it is determined that all link processes have been completed and the intermediate link table generation process terminates.
- step S11 When a new link can be set, 1 is added to N in step S11, control is returned to step S6, and the N-th link process is similarly repeated.
- control is returned to step S6, and the tertiary link is performed.
- FIG. 12 shows an example of the tertiary link generated from the primary link and the secondary link.
- the link condition between TECT and MAKER can be defined through the common SOURCET using the secondary link between TECT and SOURCET and the primary link between SOURCET and MAKER. This is referred to as the tertiary link (marked 3 in FIG. 12).
- the contents of the process is similar to those shown in FIG. 10.
- FIG. 13 shows an example of an intermediate link table after the tertiary link has been defined.
- the link condition between MAKER (source table) and TECT (destination table) is defined.
- the SQL automatic generation process performed by the SQL generation process unit 22 is described by referring to FIGS. 14 through 18.
- the user has to only input minimal selection information such as a retrieval item, condition item, etc. using the GUI process unit 21 of the client 20 so that an optimum SQL retrieval can be performed without knowledge about the table structure, etc. of the relational database.
- FIG. 14 is a flowchart of the SQL generation process.
- FIGS. 15 through 17 show examples of input screens of a GUI process unit. Especially, FIG. 15 shows an example of a screen on which a retrieval item is selected and input.
- FIG. 16 shows an example of a screen on which a retrieval item is selected and input.
- FIG. 17 shows an example of a screen on which a data value of a retrieval condition field is input.
- the GUI process unit 21 displays a screen on which retrieval is performed as shown in FIG. 15.
- a preliminarily classified table group to be retrieved from the relational database is specified in an input field of a table group.
- the ⁇ RETRIEVAL ⁇ , ⁇ CONDITION ⁇ , and ⁇ SORT ⁇ in the specification field of an edition item respectively indicate whether or not a retrieval item can be input, a retrieval condition can be input, or data can be rearranged.
- ⁇ SORT ⁇ is specified, an ascending order or a descending order can be specified for rearrangement.
- one or more retrieval items can be specified in the table LIST and the field LIST.
- Described below is the process flow about an example of the case where a user specifies the retrieval of the information in the field ZUB (figure number) and the field BUN (classification) in the table TECT using the value "XX" of the field TEH (arrangement number) in the table SOURCET as a key.
- step S21 in FIG. 14 the GUI process unit 21 displays an input screen shown in FIG. 15 through 17 and the user inputs selected retrieval and condition items.
- the retrieval item for a target table group is PARET
- a target table name is TECT
- target field names are ZUB and BUN.
- a retrieval condition can be specified.
- the table name SOURCET and the field name TEH are specified as condition items in the TABLE LIST and the FIELD LIST respectively.
- a dialog box as shown as an ⁇ AUTOMATIC RETRIEVAL SPECIFICATION ⁇ in FIG. 17 is displayed, and a retrieval value of the field TEH can be input.
- the "XX" is input in this example. If necessary, an output table can be specified.
- the SQL generation process unit 22 receives the information in the intermediate link table 32 from the RDB server 10, and automatically generates an SQL statement at a request from the user by referring to the information.
- step S23 a generated SQL statement is transmitted to the RDB server 10, and the SQL execution unit 12 executes the SQL statement.
- the execution result of the SQL statement is presented to the user through the GUI process unit 21.
- step S24 the SQL response monitor unit 14 measures the time taken from the start to the end of the execution of the SQL statement to compute the response time.
- step S25 it is determined whether or not the response time computed in step S24 has exceeded a predetermined reference value, for example, 1 second. If it has exceeded the predetermined value, then the executed SQL statement, the issue date, and the response time are stored in the SQL response monitor log file 33 in step S26.
- a predetermined reference value for example, 1 second.
- FIG. 18 shows an example of the configuration of an SQL response monitor log file for storing an SQL statement, its issue date and time, response time, existence/non-existence of trial, etc.
- the GUI process unit 21 does not generate a screen as shown in FIGS. 15 through 17 exclusively for a specific relational database, but for general use for an optional relational database. That is, when a new relational database is developed, or when the structure of a relational database is amended, the function of optionally searching a relational database can be provided for the user according to the table name and the field name in the relational database without changing the GUI process unit 21.
- the retrieval response time largely depends on the structure of a table, the actual number of pieces of data, etc. Therefore, to automatically generate a rapid-response SQL statement, the link condition in the intermediate link table 32 is optimized by the SQL response trial unit 15.
- FIG. 19 is a flowchart of the SQL response trial process.
- step S31 the RDB basic process unit 11 confirms the state of a database user, and performs the following processes at an optimum timing.
- step S32 it is determined whether or not there is the SQL response monitor log file 33 of a database user. If yes, control is passed to step S63. If not, the process terminates.
- step S33 the processes in steps S34 through S37 are repeated for all patterns of the SQL statement stored in the SQL response monitor log file 33.
- step S34 the SQL statement issue process is performed again with the left side and the right side of the link condition replaced with each other in the retrieval condition of the SQL statement in the corresponding log.
- step S35 it is determined whether or not the response time is within a predetermined reference value, for example, one second. If the response time in the process is within a reference time, control is passed to step S36. If it exceeds the reference time, control is passed to step S37. Instead of determining whether or not the response time is within a predetermined reference value, the response time can be compared with, for example, the response time stored in the SQL response monitor log file 33. If the response time obtained when the left part and the right part of the link condition replace each other is shorter than the response time before the replacement, then control is passed to step S36. If it is longer, control is passed to step S37.
- a predetermined reference value for example, one second.
- step S36 the left part and the right part of a corresponding link condition in the intermediate link table 32 are replaced with each other in such a way that the same link condition of the SQL statement executed in step S37 can be obtained. Then, the SQL response monitor log file 33 is removed.
- step S37 "termination" is recorded in a corresponding entry in the SQL response monitor log file 33.
- the SQL supplement process unit 23 can check and correct an SQL statement.
- FIG. 20 is a flowchart of the user-generated SQL check and supplement process for checking a user-generated SQL statement and correcting it into an appropriate SQL statement.
- step S41 a user-generated SQL query statement is input through the GUI process unit 21.
- an SQL statement such as the one indicated by (A) shown in FIG. 20 is input.
- step S42 the input SQL statement is issued.
- the RDB basic process unit 11 determines whether or not the SQL statement is correct.
- step S43 it is determined according to the result of the check performed by the RDB basic process unit 11 whether or not the SQL statement is correct. If it is not a correct SQL statement, control is passed to step S44. If it is a correct SQL statement, the process terminates.
- step S44 the SQL supplement process unit 23 checks the error information (ERR) from the RDB basic process unit 11. When the ERR indicates that the table of the WHERE phrase is not described in the FROM phrase, the following processes are performed.
- ERR error information
- step S45 the table name (TECT) described in the SELECT statement, the table name (SOURCET) described in the WHERE statement, and the target link table are obtained from the intermediate link table 32.
- step S46 according to the link table obtained from the intermediate link table 32 and the information about the link condition, the user-generated SQL is supplemented to generate a new SQL.
- step S47 the GUI process unit 21 displays an SQL determination process result on the screen.
- the user can store a new SQL statement as necessary, amend it, and request the RDB server 10 to execute it.
- the user of a table can easily obtain necessary information without knowing the links between tables or the method for correctly describing the SQL as long as the user has the minimal knowledge as to which table stores the desired information and the information about the retrieval condition.
Abstract
Description
Claims (25)
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
JP9-156197 | 1997-06-13 | ||
JP15619797A JP3779431B2 (en) | 1997-06-13 | 1997-06-13 | Relational database management device, intermediate link table automatic creation processing method, and program storage medium |
Publications (1)
Publication Number | Publication Date |
---|---|
US6052687A true US6052687A (en) | 2000-04-18 |
Family
ID=15622498
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US08/990,578 Expired - Lifetime US6052687A (en) | 1997-06-13 | 1997-12-15 | Relational database search system and method, and intermediate link table generating method and storage medium |
Country Status (2)
Country | Link |
---|---|
US (1) | US6052687A (en) |
JP (1) | JP3779431B2 (en) |
Cited By (19)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
WO2000055741A1 (en) * | 1999-03-18 | 2000-09-21 | Blink.Com, Inc. | Synergistic internet bookmarks combining internet searching and hot linking |
US6353821B1 (en) * | 1999-12-23 | 2002-03-05 | Bull Hn Information Systems Inc. | Method and data processing system for detecting patterns in SQL to allow optimized use of multi-column indexes |
US20020103933A1 (en) * | 2001-01-29 | 2002-08-01 | Ross Garon | Internet-access enabled device personalization |
US20020184225A1 (en) * | 2001-05-31 | 2002-12-05 | Hovhannes Ghukasyan | Automatic generation of join graphs for relational database queries |
US20040093330A1 (en) * | 1999-11-05 | 2004-05-13 | W.W. Grainger, Inc. | System and method for data storage and retrieval |
US6775674B1 (en) * | 1998-03-26 | 2004-08-10 | Sap Aktiengesellschaft | Auto completion of relationships between objects in a data model |
US7069263B1 (en) * | 2002-02-19 | 2006-06-27 | Oracle International Corporation | Automatic trend analysis data capture |
US7761439B1 (en) * | 2004-06-30 | 2010-07-20 | Google Inc. | Systems and methods for performing a directory search |
US20130151497A1 (en) * | 2004-09-30 | 2013-06-13 | Siraj Khaliq | Providing information relating to a document |
US20140280260A1 (en) * | 2013-03-15 | 2014-09-18 | Eric Boukobza | Method, apparatus, and computer-readable medium for data tokenization |
US8954876B1 (en) * | 2007-10-09 | 2015-02-10 | Teradici Corporation | Method and apparatus for providing a session status indicator |
US20170286474A1 (en) * | 2016-03-31 | 2017-10-05 | Toshiba Global Commerce Solutions Holdings Corporation | Generating Source Code for Creating Database Triggers |
US10402402B2 (en) * | 2016-09-28 | 2019-09-03 | Ping An Technology (Shenzhen) Co., Ltd. | Method, device, server and storage apparatus of reviewing SQL |
US20200380425A1 (en) * | 2019-05-29 | 2020-12-03 | Amadeus S.A.S. | System and method of generating aggregated functional data |
CN113518950A (en) * | 2019-03-15 | 2021-10-19 | 欧姆龙株式会社 | Control system, control method, and control program |
US11188567B2 (en) | 2016-10-25 | 2021-11-30 | Hitachi, Ltd. | Data analysis support apparatus and data analysis support system |
US20220269702A1 (en) * | 2021-02-19 | 2022-08-25 | Sap Se | Intelligent annotation of entity-relationship data models |
US11475052B1 (en) * | 2019-11-08 | 2022-10-18 | Tableau Software, Inc. | Using visual cues to validate object models of database tables |
US11567920B2 (en) * | 2020-09-15 | 2023-01-31 | Sap Se | Master data mapping scheme permitting querying |
Families Citing this family (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7096217B2 (en) | 2002-10-31 | 2006-08-22 | International Business Machines Corporation | Global query correlation attributes |
US7890532B2 (en) * | 2004-12-15 | 2011-02-15 | Microsoft Corporation | Complex data access |
EP1941395B1 (en) * | 2005-10-28 | 2010-08-04 | mediareif Möstl & Reif Kommunikations- und Informationstechnologien OEG | Method for controlling a relational database system |
US9262501B2 (en) * | 2012-12-13 | 2016-02-16 | Vinayak Borkar | Method, apparatus, and computer-readable medium for optimized data subsetting |
Citations (5)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
JPS607556A (en) * | 1983-06-27 | 1985-01-16 | Fujitsu Ltd | Join processing system |
US5355472A (en) * | 1990-04-10 | 1994-10-11 | International Business Machines Corporation | System for substituting tags for non-editable data sets in hypertext documents and updating web files containing links between data sets corresponding to changes made to the tags |
US5519859A (en) * | 1993-11-15 | 1996-05-21 | Grace; John A. | Method and apparatus for automatic table selection and generation of structured query language instructions |
US5604899A (en) * | 1990-05-21 | 1997-02-18 | Financial Systems Technology Pty. Ltd. | Data relationships processor with unlimited expansion capability |
US5742806A (en) * | 1994-01-31 | 1998-04-21 | Sun Microsystems, Inc. | Apparatus and method for decomposing database queries for database management system including multiprocessor digital data processing system |
Family Cites Families (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
JPH0766348B2 (en) * | 1984-08-22 | 1995-07-19 | 株式会社日立製作所 | Inquiry processing optimization device in the relay database processing device |
JPH0554083A (en) * | 1991-08-21 | 1993-03-05 | Nec Corp | Database retrieval system |
JPH06282579A (en) * | 1993-03-25 | 1994-10-07 | Lion Corp | Retrieval expression preparing method for data base |
-
1997
- 1997-06-13 JP JP15619797A patent/JP3779431B2/en not_active Expired - Fee Related
- 1997-12-15 US US08/990,578 patent/US6052687A/en not_active Expired - Lifetime
Patent Citations (7)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
JPS607556A (en) * | 1983-06-27 | 1985-01-16 | Fujitsu Ltd | Join processing system |
US5355472A (en) * | 1990-04-10 | 1994-10-11 | International Business Machines Corporation | System for substituting tags for non-editable data sets in hypertext documents and updating web files containing links between data sets corresponding to changes made to the tags |
US5604899A (en) * | 1990-05-21 | 1997-02-18 | Financial Systems Technology Pty. Ltd. | Data relationships processor with unlimited expansion capability |
US5617567A (en) * | 1990-05-21 | 1997-04-01 | Financial System Technology Pty. Ltd. | Data processing system and method for retrieving and entity specified in a search path record from a relational database |
US5652882A (en) * | 1990-05-21 | 1997-07-29 | Financial Systems Technology Pty. Ltd. | Data processing system and method for detecting mandatory relations violation in a relational database |
US5519859A (en) * | 1993-11-15 | 1996-05-21 | Grace; John A. | Method and apparatus for automatic table selection and generation of structured query language instructions |
US5742806A (en) * | 1994-01-31 | 1998-04-21 | Sun Microsystems, Inc. | Apparatus and method for decomposing database queries for database management system including multiprocessor digital data processing system |
Cited By (28)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6775674B1 (en) * | 1998-03-26 | 2004-08-10 | Sap Aktiengesellschaft | Auto completion of relationships between objects in a data model |
WO2000055741A1 (en) * | 1999-03-18 | 2000-09-21 | Blink.Com, Inc. | Synergistic internet bookmarks combining internet searching and hot linking |
US6928446B2 (en) * | 1999-11-05 | 2005-08-09 | W. W. Grainger, Inc. | System and method for data storage and retrieval |
US20040093330A1 (en) * | 1999-11-05 | 2004-05-13 | W.W. Grainger, Inc. | System and method for data storage and retrieval |
US6353821B1 (en) * | 1999-12-23 | 2002-03-05 | Bull Hn Information Systems Inc. | Method and data processing system for detecting patterns in SQL to allow optimized use of multi-column indexes |
US20020103933A1 (en) * | 2001-01-29 | 2002-08-01 | Ross Garon | Internet-access enabled device personalization |
US20020184225A1 (en) * | 2001-05-31 | 2002-12-05 | Hovhannes Ghukasyan | Automatic generation of join graphs for relational database queries |
US6996567B2 (en) * | 2001-05-31 | 2006-02-07 | Heuristic Physics Laboratories, Inc. | Automatic generation of join graphs for relational database queries |
US7069263B1 (en) * | 2002-02-19 | 2006-06-27 | Oracle International Corporation | Automatic trend analysis data capture |
US7761439B1 (en) * | 2004-06-30 | 2010-07-20 | Google Inc. | Systems and methods for performing a directory search |
US20130151497A1 (en) * | 2004-09-30 | 2013-06-13 | Siraj Khaliq | Providing information relating to a document |
US8954876B1 (en) * | 2007-10-09 | 2015-02-10 | Teradici Corporation | Method and apparatus for providing a session status indicator |
US20140280260A1 (en) * | 2013-03-15 | 2014-09-18 | Eric Boukobza | Method, apparatus, and computer-readable medium for data tokenization |
US9336256B2 (en) * | 2013-03-15 | 2016-05-10 | Informatica Llc | Method, apparatus, and computer-readable medium for data tokenization |
US20170286474A1 (en) * | 2016-03-31 | 2017-10-05 | Toshiba Global Commerce Solutions Holdings Corporation | Generating Source Code for Creating Database Triggers |
US10678774B2 (en) * | 2016-03-31 | 2020-06-09 | Toshiba Global Commerce Solutions Holdings Corporation | Generating source code for creating database triggers |
US10402402B2 (en) * | 2016-09-28 | 2019-09-03 | Ping An Technology (Shenzhen) Co., Ltd. | Method, device, server and storage apparatus of reviewing SQL |
US11188567B2 (en) | 2016-10-25 | 2021-11-30 | Hitachi, Ltd. | Data analysis support apparatus and data analysis support system |
EP3940478A4 (en) * | 2019-03-15 | 2022-11-16 | OMRON Corporation | Control system, control method, and control program |
CN113518950A (en) * | 2019-03-15 | 2021-10-19 | 欧姆龙株式会社 | Control system, control method, and control program |
US20220147520A1 (en) * | 2019-03-15 | 2022-05-12 | Omron Corporation | Control system, control method, and control program |
US20220300495A1 (en) * | 2019-03-15 | 2022-09-22 | Omron Corporation | Control system, control method, and control program |
US11709826B2 (en) * | 2019-03-15 | 2023-07-25 | Omron Corporation | Control system, control method, and control program |
US11829355B2 (en) * | 2019-03-15 | 2023-11-28 | Omron Corporation | Control system, control method, and control program |
US20200380425A1 (en) * | 2019-05-29 | 2020-12-03 | Amadeus S.A.S. | System and method of generating aggregated functional data |
US11475052B1 (en) * | 2019-11-08 | 2022-10-18 | Tableau Software, Inc. | Using visual cues to validate object models of database tables |
US11567920B2 (en) * | 2020-09-15 | 2023-01-31 | Sap Se | Master data mapping scheme permitting querying |
US20220269702A1 (en) * | 2021-02-19 | 2022-08-25 | Sap Se | Intelligent annotation of entity-relationship data models |
Also Published As
Publication number | Publication date |
---|---|
JP3779431B2 (en) | 2006-05-31 |
JPH113257A (en) | 1999-01-06 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US6052687A (en) | Relational database search system and method, and intermediate link table generating method and storage medium | |
US7137065B1 (en) | System and method for classifying electronically posted documents | |
US6763517B2 (en) | Automated analysis of kernel and user core files including searching, ranking, and recommending patch files | |
US6480842B1 (en) | Dimension to domain server | |
US5764973A (en) | System for generating structured query language statements and integrating legacy systems | |
US8244795B2 (en) | Page aggregation for web sites | |
Dowler et al. | Table access protocol version 1.0 | |
US6665665B1 (en) | Compressed document surrogates | |
US7451129B2 (en) | System and method for providing preferred language ordering of search results | |
US8140563B2 (en) | Searching in a computer network | |
US6105043A (en) | Creating macro language files for executing structured query language (SQL) queries in a relational database via a network | |
EP1610235B1 (en) | A data processing system and method | |
US20060155689A1 (en) | Web-based user interface for searching metadata-driven relational databases | |
US20020038308A1 (en) | System and method for creating a virtual data warehouse | |
US20030158947A1 (en) | Enabling online and offline operation | |
US20020042789A1 (en) | Internet search engine with interactive search criteria construction | |
US7668888B2 (en) | Converting object structures for search engines | |
US20070214104A1 (en) | Method and system for locking execution plan during database migration | |
US20090327277A1 (en) | Methods and apparatus for reusing data access and presentation elements | |
US20090204588A1 (en) | Method and apparatus for determining key attribute items | |
US8819072B1 (en) | Promoting data from structured data files | |
US20110173215A1 (en) | Retrieval system, retrieval space map server apparatus and program | |
US7979431B2 (en) | System and method for automatically modifying a query within a web based database system | |
Dowler et al. | IVOA recommendation: table access protocol version 1.0 | |
US20100185606A1 (en) | Development document data management device, development document data management system, development document data management method, program therefor, and recording medium |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: FUJITSU LIMITED, JAPANFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:MIURA, IWAO;SAKAKI, YOUKO;REEL/FRAME:008916/0632Effective date: 19971203 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
FEPP | Fee payment procedure |
Free format text: PAYOR NUMBER ASSIGNED (ORIGINAL EVENT CODE: ASPN); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
FEPP | Fee payment procedure |
Free format text: PAYER NUMBER DE-ASSIGNED (ORIGINAL EVENT CODE: RMPN); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYFree format text: PAYOR NUMBER ASSIGNED (ORIGINAL EVENT CODE: ASPN); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
FPAY | Fee payment |
Year of fee payment: 8 |
|
FPAY | Fee payment |
Year of fee payment: 12 |
|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:FUJITSU LIMITED;REEL/FRAME:028411/0838Effective date: 20120329 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044695/0115Effective date: 20170929 |
US9189498B1 - Low-overhead image search result generation - Google Patents
Low-overhead image search result generation Download PDFInfo
- Publication number
- US9189498B1 US9189498B1 US14/609,961 US201514609961A US9189498B1 US 9189498 B1 US9189498 B1 US 9189498B1 US 201514609961 A US201514609961 A US 201514609961A US 9189498 B1 US9189498 B1 US 9189498B1
- Authority
- US
- United States
- Prior art keywords
- image
- images
- rankings
- results
- query image
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active
Links
Images
Classifications
-
- G06F17/30247—
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/50—Information retrieval; Database structures therefor; File system structures therefor of still image data
- G06F16/58—Retrieval characterised by using metadata, e.g. metadata not derived from the content or metadata generated manually
- G06F16/583—Retrieval characterised by using metadata, e.g. metadata not derived from the content or metadata generated manually using metadata automatically derived from the content
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/50—Information retrieval; Database structures therefor; File system structures therefor of still image data
- G06F16/51—Indexing; Data structures therefor; Storage structures
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/50—Information retrieval; Database structures therefor; File system structures therefor of still image data
- G06F16/53—Querying
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/953—Querying, e.g. by the use of web search engines
- G06F16/9538—Presentation of query results
-
- G06F17/3028—
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F18/00—Pattern recognition
- G06F18/20—Analysing
- G06F18/22—Matching criteria, e.g. proximity measures
-
- G06K9/6201—
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/50—Information retrieval; Database structures therefor; File system structures therefor of still image data
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/953—Querying, e.g. by the use of web search engines
- G06F16/9535—Search customisation based on user profiles and personalisation
-
- G06F17/30244—
-
- G06F17/30867—
Definitions
- the World Wide Web (“web”) contains a vast amount of information.
- a search engine may assist a user in locating images, located on the web, that are similar to a query image.
- Information retrieval systems aim to identify resources, such as web pages, images, text documents, multimedia context, etc., that are relevant to a user's needs, and to present information about the resources in a manner that is most useful to the user.
- Internet search engines return a set of search results in response to a user submitted query.
- the search results identify resources responsive to a user's query.
- the identified resources can include varying types of content including documents, text, images, video, and audio.
- An image search is a search for image content responsive to an input query.
- An image can include a static graphic representative of some content, for example, photographs, drawings, computer generated graphics, advertisements, web content, book content.
- An image can also include a collection of image frames, for example, of a movie or a slideshow.
- a method may include identifying a plurality of images that are similar to a query image; generating, by at least one of the one or more server devices, a plurality of sets of rankings of the identified images based on a plurality of image attributes; comparing, by at least one of the one or more server devices, the generated plurality of sets of rankings of the identified image results to a reference set of rankings of images; selecting, based on the comparing and by at least one of the one or more server devices, a particular set of rankings; and ranking, by at least one of the one or more server devices, a plurality of image results that are associated with another query image, based on an attribute associated with the selected particular set of rankings.
- selecting the particular set of rankings may include identifying that an order of image results in the particular set of rankings matches an order of images in the reference set more closely than orders of image results in the other sets of rankings, of the set of sets of rankings.
- the method may further include ranking the image results based on similarity of the image results to the first query image; grouping the image results, of the set of image results; and generating the reference ranking set by ranking the image results, of the set of image results, based on the grouping.
- grouping the image results may include identifying images, of the set of images, that are visually similar to each other, and grouping the images, of the set of images, that have been identified as being visually similar to each other.
- ranking the image results based on the grouping may include identifying, for each group, a similarity score based on a similarity of at least one image result in the group to the query image; ranking the image results based on similarity scores of respective groups associated with the image results.
- the other query image may be identical to the query image.
- the method may further include receiving a third query image; determining that the third query image is identical to or similar to the first query image; and storing information associating the particular attribute with the third query image based on determining that the third query image is identical to or similar to the first query image.
- a method may include receiving a first query image that is associated with a group of different attributes; receiving a first group of image results that are similar to the first query image; ranking the image results, of the first group of image results, based on similarity of the image results to the first query image; grouping the image results, of the first group of image results.
- the grouping may include identifying image results, of the first group of image results, that are visually similar to each other, and grouping image results, of the first group of image results, that have been identified as being visually similar to each other.
- the method may further include generating a reference ranking set by re-ranking the image results, of the first group of image results, based on the grouping; generating a group of ranked sets of image results.
- At least a particular one of the generated sets of image results may include the first group of image results, and each different set of image results may be ranked based on a different particular attribute of the group of different attributes.
- the method may also include comparing the group of ranked sets of image results to the reference ranking set; identifying a particular ranked set, of the group of ranked sets of image results, that has a ranking that is most similar to a ranking of the reference ranking set; identifying a particular attribute, based on which the particular ranked set is ranked; and ranking, based on the identified particular attribute, a second group of image results, based on receiving a second query image.
- ranking the image results of the second set of image results may include forgoing grouping the second set of image based on visual similarity.
- the method may further include storing information associating the query image with the particular attribute; and receiving, after storing the information, the second query image from a client device.
- the second query image may be a same image as the first query image.
- the method may further include receiving the second set of image results.
- the second set of image results may be similar to the second query image.
- the method may further include presenting, to the client device, information regarding the ranked image results, of the second set of image results.
- the method may further include receiving a third query image; determining that the third query image is identical to or similar to the first query image; and storing information associating the particular attribute with the third query image based on determining that the third query image is identical to or similar to the first query image.
- comparing the set of ranked sets of image results to the reference ranking set may include performing a Kendall's tau distance comparison between each ranked set, of the set of ranked sets of image results, to the reference ranking set.
- ranking the second set of image results, based on the identified attribute may include using a function, that more heavily weights the identified attribute than other attributes, to calculate a weighted distance between each image result, of the second set of image results, and the second query image; and ranking the second set of image results based on the calculated weighted distances.
- the set of attributes may include a first quantity of different attributes
- the generated set of ranked sets of image results may include a second quantity of ranked sets of image results
- the first quantity and the second quantity may be equal.
- a computer-readable medium may include computer-executable instructions which, when executed by one or more processors, cause the one or more processors to perform one or more of the acts mentioned above.
- An image search engine may continuously analyze a query image and images associated with the query image over time to determine which attributes of the images to more heavily weight. Using such a technique, the image search engine of some implementations may continuously learn which attribute and/or attributes of the images to more heavily weight, in order to continuously generate more relevant image result rankings for the query image.
- the image search engine of some implementations may efficiently identify the relevant image results by storing an indication of which attribute and/or attributes of the image results to more heavily weight.
- the image search engine may store an indication of one or more attributes, and may generate the image results based on the one or more attributes. Additionally, using a ranking technique that more heavily weights the attribute and/or attributes may consume less time and/or processing resources than other techniques of ranking image results.
- FIGS. 1A and 1B illustrate an overview of an example implementation described herein
- FIG. 2 illustrates an example environment in which systems and/or methods described herein may be implemented
- FIG. 3 shows an example of a generic computer device and a generic mobile computer device according to one or more implementations
- FIG. 4 illustrates example functional components of a search system, according to one or more implementations described herein;
- FIG. 5 illustrates a flowchart of an example process for ranking image search results based on clustering, according to one or more implementations described herein;
- FIG. 6 illustrates a flowchart of an example process for storing information associating a dimension with a query image, according to one or more implementations described herein;
- FIG. 7 illustrates a flowchart of an example process for presenting image results, ranked based on a weighted distance function associated with a query image, according to one or more implementations described herein;
- FIGS. 8-11 illustrate examples of receiving a query image, according to one or more implementations described herein.
- FIG. 12 illustrates an example of selecting an attribute associated with a query image, according to one or more implementations described herein.
- a system and/or method, described herein, may enable one or more devices, such as one or more server devices implementing an image search engine, to present images that are visually similar to a query image.
- the image search engine may analyze the query image and image results, associated with the query image, to determine one or more attributes of the image results to more heavily weight, than other attributes of the image results, when ranking the image results associated with the query image.
- FIGS. 1A and 1B are diagrams of example user interfaces that illustrate one or more implementations described herein.
- FIG. 1A illustrates an example user interface 100 , which may be provided by a search engine.
- User interface 100 may be displayed at a client device via a browser.
- User interface 100 may include information regarding image search results that are similar to query image 105 .
- user interface 100 may include thumbnail images that represent image search results 110 - 160 .
- Each of image search results 110 - 160 may be ranked by the search engine based on one or more criteria, such as a similarity of each image search result to query image 105 ; a similarity of each thumbnail image, corresponding to one of image search results 110 - 160 , to query image 105 ; etc. As shown in FIG. 1A , one or more of image search results 110 - 160 may not be ranked optimally. That is, one or more image search results 110 - 160 , which may be recognized by a user as being more visually similar to query image 105 than other image search results 110 - 160 , may be ranked lower than the other search results 110 - 160 .
- image search result 140 may be more visually similar to query image 105 than image search results 125 - 135 , but the search engine may have ranked image search result 140 below image search results 125 - 135 .
- image search results 150 - 160 may be more visually similar to query image 105 than image search results 125 - 135 and 145 , but the search engine may have ranked image search result 140 below image search results 125 - 135 and 145 .
- image search result 135 may be more visually similar to query image 105 than image search result 130 , but the search engine may have ranked image search result 135 below image search result 130 .
- FIG. 1B illustrates example user interface 165 , which may be provided by a search engine according to one or more implementations described herein.
- User interface 165 may be displayed at a client device via a browser.
- User interface 165 may include information regarding image search results that are similar to query image 105 .
- user interface 165 may include thumbnail images that represent image search results 110 - 160 .
- Query image 105 may be the same as query image 105 , shown in FIG. 1A .
- image search results 110 - 160 shown in FIG. 1B
- the ranking of image search results 110 - 160 may be different than the ranking of image search results 110 - 160 , shown in FIG. 1A .
- image search results 110 - 120 , 140 , and 150 - 160 may be ranked higher than image search results 125 - 130 and 145 .
- image search results 125 and 135 may be ranked higher than image search results 130 and 145 .
- the ranking shown in FIG. 1B may more closely match a ranking that is based on how visually similar a user may perceive a search image result to be to a query image, such as query image 105 .
- search image results that are visually similar to each other may be consecutively ranked.
- image search results 110 - 120 , 140 , and 150 - 160 may be consecutively ranked, as opposed to other image search results being ranked between image search results 110 - 120 , 140 , and 150 - 160 .
- FIG. 2 is a diagram of an example environment 200 in which systems and/or methods described herein may be implemented.
- Environment 200 may include a server, such as search system 205 , and client 230 connected to network 235 .
- client 230 One search system 205 one client 230 have been illustrated as connected to network 235 for simplicity.
- environment 200 may include additional clients and/or servers or fewer clients and/or servers.
- a client may perform a function of a server
- a server may perform a function of a client.
- Search system 210 may be implemented as a single server device or a collection of server devices that may be co-located or remotely located. Additionally, or alternatively, server 210 may be implemented within a single, common server device or a single, common collection of server devices.
- Search system 210 may include server devices that gather, process, search, and/or implement functions in a manner described herein. For example, search system 210 may perform functions described with respect to one or more components described below with respect to FIG. 4 . Additional servers, implementing other functions may also be implemented in environment 200 . The additional servers may provide, for example, web content, payment services, shopping services, social networking services, etc.
- Client 230 may include a client device, such as personal computer, a wireless telephone, a personal digital assistant (“PDA”), a tablet computer, a laptop, or another type of computation or communication device.
- Client 230 may include user interfaces, such as user interfaces 100 and/or 165 , presented through one or more browsers, e.g., web browsers.
- Network 235 may include any type of network, such as a local area network (“LAN”), a wide area network (“WAN”), a telephone network—e.g., the Public Switched Telephone Network (“PSTN”) or a cellular network—an intranet, the Internet, or a combination of networks.
- Search system 205 and client 230 may connect to network 235 via wired and/or wireless connections.
- any search system 205 and/or client 230 may connect to network 235 via a wired connection, a wireless connection, or a combination of a wired connection and a wireless connection.
- FIG. 3 shows an example of a generic computing device 300 and a generic mobile computing device 350 , which may be used with the techniques described here.
- Generic computing device 300 and generic mobile computing device 350 may correspond to, for example, any of search system 205 and/or client 230 .
- Computing device 300 is intended to represent various forms of digital computers, such as laptops, desktops, workstations, personal digital assistants, servers, blade servers, mainframes, and other appropriate computers.
- Mobile computing device 350 is intended to represent various forms of mobile devices, such as personal digital assistants, cellular telephones, smart phones, and other similar computing devices.
- the components shown in FIG. 3 their connections and relationships, and their functions, are meant to be examples only, and are not meant to limit implementations of the implementations described in this document.
- Computing device 300 may include a processor 302 , memory 304 , a storage device 306 , a high-speed interface 308 connecting to memory 304 and high-speed expansion ports 310 , and a low speed interface 312 connecting to low speed bus 314 and storage device 306 .
- Each of the components 302 , 304 , 306 , 308 , 310 , and 312 are interconnected using various busses, and may be mounted on a common motherboard or in other manners as appropriate.
- Processor 302 can process instructions for execution within the computing device 300 , including instructions stored in the memory 304 or on the storage device 306 to display graphical information for a graphical user interface (“GUI”) on an external input/output device, such as display 316 coupled to high speed interface 308 .
- GUI graphical user interface
- multiple processors and/or multiple buses may be used, as appropriate, along with multiple memories and types of memory.
- multiple computing devices 300 may be connected, with each device providing portions of the necessary operations, e.g., as a server bank, a group of blade servers, or a multi-processor system, etc.
- Memory 304 stores information within the computing device 300 .
- memory 304 includes a volatile memory unit or units.
- memory 304 includes a non-volatile memory unit or units.
- the memory 304 may also be another form of computer-readable medium, such as a magnetic or optical disk.
- a computer-readable medium may be defined as a non-transitory memory device.
- a memory device may include space within a single physical memory device or spread across multiple physical memory devices.
- the storage device 306 is capable of providing mass storage for the computing device 300 .
- storage device 306 may be or may include a computer-readable medium, such as a floppy disk device, a hard disk device, an optical disk device, or a tape device, a flash memory or other similar solid state memory device, or an array of devices, including devices in a storage area network or other configurations.
- a computer program product can be tangibly embodied in an information carrier.
- the computer program product may also contain instructions that, when executed, perform one or more methods, such as those described herein.
- the information carrier is a computer or machine-readable medium, such as memory 304 , storage device 306 , or memory on processor 302 .
- High speed controller 308 manages bandwidth-intensive operations for the computing device 300 , while low speed controller 312 manages lower bandwidth-intensive operations. Such allocation of functions is an example only.
- high-speed controller 308 is coupled to memory 304 , display 316 , e.g., through a graphics processor or accelerator, and to high-speed expansion ports 310 , which may accept various expansion cards.
- low-speed controller 312 is coupled to storage device 306 and low-speed expansion port 314 .
- the low-speed expansion port which may include various communication ports, e.g., USB, Bluetooth, Ethernet, wireless Ethernet, may be coupled to one or more input/output devices, such as a keyboard, a pointing device, a scanner, or a networking device such as a switch or router, e.g., through a network adapter.
- input/output devices such as a keyboard, a pointing device, a scanner, or a networking device such as a switch or router, e.g., through a network adapter.
- Computing device 300 may be implemented in a number of different forms, as shown in the figure. For example, it may be implemented as a standard server 320 , or multiple times in a group of such servers. It may also be implemented as part of a rack server system 324 . In addition, it may be implemented in a personal computer such as a laptop computer 322 . Alternatively, components from computing device 300 may be combined with other components in a mobile device, such as mobile computing device 350 . Each of such devices may contain one or more of computing devices 300 , 350 , and an entire system may be made up of multiple computing devices 300 , 350 communicating with each other.
- Mobile computing device 350 may include a processor 352 , memory 364 , an input/output (“I/O”) device such as a display 354 , a communication interface 366 , and a transceiver 368 , among other components.
- Mobile computing device 350 may also be provided with a storage device, such as a micro-drive or other device, to provide additional storage.
- a storage device such as a micro-drive or other device, to provide additional storage.
- Each of the components 350 , 352 , 364 , 354 , 366 , and 368 are interconnected using various buses, and several of the components may be mounted on a common motherboard or in other manners as appropriate.
- Processor 352 can execute instructions within mobile computing device 350 , including instructions stored in memory 364 .
- Processor 352 may be implemented as a chipset of chips that include separate and multiple analog and digital processors.
- Processor 352 may provide, for example, for coordination of the other components of mobile computing device 350 , such as control of user interfaces, applications run by mobile computing device 350 , and wireless communication by mobile computing device 350 .
- Processor 352 may communicate with a user through control interface 358 and display interface 356 coupled to a display 354 .
- Display 354 may be, for example, a TFT LCD (Thin-Film-Transistor Liquid Crystal Display) or an OLED (Organic Light Emitting Diode) display, or other appropriate display technology.
- Display interface 356 may include appropriate circuitry for driving display 354 to present graphical and other information to a user.
- Control interface 358 may receive commands from a user and convert them for submission to the processor 352 .
- an external interface 362 may be provide in communication with processor 352 , so as to enable near area communication of mobile computing device 350 with other devices.
- External interface 362 may provide, for example, for wired communication in some implementations, or for wireless communication in other implementations, and multiple interfaces may also be used.
- Memory 364 stores information within mobile computing device 350 .
- Memory 364 can be implemented as one or more of a computer-readable medium or media, a volatile memory unit or units, or a non-volatile memory unit or units.
- Expansion memory 374 may also be provided and connected to mobile computing device 350 through expansion interface 372 , which may include, for example, a SIMM (Single In Line Memory Module) card interface.
- SIMM Single In Line Memory Module
- expansion memory 374 may provide extra storage space for device 350 , or may also store applications or other information for mobile computing device 350 .
- expansion memory 374 may include instructions to carry out or supplement the processes described above, and may include secure information also.
- expansion memory 374 may be provide as a security module for mobile computing device 350 , and may be programmed with instructions that permit secure use of device 350 .
- secure applications may be provided via the SIMM cards, along with additional information, such as placing identifying information on the SIMM card in a non-hackable manner.
- Expansion memory 374 may include, for example, flash memory and/or NVRAM memory.
- a computer program product is tangibly embodied in an information carrier.
- the computer program product contains instructions that, when executed, perform one or more methods, such as those described above.
- the information carrier is a computer-or machine-readable medium, such as the memory 364 , expansion memory 374 , or memory on processor 352 , that may be received, for example, over transceiver 368 or external interface 362 .
- Mobile computing device 350 may communicate wirelessly through communication interface 366 , which may include digital signal processing circuitry where necessary. Communication interface 366 may provide for communications under various modes or protocols, such as GSM voice calls, SMS, EMS, or MMS messaging, CDMA, TDMA, PDC, WCDMA, CDMA2000, or GPRS, among others. Such communication may occur, for example, through radio-frequency transceiver 368 . In addition, short-range communication may occur, such as using a Bluetooth, WiFi, or other such transceiver. In addition, GPS (Global Positioning System) receiver module 370 may provide additional navigation- and location-related wireless data to mobile computing device 350 , which may be used as appropriate by applications running on mobile computing device 350 .
- GPS Global Positioning System
- Mobile computing device 350 may also communicate audibly using audio codec 360 , which may receive spoken information from a user and convert it to usable digital information. Audio codec 360 may likewise generate audible sound for a user, such as through a speaker, e.g., in a handset of mobile computing device 350 . Such sound may include sound from voice telephone calls, may include recorded sound, e.g., voice messages, music files, etc., and may also include sound generated by applications operating on mobile computing device 350 .
- Audio codec 360 may receive spoken information from a user and convert it to usable digital information. Audio codec 360 may likewise generate audible sound for a user, such as through a speaker, e.g., in a handset of mobile computing device 350 . Such sound may include sound from voice telephone calls, may include recorded sound, e.g., voice messages, music files, etc., and may also include sound generated by applications operating on mobile computing device 350 .
- Mobile computing device 350 may be implemented in a number of different forms, as shown in the figure. For example, it may be implemented as a cellular telephone 380 . It may also be implemented as part of a smart phone 382 , personal digital assistant, or other similar mobile device.
- implementations of the systems and techniques described herein can be realized in digital electronic circuitry, integrated circuitry, specially designed ASICs (application specific integrated circuits), computer hardware, firmware, software, and/or combinations thereof.
- ASICs application specific integrated circuits
- These various implementations can include implementations in one or more computer programs that are executable and/or interpretable on a programmable system including at least one programmable processor, which may be special or general purpose, coupled to receive data and instructions from, and to transmit data and instructions to, a storage system, at least one input device, and at least one output device.
- the systems and techniques described herein can be implemented on a computer having a display device, e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor, for displaying information to the user and a keyboard and a pointing device, e.g., a mouse or a trackball, by which the user can provide input to the computer.
- a display device e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor
- a keyboard and a pointing device e.g., a mouse or a trackball
- Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form, including acoustic, speech, or tactile input.
- the systems and techniques described herein can be implemented in a computing system that includes a back end component, e.g., as a data server, or that includes a middleware component, e.g., an application server, or that includes a front end component, e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the systems and techniques described here, or any combination of such back end, middleware, or front end components.
- the components of the system can be interconnected by any form or medium of digital data communication, e.g., a communication network. Examples of communication networks include a LAN, a WAN, and the Internet.
- FIG. 4 illustrates example functional components of search system 205 , according to one or more implementations described herein.
- Search system 205 may include image result identification engine 405 , index 410 , image-dimension repository 415 , image result re-ranking engine 420 , and dimension selection engine 425 .
- search system 205 may include fewer components, additional components, or different components.
- one or more components shown in FIG. 4 may perform the functions of one or more other components shown in FIG. 4 .
- Image result identification engine 405 may receive a query image, e.g., from a client device.
- the query image may be, for example, an image file stored by the client device, captured via an input device, such as a camera, at the client device, etc.
- the query image may be uploaded by the client device, a link to the query image may be provided by the client device, etc. Additionally, or alternatively, the query image may be presented as an image result, and a user at the client may indicate that the user wishes to view more images similar to the query image.
- Image result identification engine 405 may identify a set of image results based on the query image.
- the image results may include a set of images that are visually similar to the query image.
- image result identification engine 405 may use one or more techniques to determine a respective similarity of each image result to the query image.
- image result identification engine 405 may rank the image results, based on the respective similarity of each image result, to the query image, using one or more techniques.
- search system 205 may use these image results to improve the ranking of image results. Additionally, or alternatively, search system 205 may provide these image results to a client, such as the client from which the query image was received.
- Image result identification engine 405 may receive the image results from index 410 , which may store information regarding images, such as the images themselves and/or links to the images.
- the images, for which information is stored in index 410 may be images that were identified, e.g., by a web crawler, as being included in documents, such as web pages, news articles, blogs, or the like.
- index 410 may store images in an original format. That is, index 410 may store the images in a format associated with the images, as identified by the web crawler. For example, if the web crawler identifies that a first image is associated with a first format, index 410 may store the first image in the first format. Further, if the web crawler identifies that a second image is associated with a different second format, index 410 may store the second image in the second format.
- index 410 may store the images in a different format than the original format associated with the images. That is, while the web crawler may identify that a particular image is associated with a first format, index 410 may store the particular image in a different second format in lieu of, or in addition to, storing the particular image in the first format. In some implementations, index 410 may generate the particular image in the second format by converting the particular image from the first format to the second format. In other implementations, another component may generate the particular image in the second format by converting the particular image from the first format to the second format.
- a format of an image may refer to, for example, an image compression technique.
- Some image compression techniques may reduce the file size of an image file, without significantly and/or perceptibly impacting the visual representation of the image.
- Examples of image compression techniques may include Joint Photographic Experts Group (“JPEG”), Graphics Interchange Format (“GIF”), Portable Network Graphics (“PNG”), Tagged Image File Format (“TIFF”), WebP, or the like.
- An uncompressed image format may include, for example, an uncompressed bitmap image.
- an image compression technique may fully represent an image as a set of values, also referred to as dimensions.
- one particular attribute of a compressed image may be a dimension of the image.
- One particular image compression technique may represent each image, compressed using the particular image compression technique, as a set of dimensions.
- the quantity of dimensions, produced using the particular image compression technique may be the same from image to image. For example, a first image, generated using the particular image compression technique, may be represented as a set of 59 dimensions. A different second image, generated using the same particular image compression technique, may be represented as a different set of 59 dimensions.
- Image-dimension repository 415 may store information associating a particular image with one or more dimensions. As described further below, image result identification engine 405 may receive the information associating the particular image with one or more dimensions, and may use this information when ranking the image results.
- Image result re-ranking engine 420 may receive the image results from image result identification engine 405 and may re-rank the image results. In order to re-rank the image results, image result re-ranking engine 420 may form similarity clusters, and group the image results into similarity clusters. In order to form the similarity clusters, image result re-ranking engine 420 may use one or more clustering techniques, such as performing a pair-wise similarity comparison of each image result to each other image, performing spectral clustering, and/or hierarchical clustering. When comparing a particular image result to another particular image result, image result re-ranking engine 420 may compare a distance of each dimension of the two image results. The distance may be a simple difference, a Euclidean distance, or any other type of distance.
- image result re-ranking engine 420 may compare the distance between a first value, associated with a first dimension of the first image, and a second value, associated with the first dimension of the second image; image result re-ranking engine 420 may compare the distance between a third value, associated with a second dimension of the first image, and a fourth value, associated with the second dimension of the second image; and so on.
- image result re-ranking engine 420 may, for example, compare a similarity of image result 110 to each of image results 115 - 160 , may compare a similarity of image result 115 to each of image results 110 and 120 - 160 , and so on.
- Image result re-ranking engine 420 may form the clusters based on images that are within a particular threshold distance of each of each other. In other words, the formed clusters may include images that are similar to each other, within a particular similarity threshold.
- image result re-ranking engine 420 may form a first cluster that includes image results 110 - 120 , 140 , and 150 - 160 ; a second cluster that includes image results 125 and 135 ; a third cluster that includes image 130 ; and a fourth cluster that includes image result 145 .
- Image result re-ranking engine 420 may re-rank image results 110 - 160 using any ranking technique. For example, in some implementations, image result re-ranking engine 420 may rank the clusters based on one or more factors, such as a quantity of image results in each cluster, similarity of the image results in a cluster to the query image, highest ranking image result in the cluster, average ranking of results in the cluster, median ranking of results in the cluster, any combination of the above, etc.
- factors such as a quantity of image results in each cluster, similarity of the image results in a cluster to the query image, highest ranking image result in the cluster, average ranking of results in the cluster, median ranking of results in the cluster, any combination of the above, etc.
- image result re-ranking engine 420 may rank the clusters in the following order: first cluster that includes image results 110 - 120 , 140 , and 150 - 160 ; second cluster that includes image results 125 and 135 ; third cluster that includes image 130 ; and fourth cluster that includes image result 145 .
- image result re-ranking engine 420 may re-rank the image results based on the ranking of the respective cluster in which the image result is included.
- image result re-ranking engine may rank image results within clusters.
- image result re-ranking engine may rank image results within clusters based on measure of a similarity between the image results and the query image.
- image result re-ranking engine may rank image results based on clusters associated with the image results and/or a measure of similarity between the image results and the query image.
- image result re-ranking engine 420 may rank the example image results in the following order: 110 , 115 , 120 , 140 , 150 , 155 , 160 , 125 , 135 , 130 , and 145 .
- Dimension selection engine 425 may analyze the re-ranked image results, ranked by image result re-ranking engine 420 220 , in order to determine one or more dimensions associated with the query image. As described below, image result identification engine 405 may use the one or more dimensions when ranking image results. When analyzing the re-ranked image results, dimension selection engine 425 may generate a set of T distances between the query image and each image result, where T is a quantity of dimensions associated with an image compression format of the query image. Each set of distances, of the T sets of distances, may be based on a function that more heavily weights a particular dimension than other distances, in the T sets of distances, weight the particular dimension.
- D t (x q , x i ) may refer to the distance, weighting the dimension t, between a query image x q and a particular image result x i .
- d may refer to a distance between the query image x q and the particular image result x i
- c may refer to a constant
- x q,t may refer to a value corresponding to the dimension t associated with the query image x q
- x i,t may refer to a value corresponding to the dimension t associated with the particular image result x i .
- i is the quantity of image results
- each set of distances, in the T sets of distances may include i distances.
- dimension selection engine 425 may generate i*T distances in total.
- dimension selection engine 425 may rank the image results according to the respective distances in the particular set of distances. Thus, dimension selection engine 425 may generate T sets of rankings of the image results based on the respective weighted distances of the image results from the query image, with each set of rankings more heavily weighting a different dimension.
- Dimension selection engine 425 may compare the respective order of each of the T sets of rankings to the order of the re-ranked results received from image result re-ranking engine 420 , in order to determine which set of rankings, of the T sets of rankings, is closest to the re-ranked results received from image result re-ranking engine 420 .
- dimension selection engine 425 may use a Kendall's tau (“Kendall's ⁇ ”) distance function to determine which set of rankings, of the T sets of rankings, is closest to the re-ranked results received from image result re-ranking engine 420 .
- dimension selection engine 425 may use the Kendall's ⁇ distance function between each set of rankings, of the T set of rankings, and the re-ranked results received from image result re-ranking engine 420 .
- ⁇ may represent the distance between a particular set of rankings and the re-ranked results received from image result re-ranking engine 420
- P may represent the quantity of concordant pairs of rankings
- Q may represent the quantity of discordant pairs of rankings.
- Dimension selection engine 425 may select a particular set of rankings, associated with the highest result of the Kendall's ⁇ distance function between the T sets of rankings and the re-ranked results received from image result re-ranking engine 420 .
- dimension selection engine 425 may identify a dimension associated with the selected particular set of rankings Additionally, dimension selection engine 425 may provide information associating the identified dimension with the query image to image-dimension repository 415 .
- the Kendall's ⁇ distance function may indicate that the distance between the particular set of rankings and the re-ranked results is a value that reflects that the order of the particular set of rankings is identical to the order of the re-ranked results, such as a value of 1, 100, or another value.
- the Kendall's ⁇ distance function may indicate that the distance between the particular set of rankings and the re-ranked results received from image result re-ranking engine 420 is a value that reflects that the order of the particular set of rankings is the reverse of to the order of the re-ranked results, such as a value of 0.
- the Kendall's ⁇ distance function may indicate that the distance between the particular set of rankings and the re-ranked results received from image result re-ranking engine 420 is a value that is in between the values in the examples described above, such as a value of 0.4, 0.5, 0.6, 40, 50, 60, etc.
- dimension selection engine 425 may determine a similarity between each set of rankings, of the T set of rankings, and the re-ranked results received from image result re-ranking engine 420 using any function that indicates the similarity.
- Image result identification engine 405 may use the identified dimension in subsequent image searches when the same query image is received. For example, assume image result identification engine 405 receives a query image from a client. Image result identification engine 405 may receive an identification of a particular dimension from image-dimension repository 415 , and may also receive a set of image results from index 410 . Image result identification engine 405 may rank the image results, received from index 410 , using a function that weights the particular dimension more heavily than other dimensions. For example, image result identification engine 405 may rank the image results using one or more of Equations 1-3, and/or any other function that weights the particular dimension more heavily than other dimensions. Image result identification engine 405 may provide the ranked image results to the client from which the query image was received.
- image result identification engine 405 may provide the ranked image results to image result re-ranking engine 420 for further processing, as described above.
- image result identification engine 405 may provide the ranked image results to image result re-ranking engine 420 for further processing each time image result identification engine 405 ranks the image results.
- image result identification engine 405 may provide the ranked image results to image result re-ranking engine 420 for further processing every other time that image result identification engine 405 ranks the image results for the particular query image, every three times that image result identification engine 405 ranks the image results for the particular query image, every four times that image result identification engine 405 ranks the image results for the particular query image, etc.
- image result identification engine 405 may forgo providing these ranked images to image result re-ranking engine 420 for further processing.
- search system 205 may further improve the ranking performed by image result identification engine 405 .
- dimension selection engine 425 may determine that a particular image is associated with a different dimension than previously identified by dimension selection engine 425 . Additionally, or alternatively, dimension selection engine 425 may determine that a particular image is associated with an additional dimension. In such a scenario, image result identification engine 405 may rank image results using a function that weights multiple dimensions more heavily than other dimensions.
- Similar image identification engine 430 may receive an image from, for example, a client device, index 410 , and/or any other device. Similar image identification engine 430 may determine whether the received image is associated with a selected dimension. For example, similar image identification engine 430 may identify whether image-dimension repository 415 stores information associating the received image, an identical image, and/or a similar image with a dimension. In order to identify whether image-dimension repository 415 stores information associating the received image, an identical image, and/or a similar image with a dimension, image-dimension repository 415 may compare the received image to images for which information is stored in image-dimension repository 415 . Image-dimension repository 415 may perform this comparison using one or more image comparison techniques.
- image-dimension repository 415 may identify a measure of similarity between the similar or identical image and the received image. In some implementations, image-dimension repository 415 may identify that the similar or identical image is similar or identical to the received image if the measure of similarity exceeds a similarity threshold. In some implementations, if image-dimension repository 415 stores information associating the received image, an identical image, or a similar image with a dimension, search system 205 may forgo subsequently processing the image—e.g., may forgo providing the image to image result identification engine 405 for processing by image result identification engine 405 , image result re-ranking engine 420 , and/or dimension selection engine 425 .
- FIG. 5 illustrates a flowchart of an example process 500 for ranking image search results based on clustering.
- process 500 may be performed by search system 205 .
- process 500 may be performed by one or more other components instead of, or possibly in conjunction with, search system 205 .
- Process 500 may include receiving a query image (block 505 ).
- search system 205 may receive a query image from a client, such as client 230 .
- FIGS. 8-11 illustrated below, illustrate examples of receiving a query image, according to one or more implementations.
- Process 500 may also include identifying images that are similar to the query image (block 510 ).
- search system 205 may identify a set of image results that are similar to the query image.
- the image results may be a particular quantity of the most similar images to the query image.
- the image results may be the 100 most similar images, the 1,000 most similar images, etc.
- Process 500 may further include ranking the images based on similarity to the query image (block 515 ).
- search system 205 may rank the image results using any ranking technique to rank the image results based on similarity to the query image.
- Search system 205 may, for example, rank the image results based on a distance function that is based on some or all of the dimensions associated with the image results and/or the query image. Additionally, or alternatively, search system 205 may rank the image results, based on similarity to the query image, using a distance function that weights one or more dimensions more heavily than one or more other functions.
- Process 500 may additionally include clustering the images based on similarity of the image results to each other (block 520 ).
- search system 205 may generate one or more clusters, based on a similarity of the image results to each other. For instance, as discussed above, search system 205 may perform pair-wise distance comparisons of the image results in order to identify image results that are within a particular distance of each other. In some implementation, search system 205 may cluster the image results that are within the particular distance of each other.
- Process 500 may also include ranking the images based on the clustering (block 525 ).
- search system 205 may re-rank image the image results using any ranking technique. For example, as also discussed above, search system 205 may rank the image results within the clusters, and/or may rank the clusters. Search system 205 may re-rank the image results based on the ranks of the image results within the clusters, and/or based on the ranks of the respective clusters.
- Process 500 may further include outputting information regarding the ranking based on the clustering (block 530 ).
- search system 205 may provide information regarding the re-ranked image results to one or more other components. Additionally, or alternatively, search system 205 may provide information regarding the re-ranked image results to a client, such as client 230 , from which the query image was received.
- FIG. 6 illustrates a flowchart of an example process 600 for storing information associating a dimension with a query image.
- process 600 may be performed by search system 205 .
- process 600 may be performed by one or more other components instead of, or possibly in conjunction with, search system 205 .
- Process 600 may include generating sets of weighted distances between a query image and associated images (block 605 ). For example, as discussed above with respect to dimension selection engine 425 , search system 205 may generate T sets of weighted distances between a query image and image results—e.g., one or more image results identified at block 510 . In some implementations, each set, of the T sets of weighted distances, may be weighted based on a particular dimension, of T dimensions. As also discussed above, to generate the T sets of weighted distances, search system 205 may use one or more of Equations 1-3, and/or any other function that weights a particular dimension higher than other dimensions when generating distances.
- Process 600 may also include generating scores for the sets of weighted distances (block 610 ). For example, as also discussed above with respect to dimension selection engine 425 , search system 205 may generate a score one or more of the sets of weighted distances generated at block 605 , using a function that compares an order of each set of weighted distances to an order of a re-ranked set of image results, such as the re-ranked set of image results identified at block 525 . In one example, as discussed above, the score for a particular set of weighted distances may be generated using a Kendall's ⁇ distance function. Additionally, or alternatively, the score for the particular set of weighted distances may be generated using any function that compares an order of the particular set of weighted distances to the order of the re-ranked set of image results.
- the highest score, out of the generated scores, for the set of weighted distances may correspond to an order of image results that is closest to the order of the re-ranked set of image results.
- search system 205 may generate a score for each set of weighted distances, while in other implementations, search system 205 may generate scores for fewer than all of the sets of weighted distances.
- Process 600 may further include selecting a dimension associated with a set of weighted distances associated with the highest score (block 615 ). For example, as further discussed above with respect to dimension selection engine 425 , search system 205 may determine which dimension, of the T dimensions, is associated with the set of weighted distances with the highest score. Additionally, or alternatively, search system 205 may determine a particular quantity of dimensions associated with a set of the highest scores. For example, search system 205 may identify the top two scores, the top three scores, etc., and select the dimensions associated with the identified scores.
- search system 205 may identify a quantity of scores that are within a particular distance from the top score. For example, assume that the particular distance is 10, and that search system 205 has identified scores of 100, 99, 91, 82, and 85. In this example, search system 205 may select the dimensions associated with the scores of 100, 99, and 91.
- Process 600 may further include outputting information associating the selected dimension(s) with the query image (block 620 ).
- search system 205 may output the information associating the selected dimension(s) with the query image to a repository, such as search system 205 . As discussed further below, this information may be used in subsequent image searches.
- search system 205 may forgo performing some or all of process 600 in some scenarios. For example, as described above, search system 205 may identify that a dimension has been previously selected for a query image and/or an identical or similar image. Search system 205 may select the previously selected dimension for the query image, and may output information associating the selected dimension with the query image.
- FIG. 7 illustrates a flowchart of an example process 700 for presenting image results, ranked based on a weighted distance function associated with a query image.
- process 700 may be performed by search system 205 .
- process 700 may be performed by one or more other components instead of, or possibly in conjunction with, search system 205 .
- Process 700 may include receiving a query image (block 705 ).
- sever 305 may receive a query image from a client, such as client 230 .
- Process 700 may also include identifying images results that are similar to the query image (block 710 ).
- search system 205 may identify a set of image results that are similar to the query image.
- the image results may be a particular quantity of the most similar images, stored by search system 205 , to the query image.
- the image results may be the 100 most similar images, the 1,000 most similar images, etc.
- the image results may be the same format as the query image.
- the image results may be compressed using a compression technique that represents the image results using the same quantity of dimensions as a compression technique that represents the query image.
- Process 700 may also include receiving information identifying a dimension associated with the query image (block 715 ).
- search system 205 may receive the information identifying the dimension associated with the query image from search system 205 . Additionally, or alternatively, search system 205 may receive information identifying more than one dimension associated with the query image from search system 205 .
- Process 700 may further include ranking the images using a weighted distance function associated with the query image (block 720 ).
- search system 205 may use one or more of Equations 1-3, and/or any other function that weights a particular dimension more heavily than other dimensions, to rank the image results.
- e may refer to a constant
- x q,t1 may refer to a value corresponding to the dimension t 1 associated with the query image x q
- x i,t1 may refer to a value corresponding to the dimension t 1 associated with the particular image result x i
- x q,t2 may refer to a value corresponding to the dimension t 2 associated with the query image x q
- x i,t2 may refer to a value corresponding to the dimension t 2 associated with the particular image result x i
- c and e may represent different values. In another implementation, c and e may represent the same values.
- Process 700 may additionally include outputting information regarding the ranked images (block 725 ).
- search system 205 may provide information regarding the ranked image results to client 230 , from which the query image was received.
- Client 230 may present information regarding some, or all, of the image results via a web browser.
- An implementation, described herein, may allow an image search engine to provide image search results that are similar to image search results provided via a clustering and re-ranking technique, without the need for performing clustering and re-ranking in response to receiving a query image.
- the image search engine may store a relatively small amount of information, which may enable the image search engine to provide the image search results. For example, in an example according to one or more implementations described above, assume that a particular query image is associated with 59 dimensions. The image search engine may store a 6-bit value that identifies a particular dimension, of the 59 dimensions, to weight more heavily when ranking image results.
- the image search engine may continuously analyze the query image and associated image results over time to determine which dimension(s) of the image results to more heavily weight. In this sense, the image search engine may continuously learn which dimension(s) of the image results to use, in order to continuously generate more relevant image result rankings for the query image.
- FIGS. 8-11 illustrate examples of receiving a query image.
- a query image may be received at block 505 of FIG. 5 , and/or at block 705 of FIG. 7 .
- a client such as client 230
- User interface 800 may include option 805 , which allows a user to provide a location identifier, such as a uniform resource locator (“URL”), a uniform resource identifier (“URI”), or some other location identifier, that is associated with a query image.
- URL uniform resource locator
- URI uniform resource identifier
- a client such as client 230 may present user interface 900 , as shown in FIG. 9 .
- User interface 900 may include option 905 , which allows a user to upload a query image.
- the query image may be stored locally at client 230 .
- a client such as client 230 may present user interface 1000 , as shown in FIG. 10 .
- User interface 1000 may display a set of image results, including image result 1005 .
- User interface 1000 may include option 1010 , which allows a user to view images that are visually similar to image result 1005 .
- a client such as client 230
- client 230 may include cellular telephone 1100 , which may include a camera.
- Cellular telephone 1100 may allow a user to capture an image via the camera, and search for a visually similar image.
- an image search engine may provide a user interface that displays visually similar results.
- the image search engine may provide user interface 165 in response to receiving a query image via one or more of the techniques illustrated in FIGS. 8-11 .
- the image results displayed in user interface 165 may be ranked according to one or more of the techniques described above—e.g., according to one or more of the processes illustrated in FIGS. 5-7 .
- FIG. 12 illustrates an example of selecting an attribute associated with a query image.
- search system 205 may identify a set of image results 1205 , e.g., at block 510 of FIG. 5 .
- This set of image results 1205 may be ranked based on visual similarity of the image results to the query image, e.g., at block 515 of FIG. 5 .
- Search system 205 may also identify a ranked reference set of image results 1210 , which may be associated with the query image—e.g., re-ranked image results generated at block 525 of FIG. 5 . As shown in FIG.
- image results in reference set 1210 may be ordered differently than image results in the set of image results 1205 that are identified based on the query image. Such a situation may occur when images in reference set 1210 are ranked in a manner that is more accurate and/or more desirable than the ranking in set 1205 .
- Search system 205 may also generate multiple sets of rankings 1215 - 1 through 1215 - n of the image results, based on weighting different attributes, such as attributes 1 - n .
- weighting a particular attribute may include assigning a particular weight to the attribute when determining a distance between the image results and the query image.
- weighting different attributes may yield different sets of rankings, as shown in FIG. 12 .
- set of rankings 1215 - 2 weighted based on “Attribute 2 ,” may be a closest set of rankings to reference set of rankings 1210 .
- search system 205 may identify that “Attribute 2 ” is associated with the query image. Search system 205 may thus weight image results using “Attribute 2 ” when processing queries based on the query image. By doing so, search system 205 may provide more accurate image result rankings, while saving processing time compared to other techniques.
Abstract
Description
D t(x q ,x i)=d(x q ,x i)+c*(x q,t −x i,t)2 Equation 1:
In
D t(x q ,x i)=x q,t −x i,t Equation 2:
D t(x q ,x i)=c*(x q,t −x i,t) Equation 3:
τ=(P−Q)/(P+Q) Equation 4:
In Equation 4, τ may represent the distance between a particular set of rankings and the re-ranked results received from image result
D t1,2(x q ,x i)=d(x q ,x i)+c*(x q,t1 −x i,t1)2 +e*(x q,t2 −x i,t2)2 Equation 5:
D t1,2(x q ,x i)=x q,t1 −x i,t1 +x q,t2 −x i,t2 Equation 6:
D t1,2(x q ,x i)=c*(x q,t1 −x i,t1)+e*(x q,t2 −x i,t2) Equation 7:
In the above example equations, Dt1,2(xq, xi) may represent the distance, weighting the dimensions t1 and t2, between a query image xq and a particular image result xi. Further, e may refer to a constant, xq,t1 may refer to a value corresponding to the dimension t1 associated with the query image xq, xi,t1 may refer to a value corresponding to the dimension t1 associated with the particular image result xi, xq,t2 may refer to a value corresponding to the dimension t2 associated with the query image xq, and xi,t2 may refer to a value corresponding to the dimension t2 associated with the particular image result xi. In some implementations, c and e may represent different values. In another implementation, c and e may represent the same values.
Claims (20)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US14/609,961 US9189498B1 (en) | 2012-05-24 | 2015-01-30 | Low-overhead image search result generation |
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/480,240 US8949253B1 (en) | 2012-05-24 | 2012-05-24 | Low-overhead image search result generation |
US14/609,961 US9189498B1 (en) | 2012-05-24 | 2015-01-30 | Low-overhead image search result generation |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/480,240 Continuation US8949253B1 (en) | 2012-05-24 | 2012-05-24 | Low-overhead image search result generation |
Publications (1)
Publication Number | Publication Date |
---|---|
US9189498B1 true US9189498B1 (en) | 2015-11-17 |
Family
ID=52395802
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/480,240 Expired - Fee Related US8949253B1 (en) | 2012-05-24 | 2012-05-24 | Low-overhead image search result generation |
US14/609,961 Active US9189498B1 (en) | 2012-05-24 | 2015-01-30 | Low-overhead image search result generation |
Family Applications Before (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/480,240 Expired - Fee Related US8949253B1 (en) | 2012-05-24 | 2012-05-24 | Low-overhead image search result generation |
Country Status (1)
Country | Link |
---|---|
US (2) | US8949253B1 (en) |
Cited By (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
WO2017091282A1 (en) * | 2015-11-23 | 2017-06-01 | Advanced Micro Devices, Inc. | Method and apparatus for performing a parallel search operation |
Families Citing this family (8)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8949253B1 (en) * | 2012-05-24 | 2015-02-03 | Google Inc. | Low-overhead image search result generation |
US9262477B1 (en) * | 2012-06-21 | 2016-02-16 | Pivotal Software, Inc. | Accuracy testing of query optimizers |
US8996516B2 (en) * | 2013-01-02 | 2015-03-31 | Google Inc. | Adjacent search results exploration |
US9677886B2 (en) * | 2013-02-10 | 2017-06-13 | Qualcomm Incorporated | Method and apparatus for navigation based on media density along possible routes |
US10606878B2 (en) * | 2017-04-03 | 2020-03-31 | Relativity Oda Llc | Technology for visualizing clusters of electronic documents |
WO2020195188A1 (en) * | 2019-03-26 | 2020-10-01 | 富士フイルム株式会社 | Image processing device, image processing method, and image processing program |
CN111753181A (en) * | 2019-03-28 | 2020-10-09 | 北京京东尚科信息技术有限公司 | Image-based search method, apparatus, server, client, and medium |
JP6590329B1 (en) * | 2019-06-26 | 2019-10-16 | 株式会社ラディウス・ファイブ | Image display system and program |
Citations (26)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6345274B1 (en) | 1998-06-29 | 2002-02-05 | Eastman Kodak Company | Method and computer program product for subjective image content similarity-based retrieval |
US20020087538A1 (en) * | 1998-06-22 | 2002-07-04 | U.S.Philips Corporation | Image retrieval system |
US6574616B1 (en) | 2000-02-16 | 2003-06-03 | Index Stock Imagery, Inc. | Stochastic visually based image query and retrieval system |
US20070098266A1 (en) | 2005-11-03 | 2007-05-03 | Fuji Xerox Co., Ltd. | Cascading cluster collages: visualization of image search results on small displays |
US20070133947A1 (en) | 2005-10-28 | 2007-06-14 | William Armitage | Systems and methods for image search |
US20080097981A1 (en) | 2006-10-20 | 2008-04-24 | Microsoft Corporation | Ranking images for web image retrieval |
US20090313239A1 (en) | 2008-06-16 | 2009-12-17 | Microsoft Corporation | Adaptive Visual Similarity for Text-Based Image Search Results Re-ranking |
US7860317B2 (en) | 2006-04-04 | 2010-12-28 | Microsoft Corporation | Generating search results based on duplicate image detection |
US20110029510A1 (en) * | 2008-04-14 | 2011-02-03 | Koninklijke Philips Electronics N.V. | Method and apparatus for searching a plurality of stored digital images |
US20110103699A1 (en) | 2009-11-02 | 2011-05-05 | Microsoft Corporation | Image metadata propagation |
US20110129159A1 (en) * | 2009-11-30 | 2011-06-02 | Xerox Corporation | Content based image selection for automatic photo album generation |
US20110173190A1 (en) | 2010-01-08 | 2011-07-14 | Yahoo! Inc. | Methods, systems and/or apparatuses for identifying and/or ranking graphical images |
US20110264641A1 (en) * | 2010-04-21 | 2011-10-27 | Microsoft Corporation | Image search result summarization with informative priors |
US8090222B1 (en) | 2006-11-15 | 2012-01-03 | Google Inc. | Selection of an image or images most representative of a set of images |
US20120254076A1 (en) * | 2011-03-30 | 2012-10-04 | Microsoft Corporation | Supervised re-ranking for visual search |
US8352465B1 (en) * | 2009-09-03 | 2013-01-08 | Google Inc. | Grouping of image search results |
US20130011083A1 (en) * | 2010-02-17 | 2013-01-10 | Photoccino Ltd. | System and methods for creating a collection of images |
US8429173B1 (en) | 2009-04-20 | 2013-04-23 | Google Inc. | Method, system, and computer readable medium for identifying result images based on an image query |
US20130132402A1 (en) | 2011-11-21 | 2013-05-23 | Nec Laboratories America, Inc. | Query specific fusion for image retrieval |
US8489627B1 (en) * | 2008-08-28 | 2013-07-16 | Adobe Systems Incorporated | Combined semantic description and visual attribute search |
US8566331B1 (en) | 2009-05-29 | 2013-10-22 | Google Inc. | Ordering image search results |
US8768105B2 (en) * | 2011-01-21 | 2014-07-01 | Kodak Alaris Inc. | Method for searching a database using query images and an image anchor graph-based ranking algorithm |
US20140250109A1 (en) | 2011-11-24 | 2014-09-04 | Microsoft Corporation | Reranking using confident image samples |
US8909563B1 (en) * | 2011-06-17 | 2014-12-09 | Google Inc. | Methods, systems, and programming for annotating an image including scoring using a plurality of trained classifiers corresponding to a plurality of clustered image groups associated with a set of weighted labels |
US8949253B1 (en) * | 2012-05-24 | 2015-02-03 | Google Inc. | Low-overhead image search result generation |
US8983941B1 (en) * | 2011-03-28 | 2015-03-17 | Google Inc. | Visual content retrieval |
-
2012
- 2012-05-24 US US13/480,240 patent/US8949253B1/en not_active Expired - Fee Related
-
2015
- 2015-01-30 US US14/609,961 patent/US9189498B1/en active Active
Patent Citations (32)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20020087538A1 (en) * | 1998-06-22 | 2002-07-04 | U.S.Philips Corporation | Image retrieval system |
US6480840B2 (en) | 1998-06-29 | 2002-11-12 | Eastman Kodak Company | Method and computer program product for subjective image content similarity-based retrieval |
US6345274B1 (en) | 1998-06-29 | 2002-02-05 | Eastman Kodak Company | Method and computer program product for subjective image content similarity-based retrieval |
US6574616B1 (en) | 2000-02-16 | 2003-06-03 | Index Stock Imagery, Inc. | Stochastic visually based image query and retrieval system |
US20070133947A1 (en) | 2005-10-28 | 2007-06-14 | William Armitage | Systems and methods for image search |
US20070098266A1 (en) | 2005-11-03 | 2007-05-03 | Fuji Xerox Co., Ltd. | Cascading cluster collages: visualization of image search results on small displays |
US7860317B2 (en) | 2006-04-04 | 2010-12-28 | Microsoft Corporation | Generating search results based on duplicate image detection |
US20080097981A1 (en) | 2006-10-20 | 2008-04-24 | Microsoft Corporation | Ranking images for web image retrieval |
US8090222B1 (en) | 2006-11-15 | 2012-01-03 | Google Inc. | Selection of an image or images most representative of a set of images |
US20110029510A1 (en) * | 2008-04-14 | 2011-02-03 | Koninklijke Philips Electronics N.V. | Method and apparatus for searching a plurality of stored digital images |
US20090313239A1 (en) | 2008-06-16 | 2009-12-17 | Microsoft Corporation | Adaptive Visual Similarity for Text-Based Image Search Results Re-ranking |
US8489627B1 (en) * | 2008-08-28 | 2013-07-16 | Adobe Systems Incorporated | Combined semantic description and visual attribute search |
US8429173B1 (en) | 2009-04-20 | 2013-04-23 | Google Inc. | Method, system, and computer readable medium for identifying result images based on an image query |
US8566331B1 (en) | 2009-05-29 | 2013-10-22 | Google Inc. | Ordering image search results |
US8843478B1 (en) * | 2009-09-03 | 2014-09-23 | Google Inc. | Grouping of image search results |
US8352465B1 (en) * | 2009-09-03 | 2013-01-08 | Google Inc. | Grouping of image search results |
US20110103699A1 (en) | 2009-11-02 | 2011-05-05 | Microsoft Corporation | Image metadata propagation |
US8571331B2 (en) * | 2009-11-30 | 2013-10-29 | Xerox Corporation | Content based image selection for automatic photo album generation |
US20110129159A1 (en) * | 2009-11-30 | 2011-06-02 | Xerox Corporation | Content based image selection for automatic photo album generation |
US20110173190A1 (en) | 2010-01-08 | 2011-07-14 | Yahoo! Inc. | Methods, systems and/or apparatuses for identifying and/or ranking graphical images |
US20130011083A1 (en) * | 2010-02-17 | 2013-01-10 | Photoccino Ltd. | System and methods for creating a collection of images |
US8861897B2 (en) * | 2010-02-17 | 2014-10-14 | Shutterfly, Inc. | System and methods for creating a collection of images |
US20110264641A1 (en) * | 2010-04-21 | 2011-10-27 | Microsoft Corporation | Image search result summarization with informative priors |
US8346767B2 (en) * | 2010-04-21 | 2013-01-01 | Microsoft Corporation | Image search result summarization with informative priors |
US8768105B2 (en) * | 2011-01-21 | 2014-07-01 | Kodak Alaris Inc. | Method for searching a database using query images and an image anchor graph-based ranking algorithm |
US8983941B1 (en) * | 2011-03-28 | 2015-03-17 | Google Inc. | Visual content retrieval |
US20120254076A1 (en) * | 2011-03-30 | 2012-10-04 | Microsoft Corporation | Supervised re-ranking for visual search |
US8543521B2 (en) * | 2011-03-30 | 2013-09-24 | Microsoft Corporation | Supervised re-ranking for visual search |
US8909563B1 (en) * | 2011-06-17 | 2014-12-09 | Google Inc. | Methods, systems, and programming for annotating an image including scoring using a plurality of trained classifiers corresponding to a plurality of clustered image groups associated with a set of weighted labels |
US20130132402A1 (en) | 2011-11-21 | 2013-05-23 | Nec Laboratories America, Inc. | Query specific fusion for image retrieval |
US20140250109A1 (en) | 2011-11-24 | 2014-09-04 | Microsoft Corporation | Reranking using confident image samples |
US8949253B1 (en) * | 2012-05-24 | 2015-02-03 | Google Inc. | Low-overhead image search result generation |
Cited By (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
WO2017091282A1 (en) * | 2015-11-23 | 2017-06-01 | Advanced Micro Devices, Inc. | Method and apparatus for performing a parallel search operation |
US10528613B2 (en) | 2015-11-23 | 2020-01-07 | Advanced Micro Devices, Inc. | Method and apparatus for performing a parallel search operation |
Also Published As
Publication number | Publication date |
---|---|
US8949253B1 (en) | 2015-02-03 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US9189498B1 (en) | Low-overhead image search result generation | |
CN107480158B (en) | Method and system for evaluating matching of content item and image based on similarity score | |
US9372920B2 (en) | Identifying textual terms in response to a visual query | |
CN107103016B (en) | Method for matching image and content based on keyword representation | |
US9195717B2 (en) | Image result provisioning based on document classification | |
US8498984B1 (en) | Categorization of search results | |
US10503803B2 (en) | Animated snippets for search results | |
US20170004383A1 (en) | Searching untagged images with text-based queries | |
AU2016210606A1 (en) | Searching using one or more specific attributes found in one or more images | |
AU2016210608A1 (en) | Modifying at least one attribute of an image with at least one attribute extracted from another image | |
US9654654B1 (en) | Interface to facilitate browsing of items of visual content | |
US9652534B1 (en) | Video-based search engine | |
US8799257B1 (en) | Searching based on audio and/or visual features of documents | |
US9678618B1 (en) | Using an expanded view to display links related to a topic | |
US8635212B1 (en) | Floating ranking of product results | |
US20230195780A1 (en) | Image Query Analysis | |
US8650196B1 (en) | Clustering documents based on common document selections | |
EP3485394A1 (en) | Contextual based image search results | |
GB2542890A (en) | Searching using specific attributes found in images | |
WO2014093915A2 (en) | Content and object metadata based search in e-reader environment | |
KR20210120203A (en) | Method for generating metadata based on web page | |
US20240020321A1 (en) | Category recommendation with implicit item feedback | |
US10671660B2 (en) | Contextual ranking of photos and text in search | |
US10691702B1 (en) | Generating ranked lists of entities | |
US11720626B1 (en) | Image keywords |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
FEPP | Fee payment procedure |
Free format text: PAYOR NUMBER ASSIGNED (ORIGINAL EVENT CODE: ASPN); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:JING, YUSHI;CAI, WEI;HOLIDAY, STEPHEN C.;REEL/FRAME:034861/0584Effective date: 20120523 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044334/0466Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 4 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 8TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1552); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 8 |
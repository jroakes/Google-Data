US7239614B2 - Methods and apparatus for the propagation of multicast transmissions in a communications network - Google Patents
Methods and apparatus for the propagation of multicast transmissions in a communications network Download PDFInfo
- Publication number
- US7239614B2 US7239614B2 US09/906,928 US90692801A US7239614B2 US 7239614 B2 US7239614 B2 US 7239614B2 US 90692801 A US90692801 A US 90692801A US 7239614 B2 US7239614 B2 US 7239614B2
- Authority
- US
- United States
- Prior art keywords
- node
- subscriber
- nodes
- propagating
- transmission
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Lifetime, expires
Links
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L45/00—Routing or path finding of packets in data switching networks
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L12/00—Data switching networks
- H04L12/02—Details
- H04L12/16—Arrangements for providing special services to substations
- H04L12/18—Arrangements for providing special services to substations for broadcast or conference, e.g. multicast
- H04L12/1854—Arrangements for providing special services to substations for broadcast or conference, e.g. multicast with non-centralised forwarding system, e.g. chaincast
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L47/00—Traffic control in data switching networks
- H04L47/10—Flow control; Congestion control
- H04L47/15—Flow control; Congestion control in relation to multipoint traffic
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L12/00—Data switching networks
- H04L12/02—Details
- H04L12/16—Arrangements for providing special services to substations
- H04L12/18—Arrangements for providing special services to substations for broadcast or conference, e.g. multicast
- H04L12/185—Arrangements for providing special services to substations for broadcast or conference, e.g. multicast with management of multicast group membership
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L12/00—Data switching networks
- H04L12/02—Details
- H04L12/16—Arrangements for providing special services to substations
- H04L12/18—Arrangements for providing special services to substations for broadcast or conference, e.g. multicast
- H04L12/1886—Arrangements for providing special services to substations for broadcast or conference, e.g. multicast with traffic restrictions for efficiency improvement, e.g. involving subnets or subdomains
Definitions
- the present invention relates generally to the field of digital communications, and more particularly to packet transmission systems involved in the management of multicast communications to a plurality of users.
- the term multicast refers to a data package switching technology in which a single data packet is received by a plurality of nodes. This mode of transmission is specially useful when several nodes in the network need to receive data packets which emanate from the same source.
- the multicast technology reduces the number of separate transmissions and data switching operations which are necessary to deliver a data package to a set of nodes in a communications network.
- the communications network contains specialized nodes which are called router nodes, or package switching nodes. Such nodes perform the package switching operation which route a given data package along the network towards a specific destination.
- the multicast capability of a network is an extension of the point to point transmission infrastructure of the communications network.
- IP Internet Protocol
- ATM Asynchronous Transfer Mode
- multicast protocols which implement the multicast capability which are designed for the several point to point transmission mode protocols.
- the most prominent of such multicast protocols are the implementations of multicast, which are integrated with the basic IP protocol.
- DVMRP Distance Vector Multicast routing Protocol
- PIM Protocol Independent Multicast
- a multicast distribution tree is a distributed data structure which includes a number of router nodes, a number of source nodes and a number of receiver nodes.
- multicast distribution trees are derived from the actual configuration of the routers of the underlying protocol.
- two nodes in the distribution tree are only “neighbors” if they are physically connected by a communications link.
- a facility exits which allows for a human operator to create links in a multicast distribution tree between two nodes which are not physical neighbors. Such links are called multicast tunnels.
- the Internet presently only supports the IP point-to-point protocol.
- the Internet has been unable to support the IP multicast standard because of the sheer size of the Internet. In such a scenario, it becomes very hard to deploy a protocol which builds distribution trees efficiently. Even if this problem could be solved in the near future, another problem, the coarseness of the IP multicast addressing scheme, will still be a limitation of the multicast capability.
- the nodes in the interconnecting network do not support a protocol of choice, it will most likely be necessary to utilize protocol tunnels.
- the manual configuration i.e., the construction of multicast distribution trees by human operators, becomes impractical in Internet applications.
- the problem of coarse network addressing is solved through the provision of a method for the distribution of data packets in the network which utilizes an additional data field, called the predicate.
- This field which is utilized by the nodes which participate in the protocol to construct subgroups for the distribution of the data packets which emanate from a given source.
- the source is called the publisher node and the receivers of the published information are called the subscriber nodes.
- a method in accordance with at least one embodiment of the present invention utilizes a multicast distribution tree, and is based on the detection and exploitation of shared paths in a given distribution tree.
- principles relating to data distribution infrastructure are not limited to any particular tree building procedure. Such principles may preferably involve the utilization of a distributed configuration which exploits the sharedpaths of data distribution of multicasted messages, such that message retransmissions only occur at the point of divergence of the data distribution path.
- a method in accordance with at least one embodiment of the present invention may be particularly useful when it is necessary to utilize multicast tunnels in the communications network.
- such a method may preferably include an extension of an existing point to point protocol by way of an additional address field which allows for the addressability of subsets of receivers.
- the data distribution path will be different for each subset of receivers.
- the propagation path utilizes a piece wise point to point propagation pattern, which allows a node in the multicast distribution tree to transmit data to any of its descendant nodes in the tree via a tunneled connection.
- the problem of the distributing data packages to a refined set of subscriber nodes is solved by the provision of a method which constructs multicast distribution trees for the Subsource Addressing Multicast protocol and which includes publish and subscribe operations, involving the nodes in a communications network.
- this method preferably utilizes a multicast distribution tree, and a specific manner of constructing multicast distribution tree construction method is detailed herein.
- a specific method for the construction of the distribution tree is detailed herein, it is to be understood that the methods for data transmission and data subscription discussed herein are applicable to any kind of multicast distribution tree.
- the present invention provides, in one aspect, a method of facilitating notification among at least two nodes in a distributed network, the method comprising the steps of: designating one of the nodes as a publisher node; designating at least one other of the nodes as at least one subscriber node; propagating a transmission from the publisher node to the at least one subscriber node via at least one link; the propagating step comprising propagating only one distinct transmission along any single link.
- the present invention provides an apparatus for facilitating notification among at least two nodes in a distributed network, the apparatus comprising: an arrangement for designating one of the nodes as a publisher node; an arrangement for designating at least one other of the nodes as at least one subscriber node; an arrangement for propagating a transmission from the publisher node to the at least one subscriber node via at least one link; the propagating arrangement being adapted to propagate only one distinct transmission along any single link.
- the present invention provides a program storage device readable by machine, tangibly embodying a program of instructions executable by the machine to perform method steps for facilitating notification among at least two nodes in a distributed network, the method comprising the steps of: designating one of the nodes as a publisher node; designating at least one other of the nodes as at least one subscriber node; propagating a transmission from the publisher node to the at least one subscriber node via at least one link; the propagating step comprising propagating only one distinct transmission along any single link.
- FIG. 1 schematically illustrates a distribution tree and some possible paths for data propagation.
- FIG. 2 shows a portion of a distribution tree, including two subscriber nodes.
- FIG. 3 shows a portion of a distribution tree in which two subscriber nodes share at least part of a common path from a publisher node.
- FIG. 4 is substantially similar to FIG. 3 but illustrates optimal transmission using a single message per link.
- FIG. 5 shows, in a distribution tree, the propagation path of subscription messages.
- FIG. 6 illustrates, in a distribution tree, a notification being addressed directly at a single subscriber node.
- FIG. 7 shows, in a distribution tree, the propagation of a subscription hop by hop to an ancestor node.
- FIG. 8 shows, in a distribution tree, a manner in which a fork node modifies its distribution list
- FIG. 9 shows, in a distribution tree, a manner in which notifications may be retransmitted to subscriber nodes point to point.
- FIG. 10 shows, in a distribution tree, the resulting network state after a node posts a subscription.
- FIG. 11 is substantially similar to FIG. 10 , but shows modification of the notification path.
- FIG. 12 schematically depicts a procedure for the propagation of a notification.
- FIG. 13 schematically depicts a procedure for the propagation of a subscription message.
- FIG. 14 schematically depicts a procedure for the propagation of an unsubscription message.
- FIG. 15 schematically depicts a procedure for the propagation of a substitution message.
- a “data distribution path” is defined as the sequence of routing nodes which a specific message traverses from the moment that it originates in a publisher node to the moment that it arrives in a receiver node.
- a “node” is a general vertex in the multicast distribution tree. There are three specific types of nodes in a SAM tree: the publisher node, which is the root of the tree, the intermediate nodes, which are the nodes with child nodes which are not the root node, and the leaf nodes, which are nodes without any children nodes.
- the term node is used in this embodiment to generally refer to any of type of node in the SAM tree.
- the term “package switching operation” is used to refer to the operation performed by intermediate nodes, also called router nodes, in the data distribution path of a given data transmission. This operation involves receiving the data package and then making a decision of where to retransmit it, if necessary. This decision is made utilizing data that is stored in the proximity of the router node, generally referred to as routing tables. After the routing table are consulted, a package switching node will retransmit (switch) a package to either another intermediate router node or the final receiver of the package.
- a SAM message originates a the root node and is addressed with the point to point address of either a final receiver node or an intermediate router node.
- an intermediate router node receives a SAM message, it will retransmit it to one or more point to point addresses, of either final receivers or intermediate nodes. This operation is repeated until the message finally reaches a final receiver, or leaf node in the SAM tree. Therefore, a single message is transmitted to a variety of receivers utilizing different point to point addresses along the transmission path. It can thus be said that SAM transmissions are always made using the point to point mode of transmission at every step (piece) of the transmission path, and that the transmission pattern is therefore piece wise point to point.
- point of divergence refers to a node in the SAM tree which has more than one descendant node to which it has to route a given message.
- point to point is used to refer to a transmission mode in which a given message is transmitted from a single source (or point) to a single receiver.
- communication networks only support point to point protocols, the most prevalently used being the Internet Protocol (IP) and the Asynchronous Transfer Mode (ATM) protocols.
- IP Internet Protocol
- ATM Asynchronous Transfer Mode
- Other modes of transmission are possible, such a broadcast and multicast.
- IP Internet Protocol
- ATM Asynchronous Transfer Mode
- broadcast and multicast Such protocol can be implemented extensions of the underlying (basic) point to point protocol.
- point to point address refers to a network address utilized by basic point to point protocol provided by the communications network.
- protocol tunneling refers to a technique which makes possible to transmit a data package encoded by a given protocol in a network which does not offer direct support for the protocol.
- the technique involves the encapsulation of the data package into a data segment which is addressed utilizing the basic point to point protocol supported by the network.
- the package is then transmitted from to a node which is able to receive and process it. These two nodes are referred to as the end points of the tunnel.
- the receiving node is then able decapsulate the original data package and retransmit it further.
- the package arrives at a network which offers native support for the protocol.
- a “publisher node” is a node which is a source of a given information.
- SAM Session Initiation and Selection Protocol
- messages are multicasted to a plurality of receivers utilizing a distribution tree, named the SAM tree, which is rooted at the publisher node.
- test is used to refer to an additional data field used by SAM to extend the addressing capability of an underlying point to point protocol. This field is used by applications to store data which is used to define specific subsets of the information that originates from a publisher node.
- router node is used to refer to a node which retransmits a given data package such that it can reach a specific final destination.
- packet switching node is synonymous with this term.
- SAM is an abbreviation for “Subsource Addressing Multicast”.
- SAM protocol refers to the collection of methods and operations which are used by source nodes to express interest in the subsets of information published by a given source, and by the source of information to publish message to subsets of subscribers.
- the “SAM tree” is a data structure utilized to multicast messages from the node which is the source of the tree.
- the intermediate nodes (nodes without children) of the SAM tree are nodes which are capable of routing SAM messages to any of their descendants.
- the leaf nodes (nodes without children) are nodes that are final receivers of SMA messages. It is also possible for an intermediate node to be a final receiver of a SAM message.
- shared paths is used in reference to the intersection of transmission path segments for a message addressed to a plurality of subscribers. In this embodiment this term is used in reference to both point to point and multicast routing paths.
- a point to point shared transmission path between two receivers of a message occurs when the routing decisions taken by the underlying point to point protocol define paths that traverse the same sequence of routing nodes for some portion of the paths.
- a multicast shared path is an equal sequence of multicast routing nodes in the transmission paths for messages destined for multiple multicast addresses.
- performance gains are realized by exploiting common transmission paths, or shared paths, in both the point to point and the multicast package switching infrastructure.
- subsource addressing multicast is used to collectively refer to a set of technologies which make possible for a source of information to multicast messages to any given subset of its receivers. This technology includes the SAM protocol and the SAM tree discussed above.
- a “subscriber” is a node which has posted at least one subscriber operation, and a final receiver of SAM messages.
- tunnel refers to the act of deploying a protocol tunnel (described above) for the transmission of a message.
- underlying protocol is used to refer to the basic point to point protocol supported by the communications network.
- At least one presently preferred embodiment of the present invention broadly embraces a multicast distribution tree capable of realizing multiple distribution paths.
- the distribution tree may be referred to as a Subsource Addressing Multicast tree, or a SAM tree.
- the SAM tree is capable of realizing optimal distribution paths for any subset of the nodes of a given source which is the root of the tree.
- the tree is preferably configured such that it can be deployed as an extension of any underlying point to point protocol.
- the SAM multicast distribution tree is distinguished from other distribution trees because any given intermediate node can propagate a message not only to its direct descendants, but also to any number of indirect descendants. Therefore, in addition to keeping the basic state information which is required from a multicast distribution tree, such as parent and direct descendant information, each intermediate node in the tree also keeps data related to the propagation to indirect descendants.
- the SAM multicast tree can be used to propagate messages in a plurality of paths.
- the SAM trees allows for the all possible combinations of data transfer paths between the root node of the tree and all possible subsets of its descendants. The SAM tree can therefore be utilized to support a very fine grained addressing scheme, such as the SAM protocol.
- FIG. 1 illustrates a SAM tree and a few of the possible paths for data propagation from the node S 0 , denoted by the dotted arrows. Not all possible paths are shown, so as not to impair the clarity of the illustration.
- Each parent node is capable of sending a message directly or via a protocol tunnel to any of its descendants.
- the collection of all possible subpaths generate a distribution mesh capable of efficiently multicasting messages to any subset of receivers making optimum use of the shared transmission paths among receivers.
- the data propagation patterns determined by the SAM propagation tree are preferably such that a message destined for multiple nodes will incur a minimum number of retransmissions. In one embodiment, this is achieved by forcing the retransmissions to occur only at the points of divergence in the propagation path. This will result in the optimal utilization of shared paths among the subsets of receivers of the message.
- the direct transmission of a message from a parent node to its descendants can be made via a protocol tunnel, which will result in further gains in performance.
- the SAM tree includes a root node P 1 , which is the publisher of information, and a set of nodes (e.g., S 0 –S 22 ) which are either direct or indirect descendants of the root node P 1 .
- the descendants of the root node P 1 can be either the final destination of notification messages or intermediate router nodes.
- a router node is a node is capable of forwarding notification messages to other router nodes or subscriber nodes.
- a subscriber node is a node which is a final destination for a notification message.
- a router node may be a subscriber node as well as a router node.
- the SAM tree is configured such that it makes an optimal use of the existing point to point message switching infrastructure.
- a parent node in the SAM tree relays a message to one if its descendants utilizing the descendant's point to point address directly, it is avoiding the overhead of making several package switching operation at each intermediate node in the path from the parent to the descendant.
- SAM SAM extends the addressing capability of the underlying point to point protocol, it involves two kinds of data switching operations:
- the direct addressing capability of the SAM tree results in a savings of both kinds of package switching operations, which makes SAM a very efficient multicast package switching infrastructure.
- the SAM communication infrastructure keeps specific state information in every node which participates in a SAM network. Accordingly, each node in a SAM network preferably keeps the following state:
- the distribution lists are identified by a predicate field, which extends the addressing capability of the underlying point to point protocol. This extra field is utilized by the specific application which uses the SAM protocol to identify subsets of receivers of the published information.
- the utilization of an application specific predicate field as a network address is a unique characteristic embraced herein.
- the aforementioned embodiment carries out a preferred implementation of the SAM tree utilizing subscription and notification operations which utilize the predicate field.
- an implementation utilizing the IP protocol as the underlying point to point protocol is discussed, but it should be understood that any similar implementation utilizing any other underlying protocol will not deviate from the spirit or scope of the present invention.
- the network addresses in SAM are defined by a pair of the following format:
- this information stream may be labeled “the value of X”.
- the values of the X series indicate unique identifiers which label data items. Therefore, the subscriber could express the desire to receive updates of an item numbered 12345, published by P 1 at port 8888, utilizing the following SAM address:
- the SAM predicate value is preferably handled as a binary value which extends the IP network address, therefore “refining” the granularity of the addressability. It is therefore possible for subscribers to utilize any value, as long as this value can be understood by the publisher of the information.
- the routers using the SAM protocol have no semantic understanding of the predicates; they are handled exactly as network addresses. This allows SAM to be utilized by essentially any type of publisher system, even supporting different lengths in the predicate field.
- notification messages which originate at the publisher node P 1 should preferably be routed such that a single transmission originates at the publisher node and such that a minimum number of retransmissions occurs along the routing paths. More specifically, an optimal routing of a message that is directed for a plurality of receivers should only generate one transmission along the path to each receiver.
- FIG. 2 consider any two subscriber nodes (S 1 ′, S 2 ′) which need to receive a common message from a source node P′. (“I” in the drawing refers to intermediate nodes.) A common path will either exist between subscriber nodes S 1 ′ and S 2 ′ or not.
- FIG. 4 illustrates optimal transmission using a single message per link, noted by the numeral “1”. Particularly, FIG. 4 illustrates an objective associated with at least one presently preferred embodiment of the present invention, namely, an optimal transmission that requires only single transmissions, at all links, between a publisher node P′ and subscriber nodes S 1 ′ and S 2 ′, interspersed with intermediate nodes I and a fork node F.
- a SAM protocol may involve at least two basic operations, namely, subscription and notification. Each operation may involve a distributed protocol which involves neighboring nodes in a SAM distribution tree. The mechanics of routing, the identification of fork nodes and their exploitation can be easily observed by studying the data flow of these two operations. “Subscription” involves the identification of fork nodes, while “notification” involves the exploitation of fork nodes.
- subscription operations originate at the subscriber nodes, and are sent hop by hop to each ancestor node in the SAM distribution tree, in the direction of the publisher node.
- the reason for this hop by hop propagation procedure is that a record of the subscription is left at each node in the path that goes from the subscriber node to the publisher.
- These records allow the intermediate nodes to detect when two or more subscriptions with identical addresses have been posted by descendant nodes.
- Such nodes can be proven to be a point of divergence, or fork node in the notification path of multicasted messages which originate at the root, as discussed above. A proof is discussed further below.
- FIG. 5 shows the propagation path of subscription messages along a SAM tree, in accordance with a preferred embodiment of the present invention.
- one may examine the subscription records which are kept at each intermediate node, and understand how the bottom up, hop by hop propagation of the subscription messages allows the intermediate nodes in the SAM tree to detect fork nodes in the message stream which originates at the root node.
- the client in S 19 wishes to be notified when the value of the content variable X reaches a value greater than 130.
- a directory lookup is made, and the group address for the publishers of X is retrieved, in this case only P 1 publishes X.
- a subscription record is now made, including a pair ⁇ subscription_address, notification_list>. In the present example, this pair is labeled ⁇ P 1 ,”X>130” ⁇ , ⁇ S 19 ⁇ >, where
- the subscription becomes active. Since the subscription record contains the notification list ⁇ S 19 ⁇ , the publisher can now notify S 19 when the value of X reaches 130, using whatever path the underlying network considers appropriate, as discussed herebelow.
- notification operations in accordance with at least one embodiment of the present invention originate in the publisher node P 1 , which is the root of a SAM distribution tree.
- the notification messages can be directed at one or more descendant nodes, but they do not propagate in a “hop by hop” process (i.e., successively from one node to a neighboring node). Rather, the notification messages preferably address each descendant node directly, utilizing a point to point address provided by the lower layer network protocol of choice.
- FIG. 6 illustrates a notification being addressed directly at the subscriber node S 19 .
- the dotted arrow indicates that the point to point address for S 19 is used to address the notification message for the subscriber.
- the notification messages originate at root node of the SAM tree and are propagated utilizing point to point transmission to the descendant nodes of the distribution tree and are delivered directly to subscriber nodes or to intermediate nodes.
- the intermediate nodes are only used when it is the case that two or more notifications share a common path to some intermediate node, and then diverge to distant destinations.
- the nodes which represent a point of divergence are called “fork nodes”.
- the entire potential of the selective routing feature of the multicast routing protocol is realized by utilizing a single transmission along this common path between the notification messages. This helps explain why the subscription protocol described hereinabove utilizes a hop-by-hop transmission pattern, which builds a bottom-up record of the subscription data. During the bottom-up propagation, the fork nodes are identified and are then utilized by the publisher to notify a plurality of subscribers, utilizing any common path between them. This process of notification is discussed in more detail herebelow.
- a single subscriber received a message via a point-to-point transmission, and thus there was no need to deploy a multicast transmission mode.
- a second subscriber posts a subscription to the same content field, as discussed below.
- the subscriber labeled S 20 posts a subscription with an identical SAM address as the previous subscription made by S 19 .
- This subscription is then propagated hop by hop to the ancestor node, S 11 , as shown in FIG. 7 .
- S 11 When S 11 receives this subscription message, it compares it against the record of previously received subscriptions, and will discover that an identical subscription had been posted by S 19 . Therefore, S 11 detects that it is a fork node in the distribution path which includes S 19 and S 20 .
- the most efficient way to multicast a message to two sources which have a shared subpath is to transmit the message first to the fork node, which will then retransmit separate messages to each diverging subpath. Therefore, once an intermediate node detects that it is a fork node for a subscription, it will send a message to its ancestor nodes such that the distribution path is changed. It will then send a substitution message to its ancestor node, indicating that for the given predicate, the previously named receiver should be substituted by the fork node address, with the format:
- the fork node would send to the ancestor node the following message:
- Each ancestor node which receives this substitution message will change its subscriptions records appropriately and forward the message to its ancestor, following the same hop by hop propagation pattern as, preferably, with any subscription, and therefore effectively changing the routing information in all intermediate nodes.
- the fork node S 11 has modified its distribution list for the predicate “X>130”, such that it now includes both nodes S 19 and S 20 (a distribution list with more then one destination is a characteristic of a fork node). It then propagates the substitution message to S 5 , which will in turn substitute S 19 for S 11 (the fork node) in its distribution list associated with the predicate “X>130”).
- the intermediate node S 5 propagates the substitution message to its ancestor, S 2 , which will then change its routing information as shown above.
- S 2 then forwards the substitution message to its ancestor, S 0 .
- This node will in turn change the routing information for predicate “X>130”, and continue the upward propagation of the substitution message, directing it at S 0 .
- This node will then change its routing information for predicate “X>130”, and forwards the substitution message to the root of the SAM tree, which is the root node P 1 . This completes the propagation of the substitution message. From this point on, all future notifications of predicate “X>130” will now be directed to the fork node S 11 , to be retransmitted to the subscribers S 19 and S 20 in point to point manner, as illustrated in FIG. 9 .
- FIG. 10 shows the resulting network state after node S 22 posts a subscription for the same content.
- the subscription message is propagated hop by hop up the SAM tree, and the fork node condition is noticed by S 2 , which is the common ancestor node for the 3 subscribers to the same content: S 19 , S 20 and now S 22 .
- S 2 changes its routing information for the given predicate, now having two destinations, S 11 (another fork node) and S 22 (a subscriber).
- S 2 then sends a substitution message to its ancestor S 0 , notifying it of its condition as fork node for the predicate “X>130”.
- FIG. 10 shows the state of the routing tables after these steps.
- the notification path is therefore modified, as shown in FIG. 11 . It should be noticed that a single transmission is made from P 1 towards S 2 , which then relays it to S 22 and S 11 . Since S 11 is also a fork node, it will also relay the notification the two other receivers, S 19 and S 20 . It can be noted that only one message is transmitted in any particular subpath.
- FIG. 12 illustrates a decision process that each router node may preferably perform in receiving a notification message and routing to the next distribution point.
- a notification message is received from an ancestor node of the SAM tree.
- A is assigned as the SAM address listed in the notification.
- address A is looked up in the routing table.
- L is assigned as the list of addresses in the notification list that are indexed with address A.
- it is queried as to whether, for each address p in L, p is the address of the node in question. If yes, then at step 114 , notification is delivered to the SAM client on the node in question.
- step 118 the notification message is forwarded to the node addressed by p by using a point to point transmission.
- step 116 it is queried as to whether there are more elements in the notification list L. If yes, then the process returns to step 110 , while if no, then the process ends at 120 .
- subscription operations preferably originate at the subscriber nodes and are propagated hop by hop towards the root node of the SAM tree.
- the actions that each node takes in propagating the subscription message vary according to presence of a fork condition.
- the fork condition can be detected during the propagation of a subscription message by observing the following condition at any intermediate node:
- FIG. 13 illustrates a decision process that each SAM router node may preferably perform in receiving a SAM subscription message.
- a subscription message S is received from a direct descendant node, or “child node” (i.e., a descendant node that is adjacent).
- child node i.e., a descendant node that is adjacent.
- an “indirect descendant node” would be a descendant node that is not a child node
- a “parent” node would be a direct, or adjacent, ancestor node
- an “indirect ancestor node” would be an ancestor node which is not a parent.
- A is assigned as the address listed in the subscription
- B is assigned as the address of this node.
- the address A of the subscription is looked up in a SAM routing table.
- step 208 it is queried as to whether an entry with the address A is already listed in the routing table. If yes, then at step 210 it is queried as to whether there is only one member C in the distribution list indexed with the address A. If yes to this query, then it is evident that a fork condition is detected ( 212 ). Thence, at step 214 , the subscriber is added to the distribution list, indexed with address A. At 216 , a substitution message is propagated, the message being to substitute (A, B, C) to the parent node, or direct (adjacent) ancestor node. The process then ends at 224 .
- the subscriber node is immediately added to the distribution list, indexed with address A, with the process then ending at 224 .
- an “unsubscribe” operation preferably involves the modification of the notification stream such that nodes which no longer want to receive notifications from a certain subscription are excluded from the notification path. This process can essentially be thought as the reverse process of the subscribe process outlined above.
- the node Upon receiving a request for the deletion of a subscription, the node will preferably delete from the notification list the node that requested the deletion, and than take action according to the following cases:
- FIG. 14 The decision process of a node which receives an unsubscribe operation is shown in FIG. 14 .
- an “unsubscribe” message is received from a direct descendant node (i.e., a child node, or a descendant node that is adjacent).
- A is assigned as the SAM address listed in the subscription
- U is assigned as the address of the node that sent the unsubscription.
- the SAM address A of the subscription is looked up in a SAM routing table.
- it is queried as to whether there is an entry with the address A listed in the routing table whose notification list contains the address U.
- L is recognized as a set containing U and B.
- B is assigned as the address of the other node in the notification list, while C is assigned as the address of this node.
- U is deleted from the notification list of the entry indexed by A.
- the message “substitute (A,C,B)” is propagated. The process then ends at 334 .
- L is recognized as a set containing U and B and at least one other element.
- U is deleted from the notification list of the entry indexed by A. The process then ends at 334 .
- FIG. 15 illustrates a propagation method utilized for substitution messages, which may be utilized in accordance with at least one preferred embodiment of the present invention.
- A is assigned as the SAM address listed in the subscription
- B is assigned as the address to be overwritten
- N is assigned as the new address to be listed.
- the SAM address A of the subscription is looked up in the SAM routing table.
- the disclosure now briefly turns to a proof illustrating that the fork nodes are correctly identified by a subscription process in accordance with at least one embodiment of the present invention. It should be appreciated that the protocol described above correctly identifies the fork nodes in a distribution path which originates at the root of a bi-directional tree.
- the SAM tree was built in a process such that the publisher is at the root, and the receivers are the leaf nodes in the tree. Also assume that this tree is bi-directional, i.e. that it uniquely determines the communication path taken by messages from the root to any given subscriber, and vice versa. These paths are unique due to the basic acyclic requirement of the tree data structure. Assume, further, that any notification message that originates at the root node is routed by the intermediate nodes. Consider now that a notification message that originates at the root node needs to be routed to two receivers. Each notification message will be routed along a unique path. These two paths may or may not intersect, as previously described.
- a fork node is necessarily a node of convergence in the path of messages which originate at the leaves and are propagated to the source. Therefore, if intermediate nodes make a record of messages which originate from the leaves and are directed at the root, they will be able to detect that they are a point of convergence of messages that originate at two distinct leave points, and therefore a fork node, or point of divergence for messages which originate at the root.
- the present invention in accordance with at least one presently preferred embodiment, includes an arrangement for designating one of the nodes as a publisher node, an arrangement for designating at least one other of the nodes as at least one subscriber node, and an arrangement for propagating a transmission from the publisher node to the at least one subscriber node, which together may be implemented on at least one general-purpose computer running suitable software programs. These may also be implemented on at least one Integrated Circuit or part of at least one Integrated Circuit. Thus, it is to be understood that the invention may be implemented in hardware, software, or a combination of both.
Abstract
Description
-
- i. the basic point to point package switching operation
- ii. the extended multicast package switching operation, which is performed by the nodes in the network which function as SAM routers.
-
- i. Point to Point Address of the parent node
- ii Point to Point Address of each child node
- iii. SAM distribution lists for any of the subsets of the node's descendants
-
- <source,predicate>
where: - i. The address of a source of information is itself expressed as a pair of the format [host address, port number]. The host address conforms to the addressing scheme of the underlying point to point protocol. In a sample implementation using TCP/IP this address can be given in dotted decimal format, or alternatively as a host name which can be mapped into a network address, and the port number refers to a communication port which is bound to the publisher process.
- ii. The predicate field is utilized by the subscribers to specify a predicate which is interpreted by the publisher process to select a subset of the information stream.
- <source,predicate>
-
- <P1:7777,“X>130”>
-
- <P1:8888,“X=12345”>
-
- i. The label {P1,X>130} is the subscription address, where P1 is the source address and the string “X>130” is the predicate. This string is treated by the routing nodes as an actual address, based on its binary value. The routing nodes need have no knowledge of the semantics of the string, i.e., that it represented an inequality between a variable X and the constant 130. Only the subscription client and the publisher node need to understand the contents of the subgroup address. The publisher node utilizes this knowledge to filter the value of X and only notify subscribers when appropriate.
- ii. The list {S19) is the notification list, which at this point contains only one element.
-
- <predicate,previous_receiver, new_receiver>
-
- <“X>130”, S19, S11>
-
- “A node detects that it is a fork node when it receives a <source,predicate> subscription from another node, and discovers that it had already received a subscription for the same <source,predicate> address, and that the notification list associated with that subscription has only one member.”
-
- i. If a subscription is received with a SAM address for which there is not listed in the routing tables, then this is the first time that this node has a received a subscription for that predicate. In this case, a record is made of the subscription in the format <source, predicate, notification_list>, and the same subscription message that was received is propagated to the parent node.
- ii. If a subscription is received with a SAM address that is already listed in the node's SAM routing tables, and if there is only one member currently in the notification list for that predicate, then this is a case of the fork node condition. In this case the router node will add the subscriber named in the message to the distribution list of the given predicate. It will then send a substitution message in the format <source,predicate,new_receiver,previous_receiver> to the parent node.
- iii. If a subscription is received with a SAM address that is listed in the SAM routing tables of that node, and for which the notification list has two or more members, then this node has already been identified as a fork node In this case, the router node will simply add the node that posted the subscription operation to the distribution list of that SAM address and will not propagate any message.
-
- i. The deletion results in a notification list with two or more members: the node that does the deletion takes no further action, as it continues to function as a fork node in the message stream for at least two nodes.
- ii. The deletion results in a notification list with only one member, which is the node processing the deletion
- iii. The deletion results in a notification list with only one member, which is not the node processing the deletion. In this case the node that is processing the deletion will notice that it is acting as a superfluous hop in the notification stream, and it will propagate a substitution message with the purpose of eliminating that extra hop. In this case a substitution message, propagated upstream, has the format:
- <source,predicate, {deleted_member}, {added_member}>;
- where the deleted_member is the node processing the deletion and the added_member is the node which was left in the notification list. After receiving the notification that the substitution was propagated all the way to the publishing source, the deleting node will delete the subscription completely and will be excluded from the notification stream.
- iv. The deletion results in an empty notification list. In this case the node processing the deletion will propagate a substitution message upstream with the format
- <source, predicate, {deleted_member}, 0>
- where 0 indicates that the member is to be deleted.
Claims (15)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US09/906,928 US7239614B2 (en) | 2001-07-16 | 2001-07-16 | Methods and apparatus for the propagation of multicast transmissions in a communications network |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US09/906,928 US7239614B2 (en) | 2001-07-16 | 2001-07-16 | Methods and apparatus for the propagation of multicast transmissions in a communications network |
Publications (2)
Publication Number | Publication Date |
---|---|
US20030021258A1 US20030021258A1 (en) | 2003-01-30 |
US7239614B2 true US7239614B2 (en) | 2007-07-03 |
Family
ID=25423235
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US09/906,928 Expired - Lifetime US7239614B2 (en) | 2001-07-16 | 2001-07-16 | Methods and apparatus for the propagation of multicast transmissions in a communications network |
Country Status (1)
Country | Link |
---|---|
US (1) | US7239614B2 (en) |
Cited By (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20100110937A1 (en) * | 2008-10-31 | 2010-05-06 | Hewlett-Packard Development Company, L.P. | Systems and Methods for Improving Multicast Communications |
US20130073723A1 (en) * | 2006-03-21 | 2013-03-21 | David C. Sobotka | Matching engine for comparing data feeds with user profile criteria |
US20160065657A1 (en) * | 2014-08-29 | 2016-03-03 | International Business Machines Corporation | Message and subscription information processing |
Families Citing this family (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7117270B2 (en) * | 2001-08-15 | 2006-10-03 | Precache, Inc. | Method for sending and receiving a Boolean function over a network |
US20050086469A1 (en) * | 2003-10-17 | 2005-04-21 | Microsoft Corporation | Scalable, fault tolerant notification method |
Citations (7)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5606669A (en) * | 1994-05-25 | 1997-02-25 | International Business Machines Corporation | System for managing topology of a network in spanning tree data structure by maintaining link table and parent table in each network node |
US5784557A (en) * | 1992-12-21 | 1998-07-21 | Apple Computer, Inc. | Method and apparatus for transforming an arbitrary topology collection of nodes into an acyclic directed graph |
US6330229B1 (en) * | 1998-11-09 | 2001-12-11 | 3Com Corporation | Spanning tree with rapid forwarding database updates |
US20020016867A1 (en) * | 2000-05-02 | 2002-02-07 | Sun Microsystems, Inc. | Cluster event service method and system |
US6421570B1 (en) * | 1997-08-22 | 2002-07-16 | Honeywell Inc. | Systems and methods for accessing data using a cyclic publish/subscribe scheme with report by exception |
US20030235158A1 (en) * | 2001-03-09 | 2003-12-25 | Chung-Chieh Lee | Protocol for a self-organizing network using a logical spanning tree backbone |
US6839730B1 (en) * | 2000-07-14 | 2005-01-04 | Novell, Inc. | Method and system for efficiently matching events with subscribers in a content-based publish-subscribe system |
-
2001
- 2001-07-16 US US09/906,928 patent/US7239614B2/en not_active Expired - Lifetime
Patent Citations (7)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5784557A (en) * | 1992-12-21 | 1998-07-21 | Apple Computer, Inc. | Method and apparatus for transforming an arbitrary topology collection of nodes into an acyclic directed graph |
US5606669A (en) * | 1994-05-25 | 1997-02-25 | International Business Machines Corporation | System for managing topology of a network in spanning tree data structure by maintaining link table and parent table in each network node |
US6421570B1 (en) * | 1997-08-22 | 2002-07-16 | Honeywell Inc. | Systems and methods for accessing data using a cyclic publish/subscribe scheme with report by exception |
US6330229B1 (en) * | 1998-11-09 | 2001-12-11 | 3Com Corporation | Spanning tree with rapid forwarding database updates |
US20020016867A1 (en) * | 2000-05-02 | 2002-02-07 | Sun Microsystems, Inc. | Cluster event service method and system |
US6839730B1 (en) * | 2000-07-14 | 2005-01-04 | Novell, Inc. | Method and system for efficiently matching events with subscribers in a content-based publish-subscribe system |
US20030235158A1 (en) * | 2001-03-09 | 2003-12-25 | Chung-Chieh Lee | Protocol for a self-organizing network using a logical spanning tree backbone |
Cited By (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20130073723A1 (en) * | 2006-03-21 | 2013-03-21 | David C. Sobotka | Matching engine for comparing data feeds with user profile criteria |
US8713174B2 (en) * | 2006-03-21 | 2014-04-29 | Facebook, Inc. | Matching engine for comparing data feeds with user profile criteria |
US20100110937A1 (en) * | 2008-10-31 | 2010-05-06 | Hewlett-Packard Development Company, L.P. | Systems and Methods for Improving Multicast Communications |
US20160065657A1 (en) * | 2014-08-29 | 2016-03-03 | International Business Machines Corporation | Message and subscription information processing |
Also Published As
Publication number | Publication date |
---|---|
US20030021258A1 (en) | 2003-01-30 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US7813340B2 (en) | Methods and apparatus for updating subsource addressing multicast routing records in a communications network | |
US6961319B2 (en) | Methods and arrangements for distribution tree development | |
US7876754B2 (en) | Methods and arrangements for monitoring subsource addressing multicast distribution trees | |
US6944135B2 (en) | Methods and arrangements for establishing a group collaboration session utilizing multiple multicast distribution trees | |
KR960014987B1 (en) | Interdomain multicast routing | |
US7103054B2 (en) | Methods and arrangements for building a subsource address multicast distribution tree using point to point routing records | |
US6636895B1 (en) | System, device, and method for distributing multicast routing information in a protocol independent multicast network | |
Garcia-Luna-Aceves et al. | The core-assisted mesh protocol | |
US7644177B2 (en) | Multicast-routing-protocol-independent realization of IP multicast forwarding | |
US6526054B1 (en) | System, device, and method for transitioning from DVMRP to BGMP for interdomain multicast routing over the internet multicast backbone | |
US6791980B1 (en) | System, device, and method for reducing the number of multicast routes maintained in a multicast routing information base | |
US7088684B2 (en) | Methods and arrangements for dynamically modifying subsource address multicast data distribution trees | |
US6947392B2 (en) | Methods and arrangements for building a subsource address multicast distribution tree using traced routes | |
US7009971B2 (en) | Methods and arrangements for multicasting a data stream at different data rates to groups of subscribers | |
KR20160078248A (en) | System and method for multi-source multicasting in content-centric networks | |
US7239614B2 (en) | Methods and apparatus for the propagation of multicast transmissions in a communications network | |
Ballardie et al. | Core Based Tree (CBT) Multicast | |
Madruga et al. | Multicasting along meshes in ad-hoc networks | |
Garcia-Luna-Aceves | Efficient multi-source multicasting in information centric networks | |
Cisco | Configuring IP Enhanced IGRP | |
Cisco | Configuring IP Enhanced IGRP | |
Zappala | Routing Support For RSVP | |
Sehgal et al. | A flexible concast-based grouping service | |
AU2004217224B2 (en) | Method and device for protocol-independent realization of IP multicast | |
Levine et al. | Internet Multicasting Based on Group-Relative Addressing |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: IBM CORPORATION, NEW YORKFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:NOVAES, MARCOS N.;REEL/FRAME:012021/0031Effective date: 20010716 |
|
FEPP | Fee payment procedure |
Free format text: PAYOR NUMBER ASSIGNED (ORIGINAL EVENT CODE: ASPN); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
REMI | Maintenance fee reminder mailed | ||
FPAY | Fee payment |
Year of fee payment: 4 |
|
SULP | Surcharge for late payment | ||
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:INTERNATIONAL BUSINESS MACHINES CORPORATION;REEL/FRAME:026664/0866Effective date: 20110503 |
|
FPAY | Fee payment |
Year of fee payment: 8 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044127/0735Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 12TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1553); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 12 |
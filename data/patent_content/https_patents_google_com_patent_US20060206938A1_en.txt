US20060206938A1 - E-mail management services - Google Patents
E-mail management services Download PDFInfo
- Publication number
- US20060206938A1 US20060206938A1 US11/416,733 US41673306A US2006206938A1 US 20060206938 A1 US20060206938 A1 US 20060206938A1 US 41673306 A US41673306 A US 41673306A US 2006206938 A1 US2006206938 A1 US 2006206938A1
- Authority
- US
- United States
- Prior art keywords
- message
- user
- actions
- ems
- data
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Abandoned
Links
- 238000000034 method Methods 0.000 claims abstract description 196
- 238000012384 transportation and delivery Methods 0.000 claims abstract description 70
- 238000007726 management method Methods 0.000 claims abstract description 39
- 230000009471 action Effects 0.000 claims description 48
- 238000012545 processing Methods 0.000 claims description 22
- 238000011156 evaluation Methods 0.000 claims description 7
- 230000000977 initiatory effect Effects 0.000 claims 3
- 230000000875 corresponding effect Effects 0.000 claims 1
- 238000000682 scanning probe acoustic microscopy Methods 0.000 claims 1
- 230000008569 process Effects 0.000 abstract description 140
- 239000011159 matrix material Substances 0.000 abstract description 30
- 230000005540 biological transmission Effects 0.000 abstract description 29
- 230000008520 organization Effects 0.000 description 27
- 238000010586 diagram Methods 0.000 description 17
- 238000012544 monitoring process Methods 0.000 description 15
- 241000700605 Viruses Species 0.000 description 11
- 230000004044 response Effects 0.000 description 8
- 230000001502 supplementing effect Effects 0.000 description 7
- 230000000694 effects Effects 0.000 description 6
- 238000003306 harvesting Methods 0.000 description 6
- 238000001514 detection method Methods 0.000 description 5
- 230000006399 behavior Effects 0.000 description 3
- 230000008901 benefit Effects 0.000 description 3
- 239000003795 chemical substances by application Substances 0.000 description 3
- 238000001914 filtration Methods 0.000 description 3
- 238000012012 milestone trend analyses Methods 0.000 description 3
- 238000004891 communication Methods 0.000 description 2
- 230000003111 delayed effect Effects 0.000 description 2
- 238000012986 modification Methods 0.000 description 2
- 230000004048 modification Effects 0.000 description 2
- 238000012552 review Methods 0.000 description 2
- 238000012546 transfer Methods 0.000 description 2
- 230000001960 triggered effect Effects 0.000 description 2
- 230000004913 activation Effects 0.000 description 1
- 230000002730 additional effect Effects 0.000 description 1
- 230000000903 blocking effect Effects 0.000 description 1
- 238000012790 confirmation Methods 0.000 description 1
- 238000010276 construction Methods 0.000 description 1
- 230000007812 deficiency Effects 0.000 description 1
- 238000010304 firing Methods 0.000 description 1
- 238000003780 insertion Methods 0.000 description 1
- 230000037431 insertion Effects 0.000 description 1
- 238000013507 mapping Methods 0.000 description 1
- 230000007246 mechanism Effects 0.000 description 1
- 230000002265 prevention Effects 0.000 description 1
- 239000013589 supplement Substances 0.000 description 1
- 238000010200 validation analysis Methods 0.000 description 1
Images
Classifications
-
- G06Q50/60—
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L63/00—Network architectures or network communication protocols for network security
- H04L63/14—Network architectures or network communication protocols for network security for detecting or protecting against malicious traffic
- H04L63/1441—Countermeasures against malicious traffic
- H04L63/145—Countermeasures against malicious traffic the attack involving the propagation of malware through the network, e.g. viruses, trojans or worms
-
- G06Q50/40—
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L51/00—User-to-user messaging in packet-switching networks, transmitted according to store-and-forward or real-time protocols, e.g. e-mail
- H04L51/21—Monitoring or handling of messages
- H04L51/212—Monitoring or handling of messages using filtering or selective blocking
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L51/00—User-to-user messaging in packet-switching networks, transmitted according to store-and-forward or real-time protocols, e.g. e-mail
- H04L51/21—Monitoring or handling of messages
- H04L51/23—Reliability checks, e.g. acknowledgments or fault reporting
Definitions
- Disclosed embodiments herein relate generally to e-mail management systems and more particularly to e-mail management systems (EMSs) employing traffic monitoring and management, and for managing and filtering electronic messages based on the traffic monitoring and management.
- EMSs e-mail management systems
- E-mail management is commonly handled by ISPs that have user/subscribers or by companies which employs the e-mail users.
- a part of e-mail management comprises filtering for spam or virus control, but when such e-mail management is performed at the ISP or at the company server location, valuable communications bandwidth and computing resources are expended on routing, analyzing, and other handling of spurious e-mail traffic.
- Present e-mail management systems are further characterized by a lack of real-time monitoring, feedback, and updating of rules regarding e-mail traffic or SMTP connection situations. Management and monitoring of e-mail traffic situations is commonly handled through human intervention.
- Other present systems for blocking spam or viruses include systems that populate decoy email addresses around the Internet, where the decoy email addresses act as spam collectors. Human editors then review the messages that come in, catalog them, and create a database of such junk-mail messages and their checksums. The created database is then promulgated to subscribers of the service, and each message received at the customer premises is checked against the virus/spam database. Again, in this instance, the detection and monitoring of the Internet for new virus and spam messages is not in real time, and the customer premise mail server must still receive all of the spurious e-mails and then analyze all the incoming emails to see whether there is a match in the database.
- the present invention provides, in one aspect, a traffic monitor for use with a computer process in managing the transmission of electronic messages from sending mail servers to receiving mail servers, wherein messages sent from the sending mail servers comprise source data associated with the sending mail servers and destination data associated with the receiving mail servers.
- the traffic monitor includes a data matrix for storing the source and destination data for a plurality of incoming electronic messages, and an interface coupled to the matrix.
- the interface is configured to facilitate supplementing of the source and destination data with metadata provided by the computer process and based on the plurality of electronic messages, and to facilitate access to the source and destination data and the metadata for use in processing the plurality of electronic messages.
- the present invention provides a method for use with a computer process in managing the transmission of electronic messages from sending mail servers to receiving mail servers, wherein messages sent from the sending mail servers comprise source data associated with the sending mail servers and destination data associated with the receiving mail servers.
- the method includes collecting and storing in real time, without completing the connection process, the source and destination data for a plurality of incoming electronic messages, and supplementing the source and destination data with metadata provided by the computer process and based on the plurality of electronic messages.
- the method includes analyzing and processing in the computer process the plurality of electronic messages based on the source and destination data and the metadata.
- the present invention provides an electronic message management system (EMS) for use in managing the transmission of electronic messages from sending mail servers to receiving mail servers, wherein messages sent from the sending mail servers comprise source data associated with the sending mail servers and destination data associated with the receiving mail servers.
- the EMS includes a traffic monitor having a data matrix for storing the source and destination data for a plurality of incoming electronic messages, and an interface for facilitating access to the data matrix.
- the EMS includes a message handling process coupled to the interface and configured to supplement the source and destination data with metadata extrapolated from the plurality of electronic messages.
- the EMS still further includes an interpreter process coupled to the interface and configured to access the source and destination data and the metadata to generate processing instructions based thereon.
- the message handling process is further configured to process the plurality of electronic messages based on the processing instructions.
- the present invention provides a method for managing the transmission of electronic messages from sending mail servers to receiving mail servers, wherein messages sent from the sending mail servers comprise source data associated with the sending mail servers and destination data associated with the receiving mail servers.
- the method includes storing the source and destination data for a plurality of incoming electronic messages in a data matrix, and extrapolating metadata from the plurality of electronic messages.
- the method includes supplementing the source and destination data with the metadata, and accessing the source and destination data and the metadata via an interface.
- the method also includes generating processing instructions based on the source and destination data and the metadata, and processing the plurality of electronic messages based on the processing instructions.
- the present invention provides an EMS for use in managing the transmission of electronic messages from sending mail servers to receiving mail servers.
- the EMS includes a connection management module configured to extract source data associated with the sending mail servers and destination data associated with the receiving mail servers from a plurality of incoming electronic messages.
- the EMS includes a data matrix for storing the source and destination data, and an interface coupled between the data matrix and the connection management module.
- the interface is configured to facilitate supplementing of the source and destination data with metadata extrapolated from the plurality of incoming electronic messages, and to facilitate access to the source and destination data and the metadata.
- the connection management module is further configured to accept any of the plurality of incoming electronic messages from the sending mail servers based on the source and destination data and the metadata.
- the present invention provides a method for managing the transmission of electronic messages from sending mail servers to receiving mail servers.
- the method includes extracting source data associated with the sending mail servers and destination data associated with the receiving mail servers from a plurality of incoming electronic messages.
- the method also includes supplementing the source and destination data with metadata extrapolated from the plurality of electronic messages, and accepting any of the plurality of electronic messages from the sending mail servers based on the source and destination data and the metadata.
- the present invention provides an EMS for use in managing the transmission of electronic messages from sending mail servers to receiving mail servers.
- the EMS includes a data matrix for storing source data associated with the sending mail servers and destination data associated with the receiving mail servers for a plurality of incoming electronic messages.
- the EMS also includes an interface coupled to the data matrix and configured to facilitate supplementing of the source and destination data with metadata extrapolated from the plurality of electronic messages, and to facilitate access to the source and destination data and the metadata.
- the EMS still further includes a delivery management module coupled to the interface and configured to deliver any of the plurality of incoming electronic messages to the receiving mail servers based on the source and destination data and the metadata.
- the present invention provides a method for managing the transmission of electronic messages from sending mail servers to receiving mail servers.
- the method includes storing source data associated with the sending mail servers and destination data associated with the receiving mail servers from a plurality of incoming electronic messages.
- the method also includes supplementing the source and destination data with metadata extrapolated from the plurality of electronic messages.
- the method further includes delivering any of the plurality of electronic messages to the receiving mail servers based on the source and destination data and the metadata.
- FIG. 1 is a general block diagram generally describing e-mail delivery over the Internet
- FIG. 2 is a block diagram illustrating possible placements of an active E-Mail Management System in the Internet e-mail delivery path;
- FIG. 3 is a block diagram showing in more detail the architecture and placement in an e-mail delivery network of an electronic message E-mail management system
- FIG. 4 is a more-focused block diagram of a message handling computer process, focusing on some of the elements of an EMS, and showing a possible routing of e-mail messages through this portion of the EMS;
- FIG. 5 is an overview of an EMS in which multiple message handling computer processes are connected to a single traffic monitor and its associated interpreter process;
- FIG. 6 is a block diagram illustrating one embodiment for a hierarchical division of email management functions to be applied to destination IP addresses that may be managed with an EMS constructed according to the principles disclosed herein;
- FIG. 7 is a database structure forming a connection management table that can be used by the connection manager to act on events in connection with a predetermined hierarchy;
- FIG. 8 is a flowchart illustrating a method for managing the transmission of electronic messages, including writing data to and receiving instructions from components of the EMS;
- FIG. 9 is a flowchart illustrating the process flow for assigning control instructions based on a sending IP address, and configuration parameters for the particular recipient in the organizational hierarchy managed by the EMS;
- FIG. 10 is a flowchart illustrating the process flow for the Interpreter process resource within an EMS
- FIG. 11 graphically illustrates data structures that can be employed in the described embodiments for real-time traffic monitoring
- FIG. 12 is a flowchart illustrating the process flow for a Spool Delivery resource for the described embodiments
- FIG. 13 is a screen shot of an example access page for an administrative console for use with an EMS according to the present invention.
- FIG. 14 is a screen shot of an example page for monitoring and configuring a connection manager used in an EMS according to the present invention.
- FIG. 15 is a screen shot of another example page for a connection manager used in an EMS.
- FIG. 16 is a screen shot of an example page for monitoring and configuring a delivery manager used in an EMS according to the present invention.
- FIG. 17 is a screen shot of another example page for a delivery manager used in an EMS.
- Sending mail servers 102 a , 102 b (having associated source Internet protocol (IP) addresses) and receiving mail servers 102 c , 102 d (having associated destination IP addresses), or other message gateways, allow electronic messages, such as electronic mails (or “e-mails”) to be delivered to and from sending client machines 104 a - 104 d to receiving client machines 104 e - 104 h , or other devices such as cell phones, pagers, and/or hand-held computers.
- IP Internet protocol
- e-mails electronic mails
- the transmission direction of the e-mails may also be reversed, where the sending machines and servers become the receiving machines and servers and vice versa.
- E-mail messages are typically composed by an application running on a client machine 104 .
- the user uploads the completed message to a mail server 102 .
- the mail server 102 in one embodiment is owned by an Internet Service Provider (ISP) or by a private corporation for whom the user works.
- ISP Internet Service Provider
- the user client machine 104 connects to the mail server 102 via dial-up, digital subscriber loop (DSL), cable Internet, or by other appropriate means.
- DSL digital subscriber loop
- RFC 822 obsoleted by RFC2822 which are a standard and a proposed standard, respectively, promulgated by Internet Engineering Task Force (“IETF”).
- RFC821 obsoleted by RFC 2821, which are also a standard and a proposed standard, respectively, of the IETF. These standards can be found at www.ietf.org.
- the present disclosure hereby incorporates by reference the subject matter of the RFC 821 and RFC 822 standards and the RFC 2821 and RFC2822 proposed standards. If the proposed standards are updated from the versions published in April 2001, it is the subject matter of the April 2001 versions of these proposed standards that is hereby incorporated by reference.
- the RFC 821 and RFC 2821 documents describe a Simple Mail Transport Protocol (“SMTP”), which is the protocol by which e-mail messages have typically been transported over the Internet.
- SMTP Simple Mail Transport Protocol
- MTAs Mail Transfer Agents
- MUAs Mail User Agents
- UUAs Mail User Agents
- the SMTP mail transport protocol uses domain names to route messages from a sender to a receiver of e-mail.
- a distributed database of TCP/IP addresses corresponding to particular domain names is maintained across the Internet 101 in Domain Name Servers (“DNSs”) 108 .
- DNSs Domain Name Servers
- the source mail servers 102 a , 102 b would generally take the address specified by the sending user and inquire of a DNS server 108 the IP address to be assigned to the particular addressed domain name.
- an “address” is a character string that identifies a user to whom mail will be sent, a user or source that is sending mail, or a location into which mail will be deposited.
- emailbox refers to that depository.
- IP Internet Protocol
- a DNS lookup is performed to resolve the domain name.
- the email 110 is then sent from the source mail server 102 a , 102 b via the Internet 101 to the identified domain.
- FIG. 2 illustrated is a block diagram 200 of an embodiment in which an active Electronic Message (e.g., E-Mail) Management System (EMS) 203 is provided between Internet 101 and receiving mail server 202 .
- the EMS 203 of the present invention is “active” and automated since it is constantly managing attempted transmissions of electronic messages without the need for human intervention at various steps of the management process.
- an EMS 203 according to the principles disclosed herein is automated, and configured to manage message delivery in real-time.
- the EMS system is able to interpret conditions, analyze patterns, and manage the delivery of data to the receiving server 202 by performing processing steps as each of the SMTP connection between the sender and recipient are processed.
- the EMS 203 is able to perform management steps at each stage of the SMTP transaction in order to minimize impact on the destination server 202 , while providing security and management. So that mail intended for the mail server 202 , and thus the receiving client's terminal 204 , is routed through the EMS 203 , the numerical IP address in the DNS 108 that is associated with the domain name of the targeted mail server 202 is updated to reflect the numerical address of the EMS 203 .
- the domain name of the mail server 202 is “anywhere.com” and the numerical IP addresses for the mail server 202 and EMS 203 were “1234.5678.9876.5432” and “9876.5432.1234.5768,” respectively. Then the records in the distributed DNS database 108 for “anywhere.com” would be updated to reflect the EMS's numerical address “9876.5432.1234.5768,” rather than “1234.5678.9876.5432.”
- the EMS 203 can be located anywhere on the Internet 101 . It can also be located either outside or within the mail server's 202 associated firewall 210 , as shown by the optional positioning of the firewall 210 at position “A” (outside the firewall) or at position “B” (inside the firewall). Alternatively, the EMS 203 could possibly run on the same physical machine as the mail server 202 .
- FIG. 3 illustrated is a more detailed diagram, including a block diagram 300 of the EMS 203 .
- An administrative console web page 316 (including its admin module 318 ), may be located on the same particular server machine as the actual EMS system 203 for providing an administrative access tool to assist in configuring how the EMS 203 processes incoming electronic messages.
- the connections between the EMS 203 and the mail servers 102 a , 102 c may be made through Internet or SMTP connections.
- the EMS 203 could exist inside or outside a particular firewall with or without one of the mail servers 102 a , 102 c.
- the system shown in FIG. 3 handles mail from a “sending” mail server 102 a .
- the designation of one mail server as a “sender” and the other as a “receiver” is arbitrary. Practically speaking, both mail servers 102 a , 102 c will generally act as both sender and receiver of electronic messages from and to the mail servers' 102 a , 102 c sending and receiving clients 104 a , 104 e .
- at least one of the mail servers' 102 a , 102 c domain names will be associated with the EMS 203 in the DNS distributed database and its servers 108 .
- the console 316 receives information from the EMS 203 regarding the types of electronic messages which are coming in for particular users or groups of users, such as information regarding the suspected viruses and spam e-mails, directory harvest attacks, or unwanted content or delivery attempts that have been sent to the user or users. It is the administrative console 316 that is employed to configure the parameters of filtering to be applied by the EMS 203 for that user or organization. The administrative console 316 receives information from the EMS 203 regarding traffic patterns on the system, such as an inordinate number of e-mails being sent from a certain domain or other suspicious traffic patterns.
- the administrative console 316 may be a web-based application having an “admin” software module 318 running on a web server or optionally on the same intermediate platform as the EMS 203 .
- the EMS 203 is shown in FIG. 3 as including a message handling computer process 320 having a number of interconnected software modules. The layout of these various software modules in the message handling process 320 is not indicative of any particular physical structure in the machine running these software modules.
- One module included within the process 320 is a connection management module, or simply a connection manager 322 .
- the connection manager 322 is responsible for setting up and monitoring incoming SMTP connections from UAs/mail servers 102 a (or Mail Transfer Agents).
- the connection manager 322 is the entry point to the EMS 203 , and it monitors the incoming SMTP connection attempts and e-mail messages.
- the process 320 is further connected to a traffic monitor 340 , which collects incoming SMTP connection data, message metadata, and message delivery information.
- An interpreter process 350 which may be a particular type of software daemon, is further provided.
- the interpreter process 350 interacts with the data in the traffic monitor 340 to recognize patterns of messages within the traffic of messages that can be acted upon. More specifically, the connection manager 322 , the email handler 326 , the applications 332 s , and a delivery management module (or simply a delivery manager 324 ), all comprising portions of the process 320 , write source and destination data, as well as metadata, to the traffic monitor 340 during the processing of incoming messages.
- the source and destination data is comprised of source data associated with the sending mail server 102 a , and destination data associated with the receiving mail server 104 e .
- the metadata is extrapolated from the electronic messages by the process 320 using the applications 332 , which are program threads for detecting unwanted messages, such as specific messages as defined by content type or size.
- Table 1 sets forth more detailed examples of metadata generated by the EMS 203 , but the list is not intended to be exclusive.
- the interpreter process 350 analyzes both the source and destination data and the metadata written into the traffic monitor 340 . For example, when a large number of messages are coming in from the same outside UA mail server 1 02 a , this might be indicative of a spam attack or other denial of service or unwanted delivery activity.
- the interpreter process 350 may notice such trends through patterns of the source and destination data and the metadata stored in the traffic monitor 340 , and initiate actions in the mail handler 326 to block the offending e-mails.
- the interpreter process 350 is a specific software daemon created for such tasks, but the present invention is not limited to any particular embodiment. Examples of other patterns or conditions that the interpreter process 350 may detect based on the source and destination data and the metadata include, but are not limited to:
- Idle customer servers where the idle customer servers may have unused capacity and are able to accept more messages.
- a database 360 is also provided in this embodiment to log the actions of the interpreter process 350 and/or the information about the filtered e-mail, and to store configuration parameters for applying message processing actions based on patterns recognized in the traffic monitor 340 .
- the administrative console 316 has access to the database 360 and, in turn, to the interpreter process 350 , whereby the actions taken can be reviewed and the system can be configured with regard to the actions to be taken in certain types of circumstances.
- a delivery manager 324 which has the ability to know, in real time, the state of receiving UA mail servers 102 c to which the EMS 203 is sending messages.
- the mail handler 326 Between the connection manager 322 and the delivery manager 324 is the mail handler 326 , which manages the overall processes within the EMS 203 .
- the mail handler 326 is conceptually connected to a Multipurpose Internet Mail Extensions (MIME) decoder 328 and to an application interface 330 .
- the application interface 330 provides an interface between the mail handler 326 and applications 332 , which will assist in writing information to the traffic monitor 340 , which becomes the basis for the metadata.
- MIME Multipurpose Internet Mail Extensions
- the interpreter process 350 will interpret patterns in the data stored in the traffic monitor 340 , as described above, and update records in a connection management table (conman table) 370 .
- the conman table 370 stores this message processing information, typically in the form of disposition instructions, which regulate how the connection and delivery for incoming messages and for specific source IP addresses are to be processed. Examples of disposition instructions, appearing in the way of disposition flags in the records of the conman table 370 , include, but are not limited to:
- connection management Record (conman record) is written to the conman table 370 to reject or throttle SMTP connections, thus protecting the organization.
- patterns and behavior can be identified based on the source and destination data and the metadata, and connection management records can be rolled up and applied for the entire customer base.
- the connection manager 322 queries the conman table 370 in order to determine if there are specific instructions on handling the request from the sending IP address.
- the connection manager 322 then uses the disposition instructions in the conman table 370 to dispose of the message appropriately or to prevent a connection by the sending mail server 102 a in the first place.
- the delivery manager 324 may be instructed by the interpreter process 350 , via a delivery manager table 380 , to dispose of the message appropriately.
- the delivery manager table 380 is similar to the conman table 370 in that the interpreter process 350 or each EMS process 203 writes message processing instructions into the table 380 based on the data stored in the traffic monitor 340 .
- Disposition instructions that may appear in the delivery manager table 380 , rather than the conman table 370 include, but are not limited to:
- the mail handler 326 in this embodiment includes a message processing server (MPS) 426 , which is designed to be a fast, stateless mail handler.
- the MPS 426 takes an incoming e-mail message 110 and can “scrape” or extract information from the message 110 as it is going by, i.e., without imposing a delay on the delivery of the message 110 .
- the MPS 426 is also able to conditionally deliver messages via the delivery manager 324 , either on its own accord or according to instructions from the interpreter process 350 (see FIG. 3 ).
- the interpreter process 350 determines from the data in the traffic monitor 340 that a connection attempt or group of connection attempts from a common source IP address is a directory harvest attack, the interpreter process 350 can update the conman table 370 to instruct the connection manager 322 to reject the connection. Alternatively, the interpreter process 350 may update the delivery manager table 380 to instruct the delivery manager 324 to otherwise dispose of the message. If an application, such as a spam detection application 332 , returns the value of a message that suggests it is spam, the MPS 426 , in coordination with the interpreter process 350 , can configure the delivery of the message to route it to a quarantine website. The decisions on which electronic messages are passed, diverted, deferred, etc. are made in part based on the metadata generated from the universe of incoming messages, and based on the way the EMS 203 has been configured through the administrative console 316 and the applications 332 selected for processing the messages.
- FIG. 4 there is provided a metadata collector submodule 430 and an event sender submodule 432 , which perform functions described with respect to the embodiment of FIG. 3 of collecting data from the electronic messages entering the EMS 203 and of providing that information to the traffic monitor 340 .
- these submodules are shown associated with the MPS 426 , they could be separate software modules or they could be associated with the metadata collector 430 .
- the applications 332 do not specifically write to the conman table 370 , they may be configured, via the application interface 330 , to: a) process the message, b) update disposition flags based on process results, and c) deliver the metadata to the traffic monitor 340 .
- An additional feature of the embodiments described in FIGS. 3-4 is the ability to tailor the delivery of e-mails according to the loading at the destination UA email server 102 c .
- the deliver manager 324 can detect loading issues in the designation UA email server 102 c by, for instance, delay by the server 102 c in acknowledging the receipt of previous e-mail messages.
- the output buffer relay 440 and spool relay 442 serve to spool outgoing messages based on detected loading issues in the destination UA e-mail server 102 c.
- FIG. 5 illustrated is a block diagram 500 illustrating an embodiment where two or more message handling computer processes 320 a , 320 b are each operating independently, but are connected to a single traffic monitor 340 and conman table 370 .
- Each process 320 a - n also shares data regarding the current open connections with the receiving server.
- This shared delivery manager table 380 contains a current status at any time of all messages in transit to the receiving server.
- the processes 320 a , 320 b include event senders 432 a , 432 b , which send metadata to the traffic monitor 340 about the occurring events in the streaming e-mail traffic.
- the traffic monitor 340 has an event listener 502 that is the communications interface to the event senders 432 a , 432 b of the processes 320 a , 320 b .
- the traffic monitor 340 and interpreter process 350 in this embodiment thus monitor and control multiple processes 320 a , 320 b , for multiple incoming streams of electronic messages, as shown.
- an exemplary data matrix in the form of a data table 504 , is shown.
- incidences of e-mails from multiple sources to multiple destinations are arranged as a table, mapping along the rows, messages from particular sources, and along the columns, messages to particular destinations.
- Potential spam might show up in the table 504 , then, as an instance where a large percentage of the destinations have received messages from a particular source, thereby appearing as a nearly full row in the table 504 .
- the interpreter process 350 then turns to the database 360 and consults the rules in the database 360 by which the interpreter process 350 has been instructed to operate through the configuration of those rules via the administrative console 316 .
- Exemplary rules would include the definition of a spam attack (e.g., 100 or some other number of messages from a single IP address), and the actions to take on a spam attack, such as limiting the number of connections granted to the IP address or deleting all incoming e-mails from that IP address.
- a spam attack e.g., 100 or some other number of messages from a single IP address
- Other examples of situations prompting the creation of message handling rules could be a virus attack, directory harvest attack, e-mail bomb, etc., as stated above.
- connection managers 322 a , 322 b and delivery managers 324 a , 324 b associated with that database 360 will use the configuration information in the database 360 and the conman table 370 on each message transaction, based on the destination IP address, to ensure that they are operating under the most up-to-date set of rules.
- the connection managers 322 a , 322 b provide event information to the traffic monitor 340 during this process.
- the interpreter process 350 which monitors the traffic monitor 340 , can in turn update the conman table 370 based on detected patterns in the traffic monitor 340 that violate specified rules. Modules in the computer processes 320 a , 320 b then connect with the database 360 , the conman table 370 and the traffic monitor 340 on each message transaction to receive the most current configuration and access restrictions set forth by the rules or with the delivery manager table 380 , and get instructions on delivery to the destination server based on current conditions.
- the system can be constantly updating itself with the most recent connection and delivery information and thereby adapt, in real-time, to changing loads of electronic message traffic, without human review or intervention.
- the interpreter process 350 updates the conman table 370 , which is queried by all of the connection managers 322 a , 322 b in all of the MPSs 426 a , 426 b so they all simultaneously know the needed activity promulgated in the rules.
- Logs 506 All transaction data is stored in Logs 506 .
- the Logs 506 will keep records of all message transactions and parameters.
- detailed reports 508 are generated, perhaps on a daily basis, on what servers sent what to certain destination addresses. In such an embodiment, this data may be presented in a graphical web-based format, or it may be downloaded as raw data by a user.
- Information on which the reports 508 may be generated include, but are not limited to, source IP address, message content type, message volume, recipient information, etc.
- Alerts 510 may also be configured for informing an administrator(s) of conditions regarding their system. For example, if the EMS 203 detects a directory harvest attack, the interpreter process 350 will update the conman table 370 and generate an alert to the specified recipient. In another example, if a mail server goes down, the interpreter process 350 will update the disposition flag in the conman table 370 to spool, and generate an alert to the specified recipient. As such, Alerts 510 can be generated based on all conditions that the interpreter process 350 identifies.
- a user database hierarchy 600 is established whereby parameters for the identification and disposition of managing connections and scanning message data, as well as other events, can be tailored according to the position of the user within the hierarchy 600 . All users within the system fall beneath the top level 602 in the hierarchy, and thus there will be established certain rules for all users in belonging to the system.
- users may belong to subsidiary organizations, which are the customers 604 a - 604 c to the top-level 602 administrator.
- a user at Acme Corporation might have the e-mail address user 1 @acme.com, where the address acme.com is the top-level 602 domain server address associated with Acme in the distributed DNS database servers 108 .
- E-mails would be acted upon according to the top-level 602 rules.
- the specific rules of acme.com would be applied to those users, because user 1 as “customer # 1 ” 604 a in the hierarchy would have set forth its particular requirements. The particular requirements of user 1 , however, would not be applied to the user groups associated with “customer # 2 ” 605 b or “customer # 3 ” 604 c.
- FIG. 7 illustrated is a database structure 700 that can be used by a connection manager to act on events in connection with the hierarchy of FIG. 6 .
- conman records 710 for use in a conman table 370 are organized by an Internal Identifier (“IID”) 710 a , which is a record of where the recipient resides in the hierarchy 600 , as well as which configuration parameters are set.
- IID Internal Identifier
- additional fields that can be included in the conman records 710 for the starting IP address 710 b and the ending address 710 c for originating IP addresses of messages.
- Other exemplary fields are the expiration time 710 d for the conman record 710 , as well as the disposition flag 710 e of the conman table 370 , which is the action to be taken by the connection manager 322 in response to particular connection requests.
- conman records 710 it is the interpreter process 350 that creates the conman records 710 according to rules that have been set-up for users within the organizational hierarchy 600 .
- conman records 710 may also be created manually through the administrative console 316 .
- These records 710 may be stored in the database 360 or in another database accessible by the connection manager 322 .
- a single IID may have multiple records 710 .
- These records 710 contain an expiration value 710 d that allows blocked, throttled, or otherwise controlled sending mail servers, to retain status as legitimate senders without restriction, if their messaging practices are cleaned up. Once the expiration value 710 d is reached, the connection manager 322 and MPS 426 will process individual messages from that sender. If they are continuing to send viruses, a new record 710 in the conman table 370 will be established. This process will repeat until the condition of the sender changes and they begin sending legitimate email messages.
- FIG. 7 Also illustrated in FIG. 7 is a detailed record 720 a - i of possible disposition flags 710 e within the conman table 370 .
- the illustrated examples are message accept 720 a , message reject 720 b , message quarantine 720 c , message spool 720 d , message defer 720 e , message throttle 720 f , message redirect 720 g , connection rejection 720 h , and blackhole 720 i .
- the invention is not limited to these specific disposition flags 710 e.
- FIG. 8 illustrated is one embodiment of the operation of an MPS through an operational flowchart.
- the process begins at a start step, and then moves to step 800 , where a sender opens a connection via a sender mail server in an attempt to send an electronic message, such as an e-mail, to a targeted user connected to a receiving mail server.
- an EMS constructed according to the principles described herein intercepts the connection attempt by the sender, and receives information from the sender, such as SMTP information (e.g., sender's IP address).
- SMTP information e.g., sender's IP address
- the EMS receives similar information, such SMTP information (e.g., the receiver's e-mail address), regarding the intended receiver of the message.
- SMTP information e.g., the receiver's e-mail address
- the process moves to a step 806 , where this data is compared with records in a connection management (conman) table.
- the records in the table may be updated by an interpreter process based on information held in the data matrix of a traffic monitor. If any blocks on transmissions from the sender have been instituted, a negative response is given at step 806 and the transmission attempt is rejected.
- the process may move from step 802 , where the sender's SMTP information is received by the EMS, to step 806 , where the IP address of the sender is compared with potential disposition flags in the conman table. In this case, the transmission attempt by the sender would be rejected without the need to receive the receivers SMTP information at step 804 .
- step 806 if no blocks against the sender are found in the conman table, an affirmative response is given and the process moves to step 808 .
- step 808 the intended recipient's information is validated against a list of users in a user database or directory, as well as a user list in a destination server directory. If the attempted transmission does not contain valid recipient information, a negative response is given at step 808 and the transmission is rejected. Also, even if a valid recipient is found in the user database, if the recipient information is not also validated against the user list in the destination server database, the transmission may be rejected. If validation from both the user database and the destination server database is obtained, an affirmation response is given and the process moves to step 810 .
- a delivery manager table is queried to determine whether the intended message can be delivered to the destination server. For example, the delivery manager table may be queried to determine if the destination server is capable of receiving the transmission or has it's load limit been reached. If the destination server is not read to receive the message, an affirmation response is given at step 810 and the transmission attempt is deferred for delivery at a later time, once the destination server is ready to receive the message. If the destination server is capable of receiving the message, a negative response is given at step 810 and the process moves to a step 812 . As indicated in the diagram, data regarding the sender and recipient has been written to the traffic monitor throughout this process.
- step 812 all of the data in the attempted transmission is received by the EMS, including header or other routing information, as well as the data forming the intended electronic message to be delivered.
- the process then moves to step 814 , where the configuration profile established by rules set forth by, for example, configuration settings for the user or the organization, are read in order to determine how to process the message.
- step 816 applications are employed to perform analysis of the message data to identify unwanted, prohibited or damaging messages. Metadata associated with the results of this processing is written to the traffic monitor and used by the interpreter process to determine patterns or conditions used to establish connection and delivery guidelines. Examples of the metadata created by using the applications are set forth above in Table 1.
- step 818 the results of the application processing are compared against the contents of the configuration database. If the results of the application processing suggest an alternate disposition flag than the flag currently available for the message, a new disposition flag is inserted.
- step 820 the results from step 818 are compared to any disposition flags assigned to the message as were set forth in the conman table. If, at step 820 , a disposition flag indicating the attempted transmission will not be accepted at this time, the process moves to the appropriate step corresponding with the existing disposition flag in the conman table. More specifically, if the message is to be spooled, the process moves to step 822 . If the message is to be quarantined, the process moves to step 824 . If the message is to be sent to a “black hole”, the process moves to step 826 . If the message is to be deferred, the process moves to step 828 . If the message is to be redirected, the process moves to step 830 .
- step 832 the message is transmitted to the intended destination sever.
- step 834 the message is received by the destination server.
- step 836 the destination server sends an acknowledgment of receipt of the message (an “ACK”) back to the EMS to acknowledge receipt of the message from the delivery manager in the EMS.
- step 838 the EMS transmits an ACK of transmission back to the original sender of the message to inform the sender that the message has been transmitted to the targeted user. The process then ends.
- FIG. 9 illustrated is a flow diagram 900 setting forth one embodiment of the procedures employed by the connection manager 322 for use in managing incoming electronic messages. More specifically, the diagram 900 illustrates assigning control instructions based on a sending IP address, and configuration parameters for the particular recipient in the organizational hierarchy managed by the EMS 203 .
- the connection manager 322 is initiated into operation by the MPS 426 , each time the MPS 426 detects a new “RCPT” command identifying a new recipient in the traffic stream.
- the initial operating condition of the connection manager 322 is thus shown in the diagram 900 , at step 902 .
- the connection manager 322 queries the conman table 370 for records having an IID that corresponds to the new recipient.
- control is passed to a secondary control loop in which each IID record is read (step 908 ), examined to see whether it is still active or expired (step 910 ), and acted upon (step 912 ).
- a single IID may have multiple records, and so the above actions in steps 908 - 912 are repeated as shown in the diagram 900 , as long as there are additional records for the IID as reflected at decision block 914 .
- a particular recipient may fit at a certain level within a hierarchy, and the particular connection actions can be tailored in this method according to each of these hierarchical levels. Accordingly, at step 916 , the particular IID is examined for its membership at a next higher hierarchical level. If there are connection manager 322 records in the conman table 370 that are associated with the particular IID at this hierarchical level, then according to the flow of the process for decision step 918 , the actions of the loop, steps 908 - 914 are repeated for all of the actions associated with the IID at the higher level.
- control returns to the decision step 920 , whereupon the IID relative to the hierarchical levels is examined to see whether the top hierarchical level has been reached. If the highest hierarchical level has been reached, the connection manager 322 returns control to the MPS 426 .
- Connections may be characterized as a pair of endpoints—sender and recipient.
- the connections can be managed based on the sender/recipient pair, or they may be managed based on just the recipient identifier.
- IP address ranges can be used to specify senders and/or recipients, and depending on the location of the indefiniteness, the ranges or indefiniteness can also be used to specify where a particular IP address belongs within a hierarchy.
- the IP address's membership in sets defined by certain IP address ranges can also be used to define that address's hierarchical organization memberships.
- Connection management records may be inserted on a per-organization basis within the hierarchy, and they may be inherited from higher-level organizations down to lower-level organizations. As described with respect to the process flow of FIG. 9 , the records can be processed in a bottom-up fashion, from a particular organization up to the root organization. When multiple records are present at a single organization, they may be processed in expire-time order, with the ones expiring at the latest date being examined first. Alternatively, they may be processed in a different order depending on how the process is defined.
- FIG. 10 illustrated is an operational flow diagram 1000 of the interpreter process 350 , which was also generally described in the text accompanying FIGS. 3-4 .
- Execution of the process flow for the interpreter process 350 begins at step 1002 , which is the sleep state for the process. After a certain period of time, e.g., fifteen seconds, execution of the program flow moves to step 1004 .
- the EMS 203 configuration is updated for all the organizations for which the EMS 203 is responsible. This process may be referred to as “synchronization.”
- the interpreter process 350 begins to analyze the traffic events occurring for each organization identified in step 1004 . As a part of this action, the EMS 203 evaluates the traffic events occurring as reflected in the data stored in the traffic monitor 340 .
- step 1010 the EMS 203 evaluates the event conditions for the particular EMS 203 event rule for the organization under consideration.
- the interpreter process 350 software queries whether the particular rule is an active one. If the rule is not active, the process flow goes to decision step 1014 , whereupon the software module queries whether there are more EMS 203 event rules to be processed for the particular organization. If there are no further EMS 203 event rules for the particular organization, the process flow proceeds to decision step 1016 , at which the software module queries whether there are additional EMS 203 organizations for which the EMS 203 events should be processed.
- the software module returns operation to the sleep mode at step 1002 , which was the beginning of this process flow. If, however, there are additional EMS 203 organizations having EMS 203 event rules to be processed, then operation would return to step 1006 , at which the software module will again begin the process of evaluating the EMS 203 traffic against the EMS 203 event rules for this other organization.
- step 1010 the event conditions are evaluated against each EMS 203 event rule. If, in this case, at decision step 1012 the rule is active, the software flow would proceed to step 1020 .
- the interpreter process 350 evaluates each traffic cell, where a traffic cell is a single connection between a source and a destination, and is represented in the traffic monitor 340 by a single cell in the data table 504 .
- decision step 1022 if a positive result of the evaluation of the particular traffic cell at step 1020 is positive (“result greater than one”), then execution of the interpreter process 350 algorithm continues to decision step 1024 .
- decision step 1024 the rule state is evaluated to see whether it has previously been triggered.
- step 1026 the event execution is begun. If the rule state has already been triggered, then execution of the event will continue at step 1028 . In either case operation continues at step 1030 , at which time a process is begun for “firing” the actions that are associated with particular event states.
- the interpreter process 350 queries whether that particular action associated with the event already has a state associated with it in the process execution. If no, the interpreter process 350 then queries whether the particular action should be delayed at decision step 1034 . If the action should not be delayed, at step 1036 , the particular action is “fired” and a state is set indicating the activation of that action. Next, at decision step 1038 , the interpreter process 350 queries whether there are additional actions to fire. If so, execution returns to step 1030 ; in this loop, steps 1030 to 1039 continue until all actions associated with a particular event have been processed.
- step 1040 the interpreter process 350 software examines whether there are more traffic cells to be evaluated. If there are additional traffic cells to evaluate, the process returns to step 1020 . If there are no more traffic cells to evaluate, the process returns to decision step 1014 , at which it is determined whether there are additional EMS 203 rules to be processed. Based on this decision, the process can continue at previously described steps 1010 or 1016 .
- step 1050 the interpreter process 350 queries whether the particular rule state was previously ON. If not, there is no particular action to take with respect to this rule state, and the processing of traffic cells can continue at decision step 1040 . If, however, the rule state had previously been ON, but is now OFF, which is the situation indicated by a positive result at decision step 1050 , then the process proceeds to step 1052 to evaluate the ending procedures for that particular rule state. If a positive result occurs at decision step 1054 , then the event end for the particular rule state is processed at step 1056 . If, however, there is not an end process to execute as indicated by a negative result at decision step 1054 , then the algorithm of the interpreter process 350 will continue to process additional traffic cells through decision step 1040 and its subsequent branches.
- FIG. 11 illustrated are data structures that can be employed in an embodiment of the EMS 203 for the real-time monitoring of traffic in the traffic monitor 340 .
- multiple message handling computer processes 320 a , 320 b are employed, whereby multiple connections to a single traffic monitor 340 and interpreter process 350 are processed in parallel.
- FIG. 11 shows the MPSs 426 a - 426 d of multiple such computer processes 320 a , 320 b connected to a single ring buffer 1102 , which ultimately provides data in this embodiment for a single traffic monitor.
- the MPSs 426 a - 426 d send their data to the ring buffer 1102 in small, asynchronous blocks of data.
- the data may be tagged with a time and a session ID in each instance.
- each block of data might be tagged with a header, “SID8, 00:02,” which would indicate that the session ID is session number 8, and the time for the receipt of the data is 00:02.
- the session IDs and times shown in this example are merely examples, and session IDs into the hundreds or thousands could be used. In addition, time indicators as precise as thousandths of a second or less could also be used.
- the ring buffer 1102 holds all the data generated by the connection managers 322 , delivery managers 324 , MPSs 426 a - 426 d , and, in this example, it sorts the data in SID order, which reduces searching overhead during insertion into a later intermediary format and may also provide efficiency when storing data into the ring buffer 1102 .
- the traffic monitoring data is then stored into an intermediary data structure 1110 .
- the data is placed into groups 1120 associated with the session IDs, where the groups 1120 have records for each connection (C 1 , C 2 . . . CN), and for each message (M 1 , M 2 , M 3 . . . ) sent over each connection.
- This data is continually updated with new data from the ring buffer 1102 , and it is continually refreshed when the data is older than the data stored in the actual traffic monitor data matrix 1130 .
- the structure of the data matrix 1130 is only an exemplary format for the traffic monitor data matrix 1130 , and is maintained for access by the interpreter process 350 .
- Use of the intermediary data structure 1110 allows for a more compact traffic monitor data matrix 1130 , which can be structured so as to have no empty cells.
- the data matrix 1130 is arranged with different IIDs (destinations) populating different rows and with differing Source IPS (SIPs, or sources) as the differing columns within each row. By individually structuring each row with independent column entries for the SIPs, it is possible to build this data table or matrix 1130 as shown in FIG. 11 , with no empty cells. Then, within each cell, different statistics can be provided, and the interpreter process 350 will be able to recognize certain activity based on the information stored in those cells.
- the interpreter process 350 can have access to the traffic monitor data matrix 1130 .
- At least two different mechanisms can be provided to allow access to the contents of the data matrix 1130 —direct and polled.
- the interpreter process 350 can lock up a given cell of the data matrix 1130 to read that cell's data in real time.
- polled access a process can be provided for multiple resources to request access to data in the data matrix 1130 via a network.
- the data matrix 1130 or a process associated with the data matrix 1130 , can arbitrate the requests, and at certain periods can lock the requested data in the data matrix 1130 , and access and send that data to the requesting resources.
- the data can be requested as raw data, summary data, or it can be requested by a customer mailhost.
- the presently described system has the ability to map in a data matrix, in real time, all incoming requests and requested destinations, all relevant message parameters (spam, virus, recipients, connection time, data size, destination server return code, etc), as well as to monitor the connection/destination matrix in real time for any number of recipient email addresses or mail servers across multiple customers, and to immediately initiate action automatically based on a real-time monitoring of the state of the traffic monitor data matrix 1130 .
- Other system abilities possessed in the described embodiments include the ability to recognize, in real time, all SMTP connections that are being originated in order to request a connection to a recipient mail system, and not just necessarily a single server.
- the described EMS is also able to use matrix data from one customer/recipient to modify actions for another. For example, if the EMS recognizes a “spammer” based on its actions towards one customer group, the EMS is also able to prevent spam from that source from reaching other destinations.
- the EMS described herein can handle, filter, and monitor, and react against, in real time, many incoming connections.
- the EMS is also operable, however, to tune the delivery of messages to a destination mail server based on the loading in that server or on other conditions. It can balance loads among multiple destination servers, spool outgoing messages to destination servers in a controlled manner, and conditionally deliver messages to destination servers based on different conditions.
- the Spool Delivery Manager is invoked by an MPS plug-in that runs on the message handling computer process of the EMS, and works in harmony with the connection manager to determine whether or not messages should be spooled.
- the Spool Delivery Manager functions as follows:
- the Spooler is a modified MPS application running on the spool server that accepts messages from the Spool Delivery Manager, and stores them in a spool repository.
- the Spooler functions as follows:
- the Despooler is also a modified MPS application running on the spool server that accepts messages from the Spool Delivery Manager, and stores them in a spool repository. To this end, the Despooler functions as follows:
- FIG. 13 illustrated is a screen shot 1300 of an example access page for an administrative console for use with an EMS according to the present invention.
- the access page is available to users and/or system administrators for monitoring of statistics and alarms occurring in their electronic messaging networks.
- the access page may be employed by users and/or system administrators for the configuration of rules employed by the EMS to manage the transmission of electronic messages.
- the particular access page shown here includes multiple access tabs, including “Connection Mgr”, “Delivery Mgr”, “Spool Mgr”, Alerts” and “Reports”.
- the access page in FIG. 13 provides status of the individual components, as well as an overview of the flow of electronic messages into the system.
- FIG. 14 illustrated is a screen shot 1400 of an example page for monitoring and configuring a connection manager used in an EMS according to the present invention.
- this access page displays the status of the connection manager in an EMS, as well as providing statistics of particular transmission violations that have occurred.
- the particular offending activities illustrated are only directory harvest attacks, virus outbreaks, e-mail bombs and spam attacks, the access page may be configured to illustrated statistics of other types of offending behaviors without limitation.
- FIG. 15 is a screen shot 1500 of another example access page for a connection manager used in an EMS of the present invention.
- this access page provides definitions for specific offending actions of incoming electronic messages to assist users in configuring the EMS as their needs arise.
- this access page also includes various detection and prevention selections, allowing users a broader range of choices for the management of their incoming electronic messages.
- FIG. 16 illustrated is a screen shot 1600 of an example page for monitoring and configuring a delivery manager used in an EMS according to the present invention.
- This access page displays the status of the delivery manager in an EMS, as well as providing statistics of particular delivery (or non-delivery) actions taken by the EMS in response to offending activities of incoming messages.
- this access page allows users to monitor the status of distinct destination servers, for example, to determine the free capacity of such destination servers.
- FIG. 17 illustrated is a screen shot of another example page for a delivery manager used in an EMS.
- this access page allows the user to configure specific details of the individual destination servers shown in FIG. 16 .
- Configuration parameters that may be altered through this access page include connection capacities, as well as adding new destination servers to the EMS to enjoy the protection provided by the present invention.
Abstract
Description
- This application is a continuation of U.S. patent application Ser. No. 10/908,060, filed on Apr. 26, 2005, and entitled “Systems and Methods for Managing the Transmission of Electronic Messages Via Message Source Data”, that is a continuation of U.S. Pat. No. 6,941,348 issued on Sep. 6, 2005, and entitled “Systems and Methods for Managing the Transmission of Electronic Messages Through Active Message Date Updating”, that claims the benefit of U.S. Provisional Application Ser. No. 60/357,893, filed on Feb. 19, 2002, and entitled “E-Mail Management Services” commonly assigned with the present invention and incorporated herein by reference.
- Disclosed embodiments herein relate generally to e-mail management systems and more particularly to e-mail management systems (EMSs) employing traffic monitoring and management, and for managing and filtering electronic messages based on the traffic monitoring and management.
- E-mail management is commonly handled by ISPs that have user/subscribers or by companies which employs the e-mail users. A part of e-mail management comprises filtering for spam or virus control, but when such e-mail management is performed at the ISP or at the company server location, valuable communications bandwidth and computing resources are expended on routing, analyzing, and other handling of spurious e-mail traffic. Present e-mail management systems are further characterized by a lack of real-time monitoring, feedback, and updating of rules regarding e-mail traffic or SMTP connection situations. Management and monitoring of e-mail traffic situations is commonly handled through human intervention.
- Other present systems for blocking spam or viruses include systems that populate decoy email addresses around the Internet, where the decoy email addresses act as spam collectors. Human editors then review the messages that come in, catalog them, and create a database of such junk-mail messages and their checksums. The created database is then promulgated to subscribers of the service, and each message received at the customer premises is checked against the virus/spam database. Again, in this instance, the detection and monitoring of the Internet for new virus and spam messages is not in real time, and the customer premise mail server must still receive all of the spurious e-mails and then analyze all the incoming emails to see whether there is a match in the database.
- To address the above-discussed deficiencies of the prior art, the present invention provides, in one aspect, a traffic monitor for use with a computer process in managing the transmission of electronic messages from sending mail servers to receiving mail servers, wherein messages sent from the sending mail servers comprise source data associated with the sending mail servers and destination data associated with the receiving mail servers. In one embodiment, the traffic monitor includes a data matrix for storing the source and destination data for a plurality of incoming electronic messages, and an interface coupled to the matrix. In this embodiment, the interface is configured to facilitate supplementing of the source and destination data with metadata provided by the computer process and based on the plurality of electronic messages, and to facilitate access to the source and destination data and the metadata for use in processing the plurality of electronic messages.
- In another aspect, the present invention provides a method for use with a computer process in managing the transmission of electronic messages from sending mail servers to receiving mail servers, wherein messages sent from the sending mail servers comprise source data associated with the sending mail servers and destination data associated with the receiving mail servers. In one embodiment, the method includes collecting and storing in real time, without completing the connection process, the source and destination data for a plurality of incoming electronic messages, and supplementing the source and destination data with metadata provided by the computer process and based on the plurality of electronic messages. In addition, the method includes analyzing and processing in the computer process the plurality of electronic messages based on the source and destination data and the metadata.
- In a further aspect, the present invention provides an electronic message management system (EMS) for use in managing the transmission of electronic messages from sending mail servers to receiving mail servers, wherein messages sent from the sending mail servers comprise source data associated with the sending mail servers and destination data associated with the receiving mail servers. In one embodiment, the EMS includes a traffic monitor having a data matrix for storing the source and destination data for a plurality of incoming electronic messages, and an interface for facilitating access to the data matrix. Also, the EMS includes a message handling process coupled to the interface and configured to supplement the source and destination data with metadata extrapolated from the plurality of electronic messages. In this embodiment, the EMS still further includes an interpreter process coupled to the interface and configured to access the source and destination data and the metadata to generate processing instructions based thereon. In such an embodiment, the message handling process is further configured to process the plurality of electronic messages based on the processing instructions.
- In another aspect, the present invention provides a method for managing the transmission of electronic messages from sending mail servers to receiving mail servers, wherein messages sent from the sending mail servers comprise source data associated with the sending mail servers and destination data associated with the receiving mail servers. In one embodiment, the method includes storing the source and destination data for a plurality of incoming electronic messages in a data matrix, and extrapolating metadata from the plurality of electronic messages. In addition, the method includes supplementing the source and destination data with the metadata, and accessing the source and destination data and the metadata via an interface. The method also includes generating processing instructions based on the source and destination data and the metadata, and processing the plurality of electronic messages based on the processing instructions.
- In still a further embodiment, the present invention provides an EMS for use in managing the transmission of electronic messages from sending mail servers to receiving mail servers. In one embodiment, the EMS includes a connection management module configured to extract source data associated with the sending mail servers and destination data associated with the receiving mail servers from a plurality of incoming electronic messages. In addition, the EMS includes a data matrix for storing the source and destination data, and an interface coupled between the data matrix and the connection management module. In such an embodiment, the interface is configured to facilitate supplementing of the source and destination data with metadata extrapolated from the plurality of incoming electronic messages, and to facilitate access to the source and destination data and the metadata. In such an embodiment, the connection management module is further configured to accept any of the plurality of incoming electronic messages from the sending mail servers based on the source and destination data and the metadata.
- In a further embodiment, the present invention provides a method for managing the transmission of electronic messages from sending mail servers to receiving mail servers. In one embodiment, the method includes extracting source data associated with the sending mail servers and destination data associated with the receiving mail servers from a plurality of incoming electronic messages. The method also includes supplementing the source and destination data with metadata extrapolated from the plurality of electronic messages, and accepting any of the plurality of electronic messages from the sending mail servers based on the source and destination data and the metadata.
- In yet a further embodiment, the present invention provides an EMS for use in managing the transmission of electronic messages from sending mail servers to receiving mail servers. In one embodiment, the EMS includes a data matrix for storing source data associated with the sending mail servers and destination data associated with the receiving mail servers for a plurality of incoming electronic messages. The EMS also includes an interface coupled to the data matrix and configured to facilitate supplementing of the source and destination data with metadata extrapolated from the plurality of electronic messages, and to facilitate access to the source and destination data and the metadata. In this embodiment, the EMS still further includes a delivery management module coupled to the interface and configured to deliver any of the plurality of incoming electronic messages to the receiving mail servers based on the source and destination data and the metadata.
- In yet another embodiment, the present invention provides a method for managing the transmission of electronic messages from sending mail servers to receiving mail servers. In one embodiment, the method includes storing source data associated with the sending mail servers and destination data associated with the receiving mail servers from a plurality of incoming electronic messages. The method also includes supplementing the source and destination data with metadata extrapolated from the plurality of electronic messages. In such an embodiment, the method further includes delivering any of the plurality of electronic messages to the receiving mail servers based on the source and destination data and the metadata.
- The foregoing has outlined preferred and alternative features of the present invention so that those skilled in the art may better understand the detailed description of the invention that follows. Additional features of the invention will be described hereinafter that form the subject of the claims of the invention. Those skilled in the art should appreciate that they can readily use the disclosed conception and specific embodiments as a basis for designing or modifying other structures for carrying out the same purposes of the present invention. Those skilled in the art should also realize that such equivalent constructions do not depart from the spirit and scope of the present invention.
- For a more complete understanding of the present invention, reference is now made to the following detailed description taken in conjunction with the accompanying drawings. It is emphasized that various features may not be drawn to scale. In fact, the dimensions of various features may be arbitrarily increased or reduced for clarity of discussion. In addition, it is emphasized that some components may not be illustrated for clarity of discussion. Reference is now made to the following descriptions taken in conjunction with the accompanying drawings, in which:
-
FIG. 1 is a general block diagram generally describing e-mail delivery over the Internet; -
FIG. 2 is a block diagram illustrating possible placements of an active E-Mail Management System in the Internet e-mail delivery path; -
FIG. 3 is a block diagram showing in more detail the architecture and placement in an e-mail delivery network of an electronic message E-mail management system; -
FIG. 4 is a more-focused block diagram of a message handling computer process, focusing on some of the elements of an EMS, and showing a possible routing of e-mail messages through this portion of the EMS; -
FIG. 5 is an overview of an EMS in which multiple message handling computer processes are connected to a single traffic monitor and its associated interpreter process; -
FIG. 6 is a block diagram illustrating one embodiment for a hierarchical division of email management functions to be applied to destination IP addresses that may be managed with an EMS constructed according to the principles disclosed herein; -
FIG. 7 is a database structure forming a connection management table that can be used by the connection manager to act on events in connection with a predetermined hierarchy; -
FIG. 8 is a flowchart illustrating a method for managing the transmission of electronic messages, including writing data to and receiving instructions from components of the EMS; -
FIG. 9 is a flowchart illustrating the process flow for assigning control instructions based on a sending IP address, and configuration parameters for the particular recipient in the organizational hierarchy managed by the EMS; -
FIG. 10 is a flowchart illustrating the process flow for the Interpreter process resource within an EMS; -
FIG. 11 graphically illustrates data structures that can be employed in the described embodiments for real-time traffic monitoring; -
FIG. 12 is a flowchart illustrating the process flow for a Spool Delivery resource for the described embodiments; -
FIG. 13 is a screen shot of an example access page for an administrative console for use with an EMS according to the present invention; -
FIG. 14 is a screen shot of an example page for monitoring and configuring a connection manager used in an EMS according to the present invention; -
FIG. 15 is a screen shot of another example page for a connection manager used in an EMS; -
FIG. 16 is a screen shot of an example page for monitoring and configuring a delivery manager used in an EMS according to the present invention; -
FIG. 17 is a screen shot of another example page for a delivery manager used in an EMS. - Referring initially to
FIG. 1 , illustrated is aprior art system 100 for the delivery of e-mail messages through theInternet 101 or other computer network. Sendingmail servers mail servers - E-mail messages are typically composed by an application running on a client machine 104. When composition of the message is completed, the user uploads the completed message to a mail server 102. The mail server 102 in one embodiment is owned by an Internet Service Provider (ISP) or by a private corporation for whom the user works. The user client machine 104 connects to the mail server 102 via dial-up, digital subscriber loop (DSL), cable Internet, or by other appropriate means. One standard for e-mail formats is described by
RFC 822 obsoleted by RFC2822, which are a standard and a proposed standard, respectively, promulgated by Internet Engineering Task Force (“IETF”). The protocol by which e-mail messages are transmitted from sending mail server 102 to receiving mail server 102 are described by RFC821, obsoleted by RFC 2821, which are also a standard and a proposed standard, respectively, of the IETF. These standards can be found at www.ietf.org. The present disclosure hereby incorporates by reference the subject matter of the RFC 821 andRFC 822 standards and the RFC 2821 and RFC2822 proposed standards. If the proposed standards are updated from the versions published in April 2001, it is the subject matter of the April 2001 versions of these proposed standards that is hereby incorporated by reference. The RFC 821 and RFC 2821 documents describe a Simple Mail Transport Protocol (“SMTP”), which is the protocol by which e-mail messages have typically been transported over the Internet. - SMTP servers and SMTP clients (SMTP clients are network computers, not to be confused with the client machines 104) provide a mail transport service, and therefore act as Mail Transfer Agents (“MTAs”). Mail User Agents (“MUAs” or “UAs”) are normally thought of as the sources and targets of mail. At the source, an MUA might be the
source mail server network 101. The final (“delivery”) MTA would be thought of as handing the mail off to an MUA, which might be thedestination mail server - The SMTP mail transport protocol uses domain names to route messages from a sender to a receiver of e-mail. A distributed database of TCP/IP addresses corresponding to particular domain names is maintained across the
Internet 101 in Domain Name Servers (“DNSs”) 108. Thus, to route an e-mail to its destination, thesource mail servers DNS server 108 the IP address to be assigned to the particular addressed domain name. As used in this specification, an “address” is a character string that identifies a user to whom mail will be sent, a user or source that is sending mail, or a location into which mail will be deposited. The term “mailbox” refers to that depository. The two terms are typically used interchangeably unless the distinction between the location in which mail is placed (the mailbox) and a reference to it (the address) is important. An address normally consists of user and domain specifications; however, addresses may have different forms depending on usage and type of address. The standard mailbox naming convention is defined to be “local-part@domain”; contemporary usage permits a much broader set of applications than simple “user names”. The local part of the address is typically interpreted and assigned semantics only by the host specified in the domain part of the address. In contrast, the standard Internet Protocol (IP) address is typically a specific string of numbers identifying a source or destination server. - Once the
source mail server DNS server 108, is performed to resolve the domain name. Theemail 110 is then sent from thesource mail server Internet 101 to the identified domain. - Turning now to
FIG. 2 , illustrated is a block diagram 200 of an embodiment in which an active Electronic Message (e.g., E-Mail) Management System (EMS) 203 is provided betweenInternet 101 and receivingmail server 202. TheEMS 203 of the present invention is “active” and automated since it is constantly managing attempted transmissions of electronic messages without the need for human intervention at various steps of the management process. In this sense, anEMS 203 according to the principles disclosed herein is automated, and configured to manage message delivery in real-time. The EMS system is able to interpret conditions, analyze patterns, and manage the delivery of data to the receivingserver 202 by performing processing steps as each of the SMTP connection between the sender and recipient are processed. Traditional e-mail servers will typically accept the message data and write the message to disk prior to performing analysis. TheEMS 203 is able to perform management steps at each stage of the SMTP transaction in order to minimize impact on thedestination server 202, while providing security and management. So that mail intended for themail server 202, and thus the receiving client's terminal 204, is routed through theEMS 203, the numerical IP address in theDNS 108 that is associated with the domain name of the targetedmail server 202 is updated to reflect the numerical address of theEMS 203. For example, suppose the domain name of themail server 202 is “anywhere.com” and the numerical IP addresses for themail server 202 andEMS 203 were “1234.5678.9876.5432” and “9876.5432.1234.5768,” respectively. Then the records in the distributedDNS database 108 for “anywhere.com” would be updated to reflect the EMS's numerical address “9876.5432.1234.5768,” rather than “1234.5678.9876.5432.” - Although this figure shows the
EMS 203 as being physically adjacent to themail server 202, such placement is only for illustration purposes. TheEMS 203 can be located anywhere on theInternet 101. It can also be located either outside or within the mail server's 202 associatedfirewall 210, as shown by the optional positioning of thefirewall 210 at position “A” (outside the firewall) or at position “B” (inside the firewall). Alternatively, theEMS 203 could possibly run on the same physical machine as themail server 202. - Looking now at
FIG. 3 , illustrated is a more detailed diagram, including a block diagram 300 of theEMS 203. An administrative console web page 316 (including its admin module 318), may be located on the same particular server machine as theactual EMS system 203 for providing an administrative access tool to assist in configuring how theEMS 203 processes incoming electronic messages. The connections between theEMS 203 and themail servers EMS 203 could exist inside or outside a particular firewall with or without one of themail servers - Generally, the system shown in
FIG. 3 handles mail from a “sending”mail server 102 a. The designation of one mail server as a “sender” and the other as a “receiver” is arbitrary. Practically speaking, bothmail servers clients EMS 203 in the DNS distributed database and itsservers 108. In embodiments employing theadministrative console 316, theconsole 316 receives information from theEMS 203 regarding the types of electronic messages which are coming in for particular users or groups of users, such as information regarding the suspected viruses and spam e-mails, directory harvest attacks, or unwanted content or delivery attempts that have been sent to the user or users. It is theadministrative console 316 that is employed to configure the parameters of filtering to be applied by theEMS 203 for that user or organization. Theadministrative console 316 receives information from theEMS 203 regarding traffic patterns on the system, such as an inordinate number of e-mails being sent from a certain domain or other suspicious traffic patterns. Theadministrative console 316 may be a web-based application having an “admin”software module 318 running on a web server or optionally on the same intermediate platform as theEMS 203. - The
EMS 203 is shown inFIG. 3 as including a message handlingcomputer process 320 having a number of interconnected software modules. The layout of these various software modules in themessage handling process 320 is not indicative of any particular physical structure in the machine running these software modules. One module included within theprocess 320 is a connection management module, or simply aconnection manager 322. Theconnection manager 322 is responsible for setting up and monitoring incoming SMTP connections from UAs/mail servers 102 a (or Mail Transfer Agents). Theconnection manager 322 is the entry point to theEMS 203, and it monitors the incoming SMTP connection attempts and e-mail messages. Theprocess 320 is further connected to atraffic monitor 340, which collects incoming SMTP connection data, message metadata, and message delivery information. - An
interpreter process 350, which may be a particular type of software daemon, is further provided. Theinterpreter process 350 interacts with the data in thetraffic monitor 340 to recognize patterns of messages within the traffic of messages that can be acted upon. More specifically, theconnection manager 322, theemail handler 326, the applications 332 s, and a delivery management module (or simply a delivery manager 324), all comprising portions of theprocess 320, write source and destination data, as well as metadata, to thetraffic monitor 340 during the processing of incoming messages. The source and destination data is comprised of source data associated with the sendingmail server 102 a, and destination data associated with the receivingmail server 104 e. The metadata is extrapolated from the electronic messages by theprocess 320 using theapplications 332, which are program threads for detecting unwanted messages, such as specific messages as defined by content type or size. Table 1 sets forth more detailed examples of metadata generated by theEMS 203, but the list is not intended to be exclusive.TABLE 1 frontConnections The number of times that the source IP address has connected to the targeted organization in the last 60 seconds openFrontConnections The number of connections from this IP address to the organization currently open backConnections The number of times EMS has connected to the mailserver for the organization on behalf of this source IP address in the last 60 seconds openBackConnections As with openFrontConnections backendFailed Like backConnections, but records the number of failed connection attempts (used to detect down mail server) numMessages The number of messages which have been sent from the source IP address to users in this organization numSpam As above, but the number quarantined as spam numVirus As above, but the number quarantined as having a virus conBlock, conBlackhole, The number of messages for which conman dispositions of block conSpool, conQtine (bounce), blackhole, spool, and quarantine have been applied for the source IP address/organization pair size Message size, in bytes; mean and standard deviation frontDuration Duration of inbound connections; mean and standard deviation backDuration Duration of outbound connections; mean and standard deviation numRecipients The number of recipients on messages; mean and standard deviation Errors4 400-class errors between source IP address/organization Errors5 500-class errors between source IP address/organization summary per org The sum of traffic from all inbound IP addresses summary record per Record of when individual destination mailhosts go down org/mailhost numAttachment The number of messages from the source IP address with unwanted attachments numContent The number of messages from the source IP address with unwanted content numDeferred The number of temporary deferral errors from the destination IP address numUnknown The number of unknown user errors from the destination IP address - To determine patterns with the electronic messages, or even behavior of the user sending the messages, the
interpreter process 350 analyzes both the source and destination data and the metadata written into thetraffic monitor 340. For example, when a large number of messages are coming in from the same outsideUA mail server 1 02 a, this might be indicative of a spam attack or other denial of service or unwanted delivery activity. Theinterpreter process 350 may notice such trends through patterns of the source and destination data and the metadata stored in thetraffic monitor 340, and initiate actions in themail handler 326 to block the offending e-mails. In an advantageous embodiment, theinterpreter process 350 is a specific software daemon created for such tasks, but the present invention is not limited to any particular embodiment. Examples of other patterns or conditions that theinterpreter process 350 may detect based on the source and destination data and the metadata include, but are not limited to: -
- Directory harvest attack detection, where a statistically significant percentage of delivery attempts are directed to invalid users with the intent of compiling a list of valid addresses on the server.
- Email Bomb detection, where the same or similar message is delivered repeatedly to the same user or group of users.
- Spam Attacks, where a significant percentage of the data being sent from a source IP address is spam or otherwise unwanted e-mails.
- Virus Attacks where a significant percentage of the data being sent from a source IP address is virus-infected.
- Denial of Service connection requests, where a sending IP address is repeatedly connecting and holding the connection open or not delivering meaningful data.
- Unresponsive customer servers, where connection attempts fail and messages should be redirected or spooled.
- At-capacity customer servers, where the customer server is at threshold capacity and should not receive additional messages.
- Idle customer servers, where the idle customer servers may have unused capacity and are able to accept more messages.
-
- Next server, where the next e-mail server in the allocated rotation of recipient servers should receive the next message.
- Busy customer servers, where the customer server is returning a deferral error suggesting that it is unable to process requests.
- A
database 360 is also provided in this embodiment to log the actions of theinterpreter process 350 and/or the information about the filtered e-mail, and to store configuration parameters for applying message processing actions based on patterns recognized in thetraffic monitor 340. Theadministrative console 316 has access to thedatabase 360 and, in turn, to theinterpreter process 350, whereby the actions taken can be reviewed and the system can be configured with regard to the actions to be taken in certain types of circumstances. - Conceptually, at the other side of the
process 320 is adelivery manager 324, which has the ability to know, in real time, the state of receivingUA mail servers 102 c to which theEMS 203 is sending messages. Between theconnection manager 322 and thedelivery manager 324 is themail handler 326, which manages the overall processes within theEMS 203. Themail handler 326 is conceptually connected to a Multipurpose Internet Mail Extensions (MIME)decoder 328 and to anapplication interface 330. Theapplication interface 330 provides an interface between themail handler 326 andapplications 332, which will assist in writing information to thetraffic monitor 340, which becomes the basis for the metadata. - Following a configuration established by rules stored in the
database 360, theinterpreter process 350 will interpret patterns in the data stored in thetraffic monitor 340, as described above, and update records in a connection management table (conman table) 370. The conman table 370 stores this message processing information, typically in the form of disposition instructions, which regulate how the connection and delivery for incoming messages and for specific source IP addresses are to be processed. Examples of disposition instructions, appearing in the way of disposition flags in the records of the conman table 370, include, but are not limited to: -
- message accept
- message reject
- message quarantine
- message spool
- message defer
- message throttle
- message redirect
- black hole.
- In one example, if one particular address is known to be spamming, or sending otherwise undesirable messages, one particular customer, a Connection Management Record (conman record) is written to the conman table 370 to reject or throttle SMTP connections, thus protecting the organization. Thus, patterns and behavior can be identified based on the source and destination data and the metadata, and connection management records can be rolled up and applied for the entire customer base. Once an offending condition has been identified, on subsequent similar requests to deliver messages, the
connection manager 322 queries the conman table 370 in order to determine if there are specific instructions on handling the request from the sending IP address. If disposition flags are present, theconnection manager 322 then uses the disposition instructions in the conman table 370 to dispose of the message appropriately or to prevent a connection by the sendingmail server 102 a in the first place. Depending on the condition preventing transmission of the message to the intended user, even if a connection by theconnection manager 322 is accepted, thedelivery manager 324 may be instructed by theinterpreter process 350, via a delivery manager table 380, to dispose of the message appropriately. The delivery manager table 380 is similar to the conman table 370 in that theinterpreter process 350 or eachEMS process 203 writes message processing instructions into the table 380 based on the data stored in thetraffic monitor 340. Disposition instructions that may appear in the delivery manager table 380, rather than the conman table 370, include, but are not limited to: -
- message deliver message defer
- message reject
- message redirect.
A more detailed description of some of the components of themessage handler 326, as well as their function, is set forth below with reference toFIG. 4 .
- Turning now to
FIG. 4 , illustrated is a more detailed software module block diagram 400 of the message handlingcomputer process 320. Themail handler 326 in this embodiment includes a message processing server (MPS) 426, which is designed to be a fast, stateless mail handler. TheMPS 426 takes anincoming e-mail message 110 and can “scrape” or extract information from themessage 110 as it is going by, i.e., without imposing a delay on the delivery of themessage 110. TheMPS 426 is also able to conditionally deliver messages via thedelivery manager 324, either on its own accord or according to instructions from the interpreter process 350 (seeFIG. 3 ). For example, if theinterpreter process 350 determines from the data in thetraffic monitor 340 that a connection attempt or group of connection attempts from a common source IP address is a directory harvest attack, theinterpreter process 350 can update the conman table 370 to instruct theconnection manager 322 to reject the connection. Alternatively, theinterpreter process 350 may update the delivery manager table 380 to instruct thedelivery manager 324 to otherwise dispose of the message. If an application, such as aspam detection application 332, returns the value of a message that suggests it is spam, theMPS 426, in coordination with theinterpreter process 350, can configure the delivery of the message to route it to a quarantine website. The decisions on which electronic messages are passed, diverted, deferred, etc. are made in part based on the metadata generated from the universe of incoming messages, and based on the way theEMS 203 has been configured through theadministrative console 316 and theapplications 332 selected for processing the messages. - Additional sub-modules are also shown in
FIG. 4 . In this embodiment, there is provided ametadata collector submodule 430 and anevent sender submodule 432, which perform functions described with respect to the embodiment ofFIG. 3 of collecting data from the electronic messages entering theEMS 203 and of providing that information to thetraffic monitor 340. Although these submodules are shown associated with theMPS 426, they could be separate software modules or they could be associated with themetadata collector 430. While theapplications 332 do not specifically write to the conman table 370, they may be configured, via theapplication interface 330, to: a) process the message, b) update disposition flags based on process results, and c) deliver the metadata to thetraffic monitor 340. - An additional feature of the embodiments described in
FIGS. 3-4 is the ability to tailor the delivery of e-mails according to the loading at the destinationUA email server 102 c. The delivermanager 324 can detect loading issues in the designationUA email server 102 c by, for instance, delay by theserver 102 c in acknowledging the receipt of previous e-mail messages. Thus, theoutput buffer relay 440 andspool relay 442 serve to spool outgoing messages based on detected loading issues in the destinationUA e-mail server 102 c. - Referring now to
FIG. 5 , illustrated is a block diagram 500 illustrating an embodiment where two or more message handling computer processes 320 a, 320 b are each operating independently, but are connected to asingle traffic monitor 340 and conman table 370. Eachprocess 320 a-n also shares data regarding the current open connections with the receiving server. This shared delivery manager table 380 contains a current status at any time of all messages in transit to the receiving server. Theprocesses event senders traffic monitor 340 about the occurring events in the streaming e-mail traffic. Thetraffic monitor 340 has anevent listener 502 that is the communications interface to theevent senders processes traffic monitor 340 andinterpreter process 350 in this embodiment thus monitor and controlmultiple processes - As an example of the organization of some of the data within the
traffic monitor 340, an exemplary data matrix, in the form of a data table 504, is shown. In this data table 504, incidences of e-mails from multiple sources to multiple destinations are arranged as a table, mapping along the rows, messages from particular sources, and along the columns, messages to particular destinations. Potential spam might show up in the table 504, then, as an instance where a large percentage of the destinations have received messages from a particular source, thereby appearing as a nearly full row in the table 504. Theinterpreter process 350 then turns to thedatabase 360 and consults the rules in thedatabase 360 by which theinterpreter process 350 has been instructed to operate through the configuration of those rules via theadministrative console 316. - The user thus configures the
interpreter process 350 through thedatabase 360. Exemplary rules would include the definition of a spam attack (e.g., 100 or some other number of messages from a single IP address), and the actions to take on a spam attack, such as limiting the number of connections granted to the IP address or deleting all incoming e-mails from that IP address. Other examples of situations prompting the creation of message handling rules could be a virus attack, directory harvest attack, e-mail bomb, etc., as stated above. Once the rules have been stored in thedatabase 360, all theconnection managers delivery managers database 360 will use the configuration information in thedatabase 360 and the conman table 370 on each message transaction, based on the destination IP address, to ensure that they are operating under the most up-to-date set of rules. Theconnection managers traffic monitor 340 during this process. - The
interpreter process 350, which monitors thetraffic monitor 340, can in turn update the conman table 370 based on detected patterns in thetraffic monitor 340 that violate specified rules. Modules in the computer processes 320 a, 320 b then connect with thedatabase 360, the conman table 370 and thetraffic monitor 340 on each message transaction to receive the most current configuration and access restrictions set forth by the rules or with the delivery manager table 380, and get instructions on delivery to the destination server based on current conditions. Thus, the system can be constantly updating itself with the most recent connection and delivery information and thereby adapt, in real-time, to changing loads of electronic message traffic, without human review or intervention. Theinterpreter process 350 updates the conman table 370, which is queried by all of theconnection managers MPSs - It is further possible to configure systems in which
multiple delivery managers connection managers delivery managers delivery manager other delivery managers - All transaction data is stored in
Logs 506. TheLogs 506 will keep records of all message transactions and parameters. In an exemplary embodiment,detailed reports 508 are generated, perhaps on a daily basis, on what servers sent what to certain destination addresses. In such an embodiment, this data may be presented in a graphical web-based format, or it may be downloaded as raw data by a user. Information on which thereports 508 may be generated include, but are not limited to, source IP address, message content type, message volume, recipient information, etc. -
Alerts 510 may also be configured for informing an administrator(s) of conditions regarding their system. For example, if theEMS 203 detects a directory harvest attack, theinterpreter process 350 will update the conman table 370 and generate an alert to the specified recipient. In another example, if a mail server goes down, theinterpreter process 350 will update the disposition flag in the conman table 370 to spool, and generate an alert to the specified recipient. As such,Alerts 510 can be generated based on all conditions that theinterpreter process 350 identifies. - In one embodiment, in accordance with
FIG. 6 , auser database hierarchy 600 is established whereby parameters for the identification and disposition of managing connections and scanning message data, as well as other events, can be tailored according to the position of the user within thehierarchy 600. All users within the system fall beneath thetop level 602 in the hierarchy, and thus there will be established certain rules for all users in belonging to the system. - Beneath the
top level 602, users may belong to subsidiary organizations, which are the customers 604 a-604 c to the top-level 602 administrator. For example, a user at Acme Corporation might have the e-mail address user1@acme.com, where the address acme.com is the top-level 602 domain server address associated with Acme in the distributedDNS database servers 108. E-mails would be acted upon according to the top-level 602 rules. Additionally, the specific rules of acme.com would be applied to those users, because user1 as “customer # 1” 604 a in the hierarchy would have set forth its particular requirements. The particular requirements of user1, however, would not be applied to the user groups associated with “customer # 2” 605 b or “customer # 3” 604 c. - Furthermore, sometimes organizations will have
subsidiary organizations - Turning now to
FIG. 7 , illustrated is adatabase structure 700 that can be used by a connection manager to act on events in connection with the hierarchy ofFIG. 6 . According to thisdatabase structure 700,conman records 710 for use in a conman table 370 are organized by an Internal Identifier (“IID”) 710 a, which is a record of where the recipient resides in thehierarchy 600, as well as which configuration parameters are set. Also illustrated are additional fields that can be included in the conman records 710 for the startingIP address 710 b and the endingaddress 710 c for originating IP addresses of messages. Other exemplary fields are theexpiration time 710 d for theconman record 710, as well as thedisposition flag 710 e of the conman table 370, which is the action to be taken by theconnection manager 322 in response to particular connection requests. - In this embodiment, it is the
interpreter process 350 that creates the conman records 710 according to rules that have been set-up for users within theorganizational hierarchy 600. Alternatively, conman records 710 may also be created manually through theadministrative console 316. Theserecords 710 may be stored in thedatabase 360 or in another database accessible by theconnection manager 322. A single IID may havemultiple records 710. Theserecords 710 contain anexpiration value 710 d that allows blocked, throttled, or otherwise controlled sending mail servers, to retain status as legitimate senders without restriction, if their messaging practices are cleaned up. Once theexpiration value 710 d is reached, theconnection manager 322 andMPS 426 will process individual messages from that sender. If they are continuing to send viruses, anew record 710 in the conman table 370 will be established. This process will repeat until the condition of the sender changes and they begin sending legitimate email messages. - Also illustrated in
FIG. 7 is a detailed record 720 a-i ofpossible disposition flags 710 e within the conman table 370. The illustrated examples are message accept 720 a, message reject 720 b,message quarantine 720 c,message spool 720 d, message defer 720 e,message throttle 720 f, message redirect 720 g,connection rejection 720 h, andblackhole 720 i. Of course, the invention is not limited to thesespecific disposition flags 710 e. - Referring now to
FIG. 8 , illustrated is one embodiment of the operation of an MPS through an operational flowchart. As indicated in the diagram, along the entire process data resulting from the process is written into a traffic monitor using various components of the MPS in the EMS, as discussed above in greater detail. That data may then be used by an interpreter process to update information in a conman table employed by a connection management module, as well as in a delivery management table employed by a delivery management module. The process begins at a start step, and then moves to step 800, where a sender opens a connection via a sender mail server in an attempt to send an electronic message, such as an e-mail, to a targeted user connected to a receiving mail server. Atstep 802, an EMS constructed according to the principles described herein intercepts the connection attempt by the sender, and receives information from the sender, such as SMTP information (e.g., sender's IP address). - At
step 804, the EMS receives similar information, such SMTP information (e.g., the receiver's e-mail address), regarding the intended receiver of the message. Once both sets of data have been received by the EMS, the process moves to astep 806, where this data is compared with records in a connection management (conman) table. As discussed above, the records in the table may be updated by an interpreter process based on information held in the data matrix of a traffic monitor. If any blocks on transmissions from the sender have been instituted, a negative response is given atstep 806 and the transmission attempt is rejected. Alternatively, if the EMS has established that all messages from a particular sender are not to be accepted, the process may move fromstep 802, where the sender's SMTP information is received by the EMS, to step 806, where the IP address of the sender is compared with potential disposition flags in the conman table. In this case, the transmission attempt by the sender would be rejected without the need to receive the receivers SMTP information atstep 804. - At
step 806, if no blocks against the sender are found in the conman table, an affirmative response is given and the process moves to step 808. Atstep 808, the intended recipient's information is validated against a list of users in a user database or directory, as well as a user list in a destination server directory. If the attempted transmission does not contain valid recipient information, a negative response is given atstep 808 and the transmission is rejected. Also, even if a valid recipient is found in the user database, if the recipient information is not also validated against the user list in the destination server database, the transmission may be rejected. If validation from both the user database and the destination server database is obtained, an affirmation response is given and the process moves to step 810. - At
step 810, a delivery manager table is queried to determine whether the intended message can be delivered to the destination server. For example, the delivery manager table may be queried to determine if the destination server is capable of receiving the transmission or has it's load limit been reached. If the destination server is not read to receive the message, an affirmation response is given atstep 810 and the transmission attempt is deferred for delivery at a later time, once the destination server is ready to receive the message. If the destination server is capable of receiving the message, a negative response is given atstep 810 and the process moves to astep 812. As indicated in the diagram, data regarding the sender and recipient has been written to the traffic monitor throughout this process. - At
step 812, all of the data in the attempted transmission is received by the EMS, including header or other routing information, as well as the data forming the intended electronic message to be delivered. The process then moves to step 814, where the configuration profile established by rules set forth by, for example, configuration settings for the user or the organization, are read in order to determine how to process the message. Atstep 816, applications are employed to perform analysis of the message data to identify unwanted, prohibited or damaging messages. Metadata associated with the results of this processing is written to the traffic monitor and used by the interpreter process to determine patterns or conditions used to establish connection and delivery guidelines. Examples of the metadata created by using the applications are set forth above in Table 1. - Once the applications have completed the analysis, the process moves to step 818, where the results of the application processing are compared against the contents of the configuration database. If the results of the application processing suggest an alternate disposition flag than the flag currently available for the message, a new disposition flag is inserted. At
step 820, the results from step 818 are compared to any disposition flags assigned to the message as were set forth in the conman table. If, atstep 820, a disposition flag indicating the attempted transmission will not be accepted at this time, the process moves to the appropriate step corresponding with the existing disposition flag in the conman table. More specifically, if the message is to be spooled, the process moves to step 822. If the message is to be quarantined, the process moves to step 824. If the message is to be sent to a “black hole”, the process moves to step 826. If the message is to be deferred, the process moves to step 828. If the message is to be redirected, the process moves to step 830. - However, if, at
step 820, the records in the conman table establish that the transmission is to be accepted, the process moves to step 832. Atstep 832, the message is transmitted to the intended destination sever. Atstep 834, the message is received by the destination server. Atstep 836, the destination server sends an acknowledgment of receipt of the message (an “ACK”) back to the EMS to acknowledge receipt of the message from the delivery manager in the EMS. Finally, atstep 838, the EMS transmits an ACK of transmission back to the original sender of the message to inform the sender that the message has been transmitted to the targeted user. The process then ends. - Those who are skilled in the art will understand that the practice of the proposed process is not limited to the specific steps set forth in
FIG. 8 . Thus, a greater or lesser number of steps may be employed. Additionally, steps having greater or lesser detail than those illustrated inFIG. 8 may also be employed to advantage. - Turning now to
FIG. 9 , illustrated is a flow diagram 900 setting forth one embodiment of the procedures employed by theconnection manager 322 for use in managing incoming electronic messages. More specifically, the diagram 900 illustrates assigning control instructions based on a sending IP address, and configuration parameters for the particular recipient in the organizational hierarchy managed by theEMS 203. Theconnection manager 322 is initiated into operation by theMPS 426, each time theMPS 426 detects a new “RCPT” command identifying a new recipient in the traffic stream. The initial operating condition of theconnection manager 322 is thus shown in the diagram 900, atstep 902. Atstep 904, theconnection manager 322 queries the conman table 370 for records having an IID that corresponds to the new recipient. If, atdecision block 906, it is determined that the conman table 370 contains an entry for the particular IID, control is passed to a secondary control loop in which each IID record is read (step 908), examined to see whether it is still active or expired (step 910), and acted upon (step 912). A single IID may have multiple records, and so the above actions in steps 908-912 are repeated as shown in the diagram 900, as long as there are additional records for the IID as reflected at decision block 914. - As shown in
FIG. 9 , a particular recipient may fit at a certain level within a hierarchy, and the particular connection actions can be tailored in this method according to each of these hierarchical levels. Accordingly, atstep 916, the particular IID is examined for its membership at a next higher hierarchical level. If there areconnection manager 322 records in the conman table 370 that are associated with the particular IID at this hierarchical level, then according to the flow of the process fordecision step 918, the actions of the loop, steps 908-914 are repeated for all of the actions associated with the IID at the higher level. As before, once all actions associated with a given IID at this hierarchical level have been carried out, then control returns to thedecision step 920, whereupon the IID relative to the hierarchical levels is examined to see whether the top hierarchical level has been reached. If the highest hierarchical level has been reached, theconnection manager 322 returns control to theMPS 426. - Connections may be characterized as a pair of endpoints—sender and recipient. The connections can be managed based on the sender/recipient pair, or they may be managed based on just the recipient identifier. IP address ranges can be used to specify senders and/or recipients, and depending on the location of the indefiniteness, the ranges or indefiniteness can also be used to specify where a particular IP address belongs within a hierarchy. The IP address's membership in sets defined by certain IP address ranges can also be used to define that address's hierarchical organization memberships.
- Connection management records may be inserted on a per-organization basis within the hierarchy, and they may be inherited from higher-level organizations down to lower-level organizations. As described with respect to the process flow of
FIG. 9 , the records can be processed in a bottom-up fashion, from a particular organization up to the root organization. When multiple records are present at a single organization, they may be processed in expire-time order, with the ones expiring at the latest date being examined first. Alternatively, they may be processed in a different order depending on how the process is defined. - Although there are many types of actions or dispositions that can be taken based on the connection requested, as discussed above, some of the common ones include the following:
-
- ERROR: An error message is specified and passed back to the sender (e.g., “Error 501—unknown user”).
- QUARANTINE: The message will be quarantined under a specified reason (e.g., obscene, pornographic, or virus-infected).
- BLACKHOLE: The message will appear to be delivered (i.e., a delivery confirmation is passed to the sender), but will not really go anywhere. Unless further modifications are made, another application may still cause the message to be quarantined.
- ACCEPT: The message will be accepted and forwarded to the destination server. Unless further modifications are made, another application may still block the message.
- SPOOL: the email server corresponding to the IID is not responsive, and therefore messages should be written to the spooler
As described above, theconnection manager 322 handles the accepting and making of requested connections in electronic message transactions. The dispositions described above can be implemented by theconnection manager 322 by manual configuration through theadministrative console 316, or they can be automatically implemented by theinterpreter process 350 or another software module. As with the process ofFIG. 8 , the practice of the process illustrated inFIG. 9 is not limited to the specific steps set forth therein. Thus, a greater or lesser number of steps may be employed. Additionally, steps having greater or lesser detail than those illustrated inFIG. 9 may also be employed to advantage.
- Looking now at
FIG. 10 , illustrated is an operational flow diagram 1000 of theinterpreter process 350, which was also generally described in the text accompanyingFIGS. 3-4 . Execution of the process flow for theinterpreter process 350 begins atstep 1002, which is the sleep state for the process. After a certain period of time, e.g., fifteen seconds, execution of the program flow moves to step 1004. Atstep 1004, theEMS 203 configuration is updated for all the organizations for which theEMS 203 is responsible. This process may be referred to as “synchronization.” Atstep 1006, theinterpreter process 350 begins to analyze the traffic events occurring for each organization identified instep 1004. As a part of this action, theEMS 203 evaluates the traffic events occurring as reflected in the data stored in thetraffic monitor 340. - The process flow continues at
step 1010, where theEMS 203 evaluates the event conditions for theparticular EMS 203 event rule for the organization under consideration. Atdecision step 1012, theinterpreter process 350 software queries whether the particular rule is an active one. If the rule is not active, the process flow goes todecision step 1014, whereupon the software module queries whether there aremore EMS 203 event rules to be processed for the particular organization. If there are nofurther EMS 203 event rules for the particular organization, the process flow proceeds todecision step 1016, at which the software module queries whether there areadditional EMS 203 organizations for which theEMS 203 events should be processed. If there are noadditional EMS 203 organizations to process, the software module returns operation to the sleep mode atstep 1002, which was the beginning of this process flow. If, however, there areadditional EMS 203organizations having EMS 203 event rules to be processed, then operation would return to step 1006, at which the software module will again begin the process of evaluating theEMS 203 traffic against theEMS 203 event rules for this other organization. - Again at
step 1010, the event conditions are evaluated against eachEMS 203 event rule. If, in this case, atdecision step 1012 the rule is active, the software flow would proceed to step 1020. Atstep 1020, theinterpreter process 350 evaluates each traffic cell, where a traffic cell is a single connection between a source and a destination, and is represented in thetraffic monitor 340 by a single cell in the data table 504. Atdecision step 1022, if a positive result of the evaluation of the particular traffic cell atstep 1020 is positive (“result greater than one”), then execution of theinterpreter process 350 algorithm continues todecision step 1024. Atdecision step 1024, the rule state is evaluated to see whether it has previously been triggered. If it has not, atstep 1026, the event execution is begun. If the rule state has already been triggered, then execution of the event will continue atstep 1028. In either case operation continues atstep 1030, at which time a process is begun for “firing” the actions that are associated with particular event states. - At
decision step 1032, theinterpreter process 350 queries whether that particular action associated with the event already has a state associated with it in the process execution. If no, theinterpreter process 350 then queries whether the particular action should be delayed atdecision step 1034. If the action should not be delayed, atstep 1036, the particular action is “fired” and a state is set indicating the activation of that action. Next, atdecision step 1038, theinterpreter process 350 queries whether there are additional actions to fire. If so, execution returns to step 1030; in this loop,steps 1030 to 1039 continue until all actions associated with a particular event have been processed. Once there are no more actions to “fire” atstep 1038, execution proceeds todecision step 1040, whereupon theinterpreter process 350 software examines whether there are more traffic cells to be evaluated. If there are additional traffic cells to evaluate, the process returns to step 1020. If there are no more traffic cells to evaluate, the process returns todecision step 1014, at which it is determined whether there areadditional EMS 203 rules to be processed. Based on this decision, the process can continue at previously describedsteps - Again evaluating the traffic cells at
step 1020, if there is not a positive result atdecision step 1022, the process proceeds to step 1050, at which theinterpreter process 350 queries whether the particular rule state was previously ON. If not, there is no particular action to take with respect to this rule state, and the processing of traffic cells can continue atdecision step 1040. If, however, the rule state had previously been ON, but is now OFF, which is the situation indicated by a positive result atdecision step 1050, then the process proceeds to step 1052 to evaluate the ending procedures for that particular rule state. If a positive result occurs atdecision step 1054, then the event end for the particular rule state is processed atstep 1056. If, however, there is not an end process to execute as indicated by a negative result atdecision step 1054, then the algorithm of theinterpreter process 350 will continue to process additional traffic cells throughdecision step 1040 and its subsequent branches. - Now looking at
FIG. 11 , illustrated are data structures that can be employed in an embodiment of theEMS 203 for the real-time monitoring of traffic in thetraffic monitor 340. As was shown inFIG. 5 , in some embodiments, multiple message handling computer processes 320 a, 320 b are employed, whereby multiple connections to asingle traffic monitor 340 andinterpreter process 350 are processed in parallel.FIG. 11 shows theMPSs 426 a-426 d of multiple such computer processes 320 a, 320 b connected to asingle ring buffer 1102, which ultimately provides data in this embodiment for a single traffic monitor. TheMPSs 426 a-426 d send their data to thering buffer 1102 in small, asynchronous blocks of data. The data may be tagged with a time and a session ID in each instance. For example, each block of data might be tagged with a header, “SID8, 00:02,” which would indicate that the session ID issession number 8, and the time for the receipt of the data is 00:02. The session IDs and times shown in this example are merely examples, and session IDs into the hundreds or thousands could be used. In addition, time indicators as precise as thousandths of a second or less could also be used. - The
ring buffer 1102 holds all the data generated by theconnection managers 322,delivery managers 324,MPSs 426 a-426 d, and, in this example, it sorts the data in SID order, which reduces searching overhead during insertion into a later intermediary format and may also provide efficiency when storing data into thering buffer 1102. From thering buffer 1102, the traffic monitoring data is then stored into anintermediary data structure 1110. In thisintermediary data structure 1110, the data is placed intogroups 1120 associated with the session IDs, where thegroups 1120 have records for each connection (C1, C2 . . . CN), and for each message (M1, M2, M3 . . . ) sent over each connection. This data is continually updated with new data from thering buffer 1102, and it is continually refreshed when the data is older than the data stored in the actual traffic monitor data matrix 1130. - The structure of the data matrix 1130 is only an exemplary format for the traffic monitor data matrix 1130, and is maintained for access by the
interpreter process 350. Use of theintermediary data structure 1110 allows for a more compact traffic monitor data matrix 1130, which can be structured so as to have no empty cells. The data matrix 1130 is arranged with different IIDs (destinations) populating different rows and with differing Source IPS (SIPs, or sources) as the differing columns within each row. By individually structuring each row with independent column entries for the SIPs, it is possible to build this data table or matrix 1130 as shown inFIG. 11 , with no empty cells. Then, within each cell, different statistics can be provided, and theinterpreter process 350 will be able to recognize certain activity based on the information stored in those cells. - It may be desirable for both the
interpreter process 350 and other resources to have access to the traffic monitor data matrix 1130. At least two different mechanisms can be provided to allow access to the contents of the data matrix 1130—direct and polled. Through direct access, theinterpreter process 350 can lock up a given cell of the data matrix 1130 to read that cell's data in real time. Through polled access, a process can be provided for multiple resources to request access to data in the data matrix 1130 via a network. The data matrix 1130, or a process associated with the data matrix 1130, can arbitrate the requests, and at certain periods can lock the requested data in the data matrix 1130, and access and send that data to the requesting resources. The data can be requested as raw data, summary data, or it can be requested by a customer mailhost. - Thus, the presently described system has the ability to map in a data matrix, in real time, all incoming requests and requested destinations, all relevant message parameters (spam, virus, recipients, connection time, data size, destination server return code, etc), as well as to monitor the connection/destination matrix in real time for any number of recipient email addresses or mail servers across multiple customers, and to immediately initiate action automatically based on a real-time monitoring of the state of the traffic monitor data matrix 1130. Other system abilities possessed in the described embodiments include the ability to recognize, in real time, all SMTP connections that are being originated in order to request a connection to a recipient mail system, and not just necessarily a single server. The described EMS is also able to use matrix data from one customer/recipient to modify actions for another. For example, if the EMS recognizes a “spammer” based on its actions towards one customer group, the EMS is also able to prevent spam from that source from reaching other destinations.
- Thus, the EMS described herein can handle, filter, and monitor, and react against, in real time, many incoming connections. The EMS is also operable, however, to tune the delivery of messages to a destination mail server based on the loading in that server or on other conditions. It can balance loads among multiple destination servers, spool outgoing messages to destination servers in a controlled manner, and conditionally deliver messages to destination servers based on different conditions.
- Looking next at
FIG. 12 , illustrated is a spool manager comprising three MPSs, as described below. The Spool Delivery Manager is invoked by an MPS plug-in that runs on the message handling computer process of the EMS, and works in harmony with the connection manager to determine whether or not messages should be spooled. With reference toFIG. 12 , the Spool Delivery Manager functions as follows: -
- 1) To initiate spooling, a SPOOL connection management record must be inserted for an organization, either manually through the UI or automatically by the interpreter process, if it detects the organization mail server is unreachable.
- 2) The connection manager assigns a SPOOL tag to each message sent to an organization for which there exists a SPOOL connection management record in the conman table.
- 3) The Spool Delivery Manager examines each incoming message for a “Spool” tag.
- 4) If a Spool tag exists for a message, the Spool Delivery Manager blocks the message from being delivered, and instead relays the message to a spool server using the Spooler.
- The Spooler is a modified MPS application running on the spool server that accepts messages from the Spool Delivery Manager, and stores them in a spool repository. With reference to
FIG. 12 , the Spooler functions as follows: -
- 1) The Spooler waits for an SMTP connection request from the Spool Delivery Manager.
- 2) Each incoming SMTP command, including the raw message data, is stored in the organization's (i.e., recipient's) spool repository.
- 3) If the spool size reaches one of several predefined spool size checkpoints (e.g. 75% of capacity), an alert notification is generated.
- 4) If after storing the message, the spool size exceeds the maximum allocated spool size for the organization, an alert notification is generated, and the spool connection management record is removed, preventing subsequent messages from being spooled.
- 5) If a spool tag exists for a message, the Spool Delivery Manager blocks the message from being delivered, and instead relays the message to the spool server using an SMTP connection.
- The Despooler is also a modified MPS application running on the spool server that accepts messages from the Spool Delivery Manager, and stores them in a spool repository. To this end, the Despooler functions as follows:
-
- 1) The Despooler waits for an SMTP connection request from the Spool Delivery Manager.
- 2) Each incoming SMTP command, including the raw message data, is stored in the traffic monitor.
- 3) Spool Delivery Manager in order to maintain proper connection limiting to the organization.
- 4) If the message is rejected by the organization, the Despooler will bounce the message to the original sender.
- 5) If a message is successfully delivered, it is tagged “delivered” in the spool repository.
Steps 2-5 are repeated until all messages in the spool repository have been delivered.
- Referring now to
FIG. 13 , illustrated is ascreen shot 1300 of an example access page for an administrative console for use with an EMS according to the present invention. As shown from the access page is available to users and/or system administrators for monitoring of statistics and alarms occurring in their electronic messaging networks. In addition, the access page may be employed by users and/or system administrators for the configuration of rules employed by the EMS to manage the transmission of electronic messages. The particular access page shown here includes multiple access tabs, including “Connection Mgr”, “Delivery Mgr”, “Spool Mgr”, Alerts” and “Reports”. In addition to accessing these individual components of the EMS, the access page inFIG. 13 provides status of the individual components, as well as an overview of the flow of electronic messages into the system. - Turning briefly to
FIG. 14 , illustrated is ascreen shot 1400 of an example page for monitoring and configuring a connection manager used in an EMS according to the present invention. As shown, this access page displays the status of the connection manager in an EMS, as well as providing statistics of particular transmission violations that have occurred. Although the particular offending activities illustrated are only directory harvest attacks, virus outbreaks, e-mail bombs and spam attacks, the access page may be configured to illustrated statistics of other types of offending behaviors without limitation. -
FIG. 15 is ascreen shot 1500 of another example access page for a connection manager used in an EMS of the present invention. As shown, this access page provides definitions for specific offending actions of incoming electronic messages to assist users in configuring the EMS as their needs arise. In addition, this access page also includes various detection and prevention selections, allowing users a broader range of choices for the management of their incoming electronic messages. - Looking at
FIG. 16 , illustrated is ascreen shot 1600 of an example page for monitoring and configuring a delivery manager used in an EMS according to the present invention. This access page displays the status of the delivery manager in an EMS, as well as providing statistics of particular delivery (or non-delivery) actions taken by the EMS in response to offending activities of incoming messages. In addition, this access page allows users to monitor the status of distinct destination servers, for example, to determine the free capacity of such destination servers. - Turning finally to
FIG. 17 , illustrated is a screen shot of another example page for a delivery manager used in an EMS. As shown, this access page allows the user to configure specific details of the individual destination servers shown inFIG. 16 . Configuration parameters that may be altered through this access page include connection capacities, as well as adding new destination servers to the EMS to enjoy the protection provided by the present invention. - While various embodiments of an EMS constructed according to the principles disclosed herein, as well as specific components of the EMS, have been described above, it should be understood that they have been presented by way of example only, and not limitation. Thus, the breadth and scope of the invention should not be limited by any of the above-described exemplary embodiments, but should be defined only in accordance with the following claims and their equivalents.
Claims (35)
Priority Applications (4)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US11/416,733 US20060206938A1 (en) | 2002-02-19 | 2006-05-03 | E-mail management services |
US11/553,306 US7603472B2 (en) | 2003-02-19 | 2006-10-26 | Zero-minute virus and spam detection |
US12/577,654 US7886066B2 (en) | 2003-02-19 | 2009-10-12 | Zero-minute virus and spam detection |
US13/022,526 US8583787B2 (en) | 2003-02-19 | 2011-02-07 | Zero-minute virus and spam detection |
Applications Claiming Priority (4)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US35789302P | 2002-02-19 | 2002-02-19 | |
US10/370,118 US6941348B2 (en) | 2002-02-19 | 2003-02-19 | Systems and methods for managing the transmission of electronic messages through active message date updating |
US10/908,060 US8769020B2 (en) | 2002-02-19 | 2005-04-26 | Systems and methods for managing the transmission of electronic messages via message source data |
US11/416,733 US20060206938A1 (en) | 2002-02-19 | 2006-05-03 | E-mail management services |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US10/908,060 Continuation US8769020B2 (en) | 2002-02-19 | 2005-04-26 | Systems and methods for managing the transmission of electronic messages via message source data |
Related Child Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US11/553,306 Continuation US7603472B2 (en) | 2003-02-19 | 2006-10-26 | Zero-minute virus and spam detection |
Publications (1)
Publication Number | Publication Date |
---|---|
US20060206938A1 true US20060206938A1 (en) | 2006-09-14 |
Family
ID=27757671
Family Applications (5)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US10/370,118 Expired - Lifetime US6941348B2 (en) | 2002-02-19 | 2003-02-19 | Systems and methods for managing the transmission of electronic messages through active message date updating |
US10/908,060 Active 2028-11-28 US8769020B2 (en) | 2002-02-19 | 2005-04-26 | Systems and methods for managing the transmission of electronic messages via message source data |
US10/908,061 Abandoned US20050182960A1 (en) | 2002-02-19 | 2005-04-26 | Systems and methods for managing the transmission of electronic messages via throttling and delaying delivery |
US11/416,733 Abandoned US20060206938A1 (en) | 2002-02-19 | 2006-05-03 | E-mail management services |
US11/712,675 Active 2025-07-16 US8725889B2 (en) | 2002-02-19 | 2007-03-01 | E-mail management services |
Family Applications Before (3)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US10/370,118 Expired - Lifetime US6941348B2 (en) | 2002-02-19 | 2003-02-19 | Systems and methods for managing the transmission of electronic messages through active message date updating |
US10/908,060 Active 2028-11-28 US8769020B2 (en) | 2002-02-19 | 2005-04-26 | Systems and methods for managing the transmission of electronic messages via message source data |
US10/908,061 Abandoned US20050182960A1 (en) | 2002-02-19 | 2005-04-26 | Systems and methods for managing the transmission of electronic messages via throttling and delaying delivery |
Family Applications After (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US11/712,675 Active 2025-07-16 US8725889B2 (en) | 2002-02-19 | 2007-03-01 | E-mail management services |
Country Status (10)
Country | Link |
---|---|
US (5) | US6941348B2 (en) |
EP (2) | EP2068516B1 (en) |
JP (1) | JP4593926B2 (en) |
KR (1) | KR100871581B1 (en) |
CN (1) | CN1332333C (en) |
AT (1) | ATE427608T1 (en) |
AU (1) | AU2003215276B2 (en) |
CA (1) | CA2476349C (en) |
DE (1) | DE60326938D1 (en) |
WO (1) | WO2003071390A2 (en) |
Cited By (8)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20060047758A1 (en) * | 2004-08-26 | 2006-03-02 | Vivek Sharma | Extending and optimizing electronic messaging rules |
US20070156830A1 (en) * | 2002-02-19 | 2007-07-05 | Postini Corporation | E-mail management services |
US20080034049A1 (en) * | 2006-08-05 | 2008-02-07 | Terry Lee Stokes | System and Method for the Capture and Archival of Electronic Communications |
US7757288B1 (en) * | 2005-05-23 | 2010-07-13 | Symantec Corporation | Malicious e-mail attack inversion filter |
US20110055264A1 (en) * | 2009-08-28 | 2011-03-03 | Microsoft Corporation | Data mining organization communications |
US20110055196A1 (en) * | 2009-08-28 | 2011-03-03 | Microsoft Corporation | Data mining electronic communications |
US8744979B2 (en) | 2010-12-06 | 2014-06-03 | Microsoft Corporation | Electronic communications triage using recipient's historical behavioral and feedback |
US20150381533A1 (en) * | 2014-06-29 | 2015-12-31 | Avaya Inc. | System and Method for Email Management Through Detection and Analysis of Dynamically Variable Behavior and Activity Patterns |
Families Citing this family (343)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20040073617A1 (en) | 2000-06-19 | 2004-04-15 | Milliken Walter Clark | Hash-based systems and methods for detecting and preventing transmission of unwanted e-mail |
US6650890B1 (en) * | 2000-09-29 | 2003-11-18 | Postini, Inc. | Value-added electronic messaging services and transparent implementation thereof using intermediate server |
US20020111937A1 (en) * | 2001-01-29 | 2002-08-15 | Mark Wetherbee | Method and system for permissible internet direct marketing |
US8219620B2 (en) | 2001-02-20 | 2012-07-10 | Mcafee, Inc. | Unwanted e-mail filtering system including voting feedback |
US7743119B2 (en) * | 2001-08-07 | 2010-06-22 | Motorola, Inc. | System and method for mapping identification codes |
US7596565B2 (en) * | 2001-08-07 | 2009-09-29 | Good Technology | System and method for maintaining wireless file folders at a wireless device |
US7243163B1 (en) * | 2001-08-07 | 2007-07-10 | Good Technology, Inc. | System and method for full wireless synchronization of a data processing apparatus with a messaging system |
US7962622B2 (en) | 2001-08-07 | 2011-06-14 | Motorola Mobility, Inc. | System and method for providing provisioning and upgrade services for a wireless device |
JP3797937B2 (en) * | 2002-02-04 | 2006-07-19 | 株式会社日立製作所 | Network connection system, network connection method, and network connection device used therefor |
US7903549B2 (en) | 2002-03-08 | 2011-03-08 | Secure Computing Corporation | Content-based policy compliance systems and methods |
US6941467B2 (en) * | 2002-03-08 | 2005-09-06 | Ciphertrust, Inc. | Systems and methods for adaptive message interrogation through multiple queues |
US20030172291A1 (en) | 2002-03-08 | 2003-09-11 | Paul Judge | Systems and methods for automated whitelisting in monitored communications |
US7458098B2 (en) * | 2002-03-08 | 2008-11-25 | Secure Computing Corporation | Systems and methods for enhancing electronic communication security |
US20060015942A1 (en) | 2002-03-08 | 2006-01-19 | Ciphertrust, Inc. | Systems and methods for classification of messaging entities |
US7694128B2 (en) | 2002-03-08 | 2010-04-06 | Mcafee, Inc. | Systems and methods for secure communication delivery |
US7870203B2 (en) | 2002-03-08 | 2011-01-11 | Mcafee, Inc. | Methods and systems for exposing messaging reputation to an end user |
US8132250B2 (en) | 2002-03-08 | 2012-03-06 | Mcafee, Inc. | Message profiling systems and methods |
US8578480B2 (en) | 2002-03-08 | 2013-11-05 | Mcafee, Inc. | Systems and methods for identifying potentially malicious messages |
US7693947B2 (en) | 2002-03-08 | 2010-04-06 | Mcafee, Inc. | Systems and methods for graphically displaying messaging traffic |
US8561167B2 (en) | 2002-03-08 | 2013-10-15 | Mcafee, Inc. | Web reputation scoring |
US7124438B2 (en) | 2002-03-08 | 2006-10-17 | Ciphertrust, Inc. | Systems and methods for anomaly detection in patterns of monitored communications |
US7447799B2 (en) * | 2002-04-24 | 2008-11-04 | Good Technology, Inc. | System and method for automatically updating a wireless device |
US20030217094A1 (en) * | 2002-05-17 | 2003-11-20 | Anthony Dean Andrews | Correlation framework |
JP2005528052A (en) * | 2002-05-28 | 2005-09-15 | ティーギュ，アラン，エイチ． | Message processing and contact alias control based on address patterns and automatic management |
GB2391419A (en) | 2002-06-07 | 2004-02-04 | Hewlett Packard Co | Restricting the propagation of a virus within a network |
GB2401280B (en) * | 2003-04-29 | 2006-02-08 | Hewlett Packard Development Co | Propagation of viruses through an information technology network |
US9813514B2 (en) | 2002-06-12 | 2017-11-07 | Good Technology Holdings Limited | Information repository system including a wireless device and related method |
US7310660B1 (en) * | 2002-06-25 | 2007-12-18 | Engate Technology Corporation | Method for removing unsolicited e-mail messages |
US8516034B1 (en) | 2002-07-08 | 2013-08-20 | Good Technology Software, Inc | System and method for modifying application behavior based on network bandwidth |
US8924484B2 (en) * | 2002-07-16 | 2014-12-30 | Sonicwall, Inc. | Active e-mail filter with challenge-response |
US20040015719A1 (en) * | 2002-07-16 | 2004-01-22 | Dae-Hyung Lee | Intelligent security engine and intelligent and integrated security system using the same |
US7908330B2 (en) * | 2003-03-11 | 2011-03-15 | Sonicwall, Inc. | Message auditing |
US8396926B1 (en) | 2002-07-16 | 2013-03-12 | Sonicwall, Inc. | Message challenge response |
US7539726B1 (en) | 2002-07-16 | 2009-05-26 | Sonicwall, Inc. | Message testing |
EP1540486B1 (en) | 2002-08-09 | 2018-05-16 | Reflexion Network Solutions, Inc. | System and method for controlling access to an electronic message recipient |
US7673058B1 (en) | 2002-09-09 | 2010-03-02 | Engate Technology Corporation | Unsolicited message intercepting communications processor |
US7490128B1 (en) | 2002-09-09 | 2009-02-10 | Engate Technology Corporation | Unsolicited message rejecting communications processor |
US7716351B1 (en) | 2002-09-09 | 2010-05-11 | Engate Technology Corporation | Unsolicited message diverting communications processor |
US8380791B1 (en) | 2002-12-13 | 2013-02-19 | Mcafee, Inc. | Anti-spam system, method, and computer program product |
AU2003300083A1 (en) * | 2002-12-30 | 2004-07-29 | Activestate Corporation | Method and system for feature extraction from outgoing messages for use in categorization of incoming messages |
US7219131B2 (en) * | 2003-01-16 | 2007-05-15 | Ironport Systems, Inc. | Electronic message delivery using an alternate source approach |
JP4344922B2 (en) * | 2003-01-27 | 2009-10-14 | 富士ゼロックス株式会社 | Evaluation apparatus and method |
US20060265459A1 (en) * | 2003-02-19 | 2006-11-23 | Postini, Inc. | Systems and methods for managing the transmission of synchronous electronic messages |
US7958187B2 (en) * | 2003-02-19 | 2011-06-07 | Google Inc. | Systems and methods for managing directory harvest attacks via electronic messages |
US8266215B2 (en) * | 2003-02-20 | 2012-09-11 | Sonicwall, Inc. | Using distinguishing properties to classify messages |
US7406502B1 (en) | 2003-02-20 | 2008-07-29 | Sonicwall, Inc. | Method and system for classifying a message based on canonical equivalent of acceptable items included in the message |
US7299261B1 (en) | 2003-02-20 | 2007-11-20 | Mailfrontier, Inc. A Wholly Owned Subsidiary Of Sonicwall, Inc. | Message classification using a summary |
US7856477B2 (en) * | 2003-04-04 | 2010-12-21 | Yahoo! Inc. | Method and system for image verification to prevent messaging abuse |
US7796515B2 (en) * | 2003-04-29 | 2010-09-14 | Hewlett-Packard Development Company, L.P. | Propagation of viruses through an information technology network |
US7653698B2 (en) * | 2003-05-29 | 2010-01-26 | Sonicwall, Inc. | Identifying e-mail messages from allowed senders |
US7814542B1 (en) * | 2003-06-30 | 2010-10-12 | Cisco Technology, Inc. | Network connection detection and throttling |
US7051077B2 (en) * | 2003-06-30 | 2006-05-23 | Mx Logic, Inc. | Fuzzy logic voting method and system for classifying e-mail using inputs from multiple spam classifiers |
US20050010644A1 (en) * | 2003-07-07 | 2005-01-13 | Brown Scott T. | High performance electronic message delivery engine |
US20050015626A1 (en) * | 2003-07-15 | 2005-01-20 | Chasin C. Scott | System and method for identifying and filtering junk e-mail messages or spam based on URL content |
US7814545B2 (en) * | 2003-07-22 | 2010-10-12 | Sonicwall, Inc. | Message classification using classifiers |
US7383306B2 (en) * | 2003-07-31 | 2008-06-03 | Hewlett-Packard Development Company, L.P. | System and method for selectively increasing message transaction costs |
GB2405229B (en) * | 2003-08-19 | 2006-01-11 | Sophos Plc | Method and apparatus for filtering electronic mail |
US7451487B2 (en) | 2003-09-08 | 2008-11-11 | Sonicwall, Inc. | Fraudulent message detection |
US20050114457A1 (en) * | 2003-10-27 | 2005-05-26 | Meng-Fu Shih | Filtering device for eliminating unsolicited email |
US7620690B1 (en) | 2003-11-20 | 2009-11-17 | Lashback, LLC | Privacy control system for electronic communication |
US9401838B2 (en) * | 2003-12-03 | 2016-07-26 | Emc Corporation | Network event capture and retention system |
US7647379B2 (en) * | 2003-12-19 | 2010-01-12 | International Business Machines Corporation | System and method for re-routing messaging traffic to external resources |
US8886727B1 (en) * | 2004-01-27 | 2014-11-11 | Sonicwall, Inc. | Message distribution control |
US7970831B2 (en) | 2004-02-02 | 2011-06-28 | The Boeing Company | Intelligent email services |
US9471712B2 (en) | 2004-02-09 | 2016-10-18 | Dell Software Inc. | Approximate matching of strings for message filtering |
US8856239B1 (en) | 2004-02-10 | 2014-10-07 | Sonicwall, Inc. | Message classification based on likelihood of spoofing |
CA2554915C (en) * | 2004-02-17 | 2013-05-28 | Ironport Systems, Inc. | Collecting, aggregating, and managing information relating to electronic messages |
US8214438B2 (en) * | 2004-03-01 | 2012-07-03 | Microsoft Corporation | (More) advanced spam detection features |
US20050216587A1 (en) * | 2004-03-25 | 2005-09-29 | International Business Machines Corporation | Establishing trust in an email client |
US8898788B1 (en) | 2004-04-01 | 2014-11-25 | Fireeye, Inc. | Systems and methods for malware attack prevention |
US8793787B2 (en) | 2004-04-01 | 2014-07-29 | Fireeye, Inc. | Detecting malicious network content using virtual environment components |
US8528086B1 (en) | 2004-04-01 | 2013-09-03 | Fireeye, Inc. | System and method of detecting computer worms |
US8549638B2 (en) | 2004-06-14 | 2013-10-01 | Fireeye, Inc. | System and method of containing computer worms |
US8171553B2 (en) | 2004-04-01 | 2012-05-01 | Fireeye, Inc. | Heuristic based capture with replay to virtual machine |
US8566946B1 (en) | 2006-04-20 | 2013-10-22 | Fireeye, Inc. | Malware containment on connection |
US7587537B1 (en) | 2007-11-30 | 2009-09-08 | Altera Corporation | Serializer-deserializer circuits formed from input-output circuit registers |
US8881282B1 (en) | 2004-04-01 | 2014-11-04 | Fireeye, Inc. | Systems and methods for malware attack detection and identification |
US8584239B2 (en) | 2004-04-01 | 2013-11-12 | Fireeye, Inc. | Virtual machine with dynamic data flow analysis |
US9106694B2 (en) | 2004-04-01 | 2015-08-11 | Fireeye, Inc. | Electronic message analysis for malware detection |
US7640307B2 (en) * | 2004-04-19 | 2009-12-29 | Bigstring Corporation | Universal recallable, erasable, secure and timed delivery email |
US7783706B1 (en) * | 2004-04-21 | 2010-08-24 | Aristotle.Net, Inc. | Filtering and managing electronic mail |
US7647321B2 (en) * | 2004-04-26 | 2010-01-12 | Google Inc. | System and method for filtering electronic messages using business heuristics |
CA2733172C (en) * | 2004-05-07 | 2011-10-25 | Sandvine Incorporated Ulc | A system and method for detecting sources of abnormal computer network messages |
US7756929B1 (en) * | 2004-05-18 | 2010-07-13 | Microsoft Corporation | System and method for processing e-mail |
US7912905B2 (en) * | 2004-05-18 | 2011-03-22 | Computer Associates Think, Inc. | System and method for filtering network messages |
AU2005247504B2 (en) * | 2004-05-25 | 2008-12-18 | Reflexion Networks, Inc. | A system and method for controlling access to an electronic message recipient |
US8037144B2 (en) * | 2004-05-25 | 2011-10-11 | Google Inc. | Electronic message source reputation information system |
US7698369B2 (en) | 2004-05-27 | 2010-04-13 | Strongmail Systems, Inc. | Email delivery system using metadata on emails to manage virtual storage |
US7756930B2 (en) * | 2004-05-28 | 2010-07-13 | Ironport Systems, Inc. | Techniques for determining the reputation of a message sender |
US7873695B2 (en) * | 2004-05-29 | 2011-01-18 | Ironport Systems, Inc. | Managing connections and messages at a server by associating different actions for both different senders and different recipients |
US7917588B2 (en) * | 2004-05-29 | 2011-03-29 | Ironport Systems, Inc. | Managing delivery of electronic messages using bounce profiles |
US8166310B2 (en) | 2004-05-29 | 2012-04-24 | Ironport Systems, Inc. | Method and apparatus for providing temporary access to a network device |
US7849142B2 (en) * | 2004-05-29 | 2010-12-07 | Ironport Systems, Inc. | Managing connections, messages, and directory harvest attacks at a server |
US7870200B2 (en) | 2004-05-29 | 2011-01-11 | Ironport Systems, Inc. | Monitoring the flow of messages received at a server |
US20050289148A1 (en) * | 2004-06-10 | 2005-12-29 | Steven Dorner | Method and apparatus for detecting suspicious, deceptive, and dangerous links in electronic messages |
US20060031318A1 (en) * | 2004-06-14 | 2006-02-09 | Gellens Randall C | Communicating information about the content of electronic messages to a server |
US7748038B2 (en) * | 2004-06-16 | 2010-06-29 | Ironport Systems, Inc. | Method and apparatus for managing computer virus outbreaks |
US8484295B2 (en) | 2004-12-21 | 2013-07-09 | Mcafee, Inc. | Subscriber reputation filtering method for analyzing subscriber activity and detecting account misuse |
US7953814B1 (en) * | 2005-02-28 | 2011-05-31 | Mcafee, Inc. | Stopping and remediating outbound messaging abuse |
US7680890B1 (en) | 2004-06-22 | 2010-03-16 | Wei Lin | Fuzzy logic voting method and system for classifying e-mail using inputs from multiple spam classifiers |
US7580981B1 (en) | 2004-06-30 | 2009-08-25 | Google Inc. | System for determining email spam by delivery path |
US7157327B2 (en) * | 2004-07-01 | 2007-01-02 | Infineon Technologies Ag | Void free, silicon filled trenches in semiconductors |
US8671144B2 (en) * | 2004-07-02 | 2014-03-11 | Qualcomm Incorporated | Communicating information about the character of electronic messages to a client |
US20060036690A1 (en) * | 2004-07-12 | 2006-02-16 | O'neil Patrick J | Network protection system |
US7343624B1 (en) | 2004-07-13 | 2008-03-11 | Sonicwall, Inc. | Managing infectious messages as identified by an attachment |
US9154511B1 (en) | 2004-07-13 | 2015-10-06 | Dell Software Inc. | Time zero detection of infectious messages |
US7634808B1 (en) * | 2004-08-20 | 2009-12-15 | Symantec Corporation | Method and apparatus to block fast-spreading computer worms that use DNS MX record queries |
US7552179B2 (en) * | 2004-09-20 | 2009-06-23 | Microsoft Corporation | Envelope e-mail journaling with best effort recipient updates |
US7644126B2 (en) * | 2004-09-29 | 2010-01-05 | Qualcomm Incoporated | Message thread handling |
US8495145B2 (en) * | 2004-10-14 | 2013-07-23 | Intel Corporation | Controlling receipt of undesired electronic mail |
US8635690B2 (en) | 2004-11-05 | 2014-01-21 | Mcafee, Inc. | Reputation based message processing |
US20060168013A1 (en) * | 2004-11-26 | 2006-07-27 | Invensys Systems, Inc. | Message management facility for an industrial process control environment |
US9015472B1 (en) | 2005-03-10 | 2015-04-21 | Mcafee, Inc. | Marking electronic messages to indicate human origination |
US9160755B2 (en) | 2004-12-21 | 2015-10-13 | Mcafee, Inc. | Trusted communication network |
US8738708B2 (en) | 2004-12-21 | 2014-05-27 | Mcafee, Inc. | Bounce management in a trusted communication network |
US20060168046A1 (en) * | 2005-01-11 | 2006-07-27 | Microsoft Corporaion | Managing periodic electronic messages |
US7716743B2 (en) * | 2005-01-14 | 2010-05-11 | Microsoft Corporation | Privacy friendly malware quarantines |
US7478132B2 (en) * | 2005-01-24 | 2009-01-13 | International Business Machines Corporation | Dynamic email content update process |
US8312119B2 (en) * | 2005-03-01 | 2012-11-13 | Microsoft Corporation | IP block activity feedback system |
US10225282B2 (en) * | 2005-04-14 | 2019-03-05 | International Business Machines Corporation | System, method and program product to identify a distributed denial of service attack |
US8583740B2 (en) * | 2005-04-25 | 2013-11-12 | Google Inc. | Actionable quarantine summary |
EP1877905B1 (en) * | 2005-05-05 | 2014-10-22 | Cisco IronPort Systems LLC | Identifying threats in electronic messages |
US20060253597A1 (en) * | 2005-05-05 | 2006-11-09 | Mujica Technologies Inc. | E-mail system |
US8874658B1 (en) * | 2005-05-11 | 2014-10-28 | Symantec Corporation | Method and apparatus for simulating end user responses to spam email messages |
JP4559295B2 (en) * | 2005-05-17 | 2010-10-06 | 株式会社エヌ・ティ・ティ・ドコモ | Data communication system and data communication method |
US7937480B2 (en) | 2005-06-02 | 2011-05-03 | Mcafee, Inc. | Aggregation of reputation data |
US20060277259A1 (en) * | 2005-06-07 | 2006-12-07 | Microsoft Corporation | Distributed sender reputations |
US7552230B2 (en) * | 2005-06-15 | 2009-06-23 | International Business Machines Corporation | Method and apparatus for reducing spam on peer-to-peer networks |
CA2510626A1 (en) * | 2005-06-23 | 2006-12-23 | Cognos Incorporated | Request routing system for and method of request routing |
CA2518894C (en) * | 2005-06-23 | 2014-06-10 | Cognos Incorporated | Request routing system for and method of request routing |
CN1921458B (en) * | 2005-08-23 | 2011-09-28 | 吴刚强 | System and method for uniform switch-in and exchange of enterprise E-mail |
US20070061402A1 (en) * | 2005-09-15 | 2007-03-15 | Microsoft Corporation | Multipurpose internet mail extension (MIME) analysis |
CN1794722B (en) * | 2005-09-19 | 2010-05-05 | 华为技术有限公司 | Method of transfering off-line message and instant message server |
US7636944B2 (en) * | 2005-10-28 | 2009-12-22 | Hewlett-Packard Development Company, L.P. | Method and apparatus for detecting and responding to email based propagation of malicious software in a trusted network |
US8077699B2 (en) * | 2005-11-07 | 2011-12-13 | Microsoft Corporation | Independent message stores and message transport agents |
US8595814B2 (en) * | 2005-12-13 | 2013-11-26 | Google Inc. | TLS encryption in a managed e-mail service environment |
US8601160B1 (en) | 2006-02-09 | 2013-12-03 | Mcafee, Inc. | System, method and computer program product for gathering information relating to electronic content utilizing a DNS server |
US7620392B1 (en) | 2006-02-27 | 2009-11-17 | Good Technology, Inc. | Method and system for distributing and updating software in wireless devices |
US20070220143A1 (en) * | 2006-03-20 | 2007-09-20 | Postini, Inc. | Synchronous message management system |
AU2013200872B2 (en) * | 2006-03-20 | 2014-08-21 | Google Inc. | Synchronous message management system |
CN101460938B (en) * | 2006-03-20 | 2012-10-10 | 谷歌公司 | Synchronous message management system and method |
US20070276915A1 (en) * | 2006-04-04 | 2007-11-29 | Wireless Services Corp. | Managing messages between multiple wireless carriers to multiple enterprises using a relatively limited number of identifiers |
US8458261B1 (en) * | 2006-04-07 | 2013-06-04 | Trend Micro Incorporated | Determination of valid email addresses in a private computer network |
US7958557B2 (en) * | 2006-05-17 | 2011-06-07 | Computer Associates Think, Inc. | Determining a source of malicious computer element in a computer network |
WO2008019064A2 (en) * | 2006-08-03 | 2008-02-14 | Nexplore Corporation | System and method to provide a message service agent with pluggable functionality |
US20080037583A1 (en) * | 2006-08-09 | 2008-02-14 | Postini, Inc. | Unified management policy for multiple format electronic communications |
US8239943B2 (en) * | 2006-08-18 | 2012-08-07 | Microsoft Corporation | Network security page |
US20080082658A1 (en) * | 2006-09-29 | 2008-04-03 | Wan-Yen Hsu | Spam control systems and methods |
US8180835B1 (en) | 2006-10-14 | 2012-05-15 | Engate Technology Corporation | System and method for protecting mail servers from mail flood attacks |
US8583731B1 (en) | 2006-11-17 | 2013-11-12 | Open Invention Network Llc | System and method for analyzing and filtering journaled electronic mail |
US20080126481A1 (en) * | 2006-11-26 | 2008-05-29 | Al Chakra | Method and system for providing communication context specific formality control |
US20080133571A1 (en) * | 2006-12-05 | 2008-06-05 | International Business Machines Corporation | Modifying Behavior in Messaging Systems According to Organizational Hierarchy |
US8286244B2 (en) * | 2007-01-19 | 2012-10-09 | Hewlett-Packard Development Company, L.P. | Method and system for protecting a computer network against packet floods |
US8763114B2 (en) | 2007-01-24 | 2014-06-24 | Mcafee, Inc. | Detecting image spam |
US7779156B2 (en) | 2007-01-24 | 2010-08-17 | Mcafee, Inc. | Reputation based load balancing |
US8179798B2 (en) | 2007-01-24 | 2012-05-15 | Mcafee, Inc. | Reputation based connection throttling |
US8214497B2 (en) | 2007-01-24 | 2012-07-03 | Mcafee, Inc. | Multi-dimensional reputation scoring |
US7949716B2 (en) | 2007-01-24 | 2011-05-24 | Mcafee, Inc. | Correlation and analysis of entity attributes |
JP2008210203A (en) * | 2007-02-27 | 2008-09-11 | Digital Arts Inc | Electronic mail processing method and system |
US9083712B2 (en) * | 2007-04-04 | 2015-07-14 | Sri International | Method and apparatus for generating highly predictive blacklists |
CN101072202B (en) * | 2007-05-25 | 2012-03-21 | 腾讯科技（深圳）有限公司 | Electronic mail monitoring method and monitoring system |
US7899870B2 (en) * | 2007-06-25 | 2011-03-01 | Microsoft Corporation | Determination of participation in a malicious software campaign |
US8347286B2 (en) * | 2007-07-16 | 2013-01-01 | International Business Machines Corporation | Method, system and program product for managing download requests received to download files from a server |
US8060569B2 (en) * | 2007-09-27 | 2011-11-15 | Microsoft Corporation | Dynamic email directory harvest attack detection and mitigation |
US20090094334A1 (en) * | 2007-10-03 | 2009-04-09 | Anders Eriksson | Gateway with transparent mail relay |
US8185930B2 (en) | 2007-11-06 | 2012-05-22 | Mcafee, Inc. | Adjusting filter or classification control settings |
US8045458B2 (en) | 2007-11-08 | 2011-10-25 | Mcafee, Inc. | Prioritizing network traffic |
US20090138562A1 (en) * | 2007-11-28 | 2009-05-28 | Loyal Technology Solutions, L.L.C. | Method and system for aggregation of electronic messages |
US20090182818A1 (en) * | 2008-01-11 | 2009-07-16 | Fortinet, Inc. A Delaware Corporation | Heuristic detection of probable misspelled addresses in electronic communications |
US8160975B2 (en) | 2008-01-25 | 2012-04-17 | Mcafee, Inc. | Granular support vector machine with random granularity |
EP2120493A1 (en) * | 2008-03-19 | 2009-11-18 | Nokia Siemens Networks Oy | Mechanism for automated re-configuration of an access network element |
US8589503B2 (en) | 2008-04-04 | 2013-11-19 | Mcafee, Inc. | Prioritizing network traffic |
US10354229B2 (en) | 2008-08-04 | 2019-07-16 | Mcafee, Llc | Method and system for centralized contact management |
US8789185B1 (en) * | 2008-09-15 | 2014-07-22 | Symantec Corporation | Method and apparatus for monitoring a computer system for malicious software |
US8997219B2 (en) | 2008-11-03 | 2015-03-31 | Fireeye, Inc. | Systems and methods for detecting malicious PDF network content |
US20100175103A1 (en) * | 2009-01-07 | 2010-07-08 | Microsoft Corporation | Reactive throttling of inbound messages and ranges |
US8959157B2 (en) * | 2009-06-26 | 2015-02-17 | Microsoft Corporation | Real-time spam look-up system |
KR101043003B1 (en) * | 2009-08-25 | 2011-06-21 | (주)이월리서치 | Zombie PC IP extraction method using a pattern for contents interception |
US8832829B2 (en) | 2009-09-30 | 2014-09-09 | Fireeye, Inc. | Network-based binary file extraction and analysis for malware detection |
US8484512B2 (en) | 2010-03-31 | 2013-07-09 | Microsoft Corporation | Throttling non-delivery reports based on root cause |
US8621638B2 (en) | 2010-05-14 | 2013-12-31 | Mcafee, Inc. | Systems and methods for classification of messaging entities |
US20120066487A1 (en) * | 2010-09-09 | 2012-03-15 | Novell, Inc. | System and method for providing load balancer visibility in an intelligent workload management system |
US8918467B2 (en) | 2010-10-01 | 2014-12-23 | Clover Leaf Environmental Solutions, Inc. | Generation and retrieval of report information |
US8990316B1 (en) | 2010-11-05 | 2015-03-24 | Amazon Technologies, Inc. | Identifying message deliverability problems using grouped message characteristics |
CN102821002B (en) * | 2011-06-09 | 2015-08-26 | 中国移动通信集团河南有限公司信阳分公司 | Network flow abnormal detecting method and system |
US8447851B1 (en) * | 2011-11-10 | 2013-05-21 | CopperEgg Corporation | System for monitoring elastic cloud-based computing systems as a service |
US9231899B2 (en) * | 2012-01-13 | 2016-01-05 | International Business Machines Corporation | Transmittal of blocked message notification |
US8976648B2 (en) * | 2012-08-09 | 2015-03-10 | Blackberry Limited | Method and apparatus for managing load on service devices in a communication network |
US8995260B2 (en) | 2012-08-09 | 2015-03-31 | Blackberry Limited | Method and apparatus for managing load in a communication network |
US8918473B1 (en) * | 2012-10-09 | 2014-12-23 | Whatsapp Inc. | System and method for detecting unwanted content |
US9935907B2 (en) | 2012-11-20 | 2018-04-03 | Dropbox, Inc. | System and method for serving a message client |
US9755995B2 (en) | 2012-11-20 | 2017-09-05 | Dropbox, Inc. | System and method for applying gesture input to digital content |
US9729695B2 (en) | 2012-11-20 | 2017-08-08 | Dropbox Inc. | Messaging client application interface |
US10572665B2 (en) | 2012-12-28 | 2020-02-25 | Fireeye, Inc. | System and method to create a number of breakpoints in a virtual machine via virtual machine trapping events |
US9195829B1 (en) | 2013-02-23 | 2015-11-24 | Fireeye, Inc. | User interface with real-time visual playback along with synchronous textual analysis log display and event/time index for anomalous behavior detection in applications |
US9176843B1 (en) | 2013-02-23 | 2015-11-03 | Fireeye, Inc. | Framework for efficient security coverage of mobile software applications |
US9367681B1 (en) | 2013-02-23 | 2016-06-14 | Fireeye, Inc. | Framework for efficient security coverage of mobile software applications using symbolic execution to reach regions of interest within an application |
US9104867B1 (en) | 2013-03-13 | 2015-08-11 | Fireeye, Inc. | Malicious content analysis using simulated user interaction without user involvement |
US9626509B1 (en) | 2013-03-13 | 2017-04-18 | Fireeye, Inc. | Malicious content analysis with multi-version application support within single operating environment |
US9355247B1 (en) | 2013-03-13 | 2016-05-31 | Fireeye, Inc. | File extraction from memory dump for malicious content analysis |
US9430646B1 (en) | 2013-03-14 | 2016-08-30 | Fireeye, Inc. | Distributed systems and methods for automatically detecting unknown bots and botnets |
US9311479B1 (en) | 2013-03-14 | 2016-04-12 | Fireeye, Inc. | Correlation and consolidation of analytic data for holistic view of a malware attack |
US10713358B2 (en) | 2013-03-15 | 2020-07-14 | Fireeye, Inc. | System and method to extract and utilize disassembly features to classify software intent |
US9413781B2 (en) | 2013-03-15 | 2016-08-09 | Fireeye, Inc. | System and method employing structured intelligence to verify and contain threats at endpoints |
US9495180B2 (en) | 2013-05-10 | 2016-11-15 | Fireeye, Inc. | Optimized resource allocation for virtual machines within a malware content detection system |
US9635039B1 (en) | 2013-05-13 | 2017-04-25 | Fireeye, Inc. | Classifying sets of malicious indicators for detecting command and control communications associated with malware |
CN103281392A (en) * | 2013-06-07 | 2013-09-04 | 潍柴动力股份有限公司 | Method, device and system for monitoring |
US10133863B2 (en) | 2013-06-24 | 2018-11-20 | Fireeye, Inc. | Zero-day discovery system |
US9300686B2 (en) | 2013-06-28 | 2016-03-29 | Fireeye, Inc. | System and method for detecting malicious links in electronic messages |
US9628507B2 (en) | 2013-09-30 | 2017-04-18 | Fireeye, Inc. | Advanced persistent threat (APT) detection center |
US9736179B2 (en) | 2013-09-30 | 2017-08-15 | Fireeye, Inc. | System, apparatus and method for using malware analysis results to drive adaptive instrumentation of virtual machines to improve exploit detection |
US9294501B2 (en) | 2013-09-30 | 2016-03-22 | Fireeye, Inc. | Fuzzy hash of behavioral results |
US9690936B1 (en) | 2013-09-30 | 2017-06-27 | Fireeye, Inc. | Multistage system and method for analyzing obfuscated content for malware |
US10515214B1 (en) | 2013-09-30 | 2019-12-24 | Fireeye, Inc. | System and method for classifying malware within content created during analysis of a specimen |
US9171160B2 (en) | 2013-09-30 | 2015-10-27 | Fireeye, Inc. | Dynamically adaptive framework and method for classifying malware using intelligent static, emulation, and dynamic analyses |
US9921978B1 (en) | 2013-11-08 | 2018-03-20 | Fireeye, Inc. | System and method for enhanced security of storage devices |
US9756074B2 (en) | 2013-12-26 | 2017-09-05 | Fireeye, Inc. | System and method for IPS and VM-based detection of suspicious objects |
US9747446B1 (en) | 2013-12-26 | 2017-08-29 | Fireeye, Inc. | System and method for run-time object classification |
US9507935B2 (en) | 2014-01-16 | 2016-11-29 | Fireeye, Inc. | Exploit detection system with threat-aware microvisor |
US9262635B2 (en) | 2014-02-05 | 2016-02-16 | Fireeye, Inc. | Detection efficacy of virtual machine-based analysis with application specific events |
US9584462B1 (en) | 2014-02-06 | 2017-02-28 | Sprint Communications Company L.P. | Universal email failure notification system |
US9712483B1 (en) * | 2014-02-06 | 2017-07-18 | Sprint Communications Company L.P. | Automated check for simple mail transfer protocol email delays |
TWI511060B (en) * | 2014-02-18 | 2015-12-01 | Synology Inc | Device, method and non-transitory computer readable storage medium for performing instant message communication |
US9241010B1 (en) | 2014-03-20 | 2016-01-19 | Fireeye, Inc. | System and method for network behavior detection |
US10242185B1 (en) | 2014-03-21 | 2019-03-26 | Fireeye, Inc. | Dynamic guest image creation and rollback |
US9591015B1 (en) | 2014-03-28 | 2017-03-07 | Fireeye, Inc. | System and method for offloading packet processing and static analysis operations |
US9432389B1 (en) | 2014-03-31 | 2016-08-30 | Fireeye, Inc. | System, apparatus and method for detecting a malicious attack based on static analysis of a multi-flow object |
US9223972B1 (en) | 2014-03-31 | 2015-12-29 | Fireeye, Inc. | Dynamically remote tuning of a malware content detection system |
US9594912B1 (en) | 2014-06-06 | 2017-03-14 | Fireeye, Inc. | Return-oriented programming detection |
US9973531B1 (en) | 2014-06-06 | 2018-05-15 | Fireeye, Inc. | Shellcode detection |
US9438623B1 (en) | 2014-06-06 | 2016-09-06 | Fireeye, Inc. | Computer exploit detection using heap spray pattern matching |
US10084813B2 (en) | 2014-06-24 | 2018-09-25 | Fireeye, Inc. | Intrusion prevention and remedy system |
US9398028B1 (en) | 2014-06-26 | 2016-07-19 | Fireeye, Inc. | System, device and method for detecting a malicious attack based on communcations between remotely hosted virtual machines and malicious web servers |
US10805340B1 (en) | 2014-06-26 | 2020-10-13 | Fireeye, Inc. | Infection vector and malware tracking with an interactive user display |
US10002252B2 (en) | 2014-07-01 | 2018-06-19 | Fireeye, Inc. | Verification of trusted threat-aware microvisor |
US9363280B1 (en) | 2014-08-22 | 2016-06-07 | Fireeye, Inc. | System and method of detecting delivery of malware using cross-customer data |
US10671726B1 (en) | 2014-09-22 | 2020-06-02 | Fireeye Inc. | System and method for malware analysis using thread-level event monitoring |
US10027689B1 (en) | 2014-09-29 | 2018-07-17 | Fireeye, Inc. | Interactive infection visualization for improved exploit detection and signature generation for malware and malware families |
US9773112B1 (en) | 2014-09-29 | 2017-09-26 | Fireeye, Inc. | Exploit detection of malware and malware families |
US11349790B2 (en) | 2014-12-22 | 2022-05-31 | International Business Machines Corporation | System, method and computer program product to extract information from email communications |
US9690933B1 (en) | 2014-12-22 | 2017-06-27 | Fireeye, Inc. | Framework for classifying an object as malicious with machine learning for deploying updated predictive models |
US10075455B2 (en) | 2014-12-26 | 2018-09-11 | Fireeye, Inc. | Zero-day rotating guest image profile |
US9934376B1 (en) | 2014-12-29 | 2018-04-03 | Fireeye, Inc. | Malware detection appliance architecture |
US9838417B1 (en) | 2014-12-30 | 2017-12-05 | Fireeye, Inc. | Intelligent context aware user interaction for malware detection |
US10148693B2 (en) | 2015-03-25 | 2018-12-04 | Fireeye, Inc. | Exploit detection system |
US9690606B1 (en) | 2015-03-25 | 2017-06-27 | Fireeye, Inc. | Selective system call monitoring |
US10623352B2 (en) | 2015-03-30 | 2020-04-14 | International Business Machines Corporation | Modification of electronic messages |
US9438613B1 (en) | 2015-03-30 | 2016-09-06 | Fireeye, Inc. | Dynamic content activation for automated analysis of embedded objects |
US10474813B1 (en) | 2015-03-31 | 2019-11-12 | Fireeye, Inc. | Code injection technique for remediation at an endpoint of a network |
US10417031B2 (en) | 2015-03-31 | 2019-09-17 | Fireeye, Inc. | Selective virtualization for security threat detection |
US9483644B1 (en) | 2015-03-31 | 2016-11-01 | Fireeye, Inc. | Methods for detecting file altering malware in VM based analysis |
US9654485B1 (en) | 2015-04-13 | 2017-05-16 | Fireeye, Inc. | Analytics-based security monitoring system and method |
US9594904B1 (en) | 2015-04-23 | 2017-03-14 | Fireeye, Inc. | Detecting malware based on reflection |
US10263946B2 (en) | 2015-05-08 | 2019-04-16 | Humana Inc. | Enterprise message management system and method |
US10642753B1 (en) | 2015-06-30 | 2020-05-05 | Fireeye, Inc. | System and method for protecting a software component running in virtual machine using a virtualization layer |
US10454950B1 (en) | 2015-06-30 | 2019-10-22 | Fireeye, Inc. | Centralized aggregation technique for detecting lateral movement of stealthy cyber-attacks |
US10726127B1 (en) | 2015-06-30 | 2020-07-28 | Fireeye, Inc. | System and method for protecting a software component running in a virtual machine through virtual interrupts by the virtualization layer |
US11113086B1 (en) | 2015-06-30 | 2021-09-07 | Fireeye, Inc. | Virtual system and method for securing external network connectivity |
US10715542B1 (en) | 2015-08-14 | 2020-07-14 | Fireeye, Inc. | Mobile application risk analysis |
US10536408B2 (en) * | 2015-09-16 | 2020-01-14 | Litéra Corporation | Systems and methods for detecting, reporting and cleaning metadata from inbound attachments |
US10176321B2 (en) | 2015-09-22 | 2019-01-08 | Fireeye, Inc. | Leveraging behavior-based rules for malware family classification |
US10033747B1 (en) | 2015-09-29 | 2018-07-24 | Fireeye, Inc. | System and method for detecting interpreter-based exploit attacks |
US10706149B1 (en) | 2015-09-30 | 2020-07-07 | Fireeye, Inc. | Detecting delayed activation malware using a primary controller and plural time controllers |
US9825989B1 (en) | 2015-09-30 | 2017-11-21 | Fireeye, Inc. | Cyber attack early warning system |
US10210329B1 (en) | 2015-09-30 | 2019-02-19 | Fireeye, Inc. | Method to detect application execution hijacking using memory protection |
US9825976B1 (en) | 2015-09-30 | 2017-11-21 | Fireeye, Inc. | Detection and classification of exploit kits |
US10817606B1 (en) | 2015-09-30 | 2020-10-27 | Fireeye, Inc. | Detecting delayed activation malware using a run-time monitoring agent and time-dilation logic |
US10601865B1 (en) | 2015-09-30 | 2020-03-24 | Fireeye, Inc. | Detection of credential spearphishing attacks using email analysis |
US10284575B2 (en) | 2015-11-10 | 2019-05-07 | Fireeye, Inc. | Launcher for setting analysis environment variations for malware detection |
US10846117B1 (en) | 2015-12-10 | 2020-11-24 | Fireeye, Inc. | Technique for establishing secure communication between host and guest processes of a virtualization architecture |
US10447728B1 (en) | 2015-12-10 | 2019-10-15 | Fireeye, Inc. | Technique for protecting guest processes using a layered virtualization architecture |
US10108446B1 (en) | 2015-12-11 | 2018-10-23 | Fireeye, Inc. | Late load technique for deploying a virtualization layer underneath a running operating system |
WO2017116601A1 (en) * | 2015-12-27 | 2017-07-06 | Avanan Inc. | Cloud security platform |
US10621338B1 (en) | 2015-12-30 | 2020-04-14 | Fireeye, Inc. | Method to detect forgery and exploits using last branch recording registers |
US10133866B1 (en) | 2015-12-30 | 2018-11-20 | Fireeye, Inc. | System and method for triggering analysis of an object for malware in response to modification of that object |
US10565378B1 (en) | 2015-12-30 | 2020-02-18 | Fireeye, Inc. | Exploit of privilege detection framework |
US10050998B1 (en) | 2015-12-30 | 2018-08-14 | Fireeye, Inc. | Malicious message analysis system |
US10581874B1 (en) | 2015-12-31 | 2020-03-03 | Fireeye, Inc. | Malware detection system with contextual analysis |
US11552986B1 (en) | 2015-12-31 | 2023-01-10 | Fireeye Security Holdings Us Llc | Cyber-security framework for application of virtual features |
US9824216B1 (en) | 2015-12-31 | 2017-11-21 | Fireeye, Inc. | Susceptible environment detection system |
US10785255B1 (en) | 2016-03-25 | 2020-09-22 | Fireeye, Inc. | Cluster configuration within a scalable malware detection system |
US10616266B1 (en) | 2016-03-25 | 2020-04-07 | Fireeye, Inc. | Distributed malware detection system and submission workflow thereof |
US10671721B1 (en) | 2016-03-25 | 2020-06-02 | Fireeye, Inc. | Timeout management services |
US10601863B1 (en) | 2016-03-25 | 2020-03-24 | Fireeye, Inc. | System and method for managing sensor enrollment |
US10893059B1 (en) | 2016-03-31 | 2021-01-12 | Fireeye, Inc. | Verification and enhancement using detection systems located at the network periphery and endpoint devices |
US10826933B1 (en) | 2016-03-31 | 2020-11-03 | Fireeye, Inc. | Technique for verifying exploit/malware at malware detection appliance through correlation with endpoints |
TWI609378B (en) * | 2016-06-15 | 2017-12-21 | 慧榮科技股份有限公司 | Data storage device and operating method |
US10169585B1 (en) | 2016-06-22 | 2019-01-01 | Fireeye, Inc. | System and methods for advanced malware detection through placement of transition events |
US10462173B1 (en) | 2016-06-30 | 2019-10-29 | Fireeye, Inc. | Malware detection verification and enhancement by coordinating endpoint and malware detection systems |
US10592678B1 (en) | 2016-09-09 | 2020-03-17 | Fireeye, Inc. | Secure communications between peers using a verified virtual trusted platform module |
US10491627B1 (en) | 2016-09-29 | 2019-11-26 | Fireeye, Inc. | Advanced malware detection using similarity analysis |
US10795991B1 (en) | 2016-11-08 | 2020-10-06 | Fireeye, Inc. | Enterprise search |
US10855635B2 (en) | 2016-11-14 | 2020-12-01 | Microsoft Technology Licensing, Llc | Electronic mail (e-mail) system support for messages with different traffic types |
US10587647B1 (en) | 2016-11-22 | 2020-03-10 | Fireeye, Inc. | Technique for malware detection capability comparison of network security devices |
US10581879B1 (en) | 2016-12-22 | 2020-03-03 | Fireeye, Inc. | Enhanced malware detection for generated objects |
US10552610B1 (en) | 2016-12-22 | 2020-02-04 | Fireeye, Inc. | Adaptive virtual machine snapshot update framework for malware behavioral analysis |
US10523609B1 (en) | 2016-12-27 | 2019-12-31 | Fireeye, Inc. | Multi-vector malware detection and analysis |
US10904286B1 (en) | 2017-03-24 | 2021-01-26 | Fireeye, Inc. | Detection of phishing attacks using similarity analysis |
US10902119B1 (en) | 2017-03-30 | 2021-01-26 | Fireeye, Inc. | Data extraction system for malware analysis |
US10798112B2 (en) | 2017-03-30 | 2020-10-06 | Fireeye, Inc. | Attribute-controlled malware detection |
US10848397B1 (en) | 2017-03-30 | 2020-11-24 | Fireeye, Inc. | System and method for enforcing compliance with subscription requirements for cyber-attack detection service |
US10791138B1 (en) | 2017-03-30 | 2020-09-29 | Fireeye, Inc. | Subscription-based malware detection |
US10855700B1 (en) | 2017-06-29 | 2020-12-01 | Fireeye, Inc. | Post-intrusion detection of cyber-attacks during lateral movement within networks |
US10601848B1 (en) | 2017-06-29 | 2020-03-24 | Fireeye, Inc. | Cyber-security system and method for weak indicator detection and correlation to generate strong indicators |
US10503904B1 (en) | 2017-06-29 | 2019-12-10 | Fireeye, Inc. | Ransomware detection and mitigation |
US10893068B1 (en) | 2017-06-30 | 2021-01-12 | Fireeye, Inc. | Ransomware file modification prevention technique |
CN109474509B (en) * | 2017-09-07 | 2022-07-12 | 北京二六三企业通信有限公司 | Junk mail identification method and device |
US10747872B1 (en) | 2017-09-27 | 2020-08-18 | Fireeye, Inc. | System and method for preventing malware evasion |
US10805346B2 (en) | 2017-10-01 | 2020-10-13 | Fireeye, Inc. | Phishing attack detection |
US11108809B2 (en) | 2017-10-27 | 2021-08-31 | Fireeye, Inc. | System and method for analyzing binary code for malware classification using artificial neural network techniques |
US11005860B1 (en) | 2017-12-28 | 2021-05-11 | Fireeye, Inc. | Method and system for efficient cybersecurity analysis of endpoint events |
US11240275B1 (en) | 2017-12-28 | 2022-02-01 | Fireeye Security Holdings Us Llc | Platform and method for performing cybersecurity analyses employing an intelligence hub with a modular architecture |
US11271955B2 (en) | 2017-12-28 | 2022-03-08 | Fireeye Security Holdings Us Llc | Platform and method for retroactive reclassification employing a cybersecurity-based global data store |
US10826931B1 (en) | 2018-03-29 | 2020-11-03 | Fireeye, Inc. | System and method for predicting and mitigating cybersecurity system misconfigurations |
US11003773B1 (en) | 2018-03-30 | 2021-05-11 | Fireeye, Inc. | System and method for automatically generating malware detection rule recommendations |
US11558401B1 (en) | 2018-03-30 | 2023-01-17 | Fireeye Security Holdings Us Llc | Multi-vector malware detection data sharing system for improved detection |
US10956477B1 (en) | 2018-03-30 | 2021-03-23 | Fireeye, Inc. | System and method for detecting malicious scripts through natural language processing modeling |
CN108833258A (en) * | 2018-06-12 | 2018-11-16 | 广东睿江云计算股份有限公司 | A kind of mail service actively discovers abnormal method |
US11075930B1 (en) | 2018-06-27 | 2021-07-27 | Fireeye, Inc. | System and method for detecting repetitive cybersecurity attacks constituting an email campaign |
US11314859B1 (en) | 2018-06-27 | 2022-04-26 | FireEye Security Holdings, Inc. | Cyber-security system and method for detecting escalation of privileges within an access token |
US11228491B1 (en) | 2018-06-28 | 2022-01-18 | Fireeye Security Holdings Us Llc | System and method for distributed cluster configuration monitoring and management |
US11316900B1 (en) | 2018-06-29 | 2022-04-26 | FireEye Security Holdings Inc. | System and method for automatically prioritizing rules for cyber-threat detection and mitigation |
JP2020024503A (en) * | 2018-08-06 | 2020-02-13 | キオクシア株式会社 | Electronic device and data transmission/reception method |
US11182473B1 (en) | 2018-09-13 | 2021-11-23 | Fireeye Security Holdings Us Llc | System and method for mitigating cyberattacks against processor operability by a guest process |
US11763004B1 (en) | 2018-09-27 | 2023-09-19 | Fireeye Security Holdings Us Llc | System and method for bootkit detection |
CN109309613B (en) * | 2018-10-09 | 2021-01-22 | 京东方科技集团股份有限公司 | Mail delivery method, device and system |
US11368475B1 (en) | 2018-12-21 | 2022-06-21 | Fireeye Security Holdings Us Llc | System and method for scanning remote services to locate stored objects with malware |
US11743290B2 (en) | 2018-12-21 | 2023-08-29 | Fireeye Security Holdings Us Llc | System and method for detecting cyberattacks impersonating legitimate sources |
US11176251B1 (en) | 2018-12-21 | 2021-11-16 | Fireeye, Inc. | Determining malware via symbolic function hash analysis |
US11601444B1 (en) | 2018-12-31 | 2023-03-07 | Fireeye Security Holdings Us Llc | Automated system for triage of customer issues |
US11310238B1 (en) | 2019-03-26 | 2022-04-19 | FireEye Security Holdings, Inc. | System and method for retrieval and analysis of operational data from customer, cloud-hosted virtual resources |
US11677786B1 (en) | 2019-03-29 | 2023-06-13 | Fireeye Security Holdings Us Llc | System and method for detecting and protecting against cybersecurity attacks on servers |
US11636198B1 (en) | 2019-03-30 | 2023-04-25 | Fireeye Security Holdings Us Llc | System and method for cybersecurity analyzer update and concurrent management system |
US11258806B1 (en) | 2019-06-24 | 2022-02-22 | Mandiant, Inc. | System and method for automatically associating cybersecurity intelligence to cyberthreat actors |
US11556640B1 (en) | 2019-06-27 | 2023-01-17 | Mandiant, Inc. | Systems and methods for automated cybersecurity analysis of extracted binary string sets |
US11392700B1 (en) | 2019-06-28 | 2022-07-19 | Fireeye Security Holdings Us Llc | System and method for supporting cross-platform data verification |
US11886585B1 (en) | 2019-09-27 | 2024-01-30 | Musarubra Us Llc | System and method for identifying and mitigating cyberattacks through malicious position-independent code execution |
US11637862B1 (en) | 2019-09-30 | 2023-04-25 | Mandiant, Inc. | System and method for surfacing cyber-security threats with a self-learning recommendation engine |
US11436327B1 (en) | 2019-12-24 | 2022-09-06 | Fireeye Security Holdings Us Llc | System and method for circumventing evasive code for cyberthreat detection |
US11522884B1 (en) | 2019-12-24 | 2022-12-06 | Fireeye Security Holdings Us Llc | Subscription and key management system |
US11838300B1 (en) | 2019-12-24 | 2023-12-05 | Musarubra Us Llc | Run-time configurable cybersecurity system |
US11647002B2 (en) * | 2021-08-09 | 2023-05-09 | Oversec, Uab | Providing a notification system in a virtual private network |
US20230171212A1 (en) * | 2021-11-29 | 2023-06-01 | Virtual Connect Technologies, Inc. | Computerized System For Analysis Of Vertices And Edges Of An Electronic Messaging System |
Citations (69)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4837798A (en) * | 1986-06-02 | 1989-06-06 | American Telephone And Telegraph Company | Communication system having unified messaging |
US5619648A (en) * | 1994-11-30 | 1997-04-08 | Lucent Technologies Inc. | Message filtering techniques |
US5627764A (en) * | 1991-10-04 | 1997-05-06 | Banyan Systems, Inc. | Automatic electronic messaging system with feedback and work flow administration |
US5634005A (en) * | 1992-11-09 | 1997-05-27 | Kabushiki Kaisha Toshiba | System for automatically sending mail message by storing rule according to the language specification of the message including processing condition and processing content |
US5742668A (en) * | 1994-09-19 | 1998-04-21 | Bell Communications Research, Inc. | Electronic massaging network |
US5771355A (en) * | 1995-12-21 | 1998-06-23 | Intel Corporation | Transmitting electronic mail by either reference or value at file-replication points to minimize costs |
US5796948A (en) * | 1996-11-12 | 1998-08-18 | Cohen; Elliot D. | Offensive message interceptor for computers |
US5832208A (en) * | 1996-09-05 | 1998-11-03 | Cheyenne Software International Sales Corp. | Anti-virus agent for use with databases and mail servers |
US5844969A (en) * | 1997-01-23 | 1998-12-01 | At&T Corp. | Communication system, method and device for remotely re-transmitting received electronic mail directed to a destination terminal to a new destination terminal |
US5889943A (en) * | 1995-09-26 | 1999-03-30 | Trend Micro Incorporated | Apparatus and method for electronic mail virus detection and elimination |
US5905777A (en) * | 1996-09-27 | 1999-05-18 | At&T Corp. | E-mail paging system |
US5937162A (en) * | 1995-04-06 | 1999-08-10 | Exactis.Com, Inc. | Method and apparatus for high volume e-mail delivery |
US5937161A (en) * | 1996-04-12 | 1999-08-10 | Usa.Net, Inc. | Electronic message forwarding system |
US5968117A (en) * | 1998-01-20 | 1999-10-19 | Aurora Communications Exchange Ltd. | Device and system to facilitate accessing electronic mail from remote user-interface devices |
US5987611A (en) * | 1996-12-31 | 1999-11-16 | Zone Labs, Inc. | System and methodology for managing internet access on a per application basis for client computers connected to the internet |
US5999932A (en) * | 1998-01-13 | 1999-12-07 | Bright Light Technologies, Inc. | System and method for filtering unsolicited electronic mail messages using data matching and heuristic processing |
US6014429A (en) * | 1996-08-12 | 2000-01-11 | Lucent Technologies, Inc. | Two-way wireless messaging system with transaction server |
US6023723A (en) * | 1997-12-22 | 2000-02-08 | Accepted Marketing, Inc. | Method and system for filtering unwanted junk e-mail utilizing a plurality of filtering mechanisms |
US6052709A (en) * | 1997-12-23 | 2000-04-18 | Bright Light Technologies, Inc. | Apparatus and method for controlling delivery of unsolicited electronic mail |
US6061718A (en) * | 1997-07-23 | 2000-05-09 | Ericsson Inc. | Electronic mail delivery system in wired or wireless communications system |
US6069196A (en) * | 1992-05-11 | 2000-05-30 | Fuji Photo Film Co., Ltd. | Molded articles for photographic photo-sensitive materials |
US6073165A (en) * | 1997-07-29 | 2000-06-06 | Jfax Communications, Inc. | Filtering computer network messages directed to a user's e-mail box based on user defined filters, and forwarding a filtered message to the user's receiver |
US6075863A (en) * | 1996-02-28 | 2000-06-13 | Encanto Networks | Intelligent communication device |
US6092194A (en) * | 1996-11-08 | 2000-07-18 | Finjan Software, Ltd. | System and method for protecting a computer and a network from hostile downloadables |
US6112227A (en) * | 1998-08-06 | 2000-08-29 | Heiner; Jeffrey Nelson | Filter-in method for reducing junk e-mail |
US6118856A (en) * | 1998-12-28 | 2000-09-12 | Nortel Networks Corporation | Method and apparatus for automatically forwarding an email message or portion thereof to a remote device |
US6138146A (en) * | 1997-09-29 | 2000-10-24 | Ericsson Inc. | Electronic mail forwarding system and method |
US6147987A (en) * | 1997-04-08 | 2000-11-14 | 3Com Corporation | Supporting load sharing across multiple network access servers |
US6146026A (en) * | 1996-12-27 | 2000-11-14 | Canon Kabushiki Kaisha | System and apparatus for selectively publishing electronic-mail |
US6178331B1 (en) * | 1997-06-17 | 2001-01-23 | Bulletin.Net, Inc. | System and process for allowing wireless messaging |
US6249805B1 (en) * | 1997-08-12 | 2001-06-19 | Micron Electronics, Inc. | Method and system for filtering unauthorized electronic mail messages |
US6249807B1 (en) * | 1998-11-17 | 2001-06-19 | Kana Communications, Inc. | Method and apparatus for performing enterprise email management |
US6263202B1 (en) * | 1998-01-28 | 2001-07-17 | Uniden Corporation | Communication system and wireless communication terminal device used therein |
US6301245B1 (en) * | 1998-06-09 | 2001-10-09 | Unisys Corporation | Universal Messaging system providing integrated voice, data and fax messaging services to PC/web-based clients, including a large object server for efficiently distributing voice/fax messages to web-based clients |
US6317751B1 (en) * | 1998-09-28 | 2001-11-13 | Merrill Lynch & Co., Inc. | Compliance archival data process and system |
US6321267B1 (en) * | 1999-11-23 | 2001-11-20 | Escom Corporation | Method and apparatus for filtering junk email |
US6334140B1 (en) * | 1997-09-25 | 2001-12-25 | Nec Corporation | Electronic mail server in which electronic mail is processed |
US6335966B1 (en) * | 1999-03-29 | 2002-01-01 | Matsushita Graphic Communication Systems, Inc. | Image communication apparatus server apparatus and capability exchanging method |
US20020042815A1 (en) * | 2000-09-22 | 2002-04-11 | Arthur Salzfass | Automated system and method for routing undeliverable e-mail messages and otherwise managing e-mail |
US6389276B1 (en) * | 1998-12-23 | 2002-05-14 | Bell Atlantic Mobile | Systems and methods for providing voice mail notification from a separate voice mail system to mobile telephone |
US20020065891A1 (en) * | 2000-11-30 | 2002-05-30 | Malik Dale W. | Method and apparatus for automatically checking e-mail addresses in outgoing e-mail communications |
US6404762B1 (en) * | 1998-06-09 | 2002-06-11 | Unisys Corporation | Universal messaging system providing integrated voice, data and fax messaging services to pc/web-based clients, including a session manager for maintaining a session between a messaging platform and the web-based clients |
US6411684B1 (en) * | 1994-09-16 | 2002-06-25 | Avaya Technology Corp. | Network-based multimedia communications and directory system and method of operation |
US6434601B1 (en) * | 1999-03-31 | 2002-08-13 | Micron Technology, Inc. | Pre test electronic mail process |
US20020116463A1 (en) * | 2001-02-20 | 2002-08-22 | Hart Matthew Thomas | Unwanted e-mail filtering |
US6442589B1 (en) * | 1999-01-14 | 2002-08-27 | Fujitsu Limited | Method and system for sorting and forwarding electronic messages and other data |
US20020120705A1 (en) * | 2001-02-26 | 2002-08-29 | Schiavone Vincent J. | System and method for controlling distribution of network communications |
US6453327B1 (en) * | 1996-06-10 | 2002-09-17 | Sun Microsystems, Inc. | Method and apparatus for identifying and discarding junk electronic mail |
US20020147780A1 (en) * | 2001-04-09 | 2002-10-10 | Liu James Y. | Method and system for scanning electronic mail to detect and eliminate computer viruses using a group of email-scanning servers and a recipient's email gateway |
US6487586B2 (en) * | 1998-09-23 | 2002-11-26 | John W. L. Ogilvie | Self-removing email verified or designated as such by a message distributor for the convenience of a recipient |
US20020178381A1 (en) * | 2001-05-22 | 2002-11-28 | Trend Micro Incorporated | System and method for identifying undesirable content in responses sent in reply to a user request for content |
US6513045B1 (en) * | 1999-11-17 | 2003-01-28 | International Business Machines Corporation | Method and an apparatus for providing cross product automated user assistance in the planning, configuration, and management of information systems |
US20030023692A1 (en) * | 2001-07-27 | 2003-01-30 | Fujitsu Limited | Electronic message delivery system, electronic message delivery managment server, and recording medium in which electronic message delivery management program is recorded |
US20030088627A1 (en) * | 2001-07-26 | 2003-05-08 | Rothwell Anton C. | Intelligent SPAM detection system using an updateable neural analysis engine |
US6574658B1 (en) * | 1999-01-29 | 2003-06-03 | Lucent Technologies Inc. | System and method for secure classification of electronic mail |
US20030135567A1 (en) * | 1999-06-23 | 2003-07-17 | Mail Registry, Inc. | Systems and methods for automatically forwarding electronic mail when the recipient is otherwise unknown |
US6615258B1 (en) * | 1997-09-26 | 2003-09-02 | Worldcom, Inc. | Integrated customer interface for web based data management |
US20030167311A1 (en) * | 1998-12-09 | 2003-09-04 | Kirsch Steven T. | Method and system for selectively blocking delivery of electronic mail |
US6650890B1 (en) * | 2000-09-29 | 2003-11-18 | Postini, Inc. | Value-added electronic messaging services and transparent implementation thereof using intermediate server |
US6654787B1 (en) * | 1998-12-31 | 2003-11-25 | Brightmail, Incorporated | Method and apparatus for filtering e-mail |
US6691156B1 (en) * | 2000-03-10 | 2004-02-10 | International Business Machines Corporation | Method for restricting delivery of unsolicited E-mail |
US6711618B1 (en) * | 1999-09-03 | 2004-03-23 | Cisco Technology, Inc. | Apparatus and method for providing server state and attribute management for voice enabled web applications |
US6779021B1 (en) * | 2000-07-28 | 2004-08-17 | International Business Machines Corporation | Method and system for predicting and managing undesirable electronic mail |
US6868498B1 (en) * | 1999-09-01 | 2005-03-15 | Peter L. Katsikas | System for eliminating unauthorized electronic mail |
US20050182960A1 (en) * | 2002-02-19 | 2005-08-18 | Postini, Inc. | Systems and methods for managing the transmission of electronic messages via throttling and delaying delivery |
US6957259B1 (en) * | 2001-06-25 | 2005-10-18 | Bellsouth Intellectual Property Corporation | System and method for regulating emails by maintaining, updating and comparing the profile information for the email source to the target email statistics |
US20060010242A1 (en) * | 2004-05-24 | 2006-01-12 | Whitney David C | Decoupling determination of SPAM confidence level from message rule actions |
US7092992B1 (en) * | 2001-02-01 | 2006-08-15 | Mailshell.Com, Inc. | Web page filtering including substitution of user-entered email address |
US20060265459A1 (en) * | 2003-02-19 | 2006-11-23 | Postini, Inc. | Systems and methods for managing the transmission of synchronous electronic messages |
Family Cites Families (51)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4775973A (en) * | 1986-10-22 | 1988-10-04 | Hewlett-Packard Company | Method and apparatus for a packet-switched network communications measurement matrix display |
WO1996035994A1 (en) | 1995-05-08 | 1996-11-14 | Compuserve Incorporated | Rules based electronic message management system |
US5623600A (en) | 1995-09-26 | 1997-04-22 | Trend Micro, Incorporated | Virus detection and removal apparatus for computer networks |
US5768505A (en) * | 1995-12-19 | 1998-06-16 | International Business Machines Corporation | Object oriented mail server framework mechanism |
US6101531A (en) * | 1995-12-19 | 2000-08-08 | Motorola, Inc. | System for communicating user-selected criteria filter prepared at wireless client to communication server for filtering data transferred from host to said wireless client |
EP0886826A1 (en) | 1996-01-26 | 1998-12-30 | Ex Machina, Inc. | System and method for transmission of data |
US6192407B1 (en) * | 1996-10-24 | 2001-02-20 | Tumbleweed Communications Corp. | Private, trackable URLs for directed document delivery |
CA2282502A1 (en) | 1997-02-25 | 1998-08-27 | Intervoice Limited Partnership | E-mail server for message filtering and routing |
US7127741B2 (en) * | 1998-11-03 | 2006-10-24 | Tumbleweed Communications Corp. | Method and system for e-mail message transmission |
JP3932319B2 (en) | 1997-07-24 | 2007-06-20 | タンブルウィード コミュニケーションズ コーポレイション | Email firewall using encryption / decryption with stored key |
US7162738B2 (en) * | 1998-11-03 | 2007-01-09 | Tumbleweed Communications Corp. | E-mail firewall with stored key encryption/decryption |
US7117358B2 (en) * | 1997-07-24 | 2006-10-03 | Tumbleweed Communications Corp. | Method and system for filtering communication |
WO1999006929A2 (en) | 1997-08-03 | 1999-02-11 | At & T Corp. | An extensible proxy framework for e-mail agents |
SG118132A1 (en) * | 1997-11-13 | 2006-01-27 | Hyperspace Communications Inc | File transfer system |
JP4216399B2 (en) * | 1998-04-01 | 2009-01-28 | 株式会社日立製作所 | Packet switch |
US8516055B2 (en) * | 1998-05-29 | 2013-08-20 | Research In Motion Limited | System and method for pushing information from a host system to a mobile data communication device in a wireless data network |
WO1999065256A2 (en) | 1998-06-10 | 1999-12-16 | Logica, Inc. | System and method for delivering e-mail notification to mobile phones |
JP2000010880A (en) * | 1998-06-22 | 2000-01-14 | Ricoh Co Ltd | Electronic mail transfer device |
US6161130A (en) | 1998-06-23 | 2000-12-12 | Microsoft Corporation | Technique which utilizes a probabilistic classifier to detect "junk" e-mail by automatically updating a training and re-training the classifier based on the updated training set |
US6289212B1 (en) * | 1998-09-16 | 2001-09-11 | Openwave Systems Inc. | Method and apparatus for providing electronic mail services during network unavailability |
JP2000148611A (en) * | 1998-11-06 | 2000-05-30 | Nippon Telegraph & Telephone East Corp | Intranet and data base server and method for transferring data |
JP2000163341A (en) * | 1998-11-30 | 2000-06-16 | Nec Corp | Mail server and method for automatically disposing of electronic spam mail |
KR100285122B1 (en) * | 1999-01-13 | 2001-03-15 | 이수복 | internet email add-on service system |
GB2347053A (en) | 1999-02-17 | 2000-08-23 | Argo Interactive Limited | Proxy server filters unwanted email |
US7249175B1 (en) * | 1999-11-23 | 2007-07-24 | Escom Corporation | Method and system for blocking e-mail having a nonexistent sender address |
JP4104799B2 (en) * | 1999-11-25 | 2008-06-18 | 株式会社山武 | Network system and communication method |
US20010032245A1 (en) | 1999-12-22 | 2001-10-18 | Nicolas Fodor | Industrial capacity clustered mail server system and method |
US6460050B1 (en) * | 1999-12-22 | 2002-10-01 | Mark Raymond Pace | Distributed content identification system |
US7324948B2 (en) * | 2000-01-14 | 2008-01-29 | Carl Teo Balbach | Context-specific contact information |
US7822977B2 (en) * | 2000-02-08 | 2010-10-26 | Katsikas Peter L | System for eliminating unauthorized electronic mail |
US6438215B1 (en) * | 2000-02-29 | 2002-08-20 | Ameritech Corporation | Method and system for filter based message processing in a unified messaging system |
US6986037B1 (en) * | 2000-04-07 | 2006-01-10 | Sendmail, Inc. | Electronic mail system with authentication/encryption methodology for allowing connections to/from a message transfer agent |
EP1281267A2 (en) * | 2000-05-03 | 2003-02-05 | Daniel Schoeffler | Method of enabling transmission and reception of communication when current destination for recipient is unknown to sender |
US6912564B1 (en) * | 2000-05-04 | 2005-06-28 | America Online, Inc. | System for instant messaging the sender and recipients of an e-mail message |
AU2001263503A1 (en) * | 2000-05-16 | 2001-11-26 | America Online, Inc. | E-mail sender identification |
US6829654B1 (en) * | 2000-06-23 | 2004-12-07 | Cloudshield Technologies, Inc. | Apparatus and method for virtual edge placement of web sites |
JP2002016633A (en) * | 2000-06-30 | 2002-01-18 | Ntt Communications Kk | Method and system for controlling communication state |
US6732185B1 (en) * | 2000-07-24 | 2004-05-04 | Vignette Corporation | Method and system for managing message pacing |
US7397575B2 (en) * | 2000-08-01 | 2008-07-08 | Canon Kabushiki Kaisha | Communication apparatus and method having electronic mail communication function, and program |
US7054906B2 (en) * | 2000-12-29 | 2006-05-30 | Levosky Michael P | System and method for controlling and organizing Email |
US7224491B2 (en) * | 2001-03-28 | 2007-05-29 | Minolta Co., Ltd. | Data communication apparatus, data communication system, data communication method, control program, and computer readable storage medium stored with control program |
GB2374689B (en) * | 2001-04-20 | 2005-11-23 | Eldama Systems Ip Ltd | Communications system |
US7065588B2 (en) * | 2001-08-10 | 2006-06-20 | Chaavi, Inc. | Method and system for data transformation in a heterogeneous computer system |
US7146402B2 (en) * | 2001-08-31 | 2006-12-05 | Sendmail, Inc. | E-mail system providing filtering methodology on a per-domain basis |
JP3717829B2 (en) * | 2001-10-05 | 2005-11-16 | 日本デジタル株式会社 | Junk mail repelling system |
US7283904B2 (en) * | 2001-10-17 | 2007-10-16 | Airbiquity, Inc. | Multi-sensor fusion |
US7039949B2 (en) * | 2001-12-10 | 2006-05-02 | Brian Ross Cartmell | Method and system for blocking unwanted communications |
US7054907B1 (en) * | 2001-12-26 | 2006-05-30 | Bellsouth Intellectual Property Corporation | Systems and methods for blocking delivery of an electronic communication |
US20030177259A1 (en) * | 2002-02-04 | 2003-09-18 | Wookey Michael J. | Remote services systems data delivery mechanism |
US7627631B2 (en) * | 2002-05-02 | 2009-12-01 | Bea Systems, Inc. | Systems and methods for collaborative business plug-ins |
US20070005970A1 (en) * | 2003-05-21 | 2007-01-04 | Trupp Steven E | E-mail authentication protocol or MAP |
-
2003
- 2003-02-19 JP JP2003570219A patent/JP4593926B2/en not_active Expired - Lifetime
- 2003-02-19 EP EP09156770.1A patent/EP2068516B1/en not_active Expired - Lifetime
- 2003-02-19 CA CA2476349A patent/CA2476349C/en not_active Expired - Lifetime
- 2003-02-19 AU AU2003215276A patent/AU2003215276B2/en not_active Expired
- 2003-02-19 US US10/370,118 patent/US6941348B2/en not_active Expired - Lifetime
- 2003-02-19 KR KR1020047012925A patent/KR100871581B1/en active IP Right Grant
- 2003-02-19 AT AT03711094T patent/ATE427608T1/en not_active IP Right Cessation
- 2003-02-19 WO PCT/US2003/004757 patent/WO2003071390A2/en active Application Filing
- 2003-02-19 CN CNB038087421A patent/CN1332333C/en not_active Expired - Lifetime
- 2003-02-19 DE DE60326938T patent/DE60326938D1/en not_active Expired - Lifetime
- 2003-02-19 EP EP03711094A patent/EP1476819B1/en not_active Expired - Lifetime
-
2005
- 2005-04-26 US US10/908,060 patent/US8769020B2/en active Active
- 2005-04-26 US US10/908,061 patent/US20050182960A1/en not_active Abandoned
-
2006
- 2006-05-03 US US11/416,733 patent/US20060206938A1/en not_active Abandoned
-
2007
- 2007-03-01 US US11/712,675 patent/US8725889B2/en active Active
Patent Citations (72)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4837798A (en) * | 1986-06-02 | 1989-06-06 | American Telephone And Telegraph Company | Communication system having unified messaging |
US5627764A (en) * | 1991-10-04 | 1997-05-06 | Banyan Systems, Inc. | Automatic electronic messaging system with feedback and work flow administration |
US6069196A (en) * | 1992-05-11 | 2000-05-30 | Fuji Photo Film Co., Ltd. | Molded articles for photographic photo-sensitive materials |
US5634005A (en) * | 1992-11-09 | 1997-05-27 | Kabushiki Kaisha Toshiba | System for automatically sending mail message by storing rule according to the language specification of the message including processing condition and processing content |
US6411684B1 (en) * | 1994-09-16 | 2002-06-25 | Avaya Technology Corp. | Network-based multimedia communications and directory system and method of operation |
US5742668A (en) * | 1994-09-19 | 1998-04-21 | Bell Communications Research, Inc. | Electronic massaging network |
US5619648A (en) * | 1994-11-30 | 1997-04-08 | Lucent Technologies Inc. | Message filtering techniques |
US5937162A (en) * | 1995-04-06 | 1999-08-10 | Exactis.Com, Inc. | Method and apparatus for high volume e-mail delivery |
US5889943A (en) * | 1995-09-26 | 1999-03-30 | Trend Micro Incorporated | Apparatus and method for electronic mail virus detection and elimination |
US5771355A (en) * | 1995-12-21 | 1998-06-23 | Intel Corporation | Transmitting electronic mail by either reference or value at file-replication points to minimize costs |
US6075863A (en) * | 1996-02-28 | 2000-06-13 | Encanto Networks | Intelligent communication device |
US5937161A (en) * | 1996-04-12 | 1999-08-10 | Usa.Net, Inc. | Electronic message forwarding system |
US6453327B1 (en) * | 1996-06-10 | 2002-09-17 | Sun Microsystems, Inc. | Method and apparatus for identifying and discarding junk electronic mail |
US6014429A (en) * | 1996-08-12 | 2000-01-11 | Lucent Technologies, Inc. | Two-way wireless messaging system with transaction server |
US5832208A (en) * | 1996-09-05 | 1998-11-03 | Cheyenne Software International Sales Corp. | Anti-virus agent for use with databases and mail servers |
US5905777A (en) * | 1996-09-27 | 1999-05-18 | At&T Corp. | E-mail paging system |
US6092194A (en) * | 1996-11-08 | 2000-07-18 | Finjan Software, Ltd. | System and method for protecting a computer and a network from hostile downloadables |
US5796948A (en) * | 1996-11-12 | 1998-08-18 | Cohen; Elliot D. | Offensive message interceptor for computers |
US6146026A (en) * | 1996-12-27 | 2000-11-14 | Canon Kabushiki Kaisha | System and apparatus for selectively publishing electronic-mail |
US5987611A (en) * | 1996-12-31 | 1999-11-16 | Zone Labs, Inc. | System and methodology for managing internet access on a per application basis for client computers connected to the internet |
US5844969A (en) * | 1997-01-23 | 1998-12-01 | At&T Corp. | Communication system, method and device for remotely re-transmitting received electronic mail directed to a destination terminal to a new destination terminal |
US6147987A (en) * | 1997-04-08 | 2000-11-14 | 3Com Corporation | Supporting load sharing across multiple network access servers |
US6178331B1 (en) * | 1997-06-17 | 2001-01-23 | Bulletin.Net, Inc. | System and process for allowing wireless messaging |
US6061718A (en) * | 1997-07-23 | 2000-05-09 | Ericsson Inc. | Electronic mail delivery system in wired or wireless communications system |
US6073165A (en) * | 1997-07-29 | 2000-06-06 | Jfax Communications, Inc. | Filtering computer network messages directed to a user's e-mail box based on user defined filters, and forwarding a filtered message to the user's receiver |
US6249805B1 (en) * | 1997-08-12 | 2001-06-19 | Micron Electronics, Inc. | Method and system for filtering unauthorized electronic mail messages |
US6334140B1 (en) * | 1997-09-25 | 2001-12-25 | Nec Corporation | Electronic mail server in which electronic mail is processed |
US6615258B1 (en) * | 1997-09-26 | 2003-09-02 | Worldcom, Inc. | Integrated customer interface for web based data management |
US6138146A (en) * | 1997-09-29 | 2000-10-24 | Ericsson Inc. | Electronic mail forwarding system and method |
US6023723A (en) * | 1997-12-22 | 2000-02-08 | Accepted Marketing, Inc. | Method and system for filtering unwanted junk e-mail utilizing a plurality of filtering mechanisms |
US6052709A (en) * | 1997-12-23 | 2000-04-18 | Bright Light Technologies, Inc. | Apparatus and method for controlling delivery of unsolicited electronic mail |
US5999932A (en) * | 1998-01-13 | 1999-12-07 | Bright Light Technologies, Inc. | System and method for filtering unsolicited electronic mail messages using data matching and heuristic processing |
US5968117A (en) * | 1998-01-20 | 1999-10-19 | Aurora Communications Exchange Ltd. | Device and system to facilitate accessing electronic mail from remote user-interface devices |
US6263202B1 (en) * | 1998-01-28 | 2001-07-17 | Uniden Corporation | Communication system and wireless communication terminal device used therein |
US6301245B1 (en) * | 1998-06-09 | 2001-10-09 | Unisys Corporation | Universal Messaging system providing integrated voice, data and fax messaging services to PC/web-based clients, including a large object server for efficiently distributing voice/fax messages to web-based clients |
US6404762B1 (en) * | 1998-06-09 | 2002-06-11 | Unisys Corporation | Universal messaging system providing integrated voice, data and fax messaging services to pc/web-based clients, including a session manager for maintaining a session between a messaging platform and the web-based clients |
US6112227A (en) * | 1998-08-06 | 2000-08-29 | Heiner; Jeffrey Nelson | Filter-in method for reducing junk e-mail |
US6487586B2 (en) * | 1998-09-23 | 2002-11-26 | John W. L. Ogilvie | Self-removing email verified or designated as such by a message distributor for the convenience of a recipient |
US6317751B1 (en) * | 1998-09-28 | 2001-11-13 | Merrill Lynch & Co., Inc. | Compliance archival data process and system |
US6249807B1 (en) * | 1998-11-17 | 2001-06-19 | Kana Communications, Inc. | Method and apparatus for performing enterprise email management |
US20030167311A1 (en) * | 1998-12-09 | 2003-09-04 | Kirsch Steven T. | Method and system for selectively blocking delivery of electronic mail |
US6389276B1 (en) * | 1998-12-23 | 2002-05-14 | Bell Atlantic Mobile | Systems and methods for providing voice mail notification from a separate voice mail system to mobile telephone |
US6118856A (en) * | 1998-12-28 | 2000-09-12 | Nortel Networks Corporation | Method and apparatus for automatically forwarding an email message or portion thereof to a remote device |
US6654787B1 (en) * | 1998-12-31 | 2003-11-25 | Brightmail, Incorporated | Method and apparatus for filtering e-mail |
US6442589B1 (en) * | 1999-01-14 | 2002-08-27 | Fujitsu Limited | Method and system for sorting and forwarding electronic messages and other data |
US6574658B1 (en) * | 1999-01-29 | 2003-06-03 | Lucent Technologies Inc. | System and method for secure classification of electronic mail |
US6335966B1 (en) * | 1999-03-29 | 2002-01-01 | Matsushita Graphic Communication Systems, Inc. | Image communication apparatus server apparatus and capability exchanging method |
US6434601B1 (en) * | 1999-03-31 | 2002-08-13 | Micron Technology, Inc. | Pre test electronic mail process |
US20030135567A1 (en) * | 1999-06-23 | 2003-07-17 | Mail Registry, Inc. | Systems and methods for automatically forwarding electronic mail when the recipient is otherwise unknown |
US6868498B1 (en) * | 1999-09-01 | 2005-03-15 | Peter L. Katsikas | System for eliminating unauthorized electronic mail |
US6711618B1 (en) * | 1999-09-03 | 2004-03-23 | Cisco Technology, Inc. | Apparatus and method for providing server state and attribute management for voice enabled web applications |
US6513045B1 (en) * | 1999-11-17 | 2003-01-28 | International Business Machines Corporation | Method and an apparatus for providing cross product automated user assistance in the planning, configuration, and management of information systems |
US6321267B1 (en) * | 1999-11-23 | 2001-11-20 | Escom Corporation | Method and apparatus for filtering junk email |
US6691156B1 (en) * | 2000-03-10 | 2004-02-10 | International Business Machines Corporation | Method for restricting delivery of unsolicited E-mail |
US6779021B1 (en) * | 2000-07-28 | 2004-08-17 | International Business Machines Corporation | Method and system for predicting and managing undesirable electronic mail |
US20020042815A1 (en) * | 2000-09-22 | 2002-04-11 | Arthur Salzfass | Automated system and method for routing undeliverable e-mail messages and otherwise managing e-mail |
US20060178136A1 (en) * | 2000-09-29 | 2006-08-10 | Postini, Inc. | E-mail policy compliance techniques |
US20060155808A1 (en) * | 2000-09-29 | 2006-07-13 | Postini, Inc. | E-mail filtering services using Internet protocol routing information |
US6650890B1 (en) * | 2000-09-29 | 2003-11-18 | Postini, Inc. | Value-added electronic messaging services and transparent implementation thereof using intermediate server |
US20020065891A1 (en) * | 2000-11-30 | 2002-05-30 | Malik Dale W. | Method and apparatus for automatically checking e-mail addresses in outgoing e-mail communications |
US7092992B1 (en) * | 2001-02-01 | 2006-08-15 | Mailshell.Com, Inc. | Web page filtering including substitution of user-entered email address |
US20020116463A1 (en) * | 2001-02-20 | 2002-08-22 | Hart Matthew Thomas | Unwanted e-mail filtering |
US20020120705A1 (en) * | 2001-02-26 | 2002-08-29 | Schiavone Vincent J. | System and method for controlling distribution of network communications |
US20020147780A1 (en) * | 2001-04-09 | 2002-10-10 | Liu James Y. | Method and system for scanning electronic mail to detect and eliminate computer viruses using a group of email-scanning servers and a recipient's email gateway |
US20020178381A1 (en) * | 2001-05-22 | 2002-11-28 | Trend Micro Incorporated | System and method for identifying undesirable content in responses sent in reply to a user request for content |
US6957259B1 (en) * | 2001-06-25 | 2005-10-18 | Bellsouth Intellectual Property Corporation | System and method for regulating emails by maintaining, updating and comparing the profile information for the email source to the target email statistics |
US20030088627A1 (en) * | 2001-07-26 | 2003-05-08 | Rothwell Anton C. | Intelligent SPAM detection system using an updateable neural analysis engine |
US20030023692A1 (en) * | 2001-07-27 | 2003-01-30 | Fujitsu Limited | Electronic message delivery system, electronic message delivery managment server, and recording medium in which electronic message delivery management program is recorded |
US20050182960A1 (en) * | 2002-02-19 | 2005-08-18 | Postini, Inc. | Systems and methods for managing the transmission of electronic messages via throttling and delaying delivery |
US20070156830A1 (en) * | 2002-02-19 | 2007-07-05 | Postini Corporation | E-mail management services |
US20060265459A1 (en) * | 2003-02-19 | 2006-11-23 | Postini, Inc. | Systems and methods for managing the transmission of synchronous electronic messages |
US20060010242A1 (en) * | 2004-05-24 | 2006-01-12 | Whitney David C | Decoupling determination of SPAM confidence level from message rule actions |
Cited By (10)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20070156830A1 (en) * | 2002-02-19 | 2007-07-05 | Postini Corporation | E-mail management services |
US8725889B2 (en) | 2002-02-19 | 2014-05-13 | Google Inc. | E-mail management services |
US20060047758A1 (en) * | 2004-08-26 | 2006-03-02 | Vivek Sharma | Extending and optimizing electronic messaging rules |
US7757288B1 (en) * | 2005-05-23 | 2010-07-13 | Symantec Corporation | Malicious e-mail attack inversion filter |
US20080034049A1 (en) * | 2006-08-05 | 2008-02-07 | Terry Lee Stokes | System and Method for the Capture and Archival of Electronic Communications |
US20110055264A1 (en) * | 2009-08-28 | 2011-03-03 | Microsoft Corporation | Data mining organization communications |
US20110055196A1 (en) * | 2009-08-28 | 2011-03-03 | Microsoft Corporation | Data mining electronic communications |
US9529864B2 (en) * | 2009-08-28 | 2016-12-27 | Microsoft Technology Licensing, Llc | Data mining electronic communications |
US8744979B2 (en) | 2010-12-06 | 2014-06-03 | Microsoft Corporation | Electronic communications triage using recipient's historical behavioral and feedback |
US20150381533A1 (en) * | 2014-06-29 | 2015-12-31 | Avaya Inc. | System and Method for Email Management Through Detection and Analysis of Dynamically Variable Behavior and Activity Patterns |
Also Published As
Publication number | Publication date |
---|---|
WO2003071390A3 (en) | 2004-06-17 |
CA2476349C (en) | 2010-09-28 |
EP1476819A4 (en) | 2005-11-02 |
WO2003071390A2 (en) | 2003-08-28 |
US20030158905A1 (en) | 2003-08-21 |
KR100871581B1 (en) | 2008-12-02 |
US8725889B2 (en) | 2014-05-13 |
US8769020B2 (en) | 2014-07-01 |
DE60326938D1 (en) | 2009-05-14 |
ATE427608T1 (en) | 2009-04-15 |
EP1476819A2 (en) | 2004-11-17 |
KR20040103943A (en) | 2004-12-09 |
WO2003071390B1 (en) | 2004-07-29 |
US20050182959A1 (en) | 2005-08-18 |
JP2005518173A (en) | 2005-06-16 |
CN1647061A (en) | 2005-07-27 |
CA2476349A1 (en) | 2003-08-28 |
CN1332333C (en) | 2007-08-15 |
AU2003215276B2 (en) | 2007-09-06 |
EP1476819B1 (en) | 2009-04-01 |
US20070156830A1 (en) | 2007-07-05 |
EP2068516B1 (en) | 2018-09-05 |
AU2003215276A1 (en) | 2003-09-09 |
US20050182960A1 (en) | 2005-08-18 |
EP2068516A1 (en) | 2009-06-10 |
US6941348B2 (en) | 2005-09-06 |
JP4593926B2 (en) | 2010-12-08 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US8725889B2 (en) | E-mail management services | |
US8583787B2 (en) | Zero-minute virus and spam detection | |
US7873695B2 (en) | Managing connections and messages at a server by associating different actions for both different senders and different recipients | |
JP2005518173A5 (en) | ||
US7849142B2 (en) | Managing connections, messages, and directory harvest attacks at a server | |
US20060265459A1 (en) | Systems and methods for managing the transmission of synchronous electronic messages | |
US7249175B1 (en) | Method and system for blocking e-mail having a nonexistent sender address | |
US7870200B2 (en) | Monitoring the flow of messages received at a server | |
US20050015626A1 (en) | System and method for identifying and filtering junk e-mail messages or spam based on URL content | |
US20060036690A1 (en) | Network protection system | |
US20060168017A1 (en) | Dynamic spam trap accounts | |
AU782333B2 (en) | Electronic message filter having a whitelist database and a quarantining mechanism | |
US20070244974A1 (en) | Bounce Management in a Trusted Communication Network | |
US20090307320A1 (en) | Electronic mail processing unit including silverlist filtering | |
WO2005112596A2 (en) | Method and system for providing a disposable email address | |
JP2009515426A (en) | High reliability communication network | |
US7958187B2 (en) | Systems and methods for managing directory harvest attacks via electronic messages |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: POSTINI CORPORATION, CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:PETRY, SCOTT MICHAEL;AKAMINE, SHINYA;LUND, PETER KEVIN;AND OTHERS;REEL/FRAME:022620/0226Effective date: 20030218Owner name: POSTINI, INC., CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:POSTINI CORPORATION;REEL/FRAME:022620/0282Effective date: 20081006Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:POSTINI, INC.;REEL/FRAME:022620/0513Effective date: 20090325Owner name: GOOGLE INC.,CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:POSTINI, INC.;REEL/FRAME:022620/0513Effective date: 20090325 |
|
STCB | Information on status: application discontinuation |
Free format text: ABANDONED -- FAILURE TO RESPOND TO AN OFFICE ACTION |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044142/0357Effective date: 20170929 |
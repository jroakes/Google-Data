US6308179B1 - User level controlled mechanism inter-positioned in a read/write path of a property-based document management system - Google Patents
User level controlled mechanism inter-positioned in a read/write path of a property-based document management system Download PDFInfo
- Publication number
- US6308179B1 US6308179B1 US09/143,551 US14355198A US6308179B1 US 6308179 B1 US6308179 B1 US 6308179B1 US 14355198 A US14355198 A US 14355198A US 6308179 B1 US6308179 B1 US 6308179B1
- Authority
- US
- United States
- Prior art keywords
- document
- properties
- documents
- property
- content
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Lifetime
Links
- 230000007246 mechanism Effects 0.000 title claims abstract description 37
- 238000000034 method Methods 0.000 claims description 60
- 238000007726 management method Methods 0.000 claims description 55
- 230000003068 static effect Effects 0.000 claims description 26
- 230000006399 behavior Effects 0.000 claims description 23
- 230000000694 effects Effects 0.000 claims description 14
- 230000008859 change Effects 0.000 claims description 11
- 230000007717 exclusion Effects 0.000 claims description 9
- 230000009471 action Effects 0.000 claims description 8
- 230000002085 persistent effect Effects 0.000 claims description 3
- 238000013500 data storage Methods 0.000 claims 1
- 230000001052 transient effect Effects 0.000 claims 1
- 238000000926 separation method Methods 0.000 abstract description 7
- 230000003993 interaction Effects 0.000 description 25
- 230000008901 benefit Effects 0.000 description 9
- 238000004891 communication Methods 0.000 description 9
- 238000010200 validation analysis Methods 0.000 description 8
- 239000008186 active pharmaceutical agent Substances 0.000 description 7
- 230000008520 organization Effects 0.000 description 7
- 238000013459 approach Methods 0.000 description 6
- 230000002452 interceptive effect Effects 0.000 description 6
- 238000013461 design Methods 0.000 description 5
- 230000006870 function Effects 0.000 description 4
- 230000010354 integration Effects 0.000 description 4
- 230000004048 modification Effects 0.000 description 4
- 238000012986 modification Methods 0.000 description 4
- 230000010076 replication Effects 0.000 description 4
- 238000012360 testing method Methods 0.000 description 4
- 239000012530 fluid Substances 0.000 description 3
- 238000012545 processing Methods 0.000 description 3
- 235000006719 Cassia obtusifolia Nutrition 0.000 description 2
- 235000014552 Cassia tora Nutrition 0.000 description 2
- 244000201986 Cassia tora Species 0.000 description 2
- 241000218218 Ficus <angiosperm> Species 0.000 description 2
- 230000004075 alteration Effects 0.000 description 2
- 230000005540 biological transmission Effects 0.000 description 2
- 238000010586 diagram Methods 0.000 description 2
- 230000008450 motivation Effects 0.000 description 2
- 230000008569 process Effects 0.000 description 2
- 230000004044 response Effects 0.000 description 2
- 238000012552 review Methods 0.000 description 2
- 238000012800 visualization Methods 0.000 description 2
- 240000002853 Nelumbo nucifera Species 0.000 description 1
- 235000006508 Nelumbo nucifera Nutrition 0.000 description 1
- 235000006510 Nelumbo pentapetala Nutrition 0.000 description 1
- 230000002730 additional effect Effects 0.000 description 1
- 230000003190 augmentative effect Effects 0.000 description 1
- 230000009286 beneficial effect Effects 0.000 description 1
- 230000001149 cognitive effect Effects 0.000 description 1
- 150000001875 compounds Chemical class 0.000 description 1
- 230000006835 compression Effects 0.000 description 1
- 238000007906 compression Methods 0.000 description 1
- 235000014510 cooky Nutrition 0.000 description 1
- 238000011161 development Methods 0.000 description 1
- 230000004069 differentiation Effects 0.000 description 1
- 230000008030 elimination Effects 0.000 description 1
- 238000003379 elimination reaction Methods 0.000 description 1
- 230000003203 everyday effect Effects 0.000 description 1
- 238000002474 experimental method Methods 0.000 description 1
- 230000008676 import Effects 0.000 description 1
- 230000000977 initiatory effect Effects 0.000 description 1
- 230000001343 mnemonic effect Effects 0.000 description 1
- 238000011160 research Methods 0.000 description 1
- 238000012795 verification Methods 0.000 description 1
- 239000011800 void material Substances 0.000 description 1
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/93—Document management systems
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/10—Text processing
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q99/00—Subject matter not provided for in other groups of this subclass
-
- Y—GENERAL TAGGING OF NEW TECHNOLOGICAL DEVELOPMENTS; GENERAL TAGGING OF CROSS-SECTIONAL TECHNOLOGIES SPANNING OVER SEVERAL SECTIONS OF THE IPC; TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10—TECHNICAL SUBJECTS COVERED BY FORMER USPC
- Y10S—TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10S707/00—Data processing: database and file management or data structures
- Y10S707/99931—Database or file accessing
- Y10S707/99932—Access augmentation or optimizing
-
- Y—GENERAL TAGGING OF NEW TECHNOLOGICAL DEVELOPMENTS; GENERAL TAGGING OF CROSS-SECTIONAL TECHNOLOGIES SPANNING OVER SEVERAL SECTIONS OF THE IPC; TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10—TECHNICAL SUBJECTS COVERED BY FORMER USPC
- Y10S—TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10S707/00—Data processing: database and file management or data structures
- Y10S707/99931—Database or file accessing
- Y10S707/99933—Query processing, i.e. searching
- Y10S707/99934—Query formulation, input preparation, or translation
-
- Y—GENERAL TAGGING OF NEW TECHNOLOGICAL DEVELOPMENTS; GENERAL TAGGING OF CROSS-SECTIONAL TECHNOLOGIES SPANNING OVER SEVERAL SECTIONS OF THE IPC; TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10—TECHNICAL SUBJECTS COVERED BY FORMER USPC
- Y10S—TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10S707/00—Data processing: database and file management or data structures
- Y10S707/99931—Database or file accessing
- Y10S707/99933—Query processing, i.e. searching
- Y10S707/99936—Pattern matching access
-
- Y—GENERAL TAGGING OF NEW TECHNOLOGICAL DEVELOPMENTS; GENERAL TAGGING OF CROSS-SECTIONAL TECHNOLOGIES SPANNING OVER SEVERAL SECTIONS OF THE IPC; TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10—TECHNICAL SUBJECTS COVERED BY FORMER USPC
- Y10S—TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10S707/00—Data processing: database and file management or data structures
- Y10S707/99931—Database or file accessing
- Y10S707/99938—Concurrency, e.g. lock management in shared database
-
- Y—GENERAL TAGGING OF NEW TECHNOLOGICAL DEVELOPMENTS; GENERAL TAGGING OF CROSS-SECTIONAL TECHNOLOGIES SPANNING OVER SEVERAL SECTIONS OF THE IPC; TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10—TECHNICAL SUBJECTS COVERED BY FORMER USPC
- Y10S—TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10S707/00—Data processing: database and file management or data structures
- Y10S707/99941—Database schema or data structure
- Y10S707/99943—Generating database or data structure, e.g. via user interface
-
- Y—GENERAL TAGGING OF NEW TECHNOLOGICAL DEVELOPMENTS; GENERAL TAGGING OF CROSS-SECTIONAL TECHNOLOGIES SPANNING OVER SEVERAL SECTIONS OF THE IPC; TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10—TECHNICAL SUBJECTS COVERED BY FORMER USPC
- Y10S—TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10S707/00—Data processing: database and file management or data structures
- Y10S707/99941—Database schema or data structure
- Y10S707/99944—Object-oriented database structure
- Y10S707/99945—Object-oriented database structure processing
Definitions
- the present invention pertains to the art of document management systems and more particularly to a distributed document infrastructure where documents are organized and managed in terms of a user level controlled mechanism inter-positioned in a read/write path of the system.
- This mechanism can be implemented as properties attached to documents. These properties are user and document specific in the sense that they are associated with the user which attached the properties and are directed to control of specific documents.
- This structure allows for the separation of the location of the document content from the document's management, which is described by its properties. Implementation of the properties eliminates the need to adhere to traditional file system and folder hierarchies, where the storage and retrieval of documents are based on a storage location.
- the present invention simplifies the manner in which people access, share, and manage document collections of documents by raising the level of abstraction away from low-level concepts such as disc drives, file servers, and directory names towards higher level and more human oriented concepts.
- a user associates high-level properties with documents while leaving the specific decisions of how best to provide these properties to the document management system of the present invention.
- the inventors have recognized that a large amount of a user's interaction with a computer has to do with document management, such as storing, filing, organizing and retrieving information from a variety of electronic documents. These documents may be found on a local disc, on a network system file server, an e-mail file server, the world wide web, or a variety of other locations. Modern communication delivery systems have had the effect of greatly increasing the flow of documents which may be incorporated within a user's document space, thereby increasing the need for better tools to visualize and interact with the accumulated documents.
- Hierarchical storage systems wherein documents are treated as files that exist in directories or folders, which are themselves contained in other directories, thereby creating a hierarchy that provides the structure for document space interactions.
- Each directory in a hierarchy of directories will commonly contain a number of individual files.
- files and directories are given alpha-numeric, mnemonic names in large storage volumes shared via a network. In such a network, individual users may be assigned specific directories.
- a file located in a sub-directory is located by its compound path name.
- character string D: ⁇ TREE ⁇ LIMB ⁇ BRANCH ⁇ TWIG ⁇ LEAF.FIL could describe the location of a file LEAF.FIL whose immediate directory is TWIG and which is located deep in a hierarchy of files on the drive identified by the letter D.
- Each directory is itself a file containing file name, size, location data, and date and time of file creation or changes.
- Navigation through a file system can be considered as navigation through semantic structures that have been mapped onto the file hierarchy. Such navigation is normally accomplished by the use of browsers and dialog boxes.
- This movement can be seen not only as a movement from one file or folder to another, but also as a search procedure that exploits features of the documents to progressively focus on a smaller and smaller set of potential documents.
- the structure of the search is mapped onto the hierarchy provided by the file system, since the hierarchy is essentially the only existing mechanism available to organize files.
- documents and files are not the same thing.
- the inventors are aware that others have studied the area of document management/storage systems.
- DMA is a proposed standard from AIIM designed to allow document management systems from different vendors to interoperate.
- the DMA standard covers both client and server interfaces and supports useful functionality including collections, versioning, renditions, and multiple-repository search.
- a look at the APIs show that DMA objects (documents) can have properties attached to them.
- the properties are strongly typed in DMA and must be chosen from a limited set (string, int, date . . . )
- one of the allowable property types is another DMA object.
- a list type is allowed to build up big properties. Properties have a unique IDs in DMA.
- the properties are attached to documents without differentiation about which user would like to see them; properties are stored in the document repository that provides the DMA interface, not independently from it. Similarly, DMA does not provide support for active properties.
- WebDAV is another interface designed to allow an extended uniform set of functionality to be attached with documents available through a web server.
- WebDAV is a set of extensions to the HTTP 1.1 protocol that allow Web clients to create and edit documents over the Web. It also defines collections and a mechanism for associating arbitrary properties with resources.
- WebDav also provides a means for creating typed links between any two documents, regardless of media type where previously, only HTML documents could contain links.
- WebDAV provides support for collections, these are defined by extension (that is all components have to be explicitly defined); and although it provides arbitrary document properties, these live with the document itself and cannot be independently defined for different users, furthermore there is no support for active properties and are mostly geared toward having ASCII (or XML) values.
- DocuShare is a simple document management system built as a web-server by Xerox Corporation. It supports simple collections of documents, limited sets of properties on documents and support for a few non-traditional document types like calendars and bulletin boards. It is primarily geared toward sharing of documents of small, self-defined groups (for the latter, it has support to dynamically create users and their permissions.) DocuShare has notions of content providers, but these are not exchangeable for a document. Content providers are associated with the type of the document being accessed. In DocuShare properties are static, and the list of properties that can be associated with a document depends on the document type. Users cannot easily extend this list. System administrators must configure the site to extend the list of default properties associated with document types, which is another contrast to the present invention.
- DocuShare properties can be visible to anyone who has read access for the collection in which the document is in. Properties are tightly bound to documents and it is generally difficult to maintain a personalized set of properties for a document, again a different approach than the one described in the present invention.
- a system discussed in “Lifestreams: Organizing your Electronic Life”, AAAI Fall Symposium: AI Applications in Knowledge Navigation on Retrieval (Cambridge, Mass.), E. Freeman and S. Fertig, November, 1995, uses a timeline as the major organizational resource for managing document spaces. Lifestreams is inspired by the problems of a standard single-inheritance file hierarchy, and seeks to use contextual information to guide document retrieval. However, Lifestreams replaces one superordinate aspect of the document (its location in the hierarchy) with another (its location in the timeline).
- the present invention is concerned with a more general paradigm based on a distributed, multi-principal property-based system and with how interfaces can be revised and augmented to deal with it; the fact that the present invention can act as a file system is simply in order to support existing file system-based applications, rather than as an end in itself
- DLITE is the Stanford Digital Libraries Integrated Task Environment, which is a user interface for accessing digital library resources as described in “The Digital Library Integrated Task Environment” Technical Report SIDL-WP-1996-0049, Stanford Digital Libraries Project (Palo Alto, Calif.) 1996, by S. Cousins et al. DLITE explicitly reifies queries and search engines in order to provide users with direct access to dynamic collections.
- the goal of DLITE is to provide a unified interface to a variety of search engines, rather than to create new models of searching and retrieval. So although queries in DLITE are independent of particular search engines, they are not integrated with collections as a uniform organizational mechanism.
- Multivalent documents define documents as comprising multiple “layers” of distinct but intimately-related content.
- Small dynamically-loaded program objects, or “behaviors” activate the content and work in concert with each other and layers of content to support arbitrarily specialized document types.
- a document management infrastructure built around a multivalent perspective can provide an extensible, networked system that supports incremental addition of content, incremental addition of interaction with the user and with other components, reuse of content across behaviors, reuse of behaviors across types of documents, and efficient use of network bandwidth.”
- Multivalent document behaviors extend and parse the content layers, each of which is expressed in some format. Behaviors are tasked with understanding the formats and adding functionality to the document based on this understanding.
- the Multivalent document system is an attempt at creating an infrastructure that can deal with the document format problem by incrementally adding layers of “understanding” of various formats.
- the present invention has an explicit goal of exploring and developing a set of properties that are independent of document format. While properties could be developed that could parse and understand content, it is expected that most will be concerned with underlying storage, replication, security, and ownership attributes of the documents.
- the Multivalent document system focuses on extensibility as a tool for content presentation and new content-based behaviors; the present invention focuses on extensible and incrementally-added properties as a user-visible notion to control document storage and management.
- File systems known as the Andrew File System (AFS), Coda, and Ficus provide a uniform name space for accessing files that may be distributed and replicated across a number of servers. Some distributed file systems support clients that run on a variety of platforms. Some support disconnected file access through caching or replication. For example, Coda provides disconnected access through caching, while Ficus uses replication.
- the immediately described distributed file systems support document (or file) sharing, they have a problem in that a file's hierarchical pathname and its storage location and system behavior are deeply related. The place in the directory hierarchy where a document gets stored generally determines on which servers that file resides.
- Distributed databases such as Oracle, SQL Server, Bayou, and Lotus Notes also support shared, uniform access to data and often provide replication. Like some distributed file systems, many of today's commercial databases provide support for disconnected operation and automatic conflict resolution. They also provide much better query facilities than file systems. However, distributed databases suffer the same problems as file systems in that the properties of the data, such as where it is replicated and how it is indexed and so on, are generally associated with the tables in which that data resides. Thus, these properties cannot be flexibly managed and updated. Also, the set of possible properties is not extensible.
- a digital library system known as the Documentum DocPage repository, creates a document space called a “DocBase.”
- This repository stores a document as an object that encapsulates the document's content along with its attributes, including relationships, associated versions, renditions, formats, workflow characteristics, and security.
- DocPage supports organization of documents via folder and cabinet metaphors, and allows searching over both document content and attributes.
- the system also provides checkin/checkout-style version control, full version histories of documents, and annotations (each with its own attributes and security rules).
- the system also supports workflow-style features including notification of updates.
- DocBase uses a replicated infrastructure for document storage (see: http://www.documentum.com)
- Documentum DocPage Among the key differences between Documentum DocPage and the present invention are: First, in the present system properties are exposed as a fundamental concept in the infrastructure. Further, the present system provides for a radically extensible document property infrastructure capable of supporting an aftermarket in document attributes. Documentum seems to be rather closed in comparison; the possible attributes a document can acquire are defined a priori by the system for a particular application environment and cannot be easily extended. Second, Documentum does not have the vision of universal access to the degree of the present invention which supports near-universal access to document meta-data, if not document content. In comparison, the scope of Documentum narrows to document access within a closed setting (a corporate intranet).
- the present invention contemplates a new and improved manner of accessing documents by a user of a computer system.
- the user is provided access to properties by use of a document management system of the computer system.
- the user attaches selected properties to a document.
- the document with the attached properties is then stored at a location separate from the content of the document.
- the content of the document is stored at a location outside of the document management system.
- a user may retrieve the document using at least one of the attached properties, such retrieving including obtaining the content of the document from outside of the document management system.
- the storage of the content separate from the properties is part of the separate management of the properties and content.
- a second user is provided with access to properties.
- the second user may attach selected ones of such properties to a second document. These properties do not need to be the same as those selected by the first user.
- the second document is considered a reference document of the first document, which is considered a base document.
- the content of the second document is the content of the first document.
- the properties attached to the documents may be one of static properties or active properties.
- Static properties being one of tags and name-value pairs associated with the document, and active properties including code which allows the use of computational power to either alter the document to which it is attached or effect another change within the document management system.
- a user of the document management system may attach properties to a plurality of documents.
- the user forms collections of documents in accordance with properties attached to the documents, wherein documents having the same property are included in the same collection.
- a single document may appear in multiple collections.
- a query can be instituted across the properties of the document management system, wherein documents having a property attached corresponding to the query are returned and form a document collection.
- an inclusion list is provided to override the results of the query by allowing addition of a document to a collection which was not returned by the query.
- An exclusion list is provided to override the results of the query by deleting a document in the collection which was returned by the query.
- a principle advantage of the present invention is that it provides for a distributed document infrastructure where documents are organized and managed in terms of a user-level controlled mechanism interposed in a content and property read/write path of the computer system.
- the mechanism provided can be implemented as properties which are attached to the document. Use of the mechanism allows for a separation of the location of the document content from the document's management, which is described by its properties. Use of such a user-level control mechanism moves control of access to documents to a user level rather than to a level lower within the computer system which is only accessible by a programmer or developer.
- Yet another advantage of the present invention is the elimination of the need to adhere to traditional file system and folder hierarchies where the storage and retrieval of documents are based on a storage location and the inherent identity of the document.
- FIG. 1 shows a hierarchical storage mechanism compared to the concept of properties of the present invention
- FIG. 2 is a block diagram of a document management system according to the present invention, interposed within a communication channel between a user and an operating system;
- FIG. 3 is a representation of a document management system of the present invention implemented in a computer system which is DMS-aware;
- FIG. 4 a illustrates the concepts of an existing storage system
- FIG. 4 b is a block diagram showing a concept of the present invention wherein content of a document is separated from its properties;
- FIG. 4 c further illustrates the concepts of and expands upon those shown in FIG. 4 b;
- FIG. 4 d depicts the notification aspect of properties in the present invention
- FIG. 4 e illustrates the relationship between operations within a computer system and the properties of the present invention
- FIG. 5 sets forth a document management system of the present invention where there are applications and storage repositories which are non-DMS-aware;
- FIG. 6 a shows a variety of different types of property generators of the present invention
- FIG. 6 b illustrates one embodiment of code for creating a property and its attachment to a document
- FIG. 7 illustrates the concepts of the present invention implemented by a browser as shown on a computer screen
- FIG. 8 is a close-up view of FIG. 7.
- FIG. 9 shows a listing of a collection of documents and a listing of properties attached to one of those documents.
- Action The behavior part of a property.
- Active Property A property in which code allows the use of computational power to either alter the document or effect another change within the document management system.
- Base Document Corresponds to the essential bits of a document. There is only one Base Document per document. It is responsible for determining a document's content and may contain properties of the document, and it is part of every principal's view of the document.
- Base Properties Inherent document properties that are associated with a Base Document.
- Bit Provider A special property of the base document. It provides the content for the document by offering read and write operations. It can also offer additional operations such as fetching various versions of the document, or the encrypted version of the content.
- Browser A user interface which allows a user to locate and organize documents.
- Document A document which includes members of a collection and content.
- Document A document which has content.
- Document This refers to a particular content and to any properties attached to the content.
- the content referred to may be a direct referral or an indirect referral.
- Collection Content Document
- No-Content Document Combined Document.
- Handle Corresponds to a particular view on a document, either the universal view, or that of one principal.
- DocumentID A unique identifier for each BaseDocument.
- a ReferenceDocument inherits the DocumentID from its referent. Document identity is thus established via the connections between ReferenceDocument and BaseDocument.
- Logically, a single document is a BaseDocuments and any ReferenceDocuments that refer to it.
- Kernel Manages all operations on a document.
- a principal may have more than one kernel.
- Multi-Principal Ability for multiple principals to have their own set of properties on a Base Document wherein the properties of each principal may be different.
- Notification Allows properties and external devices to find out about operations and events that occur elsewhere in DMS.
- Document A document which contains only properties.
- Principal A “User” of the system. Each person or thing that uses the document management system is a principal. A group of people can also be a principal. Principals are central because each property on a document can be associated with a principal. This allows different principals to have different perspectives on the same document.
- Property Some bit of information or behavior that can be attached to content. Adding properties to content does not change the content's identity. Properties are tags that can be placed on documents, each property has a name and a value (and optionally a set of methods that can be invoked).
- Reference Document Corresponds to one principal's view of a document. It contains a reference to a Base Document (Reference Document A refers to Base Document B) and generally also contains additional properties. Properties added by a Reference Document belong only to that reference; for another principal to see these properties, it must explicitly request them. Thus, the view seen by a principal through his Reference Document is the document's content (through the Base Document), and a set of properties (both in the reference and on the Base Document). Even an owner of a Base Document can also have a Reference Document to that base, in which he places personal properties of the document that should not be considered an essential part of the document and placed in all other principal's view.
- Static Property A name-value pair associated with the document. Unlike active properties, static properties have no behavior. Provides searchable meta-data information about a document.
- the structure that file systems provide for managing files becomes the structure by which users organize and interact with documents.
- documents and files are not the same thing.
- the present invention has as an immediate goal to separate management of properties related to the document or concerning the document from the management of the document content. Therefore, user-specific document properties are managed close to the document consumer or user of the document rather than where the document is stored. Separation of the management of user properties from the document content itself provides the ability to move control of document management from a closed file system concept to a user-based methodology.
- the properties need to be presented within the content and/or property read/write path of a computer system, with the ability to both change the results of an operation as well as take other actions.
- the outline of the concept is described in FIG. 2, where once user (U) issues an operation request (O), prior to that operation being performed by operating system (OS), a call is made to document management system (DMS) A of the present invention, which allows DMS A to function so as to achieve the intended concepts of the present invention.
- DMS document management system
- O′ operation request
- the results are returned (R) to DMS A which in turn presents results (R′) to user (U).
- DMS Document Management System
- FIG. 3 sets forth the architecture of a document management system (DMS) A of the present invention.
- DMS document management system
- FIG. 3 an assumption is made that the environment is a DMS-aware environment. This means the protocols for storing and retrieving data and otherwise interacting with DMS A are uniform.
- DMS A has been developed to allow its architecture to be extended such that DMS protocols and code can be used in DMS-aware applications, and DMS-aware repositories. It is appreciated by the inventors however, and will be explained in greater detail below, that the present invention achieves additional benefits by being able to interact with existing legacy systems including applications and file systems which are not DMS aware.
- DMS Document management system
- Front-end components B include DMS-aware applications 10 a - 10 n , such as word processing applications, mail applications among others.
- Browser 12 (considered a specialized form of application) is also designed for use with DMS A.
- back-end components C can include a plurality of repositories 14 a - 14 n , where the content of documents are stored.
- repositories can include the hard disc of a principal's computer, a file system server, a web page, a dynamic real time data transmission source, as well as other data repositories. Since DMS A can receive data from various repositories, bit provider 16 is used to supply data to DMS A.
- Principals 1 ⁇ n each have their own kernel 18 a - 18 n for managing documents, such as documents 20 a - 20 n .
- Documents 20 a - 20 n are considered to be documents the corresponding principal 1 ⁇ n has brought into its document management space. Particularly, they are documents that a principal considers to be of value and therefore has in some manner marked as a document of the principal.
- the document for example, may be a document which the principal created, it may be an e-mail sent or received by the principal, a web page found by the principal, a real-time data input such as an electronic camera forwarding a continuous stream of images, or any other form of electronic data (including video, audio, text, etc.) brought into the DMS document space.
- Each of the documents 20 a - 20 n have static properties 22 and/or active properties 24 placed thereon.
- Document 20 a is considered to be a base document and is referenced by reference documents 20 b - 20 c .
- base document 20 a will also carry base properties 26 which can be static properties 22 and/or active properties 24 (Static properties are shown with a—and active properties are shown with a—o).
- Reference documents 20 b - 20 c are configured to interact with base document 20 a . Both base documents and reference documents can also hold static properties 22 and/or active properties 24 . When principals 2 , 3 access base document 20 a for the first time, corresponding reference documents 20 b - 20 c are created under kernels 18 b - 18 c , respectively. Reference documents 20 b - 20 c store links 28 and 30 to unambiguously identify their base document 20 a . In particular, in the present invention each base document is stored with a document ID which is a unique identifier for that document. When reference documents 20 b - 20 c are created, they generate links to the specific document ID of their base document.
- reference document 20 n is created with a link 32 to reference document 20 c of Principal 3 .
- link principal n will be able to view (i.e. its document handle) the public properties principal 3 has attached to its reference document 20 c as well as the base properties and public reference properties of base document 20 a . This illustrates the concept of chaining.
- DMS A of the present invention does not require the principal to operate within a strict hierarchy such as in file or folder-type environments. Rather, properties 22 , 24 which are attached to documents allows a principal to search and organize documents in accordance with how the principal finds it most useful.
- principal 1 owner of kernel 18 a
- principal 2 owner of kernel 18 b
- principal 2 can place properties on Reference Document 20 b .
- principal 2 can retrieve the base document in a manner different than that envisioned by principal 1 .
- a principal may run a query requesting all documents having a selected property.
- a user may run query language requests over existing properties. Use of browser 12 will be discussed in greater detail in the following sections.
- DMS A manages a document space where properties are attached by different principals such that actions occur which are appropriate for a particular principal, and are not necessarily equivalent to the organizational structure of the original author of a document or even to other principals.
- Another noted aspect of the present invention is that since the use of properties separates a document's inherent identity from its properties, from a principal's perspective, instead of requiring a document to reside on a single machine, documents in essence can reside on multiple machines (base document 20 a can reside on all or any one of kernels 18 a - 18 n ). Further, since properties associated with a document follow the document created by a principal (for example, properties on document 20 b of kernel 18 b , may reference base document 20 a ), properties of document 20 b will run on kernel 18 b , even though the properties of document 20 b are logically associated with base document 20 a .
- kernel 18 b i.e. principal 2
- properties are maintained with the principal who put the properties onto a document.
- FIGS. 4 a - 4 e Illustrations regarding concepts of the present invention are set forth in FIGS. 4 a - 4 e .
- the basic idea of existing file systems is illustratively depicted in FIG. 4 a .
- document A represents existing systems which has its identity information (i.e. in a hierarchical form) 40 carried with its content 42 .
- FIG. 4 b which illustrates a concept of the present invention, shows that properties 44 a - 44 n are separated from the content 46 of document B.
- This separation of a document's content from its descriptive properties allows for management of documents without regard to the physical location of the document.
- a principal may associate document B with other documents in the form of a collection and retrieve and store documents in accordance with the properties rather than the strict hierarchical storage requirements of existing file systems.
- document B includes as one of its properties “document related to DMS”, 44 a , and as another property “documents created in 1998”, 44 b . Then if the principal wishes to create a collection of all “documents related to DMS” and another to those “documents created in 1998”, document B would be found in both collections. This again points out a distinct aspect of this property-based system. Specifically, introduced to the interactive experience is that documents can appear in multiple places at the same time. This means a document can be a member of multiple collections at the same time and so two collections can display the same document concurrently.
- FIG. 4 d a further concept of the present invention is illustrated, directed to notification of active properties when an operation occurs which is of interest to the active property.
- Principal 1 initiates an operation through kernel 60 a to retrieve a document 60 b whose content is in storage repository 60 c .
- principal 2 and principal 3 have documents 62 a - 62 n to which they have attached active properties 64 a - 64 n , respectively with regard to document 60 b .
- some external sources such as a service, pager, e-mail provider, etc.
- 66 a - 66 n have an interest in document 60 b .
- a notification 70 a - 70 n is sent to other documents 62 a - 62 n and external sources 66 a - 66 n . If any documents 62 a - 62 n or external sources 66 a - 66 n are designed to function in light of this particular operation request, these elements will then perform their function. For example, property 64 a may indicate “inform each time document 62 b is accessed” and external source 66 a may send an e-mail to “Joe” each time document 62 b is accessed. Once principal 1 initiates an operation to access document 62 b , these active properties or external sources are notified.
- Another operation which could occur is that an author, such as principal 1 , determines to delete the document to which principals 2 and 3 have attached properties.
- the properties will be maintained in existence and when principal 2 or principal 3 attempt to retrieve the content of the deleted document, an indication is sent that the content has been deleted.
- An alternative configuration would be to send information that such a document is to be deleted and allow an opportunity to copy the document. Other alternatives are also possible.
- FIG. 4 e further expands upon the concept of operations acting as trigger events for initiation of properties.
- Computer systems have predefined operations. Among these are content read operations 76 a , edit operations 76 b , view operations 76 c , save operations 76 d , and other well known defined operations.
- the interaction between the operations and properties such as static properties 22 and active properties 24 show that an operation can be associated with more than one property and properties in turn can be associated with more than one operation. This is accomplished by including calls to different operations when constructing a specific property.
- an operating system will have distinct responsibilities from applications and a file system will have additionally defined, encapsulated responsibilities and capabilities.
- applications can't normally take over operations defined as those of the file system.
- the present invention allows applications (in the form of active properties) to become involved in functionality which is normally encapsulated within an existing legacy file system storage layer.
- active properties can declare themselves interested in or have something to offer with respect to a particular performance of an operation. These active properties are coded to become invoked when a particular operation occurs.
- interaction with the document space is based on meaningful properties of documents, rather than the structure in which documents were filed.
- document properties in this manner means that interaction is more strongly connected to the user's immediate concerns and the task at hand rather than an extrinsic structure.
- the structure of the document space reflects changes in the state of documents, rather than simply their state when they were filed.
- collections still appear inside collections, and standard filing information—such as document ownership, modification dates, file types, etc.—are still preserved by the present system, appearing as document properties maintained by the infrastructure.
- standard filing information such as document ownership, modification dates, file types, etc.
- DMS Document Management System
- FIG. 3 As previously stated, the concepts of FIG. 3 were explained based on the assumption that the environment was DMS-aware. The discussion in connection with FIG. 5, is directed to a situation where the DMS is to be used with non-aware components.
- DMS A′ The core of DMS A′ is document layer 80 (which includes components such as the kernels, documents, properties, and bit providers of FIG. 3 ), which implements the DMS document concept of providing documents with document properties.
- DMS A′ offers three levels of interface. The first is the DMS document interface 82 a , a Java class model for applications that are fully DMS-aware.
- the DMS object model structured in terms of document objects, properties, queries and collections, is offered to programmers as a set of classes they can use in their own programs. This is a mechanism for building new applications that exploit novel features of DMS.
- the second interface is a standard Java IO-streams interface 82 b , for integratable Java applications that do not understand DMS protocol. This interface is used to integrate Java Beans 83 to provide viewing and editing of particular document formats, for instance.
- the third interface is a translator 82 c for off-the-shelf applications 84 that are completely DMS-na ⁇ ve.
- a translator which has been implemented is a Network File System (NFS) server (Sun Microsystems, 1989) to DMS translator, so that the DMS database can also be accessed as a regular filesystem.
- NFS Network File System
- Applications simply read and write the filesystem as they would normally; the NFS interface serves DMS documents behind the scenes. Not only does this allow off-the-shelf applications to use the DMS, it also allows the DMS to maintain relevant document properties(such as modification dates) for activities that happen in these external applications.
- DMS property generators are applications that introduce information into the system, often processing structured files in order to turn content into properties.
- a mail service operates on electronic mail files and processes them so that the DMS documents are annotated with details from the e-mail headers as document properties.
- Property generators can be scheduled to operate periodically (e.g. late at night, or every five minutes) or to act on specific events (e.g. whenever a document's contents are changed).
- DMS simply maintains the properties, while providing document content from document repositories C′.
- these repositories include local filesystems on each implementation platform, as well as the World Wide Web.
- applications use DMS to fetch document content, the content is actually relayed from some external repository.
- uniform presentation bit providers 88 a - 88 n are provided with the capability to translate appropriate storage protocols.
- Properties can be located on properties database 92 . This figure also illustrates a non-DMS aware browser 94 .
- a limited DMS which has been implemented by the inventors comprises approximately 50000 lines of Java 1.1 code. It uses the Java Database Connection (JDBC), to talk to any SQL database backend (for properties), and DMS is currently run on PCs running Windows NT with an Oracle back-end, and on Sun workstations running Solaris using the public-domain MySQL as the back-end.
- JDBC Java Database Connection
- the user interfaces are implemented using Swing, JavaSoft's pre-release implementation of the Java Foundation Classes. Swing is a pure Java implementation, so that the interfaces are fully cross-platform.
- DMS A′ of FIG. 5 The following sections will describe DMS A′ of FIG. 5 in more detail. Components of the system will be separated into two types—those aimed primarily at supporting the DMS model of use and interaction, and those aimed primarily at supporting the integration of the DMS system into conventional legacy environments. This division, while not absolutely clean, helps to separate the intent behind elements of the design. Both aspects, however, are needed to support the style of interaction desired from DMS.
- DMS The basic motivation behind DMS is the desire to support a new form of interaction with large document spaces. This new approach is based on high level document properties that are meaningful to users and are the primary resource for document typing, organization, searching and retrieval.
- DMS document layer 80 provides a model of documents with arbitrary properties attached. As noted document layer 80 itself does not store the documents; instead, they are held in a variety of existing repositories C′, such as standard filesystems and the World Wide Web.
- the document layer has three functions:
- Document layer 80 uses a back-end database service to record the document properties.
- this database service is communicated to, via Java Database Connection (JDBC) so that DMS code is independent of the particular database product being used.
- JDBC Java Database Connection
- Arbitrary properties can be associated with documents.
- Static properties are simple name/value pairs. While many static property values are simple strings or string lists, attribute values are stored as serialized Java Objects, so that arbitrarily complicated data structures can be recorded as document static properties. Active properties differ in that they perform some form of action either on a document or related to a document.
- DMS A′ A document system organized around individual documents would be, at best, tedious to use. Most interactions in DMS A′ are with documents as elements of document collection& Along with filesystem documents and Web documents, document collections are implemented as a document type, and so they are subject to all the same operations that can be applied to documents (including having associated properties, search and retrieval, and themselves being members of collections).
- document collections comprise three elements (each of which can be null).
- the first is a query term.
- Query terms are specified in terms of document properties. Queries can test for the presence or absence of particular properties on a document, can test the specific value of a property, or can perform type-specific value comparisons (for instance, a wide range of date specifications can be provided, such as “changed within 2 hours” and “modified last week”). Query terms in document collections are “live.” The collection contains the matching documents at any moment, so that documents may appear or disappear depending on their immediate state.
- the document collection stores two lists of documents, called the inclusion and exclusion lists. Documents in the inclusion list are returned as members of the collection whether or not they match the query. Documents in the exclusion list are not returned as members of the collection even if they do match the query. When the query is null, the inclusion list effectively determines the collection contents.
- the contents of the collection at any moment are the documents in the inclusion list, plus those matching the query, minus those in the exclusion list.
- the goal of this implementation of document collections is to support a natural style of document organization and retrieval.
- a query can be used to create an initial collection, or to specify the default membership. However, membership can be refined without having to reformulate the query, but by direct manipulation of the document collection contents. Items can be added and removed to override the results of the query, and these changes will be persistent.
- the browser also supports the direct manipulation of query terms, so that reformulating the query is a fairly straight-forward operation.
- Collections, queries and properties are the basis of all interactions with the DMS document space, and so the performance of the property engine is a key component in the DMS system.
- the DMS database engine provides sufficiently crisp performance to support requirements for interactive response.
- the same queries on a larger database 2558 documents and 27921 properties) took 90 ms (8 documents) and 620 ms (300 documents) respectively.
- a document repository organized in terms of document properties is only of use if the documents actually have properties. There are several sources of properties on documents.
- properties can come from the principals, who are allowed to attach arbitrary properties to documents so that they can create their own structure. Indeed, a goal of the system is to allow principals to create their own structures by creating sets of properties relevant for their tasks and then using them to organize and retrieve documents. Secondly, properties are also created by active properties, applications and/or services.
- FIG. 6 a depicts ways in which properties may be attached including, for example, through a user operating a browser 96 a , by special applications 96 b , or by active properties 96 c .
- properties can be attached through property generators such as, HTML property generator 96 d , e-mail property generator 96 e , or image property generator 96 f . It is to be appreciated, as will be seen from the following discussion, these are only representative examples of property generators.
- Property generators can be a piece of code that can be used to analyze files in this way.
- Property generators are provided for common structured file types such as e-mail messages and HTML documents, as discussed above.
- DMS A′ also provides more specialized or complicated generators; one example is a Java service which parses Java source files and can encode information about packages, imports and method definitions in properties on the document. Also provided, as a particular specialized property generator, are generator wrappers for other pieces of software that exist outside the system. For instance, a document summarization tool has been incorporated it into DMS A′ through the generator mode, so that document contents will be summarized, with key words and sentences made available as document properties.
- the property generator mechanism is also a route to building application-specific DMS spaces.
- One example is a processor that understands the format of a database of summer interns, each application record document can be tagged with the intern's skills and interests, information on their school, degree, topics of interest and so forth. DMS A′ can then be used to analyze and organize the interns.
- Property generators like these enhance interaction with the document space by increasing the number of available properties for any given document.
- Using generators to extract properties from documents allows the system to extract content information and encode it in the property-centric document structure, bridging from content-based to structural approaches.
- DMS A′ relies on generators to provide this link, it is important that they be responsive to changes in document content.
- Property Generators can be scheduled to run at various points in order to keep information up to date.
- Property Generators can run at a particular time of day (e.g. doing major processing at 4 am), at particular intervals (e.g. every ten minutes), or on particular events (e.g. when a property is added to the document, or when the document is written).
- DMS A′ is, after all, intended to provide support for organizing and searching existing document spaces, and existing document spaces employ a wide variety of formats, structures and applications.
- DMS A′ offers the three application interfaces which were previously introduced. The following comments expand upon that introduction as for existing implementations.
- DMS document interface 82 a provides access to documents as Java objects. Applications can make use of this interface by importing the relevant package in their Java code, and coding to the API provided for accessing documents, collections and properties. This is the standard means to build new DMS-aware applications and to experiment with new interaction models.
- DMS Browser 12 (of FIG. 3) can be regarded as a DMS application and is built at this level.
- DMS document interface 82 a provides Document and Property classes, with specialized subclasses supporting all the functionality described here (such as collections, access to WWW documents, etc.). Applications can provide a direct view of DMS documents, perhaps with a content-specific visualization, or can provide a wholly different interface, using DMS as a property-based document service back-end.
- DMS IOStreams subclass the standard Java streams model, and so make DMS functionality available to any standard Java application.
- the third level of access is through translator 82 c (a server implementing the NFS protocol).
- This is a native NFS server implementation in pure Java.
- the translator 82 c (or DMS NFS server) provides access to the DMS document space to any NFS client; the server is used to allow existing off-the-shelf applications such as Microsoft Word to make use of DMS documents; on PC's, DMS simply looks like another disk to these applications, while on UNIX machines, DMS A′ looks like part of the standard network filesystem.
- DMS A′ is directly in the read/write path for existing or off-the-shelf applications.
- the alternative approach would be to attempt to post-process files written to a traditional filesystem by applications, such as Word, that could not be changed to accommodate DMS A′.
- applications such as Word
- relevant properties such as ones which record when the document was last used or modified
- relevant properties are kept up-to-date. Even though the application is written to use filesystem information, the DMS database remains up to date, because DMS A′ is the filesystem.
- NFS provides access to the query mechanism.
- Appropriately formatted directory names are interpreted as queries, which appear to “contain” the documents returned by the query.
- DMS provides this NFS service
- DMS is not a storage layer. Documents actually live in other repositories.
- using the NFS layer provides uniform access to a variety of other repositories (so that documents available over the Web appear in the same space as documents in a networked file system). The combination of this uniformity along with the ability to update document properties by being in the read and write path makes the NFS service a valuable component for the desired level of integration with familiar applications.
- Properties are either directly associated with base documents or else grouped into document references that are associated with principals.
- Properties associated with the base document are base properties and are “published”. The intent with published properties is to represent information inherent in a given document, such as its size or content type. Thus, any principal with access to the base document will be able to see or review the published properties. As such, users should not use published properties for personal information. For instance, if a property used by a principal is the property “interesting” (i.e. a user wishes to collect all documents which he has tagged with a property defined as “interesting”), such a property is rarely inherent.
- Each property has a name. This means that hierarchical names can be used to traverse the hierarchy. For example, “Get me the ‘from’ sub-property of the ‘mail’ property of this reference to Grandma's cookie recipe” would start at the reference, find the property named ‘mail’, and find its sub-property named ‘from’.
- static properties can be any serializable Java Object (or null). No typing guarantees are made about any property value. Principals must rely upon conventions to store and retrieve compatible types via properties. Properties can contain arbitrary values, but a principal is encouraged to keep their size small. Large property values should probably be stored as references to other documents.
- the string representation of the Java Object that is the value of a property is used when searching for properties by value by default.
- the visibility of a property is accomplished by a tag placed by the applier of the property.
- the value of the tag can be private or public. Private properties are not visible to any principal other than the author; public properties are visible to any requesting principal. So when another principal requests the set of properties, all public properties will be returned and no private ones. All base properties on the base document are marked public, so published properties are visible to all users.
- each property also has a fixed set of attributes recorded about it. These may be thought of as properties on properties, except that the per-property attributes are not extensible.
- the first step is to initialize the database.
- DMS A′ can be set up to manage a database locally (within the application's address space) or to connect to a remote DMS architecture; for this example, requests will be handled locally.
- a query is then constructed for the documents that are wanted by giving a search term to a query constructor.
- a query doesn't have to be encapsulated in a collection; it can be directly evaluated using the find( ) method. This can take an argument specifying a list of documents against which the query should be evaluated; if the list is omitted, as in this case, then the query is run over the entire database. It returns a DocList object containing matching documents. An enumeration for these documents can be obtained in order to process them one by one, setting the desired property.
- the method createCollection( ) creates and returns a new collection.
- the collection can then be named.
- the name property is actually “DMS”, but a number of common DMS properties are provided statically in the class DMSItem.
- the query is set for the collection using the setQuery( ) method and then print the number of matching documents. This time, since the query is encapsulated in a collection, it will persist in the database and still be there next time a DMS application is started. Finally, an exit is accomplished.
- Properties can be stored in a hierarchy underneath each document.
- a combination of property hierarchies and hidden properties solve the problem of name space collections and managing large sets of properties.
- the same named property can be added to a document multiple times.
- Various getValue methods on that property can return one of the values, all of the values, or a single value with notification when there is more than one available (when you only expected one).
- Properties can be tagged private or public. Private is not accessible by anyone but the owner. Public is accessible by anyone with access to the document.
- the query language allows principals to specify which properties on which documents they're interested in.
- a property value can be an arbitrary serializable Java Object.
- the system stores the reason it is on the document, e.g. who placed it there. Then, if a property is asserted for more than one reason, and one reason is later removed, only the appropriate instance of the property will be removed and the document will retain the property due to the other reason.
- the active property mechanism provides a means to provide behaviors such as that required by properties like “private” which affect not only the document's status but also its behavior.
- active properties afford this sort of interactive control in a way that maintains the advantages of a property-based system: document-centric, meaningful to users, and controlled by the document consumer.
- Active properties can be attached to documents just like static properties, but they also contain program code which is involved in performing document operations. Active properties can be notified when operations take place, as discussed in connection with FIG. 4 d . They can also be involved in validating those operations in the first place; or they can get involved in performing the operation. At each of these points, the active property can execute program code. Notification can be used, for example, to maintain awareness of parallel work in a collaborative system; it provides a means for a property to find out about the operations on a given document and log them or make them visible in a user interface. Verification can be used to implement mechanisms such as the “private” property described above, which would refuse validation to read requests originating from anyone other than the document's owner. And a chain of properties helping to perform the operation can be used to provide facilities such as encryption and compression as properties on documents.
- Active properties are properties that are activated by being associated with code.
- a property can be associated with a Java class.
- Each property can have its own class, though in one embodiment properties of the same “type” can share a class.
- This class contains methods corresponding to various operations on the document. For example, properties may provide their own read methods that are “stacked” on top of the read operation provided by the base document.
- a property instance object can interact in multiple ways to carry out its activity.
- These standard mechanisms of notifying, validating and performing introduced above, are expanded upon below, where the standard mechanisms it can participate and include:
- API's it implements can be accessed by other entities, either inside or outside the document space. This allows it to effectively extend the basic API of its document.
- All active properties have three essential features: a name, a value, and active methods. Thus, any property can be made active by giving it active methods. Even properties thought of as being static are in some ways active since their getValue and setValue methods are provided by their class object. The value of a property can be used by its active methods to store persistent data associated with the property.
- an active property can carry up to three methods.
- the first is a (boolean) validation method; the second is a (Object) primary method, and the third is a (void) notification method.
- the kernel first executes defined validation methods on attached properties for that operation. If any method returns false, execution halts. Otherwise, the primary methods are run according to the defined ordering rule. Finally, all notification methods are run.
- a property state can be stored as the value of the property, as sub-properties of the active property, as other properties on the same document, as separate documents, or in an external storage system. This decision is up to the property writer (although the use of property values and sub-properties is encouraged).
- the property instance object must exist when the active property's code is running, but otherwise it exists only when the kernel finds it convenient.
- the kernel's policy may range from keeping the object around indefinitely, to it creating the object only when the active property is supposed to perform some action, and then discarding it upon completion of the action. There is one instance of an object extant for any property instance.
- Locating the activity in Java objects is lighter weight than putting it in threads. Putting it in ephemeral objects is even lighter weight and further ensures that all the state the property depends on is visible as property values. This also gives a clear separation between the information in properties, which is searchable, and their activity. This design does mean that property implementers may have to work harder since they can't keep any inter-execution state except that in their properties or in other properties (or documents).
- the object is invoked to check attempts to add, remove, or change property instances.
- adding a property the object is constructed in accordance with the information, and addSelf( ) is called, which checks that the addition is valid and performs any appropriate initialization. It returns a status saying whether the addition is acceptable—if it is not acceptable, the property is not added to the document.
- removeSelf( ) is called on attempts to remove the property
- changeSelf(Property newProp) is called for an attempt to change the value of the property, with newProp representing the value that is to be newly stored.
- Document-scope operations are executed independently of any property. They logically take the form document.operation(args). The actions taken for this type of operation can be overridden by any property on the document, but overriding operations take the same set of arguments as the existing operation. (see intercepting and modifying behavior below).
- Property-scope operations are executed with respect to a property. They logically take the form document.property.operation(args).
- API's implemented by properties can be accessed by anything with access to the document.
- Users of the system and other properties can invoke active property operations by first calling a GetDelegateForInterface( ) to obtain interfaces that are implemented by the active property.
- a property can register to intervene in operations on its document.
- the base operations that can be intercepted include: reading and writing content and adding, changing, and removing properties.
- Interceptions of property operations apply to operations on the same reference as the intercepting property.
- Interceptions of content operations by properties on references apply to accesses made from the document space on which the reference lives.
- properties are supposed to be properties of their document or their principal's view (or document handle) of the document, it makes sense that they can affect that. Properties can use the notification mechanism and various API's if they want to interact with other documents.
- Properties carry methods for validation and notification as well as primary methods for execution. An operation must be declared as valid by all attached properties before it is performed.
- Validation allows methods to override other executions on a case-by-case basis.
- Validation and notification correspond to natural classes of behavior.
- the active properties on a document are ordered in a list or vector.
- the order of invocation of primary methods follows the property order, but in a stack style.
- the first property that has a primary method gets its method invoked and passed a handle that allows it to execute the stack of remaining primary methods in similar fashion.
- any method in the stack can transform the arguments for subsequent methods, can revise the result passed back by the stack of subsequent methods, or can not call the subsequent methods at all. (Order does not matter for validation or notification methods, since they can't have an affect on each other.)
- An identifier for the principal requesting the operation is passed to each active property method. This allows any active property code to alter its behavior based on who is performing the operation.
- DMS A or A′ are designed to allow principals to interact with documents in the document space.
- Browsers (such as Browser 12 of FIG. 1 and Browser 94 of FIG. 5) provide one manner for such interaction by allowing a principal a very direct sense of interaction with attributes and with collections organized according to document attributes.
- FIG. 7 shows a browser in use.
- Documents 102 are displayed as individual entities and can be moved, deleted and launched.
- Document collections appear in two forms; opened as ovals 104 , showing the documents they contain, and closed, as “piles” 106 .
- a concept of piles is discussed in the article, “A Pile Metaphor for Supporting Casual Organization of Information”, by R. Mander, G. Salomon and Y. Y. Wong, PROC. ACM Conf. Human Factors in Computing Systems, CHI 92 (Monterrey, Calif.), May, 1992. Displaying closed collections as piles 106 provides a natural means to give cues as to their size, which is particularly useful since fluid collections can grow and shrink independently from user activity.
- Properties can also be stored as browser objects, and appear on the desktop as triangles 108 . Properties have two roles in use with a browser. The first is that they can be dropped onto documents to add a particular property to the document. The second is that individual properties can be used as query terms.
- collections can not only contain specific other documents (including sub-collections), just like folders and directories in traditional file systems, but that they can also contain a query component, which specifies dynamic content. So, for any collection, a principal can specify a set of query terms. Documents in the system that match the query will be included in the collection (unless they have been specifically excluded).
- property icons 108 representing the current set of query terms appear around the circumference of the collection object. Dragging these query terms off the collection again removes them from the query. As these iconic representations of query terms are dragged on and off the query object, the query is updated in a separate thread. The result is that queries dynamically respond to the manipulation of query terms in real time, giving a very direct sense of the query as a configurable filter on the document space.
- the browser being used is configured so that for a principal implementing collections with a query component it still feels like a manipulation of collections, and not the generation of queries.
- the interactive style of a browser intends to describe the interaction grounded in manipulation of a document space rather than the creation and execution of queries. While in the foregoing, it has been noted that query terms help to give a sense of manipulation, it is appreciated other components of collections, inclusion and exclusion lists, can also be used to help support the experience of manipulation.
- Inclusion and exclusion lists in fluid collections lend them a feeling of stability that is critical to the interactive field being supported. So, in addition to the query component that dynamically maintains the collection contents, direct manipulation controls the use of the inclusion and exclusion list to modify the results. Dragging a document out of a query collection causes it to be added to the exclusion list for the collection. This means it won't reappear in the collection the next time the query is run (which happens regularly in the background). Similarly, dragging a document into a collection means that it should be added to the inclusion list since it would otherwise not be included as an element of the collection.
- principals can drop properties onto a query window to create the query that expresses their basic set of interests, and then refine the results by adding or removing specific items.
- the resulting collections feel more like “real” entities than dynamically executed queries, but new documents of interest still are included when they are added to the system.
- a dialog box 110 of display screen 112 can also be used to alter properties on documents.
- the collection “goodies” includes a document “generation—of—bits—html.” This information is shown in the display area 114 .
- property list window display 116 displays static properties 118 and active properties 120 that are attached to that document. Properties may be added or removed or otherwise searched via the use of dialog box 110 .
- the displayed property list illustrates that properties can contain arbitrary data.
- Property list window display 116 includes a parent property 122 to which are attached sub-properties or child properties 122 - 126 . This figure further shows that multiple properties can have the same name 128 , 130 .
Abstract
Description
Claims (24)
Priority Applications (4)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US09/143,551 US6308179B1 (en) | 1998-08-31 | 1998-08-31 | User level controlled mechanism inter-positioned in a read/write path of a property-based document management system |
EP99117038A EP1003110A3 (en) | 1998-08-31 | 1999-08-30 | Property-based user level document management |
JP11244025A JP2000090076A (en) | 1998-08-31 | 1999-08-30 | Method and system for managing document |
US09/607,676 US7155662B1 (en) | 1998-08-31 | 2000-06-30 | Representing an entity as a document using a data source having active properties |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US09/143,551 US6308179B1 (en) | 1998-08-31 | 1998-08-31 | User level controlled mechanism inter-positioned in a read/write path of a property-based document management system |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US09/144,231 Continuation-In-Part US6253217B1 (en) | 1998-08-31 | 1998-08-31 | Active properties for dynamic document management system configuration |
Related Child Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US09/143,802 Continuation-In-Part US6266670B1 (en) | 1998-08-31 | 1998-08-31 | User level accessing of low-level computer system operations. |
Publications (1)
Publication Number | Publication Date |
---|---|
US6308179B1 true US6308179B1 (en) | 2001-10-23 |
Family
ID=22504554
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US09/143,551 Expired - Lifetime US6308179B1 (en) | 1998-08-31 | 1998-08-31 | User level controlled mechanism inter-positioned in a read/write path of a property-based document management system |
Country Status (3)
Country | Link |
---|---|
US (1) | US6308179B1 (en) |
EP (1) | EP1003110A3 (en) |
JP (1) | JP2000090076A (en) |
Cited By (128)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20020019936A1 (en) * | 1998-03-03 | 2002-02-14 | David Hitz | File access control in a multi-protocol file server |
US6370538B1 (en) * | 1999-11-22 | 2002-04-09 | Xerox Corporation | Direct manipulation interface for document properties |
US6393456B1 (en) * | 1998-11-30 | 2002-05-21 | Microsoft Corporation | System, method, and computer program product for workflow processing using internet interoperable electronic messaging with mime multiple content type |
US20020087594A1 (en) * | 2001-01-03 | 2002-07-04 | International Business Machines Corporation | Methods, systems and computer program products for subscriber customized generation of publications |
US6449620B1 (en) * | 2000-03-02 | 2002-09-10 | Nimble Technology, Inc. | Method and apparatus for generating information pages using semi-structured data stored in a structured manner |
US6466983B1 (en) * | 1999-09-30 | 2002-10-15 | Steven Paul Strazza | Systems and methods for controlling access to data maintained in a repository |
US6470364B1 (en) | 1998-02-24 | 2002-10-22 | Sun Microsystems, Inc. | Method and apparatus for generating text components |
US20030055991A1 (en) * | 2001-09-20 | 2003-03-20 | Sun Microsystems, Inc. | Access control for an e-commerce application |
US20030105734A1 (en) * | 2001-11-16 | 2003-06-05 | Hitchen Stephen M. | Collaborative file access management system |
US6581062B1 (en) | 2000-03-02 | 2003-06-17 | Nimble Technology, Inc. | Method and apparatus for storing semi-structured data in a structured manner |
US6592628B1 (en) * | 1999-02-23 | 2003-07-15 | Sun Microsystems, Inc. | Modular storage method and apparatus for use with software applications |
WO2003067475A1 (en) * | 2002-02-08 | 2003-08-14 | Interwoven | System and method for maintaining componentized content |
US20030163460A1 (en) * | 2002-01-18 | 2003-08-28 | Matthew Shinn | Systems and methods for dynamic querying |
US6636250B1 (en) * | 2000-04-12 | 2003-10-21 | Emc Corp | Methods and apparatus for presenting information to a user of a computer system |
US20030200234A1 (en) * | 2002-04-19 | 2003-10-23 | George Koppich | Document management system rule-based automation |
WO2003090096A1 (en) * | 2002-04-19 | 2003-10-30 | Toshiba Tec Kabushiki Kaisha | Document management system |
US6675161B1 (en) * | 1999-05-04 | 2004-01-06 | Inktomi Corporation | Managing changes to a directory of electronic documents |
US20040019613A1 (en) * | 2002-07-25 | 2004-01-29 | Xerox Corporation | Electronic filing system with file-placeholders |
US6691119B1 (en) * | 1999-07-26 | 2004-02-10 | Microsoft Corporation | Translating property names and name space names according to different naming schemes |
US6694328B1 (en) * | 2000-01-13 | 2004-02-17 | International Business Machines Corporation | Method for creating queries on version objects |
US20040064473A1 (en) * | 2002-10-01 | 2004-04-01 | Honda Giken Kogyo Kabushiki Kaisha | Storage of selected e-mails including attachments in document management system |
US6721785B1 (en) * | 2000-06-07 | 2004-04-13 | International Business Machines Corporation | System for directing e-mail to selected recipients by applying transmission control directives on aliases identifying lists of recipients to exclude or include recipients |
US20040078528A1 (en) * | 2002-07-31 | 2004-04-22 | Texas Instruments Incorporated | Cache coherency in a multi-processor system |
US20040123242A1 (en) * | 2002-12-11 | 2004-06-24 | Mckibben Michael T. | Context instantiated application protocol |
US20040133589A1 (en) * | 2002-12-19 | 2004-07-08 | Rick Kiessig | System and method for managing content |
US20040167916A1 (en) * | 1998-01-26 | 2004-08-26 | At&T Corp. | System and method of organizing data to facilitate access and streaming |
US20040193364A1 (en) * | 2000-09-18 | 2004-09-30 | Robert Chojnacki | Computing system with decryption functions and secure data product |
US20040205622A1 (en) * | 2002-07-25 | 2004-10-14 | Xerox Corporation | Electronic filing system with scan-placeholders |
US20040249902A1 (en) * | 1999-10-20 | 2004-12-09 | Vali Tadayon | Method and apparatus for providing a web-based active virtual file system |
US6832220B1 (en) * | 2000-08-03 | 2004-12-14 | Microsoft Corporation | Method and apparatus for file searching, accessing file identifiers from reference page |
US20050038788A1 (en) * | 2003-08-14 | 2005-02-17 | International Business Machines Corporation | Annotation security to prevent the divulgence of sensitive information |
US20050055333A1 (en) * | 1999-07-26 | 2005-03-10 | Microsoft Corporation | Apparatus and computer-readable media for processing HTTP requests |
US6874143B1 (en) | 2000-06-21 | 2005-03-29 | Microsoft Corporation | Architectures for and methods of providing network-based software extensions |
US20050080804A1 (en) * | 2001-10-30 | 2005-04-14 | Bradshaw Robert David | System and method for maintaining componentized content |
US6915299B1 (en) * | 2000-06-23 | 2005-07-05 | Microsoft Corporation | Web server document library |
US20050165800A1 (en) * | 2004-01-26 | 2005-07-28 | Fontoura Marcus F. | Method, system, and program for handling redirects in a search engine |
US20050165838A1 (en) * | 2004-01-26 | 2005-07-28 | Fontoura Marcus F. | Architecture for an indexer |
US20050165718A1 (en) * | 2004-01-26 | 2005-07-28 | Fontoura Marcus F. | Pipelined architecture for global analysis and index building |
US20050165781A1 (en) * | 2004-01-26 | 2005-07-28 | Reiner Kraft | Method, system, and program for handling anchor text |
WO2005081637A2 (en) * | 2004-03-03 | 2005-09-09 | Gautam Dharamdas Goradia | Interactive system for building, organising, and sharing one’s own databank of works of literature in one or more languages |
US6947991B1 (en) * | 1999-09-13 | 2005-09-20 | Novell, Inc. | Method and apparatus for exposing network administration stored in a directory using HTTP/WebDAV protocol |
US6950982B1 (en) | 1999-11-19 | 2005-09-27 | Xerox Corporation | Active annotation mechanism for document management systems |
US6957224B1 (en) * | 2000-09-11 | 2005-10-18 | International Business Machines Corporation | Efficient retrieval of uniform resource locators |
US6963866B2 (en) | 1999-04-13 | 2005-11-08 | Mirror Imaging L.L.C. | Method of obtaining an electronically stored financial document |
US6970925B1 (en) * | 1999-02-03 | 2005-11-29 | William H. Gates, III | Method and system for property notification |
US20060020668A1 (en) * | 2004-07-22 | 2006-01-26 | International Business Machines Corporation | System and method for duplicate e-mail content detection and automatic doclink conversion |
US20060069726A1 (en) * | 2002-12-11 | 2006-03-30 | Leader Technologies, Inc. | Hospitality environment communications architecture |
US20060074962A1 (en) * | 2004-09-24 | 2006-04-06 | Fontoura Marcus F | Method, system, and program for searching documents for ranges of numeric values |
US20060074980A1 (en) * | 2004-09-29 | 2006-04-06 | Sarkar Pte. Ltd. | System for semantically disambiguating text information |
US20060080344A1 (en) * | 2002-12-11 | 2006-04-13 | Leader Technologies, Inc. | Radio/telephony interoperability system |
US20060155677A1 (en) * | 2001-03-27 | 2006-07-13 | Fred Moses | System and method for managing objects and resources with access rights embedded in nodes within a hierarchical tree structure |
US20060206796A1 (en) * | 2000-08-08 | 2006-09-14 | Kausik Balas N | Method and system for parameterized web documents |
US7124144B2 (en) | 2000-03-02 | 2006-10-17 | Actuate Corporation | Method and apparatus for storing semi-structured data in a structured manner |
US20060235899A1 (en) * | 2005-03-25 | 2006-10-19 | Frontline Systems, Inc. | Method of migrating legacy database systems |
US20060248105A1 (en) * | 2003-05-14 | 2006-11-02 | Goradia Gautam D | Interactive system for building and sharing databank |
US20060265410A1 (en) * | 2000-03-02 | 2006-11-23 | Christianson David B | Method and apparatus for storing semi-structured data in a structured manner |
US7143341B1 (en) * | 2002-06-20 | 2006-11-28 | Cadence Design Systems | Method and apparatus for concurrent engineering and design synchronization of multiple tools |
US7152062B1 (en) | 2000-11-21 | 2006-12-19 | Actuate Corporation | Technique for encapsulating a query definition |
US7152208B2 (en) * | 1998-07-24 | 2006-12-19 | Fujitsu Limited | Apparatus managing document distribution |
US20070016583A1 (en) * | 2005-07-14 | 2007-01-18 | Ronny Lempel | Enforcing native access control to indexed documents |
US20070195960A1 (en) * | 2002-04-12 | 2007-08-23 | General Dynamics Advanced Information Systems | Apparatus and method for encrypting data |
US20070198246A1 (en) * | 2004-03-03 | 2007-08-23 | Goradia Gautam D | Interactive system for building, organising, and sharing one's own encyclopedia in one or more languages |
US20070206855A1 (en) * | 2006-03-02 | 2007-09-06 | Sharp Laboratories Of America, Inc. | Methods and systems for detecting regions in digital images |
US20070206856A1 (en) * | 2006-03-02 | 2007-09-06 | Toyohisa Matsuda | Methods and Systems for Detecting Regions in Digital Images |
US20070226229A1 (en) * | 2001-03-23 | 2007-09-27 | Fineground Networks | Method and system for class-based management of dynamic content in a networked environment |
US20070226204A1 (en) * | 2004-12-23 | 2007-09-27 | David Feldman | Content-based user interface for document management |
US7281018B1 (en) | 2004-05-26 | 2007-10-09 | Microsoft Corporation | Form template data source change |
US20070291288A1 (en) * | 2006-06-15 | 2007-12-20 | Richard John Campbell | Methods and Systems for Segmenting a Digital Image into Regions |
US20080056573A1 (en) * | 2006-09-06 | 2008-03-06 | Toyohisa Matsuda | Methods and Systems for Identifying Text in Digital Images |
US20080066049A1 (en) * | 2006-09-12 | 2008-03-13 | Sandeep Jain | Method for enforcing change policy based on project state |
US7346848B1 (en) * | 2000-06-21 | 2008-03-18 | Microsoft Corporation | Single window navigation methods and systems |
US20080086483A1 (en) * | 2006-10-10 | 2008-04-10 | Postech Academy-Industry Foundation | File service system in personal area network |
US20080147957A1 (en) * | 2004-11-12 | 2008-06-19 | Justsystems Corporation | Archiver Device, Data Acquisition Device, and Data Acquisition Method |
US20080216009A1 (en) * | 2007-03-02 | 2008-09-04 | Paul Drallos | Virtual Library File System |
US20080228825A1 (en) * | 1998-01-26 | 2008-09-18 | At&T Corp. | System and method of organizing data to facilitate access and streaming |
US20080263449A1 (en) * | 2007-04-20 | 2008-10-23 | Microsoft Corporation | Automated maintenance of pooled media content |
US20080288453A1 (en) * | 2007-05-15 | 2008-11-20 | Smetters Diana K | Method and system for metadata-driven document management and access control |
US20080288862A1 (en) * | 2007-05-15 | 2008-11-20 | Smetters Diana K | Method and system for in-document markup in support of information sharing |
US20090049078A1 (en) * | 2002-04-23 | 2009-02-19 | International Business Machines Corporation | Autofoldering process in content management |
US20090046344A1 (en) * | 2005-05-26 | 2009-02-19 | Canon Kabushiki Kaisha | Optical scanning apparatus and image-forming apparatus |
US20090110319A1 (en) * | 2007-10-30 | 2009-04-30 | Campbell Richard J | Methods and Systems for Background Color Extrapolation |
US20090172005A1 (en) * | 2007-12-28 | 2009-07-02 | Microsoft Corporation | Discovering and Updating Templates |
US7613917B1 (en) * | 2000-09-18 | 2009-11-03 | Navteq North America, Llc | Method and system for mass distribution of geographic data for navigation systems |
US7673227B2 (en) | 2000-06-21 | 2010-03-02 | Microsoft Corporation | User interface for integrated spreadsheets and word processing tables |
US7676843B1 (en) | 2004-05-27 | 2010-03-09 | Microsoft Corporation | Executing applications at appropriate trust levels |
US7689929B2 (en) | 2000-06-21 | 2010-03-30 | Microsoft Corporation | Methods and systems of providing information to computer users |
US7692636B2 (en) | 2004-09-30 | 2010-04-06 | Microsoft Corporation | Systems and methods for handwriting to a screen |
US7702997B2 (en) | 2000-06-21 | 2010-04-20 | Microsoft Corporation | Spreadsheet fields in text |
US7712048B2 (en) | 2000-06-21 | 2010-05-04 | Microsoft Corporation | Task-sensitive methods and systems for displaying command sets |
US7712022B2 (en) | 2004-11-15 | 2010-05-04 | Microsoft Corporation | Mutually exclusive options in electronic forms |
US7721190B2 (en) | 2004-11-16 | 2010-05-18 | Microsoft Corporation | Methods and systems for server side form processing |
US7725834B2 (en) | 2005-03-04 | 2010-05-25 | Microsoft Corporation | Designer-created aspect for an electronic form template |
US7743063B2 (en) | 2000-06-21 | 2010-06-22 | Microsoft Corporation | Methods and systems for delivering software via a network |
US7756904B2 (en) | 2000-08-01 | 2010-07-13 | Actuate Corporation | Nested conditional relations (NCR) model and algebra |
US7779343B2 (en) | 2006-01-30 | 2010-08-17 | Microsoft Corporation | Opening network-enabled electronic documents |
US7865477B2 (en) | 2003-03-28 | 2011-01-04 | Microsoft Corporation | System and method for real-time validation of structured data files |
US7900134B2 (en) | 2000-06-21 | 2011-03-01 | Microsoft Corporation | Authoring arbitrary XML documents using DHTML and XSLT |
US7904801B2 (en) | 2004-12-15 | 2011-03-08 | Microsoft Corporation | Recursive sections in electronic forms |
US7913159B2 (en) | 2003-03-28 | 2011-03-22 | Microsoft Corporation | System and method for real-time validation of structured data files |
US7925621B2 (en) | 2003-03-24 | 2011-04-12 | Microsoft Corporation | Installing a solution |
US7937651B2 (en) | 2005-01-14 | 2011-05-03 | Microsoft Corporation | Structural editing operations for network forms |
US7971139B2 (en) | 2003-08-06 | 2011-06-28 | Microsoft Corporation | Correlation, association, or correspondence of electronic forms |
US7979856B2 (en) | 2000-06-21 | 2011-07-12 | Microsoft Corporation | Network-based software extensions |
US8001459B2 (en) | 2005-12-05 | 2011-08-16 | Microsoft Corporation | Enabling electronic documents for limited-capability computing devices |
US8010515B2 (en) | 2005-04-15 | 2011-08-30 | Microsoft Corporation | Query to an electronic form |
US8078960B2 (en) | 2003-06-30 | 2011-12-13 | Microsoft Corporation | Rendering an HTML electronic form by applying XSLT to XML using a solution |
US8122070B1 (en) | 2005-12-29 | 2012-02-21 | United States Automobile Association (USAA) | Document management system user interfaces |
US8127217B2 (en) | 2002-04-19 | 2012-02-28 | Kabushiki Kaisha Toshiba | Document management system for transferring a plurality of documents |
US8200975B2 (en) | 2005-06-29 | 2012-06-12 | Microsoft Corporation | Digital signatures for network forms |
US8437054B2 (en) | 2006-06-15 | 2013-05-07 | Sharp Laboratories Of America, Inc. | Methods and systems for identifying regions of substantially uniform color in a digital image |
US8487879B2 (en) | 2004-10-29 | 2013-07-16 | Microsoft Corporation | Systems and methods for interacting with a computer through handwriting to a screen |
US20130290304A1 (en) * | 2012-04-25 | 2013-10-31 | Estsoft Corp. | System and method for separating documents |
US8630498B2 (en) | 2006-03-02 | 2014-01-14 | Sharp Laboratories Of America, Inc. | Methods and systems for detecting pictorial regions in digital images |
US8688673B2 (en) | 2005-09-27 | 2014-04-01 | Sarkar Pte Ltd | System for communication and collaboration |
US8688733B2 (en) * | 2012-03-16 | 2014-04-01 | International Business Machines Corporation | Remote inventory manager |
US8733658B2 (en) | 2000-07-18 | 2014-05-27 | Cutting Edge Codes Llc | Barcode device |
US8819072B1 (en) | 2004-02-02 | 2014-08-26 | Microsoft Corporation | Promoting data from structured data files |
USRE45184E1 (en) | 2004-08-19 | 2014-10-07 | International Business Machines Corporation | Sectional E-mail transmission |
US8892993B2 (en) | 2003-08-01 | 2014-11-18 | Microsoft Corporation | Translation file |
US8918729B2 (en) | 2003-03-24 | 2014-12-23 | Microsoft Corporation | Designing electronic forms |
US9141612B2 (en) | 1999-04-13 | 2015-09-22 | Mirrior Imaging, LLC | Method of obtaining an electronically-stored financial document |
US9262384B2 (en) | 1999-05-21 | 2016-02-16 | E-Numerate Solutions, Inc. | Markup language system, method, and computer program product |
US9262383B2 (en) | 1999-05-21 | 2016-02-16 | E-Numerate Solutions, Inc. | System, method, and computer program product for processing a markup document |
US9268748B2 (en) | 1999-05-21 | 2016-02-23 | E-Numerate Solutions, Inc. | System, method, and computer program product for outputting markup language documents |
US9600842B2 (en) | 2001-01-24 | 2017-03-21 | E-Numerate Solutions, Inc. | RDX enhancement of system and method for implementing reusable data markup language (RDL) |
US10067917B2 (en) | 2013-01-31 | 2018-09-04 | Bluebeam, Inc. | Method for managing and selectively arranging sets of multiple documents and pages within documents |
US10387010B2 (en) | 2016-02-12 | 2019-08-20 | Bluebeam, Inc. | Method of computerized presentation of a document set view for auditing information and managing sets of multiple documents and pages |
US10824671B2 (en) | 2016-04-08 | 2020-11-03 | International Business Machines Corporation | Organizing multiple versions of content |
Families Citing this family (11)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
EP1087306A3 (en) * | 1999-09-24 | 2004-11-10 | Xerox Corporation | Meta-documents and method of managing them |
US6842770B1 (en) | 2000-08-18 | 2005-01-11 | Apple Computer, Inc. | Method and system for seamlessly accessing remotely stored files |
WO2002069186A1 (en) * | 2001-02-26 | 2002-09-06 | Akodi S.A. | A method and system for archiving and retrieving data in an electronic document management system |
EP1260919A3 (en) * | 2001-05-22 | 2004-10-20 | ICMS Group n.v. | A method of storing, retrieving and viewing data |
JP2003150424A (en) * | 2001-11-16 | 2003-05-23 | Fujitsu Ltd | File system, control method, and program |
WO2004072864A1 (en) * | 2003-02-13 | 2004-08-26 | Neurocom Pty Ltd | Dynamically configurable file display system |
US7908562B2 (en) * | 2003-10-23 | 2011-03-15 | Microsoft Corporation | System and a method for presenting items to a user with a contextual presentation |
US20050091181A1 (en) * | 2003-10-23 | 2005-04-28 | Mckee Timothy P. | System and method for the presentation of items stored on a computer |
FR2861476A1 (en) * | 2003-10-24 | 2005-04-29 | Thales Sa | Software granules addressing process for accessing heterogeneous software data, involves defining generic rule for identification of granules, and applying rule to requests exchanged between software tools |
EP1965314A4 (en) * | 2005-12-05 | 2009-04-01 | Sursen Corp | Document processing system and method |
US9721006B2 (en) * | 2011-03-21 | 2017-08-01 | Lexisnexis, A Division Of Reed Elsevier Inc. | Systems and methods for enabling searches of a document corpus and generation of search queries |
Citations (15)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5299123A (en) * | 1989-12-20 | 1994-03-29 | International Business Machines Corporation | Method for allowing retrieval of documents with user defined search descriptors |
US5692141A (en) * | 1991-06-25 | 1997-11-25 | Fuji Xerox Co., Ltd. | Groupware system providing facilitated data transfer among common and individual work areas |
US5708780A (en) * | 1995-06-07 | 1998-01-13 | Open Market, Inc. | Internet server access control and monitoring systems |
US5787449A (en) * | 1994-06-02 | 1998-07-28 | Infrastructures For Information Inc. | Method and system for manipulating the architecture and the content of a document separately from each other |
US5812995A (en) * | 1993-10-14 | 1998-09-22 | Matsushita Electric Industrial Co., Ltd. | Electronic document filing system for registering and retrieving a plurality of documents |
US5930801A (en) * | 1997-03-07 | 1999-07-27 | Xerox Corporation | Shared-data environment in which each file has independent security properties |
US5978818A (en) * | 1997-04-29 | 1999-11-02 | Oracle Corporation | Automated hypertext outline generation for documents |
US5987459A (en) * | 1996-03-15 | 1999-11-16 | Regents Of The University Of Minnesota | Image and document management system for content-based retrieval |
US6009442A (en) * | 1997-10-08 | 1999-12-28 | Caere Corporation | Computer-based document management system |
US6014677A (en) * | 1995-06-12 | 2000-01-11 | Fuji Xerox Co., Ltd. | Document management device and method for managing documents by utilizing additive information |
US6023714A (en) * | 1997-04-24 | 2000-02-08 | Microsoft Corporation | Method and system for dynamically adapting the layout of a document to an output device |
US6038567A (en) * | 1998-02-19 | 2000-03-14 | Microsoft Corporation | Method and system for propagating object properties in a desktop publishing program |
US6049799A (en) * | 1997-05-12 | 2000-04-11 | Novell, Inc. | Document link management using directory services |
US6070162A (en) * | 1996-12-10 | 2000-05-30 | Seiko Epson Corporation | Information search and collection system |
US6072481A (en) * | 1997-09-10 | 2000-06-06 | Comnes Co., Ltd | Electronic catalog data creating and/or displaying apparatus and method |
Family Cites Families (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
WO1997015018A1 (en) * | 1995-10-16 | 1997-04-24 | Bell Communications Research, Inc. | Method and system for providing uniform access to heterogeneous information |
-
1998
- 1998-08-31 US US09/143,551 patent/US6308179B1/en not_active Expired - Lifetime
-
1999
- 1999-08-30 EP EP99117038A patent/EP1003110A3/en not_active Withdrawn
- 1999-08-30 JP JP11244025A patent/JP2000090076A/en active Pending
Patent Citations (15)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5299123A (en) * | 1989-12-20 | 1994-03-29 | International Business Machines Corporation | Method for allowing retrieval of documents with user defined search descriptors |
US5692141A (en) * | 1991-06-25 | 1997-11-25 | Fuji Xerox Co., Ltd. | Groupware system providing facilitated data transfer among common and individual work areas |
US5812995A (en) * | 1993-10-14 | 1998-09-22 | Matsushita Electric Industrial Co., Ltd. | Electronic document filing system for registering and retrieving a plurality of documents |
US5787449A (en) * | 1994-06-02 | 1998-07-28 | Infrastructures For Information Inc. | Method and system for manipulating the architecture and the content of a document separately from each other |
US5708780A (en) * | 1995-06-07 | 1998-01-13 | Open Market, Inc. | Internet server access control and monitoring systems |
US6014677A (en) * | 1995-06-12 | 2000-01-11 | Fuji Xerox Co., Ltd. | Document management device and method for managing documents by utilizing additive information |
US5987459A (en) * | 1996-03-15 | 1999-11-16 | Regents Of The University Of Minnesota | Image and document management system for content-based retrieval |
US6070162A (en) * | 1996-12-10 | 2000-05-30 | Seiko Epson Corporation | Information search and collection system |
US5930801A (en) * | 1997-03-07 | 1999-07-27 | Xerox Corporation | Shared-data environment in which each file has independent security properties |
US6023714A (en) * | 1997-04-24 | 2000-02-08 | Microsoft Corporation | Method and system for dynamically adapting the layout of a document to an output device |
US5978818A (en) * | 1997-04-29 | 1999-11-02 | Oracle Corporation | Automated hypertext outline generation for documents |
US6049799A (en) * | 1997-05-12 | 2000-04-11 | Novell, Inc. | Document link management using directory services |
US6072481A (en) * | 1997-09-10 | 2000-06-06 | Comnes Co., Ltd | Electronic catalog data creating and/or displaying apparatus and method |
US6009442A (en) * | 1997-10-08 | 1999-12-28 | Caere Corporation | Computer-based document management system |
US6038567A (en) * | 1998-02-19 | 2000-03-14 | Microsoft Corporation | Method and system for propagating object properties in a desktop publishing program |
Cited By (233)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7428547B2 (en) * | 1998-01-26 | 2008-09-23 | At&T Corp. | System and method of organizing data to facilitate access and streaming |
US20080228825A1 (en) * | 1998-01-26 | 2008-09-18 | At&T Corp. | System and method of organizing data to facilitate access and streaming |
US8046338B2 (en) | 1998-01-26 | 2011-10-25 | At&T Intellectual Property Ii, L.P. | System and method of organizing data to facilitate access and streaming |
US20040167916A1 (en) * | 1998-01-26 | 2004-08-26 | At&T Corp. | System and method of organizing data to facilitate access and streaming |
US6470364B1 (en) | 1998-02-24 | 2002-10-22 | Sun Microsystems, Inc. | Method and apparatus for generating text components |
US6480206B2 (en) | 1998-02-24 | 2002-11-12 | Sun Microsystems, Inc. | Method and apparatus for an extensible editor |
US20020019936A1 (en) * | 1998-03-03 | 2002-02-14 | David Hitz | File access control in a multi-protocol file server |
US7152208B2 (en) * | 1998-07-24 | 2006-12-19 | Fujitsu Limited | Apparatus managing document distribution |
US6606642B2 (en) * | 1998-11-30 | 2003-08-12 | Microsoft Corporation | System, method, and computer program product for workflow processing using internet interoperable electronic messaging with MIME multipart content type |
US6393456B1 (en) * | 1998-11-30 | 2002-05-21 | Microsoft Corporation | System, method, and computer program product for workflow processing using internet interoperable electronic messaging with mime multiple content type |
US6970925B1 (en) * | 1999-02-03 | 2005-11-29 | William H. Gates, III | Method and system for property notification |
US6592628B1 (en) * | 1999-02-23 | 2003-07-15 | Sun Microsystems, Inc. | Modular storage method and apparatus for use with software applications |
US20060041493A1 (en) * | 1999-04-13 | 2006-02-23 | Mirror Imaging, L.L.C. | Method of obtaining an electronically-stored financial document |
US10402447B1 (en) | 1999-04-13 | 2019-09-03 | Mirror Imaging L.L.C. | Remote document retrieval and storage system |
US7552118B2 (en) | 1999-04-13 | 2009-06-23 | Mirror Imaging Llc | Method of obtaining an electronically-stored financial document |
US6963866B2 (en) | 1999-04-13 | 2005-11-08 | Mirror Imaging L.L.C. | Method of obtaining an electronically stored financial document |
US20090259668A1 (en) * | 1999-04-13 | 2009-10-15 | Schulze Michael D | Method of obtaining electronically-stored financial documents |
US9141612B2 (en) | 1999-04-13 | 2015-09-22 | Mirrior Imaging, LLC | Method of obtaining an electronically-stored financial document |
US7836067B2 (en) | 1999-04-13 | 2010-11-16 | Mirror Imaging, LLC | Method of obtaining electronically-stored financial documents |
US9928275B2 (en) | 1999-04-13 | 2018-03-27 | Mirror Imaging L.L.C. | Remote document retrieval and storage system |
US10013435B1 (en) | 1999-04-13 | 2018-07-03 | Mirror Imaging L.L.C. | Remote document retrieval and storage system |
US10262009B2 (en) | 1999-04-13 | 2019-04-16 | Mirror Imaging L.L.C. | Remote document retrieval and storage system |
US6675161B1 (en) * | 1999-05-04 | 2004-01-06 | Inktomi Corporation | Managing changes to a directory of electronic documents |
US6941302B1 (en) | 1999-05-04 | 2005-09-06 | Inktomi Corporation | Managing changes to a directory of electronic documents |
US9268748B2 (en) | 1999-05-21 | 2016-02-23 | E-Numerate Solutions, Inc. | System, method, and computer program product for outputting markup language documents |
US9262384B2 (en) | 1999-05-21 | 2016-02-16 | E-Numerate Solutions, Inc. | Markup language system, method, and computer program product |
US9262383B2 (en) | 1999-05-21 | 2016-02-16 | E-Numerate Solutions, Inc. | System, method, and computer program product for processing a markup document |
US6691119B1 (en) * | 1999-07-26 | 2004-02-10 | Microsoft Corporation | Translating property names and name space names according to different naming schemes |
US8103720B2 (en) | 1999-07-26 | 2012-01-24 | Microsoft Corporation | Apparatus and computer-readable media for processing HTTP requests |
US7689564B2 (en) * | 1999-07-26 | 2010-03-30 | Microsoft Corporation | Apparatus and computer-readable media for determining whether an existing map specifies a different content type than the content type that is specified for the specified resource name extension in a web distributed authoring and versioning (WebDAV) request |
US8359391B2 (en) | 1999-07-26 | 2013-01-22 | Microsoft Corporation | Apparatus and computer-readable media for processing HTTP requests determine scoping mapping between a mapped resource name extension and a content type |
US20050055333A1 (en) * | 1999-07-26 | 2005-03-10 | Microsoft Corporation | Apparatus and computer-readable media for processing HTTP requests |
US20100250666A1 (en) * | 1999-07-26 | 2010-09-30 | Microsoft Corporation | Apparatus and computer-readable media for processing http requests |
US6947991B1 (en) * | 1999-09-13 | 2005-09-20 | Novell, Inc. | Method and apparatus for exposing network administration stored in a directory using HTTP/WebDAV protocol |
US9336213B2 (en) | 1999-09-29 | 2016-05-10 | Valiyolah Tadayon | Active file system |
US6466983B1 (en) * | 1999-09-30 | 2002-10-15 | Steven Paul Strazza | Systems and methods for controlling access to data maintained in a repository |
US7444390B2 (en) * | 1999-10-20 | 2008-10-28 | Cdimensions, Inc. | Method and apparatus for providing a web-based active virtual file system |
US20040249902A1 (en) * | 1999-10-20 | 2004-12-09 | Vali Tadayon | Method and apparatus for providing a web-based active virtual file system |
US6950982B1 (en) | 1999-11-19 | 2005-09-27 | Xerox Corporation | Active annotation mechanism for document management systems |
US6370538B1 (en) * | 1999-11-22 | 2002-04-09 | Xerox Corporation | Direct manipulation interface for document properties |
US6694328B1 (en) * | 2000-01-13 | 2004-02-17 | International Business Machines Corporation | Method for creating queries on version objects |
US6449620B1 (en) * | 2000-03-02 | 2002-09-10 | Nimble Technology, Inc. | Method and apparatus for generating information pages using semi-structured data stored in a structured manner |
US20060265410A1 (en) * | 2000-03-02 | 2006-11-23 | Christianson David B | Method and apparatus for storing semi-structured data in a structured manner |
US7707159B2 (en) | 2000-03-02 | 2010-04-27 | Actuate Corporation | Method and apparatus for storing semi-structured data in a structured manner |
US6581062B1 (en) | 2000-03-02 | 2003-06-17 | Nimble Technology, Inc. | Method and apparatus for storing semi-structured data in a structured manner |
US7124144B2 (en) | 2000-03-02 | 2006-10-17 | Actuate Corporation | Method and apparatus for storing semi-structured data in a structured manner |
US6636250B1 (en) * | 2000-04-12 | 2003-10-21 | Emc Corp | Methods and apparatus for presenting information to a user of a computer system |
US6721785B1 (en) * | 2000-06-07 | 2004-04-13 | International Business Machines Corporation | System for directing e-mail to selected recipients by applying transmission control directives on aliases identifying lists of recipients to exclude or include recipients |
US7346848B1 (en) * | 2000-06-21 | 2008-03-18 | Microsoft Corporation | Single window navigation methods and systems |
US7712048B2 (en) | 2000-06-21 | 2010-05-04 | Microsoft Corporation | Task-sensitive methods and systems for displaying command sets |
US7673227B2 (en) | 2000-06-21 | 2010-03-02 | Microsoft Corporation | User interface for integrated spreadsheets and word processing tables |
US7689929B2 (en) | 2000-06-21 | 2010-03-30 | Microsoft Corporation | Methods and systems of providing information to computer users |
US7779027B2 (en) | 2000-06-21 | 2010-08-17 | Microsoft Corporation | Methods, systems, architectures and data structures for delivering software via a network |
US6874143B1 (en) | 2000-06-21 | 2005-03-29 | Microsoft Corporation | Architectures for and methods of providing network-based software extensions |
US7818677B2 (en) | 2000-06-21 | 2010-10-19 | Microsoft Corporation | Single window navigation methods and systems |
US7702997B2 (en) | 2000-06-21 | 2010-04-20 | Microsoft Corporation | Spreadsheet fields in text |
US8074217B2 (en) | 2000-06-21 | 2011-12-06 | Microsoft Corporation | Methods and systems for delivering software |
US7743063B2 (en) | 2000-06-21 | 2010-06-22 | Microsoft Corporation | Methods and systems for delivering software via a network |
US7900134B2 (en) | 2000-06-21 | 2011-03-01 | Microsoft Corporation | Authoring arbitrary XML documents using DHTML and XSLT |
US9507610B2 (en) | 2000-06-21 | 2016-11-29 | Microsoft Technology Licensing, Llc | Task-sensitive methods and systems for displaying command sets |
US7979856B2 (en) | 2000-06-21 | 2011-07-12 | Microsoft Corporation | Network-based software extensions |
US7743082B2 (en) * | 2000-06-23 | 2010-06-22 | Microsoft Corporation | Web server document library |
US7945602B2 (en) * | 2000-06-23 | 2011-05-17 | Microsoft Corporation | Web server document library |
US20050267917A1 (en) * | 2000-06-23 | 2005-12-01 | Microsoft Corporation | Web server document library |
US20100223286A1 (en) * | 2000-06-23 | 2010-09-02 | Microsoft Corporation | Web server document library |
US6915299B1 (en) * | 2000-06-23 | 2005-07-05 | Microsoft Corporation | Web server document library |
US8746565B2 (en) | 2000-07-18 | 2014-06-10 | Cutting Edge Codes, LLC | Barcode device |
US8763907B2 (en) | 2000-07-18 | 2014-07-01 | Cutting Edge Codes Llc | Barcode device |
US8733658B2 (en) | 2000-07-18 | 2014-05-27 | Cutting Edge Codes Llc | Barcode device |
US8733657B2 (en) | 2000-07-18 | 2014-05-27 | Cutting Edge Codes Llc | Barcode device |
US7756904B2 (en) | 2000-08-01 | 2010-07-13 | Actuate Corporation | Nested conditional relations (NCR) model and algebra |
US20050060352A1 (en) * | 2000-08-03 | 2005-03-17 | Microsoft Corporation | Storing locally a file received from a remote location |
US20050060351A1 (en) * | 2000-08-03 | 2005-03-17 | Microsoft Corporation | Graphical user interface for automatically accessing files |
US20050097102A1 (en) * | 2000-08-03 | 2005-05-05 | Microsoft Corporation | Searching to identify web page(s) |
US20050108238A1 (en) * | 2000-08-03 | 2005-05-19 | Microsoft Corporation | Web page identifiers |
US7493332B2 (en) | 2000-08-03 | 2009-02-17 | Microsoft Corporation | Storing locally a file received from a remote location |
US6832220B1 (en) * | 2000-08-03 | 2004-12-14 | Microsoft Corporation | Method and apparatus for file searching, accessing file identifiers from reference page |
US7333978B2 (en) | 2000-08-03 | 2008-02-19 | Microsoft Corporation | Searching to identify web page(s) |
US8799764B2 (en) | 2000-08-08 | 2014-08-05 | Cisco Technology, Inc. | Method and system for parameterized web documents |
US20060206796A1 (en) * | 2000-08-08 | 2006-09-14 | Kausik Balas N | Method and system for parameterized web documents |
US6957224B1 (en) * | 2000-09-11 | 2005-10-18 | International Business Machines Corporation | Efficient retrieval of uniform resource locators |
US20040193364A1 (en) * | 2000-09-18 | 2004-09-30 | Robert Chojnacki | Computing system with decryption functions and secure data product |
US7640595B2 (en) | 2000-09-18 | 2009-12-29 | Navteq North America, Llc | Computing system with decryption functions and secure data product |
US7613917B1 (en) * | 2000-09-18 | 2009-11-03 | Navteq North America, Llc | Method and system for mass distribution of geographic data for navigation systems |
US7152062B1 (en) | 2000-11-21 | 2006-12-19 | Actuate Corporation | Technique for encapsulating a query definition |
US20020087594A1 (en) * | 2001-01-03 | 2002-07-04 | International Business Machines Corporation | Methods, systems and computer program products for subscriber customized generation of publications |
US9600842B2 (en) | 2001-01-24 | 2017-03-21 | E-Numerate Solutions, Inc. | RDX enhancement of system and method for implementing reusable data markup language (RDL) |
US20070226371A1 (en) * | 2001-03-23 | 2007-09-27 | Fineground Networks | Method and system for class-based management of dynamic content in a networked environment |
US20070226229A1 (en) * | 2001-03-23 | 2007-09-27 | Fineground Networks | Method and system for class-based management of dynamic content in a networked environment |
US7603483B2 (en) | 2001-03-23 | 2009-10-13 | Cisco Technology, Inc. | Method and system for class-based management of dynamic content in a networked environment |
US7802014B2 (en) * | 2001-03-23 | 2010-09-21 | Cisco Technology, Inc. | Method and system for class-based management of dynamic content in a networked environment |
US7783616B2 (en) * | 2001-03-27 | 2010-08-24 | Bea Systems, Inc. | System and method for managing objects and resources with access rights embedded in nodes within a hierarchical tree structure |
US20060155677A1 (en) * | 2001-03-27 | 2006-07-13 | Fred Moses | System and method for managing objects and resources with access rights embedded in nodes within a hierarchical tree structure |
US20030055991A1 (en) * | 2001-09-20 | 2003-03-20 | Sun Microsystems, Inc. | Access control for an e-commerce application |
US7120698B2 (en) * | 2001-09-20 | 2006-10-10 | Sun Microsystems, Inc. | Access control for an e-commerce application |
US20050080804A1 (en) * | 2001-10-30 | 2005-04-14 | Bradshaw Robert David | System and method for maintaining componentized content |
US7725490B2 (en) * | 2001-11-16 | 2010-05-25 | Crucian Global Services, Inc. | Collaborative file access management system |
US20030105734A1 (en) * | 2001-11-16 | 2003-06-05 | Hitchen Stephen M. | Collaborative file access management system |
US20060173832A1 (en) * | 2002-01-18 | 2006-08-03 | Bea Systems, Inc. | Systems and methods for dynamic querying |
US7587417B2 (en) | 2002-01-18 | 2009-09-08 | Bea Systems, Inc. | Systems and methods for dynamic querying |
US20030163460A1 (en) * | 2002-01-18 | 2003-08-28 | Matthew Shinn | Systems and methods for dynamic querying |
US7454438B2 (en) | 2002-01-18 | 2008-11-18 | Bea Systems, Inc. | System and methods for dynamic querying |
US20060173835A1 (en) * | 2002-01-18 | 2006-08-03 | Bea System, Inc. | System and methods for dynamic querying |
WO2003067475A1 (en) * | 2002-02-08 | 2003-08-14 | Interwoven | System and method for maintaining componentized content |
US20070195960A1 (en) * | 2002-04-12 | 2007-08-23 | General Dynamics Advanced Information Systems | Apparatus and method for encrypting data |
US8127217B2 (en) | 2002-04-19 | 2012-02-28 | Kabushiki Kaisha Toshiba | Document management system for transferring a plurality of documents |
US7532340B2 (en) * | 2002-04-19 | 2009-05-12 | Toshiba Tec Kabushiki Kaisha | Document management system rule-based automation |
US20030200234A1 (en) * | 2002-04-19 | 2003-10-23 | George Koppich | Document management system rule-based automation |
WO2003090096A1 (en) * | 2002-04-19 | 2003-10-30 | Toshiba Tec Kabushiki Kaisha | Document management system |
US20090049078A1 (en) * | 2002-04-23 | 2009-02-19 | International Business Machines Corporation | Autofoldering process in content management |
US7143341B1 (en) * | 2002-06-20 | 2006-11-28 | Cadence Design Systems | Method and apparatus for concurrent engineering and design synchronization of multiple tools |
US20040205622A1 (en) * | 2002-07-25 | 2004-10-14 | Xerox Corporation | Electronic filing system with scan-placeholders |
US8245137B2 (en) | 2002-07-25 | 2012-08-14 | Xerox Corporation | Electronic filing system with scan-placeholders |
US20040019613A1 (en) * | 2002-07-25 | 2004-01-29 | Xerox Corporation | Electronic filing system with file-placeholders |
US6868424B2 (en) | 2002-07-25 | 2005-03-15 | Xerox Corporation | Electronic filing system with file-placeholders |
US20040078528A1 (en) * | 2002-07-31 | 2004-04-22 | Texas Instruments Incorporated | Cache coherency in a multi-processor system |
US20040064473A1 (en) * | 2002-10-01 | 2004-04-01 | Honda Giken Kogyo Kabushiki Kaisha | Storage of selected e-mails including attachments in document management system |
US8443045B2 (en) | 2002-10-01 | 2013-05-14 | Honda Motor Co., Ltd. | Storage of selected e-mails including attachments in document management system |
US20060069726A1 (en) * | 2002-12-11 | 2006-03-30 | Leader Technologies, Inc. | Hospitality environment communications architecture |
US8195714B2 (en) * | 2002-12-11 | 2012-06-05 | Leaper Technologies, Inc. | Context instantiated application protocol |
US20040123242A1 (en) * | 2002-12-11 | 2004-06-24 | Mckibben Michael T. | Context instantiated application protocol |
US7925246B2 (en) | 2002-12-11 | 2011-04-12 | Leader Technologies, Inc. | Radio/telephony interoperability system |
US20060080344A1 (en) * | 2002-12-11 | 2006-04-13 | Leader Technologies, Inc. | Radio/telephony interoperability system |
US7289973B2 (en) | 2002-12-19 | 2007-10-30 | Mathon Systems, Inc. | Graphical user interface for system and method for managing content |
US7386531B2 (en) | 2002-12-19 | 2008-06-10 | Mathon Systems, Inc. | System and method for managing content |
US7386529B2 (en) | 2002-12-19 | 2008-06-10 | Mathon Systems, Inc. | System and method for managing content with event driven actions to facilitate workflow and other features |
US20040133589A1 (en) * | 2002-12-19 | 2004-07-08 | Rick Kiessig | System and method for managing content |
US7386532B2 (en) | 2002-12-19 | 2008-06-10 | Mathon Systems, Inc. | System and method for managing versions |
US20040133588A1 (en) * | 2002-12-19 | 2004-07-08 | Rick Kiessig | Graphical user interface for system and method for managing content |
US20040133545A1 (en) * | 2002-12-19 | 2004-07-08 | Rick Kiessig | System and method for managing content including addressability features |
US20080059495A1 (en) * | 2002-12-19 | 2008-03-06 | Rick Kiessig | Graphical User Interface for System and Method for Managing Content |
US7386530B2 (en) | 2002-12-19 | 2008-06-10 | Mathon Systems, Inc. | System and method for managing content including addressability features |
US8918729B2 (en) | 2003-03-24 | 2014-12-23 | Microsoft Corporation | Designing electronic forms |
US7925621B2 (en) | 2003-03-24 | 2011-04-12 | Microsoft Corporation | Installing a solution |
US9229917B2 (en) | 2003-03-28 | 2016-01-05 | Microsoft Technology Licensing, Llc | Electronic form user interfaces |
US7865477B2 (en) | 2003-03-28 | 2011-01-04 | Microsoft Corporation | System and method for real-time validation of structured data files |
US7913159B2 (en) | 2003-03-28 | 2011-03-22 | Microsoft Corporation | System and method for real-time validation of structured data files |
US20060248105A1 (en) * | 2003-05-14 | 2006-11-02 | Goradia Gautam D | Interactive system for building and sharing databank |
US8078960B2 (en) | 2003-06-30 | 2011-12-13 | Microsoft Corporation | Rendering an HTML electronic form by applying XSLT to XML using a solution |
US8892993B2 (en) | 2003-08-01 | 2014-11-18 | Microsoft Corporation | Translation file |
US9239821B2 (en) | 2003-08-01 | 2016-01-19 | Microsoft Technology Licensing, Llc | Translation file |
US7971139B2 (en) | 2003-08-06 | 2011-06-28 | Microsoft Corporation | Correlation, association, or correspondence of electronic forms |
US9268760B2 (en) | 2003-08-06 | 2016-02-23 | Microsoft Technology Licensing, Llc | Correlation, association, or correspondence of electronic forms |
US8429522B2 (en) | 2003-08-06 | 2013-04-23 | Microsoft Corporation | Correlation, association, or correspondence of electronic forms |
US20050038788A1 (en) * | 2003-08-14 | 2005-02-17 | International Business Machines Corporation | Annotation security to prevent the divulgence of sensitive information |
US7743060B2 (en) | 2004-01-26 | 2010-06-22 | International Business Machines Corporation | Architecture for an indexer |
US7293005B2 (en) | 2004-01-26 | 2007-11-06 | International Business Machines Corporation | Pipelined architecture for global analysis and index building |
US20050165800A1 (en) * | 2004-01-26 | 2005-07-28 | Fontoura Marcus F. | Method, system, and program for handling redirects in a search engine |
US20050165718A1 (en) * | 2004-01-26 | 2005-07-28 | Fontoura Marcus F. | Pipelined architecture for global analysis and index building |
US20050165781A1 (en) * | 2004-01-26 | 2005-07-28 | Reiner Kraft | Method, system, and program for handling anchor text |
US7499913B2 (en) | 2004-01-26 | 2009-03-03 | International Business Machines Corporation | Method for handling anchor text |
US7783626B2 (en) | 2004-01-26 | 2010-08-24 | International Business Machines Corporation | Pipelined architecture for global analysis and index building |
US8296304B2 (en) | 2004-01-26 | 2012-10-23 | International Business Machines Corporation | Method, system, and program for handling redirects in a search engine |
US8285724B2 (en) | 2004-01-26 | 2012-10-09 | International Business Machines Corporation | System and program for handling anchor text |
US20070282829A1 (en) * | 2004-01-26 | 2007-12-06 | International Business Machines Corporation | Pipelined architecture for global analysis and index building |
US20050165838A1 (en) * | 2004-01-26 | 2005-07-28 | Fontoura Marcus F. | Architecture for an indexer |
US7424467B2 (en) | 2004-01-26 | 2008-09-09 | International Business Machines Corporation | Architecture for an indexer with fixed width sort and variable width sort |
US8819072B1 (en) | 2004-02-02 | 2014-08-26 | Microsoft Corporation | Promoting data from structured data files |
US20070198246A1 (en) * | 2004-03-03 | 2007-08-23 | Goradia Gautam D | Interactive system for building, organising, and sharing one's own encyclopedia in one or more languages |
WO2005081637A2 (en) * | 2004-03-03 | 2005-09-09 | Gautam Dharamdas Goradia | Interactive system for building, organising, and sharing one’s own databank of works of literature in one or more languages |
WO2005081637A3 (en) * | 2004-03-03 | 2006-08-24 | Gautam Dharamdas Goradia | Interactive system for building, organising, and sharing one’s own databank of works of literature in one or more languages |
US7281018B1 (en) | 2004-05-26 | 2007-10-09 | Microsoft Corporation | Form template data source change |
US7774620B1 (en) | 2004-05-27 | 2010-08-10 | Microsoft Corporation | Executing applications at appropriate trust levels |
US7676843B1 (en) | 2004-05-27 | 2010-03-09 | Microsoft Corporation | Executing applications at appropriate trust levels |
US20060020668A1 (en) * | 2004-07-22 | 2006-01-26 | International Business Machines Corporation | System and method for duplicate e-mail content detection and automatic doclink conversion |
US8631077B2 (en) | 2004-07-22 | 2014-01-14 | International Business Machines Corporation | Duplicate e-mail content detection and automatic doclink conversion |
USRE45184E1 (en) | 2004-08-19 | 2014-10-07 | International Business Machines Corporation | Sectional E-mail transmission |
US8346759B2 (en) | 2004-09-24 | 2013-01-01 | International Business Machines Corporation | Searching documents for ranges of numeric values |
US20080301130A1 (en) * | 2004-09-24 | 2008-12-04 | International Business Machines Corporation | Method, system and article of manufacture for searching documents for ranges of numeric values |
US8655888B2 (en) | 2004-09-24 | 2014-02-18 | International Business Machines Corporation | Searching documents for ranges of numeric values |
US8271498B2 (en) | 2004-09-24 | 2012-09-18 | International Business Machines Corporation | Searching documents for ranges of numeric values |
US20060074962A1 (en) * | 2004-09-24 | 2006-04-06 | Fontoura Marcus F | Method, system, and program for searching documents for ranges of numeric values |
US7461064B2 (en) | 2004-09-24 | 2008-12-02 | International Buiness Machines Corporation | Method for searching documents for ranges of numeric values |
US20060074980A1 (en) * | 2004-09-29 | 2006-04-06 | Sarkar Pte. Ltd. | System for semantically disambiguating text information |
US7692636B2 (en) | 2004-09-30 | 2010-04-06 | Microsoft Corporation | Systems and methods for handwriting to a screen |
US8487879B2 (en) | 2004-10-29 | 2013-07-16 | Microsoft Corporation | Systems and methods for interacting with a computer through handwriting to a screen |
US20080147957A1 (en) * | 2004-11-12 | 2008-06-19 | Justsystems Corporation | Archiver Device, Data Acquisition Device, and Data Acquisition Method |
US7712022B2 (en) | 2004-11-15 | 2010-05-04 | Microsoft Corporation | Mutually exclusive options in electronic forms |
US7721190B2 (en) | 2004-11-16 | 2010-05-18 | Microsoft Corporation | Methods and systems for server side form processing |
US7904801B2 (en) | 2004-12-15 | 2011-03-08 | Microsoft Corporation | Recursive sections in electronic forms |
US20070226204A1 (en) * | 2004-12-23 | 2007-09-27 | David Feldman | Content-based user interface for document management |
US7937651B2 (en) | 2005-01-14 | 2011-05-03 | Microsoft Corporation | Structural editing operations for network forms |
US7725834B2 (en) | 2005-03-04 | 2010-05-25 | Microsoft Corporation | Designer-created aspect for an electronic form template |
US20060235899A1 (en) * | 2005-03-25 | 2006-10-19 | Frontline Systems, Inc. | Method of migrating legacy database systems |
US8010515B2 (en) | 2005-04-15 | 2011-08-30 | Microsoft Corporation | Query to an electronic form |
US20090046344A1 (en) * | 2005-05-26 | 2009-02-19 | Canon Kabushiki Kaisha | Optical scanning apparatus and image-forming apparatus |
US8200975B2 (en) | 2005-06-29 | 2012-06-12 | Microsoft Corporation | Digital signatures for network forms |
US20070016583A1 (en) * | 2005-07-14 | 2007-01-18 | Ronny Lempel | Enforcing native access control to indexed documents |
US8417693B2 (en) | 2005-07-14 | 2013-04-09 | International Business Machines Corporation | Enforcing native access control to indexed documents |
US8688673B2 (en) | 2005-09-27 | 2014-04-01 | Sarkar Pte Ltd | System for communication and collaboration |
US9210234B2 (en) | 2005-12-05 | 2015-12-08 | Microsoft Technology Licensing, Llc | Enabling electronic documents for limited-capability computing devices |
US8001459B2 (en) | 2005-12-05 | 2011-08-16 | Microsoft Corporation | Enabling electronic documents for limited-capability computing devices |
US8738672B1 (en) | 2005-12-29 | 2014-05-27 | United Services Automobile Association (Usaa) | Document management system user interfaces |
US8122070B1 (en) | 2005-12-29 | 2012-02-21 | United States Automobile Association (USAA) | Document management system user interfaces |
US7779343B2 (en) | 2006-01-30 | 2010-08-17 | Microsoft Corporation | Opening network-enabled electronic documents |
US20070206856A1 (en) * | 2006-03-02 | 2007-09-06 | Toyohisa Matsuda | Methods and Systems for Detecting Regions in Digital Images |
US20070206855A1 (en) * | 2006-03-02 | 2007-09-06 | Sharp Laboratories Of America, Inc. | Methods and systems for detecting regions in digital images |
US7889932B2 (en) | 2006-03-02 | 2011-02-15 | Sharp Laboratories Of America, Inc. | Methods and systems for detecting regions in digital images |
US8630498B2 (en) | 2006-03-02 | 2014-01-14 | Sharp Laboratories Of America, Inc. | Methods and systems for detecting pictorial regions in digital images |
US7792359B2 (en) | 2006-03-02 | 2010-09-07 | Sharp Laboratories Of America, Inc. | Methods and systems for detecting regions in digital images |
US20070291288A1 (en) * | 2006-06-15 | 2007-12-20 | Richard John Campbell | Methods and Systems for Segmenting a Digital Image into Regions |
US8368956B2 (en) | 2006-06-15 | 2013-02-05 | Sharp Laboratories Of America, Inc. | Methods and systems for segmenting a digital image into regions |
US8437054B2 (en) | 2006-06-15 | 2013-05-07 | Sharp Laboratories Of America, Inc. | Methods and systems for identifying regions of substantially uniform color in a digital image |
US20110096993A1 (en) * | 2006-06-15 | 2011-04-28 | Richard John Campbell | Methods and Systems for Segmenting a Digital Image into Regions |
US7864365B2 (en) | 2006-06-15 | 2011-01-04 | Sharp Laboratories Of America, Inc. | Methods and systems for segmenting a digital image into regions |
US8150166B2 (en) | 2006-09-06 | 2012-04-03 | Sharp Laboratories Of America, Inc. | Methods and systems for identifying text in digital images |
US20080056573A1 (en) * | 2006-09-06 | 2008-03-06 | Toyohisa Matsuda | Methods and Systems for Identifying Text in Digital Images |
US20110110596A1 (en) * | 2006-09-06 | 2011-05-12 | Toyohisa Matsuda | Methods and Systems for Identifying Text in Digital Images |
US7876959B2 (en) | 2006-09-06 | 2011-01-25 | Sharp Laboratories Of America, Inc. | Methods and systems for identifying text in digital images |
US20080066049A1 (en) * | 2006-09-12 | 2008-03-13 | Sandeep Jain | Method for enforcing change policy based on project state |
US8645906B2 (en) * | 2006-09-12 | 2014-02-04 | Sandeep Jain | Method for enforcing change policy based on project state |
US20080086483A1 (en) * | 2006-10-10 | 2008-04-10 | Postech Academy-Industry Foundation | File service system in personal area network |
US20080216009A1 (en) * | 2007-03-02 | 2008-09-04 | Paul Drallos | Virtual Library File System |
US20080263449A1 (en) * | 2007-04-20 | 2008-10-23 | Microsoft Corporation | Automated maintenance of pooled media content |
US8131762B2 (en) | 2007-05-15 | 2012-03-06 | Palo Alto Research Center Incorporated | Method and system for metadata-driven document management and access control |
US20080288862A1 (en) * | 2007-05-15 | 2008-11-20 | Smetters Diana K | Method and system for in-document markup in support of information sharing |
US8966362B2 (en) | 2007-05-15 | 2015-02-24 | Palo Alto Research Center Incorporated | Method and system for in-document markup in support of information sharing |
US20110196896A1 (en) * | 2007-05-15 | 2011-08-11 | Palo Alto Research Center Incorporated | Method and system for metadata-driven document management and access control |
US7933889B2 (en) | 2007-05-15 | 2011-04-26 | Palo Alto Research Center Incorporated | Method and system for metadata-driven document management and access control |
US20080288453A1 (en) * | 2007-05-15 | 2008-11-20 | Smetters Diana K | Method and system for metadata-driven document management and access control |
US8014596B2 (en) | 2007-10-30 | 2011-09-06 | Sharp Laboratories Of America, Inc. | Methods and systems for background color extrapolation |
US8121403B2 (en) | 2007-10-30 | 2012-02-21 | Sharp Laboratories Of America, Inc. | Methods and systems for glyph-pixel selection |
US20090110319A1 (en) * | 2007-10-30 | 2009-04-30 | Campbell Richard J | Methods and Systems for Background Color Extrapolation |
US20090172005A1 (en) * | 2007-12-28 | 2009-07-02 | Microsoft Corporation | Discovering and Updating Templates |
US7933871B2 (en) | 2007-12-28 | 2011-04-26 | Microsoft Corporation | Discovering and updating templates |
US8688733B2 (en) * | 2012-03-16 | 2014-04-01 | International Business Machines Corporation | Remote inventory manager |
US20130290304A1 (en) * | 2012-04-25 | 2013-10-31 | Estsoft Corp. | System and method for separating documents |
US10067917B2 (en) | 2013-01-31 | 2018-09-04 | Bluebeam, Inc. | Method for managing and selectively arranging sets of multiple documents and pages within documents |
US10733357B2 (en) | 2013-01-31 | 2020-08-04 | Bluebeam, Inc. | Method for managing and selectively arranging sets of multiple documents and pages within documents |
US11341314B2 (en) | 2013-01-31 | 2022-05-24 | Bluebeam, Inc. | Method for managing and selectively arranging sets of multiple documents and pages within documents |
US10387010B2 (en) | 2016-02-12 | 2019-08-20 | Bluebeam, Inc. | Method of computerized presentation of a document set view for auditing information and managing sets of multiple documents and pages |
US10936172B2 (en) | 2016-02-12 | 2021-03-02 | Bluebeam, Inc. | Method of computerized presentation of a document set view for auditing information and managing sets of multiple documents and pages |
US10824671B2 (en) | 2016-04-08 | 2020-11-03 | International Business Machines Corporation | Organizing multiple versions of content |
Also Published As
Publication number | Publication date |
---|---|
JP2000090076A (en) | 2000-03-31 |
EP1003110A3 (en) | 2001-01-17 |
EP1003110A2 (en) | 2000-05-24 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US6308179B1 (en) | User level controlled mechanism inter-positioned in a read/write path of a property-based document management system | |
US6269380B1 (en) | Property based mechanism for flexibility supporting front-end and back-end components having different communication protocols | |
US6562076B2 (en) | Extending application behavior through active properties attached to a document in a document management system | |
US7086000B2 (en) | Tagging related files in a document management system | |
US6240429B1 (en) | Using attached properties to provide document services | |
US6324551B1 (en) | Self-contained document management based on document properties | |
US6253217B1 (en) | Active properties for dynamic document management system configuration | |
US6397231B1 (en) | Virtual documents generated via combined documents or portions of documents retrieved from data repositories | |
US8117226B2 (en) | System and method for virtual folder sharing including utilization of static and dynamic lists | |
US6330573B1 (en) | Maintaining document identity across hierarchy and non-hierarchy file systems | |
US7526483B2 (en) | System and method for virtual folder sharing including utilization of static and dynamic lists | |
US7769768B2 (en) | Methods, apparatus and computer programs for visualization and management of data organization within a data processing system | |
US7536386B2 (en) | System and method for sharing items in a computer system | |
Karger et al. | Haystack: A customizable general-purpose information management tool for end users of semistructured data | |
JP5787963B2 (en) | Computer platform programming interface | |
US6370553B1 (en) | Atomic and molecular documents | |
US7627583B2 (en) | Methods, apparatus and computer programs for visualization and management of data organisation within a data processing system | |
Dourish et al. | Using properties for uniform interaction in the Presto document system | |
EP1526450A2 (en) | Programming interface for a computer platform having services related to reusable controls, dialogs, wizard, desktop and extension of the user interface. | |
AU2004279189B2 (en) | System and a method for presenting related items to a user | |
AU2004279176A8 (en) | System and a method for presenting items to a user with a contextual presentation | |
US20020089551A1 (en) | Method and apparatus for displaying a thought network from a thought's perspective | |
Karger | Haystack: Per-user information environments based on semistructured data | |
Dourish et al. | Uniform document interactions using document properties | |
KR20070028981A (en) | Knowledge extensible internet document publishing system adopting file object technology |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: XEROX CORPORATION, CONNECTICUTFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:PETERSEN, KARIN;DOURISH, JAMES P.;EDWARDS, WARREN K.;AND OTHERS;REEL/FRAME:009449/0120Effective date: 19980831 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
AS | Assignment |
Owner name: BANK ONE, NA, AS ADMINISTRATIVE AGENT, ILLINOISFree format text: SECURITY INTEREST;ASSIGNOR:XEROX CORPORATION;REEL/FRAME:013153/0001Effective date: 20020621 |
|
AS | Assignment |
Owner name: JPMORGAN CHASE BANK, AS COLLATERAL AGENT, TEXASFree format text: SECURITY AGREEMENT;ASSIGNOR:XEROX CORPORATION;REEL/FRAME:015134/0476Effective date: 20030625Owner name: JPMORGAN CHASE BANK, AS COLLATERAL AGENT,TEXASFree format text: SECURITY AGREEMENT;ASSIGNOR:XEROX CORPORATION;REEL/FRAME:015134/0476Effective date: 20030625 |
|
FEPP | Fee payment procedure |
Free format text: PAYOR NUMBER ASSIGNED (ORIGINAL EVENT CODE: ASPN); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
FPAY | Fee payment |
Year of fee payment: 8 |
|
AS | Assignment |
Owner name: XEROX CORPORATION, NEW YORKFree format text: RELEASE BY SECURED PARTY;ASSIGNOR:BANK ONE, NA;REEL/FRAME:026954/0348Effective date: 20030625Owner name: XEROX CORPORATION, NEW YORKFree format text: RELEASE BY SECURED PARTY;ASSIGNOR:JPMORGAN CHASE BANK, N.A.;REEL/FRAME:026955/0001Effective date: 20061204 |
|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:XEROX CORPORATION;REEL/FRAME:027728/0811Effective date: 20111110 |
|
FPAY | Fee payment |
Year of fee payment: 12 |
|
AS | Assignment |
Owner name: FIELDSTACK, LLC, MAINEFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:GOOGLE INC.;REEL/FRAME:038084/0914Effective date: 20160304 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044144/0001Effective date: 20170929 |
|
AS | Assignment |
Owner name: XEROX CORPORATION, CONNECTICUTFree format text: RELEASE BY SECURED PARTY;ASSIGNOR:JPMORGAN CHASE BANK, N.A. AS SUCCESSOR-IN-INTEREST ADMINISTRATIVE AGENT AND COLLATERAL AGENT TO JPMORGAN CHASE BANK;REEL/FRAME:066728/0193Effective date: 20220822 |
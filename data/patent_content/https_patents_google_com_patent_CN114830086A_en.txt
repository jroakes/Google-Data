CN114830086A - Operating system level distributed environment computing - Google Patents
Operating system level distributed environment computing Download PDFInfo
- Publication number
- CN114830086A CN114830086A CN202080087224.4A CN202080087224A CN114830086A CN 114830086 A CN114830086 A CN 114830086A CN 202080087224 A CN202080087224 A CN 202080087224A CN 114830086 A CN114830086 A CN 114830086A
- Authority
- CN
- China
- Prior art keywords
- devices
- task
- user
- additional devices
- location
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Pending
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F9/00—Arrangements for program control, e.g. control units
- G06F9/06—Arrangements for program control, e.g. control units using stored programs, i.e. using an internal store of processing equipment to receive or retain programs
- G06F9/46—Multiprogramming arrangements
- G06F9/48—Program initiating; Program switching, e.g. by interrupt
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F9/00—Arrangements for program control, e.g. control units
- G06F9/06—Arrangements for program control, e.g. control units using stored programs, i.e. using an internal store of processing equipment to receive or retain programs
- G06F9/46—Multiprogramming arrangements
- G06F9/48—Program initiating; Program switching, e.g. by interrupt
- G06F9/4806—Task transfer initiation or dispatching
- G06F9/4843—Task transfer initiation or dispatching by program, e.g. task dispatcher, supervisor, operating system
- G06F9/485—Task life-cycle, e.g. stopping, restarting, resuming execution
- G06F9/4856—Task life-cycle, e.g. stopping, restarting, resuming execution resumption being on a different machine, e.g. task migration, virtual machine migration
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F9/00—Arrangements for program control, e.g. control units
- G06F9/06—Arrangements for program control, e.g. control units using stored programs, i.e. using an internal store of processing equipment to receive or retain programs
- G06F9/46—Multiprogramming arrangements
- G06F9/50—Allocation of resources, e.g. of the central processing unit [CPU]
- G06F9/5005—Allocation of resources, e.g. of the central processing unit [CPU] to service a request
- G06F9/5027—Allocation of resources, e.g. of the central processing unit [CPU] to service a request the resource being a machine, e.g. CPUs, Servers, Terminals
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F9/00—Arrangements for program control, e.g. control units
- G06F9/06—Arrangements for program control, e.g. control units using stored programs, i.e. using an internal store of processing equipment to receive or retain programs
- G06F9/46—Multiprogramming arrangements
- G06F9/52—Program synchronisation; Mutual exclusion, e.g. by means of semaphores
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F2209/00—Indexing scheme relating to G06F9/00
- G06F2209/50—Indexing scheme relating to G06F9/50
- G06F2209/506—Constraint
Abstract
Systems and methods of distributed environment computing are described. A method may include detecting, by a computing device associated with a user environment, a plurality of additional devices associated with the user environment, determining, for the plurality of additional devices, a plurality of capabilities associated with the plurality of additional devices, and configuring, by the computing device, the plurality of additional devices as a distributed computing system. The method may also include receiving, at the computing device, a request to perform a task, selecting at least one additional device of a plurality of additional devices determined to be capable of performing the task, and triggering the selected device to perform the task.
Description
Cross Reference to Related Applications
The present application claims priority from U.S. non-provisional patent application No.16/727,349 entitled "OPERATING system level DISTRIBUTED environment COMPUTING (OPERATING SYSTEM LEVEL DISTRIBUTED architecture COMPUTING)" filed on 26.12.2019, which claims the benefit of U.S. provisional patent application No.62/949,929 entitled "OPERATING system level DISTRIBUTED environment COMPUTING (OPERATING SYSTEM LEVEL DISTRIBUTED architecture COMPUTING)" filed on 18.12.2019, each of which is incorporated herein by reference in its entirety.
The present application claims benefit of U.S. provisional patent application No.62/949,929 entitled "OPERATING system level DISTRIBUTED environment COMPUTING (OPERATING SYSTEM LEVEL disabled improved COMPUTING)" filed on 12, 18, 2019, which is incorporated herein by reference in its entirety.
Background
Conventional electronic devices may execute software using an operating system. For example, a mobile phone device may be configured to operate hardware and on-board software with a dedicated operating system that communicates between hardware components on the device. Such operating systems are typically intended to control and manage software and hardware functions on the device. The other electronic devices may operate in the same manner that the software for each respective individual device is executed using the respective on-board device operating system.
Disclosure of Invention
The systems and methods described herein may be used to generate distributed computing environments (e.g., systems) that utilize computing devices and/or other electronic devices as interchangeable modules for a distributed environment computing system that is capable of containing and/or accessing available devices within a defined location, building, complex, etc. A distributed environment computing system may be an operating system deployed on multiple devices to have a global view of the devices. A distributed environment computing system may use an operating system to distribute computing tasks across multiple devices. For example, various electronic devices owned and/or accessed by a user throughout the day are generally not configurable to function together in an environment, as such devices may not have a global understanding of other respective devices surrounding each of the various electronic devices.
The systems and methods described herein can be used to determine a global understanding of devices surrounding a defined location, and to configure various electronic devices as a distributed environment computing system that can be used to orchestrate and distribute tasks among one or more of the various electronic devices. Each device may be defined with and/or associated with sensors (e.g., for generating input/output) and capabilities for completing tasks. The systems and methods described herein may provide improved resource management between electronic devices within a defined location, such as a home or office. Users may be able to leverage the use of sensors and capabilities among multiple devices in their homes or offices, allowing for the performance of tasks that a single device previously could not perform alone in the home or office, or that have been difficult to perform. Thus, a user may be able to indicate completion of a technical task that may not previously have been completed by a single computing device alone. Further, the user may be able to do so without having to add one or more new computing devices to the defined location to perform the task (e.g., purchase additional computing devices). The systems and methods described herein may allow for a reduction in redundancy of sensors and capabilities in defined locations and for improved utilization of the sensors and capabilities. A user may be able to perform a wider variety of tasks, but use fewer computing devices in a defined location, which may have power consumption benefits and environmental benefits.
A system of one or more computers can be configured to perform particular operations or actions by installing software, firmware, hardware, or a combination thereof on the system that operates to cause the system to perform the actions. One or more computer programs may be configured to perform particular operations or actions by including instructions that, when executed by a data processing apparatus, cause the apparatus to perform the actions.
In a first general aspect, a computer-implemented method is described. The method may include detecting, by a computing device, a plurality of additional devices associated with a user environment, determining, for the plurality of additional devices, a plurality of capabilities associated with the plurality of additional devices, and configuring, by the computing device, the plurality of additional devices as a distributed computing system. The plurality of additional devices may correspond to at least one of the plurality of capabilities and a device location within the user environment. The method may also include receiving, at the computing device, a request to perform a task, determining, by the computing device, which additional devices of the plurality of additional devices are capable of performing the task, and selecting at least one additional device of the plurality of additional devices determined to be capable of performing the task. The selection may be based at least in part on the determined proximity of the plurality of additional devices to the computing device or to a user associated with the request to perform the task, the determined operating system executing on a respective device of the plurality of additional devices, and the determined sensor-based capabilities available on the respective device of the plurality of additional devices. The method may also include triggering, by the computing device, the selected device to perform the task.
Implementations may include any or all of the following aspects. In some implementations, selecting the at least one of the plurality of additional devices is further based on detected information associated with the user environment defined as a physical building containing the computing device and the plurality of additional devices. In some implementations, the detected information corresponds to a detected level of user activity in the user environment, a detected audio request in the user environment, or a detected visual image associated with the user environment. In some implementations, the method further includes selecting, by the computing device, a second device of the plurality of additional devices to generate an output corresponding to the task. The selection of the second device may be based at least in part on determining that the selected at least one of the plurality of additional devices is not suitable for generating and communicating output corresponding to the task.
In some implementations, the method further includes selecting, by the computing device, a second device of the plurality of additional devices to generate an output corresponding to the task. The selection of the second device may be based at least in part on determining that the location of the at least one of the plurality of additional devices is outside a predefined visual range or a predefined audio range of the user associated with the request to perform the task. In some implementations, triggering the selected device to perform the task includes generating visual and audio outputs. The visual and audio output may be provided on another one of the plurality of additional devices in response to determining a time of day outside of a predefined time period.
In some implementations, the method may further include triggering, by the computing device, the selected device to perform the task includes accessing, via an operating system associated with the computing device, at least one service in communication with a respective operating system executing on the selected at least one additional device. The service may be configured to dispatch the received task to at least one other device of the plurality of additional devices. In some implementations, selecting the at least one of the plurality of additional devices to perform the task includes determining a context for the user environment in which the context may be based on the detected information and stored information associated with one or more of the plurality of additional devices. In some implementations, the detected information includes calendar information. Implementations of the described technology may include hardware, methods or processes on computer-accessible media, and/or computer software.
In a second general aspect, a computer program product is described. The computer program product is tangibly embodied on a non-transitory computer-readable medium, the non-transitory computer-readable medium including instructions that, when executed, are configured to cause at least one processor to detect, by a computing device, a plurality of additional devices associated with a user environment, determine, for the plurality of additional devices, a plurality of capabilities associated with each of the respective additional devices, configure, by the computing device, the plurality of additional devices as a distributed computing system, the plurality of additional devices corresponding to at least one of the plurality of capabilities and a device location within the user environment, and receive, at the computing device, a request to perform a task. In response to determining that completion of execution of the task indicates use of two or more of the plurality of capabilities, the instructions may determine, within the distributed computing system, which additional devices of the plurality of additional devices are capable of executing the task, select, among the plurality of additional devices, at least two devices that share execution of the two or more capabilities to complete the task, the selection of the at least two devices based at least in part on the determined proximity of the two devices to the computing device or to a user associated with the request to execute the task. The instructions may trigger, by the computing device, the selected at least two devices to perform the task.
Implementations may include any or all of the following aspects. In some embodiments, the instructions may include selecting the at least two devices including configuring the at least two devices to communicate to perform a plurality of separate portions of the task. In some embodiments, selecting the at least two devices includes determining which of the plurality of devices include components configured to perform the two or more capabilities to complete the task, and configuring the at least two devices to communicate to complete the task. In some embodiments, at least one capability associated with at least one of the two devices extends a capability associated with the other of the at least two devices. In some embodiments, the performance of the task is triggered in the absence of an internet connection by a device in the distributed computing system. Implementations of the described technology may include hardware, methods or processes on computer-accessible media, and/or computer software.
In a third general aspect, a system is described that may include a display, a memory, and at least one processor coupled to the memory, the at least one processor configured to detect, by a computing device, a plurality of additional devices associated with a user environment, determine, for the plurality of additional devices, a plurality of capabilities associated with one or more additional devices of the plurality of additional devices, the plurality of additional devices configured, by the computing device, as a distributed computing system. The plurality of additional devices may correspond to at least one of the plurality of capabilities and a device location within the user environment. The processor may be further configured to receive, at the computing device, a request to perform a task, determine, by the computing device, which additional devices of the plurality of additional devices are capable of performing the task, select at least one additional device of the plurality of additional devices determined to be capable of performing the task, wherein the selection is based at least in part on the determined proximity of the plurality of devices to the computing device or to a user associated with the request to perform the task. The processor may be further configured to trigger, by the computing device, the selected device to perform the task.
Implementations may include any or all of the following aspects. In some implementations, configuring the plurality of additional devices as a distributed computing system includes implementing policies and user preferences associated with the user environment and the computing device for the plurality of additional devices, and in response to detecting an unidentified device within the user environment, performing a security check on the unidentified device, and configuring the policies and user preferences on the unidentified device if the unidentified device passes the security check.
In some implementations, the processor is further configured to display a graphical control element on the display of the computing device to enable user-selected control of the device selected to perform the task. In some implementations, the processor is further configured to select, by the computing device, a second device of the plurality of additional devices to generate an output corresponding to the task, the selection of the second device based at least in part on determining that the location of the at least one additional device of the plurality of additional devices is outside a predefined visual range or a predefined audio range of a user associated with the request to perform the task.
In some implementations, triggering the selected device to perform the task includes generating a visual output in response to determining that the computing device is within a threshold distance of a user associated with the received request to perform the task, the visual output being provided on the display of the computing device. In some implementations, triggering, by the computing device, the selected device to perform the task includes accessing, via an operating system associated with the computing device, at least one service in communication with the selected at least one additional device, the service configured to dispatch the received task to at least one other device of the plurality of additional devices. Implementations of the described technology may include hardware, methods or processes on computer-accessible media, and/or computer software.
The details of one or more implementations are set forth in the accompanying drawings and the description below. Other features will be apparent from the description and drawings, and from the claims.
Drawings
1A-1C are diagrams of example distributed environment computing systems, according to embodiments described herein.
FIG. 2 is a block diagram illustrating an example distributed environment computing system including multiple devices according to embodiments described herein.
3A-3B are block diagrams illustrating an example architecture for operating a distributed environment computing system according to embodiments described herein.
FIG. 4 is an example diagram illustrating task requests and the execution of tasks in a distributed environment computing system according to embodiments described herein.
5A-5C illustrate the use of two or more devices to perform a requested task according to embodiments described herein.
6A-6C illustrate an example distributed environment computing system for a home, according to embodiments described herein.
Fig. 7 is a diagram of an example of task execution using ambient devices within a home, according to embodiments described herein.
Fig. 8 illustrates provisioning of resources between environmental devices within a home according to embodiments described herein.
FIG. 9 illustrates a provisioning mode within a home using environment devices according to embodiments described herein.
10A-10B illustrate examples of task processing using multiple environment devices and a distributed storage log according to embodiments described herein.
11A-11B illustrate examples of coordinating activities and resources within a home using environment devices according to embodiments described herein.
Fig. 12 illustrates an example of coordinating activities and sharing resources with devices associated with a household according to embodiments described herein.
Fig. 13 is a diagram illustrating sharing of policies by an ambient device with other surrounding devices associated with a household according to embodiments described herein.
FIG. 14 is a diagram illustrating ambient device identification of at least two users according to embodiments described herein.
15A-15B illustrate example environmental device configurations for a home, according to embodiments described herein.
Fig. 16 is a diagram illustrating another example of an environment device configuration for home according to an embodiment described herein.
Fig. 17 illustrates another example of an ambient device configuration for a home according to embodiments described herein.
FIG. 18 is a diagram illustrating an example of an environmental device sharing policy and configuration details with other environmental devices associated with a household according to embodiments described herein.
Fig. 19 is a diagram illustrating an example of a third party sensor configured for home according to embodiments described herein.
FIG. 20 is a flowchart of an example process of operating a distributed environment computing system, according to embodiments described herein.
FIG. 21 is a flow diagram of an example process of operating a distributed environment computing system to share tasks among multiple devices according to embodiments described herein.
FIG. 22 illustrates an example of a computer device and a mobile computer device that can be used to implement the techniques described herein.
The use of like or identical reference numbers in the various figures is intended to indicate the presence of like or identical elements or features.
Detailed Description
This document describes a platform for operating environment computing devices (e.g., electronic devices) together as a distributed environment computing system. The platform can serve as a framework in which an operating system of each of the electronic devices (e.g., computing devices, environment devices, etc.) can be configured to execute and/or share execution of user-requested tasks in the environment devices. In general, the systems and methods described herein can utilize such a platform to distribute tasks (e.g., processing tasks, user requested tasks, service oriented tasks, etc.) in devices (e.g., home devices) that are detected within and/or otherwise associated with a predefined location (e.g., home). Tasks can be distributed based on device capabilities (e.g., sensors, processing power, hardware, software), policies, user preferences, user permissions, requests, user location, device context, and the like. In addition to device location, each device in a household may be defined as a set of inputs, a set of outputs, and a set of device capabilities.
The systems and methods described herein may use a different paradigm than conventional systems to provide distributed environment computing for task completion and presentation of content on one or more devices associated with a defined environment. For example, the systems and methods described herein may configure an electronic device to function together as a distributed operating system, where the operating system executes on multiple devices that may assign tasks to operate using device capabilities rather than using conventional device interactions in which each device typically operates using different hard-coded operating systems that may not be compatible for communicating and sharing tasks between multiple devices. Thus, the systems and methods described herein may provide advantages of increased communication efficiency between electronic devices and a reduced amount of data transmitted. Thus, the systems and methods employ a platform to transfer less data (or no data) from device to device, which may ensure secure data usage between distributed environment computing systems.
The platform described herein may include or access an operating system (O/S) class of distributed environment computing system that takes into account user needs, home/family needs, service needs, and device capabilities. In some embodiments, the O/S may operate distributively between environmental devices in a particular location, building, home, complex, etc. The systems and methods described herein may utilize a platform to perform tasks on electronic devices defined as part of a distributed environment computing system and located within (or associated with) a defined environment, and may do so based on user-configured permissions.
In some implementations, the platform can enable distribution of such tasks among two or more electronic devices in a defined environment. For example, the system and method may operate using a platform to access an O/S hierarchy architecture associated with one or more devices in a defined environment to detect and communicate with each device in the defined user environment. Other devices in the defined environment may not have the same O/S hierarchy architecture, and thus, the platform may instead utilize inputs and/or outputs associated with these devices to perform tasks in cooperation with other devices in the defined environment that are configured to work with the O/S hierarchy architecture.
In operation, the platform executed by the systems and methods described herein is capable of operating as an interface for accessing multiple unique operating systems (on different devices) and providing UI content, data, audio content, etc. on an electronic device that is detectable within a defined environment. For example, the platform may allow each device in a predefined environment (e.g., a location representing a home, building, etc.) to be configured and defined as a set of inputs, a set of outputs, and a set of device capabilities. Each device may include (or have access to) an operating system that may operate with the platform to perform and/or distribute tasks across any number of capable devices. For example, if a particular device is not configurable to perform a user-requested task, the systems and methods described herein can detect another device in the defined environment to share the task with a device that can perform the user-requested task. For example, a device such as a new smart display with machine learning processing capabilities may be accessed by the platform in response to a task request in order to upgrade an older display without machine learning processing capabilities to take advantage of the machine learning capabilities of the newer smart display.
In some implementations, a user can configure a plurality of environmental policies and/or preferences for a home (e.g., a household) using the platform and user permissions described herein. The platform may access and share data from a distributed storage log (e.g., ledger stored locally and available via a public or private network) for each device associated with the environment to obtain information about device status, past activities, and the like. The distributed storage is configured to retain device data and/or user data, each of which is retained in the environment to ensure that such data is not compromised. For example, a user can set policies and preferences for a user's household associated with the home, and the distributed storage can be used to share policies between devices. Policies may apply to an entire home, a particular room or activity, a particular device, a particular time, etc. For example, a user may configure a policy to disable music louder than a threshold decibel level after a particular time of day.
In some implementations, the systems and methods described herein may be configured to share (and/or determine whether to share) such policies with any number of devices within a defined environment (e.g., a user environment) according to user permissions and/or device settings. In some embodiments, the systems and methods described herein may be configured to set other device-specific policies that can be shared with one or more other devices within a distributed environment computing system without having to wait for a user to manually update such devices with a particular policy. Such example policies may include, but are not limited to, policies for camera usage (or other sensor usage) of camera (or sensor-enabled) devices near or within a particular space, device access restrictions for a particular user and/or time, and policies regarding do-not-disturb configurations for a particular user, device, and/or time. In some embodiments, some or in some examples all of the devices within the distributed environment computing system may follow policies as configured by a user of the computing system.
Similarly, when a new device is added (or moved) to the home (i.e., associated with or defined by the distributed environment computing system), the new device can inherit the existing configuration for the home and/or room policies. For example, the platform may utilize the underlying device O/S to trigger notifications for each particular device, and each device may determine and/or interpret what the policy is intended to configure. Each device may then configure the received policy according to the interpretation of the received notification. For example, the device may determine how to configure the do-not-disturb policy based on which sensors and/or corresponding capabilities are available within itself. The device can then turn off the jamming sensors and/or capabilities according to a policy.
In general, one technical problem that may arise when attempting to share task execution among devices may include device incompatibility at the software, hardware, and/or firmware level. For example, various electronic devices owned and/or accessed by a user throughout the day are not typically configurable to function together in an environment as a single computer. These devices typically operate using different hard-coded operating systems that may not be compatible between the devices. This can present technical challenges because, in general, it can be complicated, time consuming, or impossible for a user to synchronize home devices, and it can also be difficult to synchronize communications and/or policies when adding new devices and/or bringing new devices in and out of home.
The systems and methods described herein provide a technical solution to the technical problem by enabling communication between electronic devices and allowing distribution and sharing of user requested tasks in order to provide convenient execution of tasks requested by users in the home. For example, underlying O/Ss executing on one or more detected devices associated with a defined environment (e.g., a location area) can be configured to dynamically distribute computing tasks to capable devices within the location area, for example. In some implementations, the operating system can access a dedicated service delegated with the task of detecting, identifying, and ranking devices available in the location (e.g., home, building, etc.), and can make decisions to dispatch and coordinate tasks across the detected and/or otherwise available devices. These decisions may take into account the O/S running on the device to determine whether a particular device is capable of controlling other devices or simply passing information to other devices.
The technical solution described herein may provide the technical effects of improved task management, improved task evaluation, and/or improved decision handling between home devices. The system and method may also provide a way to select which devices perform and/or share performance of the received task using location-implemented distributed storage that is not owned or operated by the manufacturer or service provider of the devices at the location.
FIG. 1A is a block diagram of an example distributed environment computing system 100, according to embodiments described herein. In example system 100, user 102 may be in a home (e.g., a home location) that includes (or is associated with) any number of devices in the home. A home may represent a user environment (e.g., location/location area) of the distributed environment computing system 100 configured as a device for associating with the home. The user context may be defined by the user to include a home and a particular area around the home. In some implementations, devices within the home can be configured to set the boundaries of the user environment according to user requests, threshold settings, and/or distances from device policies implemented by the manufacturer and configurable by the user.
In general, the example distributed environment computing system 100 may provide a user with value from devices in the home/home, as the system 100 may use each device as a collection of capabilities that may be used together to achieve a goal (e.g., a task).
As shown in fig. 1A, the devices include a plurality of environmental devices including a door lock device 104, a security device 106, a smoke detector device 108, an occupancy sensor device 110 (e.g., including a thermostat), an environmental hub device 112, an assistant device 114, and an audio/microphone device 116. Each device is shown connected by a dashed line representing a network of environment devices within the distributed environment computing system 100. The connection between the devices may be wireless, as described in detail below. In some implementations, devices may share data via distributed storage and/or directly from device to device, but may typically do so according to preconfigured user permissions.
Each environment device may be user-configurable according to user preferred permissions. For example, devices with cameras, microphones, internet access, and/or other sensor-based capabilities may be configured according to user preferred permissions. Such permissions may be time-based and user-controlled. In some implementations, the user device can be configured to prompt the user to view or edit the permissions given to the device to ensure that the user can quickly modify the permissions and device capabilities.
The depicted door lock device 104 may include at least sensing capabilities to lock and unlock a door based on a received signal. The depicted security devices 106 (e.g., security cameras) may include one or more onboard devices and/or sensors, such as camera sensors, audio sensors, motion sensors, speakers, and so forth. The security device 106 may be located outside of the home, but may still be associated with a user environment associated with the distributed environment computing system 100. The depicted smoke detector devices 108 may be located in any number of locations throughout the user's environment. The smoke detector apparatus may comprise an audio sensor, a photoelectric sensor and/or an ionisation sensor. The depicted occupancy sensor device 110 may determine whether movement is occurring at a particular location in the vicinity of the device 110. The device 110 may include a photosensor to detect motion and/or presence. Such sensors may use infrared, ultrasonic, microwave, and/or other signal sensors to detect the presence of a user within a defined environment. For example, if the device 110 includes (or accesses) a thermostat device, the detected user presence may be a trigger to modify the environment.
The environment hub device 112 may be a smart display including any number of audio sensors, speakers, microphones, internet (or other network) access, and the like. As used herein, a "smart" device may represent an electronic device that may be communicatively coupled with other electronic devices, networks, systems via particular wired or wireless protocols, including but not limited to bluetooth, Zigbee, NFC, Wi-Fi, LiFi, wireless USB, wireless ethernet, cellular, and the like.
The environmental devices 104-116 may include a portion (or in some examples, all) of the devices associated with a location. Such devices may or may not include personal devices, such as one or more of a mobile phone, a tablet computer, a personal computer, or a laptop computer. For example, if a user configures one or more personal devices to interconnect with other environmental devices 104 and 116 (or other similar devices available in the user's environment), such devices may be part of a distributed environment computing system.
The user 102 may wish to perform tasks involving one or more of the devices shown in FIG. 1A. For example, a user may be away from home and may wish to enable security measures. As shown in FIG. 1A, a user may speak a task (or select a task in the UI of the computing device). Tasks may be spoken or selected by a user using a computing device executing on a platform described herein. The computing device may, for example, include an assistant device 114 or a device 116 that may execute an O/S capable of interpreting commands to and from the platform. In this example, the spoken task 118 (i.e., securing my house) may trigger the device 114 to organize the spoken task 118 among one or more environmental devices 104-116. For example, upon receiving task 118, device 114 may evaluate which devices in the system are capable of protective measures (e.g., security tasks). Device 114 may also determine a particular proximity of the devices, which may be used to evaluate which devices are enabled with security measures.
For example, a smart light bulb in an attic without windows may not require the use of an onboard proximity detector that can send a signal when in use to enable security measures. Instead, device 114 may have a policy set by the user to exclude such devices from the security task. For example, device 114 may turn on security features of devices that are determined to have security capabilities and to comply with policies for home. In operation, device 114 may send signals and record such signals in distributed storage to trigger devices 1104, 106, 108, 110, 112, and 116 to perform security enablement for the home. Each enabled device may also record the signal in a respective distributed storage associated with each respective device. Each distributed store may be synchronized with the master home distributed store so that the master home distributed store may be used to make decisions.
FIG. 1B is a block diagram of an example distributed environment computing system 128, according to embodiments described herein. The systems and methods described herein may utilize devices operating on any number of platforms. In conventional systems, computing devices and electronic devices may generally be optimized to perform tasks on specific hardware. The systems and methods described herein may provide advantages for facilitating device management by configuring devices as interchangeable modules of larger computers that conceptually encompass available devices within a location, for example, to distribute computing tasks that may otherwise be difficult to implement using a single device.
For example, devices 112 and 114 (fig. 1B) may operate (e.g., execute a first operating system) on a first platform 130 that may receive input from any number of devices (e.g., mobile device 132, device 134, device 136, device 138, device 140, and/or device 142), any of which may operate using a second, third, fourth, etc. platform (not shown) that executes a second, third, or fourth, etc. operating system. Devices 112 and 114 may also provide output to any number of devices (e.g., mobile device 132, device 134, device 136, device 138, device 140, and/or device 142). For example, the platform 130 may utilize the devices 112 and 114 to adapt content (e.g., visual content, audio content, data content, configuration information) across the devices 132 and 142. The platform 130 may evaluate, determine, calculate, or otherwise determine how to arrange, rearrange, render, execute, and/or otherwise process content (or tasks) between the devices 112 and/or 114 and another device within the system 128. Platform 130 may utilize other devices external to platform 130 by configuring these devices to serve as inputs and/or outputs to platform 130.
Systems and methods may utilize determined device capabilities associated with proximate (e.g., nearby) computing devices (e.g., electronic devices). For example, if the devices are detected within a threshold distance of a particular defined environment (e.g., location), then the devices may be determined to be proximate. The example depicted in fig. 1B includes devices 112, 114, 132, 134, 136, 138, 140, and 142, but any number and type of electronic devices may be substituted to utilize the systems, methods, and platforms described herein.
One or more of the computing devices described herein (e.g., device 112 and device 114) may include distributed environment computing logic to enable the use of one or more proximate devices (e.g., device 132 and device 142) to perform computing tasks. An operating system executing on one or more of the computing devices 112 and/or 114 may enable any number of the devices 132 and 142 to share (e.g., distribute) computing and/or other device tasks based on detected capabilities of proximate devices and based on received request(s) to perform a particular task. By defining predefined distances to particular locations, networks of devices may be identified and grouped to selectively perform user-requested tasks according to combined device capabilities, predefined policies and preferences, and/or user context.
In general, the devices and computing systems described herein are capable of determining proximity to other devices in a user environment or to a user associated with a request to perform a task. For example, devices and portions of computing systems may have a line-of-sight sensor that may determine whether a particular device is in proximity to another device, which may enable self-identification of proximity or identification of detected proximity. In some implementations, a device and a computing system may be assigned to a particular location, and thus, the location may be used to identify physical proximity to another device or system. The determined location may be reevaluated and/or redetermined to determine whether the particular device has moved within the environmental computing environment. In some implementations, determining the proximity of a particular device or system may include measuring communications. For example, each device may be connected to a network having an identifier that may be used in conjunction with sending communication packets between one or more devices to evaluate or determine a round trip packet time. These times may be ordered to provide an indicator of which device is closer (i.e., closer) to one device (or user) than another device (or user).
FIG. 1C is a block diagram of an example distributed environment computing system 150, according to embodiments described herein. The devices depicted in computing system 150 include assistant device 112, assistant device 114, camera device 134, thermostat device 138, camera device 140, lighting device 142, and television device 144. The platform described herein may be used to generate a distributed environment computing system among any number of devices to adapt an experience to such an environment. For example, the platform may determine that the assistant device 114 includes microphone input and search capabilities, which may be adapted to work with the television device 144 and the camera device 134 to generate a video chat stand, where the microphone, internet connection, and dialing capabilities within the assistant device 114 may be combined with the displays of the camera device 134 and the television device 144 to implement a complex communication system. As indicated by arrows 152, 154, and 156, the systems and methods described herein can utilize a platform to generate connectivity within the distributed environment computing system 150. Policies can be generated for the combined devices 114, 144, and 134. The platform described herein can be used to adapt a policy to a device and/or another device determined to provide additional capabilities for a requested task.
In some implementations, combining device capabilities may enable one device to be updated with functionality from another device. For example, a speaker device (e.g., such as assistant device 114) may be combined with a display device (e.g., smart display device 112) to provide security capabilities for the defined environment.
Although a number of different devices are shown in fig. 1A-1C, any number of computing devices (e.g., environmental devices, personal computing devices, electronic devices, etc.) may be configured to operate using the platforms and distributed environment computing systems described herein. Because such devices are defined in terms of inputs, outputs, and device capabilities, the systems and methods described herein may utilize device capabilities in accordance with task requests and policies associated with the environment and/or one or more devices.
As used herein, a defined environment (e.g., user environment, home) may include a home defined based on one or more of an associated user, room, square feet, identified and/or configured devices, and/or other elements associated with the home. In some implementations, the defined environment may include a building, a user-defined perimeter, a yard surrounding a home, an apartment building, a group of buildings or rooms, to name a few examples.
Devices described herein (e.g., electronic devices and/or computing devices) may include, but are not limited to, smart displays, televisions, mobile devices, tablet computers, game controllers, lights, alarm clocks, electronic assistants, smart watches, smart phones, thermostats, appliances, fans, switches, sprinklers, air fresheners, shutters, awnings, shutters, curtains, windows, garage door openers, showers, security systems, electronic doorbells, cameras and devices with cameras, electronic locks, smoke detectors, proximity sensors, internet connected speakers, laptop computers, desktop computers, workstations, automobiles, or other devices that can communicate information.
FIG. 2 is a block diagram illustrating an example distributed environment computing system 200 including multiple devices according to embodiments described herein. System 200 may be used to configure computing devices (e.g., computing system 202 and computing device 204), environmental devices ( devices 104, 106, 108, 112, 114, and 116), and/or other mobile devices (not shown in fig. 2) to operate as a single distributed computing environment such that tasks may be dispatched and/or shared between any of the devices within distributed environment computing system 200. For example, the system 200 may be able to identify and describe each device in each room of a particular environment in order to obtain input, control device functionality and/or processing, and provide output regardless of the underlying operating system executing on each device.
In some embodiments, the multiple devices may include any number of applications, which may be dynamically formed, for example, from available software components (and functionality) available in the distributed environment computing system 200. Applications may provide dynamic interoperability for operation on operating system independent platforms.
As used herein, a distributed environment computing system may refer to a network of multiple (e.g., two or more) autonomous computing devices, mobile devices, environmental devices, personal handheld devices, sensors, etc., that may communicate between each other and/or other devices configured for the network. The network may be a predetermined network, an autonomously generated network, a peer-to-peer network, or other network that allows data to be transferred between devices in the network using a protocol such as UPnP, SLP or GSM, to name a few examples. The distributed environment computing system may provide coordinated use of shared resources, communication infrastructure, UI elements, and/or services to perform tasks and requests received from users associated with one or more devices defined for the distributed environment computing environment. As used herein, a distributed environment computing environment may refer to a defined physical space that accesses resources, communication infrastructure, UI elements, and/or services available to devices configured in a distributed environment computing network.
Each device in a particular distributed environment computing system (e.g., devices 104, 106, 108, 112, 114, 116, and 204 in the example of FIG. 2) may be defined by capabilities associated with such devices, including, but not limited to, respective device capabilities (from sensors 206a-206g, inputs 208a-208g, and outputs 210a-210 g) and respective device locations within the defined user environment. For example, computing system 202 may be configured to dynamically distribute tasks across any of devices 104, 106, 108, 112, 114, 116, and 204.
The sensors 206a-206g may represent device capabilities. Any number of sensors may be available on the devices described herein. Additionally, if a particular sensor is not available on one device, another device may provide the sensor to perform (e.g., perform) the requested capability within the task requested by the user. Example sensors may include, but are not limited to, optical sensors, image sensors, audio sensors, motion sensors, proximity sensors, temperature sensors, infrared sensors, ultrasonic sensors, touch sensors, pressure sensors, level sensors, smoke and/or gas sensors, chemical sensors, accelerometers, gyroscopes, environmental sensors, and the like.
The inputs 208a-208g may include, for example, content received via a touch input device capable of receiving tactile user input, a hand controller, a mobile device (or other portable electronic device), a microphone capable of receiving audible user input, and so forth. The outputs 210a-210g may include, for example, the generation of a display for visual output, a speaker for audio output, and so forth.
In some implementations, each device 104, 106, 108, 112, 114, 116, and 204 includes multiple apps 211a-211 g. The app may utilize services 214, policies and permissions 252, preferences 254, and distributed storage 256. Policies and permissions 252 may relate to device permissions, device policies, user permissions, user policies, and the like. The distributed store 256 may be on device 202 (or other device) as a local copy, but may also be updated via a public or private network, an internet-connected network, or other network. Synchronization can occur between two distributed storage logs, such as storage 256 and storage 257.
In a non-limiting example, the system 200 may determine the inputs, outputs, and capabilities of the devices in the system and determine which devices may be used to perform tasks, display information, and the like. For example, a camera device may include video input and microphone input, but may not include output capabilities. In addition, device processing power for camera devices may also be limited. A television device associated with the same system 200 may have a microphone as an input and may have a larger display than the camera display so that a convenient visual output may be provided to the user rather than on the camera device. Other devices, such as Wi-Fi routers or smart displays, may have similar or different inputs and/or outputs, but may have additional processing power and/or memory, and thus may be selected by the system 200 to perform processing for another device in the system 200. In operation, the system 200 may dynamically determine which device is appropriate to accomplish a user-requested task.
In some implementations, computing system 204 and devices 104-116 may include the components shown in computing system 202. In such an example, each computing system and device may be used to evaluate capabilities and/or distribute tasks among the devices 104-116. For example, the computing system 204 may be an assistant device with an image sensor, an audio sensor, and internet connectivity. Computing system 204 may be located in a basement location within the defined home. Computing system 200 may access any of devices 104, 106, 108, 112, 114, and 116 and computing system 202 to perform and/or share task execution. For example, if a user in a household requests, via the system 204, to play a movie at a kitchen location associated with the household, the computing system 204 may evaluate capabilities available between any devices associated with the household to determine which devices have the capability to play the movie. In this example, the system 204 may determine that the assistant device 112 located in the kitchen and the second device 144 located in the living room of the home may have the capability to play a movie. In response, the system 204 may determine that the assistant device 112 is a device that is in place (in the kitchen) and has the requested capabilities (e.g., playing a movie). Thus, the computing device 204 may trigger the movie to stream on the assistant device 112. Similarly, device 104 may include the components shown in computing system 202. As such, the devices 104 may be used to perform, share, and/or distribute tasks within and among the devices in the distributed environment computing system 200.
In general, computing devices 202 and 204 and devices 104-116 may communicate and/or transfer data wirelessly between each other using the systems and platforms described herein. In some embodiments, each device may be configured in the distributed environment computing system 200 to communicate with each device associated with the system 200.
As shown in FIG. 2, computing system 202 includes an operating system (O/S) 212. The O/S212 may be used to execute and/or control applications, services, and device communications. The O/S212 may be a first type of operating system, while the other devices shown in FIG. 2 (or associated with a particular distributed environment computing system) may be different operating systems operating different device hardware.
In operation, the systems and methods described herein may provide access to one or more services 214 for any number of different device types, for example, that may be within distributed environment computing system 200 (e.g., in a home), where each device may execute a different operating system. The service 214 may be configured to generate, manage, and execute tasks detected (e.g., received) in the distributed environment computing system 200. Further, the service 214 may provide O/S level access to detect peripheral (e.g., environmental) devices and capabilities. The service 214 may be an O/S level execution decider to dispatch one or more tasks received in the system 200.
The O/S212 may execute and/or otherwise manage the applications 216, task manager 218, identity manager 220, device manager 222, and context manager 224. The application may include a User Interface (UI) generator 226 and user data 228, both of which may be used to generate content and/or data and provide such content and/or data to a user via a device interface.
The task manager 218 may manage the distribution of tasks throughout the distributed environment computing system 200. For example, the task manager 218 may evaluate tasks and device capabilities to trigger completion of the tasks using one or more devices in the system 200.
The identity manager 220 may manage identities associated with the system 200. For example, a user may be associated with a device using an identity. An identity may be associated with an identity account, but such an account is user controlled and generated, not service provider controlled and generated. Each identity may be represented as a globally unique identifier. In addition, each identity may be represented by a persona, which may be used to present the user (or data associated with the user), for example, to a third party or other device in system 200. In general, the identity manager 220 may be used to add and/or modify users, home services, physical buildings, and devices. For example, the identity manager 220 may generate an account that may represent a physical building (e.g., a home). The identity of the home may include an address and other identification data that the user may require ownership. The identity of the physical building is typically not directly connected to the human user or service provider, but instead corresponds to an account established by the user for home.
In an example, a user may require ownership of a particular physical building. In response, the identity manager 220 may generate connections between the physical building, the location, and one or more users within the household associated with the building. For example, the user may ask the identity manager 220 to set up additional users to be associated with (i.e., related to) a household corresponding to the physical building. The identities may include such relationships and the system 200 may assign rights, policies, and preferences based on such relationships.
In some implementations, the device manager 222 may provide or otherwise implement device-to-device settings. For example, smart home devices may communicate via a peer-to-peer network (or other network via ultrasound or other wireless technology) upon user confirmation via a previously provided device identity. Upon confirmation, the previously provided device may, for example, communicate services, preferences, and/or settings to one or more of the smart-home devices. Thus, manual Wi-Fi setup, device setup, or other out-of-box setup tasks may become unnecessary.
In some implementations, the device manager 222 can provide a modular out-of-box experience, enabling specific device functionality to be activated and/or reordered separately depending on devices previously configured by a user and based on information associated with previous device configurations. The device manager 222 may then reuse the information associated with the initial device settings when the user requires an experience involving the new settings.
The context manager 224 may evaluate the environment that forms the settings for the event, explanation, or idea. The context manager 224 may define settings from which it can fully understand and evaluate. For example, the context manager 224 may provide context-aware computing between devices in the distributed environment computing system 200. For example, the context manager 224 may use software and/or hardware to collect and analyze data about the environment surrounding the device in order to present relevant, actionable information to a user of the device. The collection and analysis is performed according to user permissions and within a location associated with the device unless the user requests use of additional resources beyond the defined location. In some implementations, the context manager 224 can collect signals from individual devices, analyze the signals and combine the signals into a home-wide context, and notify the services and other parts of the system (e.g., devices) of a change in context according to the system and/or device permissions.
As shown in FIG. 2, O/S212 may include or access service 214, communication module 230, camera 232, memory 234, and CPU/GPU 236. The computing system 202 may also include or have access to a sensing system 238. Sensing system 238 includes an Inertial Measurement Unit (IMU) sensor 240, an audio sensor 242, a pose sensor 244, an image sensor 246, an image analyzer 248, and a position identifier 250. The sensing system 238 may access the communication module 230, the camera 232, the distance/proximity sensor (not shown), the positioning sensor (not shown), and/or other sensors and/or different combination(s) of sensors. Some sensors accessed by system 212 may provide location detection of devices associated with system 200 or a user of system 200. Some of the sensors of system 238 may provide for capture of images of a physical environment associated with the distributed modification computing system for display on components of one or more of devices 104, 106, 108, 112, 114, 116, and/or 204.
The IMU sensor 240 may be used to detect or measure angular velocity and linear acceleration of the computing system 202. The system 202 may then calculate and/or estimate a 3D orientation in 3D space based on the measurements made by the IMU sensors 240. IMU sensors 240 may include one or more accelerometers, gyroscopes, magnetometers, and other such sensors. In general, the IMU sensors 240 may detect, for example, motion, movement, velocity, and/or acceleration of the device 202.
The image sensor 246 may detect a change in background data associated with a camera capture performed by the device 202 (or another device in communication with the device 202). The camera 232 may include a backward capture mode and a forward capture mode.
In some implementations, computing system 202 may access distributed storage 256 (and/or distributed storage 257) to maintain device state and task state during operation of distributed environment computing system 200. Such distributed storage 256 (and/or distributed storage 257) may represent a distributed storage system. In some implementations, distributed storage 256 (and/or distributed storage 257) may be provided as services 214. Such services may be synchronized across devices owned by a particular home, building, user, etc. In some implementations, distributed storage 256 (and/or distributed storage 257) may be provided via an application.
Each application 216 and/or component executing on behalf of a particular defined user may have a separate data store provided and managed by, for example, distributed storage (e.g., a log) 256 and provided to other user-associated devices upon request by the user. The data store for a particular component/user combination is private to the user and therefore cannot be accessed by other applications of the same user and cannot be accessed by other users of the same application (or another application). Each data store may be transparently synchronized across devices associated with a user by a network resource provider (e.g., network 259). Any data manipulation may first be performed offline without coordination with the network. If concurrent modifications result in a data conflict, the conflict can be resolved using, for example, an app-configurable merge policy.
In some implementations, the distributed storage 256 (and/or distributed storage 257) implementation includes storage (not shown) that stores and provides access to local data, a client component that interacts with the storage, and a local client that exposes the distributed storage 256API to locally running applications (e.g., application 216).
In operation, distributed storage 256 may operate locally to application 216 and may not synchronize data with network 259 and distributed storage 257 if the application is operating in guest mode. If the application 216 is operating in a standard mode, the distributed storage 256 may use network instances via the network 259 to synchronize user data. In general, the network 259 may provide hybrid network services or public network services. The hybrid network service may be generated, provided and/or serviced by a hybrid network solution provider. Public network services may be owned and operated by service providers that manage public networks.
Distributed storage 256 may provide for executing transactions that allow an application (e.g., application 216) to make a set of changes that may be synchronized and surfaced. For example, computing system 202 (e.g., a client device) may start a transaction, take a snapshot of the page state, and read the data. Computing system 202 (e.g., via application 216) may then make the changes through the page interface of distributed storage 256 and may commit the transaction. Once the transaction begins, the state of the page is tracked and fixed so that it does not advance until the transaction is committed or aborted. This may provide the advantage of ensuring that the transactional write accurately affects the state visible on the snapshot of the page. In some implementations, the distributed storage 257 can operate as a master home distributed storage, where configured home devices can share (and synchronize) data to/from respective distributed device stores, such as distributed storage 256.
Each device within a particular distributed environment computing system may include one or more processors (e.g., CPU/GPU 236) in communication with O/S212, sensing system 238, communication module 230, services 214, memory 234, and/or camera 232. The communication module 230 may provide communication between the computing system 202 and other external devices. The processor 236 is configured to execute instructions (e.g., a computer program) in order to perform specific tasks. In some implementations, at least one of the processors 236 executes instructions to operate a device in the distributed environment computing system. Memory 234 may be used throughout communications and interactions between elements in system 200.
In addition, computing system 202 may use or access one or more peripheral devices (not shown). Example peripheral devices may include any number of controllers, computing devices, head-mounted display devices, cameras, speakers, tracking systems, and/or other devices in communication with device 202.
In some implementations, the computing system 202 includes or has access to a tracking system (not shown). The tracking system may include (or access) for example, a light sensor, an Inertial Measurement Unit (IMU) sensor 240, an audio sensor 242, an image sensor 246, an image analyzer 248, a location identifier 250, a camera 232, a distance/proximity sensor (not shown), a positioning sensor (not shown), and/or other sensors and/or different combinations of sensors.
Various solutions to the above-described problems are provided by computing systems according to embodiments described herein. According to embodiments described herein, a computing system may utilize data collected by various sensors and/or devices included in the distributed environment computing system(s) to generate (e.g., build) a network of devices that, along with services and platforms, are used to detect, identify and/or rank devices that are available and capable of being used in a home environment. Such services may make decisions (e.g., based on user requests or user configured permissions) to dispatch and/or coordinate tasks across available devices in the distributed environment computing system(s). Additional details regarding the services and platforms are described below.
FIG. 3A is a block diagram illustrating an example architecture 300 for operating a distributed environment computing system, according to embodiments described herein. Architecture 300 may provide a unified structure across devices executing different operating systems. Each device may access the unified UI content to allow device brand identification, etc.
As shown in FIG. 3A, the architecture 300 includes an operating system (O/S) layer 302, a platform layer 304, a core Information Architecture (IA)306, a session framework 308, and an expression language 310. The O/S layer 302 includes an O/S312 and optionally other operating systems 314. O/S312 may represent an operating system on which computing system 202 and/or computing system 204 may operate. The O/S312 may be used to direct (e.g., distribute) tasks to other devices in a particular defined environment. Other operating systems 314 may be used as input to and/or output from devices in the defined environment that are not operating on the operating system 312 (e.g., devices 104, 106, 108, 112, 114, 116, etc.).
The platform layer 304 includes a task manager 218, an identity manager 220, a device manager 222, and a context manager 224, as described in detail above with reference to FIG. 2. In general, the identity manager 220 may be used to add and/or modify users, home services, and devices, each of which may be represented at the same level within the platform layer 304. The platform layer 304 may represent a platform described herein that may communicate information between the O/S layer 312 and the core IA 306.
Because multiple devices (operating with different hardware and software) may include duplicate functionality, the platform layer 304 may be used to evaluate, manage, and configure such devices based on a user's defined identity to coordinate tasks requested by the user (or requested from the user using another device). For example, identity manager 220 may be used to generate and use identities for entities, including but not limited to buildings, users, homes, businesses, and the like. The device manager 222 may be used to generate accounts representing such entities. The identity for a particular entity may be, for example, a substitute for a service provider account stored, owned, and serviced by the provider. The identity may be owned and maintained by the user, rather than by the service provider.
Referring again to fig. 3A, the core (IA)306 includes at least one core status module 316 and a navigation system 318. For example, the core status module 316 evaluates and determines the core status of the components of each device in the distributed environment computing system 200. The navigation system 318 can determine which state a particular device is in so that the system 200 can share this information with other devices in the system 200.
The session framework 308 includes an adaptation and response layout and components module 320 and a multi-modal user experience (UX) module 322. Module 320 may ensure that UI content generated by core IA 306 is able to adapt to and respond with specific software and/or hardware components of each device in system 200. The multi-mode UX module 322 can generate UI content to ensure that a seamless and device-specific experience is provided to the user while utilizing the distributed environment computing functionality of system 200. For example, the expression language 310 may include an expression language 324 that may be used to generate UI content for devices that provide content to users and/or other devices associated with the distributed environment computing system 200.
In operation of the architecture 300, the core IA layer 306, the session framework 308, and the expression language 310 may operate in conjunction with the platform layer 304 and the O/S layer 302 to ensure that the system 200 has the same information architecture and the same set of states and components across the devices associated with a particular distributed environment computing system. Architecture 300 can then display content according to the UX design employed across devices, while allowing device-specific UI content and/or UX scenarios. For example, a user may request a task via a smart watch, which is displayed on a smart hub in a different room. The display may be cohesive and similar, but may depict different color schemes, elements, or other UI content based on the device, manufacturer, policies set for the system, preferences set for the system, and so forth.
FIG. 3B is an example architecture 350 for operating a distributed environment computing system, according to embodiments described herein. For example, the architecture 350 may be used to operate the distributed environment computing system 200. Architecture 350 may include O/S312 and any number of elements 352 provided by a service provider, developer, and/or device manufacturer.
For example, 3P device configuration typically brings users into different apps and web streams that utilize multiple identities and/or passwords. Each particular 3P device may configure the device differently (e.g., pairing, naming, maintenance), which may introduce difficulties in configuring the device and may result in data inconsistencies across devices. As more diverse and lower fidelity devices enter the market and there is no overall or consistent setup solution, users are often forced to set up hardware bridges or intermediate apps, which may make the hardware and device ecosystem fragmented for the user. This can lead to 3P devices feeling incompatible. For example, with the system 200, architectures 300 and 350 described herein, a platform can be used to identify device product keys, and a new device can inherit the naming and structural language of the location associated with the system 200.
The platform described herein may allow nearby 1P devices to act as hubs for the communication and processing of such 3P devices. Further, the platform may enable OEMs to use a setup API that allows the OEM flexibility to maintain their brand while keeping out-of-box experiences consistent between devices at that location. Providing a modular out-of-box experience with embeddable, branded components enables basic licensing without visually leaving the setup/configuration flow.
Electronic service B354 may include responsive audio information, task completion, and/or communication access in response to a user requested task, command, and/or other input. Electronic service C356 may include using electronic service B354 to receive real-time feedback, reminders, information, and/or other user requested content.
The O/S312 shown in FIG. 3B may comprise (or access) portions of the system 200 and architecture 300. The O/S312 includes a sensor layer 362, a compute/store/coordinate layer 364, and a UX layer 366. The sensor layer 362 includes any number of first party (1P) sensors 368 and any number of 2P sensors and/or 3P sensors 370. For example, the 1P sensor 368 may include a sensor designed for a device executing the O/S312 (or O/S212). The 2P and 3P sensors 370 may include sensors and/or device elements that execute the operating system 314 (or another O/S not included in the O/S312).
The compute/store/orchestrate layer 364 may include centralized home (e.g., family) compute and/or store resources 372, 1P distributed home (e.g., family) compute store resources 374. The centralized home (e.g., home) computing storage resource 372 may operate with the distributed storage 256 and other device and/or network based distributed storage to coordinate device storage and synchronization. 1P distributer (e.g., home) computing and/or storage resources 374 may be used to store data regarding 1P sensors 368.
The distributed storage 256 may maintain device states and task states during operation of the distributed environment computing system 200. Such distributed storage 256 may represent and/or provide a distributed storage system for the distributed environment computing system 200. In some implementations, distributed storage 256 may be provided as service 214. Such services may be synchronized across devices owned by a particular home, building, user, etc. In some embodiments, the distributed storage 256 may be provided via an application.
In operation, the architecture 350 may provide a cohesive home space in which a user operates a device. When a user interacts with their home and associated devices, the user may interact with different aspects of a single home, and thus each home that utilizes the architecture 350 may be operated by a single digital assistant using, for example, the assistant system UI 376. In some implementations, such UI 376 can correspond to a first digital assistant device purchased for home. Thus, the first digital assistant device can be the user's home ecosystem.
FIG. 4 is an example diagram illustrating task requests and the execution of tasks in a distributed environment computing system according to embodiments described herein. As shown, user 402 may associate any number of devices with a particular location 400 (e.g., her home). The configuration of such a device is described throughout this document.
Because managing a home of multiple devices can be unwieldy, a single assistant device can be used to bridge gaps that may occur, for example, between devices associated with the home at location 400. Each device and infrastructure may have separate interfaces and preferences. A single assistant may be used to provide communication infrastructure, UI elements, and user data between devices, infrastructure, and services associated with the devices to enable the devices associated with the home location 400 to work together while providing simple user control of such devices. Generally, a single assistant may operate using the O/S212/312 and the architecture 300 and/or architecture 350 to adapt content across devices.
Referring again to FIG. 4, at some point, the user 402 may request to enable tasks for one or more devices (including but not limited to the assistant device 406, the television 408, the alarm clock 410, the tablet computer 412, the mobile phone 414, and the light 416). For example, user 402 (shown in FIG. 4) utters a "bedtime" task 404. In response, system 200 may use architecture 300 and/or architecture 350 to perform bedtime related tasks for devices 406-416. For example, a distributed environment computing system (e.g., system 200) disposed for location 400 may determine that one of devices 406-416 can trigger the other device in location 400 to perform the spoken task. Here, assistant device 406 is shown as a device that receives user requested tasks 404. Assistant 406 may receive tasks to use assistant device 406 as a controller or to use the closest capable device as a controller for other devices based on conditions, policies, or preferences set by the user. In some implementations, the system 200 may access predefined proximity conditions that may have been configured for the devices 406-416, e.g., using the device determined to be closest to the user as a controller device for the other devices.
If a user's task 404 (e.g., a command) is received by the assistant device 406, the device 406 (utilizing or operating as the system 200) may determine which of the devices 406-416 (i.e., including itself) are configured and/or capable of performing the task 404. In this example, the devices 406-416 may be configured and/or able to trigger a night mode, which may correspond to particular user preferences 254 and/or policies and permissions 252 set with the "bedtime" task 404. Any device determined to be capable of and configured to perform a bedtime task may be triggered by the assistant device 406 to perform the task 404. For example, the assistant device 406 may trigger the television 408 to turn off and/or change to a predefined night mode. Similarly, the assistant device 406 can trigger an alert to be set on the alarm clock 410 based on the accessed user schedule, time of day, day of week, and the like. Additionally, the assistant device 406 may trigger the tablet computer 412 to turn off or turn off the notifier. Assistant device 406 may also modify functionality on mobile phone 414 to operate in a night mode. In addition, the assistant device 406 may turn off or dim other devices, such as the light 416. Each of the above changes may be triggered in combination or sequentially to perform the user requested task 404.
The user may have configured the devices 406-416 with user information, scheduling information, etc. prior to speaking the task 404. For example, a user may have configured mobile device 414 with user information, scheduling information, or other detected information, and mobile device 414 may share such information with devices 406-412 and 416 based on a previously configured distributed computing system that includes devices 406-416. Alternatively, the distributed (environment) computing system may be set up at runtime and set up on the fly as tasks are received. In some implementations, for example, a distributed environment computing system may include a subset of the devices 406-416 if it is determined that one or more of the devices 406-416 may not be able to perform certain reception tasks.
Other devices in location 400 may be present and capable of communicating with system 200, and thus, system 200 may perform other tasks set under the commands associated with task 404, including but not limited to dimming other lights, changing temperatures, securing doors, activating or modifying an occupancy security camera, imposing volume restrictions on speakers and/or television 408, for example. In general, a user associated with home location 400 (and the resulting distributed environment computing system configured for home 400) may generate and enforce policies and preferences without having to explicitly configure each device. Thus, in some implementations, policies and preferences may be triggered at fixed times imposed by a particular user, for example, without having to receive user commands.
In general, a system 200 or another distributed environment computing system disposed between two or more devices in a location may communicate and transfer information between devices associated with the location, but may not share any information with devices not associated with the location. In addition, communications occurring between devices can be encrypted and/or otherwise password protected.
In some implementations, multiple different device networks may be provided (e.g., on a per room basis). Such a network is able to communicate within the location with other networks within the location.
Fig. 5A is an exemplary diagram depicting two or more devices performing a user requested task according to embodiments described herein. As shown, for example, location 502 is defined by system 200. Location 502 may be or represent a user environment including, but not limited to, a home, a household, a residence, a business, and the like. Assistant device 504 may detect, for location 502, a plurality of devices associated with location 502. Devices within location 502 may be configured for a user as part of a particular household associated with location 502. For example, the thermostat device 506 and the light sensor device 508 may be detected as part of the location 502. In some implementations, the area 510 around the location 502 can also be included as part of the user environment associated with the location 502.
In general, devices 504, 506, and 508 may provide aspects of home monitoring using capabilities across non-secure type devices. For example, the assistant device 504, the thermostat device 506, and the light sensor 508 may not be part of the security system, but each device may be used to alert a user to a change in the home, thereby providing a security feature.
In operation, the assistant device 504 can determine what the devices 506 and 508 can perform with respect to device capabilities. Here, the device 504 may determine that both the thermostat device 506 and the light sensor 508 include capabilities such as proximity sensing and/or occupancy sensing. In response, the device 504 may configure the thermostat device 506 and the light sensor 508 as a distributed environment computing system. Additionally, the assistant device 504 may be included in a distributed environment computing system. Each device 504, 506, and 508 may be defined according to at least one of the detected capabilities and according to a device location within the user environment of location 502 and/or area 510. For example, each device 504, 506, and 509 may correspond to at least one of the detected capabilities and be a function of a device location within the user environment of location 502 and/or area 510.
At some point, assistant device 504 may receive a task from a user at location 502. Alternatively, the received task may be received remotely at the assistant device 504 from an offsite user (and associated user device) that may be associated with the distributed environment computing environment. A task may be "provide security updates" or "who is at home? Which may be responsive to devices 504, 506, and/or 508 detecting movement within the home.
In response to the task, assistant device 504 may determine that two or more of the available devices associated with location 502 may be useful to perform the requested task. In response to determining that the performance of the completion task indicates use of two or more capabilities of the plurality of capabilities of the device, the assistant device 504 may determine, within the distributed computing system, which of the additional devices is capable of performing the task. For example, device 504 may determine that device 506 includes a camera and proximity sensor for a first room, while device 508 includes a proximity sensor for a second room.
Understanding the movement in both rooms may provide an increased likelihood of correctly and accurately completing the task requested by the user. Thus, assistant device 504 can select at least two devices (e.g., device 506 and device 508) to share the performance of two or more capabilities to complete a task. For example, selecting at least two devices may be based at least in part on the determined proximity of the two devices to assistant device 504. After completing the above determination, assistant device 504 may trigger the selected at least two devices (device 506 and device 508 along with device 504) to perform the task. For example, after collecting data from device 506 and device 508, assistant device 504 may communicate information requested by the user in the received task.
In some implementations, selecting at least two devices includes configuring devices 504, 506, and 508 to communicate to perform separate portions of a task. In some implementations, selecting the at least two devices includes determining which of the devices include components configured to perform two or more capabilities to complete the task, and configuring the at least two devices to communicate to complete the task.
In some embodiments, at least one capability associated with at least one of the two devices extends a capability associated with the other of the at least two devices. For example, a thermostat device may capture the user's movements, but may not communicate such movements to the user unless communicating via the assistant device 504. Thus, the assistant device 504 extends the capabilities of the thermostat device 506.
In some embodiments, the execution of a task is triggered in the absence of an internet connection by a device in a distributed (environment) computing system. For example, devices 504, 506, and 508 may share information without the internet and may provide information to the user via a mobile device when the user re-enters location 502. That is, the user may be approaching her front door and may request a task from her mobile device at location 502 to determine which family members are at home. The mobile device may connect to devices 504-506 upon entering a boundary associated with location 502 and may provide an answer to the user when the user is within a threshold range of location 502.
FIG. 5B is another example diagram depicting two or more devices performing a user requested task according to embodiments described herein. Location 516 is defined to include any number of devices within range. Devices within location 516 may be configured by system 200, for example, as part of a particular household associated with location 516, which may be used to generate a distributed environment computing system. Location 516 may be or represent a user environment including, but not limited to, a home, a household, a residence, a business, and the like.
Here, two users are watching television devices 518. One of the users is associated with a mobile device 520. Also shown in the scene is a camera device 522. Television device 518, mobile device 520, and camera device 522 may have been previously associated with (e.g., associated with) location 516.
At some point, an incoming video call is received at the mobile device 520. Such a call may represent a task requested by the distributed environment computing system associated with the device at location 516. Here, the mobile device 520 may not be in the vicinity of the user. Because devices 518-522 are configured as part of a distributed environment computing system, any number of devices (e.g., for alternate functions) may be used to send and/or receive input and output for mobile device 520. In this example, system 200 may evaluate device capabilities of location 516, for example, and may evaluate the proximity of a user to such devices. The evaluation may be used to determine that television device 518 may provide visual and audio output to the user from mobile device 520, while camera device 522 can be used to capture and send visual and/or audio output to a caller on mobile device 520. While the mobile device 520 may perform each task, the user is determined to be remote from the device 520, and thus, the distributed environment computing system may conveniently provide an alternative device that may perform the phone call task using other proximate devices associated with the distributed environment computing system.
Fig. 5C is another exemplary diagram depicting two or more devices performing a user requested task according to embodiments described herein. Location 530 is defined to include any number of devices within range. Devices within location 530 may be configured by system 200, for example, as part of a particular household associated with location 530, which may be used to generate a distributed environment computing system. Location 530 may be or represent a user environment including, but not limited to, a home, a household, a residence, a business, and the like.
In the depicted example, the assistant device 532, external camera 534 may work together to alert the user to delivery at the door of the location 530. For example, external camera 534 may detect delivery of a package from user 536 by capturing a visual image. The delivery captured by the camera 534 may trigger a task to be performed by another device. For example, the camera 534 may alert the assistant device 532 that the package has been delivered. The assistant device 532 may trigger an audio indicator 538 that the package has been delivered.
6A-6C illustrate an example distributed environment computing system for a home, according to embodiments described herein. In the following example, a distributed environment computing system of home devices may be established. Each device capability may be determined. Each device location may also be determined. The distributed computing system may use secure camera video that has been captured by the camera. The captured video may be stored in a distributed storage, which may be synchronized across devices associated with the location.
In this example, different capabilities are assigned to each device. The different capabilities may include, in this example, camera input and recording capabilities, interactive access to content, and storage capabilities. Each capability is built as a pattern in a module that can be executed in any device.
As shown in fig. 6A, a location 600 is defined. Location 600 includes locations 600-A, 600-B, and 600-C, which are shown by different examples. Devices within location 600 may be configured by system 200, for example, as part of a particular household associated with location 530, which may be used to generate a distributed environment computing system. Location 530 may be or represent a user environment including, but not limited to, a home, a household, a residence, a business, and the like.
The devices shown in fig. 6A at location 600-a include a camera 602 with corresponding distributed storage 604, a camera device 606 with corresponding distributed storage 608, an electronic device 610, an assistant device 612, and a second assistant device 614. Devices 610, 612, and 614 may communicate with distributed storage 616. Mobile device 618 can also be associated with location 600-a. In addition, each distributed store 604, 608, and 616 can be synchronized with a network-based distributed store 618 associated with location 600.
Each device 602, 606, 610, 612, 614, and 618 may capture content with an onboard camera when the respective device detects an anomalous event. For example, local machine-based learning can be used to capture images captured when such events are detected and upload them to distributed storage. In general, any device can execute the distributed storage log to store, reference, and/or reference data in any of the storages 604, 608, 616, or 620, for example. Data may be shared asynchronously across the stores 604, 608, 616, or 620. Thus, each of the interactive devices 610, 612, 614, 618 may access the stored video/images.
Referring now to FIG. 6B, a location 600-B is shown that indicates the camera, distributed storage, and interactive access of each device detected within and/or configured for location 600. Here, the device is shown as a computing device for simplicity. For example, the camera 602 is associated with camera functionality and log functionality, but not interactive access functionality. Camera device 606 is illustrated as having similar functionality as camera 602. Electronic device 610 includes logging functionality, while devices 612 and 618 are illustrated as having interactive functionality, but no logging functionality. Although devices 612 and 618 do not include logging functionality, both devices may access the distributed storage of the other device. The device 614 includes both interaction functionality and logging functionality.
Referring now to FIG. 6C, location 600-C is shown with identical devices 602, 606, 610, 612, 614, and 618. Location 600-C is shown in an offline mode, as indicated by X620, where the internet is unavailable or inaccessible to the device. Here, the mobile device 618 may not have access to the device, but the devices within location 600-C may operate together and access locally stored log data, whether in an offline (or online) state.
Fig. 7 is a diagram of an example of task execution using ambient devices within a home, according to embodiments described herein. Location 700 is defined to include any number of devices within range. Devices within the location 700 may be configured by the system 200, for example, for any number of users, as part of a particular household associated with the location 700, which may be used to generate a distributed environment computing system. Location 700 may be or represent a user environment including, but not limited to, a home, a household, a residence, a business, and the like. In this example, at least three users may share a home and may pay a rental fee to the home.
At least one device (device a) may be associated with location 700. In this example, Georgia may generate a task (audible task) requesting payment of her rent. The task may be presented to her mobile device 702. For example, Georgia may say "Ok device a, pay my part of our rent". In response, device a may communicate with Georgia's mobile device 702 to retrieve information for making a rental payment. Upon completion of the communication and rental payment, device a may verbally respond that the rental has been paid and/or may generate and transmit other indicators that Georgia's rental has been paid. For example, device a may generate an email and send the email to Georgia's email account, which may be retrieved by mobile device 702. In some implementations, device a may also, in this example, remind or otherwise indicate to other users and/or devices associated with location 700 that the rental fee has been paid, as shown by indicator 706.
Other users associated with location 700 may also utilize services provided by device a (or another non-personal device within the location). For example, while Elaine has mobile device 708, she may instead pay a portion of her rent with device a if, for example, her mobile device is not already configured as part of the distributed environment computing system associated with location 700.
FIG. 8 illustrates provisioning of resources between environmental devices within a home according to embodiments described herein. Location 800 is defined to include any number of devices within range. The devices within the location 800 may be configured by the system 200, for example, for any number of users, as part of a particular household associated with the location 800, which may be used to generate a distributed environment computing system. Location 800 may be or represent a user environment including, but not limited to, a home, a household, a residence, a business, and the like.
In this example, hub device 802 may represent a first device identity provided and/or configured for a household associated with location 800. The device 802 may be associated with or otherwise aware of the user of the household, but may not rely on a user account provided by the service provider. The device 802 may instead be provided by a home rather than a specific user account or the like.
As shown, a first user 804, a second user 806, and a third user 808 are represented as part of a household at location 800. One or more users may pre-provision devices for a particular purpose (e.g., functions 810, 812, and 814), room (e.g., kitchen 816), person (e.g., users 804, 806, and 808), and/or service (not shown).
In some embodiments, the device may be part of a distributed environment computing system as described herein, which may be used to manage one or more identities simultaneously.
FIG. 9 illustrates a provisioning mode within a home using environment devices according to embodiments described herein. Location 900 is defined to include any number of devices within range. The devices within the location 900 may be configured by the system 200, for example, for any number of users as part of a particular household associated with the location 900, which may be used to generate a distributed environment computing system. Location 900 may be or represent a user environment including, but not limited to, a home, a household, a residence, a business, and the like.
As shown in fig. 9, the hub device 902 may welcome guests in guest mode. In guest mode, the home may host a visitor to location 900 without having to provide a home instruction manual, password, or the like. In contrast, because the location 900 may be associated with a distributed environment computing system, the system may provide guests with the particular device usage, services, and/or connections that the user previously provided for guest mode. For example, a user may provide Wi-Fi network enablement on a guest mobile device 904, but may alert other devices in the home to connect to such a network if a particular connected device is not recognized. Similarly, device 902 may provide access and control of lighting device 906 via guest mobile device 904. The privacy of the home may be protected because the personal home data is either not sent to the guest device or otherwise hidden from the guest device while still providing services and/or device usage to the guest device.
In some implementations, the location 900 can use context to hide personal data from the guest. Such a context may trigger a privacy mode. The privacy mode may include dynamic authentication that allows for simultaneous and sequential multi-user use of services and/or devices at location 900. In addition, a privacy mode may be provided for a particular user, which can be managed in real-time based on device placement and presence. For example, a device in a bedroom may trigger a privacy mode during a scheduled meeting, home visit, or when the user is not at home, while a device in a dining area may trigger a different privacy mode that obscures some data but not every portion of the data. Privacy modes may also be managed by presence, relationships, and activities occurring at location 900.
FIG. 10A illustrates an example of task processing using multiple environment devices and distributed storage 1006 according to embodiments described herein. As shown in fig. 10A, the distributed environment computing system for the example home includes a camera device a 1002, a camera device B1004, a distributed storage 1006, and a hub device 1008. Device capabilities may be transferred between devices. For example, distributed storage may provide logging capabilities that may be transmitted from distributed storage 1006 to hub device 1008. Hub device 1008 is the only interacting device depicted. Each of the devices 1002, 1004, 1006, and 1008 can be used in an online mode. That is, the home is connected to an internet service.
Referring to fig. 10B, camera device a 1002 and camera device 1004 are again depicted. Here, if activity is detected, camera device B may capture video and/or images. For example, at a first time 1010 representing a current camera B feed, the camera input shows that no activity is detected. At time 1012 on tuesday (e.g., 16:49:48), movement is detected (e.g., dog 1014) and snapshots and/or videos are stored in a local ledger (e.g., distributed storage). In general, devices associated with the distributed environment computing system may gain access to images and/or videos by accessing distributed storage 1006. Additionally, devices within the distributed environment computing system may view changes to the distributed storage 1006 immediately, and may view content from the distributed storage 1006 at a later time.
FIG. 11A illustrates an example of coordinating activities and resources within a household using environment devices according to embodiments described herein. As shown in fig. 11A, a distributed environment computing system for an example home location 1100. The location 1100 includes a light device 1102, a first audio device 1104, and a second audio device 1106, each accessed by a user 1108, a user 1110, and a user 1112, respectively.
The example home device may be part of a distributed environment computing system that may be generated for the location 1100. Users 1108, 1110, and 1112 may represent households that have schedules, personal devices, tasks, and the like. Distributed environment computing systems may be used to coordinate activities across devices, identities, and personal preferences in a household. In some implementations, the system 200 can be used, for example, to combine family-owned photos, video collections, notes, social media, alerts, calendars, etc. into a single bulletin board display so that users in the family can easily access other user schedules and information. The system 200 may sense specific patterns that occur throughout the day in the home and may provide suggestions to streamline or improve such patterns. The systems and methods described herein may provide such suggested and shared user data while ensuring that personal data remains at home. For example, home data and user data are not provided outside the home device unless the information is encrypted and cannot be linked to an individual user account owned by a typical account service provider. Further, product usage, data usage, and time-based or contextual use of such products or data may not be distributed outside of the home.
The systems within the distributed environment computing system ensure that such information is not collected by parties other than the home system. Thus, a user may have multiple device trips throughout the day when data does not leave the home system. For example, user 1108 may use device 1106 to set alerts for device 1104 while the device is offline. The system 200 may utilize distributed storage 256 that may communicate with devices in the home using an offline mode using peer-to-peer communication, private communication. The distributed storage may retrieve data stored from a particular device, and may synchronize such data across home devices. In some embodiments, a decentralized peer-to-peer computer network may be used for specific communications, transmissions, and/or device synchronization.
Referring to fig. 11B, the user 1108 may share her playlist 1114 with the home device. Similarly, user 1112 may share her playlist 1116 with the home device. For example, the distributed environment computing system 200 disposed between devices 1102, 1104, and 1106 (as well as other home devices) may use shared family group services and preferences to play music for a family. The sharing of content may ensure that home-centric services are tied to the home. The personal device can inherit aspects of the home device without having to configure the personal device with, for example, other accounts.
Fig. 12 illustrates an example of coordinating activities and sharing resources with devices associated with a household according to embodiments described herein. Location 1200 is defined to include any number of devices within range. Devices within the location 1200 may be configured by the system 200, for example, for any number of users, as part of a particular household associated with the location 1200, which may be used to generate a distributed environment computing system. Location 1200 may be or represent a user environment including, but not limited to, a home, a household, a residence, a business, and the like. In this example, location 1200 includes at least one device 1202. Device 1202 may utilize architectures 300 and 350 to ensure that data rules 1204 are implemented for location 1200 and devices associated with location 1200. For example, the data rules 1204 may include or govern user data 228, user preferences 254, user policies 252, and other content processed by the identity manager 220, the device manager 22, the task manager 218, and the context manager 224. In general, data rules 1204 may be protected and switched via permissions, sensor triggers, occupancy triggers, and the like. In particular, a user associated with location 1200 may have visibility and control over family-related data and user data using data rules 1204.
In some implementations, a user can configure data rules 1204 to allow a camera device (not shown) to operate in a particular room at home. For example, the data rules 1204 may indicate that a video of the pet 1206 is captured to provide a security check of the pet 1206. If a camera device (not shown) is provided to capture movement in the room housing the camera device, the data rules may be configured to capture movement above a predefined latitude (e.g., level from the floor of the room), to capture the pet 1206, for example, while barking, and the like. This may allow family members to witness the barking behavior at a later time. Additionally, the capture of the movement may trigger other devices to announce specific events or information to the user in another room based on user permissions and/or user-configured policies and/or rules. As shown, the device 1202 has been notified that the data rule for movement over the predefined latitude has been satisfied, and thus, for example, a notification 1208 of "Shhh!is indicated from the device 1202 to a user in another room with the device 1202! ".
Fig. 13 is a diagram illustrating an environmental device sharing policies with other environmental devices associated with a household according to embodiments described herein. Location 1300 is defined to include any number of devices within range. Devices within the location 1300 may be configured by the system 200, for example, for any number of users, as part of a particular household associated with the location 1300, which may be used to generate a distributed environment computing system. The location 1300 may be or represent a user environment including, but not limited to, a home, a household, a residence, a business, and the like.
In conventional device configurations, each device is set up in a set of steps that force the user to perform a workflow for device setup. This can be cumbersome for each additional device, which may be a different and unique workflow to properly configure the respective device. The system 200 may be used to set up a distributed environment computing system (e.g., a network of devices) that may use minimal user effort. The system 200 may perform the setup process for each device by utilizing knowledge of the device capabilities and other devices as well as information previously associated with the system 200.
In some implementations, device settings for a home at a location (e.g., location 1300) can be automated based on previous device settings and user permissions. For example, the user 1302 may have a previously configured mobile device 1304. For example, the system 200 may sense when a new device 1306 is brought into the home of the location 1300, and may require the user to allow the new device to be set up for them immediately. Such a workflow may remove the burden of managing the device for the user. The more devices a user adds, the more information the system can learn to improve the user experience. For example, after configuring device 1304 and providing the configuration of device 1304 to configure device 1306, system 200 may detect when a third device (e.g., device 1308) is available for location 1300. System 200 may then transmit data between device 1304 and device 1306 to appropriately configure device 1308 for use in the distributed environment computing network at location 1300. Unless the user requests mobile user data, the user data does not leave the home at location 1300, and in this case, the user data is encrypted and cannot be linked to the personal user account of the home by other parties (e.g., other users, service providers, account providers, etc.). This may provide the advantage of ensuring that the distributed environment computing network for a particular location will provide users with confidence in how to process their data. Further, such data rules may enable devices from different manufacturers to be configured to work together in one household.
FIG. 14 is a diagram illustrating ambient device identification of at least two users according to embodiments described herein. Location 1400 is defined to include any number of devices within range. Devices within the location 1400 may be configured by the system 200, for example, for any number of users as part of a particular household associated with the location 1400, which may be used to generate a distributed environment computing system. Location 1400 may be or represent a user environment including, but not limited to, a home, a household, a residence, a business, and the like.
As shown in FIG. 14, a first user 1402 and a second user 1404 are part of a distributed environment computing system that is deployed for a location 1400. The assistant/hub device 1406 is also configured as part of a system for the location 1400.
In conventional systems, the device experience may be optimized for anyone who has configured the device. For example, conventional device configurations rely on users having user accounts that are dependent on the service provider. Secondary users (e.g., users who are not configuring the device) are often under consideration, which may result in a lack of a personalized experience for the second user. The system 200 may ensure that additional users of the home are considered and provided with respect to the home device associated with the location 1400. For example, the system 200 can understand a public context while adhering to personal preferences. The experience provided from the devices associated with the system 200 (and location 1400) may be family and communication-oriented and still provide personal value to each user. In the depicted device 1406, both users 1402 and 1404 are identified (shown by icons 1408 and 1410, respectively). The device 1406 may address both users as shown by the audio indication 1412.
15A-15B illustrate example environmental device configurations for a home, according to embodiments described herein. Location 1500 is defined to include any number of devices within range. The devices within the location 1500 may be configured by the system 200, for example, for any number of users as part of a particular household associated with the location 1500, which may be used to generate a distributed environment computing system. Location 1500 may be or represent a user environment including, but not limited to, a home, a household, a residence, a business, and the like.
Referring to fig. 15A, an assistant device 1502 is illustrated as part of a home account 1504 that may have been previously configured for a location 1500. Here, the device 1506 may be newly added. The home account 1504 can use the system 200, which can have device-to-device awareness to identify particular devices and/or capabilities with one or more devices within the location 1500, and can trigger such new devices to inherit particular credentials and/or preferences.
Referring to fig. 15B, device 202 may also provide a modular out-of-box experience. For example, device configuration and service configuration may be implemented as separate modules that can be individually activated and reordered depending on the particular device (or service) that the user is configuring. Modules may represent embeddable and brandable components that can be added to particular device software.
Additionally, information associated with home account 1504 (e.g., device distributed storage) can be used to provision devices within location 1500. For example, the system 200 may use the home account 1504 to identify a first device manufacturer 1508 and a second device manufacturer 1510. In this example, the first device manufacturer may be a bulb manufacturer and the second device manufacturer may be a smart socket manufacturer. Here, the system 200 may allow a user to log into a device via a particular manufacturer or service provider via a device associated with the distributed environment computing system, as illustrated by element 1512. In some implementations, the system 200 can detect a particular device, as shown by indicator 1514. The system 200 detects that two lights are found and may indicate which rooms and routines are configured for the two lights. The system 200 may also provide an indicator similar to indicator 1514 to allow a user to configure particular routines and rooms or to configure to inherit other routines from other devices.
In some implementations, the system 200 can detect a particular product key associated with a device. When the product key is identified, the system 200 can provide the naming and language elements associated with the home location 1500. Nearby sensor devices can act as a hub for communication and processing, for example, for device setup and task management between devices. For example, an original device manufacturer may include embeddable branded components that a user can enable based on permissions without visually leaving the device configuration flow.
In some implementations, the system 200 can trigger configuration of additional devices that the user brings into the location 1500. For example, the system 200 may discover a new device that is close to an already deployed distributed environment computing system and may begin provisioning the new device into the system. Additionally, the system 200 can register the new device by storing the device information in a distributed store associated with the location 1500. The system 200 may provide the new device with user and/or device preferences from any other device associated with the location 1500. Accounts and/or services may then be linked between devices that include the new device.
Fig. 16 is a diagram illustrating another example of an environment device configuration for home according to an embodiment described herein. Location 1600 is defined to include any number of devices within range. Devices within location 1600 may be configured by system 200, for example, for any number of users as part of a particular household associated with location 1600, which may be used to generate a distributed environment computing system. Location 1600 may be or represent a user environment including, but not limited to, a home, a household, a residence, a business, and the like.
In this example, the user may typically access the mobile device 1602 to obtain the recipe. At some point, the user may purchase another device 1604 for the location 1600. The user may remove the device 1604 and place the device in a home associated with the location 1600. The system 200 can detect the device 1604 and can detect capabilities associated with the device 1604. At some point, the device 1604 may identify family needs (e.g., tasks that the user may benefit from). In the depicted example, the device 1604, via the system 200, recognizes that the device 1604 may be useful for providing recipes in the kitchen, as shown by the indicator 1606. Here, the system 200 may determine that providing the recipe instructions via the device 1604 may be useful, and in response, trigger a portion of a configuration for viewing the recipe application (e.g., previously accessed on the device 1602) to receive the instructions via the device 1604. In some implementations, additional functionality can be available on the device 1604 without the user having to configure the functionality based on information retrieved via the distributed environment computing system 200.
Fig. 17 illustrates another example of an ambient device configuration for a home according to embodiments described herein. Location 1700 is defined to include any number of devices within range. The devices within the location 1700 may be configured by the system 200, for example, for any number of users, as part of a particular household associated with the location 1700, which may be used to generate a distributed environment computing system. Location 1700 may be or represent a user environment including, but not limited to, a home, a household, a residence, a business, and the like.
In some implementations, ambient device configuration can provide empirical and proactive configuration options by presenting questions, services, and other options for configuring devices of the home. For example, example configuration options may determine setting the context and/or user interests of the device. In fig. 17 by asking the user "What do you like to use this device for (What you want to do with this device)? "show an example, such a question may also provide answers that the user may select, as shown by answers 1704, 1706, and 1708.
The system 200 may also provide a continuous discovery module (e.g., options) after device configuration (and over time) to enable discovery and configuration of new features and/or services. For example, device 1710 indicates a "did you knock" audio question 1712 to enable the user to learn about new or unconfigured features and/or services. A particular configuration module may appear contextually over time.
Fig. 18 is a diagram illustrating an example of an environmental device sharing policy and configuration details with other environmental devices associated with a household according to embodiments described herein. Location 1800 is defined to include any number of devices within range. The devices within the location 1800 may be configured by the system 200, for example, for any number of users as part of a particular household associated with the location 1800, which may be used to generate a distributed environment computing system. Location 1800 may be or represent a user environment including, but not limited to, a home, a household, a residence, a business, and the like.
As shown, the assistant device 1802 can be used with a camera device 1804. When the assistant device 1802 is brought into the location 1800, a home system (e.g., the system 200) can provide an indication such as the indicator 1806, i.e., the capabilities of the camera device 1804 can be upgraded to additional features or tasks when used with the assistant device 1802. Such upgrades may be user-enabled, user-disabled, and/or license-based. In another example, when a new device is brought into location 1800, a question may be provided to the user, such as a question regarding setting a particular device as part of the settings associated with the room, as shown by indicator 1808. Generally, new products and/or services may employ room-wide and home-wide policies and capabilities associated with the location 1800. Thus, new devices and services may be seamless, and in some cases, device requests are triggered to be added to the home system. In some implementations, when a user moves a device between particular rooms, the moved device may adopt settings, preferences, and/or behaviors associated with the new room.
Fig. 19 is a diagram illustrating an example of a third party sensor configured for home according to embodiments described herein. Location 1900 is defined to include any number of devices within range. Devices within location 1900 can be configured by system 200, for example, for any number of users as part of a particular household associated with location 1900, which can be used to generate a distributed environment computing system. Location 1900 may be or represent a user environment including, but not limited to, a home, a household, a residence, a business, and the like.
A user may have a mobile device 1902 configured with a location 1900. The mobile device may be used to configure additional devices associated with location 1900. However, if the user chooses not to set an additional device, the device may be automatically detected by another device at a later time. For example, the assistant/hub device 1904 may detect new devices (e.g., the smart light bulb device 1906, the smart light bulb device 1908, and the smart light bulb device 1910). The hub may generate suggestions for the user using instructions, questions, and/or other guidance. Here, the smart light bulb 1906, the smart light bulb device 1908, and the smart light bulb device 1910 are all from a third party (3P) manufacturer, which is not related or associated with the devices 1902 or 1904, each of the devices 1902 or 1904 being manufactured by one or more different manufacturers than the smart light bulb devices 1906-1910. However, the device 1904 may be associated with a system 200 in which the underlying operating system software may provide access to additional setup APIs and/or pairing criteria in order to seamlessly embed the configuration of the smart bulb devices 1906-1910 in the configuration for the home associated with the location 1500. As such, the ecosystem generated by the system 200 (e.g., a distributed environment computing system) can be consistent across devices while allowing the devices 1906-1910 to retain and express their underlying brands.
FIG. 20 is an example process 2000 of operating a distributed environment computing system according to embodiments described herein. The process 2000 may ensure that devices in the defined user environment can communicate, share, and perform tasks. For convenience, the process 2000 may be described with reference to the system 200, architectures 300 and 350.
At block 2002, the process 2000 includes detecting, by the computing device, a plurality of additional devices associated with the user environment. For example, the computing system 202 may detect any number of devices 104, 106, 108, 112, 114, 116, and 204 within a location defined as a user environment, such as a location (e.g., home/home). Detecting may include detecting the presence of devices, locations associated with each respective device, proximity between devices in the user's environment, and the like. Typically, the additional devices may or may not include personal user devices such as mobile phones, laptop computers, desktop computers, and the like.
At block 2004, the process 2000 includes determining, for a plurality of additional devices, a plurality of capabilities associated with one or more of the plurality of additional devices. For example, the system 202 may determine device capabilities and/or processing capabilities associated with each of the devices 104, 106, 108, 112, 114, 116, and 204. Example capabilities may include, but are not limited to, device sensor capabilities, device communication capabilities, device processing capabilities, device hardware capabilities, and/or device software capabilities, to name a few. In some implementations, computing system 202 may access one or more distributed storage logs associated with devices within a particular home location to evaluate and/or determine capabilities.
At block 2006, the process 2000 includes configuring, by the computing device, the plurality of additional devices as a distributed computing system. A plurality of additional devices may be defined in the distributed environment computing system based on at least one of the plurality of capabilities and a location of the device within the user environment. For example, the computing system 202 can evaluate that each of the devices 104, 106, 108, 112, 114, 116, and 204 can be associated with the user's household (and/or within a particular distance of the location of the user's household). In response, the system 202 may generate and/or otherwise configure the devices 104, 106, 108, 112, 114, 116, and 204 to operate as a distributed environment computing system capable of performing tasks for the household.
In some implementations, configuring the plurality of additional devices as a distributed computing system includes enabling policies and user preferences associated with the user environment and the computing device for the plurality of additional devices. For example, computing system 202 may examine a plurality of capabilities associated with each device to determine which policies, if any, can be enabled on a particular device. For example, if two devices are in a bedroom location within a home, the computing system 202 can enable a predefined policy, i.e., the camera devices within such an area are turned off unless the device user configures a different policy associated with such an area. In some implementations, configuring the plurality of additional devices as a distributed computing system may include performing a security check on an unidentified device in response to detecting the unidentified device within the user environment. The configuring may also include configuring policies and user preferences on the unidentified device if the unidentified device passes the security check.
At block 2008, the process 2000 includes receiving, at the computing device, a request to perform a task. For example, the computing system 202 may receive a request from the device 106 to perform a task. This task may include viewing the front door from 2:00 pm on monday to 4:00 pm to ensure that Ella returned from school. In this example, system 202 can receive the request and begin determining how to perform the task.
At block 2010, the process 2000 includes determining, by the computing device, which devices of a plurality of additional devices are capable of performing the task. For example, the computing system 202 may determine which of the devices associated with the household (e.g., devices 104, 106, 108, 112, 114, 116, and 204) are capable of performing the task.
At block 2012, the process 2000 includes selecting at least one additional device of the plurality of additional devices determined to be capable of performing the task. The selection of the additional device may be based at least in part on the determined proximity of the plurality of devices to the computing device. For example, the computing system 202 may determine which devices are proximate to the computing device receiving the requested task to first determine whether the task (or user) would benefit from being performed by, for example, devices near the user and/or near the task receiving device 202. In this example, the task involves viewing a particular location, so proximity may not be considered when selecting one or more devices to perform the task.
In some implementations, computing system 202 may select one or more of the plurality of additional devices by evaluating the determined operating systems executing on respective ones of the plurality of devices. For example, a particular device in system 200 may include an operating system associated with a flag or indicator that indicates that the device is capable of performing a particular task or is capable of sharing or distributing tasks among other devices. In some implementations, the device may include a module that determines the device operating system and then determines whether the device operating system is capable of performing particular tasks or distributing such tasks. In some implementations, the operating system of a particular device in system 200 may inform other devices in system 200 of available device capabilities and/or protocols to be used with the particular device.
For example, if a particular camera lens of a device is configured by a user to be transmitted to a user at a location that is not at home or to use a device that is not configured for home, the system 202 may have to select another device that is enabled to transmit content to the offsite device or the non-approved device. For example, the distributed environment computing system 200 may have specific devices that may communicate information to offsite users upon request according to system policies. Such policies may be configured for devices that capture different types of data. For example, content and/or data captured by a doorbell camera or an outdoor security camera may be unlikely to include user data, and thus a policy may be configured to remotely access such data without requiring home encryption or other security protocols associated with system 200.
In some implementations, computing system 202 may select one or more of the plurality of additional devices by evaluating the determined sensor-based capabilities available on respective ones of the plurality of devices. Sensor-based capabilities may include device capabilities that operate and/or otherwise use device sensors to perform capabilities. For example, the system 202 may determine which devices in the system 200 include camera and/or other image capture (using image sensors) capabilities. Such devices may be selected and ordered according to the location associated with the respective device. For example, a doorbell camera (not shown) and security device 106 may be selected for performing tasks, but security device 106 may be selected based on a family entry and a street view that captures children (e.g., ela) arriving and entering the home. For example, when ela enters home, other devices may also be selected and ordered based on facial recognition capabilities.
In some implementations, selecting at least one of the plurality of additional devices is further based on detected information associated with the user environment. For example, a user environment may be defined as a physical building that contains a computing system 202 and a plurality of additional devices 104, 106, 108, 112, 114, 116, and 204. Each device may include additional useful information that may help perform tasks.
In some implementations, selecting at least one additional device of the plurality of additional devices to perform the task includes determining a context for the user environment. The context may be based on the detected information and stored information associated with one or more of the plurality of additional devices. For example, the detected information includes calendar information. For example, the calendar on the assistant device 112 may detect that ela is not present at school on monday based on the most recent scheduling exercises. Thus, if the task is a periodic task that occurs every monday, and the scheduled school lesson is abnormal, system 202 may detect an event that includes ela and may send a notification to the task requester to let the requester know that ela should not be at home between the requested viewing times.
Other detected data about the requested task are of course possible. For example, in some implementations, the detected information corresponds to a detected level of user activity in the user environment, which may, for example, indicate that the Ella has been at home (or arrived early). In some implementations, the detected information can correspond to one or more detected audio requests or detected visual images in the user environment. For example, if ela submits an audio request or is captured by one of the device cameras of the home at 1:45 pm, the task may be removed and/or otherwise rescheduled. The communication may be sent to the task requester using the detected audio and/or video images.
In some implementations, the process 2000 may include selecting, by the computing system 202, a second device of the plurality of additional devices to generate an output corresponding to the task. For example, once ela arrives at home, a photograph captured indoors by ela may be provided to the task requester to indicate that ela arrives at home, and the captured photograph may provide evidence that ela is at home.
In some implementations, the selection of the second device may be based at least in part on determining that the selected at least one device (e.g., the security device 106) of the plurality of additional devices is not suitable for generating and communicating output corresponding to the task. For example, although the device 106 may send a capture of the ela at the front door of the home, the device 106 may not be able to capture an indoor photograph of the ela showing that the ela has indeed entered the home. Instead, the device 110 may detect the presence of ela and may capture a photograph of ela and send it to the task requester.
In some implementations, selecting, by the computing system 202, a second device of the plurality of additional devices to generate an output corresponding to the task may include selecting the second device based at least in part on determining that the location of the security device 106 is outside a predefined visual range or a predefined audio range of a user associated with the request to perform the task. For example, if the task request includes performing a task in a room other than device 106, a different device (such as device 110) may be selected to perform the task.
At block 2014, the process 2000 includes triggering, by the computing device, the selected device to perform the task. For example, the computing system 202 may trigger execution of an image capturing any movement within the range of the security device 106 between hours of 2:00 and 4: 00. In some implementations, triggering, by the computing system 202, the selected device (e.g., the security device 106) to perform the task includes accessing, via an operating system associated with the computing system 202, at least one service in communication with a respective operating system executing on the selected at least one additional device (e.g., the security device 106). For example, the security device 106 may not be able to send images and/or content to other devices. The service may be configured using one or more device distributed stores (e.g., logs), for example, to transmit captured content to devices within the system 200, which may generate communication messages to other devices in the home or to devices approved to receive home content (e.g., mobile devices of family members requesting a task). Such a service may be configured to dispatch the received task to at least one other device of the plurality of additional devices. For example, the device 106 may capture a photograph of the Ella and may send (or make available) the photograph to the assistant device 114, which assistant device 114, via the underlying on-board operating system, is configured to generate and send messages to other on-site or remote home devices.
In some implementations, triggering the selected device (e.g., device 106 and/or device 114) to perform the task includes generating a visual output (e.g., a photograph of ela) provided on a display of the computing device in response to determining that the computing device is within a threshold distance of a user associated with the received request to perform the task.
In some implementations, triggering the selected device to perform the task includes generating visual and audio outputs (e.g., a captured image, a captured video, etc. from the security device 106). Visual and audio output may be provided on another one of the plurality of additional devices in response to determining a time of day outside the predefined time period. For example, if the system 200 does not approve the transmission of home data to a device outside the home, the information may be transmitted or recorded to another device within the system 200. For example, another device may be approved to send such data, and may alert the task requester to the arrival of ela. In some implementations, the system 202 can trigger the display of a graphical control element on a display of the computing device (or any device associated with the system 200) to enable a user to select controls for a device selected to perform a task. For example, an example control may be a play button that plays a video associated with a task.
FIG. 21 is an example process 2100 for operating a distributed environment computing system to share tasks among multiple devices in accordance with embodiments described herein. Process 2100 can ensure that devices in the defined user environment can communicate, share, and perform tasks. For convenience, process 2100 may be described with reference to system 200, architectures 300 and 350. In some embodiments, devices described throughout this disclosure may operate as other devices within system 200. For example, the assistant device 114 may operate as a computing system 202 that includes each component of the device 202.
At block 2102, process 2100 includes detecting, by a computing device, a plurality of additional devices associated with a user environment. For example, the computing system 202 may detect any number of devices 104, 106, 108, 112, 114, 116, and 204 within a location defined as a user environment, such as a location (e.g., home/home). Detecting may include detecting the presence of devices, locations associated with each respective device, proximity between devices in the user's environment, and the like. Typically, the additional devices may or may not include personal user devices such as mobile phones, laptop computers, desktop computers, and the like.
At block 2104, process 2100 includes determining, for a plurality of additional devices, a plurality of capabilities associated with each of the respective additional devices. For example, the system 202 may determine device capabilities and/or processing capabilities associated with each of the devices 104, 106, 108, 112, 114, 116, and 204. Example capabilities may include, but are not limited to, device sensor capabilities, device communication capabilities, device processing capabilities, device hardware capabilities, and/or device software capabilities, to name a few. In some implementations, computing system 202 may access one or more device distributed stores or storages generally associated with devices within a particular home location to evaluate and/or determine capabilities.
At block 2106, process 2100 includes configuring, by the computing device, a plurality of additional devices as a distributed computing system, the plurality of additional devices corresponding to at least one of the plurality of capabilities and a device location within the user environment. In some embodiments, the distributed computing system may be configured according to user-configured permissions, user consent, and/or other device-based policies.
A plurality of additional devices may be defined in the distributed environment computing system 200 based on at least one of the plurality of capabilities and the location of the device within the user environment. For example, the computing system 202 can evaluate that each of the devices 104, 106, 108, 112, 114, 116, and 204 can be associated with the user's household (and/or within a particular distance of the location of the user's household). In response, the system 202 may generate and/or otherwise configure the devices 104, 106, 108, 112, 114, 116, and 204 to operate as a distributed environment computing system capable of performing tasks for the household.
At block 2108, process 2100 includes receiving, at a computing device, a request to perform a task. For example, the user 102 may be away from home and may wish to enable security measures. As shown in fig. 1A, a user may speak or otherwise request performance of a task 118 (i.e., securing my premises) to trigger a device 114, such as organizing the spoken task 118 among one or more environmental devices 104-116. Computing system 202 may be included, for example, in assistant device 114 or device 116 that may execute an O/S capable of interpreting commands to and from the platforms described herein.
At block 2110, process 2100 includes determining that performance of the completion task indicates use of two or more capabilities of the plurality of capabilities. For example, the assistant device 114 (operating as the device 202) may determine which additional device of the plurality of additional devices is capable of performing the task within the distributed computing system 200 (block 2112), and select at least two devices of the plurality of additional devices to share performance of the two or more capabilities to complete the task. Selecting at least two devices may be based at least in part on the determined proximity of the two devices to the computing device (block 2114).
For example, upon receiving task 118, device 114 may evaluate which devices in the system are capable of protective measures (e.g., security tasks). Device 114 may also determine a particular proximity of the devices, which may be used to evaluate which devices to enable security measures. For example, device 114 may turn on security features of devices that are determined to have security capabilities and to comply with policies for home. Here, the device 114 (operating as the device 202) may determine that the door lock device 104 and the security device 106 are sufficient to protect the home.
In operation, device 114 may send signals and record such signals in distributed storage to trigger devices 104, 106, 108, 110, 112, and 116 to perform security commitments to the home. Each enabled device may also record the signal in a respective distributed storage associated with each respective device. Each distributed store (e.g., log) may be synchronized with a master home distributed store (e.g., distributed store 257) so that a master home ledger (e.g., distributed store) may be used to make decisions.
At block 2116, process 2100 includes triggering, by the computing device, performance of the task by the selected at least two devices. For example, device 114 may trigger devices 104 and 106 to enable the security protocol according to a predetermined policy. In some implementations, device 114 may trigger such a device to enable security measures without a policy to replace such measures.
In some embodiments, selecting the at least two devices includes configuring the at least two devices to communicate to perform a plurality of separate portions of the task. For example, device 114 may configure device 104 and device 106 to communicate via bluetooth, e.g., to enable and disable security measures in a particular order. For example, if the door lock device 104 is unlocked, the security device 106 may then be closed.
In some embodiments, selecting at least two devices includes determining which of a plurality of devices include components configured to perform two or more capabilities to complete a task, and configuring at least two devices to communicate to complete the task. For example, device 114 may trigger synchronization of security measures between device 104 and device 106.
Fig. 22 illustrates an example of a computer device 2200 and a mobile computer device 2250 that may be used with the techniques described herein. Computing device 2200 is intended to represent various forms of digital computers, such as laptops, desktops, tablets, workstations, personal digital assistants, smart devices, appliances, electronic sensor-based devices, televisions, servers, blade servers, mainframes, and other appropriate computing devices. Computing device 2250 is intended to represent various forms of mobile devices, such as personal digital assistants, cellular telephones, smart phones, and other similar computing devices. The components shown here, their connections and relationships, and their functions, are meant to be exemplary only, and are not meant to limit implementations of the inventions described and/or claimed in this document.
The computing device 2200 includes a processor 2202, memory 2204, storage 2206, a high speed interface 2208 connecting to the memory 2204 and high speed expansion ports 2210, and a low speed interface 2212 connecting to the low speed bus 2214 and the storage 2206. The processor 2202 can be a semiconductor-based processor. The memory 2204 can be a semiconductor-based memory. Each of the components 2202, 2204, 2206, 2208, 2210, and 2212 are interconnected using various buses, and may be mounted on a common motherboard or in other manners as appropriate. The processor 2202 is capable of processing instructions for execution within the computing device 2200, including instructions stored in the memory 2204 or on the storage device 2206 to display graphical information for a GUI on an external input/output device, such as the display 2216 coupled to the high speed interface 2208. In other embodiments, multiple processors and/or multiple buses may be used, as appropriate, along with multiple memories and types of memory. Also, multiple computing devices 2200 may be connected, with each device providing portions of the necessary operations (e.g., as a server bank, a group of blade servers, or a multi-processor system).
The memory 2204 stores information within the computing device 2200. In one implementation, the memory 2204 is a volatile memory unit or units. In another implementation, the memory 2204 is a non-volatile memory unit or units. The memory 2204 may also be another form of computer-readable medium, such as a magnetic or optical disk. Generally, a computer-readable medium may be a non-transitory computer-readable medium.
The storage device 2206 is capable of providing mass storage for the computing device 2200. In one implementation, the storage device 2206 may be or contain a computer-readable medium, such as a floppy disk device, a hard disk device, an optical disk device, or a tape device, a flash memory or other similar solid state memory device, or an array of devices, including devices in a storage area network or other configurations. The computer program product can be tangibly embodied in an information carrier. The computer program product may also contain instructions that, when executed, perform one or more methods and/or computer-implemented methods, such as those described above. The information carrier is a computer-or machine-readable medium, such as the memory 2204, the storage device 2206, or memory on processor 2202.
The high-speed controller 2208 manages bandwidth-intensive operations for the computing device 2200, while the low-speed controller 2212 manages lower bandwidth-intensive operations. Such allocation of functions is exemplary only. In one implementation, the high-speed controller 2208 is coupled to memory 2204, a display 2216 (e.g., through a graphics processor or accelerator), and to high-speed expansion ports 2210, which may accept various expansion cards (not shown). In this implementation, low-speed controller 2212 is coupled to storage device 2206 and low-speed expansion port 2214. The low-speed expansion port, which may include various communication ports (e.g., USB, bluetooth, ethernet, wireless ethernet), may be coupled to one or more input/output devices, such as a keyboard, a pointing device, a scanner, or a networking device such as a switch or router, for example, through a network adapter.
As shown, computing device 2200 may be implemented in a number of different forms. For example, it may be implemented as a standard server 2220, or multiple times in a group of such servers. It may also be implemented as part of a rack server system 2224. Further, it may be implemented in a personal computer such as laptop 2222. Alternatively, components from computing device 2200 may be combined with other components in a mobile device (not shown), such as device 2250. Each of these devices may contain one or more of the computing devices 2200, 2250, and an entire system may be made up of multiple computing devices 2200, 2250 communicating with each other.
The processor 2252 is capable of executing instructions within the computing device 2250, including instructions stored in the memory 2264. The processor may be implemented as a chipset of chips that include separate and multiple analog and digital processors. The processor can provide, for example, for coordination of the other components of the device 2250, such as control of user interfaces, applications run by the device 2250, and wireless communication by the device 2250.
The processor 2252 may communicate with a user through a control interface 2258 and a display interface 2256 coupled to a display 2254. The display 2254 may be, for example, a TFT LCD (thin film transistor liquid crystal display) or OLED (organic light emitting diode) display or other suitable display technology. Display interface 2256 may comprise appropriate circuitry for driving display 2254 to present graphical and other information to a user. The control interface 2258 may receive commands from a user and convert them for submission to the processor 2252. Further, an external interface 2262 may be provided in communication with the processor 2252 for enabling near area communication of the device 2250 with other devices. The external interface 2262 may provide, for example, wired communication in some embodiments, or wireless communication in other embodiments, and multiple interfaces may also be used.
The memory may include, for example, flash memory and/or NVRAM memory, as described below. In one embodiment, a computer program product is tangibly embodied in an information carrier. The computer program product contains instructions that, when executed, perform one or more methods, such as those described above. The information carrier is a computer-or machine-readable medium, such as memory 2264, expansion memory 2274, or memory on processor 2252, which may be received, for example, over transceiver 2268 or external interface 2262.
The device 2250 may communicate wirelessly through a communication interface 2266, which may include digital signal processing circuitry as necessary. The communication interface 2266 may provide for communications under various modes or protocols, such as GSM voice calls, SMS, EMS, or MMS messaging, CDMA, TDMA, PDC, WCDMA, CDMA2000, or GPRS, among others. Such communication may occur, for example, through radio-frequency transceiver 2268. Further, short-range communications may occur, such as using a Bluetooth, Wi-Fi, or other such transceiver (not shown). In addition, a GPS (global positioning system) receiver module 2270 may provide additional navigation-and location-related wireless data to the device 2250, which may be used as appropriate by applications running on the device 2250.
The device 2250 may also communicate audibly using an audio codec 2260 that may receive spoken information from the user and convert it to usable digital information. Audio codec 2260 may likewise generate audible sound for the user, such as through a speaker, e.g., in a handset of device 2250. Such sound may include sound from voice telephone calls, may include recorded sound (e.g., voice messages, music files, etc.), and may also include sound generated by applications operating on device 2250.
As shown, the computing device 2250 may be implemented in a number of different forms. For example, it may be implemented as a cellular telephone 2280. It may also be implemented as part of a smart phone 2282, personal digital assistant, or other similar mobile device.
Various implementations of the systems and techniques described here can be realized in digital circuitry, integrated circuitry, specially designed ASICs (application specific integrated circuits), computer hardware, firmware, software, and/or combinations thereof. These various implementations can include implementation in one or more computer programs that are executable and/or interpretable on a programmable system including at least one programmable processor, special purpose or general purpose, coupled to receive data and instructions from, and to transmit data and instructions to, a storage device, at least one input device, and at least one output device.
These computer programs (also known as modules, programs, software applications, or code) include machine instructions for a programmable processor, and can be implemented in a high-level procedural and/or object-oriented programming language, and/or in assembly/machine language. As used herein, the terms "machine-readable medium," "computer-readable medium" refers to any computer program product, apparatus and/or device (e.g., magnetic discs, optical disks, memory, Programmable Logic Devices (PLDs)) used to provide machine instructions and/or data to a programmable processor, including a machine-readable medium that receives machine instructions as a machine-readable signal. The term "machine-readable signal" refers to any signal used to provide machine instructions and/or data to a programmable processor.
To provide for interaction with a user, the systems and techniques described here can be implemented on a computer having a display device (e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor, or an LED (light emitting diode)) for displaying information to the user and a keyboard and a pointing device (e.g., a mouse or a trackball) by which the user can provide input to the computer. Other types of devices can also be used to provide for interaction with a user. For example, feedback provided to the user can be any form of sensor feedback (e.g., visual feedback, auditory feedback, or tactile feedback), and input from the user can be received in any form, including acoustic, speech, or tactile input.
The systems and techniques described here can be implemented in a computing system that includes a back-end component (e.g., as a data server), or that includes a middleware component (e.g., an application server), or that includes a front-end component (e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the systems and techniques described here), or any combination of such back-end, middleware, or front-end components. The components of the system can be interconnected by any form or medium of digital data communication, e.g., a communication network. Examples of communication networks include a local area network ("LAN"), a wide area network ("WAN"), and the internet.
The computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.
A number of embodiments have been described. Nevertheless, it will be understood that various modifications may be made without departing from the spirit and scope of the invention.
Moreover, the logic flows depicted in the figures do not require the particular order shown, or sequential order, to achieve desirable results. In addition, other steps may be provided, or steps may be eliminated, from the described flows, and other components may be added to, or removed from, the described systems. Accordingly, other embodiments are within the scope of the following claims.
In addition to the above, providing a user with control to allow the user to select whether and when the systems, programs, or features described herein may be able to allow for the collection of user information (e.g., information about the user's social network, social actions or activities, profession, the user's preferences, or the user's current location), and whether to send the user's content or communications from a server. In addition, certain data may be processed in one or more ways prior to storage or use, thereby removing personally identifiable information. For example, the identity of the user may be treated so that personally identifiable information cannot be determined for the user, or the geographic location of the user where location information is obtained (e.g., to a city, ZIP code, or state level) may be summarized so that a particular location of the user cannot be determined. Thus, the user may have control over which information is collected about the user, how the information is used, and which information is provided to the user.
The computer system (e.g., computing device) may be configured to wirelessly communicate with the network server over the network via the communication link established with the network server using any known wireless communication techniques and protocols, including Radio Frequency (RF), microwave frequency (MWF), and/or infrared frequency (IRF) wireless communication techniques and protocols suitable for communicating over the network.
According to various aspects of the disclosure, implementations of the various techniques described herein may be implemented in digital electronic circuitry, or in computer hardware, firmware, software, or in combinations of them. Embodiments may be implemented as a computer program product (e.g., a computer program tangibly embodied in an information carrier, a machine-readable storage device, a computer-readable medium, or a tangible computer-readable medium) for processing by, or to control the operation of, data processing apparatus (e.g., a programmable processor, a computer, or multiple computers). In some implementations, a tangible computer-readable storage medium may be configured to store instructions that, when executed, cause a processor to perform a process. A computer program, such as the computer program(s) described above, can be written in any form of programming language, including compiled or interpreted languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, or other unit suitable for use in a computing environment. A computer program can be deployed to be processed on one computer or on multiple computers at one site or distributed across multiple sites and interconnected by a communication network.
Specific structural and functional details disclosed herein are merely representative for purposes of describing example embodiments. Example embodiments may, however, be embodied in many alternate forms and should not be construed as limited to only the embodiments set forth herein.
The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of embodiments. As used herein, the singular forms "a", "an" and "the" are intended to include the plural forms as well, unless the context clearly indicates otherwise. It will be further understood that the terms "comprises", "comprising", "includes" and/or "including", when used in this specification, specify the presence of stated features, steps, operations, elements, and/or components, but do not preclude the presence or addition of one or more other features, steps, operations, elements, components, and/or groups thereof.
It will be understood that when an element is referred to as being "coupled," "connected," or "responsive" to or on another element, it can be directly coupled, connected, or responsive, or directly on the other element, or intervening elements may also be present. In contrast, when an element is referred to as being "directly coupled," "directly connected," or "directly responsive" to or "directly on" another element, there are no intervening elements present. As used herein, the term "and/or" includes any and all combinations of one or more of the associated listed items.
Spatially relative terms, such as "below," "under," "above," "upper," and the like, may be used herein for ease of description to describe one element or feature's relationship to another element(s) or feature(s) as illustrated. It will be understood that the spatially relative terms are intended to encompass different orientations of the device in use or operation in addition to the orientation depicted in the figures. For example, if the device in the figures is turned over, elements described as "below" or "beneath" other elements or features would then be oriented "above" the other elements or features. Thus, the term "below … …" can encompass both an orientation of above and below. The device may be otherwise oriented (rotated 70 degrees or at other orientations) and the spatially relative descriptors used herein interpreted accordingly.
An exemplary embodiment of the concepts is described herein with reference to cross-sectional views, which are schematic illustrations of idealized embodiments (and intermediate structures) of the exemplary embodiment. As such, variations from the shapes of the illustrations as a result, for example, of manufacturing techniques and/or tolerances, are to be expected. Thus, example embodiments of the described concepts should not be construed as limited to the particular shapes of regions illustrated herein but are to include deviations in shapes that result, for example, from manufacturing. Thus, the regions illustrated in the figures are schematic in nature and their shapes are not intended to illustrate the actual shape of a region of a device and are not intended to limit the scope of example embodiments.
It will be understood that, although the terms first, second, etc. may be used herein to describe various elements, these elements should not be limited by these terms. These terms are only used to distinguish one element from another. Thus, a "first" element may be termed a "second" element without departing from the teachings of the present embodiments.
Unless otherwise defined, all terms (including technical and scientific terms) used herein have the same meaning as commonly understood by one of ordinary skill in the art to which these concepts belong. It will be further understood that terms, such as those defined in commonly used dictionaries, should be interpreted as having a meaning that is consistent with their meaning in the context of the relevant art and/or the present specification and will not be interpreted in an idealized or overly formal sense unless expressly so defined herein.
While certain features of the described embodiments have been illustrated as described herein, many modifications, substitutions, changes, and equivalents will now occur to those skilled in the art. It is, therefore, to be understood that the appended claims are intended to cover all such modifications and changes as fall within the scope of the embodiments. It is to be understood that they have been presented by way of example only, and not limitation, and various changes in form and details may be made. Any portions of the devices and/or methods described herein may be combined in any combination, except mutually exclusive combinations. The embodiments described herein may include various combinations and/or subcombinations of the functions, features and/or properties of the different embodiments described.
Claims (20)
1. A computer-implemented method, the method comprising:
detecting, by a computing device, a plurality of additional devices associated with a user environment;
determining, for the plurality of additional devices, a plurality of capabilities associated with the plurality of additional devices;
configuring, by the computing device, the plurality of additional devices as a distributed computing system, the plurality of additional devices corresponding to at least one of the plurality of capabilities and a device location within the user environment;
receiving, at the computing device, a request to perform a task;
determining, by the computing device, which of the plurality of additional devices are capable of performing the task;
selecting at least one additional device of the plurality of additional devices determined to be capable of performing the task, the selecting based at least on:
the determined proximity of the plurality of additional devices to the computing device or to a user associated with the request to perform the task,
the determined operating system executing on a respective device of the plurality of additional devices, an
At least one determined sensor-based capability available on a respective device of the plurality of additional devices; and
triggering, by the computing device, the selected at least one of the plurality of devices to perform the task.
2. The computer-implemented method of claim 1, wherein selecting the at least one of the plurality of additional devices is further based on detected information associated with the user environment defined as a physical building containing the computing device and the plurality of additional devices.
3. The computer-implemented method of claim 2, wherein the detected information corresponds to a detected level of user activity in the user environment, a detected audio request in the user environment, or a detected visual image associated with the user environment.
4. The computer-implemented method of claim 1, further comprising:
selecting, by the computing device, a second device of the plurality of additional devices to generate an output corresponding to the task, the selection of the second device based at least on determining that the selected at least one additional device of the plurality of additional devices is not suitable for generating and communicating the output corresponding to the task.
5. The computer-implemented method of claim 1, further comprising:
selecting, by the computing device, a second device of the plurality of additional devices to generate an output corresponding to the task, the selection of the second device based at least on determining that a location of the at least one additional device of the plurality of additional devices is outside a predefined visual range or a predefined audio range of the user associated with the request to perform the task.
6. The computer-implemented method of claim 1, wherein triggering the selected device to perform the task comprises generating visual and audio outputs that are provided on another one of the plurality of additional devices in response to determining a time of day that is outside of a predefined time period.
7. The computer-implemented method of claim 1, wherein triggering, by the computing device, the selected device to perform the task comprises accessing, via an operating system associated with the computing device, at least one service in communication with a respective operating system executing on the selected at least one additional device, the service configured to dispatch the received task to at least one other device of the plurality of additional devices.
8. The computer-implemented method of claim 1, wherein selecting the at least one of the plurality of additional devices to perform the task comprises:
determining a context for the user environment, the context based on the detected information and stored information associated with the at least one of the plurality of additional devices.
9. The computer-implemented method of claim 8, wherein the detected information comprises calendar information.
10. A computer program product, tangibly embodied on a non-transitory computer-readable medium and comprising instructions that, when executed, are configured to cause at least one processor to:
detecting, by a computing device, a plurality of additional devices associated with a user environment;
determining, for the plurality of additional devices, a plurality of capabilities associated with each of the respective additional devices;
configuring, by the computing device, the plurality of additional devices as a distributed computing system, the plurality of additional devices corresponding to at least one of the plurality of capabilities and a device location within the user environment;
receiving, at the computing device, a request to perform a task; and
in response to determining that performance of completing the task indicates use of two or more capabilities of the plurality of capabilities:
determining, within the distributed computing system, which of the plurality of additional devices are capable of performing the task;
selecting, among the plurality of additional devices, at least two devices that share performance of the two or more capabilities to complete the task, the selection of the at least two devices based at least on the determined proximity of the two devices to the computing device or to a user associated with the request to perform the task; and
triggering, by the computing device, the selected at least two devices to perform the task.
11. The computer program product of claim 10, wherein selecting the at least two devices comprises configuring the at least two devices to communicate to perform separate portions of the task.
12. The computer program product of claim 10, wherein selecting the at least two devices comprises:
determining which of the plurality of devices include components configured to perform the two or more capabilities to complete the task;
configuring the at least two devices to communicate to accomplish the task.
13. The computer program product of claim 10, wherein at least one capability associated with at least one of the two devices extends a capability associated with the other of the at least two devices.
14. The computer program product of claim 10, wherein the performance of the task is triggered in the event that the device in the distributed computing system does not have an internet connection.
15. A system, comprising:
a display;
a memory; and
at least one processor coupled to the memory, the at least one processor configured to:
detecting, by a computing device, a plurality of additional devices associated with a user environment;
determining, for the plurality of additional devices, a plurality of capabilities associated with at least one additional device of the plurality of additional devices;
configuring, by the computing device, the plurality of additional devices as a distributed computing system, the plurality of additional devices corresponding to at least one of the plurality of capabilities and a device location within the user environment;
receiving, at the computing device, a request to perform a task;
determining, by the computing device, which of the plurality of additional devices are capable of performing the task;
selecting at least one additional device of the plurality of additional devices determined to be capable of performing the task, the selecting based at least on the determined proximity of the plurality of devices to the computing device or to a user associated with the request to perform the task; and
triggering, by the computing device, the selected at least one of the plurality of devices to perform the task.
16. The system of claim 15, wherein configuring the plurality of additional devices as a distributed computing system comprises:
implementing policies and user preferences associated with the user environment and the computing device for the plurality of additional devices; and
in response to detecting an unidentified device within the user environment, performing a security check on the unidentified device, and configuring the policy and user preferences on the unidentified device if the unidentified device passes the security check.
17. The system of claim 15, further comprising displaying a graphical control element on the display of the computing device to enable user-selected control of the device selected to perform the task.
18. The system of claim 15, further comprising:
selecting, by the computing device, a second device of the plurality of additional devices to generate an output corresponding to the task, the selection of the second device based at least on determining that a location of the at least one additional device of the plurality of additional devices is outside a predefined visual range or a predefined audio range of a user associated with the request to perform the task.
19. The system of claim 15, wherein triggering the selected device to perform the task comprises generating a visual output in response to determining that the computing device is within a threshold distance of a user associated with the received request to perform the task, the visual output provided on the display of the computing device.
20. The system of claim 15, wherein triggering, by the computing device, the selected device to perform the task comprises accessing, via an operating system associated with the computing device, at least one service in communication with the selected at least one additional device, the service configured to dispatch the received task to at least one other device of the plurality of additional devices.
Applications Claiming Priority (5)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US201962949929P | 2019-12-18 | 2019-12-18 | |
US62/949,929 | 2019-12-18 | ||
US16/727,349 US20210191779A1 (en) | 2019-12-18 | 2019-12-26 | Operating system level distributed ambient computing |
US16/727,349 | 2019-12-26 | ||
PCT/US2020/070752 WO2021127671A1 (en) | 2019-12-18 | 2020-11-05 | Operating system level distributed ambient computing |
Publications (1)
Publication Number | Publication Date |
---|---|
CN114830086A true CN114830086A (en) | 2022-07-29 |
Family
ID=76438854
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN202080087224.4A Pending CN114830086A (en) | 2019-12-18 | 2020-11-05 | Operating system level distributed environment computing |
Country Status (6)
Country | Link |
---|---|
US (1) | US20210191779A1 (en) |
EP (1) | EP4055479A1 (en) |
JP (1) | JP7412564B2 (en) |
KR (1) | KR20220110587A (en) |
CN (1) | CN114830086A (en) |
WO (1) | WO2021127671A1 (en) |
Family Cites Families (13)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9762685B2 (en) * | 2005-04-27 | 2017-09-12 | Live Nation Entertainment, Inc. | Location-based task execution for enhanced data access |
US8171137B1 (en) * | 2011-05-09 | 2012-05-01 | Google Inc. | Transferring application state across devices |
US10425471B2 (en) * | 2012-10-02 | 2019-09-24 | Razer (Asia-Pacific) Pte. Ltd. | Multi-tasker |
KR102122487B1 (en) * | 2014-07-14 | 2020-06-12 | 삼성전자주식회사 | Method and apparatus for processing a function between a plurality of electronic device |
EP3579093B1 (en) * | 2016-06-12 | 2021-10-13 | Apple Inc. | User interface for managing controllable external devices |
EP3501157A4 (en) * | 2016-08-22 | 2020-04-15 | Fybr | System for distributed intelligent remote sensing systems |
US11354089B2 (en) * | 2016-12-09 | 2022-06-07 | Robert Bosch Gmbh | System and method for dialog interaction in distributed automation systems |
WO2018213415A1 (en) * | 2017-05-16 | 2018-11-22 | Apple Inc. | Far-field extension for digital assistant services |
US10983753B2 (en) * | 2017-06-09 | 2021-04-20 | International Business Machines Corporation | Cognitive and interactive sensor based smart home solution |
US10163065B1 (en) * | 2017-08-16 | 2018-12-25 | Nmetric, Llc | Systems and methods of ensuring and maintaining equipment viability for a task |
JP6877594B2 (en) * | 2017-11-21 | 2021-05-26 | グーグル エルエルシーＧｏｏｇｌｅ ＬＬＣ | Low power ambient computing system with machine learning |
US11741406B2 (en) * | 2018-01-31 | 2023-08-29 | Microsoft Technology Licensing, Llc | Location-based task suggestions |
US11108849B2 (en) * | 2018-12-03 | 2021-08-31 | At&T Intellectual Property I, L.P. | Global internet of things (IOT) quality of service (QOS) realization through collaborative edge gateways |
-
2019
- 2019-12-26 US US16/727,349 patent/US20210191779A1/en active Pending
-
2020
- 2020-11-05 WO PCT/US2020/070752 patent/WO2021127671A1/en unknown
- 2020-11-05 JP JP2022537626A patent/JP7412564B2/en active Active
- 2020-11-05 KR KR1020227024642A patent/KR20220110587A/en not_active Application Discontinuation
- 2020-11-05 CN CN202080087224.4A patent/CN114830086A/en active Pending
- 2020-11-05 EP EP20816366.7A patent/EP4055479A1/en active Pending
Also Published As
Publication number | Publication date |
---|---|
KR20220110587A (en) | 2022-08-08 |
JP2023508005A (en) | 2023-02-28 |
JP7412564B2 (en) | 2024-01-12 |
WO2021127671A1 (en) | 2021-06-24 |
EP4055479A1 (en) | 2022-09-14 |
US20210191779A1 (en) | 2021-06-24 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US10354014B2 (en) | Virtual assistant system | |
US11356512B2 (en) | Method and device for controlling home device | |
JP6471174B2 (en) | Intelligent assistant for home automation | |
EP3019970B1 (en) | Interoperability mechanisms for internet of things integration platform | |
US20140297758A1 (en) | Event notifications based on learned traveling times between locations | |
KR20170096774A (en) | Activity-centric contextual modes of operation for electronic devices | |
US20160179087A1 (en) | Activity-centric contextual modes of operation for electronic devices | |
US20140181683A1 (en) | Method and system for controlling external device | |
EP3230824A1 (en) | Virtual assistant system to enable actionable messaging | |
US20170126525A1 (en) | Systems and methods for controlling devices | |
JP2021152921A (en) | System, method, and device for context-aware application | |
US20210208843A1 (en) | Information processing apparatus, information processing method, information processing program | |
US20160080555A1 (en) | Space management system for micropositioning mobile device and management method thereof | |
JP7412564B2 (en) | Operating system level distributed ambient computing | |
US20230027580A1 (en) | Operating system-level assistive features for contextual privacy | |
WO2023192785A1 (en) | Gesture-based remote control of electronic devices | |
Dhillon et al. | Method for Real-Time Voice Communication | |
Brune | An IoT System that Combines Externally Sourced and Public Sensor Data with Internal Enterprise Sensor Data for Action Determination | |
Von Dehsen | Camera Lens with Display Mode | |
Midi et al. | Smart-Voice Invocation of Scenes in Home-Automation Systems | |
Barakos | Context-aware management of multi-device services in the home |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
SE01 | Entry into force of request for substantive examination |
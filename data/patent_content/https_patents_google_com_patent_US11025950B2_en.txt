US11025950B2 - Motion field-based reference frame rendering for motion compensated prediction in video coding - Google Patents
Motion field-based reference frame rendering for motion compensated prediction in video coding Download PDFInfo
- Publication number
- US11025950B2 US11025950B2 US15/893,978 US201815893978A US11025950B2 US 11025950 B2 US11025950 B2 US 11025950B2 US 201815893978 A US201815893978 A US 201815893978A US 11025950 B2 US11025950 B2 US 11025950B2
- Authority
- US
- United States
- Prior art keywords
- frame
- block
- reference frame
- motion field
- motion
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active, expires
Links
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/50—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using predictive coding
- H04N19/503—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using predictive coding involving temporal prediction
- H04N19/51—Motion estimation or motion compensation
- H04N19/573—Motion compensation with multiple frame prediction using two or more reference frames in a given prediction direction
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/70—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals characterised by syntax aspects related to video coding, e.g. related to compression standards
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/134—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the element, parameter or criterion affecting or controlling the adaptive coding
- H04N19/146—Data rate or code amount at the encoder output
- H04N19/147—Data rate or code amount at the encoder output according to rate distortion criteria
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/169—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding
- H04N19/17—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding the unit being an image region, e.g. an object
- H04N19/176—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding the unit being an image region, e.g. an object the region being a block, e.g. a macroblock
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/169—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding
- H04N19/182—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding the unit being a pixel
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/44—Decoders specially adapted therefor, e.g. video decoders which are asymmetric with respect to the encoder
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/50—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using predictive coding
- H04N19/503—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using predictive coding involving temporal prediction
- H04N19/51—Motion estimation or motion compensation
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/50—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using predictive coding
- H04N19/503—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using predictive coding involving temporal prediction
- H04N19/51—Motion estimation or motion compensation
- H04N19/567—Motion estimation based on rate distortion criteria
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/50—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using predictive coding
- H04N19/503—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using predictive coding involving temporal prediction
- H04N19/51—Motion estimation or motion compensation
- H04N19/577—Motion compensation with bidirectional frame interpolation, i.e. using B-pictures
Definitions
- Digital video streams may represent video using a sequence of frames or still images.
- Digital video can be used for various applications including, for example, video conferencing, high definition video entertainment, video advertisements, or sharing of user-generated videos.
- a digital video stream can contain a large amount of data and consume a significant amount of computing or communication resources of a computing device for processing, transmission or storage of the video data.
- Various approaches have been proposed to reduce the amount of data in video streams, including compression and other encoding techniques.
- One technique for compression uses a reference frame to generate a prediction block corresponding to a current block to be encoded. Differences between the prediction block and the current block can be encoded, instead of the values of the current block themselves, to reduce the amount of data encoded.
- This disclosure relates generally to encoding and decoding video data and more particularly relates to rendering a motion field-based reference frame used for motion compensated prediction in video compression.
- a method includes determining a first frame to be predicted, the first frame being in a video sequence, determining a first reference frame from the video sequence for forward inter prediction of the first frame, determining a second reference frame from the video sequence for backward inter prediction of the first frame, determining a respective motion field for blocks of the first frame using at least one of the first reference frame or the second reference frame, determining parameters forming an affine homographic model using the motion field, rendering a current block of a reconstructed reference frame at a co-located position within a motion field-based reference frame by applying the affine homographic model to the current block, and performing a prediction process for the first frame using the motion field-based reference frame.
- An apparatus includes a non-transitory storage medium or memory and a processor.
- the medium includes instructions executable by the processor to carry out the method described above.
- Another apparatus includes a non-transitory storage medium or memory and a processor.
- the medium includes instructions executable by the processor to carry out a method including determining a first frame from a video sequence, determining a first reference frame from the video sequence for forward inter prediction of the first frame, determining a second reference frame from the video sequence for backward inter prediction of the first frame, determining a motion field for at least some of the block of the first frame using at least one of the first reference frame or the second reference frame, generating at least one affine homographic model using the motion field, rendering a current block of a reconstructed reference frame at a co-located position within a motion field-based reference frame by applying the affine homographic model to the current block, and performing a prediction process for the first frame using the motion field-based reference frame.
- FIG. 1 is a schematic of a video encoding and decoding system.
- FIG. 2 is a block diagram of an example of a computing device that can implement a transmitting station or a receiving station.
- FIG. 3 is a diagram of a typical video stream to be encoded and subsequently decoded.
- FIG. 4 is a block diagram of an encoder according to implementations of this disclosure.
- FIG. 5 is a block diagram of a decoder according to implementations of this disclosure.
- FIG. 6 is a diagram of a group of frames in a display order of a video sequence.
- FIG. 7 is a diagram of an example of a coding order for the group of frames of FIG. 6 .
- FIG. 8 is a flowchart diagram of a process for motion compensated prediction of a frame of a video sequence using a reference frame generated based on a motion field.
- FIG. 9 is a diagram used to explain linear projection of the motion vectors according to the teachings herein.
- FIG. 10 is a diagram used to explain an affine homographic model according to the teachings herein.
- FIG. 11 is a diagram illustrating a technique for optimizing a decoder.
- a video stream can be compressed by a variety of techniques to reduce bandwidth required transmit or store the video stream.
- a video stream can be encoded into a bitstream, which involves compression, and is then transmitted to a decoder that can decode or decompress the video stream to prepare it for viewing or further processing. Compression of the video stream often exploits spatial and temporal correlation of video signals through spatial and/or motion compensated prediction.
- Motion compensated prediction uses one or more motion vectors to generate a block (also called a prediction block) that resembles a current block to be encoded using previously encoded and decoded pixels. By encoding the motion vector(s), and the difference between the two blocks, a decoder receiving the encoded signal can re-create the current block.
- Motion compensated prediction may also be referred to as inter prediction.
- Each motion vector used to generate a prediction block in the inter-prediction process refers to a frame other than a current frame, i.e., a reference frame.
- Reference frames can be located before or after the current frame in the sequence of the video stream, and may be frames that are reconstructed before being used as a reference frame. In some cases, there may be three or more reference frames used to encode or decode blocks of the current frame of the video sequence.
- One may be a frame that is referred to as a golden frame.
- Another may be a most recently encoded or decoded frame.
- Another may be an alternative reference frame that is encoded or decoded before one or more frames in a sequence, but which is displayed after those frames in an output display order.
- the alternative reference frame is a reference frame usable for backwards prediction.
- One or more forward and/or backward reference frames can be used to encode or decode a block.
- the efficacy of a reference frame when used to encode or decode a block within a current frame can be measured based on a resulting signal-to-noise ratio or other measures of rate-distortion.
- the pixels that form prediction blocks are obtained directly from one or more of the available reference frames.
- the reference pixel blocks or their linear combinations are used for prediction of the given coding block in the current frame.
- This direct, block-based prediction may not capture the true motion activity available from the reference frames. That is, motion other than translational motion, e.g., general affine motion of objects, is not efficiently captured. For this reason, motion compensated prediction accuracy can suffer.
- implementations of the teachings herein describe the rendering of a reference frame collocated with the current coding frame using motion field estimation.
- This reference frame is referred to as a motion field-based reference frame herein.
- Rendering the motion field-based reference frame involves initially building up a motion field estimation for the current frame via linear projection of the motion vectors from bi-directional reference frames. For any given block in the current frame, the estimated motion vectors assigned to it as well as its surrounding neighbors are available. Such closed boundary motion information allows a relatively precise estimate of an affine homographic model that maps the current block towards pixels in a reference frame. The resulting motion field-based reference frame is capable of handling a non-translational motion model.
- FIG. 1 is a schematic of a video encoding and decoding system 100 .
- a transmitting station 102 can be, for example, a computer having an internal configuration of hardware such as that described in FIG. 2 .
- the processing of the transmitting station 102 can be distributed among multiple devices.
- a network 104 can connect the transmitting station 102 and a receiving station 106 for encoding and decoding of the video stream.
- the video stream can be encoded in the transmitting station 102 and the encoded video stream can be decoded in the receiving station 106 .
- the network 104 can be, for example, the Internet.
- the network 104 can also be a local area network (LAN), wide area network (WAN), virtual private network (VPN), cellular telephone network or any other means of transferring the video stream from the transmitting station 102 to, in this example, the receiving station 106 .
- LAN local area network
- WAN wide area network
- VPN virtual private network
- the receiving station 106 in one example, can be a computer having an internal configuration of hardware such as that described in FIG. 2 . However, other suitable implementations of the receiving station 106 are possible. For example, the processing of the receiving station 106 can be distributed among multiple devices.
- an implementation can omit the network 104 .
- a video stream can be encoded and then stored for transmission at a later time to the receiving station 106 or any other device having a non-transitory storage medium or memory.
- the receiving station 106 receives (e.g., via the network 104 , a computer bus, and/or some communication pathway) the encoded video stream and stores the video stream for later decoding.
- a real-time transport protocol is used for transmission of the encoded video over the network 104 .
- a transport protocol other than RTP may be used, e.g., a Hypertext Transfer Protocol (HTTP) based video streaming protocol.
- HTTP Hypertext Transfer Protocol
- the transmitting station 102 and/or the receiving station 106 may include the ability to both encode and decode a video stream as described below.
- the receiving station 106 could be a video conference participant who receives an encoded video bitstream from a video conference server (e.g., the transmitting station 102 ) to decode and view and further encodes and transmits its own video bitstream to the video conference server for decoding and viewing by other participants.
- FIG. 2 is a block diagram of an example of a computing device 200 that can implement a transmitting station or a receiving station.
- the computing device 200 can implement one or both of the transmitting station 102 and the receiving station 106 of FIG. 1 .
- the computing device 200 can be in the form of a computing system including multiple computing devices, or in the form of one computing device, for example, a mobile phone, a tablet computer, a laptop computer, a notebook computer, a desktop computer, and the like.
- a CPU 202 in the computing device 200 can be a central processing unit.
- the CPU 202 can be any other type of device, or multiple devices, capable of manipulating or processing information now-existing or hereafter developed.
- the disclosed implementations can be practiced with one processor as shown, e.g., the CPU 202 , advantages in speed and efficiency can be achieved using more than one processor.
- a memory 204 in computing device 200 can be a read only memory (ROM) device or a random access memory (RAM) device in an implementation. Any other suitable type of storage device or non-transitory storage medium can be used as the memory 204 .
- the memory 204 can include code and data 206 that is accessed by the CPU 202 using a bus 212 .
- the memory 204 can further include an operating system 208 and application programs 210 , the application programs 210 including at least one program that permits the CPU 202 to perform the methods described here.
- the application programs 210 can include applications 1 through N, which further include a video coding application that performs the methods described here.
- Computing device 200 can also include a secondary storage 214 , which can, for example, be a memory card used with a mobile computing device. Because the video communication sessions may contain a significant amount of information, they can be stored in whole or in part in the secondary storage 214 and loaded into the memory 204 as needed for processing.
- a secondary storage 214 can, for example, be a memory card used with a mobile computing device. Because the video communication sessions may contain a significant amount of information, they can be stored in whole or in part in the secondary storage 214 and loaded into the memory 204 as needed for processing.
- the computing device 200 can also include one or more output devices, such as a display 218 .
- the display 218 may be, in one example, a touch sensitive display that combines a display with a touch sensitive element that is operable to sense touch inputs.
- the display 218 can be coupled to the CPU 202 via the bus 212 .
- Other output devices that permit a user to program or otherwise use the computing device 200 can be provided in addition to or as an alternative to the display 218 .
- the output device is or includes a display
- the display can be implemented in various ways, including by a liquid crystal display (LCD), a cathode-ray tube (CRT) display or light emitting diode (LED) display, such as an organic LED (OLED) display.
- LCD liquid crystal display
- CRT cathode-ray tube
- LED light emitting diode
- OLED organic LED
- the computing device 200 can also include or be in communication with an image-sensing device 220 , for example a camera, or any other image-sensing device 220 now existing or hereafter developed that can sense an image such as the image of a user operating the computing device 200 .
- the image-sensing device 220 can be positioned such that it is directed toward the user operating the computing device 200 .
- the position and optical axis of the image-sensing device 220 can be configured such that the field of vision includes an area that is directly adjacent to the display 218 and from which the display 218 is visible.
- the computing device 200 can also include or be in communication with a sound-sensing device 222 , for example a microphone, or any other sound-sensing device now existing or hereafter developed that can sense sounds near the computing device 200 .
- the sound-sensing device 222 can be positioned such that it is directed toward the user operating the computing device 200 and can be configured to receive sounds, for example, speech or other utterances, made by the user while the user operates the computing device 200 .
- FIG. 2 depicts the CPU 202 and the memory 204 of the computing device 200 as being integrated into one unit, other configurations can be utilized.
- the operations of the CPU 202 can be distributed across multiple machines (wherein individual machines can have one or more of processors) that can be coupled directly or across a local area or other network.
- the memory 204 can be distributed across multiple machines such as a network-based memory or memory in multiple machines performing the operations of the computing device 200 .
- the bus 212 of the computing device 200 can be composed of multiple buses.
- the secondary storage 214 can be directly coupled to the other components of the computing device 200 or can be accessed via a network and can comprise an integrated unit such as a memory card or multiple units such as multiple memory cards.
- the computing device 200 can thus be implemented in a wide variety of configurations.
- FIG. 3 is a diagram of an example of a video stream 300 to be encoded and subsequently decoded.
- the video stream 300 includes a video sequence 302 .
- the video sequence 302 includes a number of adjacent frames 304 . While three frames are depicted as the adjacent frames 304 , the video sequence 302 can include any number of adjacent frames 304 .
- the adjacent frames 304 can then be further subdivided into individual frames, e.g., a frame 306 .
- the frame 306 can be divided into a series of planes or segments 308 .
- the segments 308 can be subsets of frames that permit parallel processing, for example.
- the segments 308 can also be subsets of frames that can separate the video data into separate colors.
- a frame 306 of color video data can include a luminance plane and two chrominance planes.
- the segments 308 may be sampled at different resolutions.
- the frame 306 may be further subdivided into blocks 310 , which can contain data corresponding to, for example, 16 ⁇ 16 pixels in the frame 306 .
- the blocks 310 can also be arranged to include data from one or more segments 308 of pixel data.
- the blocks 310 can also be of any other suitable size such as 4 ⁇ 4 pixels, 8 ⁇ 8 pixels, 16 ⁇ 8 pixels, 8 ⁇ 16 pixels, 16 ⁇ 16 pixels, or larger. Unless otherwise noted, the terms block and macroblock are used interchangeably herein.
- FIG. 4 is a block diagram of an encoder 400 according to implementations of this disclosure.
- the encoder 400 can be implemented, as described above, in the transmitting station 102 such as by providing a computer software program stored in memory, for example, the memory 204 .
- the computer software program can include machine instructions that, when executed by a processor such as the CPU 202 , cause the transmitting station 102 to encode video data in the manner described in FIG. 4 .
- the encoder 400 can also be implemented as specialized hardware included in, for example, the transmitting station 102 .
- the encoder 400 is a hardware encoder.
- the encoder 400 has the following stages to perform the various functions in a forward path (shown by the solid connection lines) to produce an encoded or compressed bitstream 420 using the video stream 300 as input: an intra/inter prediction stage 402 , a transform stage 404 , a quantization stage 406 , and an entropy encoding stage 408 .
- the encoder 400 may also include a reconstruction path (shown by the dotted connection lines) to reconstruct a frame for encoding of future blocks.
- the encoder 400 has the following stages to perform the various functions in the reconstruction path: a dequantization stage 410 , an inverse transform stage 412 , a reconstruction stage 414 , and a loop filtering stage 416 .
- Other structural variations of the encoder 400 can be used to encode the video stream 300 .
- respective frames 304 can be processed in units of blocks.
- respective blocks can be encoded using intra-frame prediction (also called intra-prediction) or inter-frame prediction (also called inter-prediction).
- intra-frame prediction also called intra-prediction
- inter-frame prediction also called inter-prediction
- a prediction block can be formed.
- intra-prediction a prediction block may be formed from samples in the current frame that have been previously encoded and reconstructed.
- inter-prediction a prediction block may be formed from samples in one or more previously constructed reference frames. The designation of reference frames for groups of blocks is discussed in further detail below.
- the prediction block can be subtracted from the current block at the intra/inter prediction stage 402 to produce a residual block (also called a residual).
- the transform stage 404 transforms the residual into transform coefficients in, for example, the frequency domain using block-based transforms.
- the quantization stage 406 converts the transform coefficients into discrete quantum values, which are referred to as quantized transform coefficients, using a quantizer value or a quantization level. For example, the transform coefficients may be divided by the quantizer value and truncated.
- the quantized transform coefficients are then entropy encoded by the entropy encoding stage 408 .
- the entropy-encoded coefficients, together with other information used to decode the block, which may include for example the type of prediction used, transform type, motion vectors and quantizer value, are then output to the compressed bitstream 420 .
- the compressed bitstream 420 can be formatted using various techniques, such as variable length coding (VLC) or arithmetic coding.
- VLC variable length coding
- the compressed bitstream 420 can also be referred to as an encoded video stream or encoded video bitstream, and the terms will be used interchangeably herein.
- the reconstruction path in FIG. 4 can be used to ensure that the encoder 400 and a decoder 500 (described below) use the same reference frames to decode the compressed bitstream 420 .
- the reconstruction path performs functions that are similar to functions that take place during the decoding process that are discussed in more detail below, including dequantizing the quantized transform coefficients at the dequantization stage 410 and inverse transforming the dequantized transform coefficients at the inverse transform stage 412 to produce a derivative residual block (also called a derivative residual).
- the prediction block that was predicted at the intra/inter prediction stage 402 can be added to the derivative residual to create a reconstructed block.
- the loop filtering stage 416 can be applied to the reconstructed block to reduce distortion such as blocking artifacts.
- encoder 400 can be used to encode the compressed bitstream 420 .
- a non-transform based encoder can quantize the residual signal directly without the transform stage 404 for certain blocks or frames.
- an encoder can have the quantization stage 406 and the dequantization stage 410 combined in a common stage.
- FIG. 5 is a block diagram of a decoder 500 according to implementations of this disclosure.
- the decoder 500 can be implemented in the receiving station 106 , for example, by providing a computer software program stored in the memory 204 .
- the computer software program can include machine instructions that, when executed by a processor such as the CPU 202 , cause the receiving station 106 to decode video data in the manner described in FIG. 5 .
- the decoder 500 can also be implemented in hardware included in, for example, the transmitting station 102 or the receiving station 106 .
- the decoder 500 similar to the reconstruction path of the encoder 400 discussed above, includes in one example the following stages to perform various functions to produce an output video stream 516 from the compressed bitstream 420 : an entropy decoding stage 502 , a dequantization stage 504 , an inverse transform stage 506 , an intra/inter prediction stage 508 , a reconstruction stage 510 , a loop filtering stage 512 and a post filtering stage 514 .
- Other structural variations of the decoder 500 can be used to decode the compressed bitstream 420 .
- the data elements within the compressed bitstream 420 can be decoded by the entropy decoding stage 502 to produce a set of quantized transform coefficients.
- the dequantization stage 504 dequantizes the quantized transform coefficients (e.g., by multiplying the quantized transform coefficients by the quantizer value), and the inverse transform stage 506 inverse transforms the dequantized transform coefficients to produce a derivative residual that can be identical to that created by the inverse transform stage 412 in the encoder 400 .
- the decoder 500 can use the intra/inter prediction stage 508 to create the same prediction block as was created in the encoder 400 , e.g., at the intra/inter prediction stage 402 .
- the prediction block can be added to the derivative residual to create a reconstructed block.
- the loop filtering stage 512 can be applied to the reconstructed block to reduce blocking artifacts.
- the post filtering stage 514 may be a deblocking filter that is applied to the reconstructed block to reduce blocking distortion.
- the result is output as the output video stream 516 .
- the output video stream 516 can also be referred to as a decoded video stream, and the terms will be used interchangeably herein.
- Other variations of the decoder 500 can be used to decode the compressed bitstream 420 .
- the decoder 500 can produce the output video stream 516 without the post filtering stage 514 .
- a reference frame buffer may store reference frames used to encode or decode blocks of frames of a video sequence.
- reference frames may be identified as a last frame LAST_FRAME, a golden frame GOLDEN_FRAME, or an alternative reference frame ALTREF_FRAME.
- a frame header of a reference frame may include a virtual index to a location within the reference frame buffer at which the reference frame is stored.
- a reference frame mapping may map the virtual index of a reference frame to a physical index of memory at which the reference frame is stored. Where two reference frames are the same frame, those reference frames will have the same physical index even if they have different virtual indexes.
- the number and type of reference frames stored within a reference frame buffer may differ.
- the reference frames stored in a reference frame buffer can be used to identify motion vectors for predicting blocks of frames to be encoded or decoded. Different reference frames may be used depending on the type of prediction used to predict a current block of a current frame. For example, in bi-prediction, blocks of the current frame can be forward predicted using either frame stored as the LAST_FRAME or the GOLDEN_FRAME, and backward predicted using a frame stored as the ALTREF_FRAME.
- FIG. 6 is a diagram of a group of frames in a display order of the video sequence.
- the group of frames is preceded by a frame 600 , which can be referred to as a key frame or an overlay frame in some cases, and comprises eight frames 602 - 616 .
- No block within the frame 600 is inter predicted using reference frames of the group of frames.
- the frame 600 is a key (also referred to as intra-predicted frame) in this example, which refers to its status that predicted blocks within the frame are only predicted using intra prediction.
- the frame 600 can be an overlay frame, which is an inter-predicted frame that can be a reconstructed frame of a previous group of frames.
- an inter-predicted frame at least some of the predicted blocks are predicted using inter prediction.
- the number of frames forming each group of frames can vary according to the video spatial/temporal characteristics and other encoded configurations, such as the key frame interval selected for random access or error resilience, for example.
- the coding order for each group of frames can differ from the display order. This allows a frame located after a current frame in the video sequence to be used as a reference frame for encoding the current frame.
- a decoder such as the decoder 500
- the group coding structure assigns different roles that respective frames within the group may play in the reference buffer (e.g., a last frame, an alternative reference frame, etc.) and defines or indicates the coding order for the frames within a group.
- FIG. 7 is a diagram of an example of a coding order for the group of frames of FIG. 6 .
- the coding order of FIG. 7 is associated with a first group coding structure whereby a single backward reference frame is available for each frame of the group. Because the encoding and decoding order is the same, the order shown in FIG. 7 is generally referred to herein as a coding order.
- the key or overlay frame 600 is designated the golden frame in a reference frame buffer, such as the GOLDEN_FRAME in a reference frame buffer.
- the frame 600 is intra-predicted in this example, so it does not require a reference frame, but an overlay frame as the frame 600 , being a reconstructed frame from a previous group, also does not use a reference frame of the current group of frames.
- the final frame 616 in the group is designated an alternative reference frame in a reference frame buffer, such as the ALTREF_FRAME.
- the frame 616 is coded out of the display order after the frame 600 so as to provide a backward reference frame for each of the remaining frames 602 - 614 .
- the frame 600 serves as an available reference frame for blocks of the frame 616 .
- FIG. 7 is only one example of a coding order for a group of frames. Other group coding structures may designate one or more different or additional frames for forward and/or backward prediction.
- an available reference frame may be a motion field-based reference frame portion rendered by a motion field.
- the motion field-based reference frame may be referred to as a co-located reference frame herein because the dimensions are the same as the current frame.
- FIG. 8 is a flowchart diagram of a method or process 800 for motion compensated prediction of a frame of a video sequence using a reference frame rendered based on a motion field.
- the process 800 can be implemented, for example, as a software program that may be executed by computing devices such as transmitting station 102 or receiving station 106 .
- the software program can include machine-readable instructions that may be stored in a memory such as the memory 204 or the secondary storage 214 , and that, when executed by a processor, such as CPU 202 , may cause the computing device to perform the process 800 .
- the process 800 can be implemented using specialized hardware or firmware. Some computing devices may have multiple memories or processors, and the operations described in the process 800 can be distributed using multiple processors, memories, or both.
- a current frame to be predicted is determined.
- Frames may be coded, and hence predicted, in any order, such as in the coding order shown in FIG. 7 .
- the frames to be predicted may also be referred to as a first, second, third, etc. frame.
- the label of first, second, etc. does not necessarily indicate an order of the frames. Instead the label is used to distinguish one current frame from another herein unless otherwise stated.
- the frame may be processed in units of blocks in a block coding order, such as a raster scan order.
- the frame may also be processed in units of blocks according to receipt of their encoded residuals within an encoded bitstream.
- forward and backward reference frames are determined.
- the forward and backward reference frames are the nearest reconstructed frames before and after (e.g., in display order) the current frame, such as the current frame at frame index X described below.
- the process 800 is not performed for the current frame. Instead, the current frame is processed according to any known technique.
- the process 800 can advance to 806 to determine a motion field for the current frame. Determining the motion field may include performing linear projection of the motion vectors from the reference frames, which is described in more detail with reference to FIG. 9 .
- FIG. 9 is a diagram used to explain linear projection of the motion vectors according to the teachings herein.
- the motion field of the current frame may be estimated using the nearest available reconstructed (e.g., reference) frames before and after the current frame, additional reference frames, or different reference frames.
- the current frame has a frame index X.
- the motion field of the current frame includes motion vectors from the current frame towards, in this example, reference frames Ref0, Ref1, and Ref1_Ref0, or more reference frames if available.
- the motion vectors may be stored with regard to respective 8 ⁇ 8 blocks of the current frame, but different size blocks, or other portions of the current frame, may be considered, e.g., in the frame scan order. In other words, the description herein uses an 8 ⁇ 8 block to describe the processing at 806 , but this is an example only.
- the teachings may be applied to frame portions that are formed of other than blocks and to blocks of different sizes.
- the reference frame Ref0 is a reference frame that may be used for forward prediction of the current frame
- the reference frame Ref1 is a reference frame that may be used for backward prediction of the current frame.
- the immediately preceding, or last, frame 604 e.g., the reconstructed frame stored in a reference frame buffer as the LAST_FRAME
- the frame 616 e.g., the reconstructed frame stored in a reference frame buffer as the ALTREF_FRAME
- the reference frame Ref1 can be used as the reference frame Ref1.
- motion vectors may be projected between the pixels in the reference frames Ref0 and Ref1 to the pixels in the current frame assuming that the motion field is linear in time.
- the frame index X for the current frame is 3
- the frame index A for the reference frame Ref0 is 2
- the frame index C for the reference frame Ref1 is 8.
- the frame index C_R0 for the reference frame Ref1_Ref0 may be 1, for example.
- Linear projection may be illustrated starting with reference frame Ref1, having a frame index C.
- a motion vector MV_ref1 goes from reference frame Ref1 to the reference frame for the reference frame Ref1, namely Ref1_Ref0, whose frame index is C_R0.
- a motion vector contains two components, a row and column, to represent the spatial offset. Accordingly, the block located at (ref_row, ref_col) within reference frame Ref1 was predicted using the motion vector MV_ref1 and reference frame Ref1_Ref0 in this example.
- This motion vector MV_ref1 is projected onto the current frame to determine where the motion trajectory fits in the current frame.
- Block_col ref_col+MV_ref1.col*(C ⁇ X)/(C ⁇ C_R0), where MV_ref1.row is a first (e.g., a vertical) component of the motion vector MV_ref1, and MV_ref1.col is a second (e.g., a horizontal) component of the motion vector MV_ref1.
- the projected block position within the current frame is (Block_row, Block_col).
- MV_0.col MV_ref1.col*(X ⁇ A)/(C ⁇ C_R0), where MV_0.row is a first (e.g., a vertical) component of the motion vector MV_0, and MV_0.col is a second (e.g., a horizontal) component of the motion vector MV_0.
- MV_1.col MV_ref1.col*(X ⁇ C)/(C ⁇ C_R0), where MV_1.row is a first (e.g., a vertical) component of the motion vector MV_1, and MV_1.col is a second (e.g., a horizontal) component of the motion vector MV_1.
- the collection of motion vectors MV_0 and MV_1 for the blocks of the current frame forms the motion field for the current frame.
- the process 800 advances to 808 .
- the motion field-based reference frame is rendered.
- the motion field-based reference frame may be rendered using a previously reconstructed reference frame and the motion field pointing towards that reference frame.
- the reference frame nearest to the current frame in natural order, such as the display order shown in FIG. 6 , may be selected.
- the reconstructed reference frame may be the first reference frame for forward inter prediction used to generate the motion field, the second reference frame for backward inter prediction used to generate the motion field, or some other reference frame from the video sequence.
- the frame 604 (the first reference frame) may be used as the closest reconstructed reference frame.
- the rendering may be processed in units of 8 ⁇ 8 blocks, for example.
- Rendering may include determining parameters that form an affine homographic model for respective blocks of the current frame, and solving the affine homographic model.
- FIG. 10 is a diagram used to explain an affine homographic model according to the teachings herein.
- the diagram of FIG. 10 shows an example of a motion field associated with an 8 ⁇ 8 block of the previously reconstructed reference frame that is denoted as the current block Cur_Blk.
- the motion vector of the current block Cur_Blk is MV0, and MV0 is shown extending from a central location in the frame identified as (x0, y0).
- spatial neighboring blocks of the current block Cur_Blk are labeled Ref_blk_1, Ref_blk_2, Ref_blk_3, and Ref_blk_4.
- the motion vectors of the spatial neighboring blocks Ref_blk_1, Ref_blk_2, Ref_blk_3, and Ref_blk_4 are MV1, MV2, MV3, and MV4, respectively.
- a central location in the frame for the spatial neighboring block Ref_blk_1 is marked (x1, y1)
- a central location in the frame for the spatial neighboring block Ref_blk_2 is marked (x2, y2)
- a central location in the frame for the spatial neighboring block Ref_blk_3 is marked (x3, y3)
- a central location in the frame for the spatial neighboring block Ref_blk_1 is marked (x4, y4).
- the affine homographic model may be defined by a 6-parameter matrix:
- the parameters a, b, d, and e represent rotation and scaling, and the parameters c and f represent translational offsets in vertical and horizontal directions.
- the matrix projects a pixel position (x, y) in the reconstructed reference frame towards a pixel position (x′, y′) in the motion-field based reference frame.
- the motion information for the spatial neighboring blocks may be used.
- the problem is formulated as: min R, ⁇ circumflex over (t) ⁇ ⁇ P′ ⁇ RP+ ⁇ circumflex over (t) ⁇ F (1)
- P is an array of the central positions of the spatial neighboring blocks, as follows:
- P′ is an array of positions (x′, y′) in the reference frame, as follows:
- mv0_row is a first component of the motion vector MV0
- mv0_col is a second component of the motion vector MV0
- mv1_row is a first component of the motion vector MV1
- mv1_col is a second component of the motion vector MV1
- mv2_row is a first component of the motion vector MV2
- mv2_col is a second component of the motion vector MV2
- mv3_row is a first component of the motion vector MV3
- mv3_col is a second component of the motion vector MV3
- mv4_row is a first component of the motion vector MV4
- mv4_col is a second component of the motion vector MV4.
- Each first component can be a vertical component
- each second component can be a horizontal component.
- ⁇ is a 1 ⁇ 5 vector whose entries are all ones, as follows:
- the subscript F in equation (1) refers to a general distance metric for two vectors (also called a norm).
- the solution of equations (4) and (5) are the parameters a through f that form the affine homographic model.
- the current block Cur_Blk can be rendered by mapping a pixel at a pixel position (x, y) in the current block Cur_Blk towards a pixel position in the new motion field-based reference frame according to: RB ⁇ circumflex over (t) ⁇ (6)
- B is the vector whose elements are the pixel locations/positions of the current block.
- the processing at 808 can be repeated for each block of the reconstructed reference frame.
- the rendered blocks can be arranged according to the pixel positions of the respective current blocks (e.g., the co-located blocks) used in the generation of each of the rendered blocks, and the resulting frame is the motion field-based reference frame.
- a prediction process is performed using the motion field-based reference frame generated at 808 .
- Performing a prediction process at an encoder can include generating a prediction block from a motion field-based reference frame for a current block of the frame.
- the motion field-based reference frame may be stored in a reference frame buffer within memory.
- Generating the prediction block at an encoder can include performing a motion search within the motion field-based reference frame to select the best matching prediction block for the current block.
- the prediction block is generated at the encoder, the resulting residual can be further processed, such as using the lossy encoding process described with regard to the encoder 400 of FIG. 4 .
- the process 800 may form part of a rate distortion loop for the current block that uses various prediction modes, including one or more intra prediction modes and both single and compound inter prediction modes using the available prediction frames for the current frame.
- a single inter prediction mode uses only a single forward or backward reference frame for inter prediction.
- a compound inter prediction mode uses both a forward and a backward reference frame for inter prediction.
- the rate e.g., the number of bits
- the distortion may be calculated as the differences between pixel values of the block before encoding and after decoding. The differences can be a sum of absolute differences or some other measure that captures the accumulated error for blocks of the frames.
- a flag may be encoded into the bitstream to indicate whether or not a motion field-based reference frame is available for use in encoding the current frame.
- the flag may be encoded when any single block within the current frame is encoded using a motion field-based reference frame block, in an example. Where the motion field-based reference frame is available for a current frame, it is possible to include an additional flag or other indicator (e.g., at the block level) indicating whether or not the current block was encoded by inter prediction using the motion field-based reference frame.
- the prediction process at 810 may be repeated for all blocks of the current frame until the current frame is encoded.
- performing a prediction process using the motion field-based reference frame at 810 may result from a determination that a motion field-based reference frame is available for decoding the current frame.
- the determination is made by inspecting a flag that indicates that at least one block of the current frame was encoded using the motion field-based reference frame.
- Performing the prediction process at 810 in the decoder can include generating a prediction block.
- Generating the prediction block can include using an inter-prediction mode decoded from the encoded bitstream, such as from a block header.
- a flag or indicator can be decoded to determine the inter-prediction mode.
- the prediction block for the current block to be decoded is generated using pixels of the motion field-based reference frame and a motion vector mode and/or a motion vector.
- the same processing to produce a motion field-based reference frame for use in a prediction process as part of decoding may be performed at a decoder, such as the decoder 500 , as was performed at the encoder.
- a decoder such as the decoder 500
- the entire motion field-based reference frame can be generated and stored for use in the prediction process.
- additional savings in computational power at the decoder may occur by modifying the process 800 to limit performance of the process 800 where coding blocks are identified as using the co-located, motion field-based reference frame as an inter-prediction reference frame. This may be described by reference to FIG. 11 , which is a diagram illustrating one technique for optimizing a decoder.
- pixels are shown along a grid 1100 with w representing a pixel location along a first axis of the grid 1100 and with y representing a pixel location along a second axis of the grid 1100 .
- the grid 1100 represents pixel locations of a portion of the current frame.
- the processing at 806 and 808 may be performed as part of the processing at 810 .
- the prediction process at 810 can include finding pixel locations for the reference block used to encode the current block (e.g., from header information, such as a motion vector).
- header information such as a motion vector
- the motion vector for the current coding block 1102 points to a reference block represented by the inner dashed line 1104 .
- the current coding block 1102 comprises 4 ⁇ 4 pixels in this example.
- the reference block location is shown by the dashed line 1104 because the reference block is located in the reference frame, and not in the current frame, but its co-located pixel locations in the current frame are used in the prediction process.
- the reference block is located, all of the blocks that are spanned by (i.e., overlap) the pixel locations of the reference block are identified. This may include extending the reference block size by half of the filter length at each boundary to consider sub-pixel interpolation filters.
- the sub-pixel interpolation filter length L is used to extend the reference block to the boundaries represented by the outer dashed line 1106 .
- the motion vector results in a reference block that does not align perfectly with the full-pel locations.
- the darkened area in FIG. 11 represents the full-pel locations. All of the reference blocks that overlap the full-pel locations are identified.
- a first reference block that is co-located with the current block Assuming the block sizes are the same as the current coding block 1102 , a first reference block that is co-located with the current block, a second reference block that is above the first reference block, two reference blocks that extend from the left of the first reference block, and two reference blocks that extend from the left of the second reference block are identified.
- the process 800 may be performed at 806 and 808 for only some blocks within the current frame so as to produce the co-located, motion field-based reference blocks. This can include blocks within the current frame that are co-located with the identified reference blocks, plus any blocks within the current frame that are co-located with spatial neighboring block(s) not already identified that are used for forming the affine homographic model for a block.
- reference block(s) for a subsequent block may overlap one or more reference blocks identified in the decoding process of the current block.
- the motion field estimation need be performed for any of the identified blocks only once to further reduce computing requirements at the decoder.
- a reference block generated at 808 may be stored for use in decoding other blocks of the current frame.
- the decoded residual for the current block from the encoded bitstream can be combined with the prediction block to form a reconstructed block as described by example with regard to the decoder 500 of FIG. 5 .
- the prediction process at 810 may be repeated for all blocks of the current frame that were encoded using a motion field-based reference frame until the current frame is decoded.
- a block that is not encoded using an motion field-based reference frame can be conventionally decoded according to the prediction mode decoded for the block from the encoded bitstream.
- the motion field effectively provides a closed boundary information for any block of interest, such that the affine homographic model can be estimated more precisely.
- the motion field rendered reference frame allows the encoder to run an effective motion search, resulting in good prediction quality.
- This co-located reference frame can be used to eliminate the use of a rendered frame may have 1 or 2 pixels offset from the current frame.
- process 800 is depicted and described as a series of steps or operations. However, the steps or operations in accordance with this disclosure can occur in various orders and/or concurrently. Additionally, other steps or operations not presented and described herein may be used. Furthermore, not all illustrated steps or operations may be required to implement a method in accordance with the disclosed subject matter.
- encoding and decoding illustrate some examples of encoding and decoding techniques. However, it is to be understood that encoding and decoding, as those terms are used in the claims, could mean compression, decompression, transformation, or any other processing or change of data.
- example is used herein to mean serving as an example, instance, or illustration. Any aspect or design described herein as “example” is not necessarily to be construed as preferred or advantageous over other aspects or designs. Rather, use of the word “example” is intended to present concepts in a concrete fashion.
- the term “or” is intended to mean an inclusive “or” rather than an exclusive “or”. That is, unless specified otherwise, or clear from context, “X includes A or B” is intended to mean any of the natural inclusive permutations. That is, if X includes A; X includes B; or X includes both A and B, then “X includes A or B” is satisfied under any of the foregoing instances.
- Implementations of the transmitting station 102 and/or the receiving station 106 can be realized in hardware, software, or any combination thereof.
- the hardware can include, for example, computers, intellectual property (IP) cores, application-specific integrated circuits (ASICs), programmable logic arrays, optical processors, programmable logic controllers, microcode, microcontrollers, servers, microprocessors, digital signal processors or any other suitable circuit.
- IP intellectual property
- ASICs application-specific integrated circuits
- programmable logic arrays optical processors
- programmable logic controllers programmable logic controllers
- microcode microcontrollers
- servers microprocessors, digital signal processors or any other suitable circuit.
- signal processors should be understood as encompassing any of the foregoing hardware, either singly or in combination.
- signals and “data” are used interchangeably. Further, portions of the transmitting station 102 and the receiving station 106 do not necessarily have to be implemented in the same manner.
- the transmitting station 102 or the receiving station 106 can be implemented using a general purpose computer or general purpose processor with a computer program that, when executed, carries out any of the respective methods, algorithms and/or instructions described herein.
- a special purpose computer/processor can be utilized that contains other hardware for carrying out any of the methods, algorithms, or instructions described herein.
- the transmitting station 102 and the receiving station 106 can, for example, be implemented on computers in a video conferencing system.
- the transmitting station 102 can be implemented on a server and the receiving station 106 can be implemented on a device separate from the server, such as a hand-held communications device.
- the transmitting station 102 can encode content using an encoder 400 into an encoded video signal and transmit the encoded video signal to the communications device.
- the communications device can then decode the encoded video signal using a decoder 500 .
- the communications device can decode content stored locally on the communications device, for example, content that was not transmitted by the transmitting station 102 .
- Other suitable transmitting and receiving implementation schemes are available.
- the receiving station 106 can be a generally stationary personal computer rather than a portable communications device and/or a device including an encoder 400 may also include a decoder 500 .
- implementations of the present disclosure can take the form of a computer program product accessible from, for example, a computer-usable or computer-readable medium.
- a computer-usable or computer-readable medium can be any device that can, for example, tangibly contain, store, communicate, or transport the program for use by or in connection with any processor.
- the medium can be, for example, an electronic, magnetic, optical, electromagnetic, or a semiconductor device. Other suitable mediums are also available.
Abstract
Description
Block_row=ref_row+MV_ref1.row*(C−X)/(C−C_R0); and
MV_0.row=MV_ref1.row*(X−A)/(C−C_R0); and
MV_1.row=MV_ref1.row*(X−C)/(C−C_R0); and
minR,{circumflex over (t)} ∥P′−RP+{circumflex over (t)}Γ∥ F (1)
R=(P′P T −
{circumflex over (t)}=(P′P T −RPΓ T)(ΓΓT)−1 (5)
RB−{circumflex over (t)}Γ (6)
Claims (17)
RB−{circumflex over (t)}Γ
RB−{circumflex over (t)}Γ
minR,{circumflex over (t)} ∥P′−RP+{circumflex over (t)}Γ∥ F
Priority Applications (4)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US15/893,978 US11025950B2 (en) | 2017-11-20 | 2018-02-12 | Motion field-based reference frame rendering for motion compensated prediction in video coding |
PCT/US2018/047223 WO2019099084A1 (en) | 2017-11-20 | 2018-08-21 | Motion field-based reference frame rendering for motion compensated prediction in video coding |
CN201880036760.4A CN110692246B (en) | 2017-11-20 | 2018-08-21 | Method and apparatus for motion compensated prediction |
EP18769923.6A EP3714601A1 (en) | 2017-11-20 | 2018-08-21 | Motion field-based reference frame rendering for motion compensated prediction in video coding |
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US201762588505P | 2017-11-20 | 2017-11-20 | |
US15/893,978 US11025950B2 (en) | 2017-11-20 | 2018-02-12 | Motion field-based reference frame rendering for motion compensated prediction in video coding |
Publications (2)
Publication Number | Publication Date |
---|---|
US20190158873A1 US20190158873A1 (en) | 2019-05-23 |
US11025950B2 true US11025950B2 (en) | 2021-06-01 |
Family
ID=66533557
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US15/893,978 Active 2039-01-07 US11025950B2 (en) | 2017-11-20 | 2018-02-12 | Motion field-based reference frame rendering for motion compensated prediction in video coding |
Country Status (4)
Country | Link |
---|---|
US (1) | US11025950B2 (en) |
EP (1) | EP3714601A1 (en) |
CN (1) | CN110692246B (en) |
WO (1) | WO2019099084A1 (en) |
Families Citing this family (5)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US11070813B2 (en) * | 2018-06-29 | 2021-07-20 | Intel Corporation | Global motion estimation and modeling for accurate global motion compensation for efficient video processing or coding |
US11665365B2 (en) * | 2018-09-14 | 2023-05-30 | Google Llc | Motion prediction coding with coframe motion vectors |
CN113596462B (en) * | 2019-09-23 | 2022-07-01 | 杭州海康威视数字技术股份有限公司 | Encoding and decoding method, device and equipment |
CN113556567B (en) * | 2020-04-24 | 2022-11-25 | 华为技术有限公司 | Method and device for inter-frame prediction |
CN113068041B (en) * | 2021-03-12 | 2022-02-08 | 天津大学 | Intelligent affine motion compensation coding method |
Citations (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20130121416A1 (en) * | 2010-07-21 | 2013-05-16 | Dolby Laboratories Licensing Corporation | Reference Processing Using Advanced Motion Models for Video Coding |
US20140307982A1 (en) * | 2013-04-16 | 2014-10-16 | The Government Of The United States Of America, As Represented By The Secretary Of The Navy | Multi-frame super-resolution of image sequence with arbitrary motion patterns |
US10511852B1 (en) * | 2018-07-13 | 2019-12-17 | Tencent America LLC | Method and apparatus for video coding |
Family Cites Families (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6285711B1 (en) * | 1998-05-20 | 2001-09-04 | Sharp Laboratories Of America, Inc. | Block matching-based method for estimating motion fields and global affine motion parameters in digital video sequences |
US20150015792A1 (en) * | 2012-03-05 | 2015-01-15 | Thomson Licensing | Filtering a displacement field between video frames |
WO2014122131A1 (en) * | 2013-02-05 | 2014-08-14 | Thomson Licensing | Method for generating a motion field for a video sequence |
CN107240147B (en) * | 2017-05-26 | 2020-01-14 | 清华大学 | Image rendering method and system |
-
2018
- 2018-02-12 US US15/893,978 patent/US11025950B2/en active Active
- 2018-08-21 WO PCT/US2018/047223 patent/WO2019099084A1/en unknown
- 2018-08-21 CN CN201880036760.4A patent/CN110692246B/en active Active
- 2018-08-21 EP EP18769923.6A patent/EP3714601A1/en active Pending
Patent Citations (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20130121416A1 (en) * | 2010-07-21 | 2013-05-16 | Dolby Laboratories Licensing Corporation | Reference Processing Using Advanced Motion Models for Video Coding |
US20140307982A1 (en) * | 2013-04-16 | 2014-10-16 | The Government Of The United States Of America, As Represented By The Secretary Of The Navy | Multi-frame super-resolution of image sequence with arbitrary motion patterns |
US10511852B1 (en) * | 2018-07-13 | 2019-12-17 | Tencent America LLC | Method and apparatus for video coding |
Non-Patent Citations (20)
Title |
---|
"Introduction to Video Coding Part 1: Transform Coding", Mozilla, Mar. 2012, 171 pp. |
"Overview VP7 Data Format and Decoder", Version 1.5, On2 Technologies, Inc., Mar. 28, 2005, 65 pp. |
"VP6 Bitstream and Decoder Specification", Version 1.02, On2 Technologies, Inc., Aug. 17, 2006, 88 pp. |
"VP6 Bitstream and Decoder Specification", Version 1.03, On2 Technologies, Inc., Oct. 29, 2007, 95 pp. |
"VP8 Data Format and Decoding Guide, WebM Project", Google On2, Dec. 1, 2010, 103 pp. |
Bankoski et al, "VP8 Data Format and Decoding Guide draft-bankoski-vp8-bitstream-02", Network Working Group, Internet-Draft, May 18, 2011, 288 pp. |
Bankoski et al, "VP8 Data Format and Decoding Guide", Independent Submission RFC 6389, Nov. 2011, 305 pp. |
Bankoski, et al., "Technical Overview of VP8, An Open Source Video Codec for the Web", Jul. 11, 2011, 6 pp. |
Huawei Technologies Co., Ltd., "Affine transform prediction for next generation video coding" ITU-T SG16 Meeting, Oct. 12-23, 2015, Geneva, CH, No. T13-SG16-C-1016 (Sep. 29, 2015), pp. 1-11. |
International Search Report and Written Opinion in PCT/US2018/047223, dated Nov. 16, 2018, 18 pgs. |
J. Chen et al., "Algorithm description of Joint Exploration Test Model 7 (JEM7)", Joint Video Exploration Team (JVET) of ITU-T SG 16 WP 3 and ISO/IEC JTC1/SC29/WG11, 7th Meeting, Torino, Italy, Jul. 13-21, 2017 (url: http://phenix.int-evry.fr/jvet/, document No. JVET-G1001 (Aug. 19, 2017), 48 pgs. |
Matthias Narroschke et al., "Extending HEVC by an affine motion model", IEEE 2013 Picture Coding Symposium (PCS), Dec. 8, 2013, pp. 321-324. |
Series H: Audiovisual and Multimedia Systems, Coding of moving video: Implementors Guide for H.264: Advanced video coding for generic audiovisual services, International Telecommunication Union, Jul. 30, 2010, 15 pp. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services—Coding of moving video, Advanced video coding for generic audiovisual services, Amendment 1: Support of additional colour spaces and removal of the High 4:4:4 Profile, International Telecommunication Union, Jun. 2006, 16 pp. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services—Coding of moving video, Advanced video coding for generic audiovisual services, International Telecommunication Union, Version 11, Mar. 2009. 670 pp. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services—Coding of moving video, Advanced video coding for generic audiovisual services, International Telecommunication Union, Version 12, Mar. 2010, 676 pp. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services—Coding of moving video, Advanced video coding for generic audiovisual services, Version 1, International Telecommunication Union, May 2003, 282 pp. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services—Coding of moving video, Advanced video coding for generic audiovisual services, Version 3, International Telecommunication Union, Mar. 2005, 343 pp. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services—Coding of moving video, Advanced video coding for generic audiovisual services, Version 8, International Telecommunication Union, Nov. 1, 2007, 564 pp. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services—Coding of moving video, Amendment 2: New profiles for professional applications, International Telecommunication Union, Apr. 2007, 75 pp. |
Also Published As
Publication number | Publication date |
---|---|
WO2019099084A1 (en) | 2019-05-23 |
EP3714601A1 (en) | 2020-09-30 |
CN110692246A (en) | 2020-01-14 |
CN110692246B (en) | 2023-01-03 |
US20190158873A1 (en) | 2019-05-23 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US10986361B2 (en) | Video coding using reference motion vectors | |
US11284107B2 (en) | Co-located reference frame interpolation using optical flow estimation | |
US10555000B2 (en) | Multi-level compound prediction | |
US9374578B1 (en) | Video coding using combined inter and intra predictors | |
CN110741640B (en) | Optical flow estimation for motion compensated prediction in video coding | |
US11025950B2 (en) | Motion field-based reference frame rendering for motion compensated prediction in video coding | |
US11350102B2 (en) | Block-based optical flow estimation for motion compensated prediction in video coding | |
US10582212B2 (en) | Warped reference motion vectors for video compression | |
US10271062B2 (en) | Motion vector prediction through scaling | |
WO2018169571A1 (en) | Segmentation-based parameterized motion models | |
US8908767B1 (en) | Temporal motion vector prediction | |
US10448013B2 (en) | Multi-layer-multi-reference prediction using adaptive temporal filtering | |
US10951885B2 (en) | Adaptive temporal filtering for alternate frame reference rendering | |
US10701364B2 (en) | Golden-frame group structure design using stillness detection | |
US11917128B2 (en) | Motion field estimation based on motion trajectory derivation | |
WO2023205371A1 (en) | Motion refinement for a co-located reference frame | |
WO2023219616A1 (en) | Local motion extension in video coding | |
EP4352958A1 (en) | Reference motion vector candidate bank | |
CN118055253A (en) | Optical flow estimation for motion compensated prediction in video coding |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:XU, YAOWU;HAN, JINGNING;CHIANG, CHING-HAN;REEL/FRAME:044898/0011Effective date: 20180208 |
|
FEPP | Fee payment procedure |
Free format text: ENTITY STATUS SET TO UNDISCOUNTED (ORIGINAL EVENT CODE: BIG.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: DOCKETED NEW CASE - READY FOR EXAMINATION |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: NON FINAL ACTION MAILED |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: NON FINAL ACTION MAILED |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: RESPONSE TO NON-FINAL OFFICE ACTION ENTERED AND FORWARDED TO EXAMINER |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: FINAL REJECTION MAILED |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: NOTICE OF ALLOWANCE MAILED -- APPLICATION RECEIVED IN OFFICE OF PUBLICATIONS |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: PUBLICATIONS -- ISSUE FEE PAYMENT VERIFIED |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
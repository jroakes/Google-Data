US8738461B1 - Display of popular, in-stock products of a merchant - Google Patents
Display of popular, in-stock products of a merchant Download PDFInfo
- Publication number
- US8738461B1 US8738461B1 US13/846,882 US201313846882A US8738461B1 US 8738461 B1 US8738461 B1 US 8738461B1 US 201313846882 A US201313846882 A US 201313846882A US 8738461 B1 US8738461 B1 US 8738461B1
- Authority
- US
- United States
- Prior art keywords
- product
- merchant
- products
- stock
- popular
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q20/00—Payment architectures, schemes or protocols
- G06Q20/08—Payment architectures
- G06Q20/18—Payment architectures involving self-service terminals [SST], vending machines, kiosks or multimedia terminals
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q10/00—Administration; Management
- G06Q10/08—Logistics, e.g. warehousing, loading or distribution; Inventory or stock management
- G06Q10/087—Inventory or stock management, e.g. order filling, procurement or balancing against orders
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q30/00—Commerce
- G06Q30/06—Buying, selling or leasing transactions
Definitions
- the present disclosure relates generally to the display of products at an electronic document corresponding to a merchant's physical location, and more particularly to methods and systems for displaying popular products that are available for sale at the particular merchant location.
- Computer networks such as the Internet, enable transmission and reception of a vast array of information.
- some commercial retail stores have attempted to make product inventory information and other data related to product sales available to customers over the Internet.
- manufacturers, retailers, and others that sell products to customers are interchangeably referred to herein as “merchants.”
- product inventory information For simplicity, manufacturers, retailers, and others that sell products to customers are interchangeably referred to herein as “merchants.”
- vendors, retailers, and others that sell products to customers are interchangeably referred to herein as “merchants.”
- vendors manufacturers, retailers, and others that sell products to customers are interchangeably referred to herein as “merchants.”
- vendors manufacturers, retailers, and others that sell products to customers
- vendors are interchangeably referred to herein as “merchants.”
- in-stock refers to items that are currently in the merchant's inventory and are available for sale.
- the user may typically desire to determine whether the nearby merchant locations have the desired product in-stock. Therefore, it is desirable to provide a relevant portal or electronic document or place page that allows a customer or user to determine whether nearby merchants have in-stock a particular desired product.
- a computer-implemented method for displaying popular items that are available for sale at a merchant's physical location may involve creating an electronic document or place page corresponding to the merchant's physical location.
- the place page may contain certain information about the merchant, such as the phone number, the address, and a map to the merchant location.
- the place page also may contain images of and information regarding certain popular products that are available at the merchant's location.
- This product information can be created by reference to a product availability database and a product popularity database.
- the product availability database may be populated with information provided by the merchant, or otherwise obtained, taking into account the inventory available at the merchant's physical location.
- a cross-referencing engine may identify the popular products that are available at the merchant's physical location, and display on the merchant's place page a plurality of popular items that are available at the merchant's physical location.
- FIG. 1 depicts a system for collecting POS data, in accordance with certain exemplary embodiments.
- FIG. 2 depicts a system for collecting POS data, in accordance with certain exemplary embodiments.
- FIG. 3 depicts a block diagram of POS data collector, in accordance with certain exemplary embodiments.
- FIG. 4 is a block flow diagram depicting a method for collecting POS data, in accordance with certain exemplary embodiments.
- FIG. 5 depicts a system for extracting data, in accordance with certain exemplary embodiments.
- FIG. 6 depicts a system for extracting data, in accordance with certain exemplary embodiments.
- FIG. 7 depicts a system for extracting data, in accordance with certain exemplary embodiments.
- FIG. 8 is a block flow diagram depicting a method for extracting data, in accordance with certain exemplary embodiments.
- FIG. 9 depicts a system for estimating product availability, in accordance with certain exemplary embodiments.
- FIG. 10 depicts a block flow diagram depicting a method for estimating product availability, in accordance with certain exemplary embodiments.
- FIG. 11 depicts a block flow diagram depicting a method for estimating product availability in accordance with certain exemplary embodiments.
- FIG. 12 depicts a block flow diagram depicting a method for estimating product availability in accordance with certain exemplary embodiments.
- FIG. 13 depicts a block diagram of data object, in accordance with certain exemplary embodiments.
- FIG. 14 is a block diagram depicting a system for displaying products on a place page, in accordance with certain exemplary embodiments.
- FIG. 15 is a block flow diagram depicting a method for displaying products on a place page, in accordance with certain exemplary embodiments.
- FIG. 16 is a block flow diagram depicting a method for populating a product popularity database, in accordance with certain exemplary embodiments.
- FIG. 17 is a block flow diagram depicting a method for identifying in-stock popular items at a merchant location, in accordance with certain exemplary embodiments.
- FIG. 18 is a block flow diagram depicting a method for populating a place page with in-stock popular items, in accordance with certain exemplary embodiments.
- FIG. 19 is an exemplary place page displaying products, in accordance with certain exemplary embodiments.
- the methods and systems described herein enable the accurate estimation of product availability and the collection of the world's local point of sale (POS) data and other information related to product sales and businesses that sell products.
- POS point of sale
- a POS data collection system can include a POS data collector that is implemented as a hardware device and/or in software.
- the adapter may be installed at the point of sale in retail stores, for example, between a barcode scanner and the POS application running on a POS terminal (for example, the cash register).
- the adapter may intercept the barcode as it is transmitted from the barcode scanner to the POS application. After intercepting the barcode, the adapter may transmit the barcode to the POS application without noticeable delay, so that the adapter does not interrupt standard business processes.
- the adapter may send the barcode to a remote server via a network connection. In this manner, the remote server may collect POS data that covers a significant number of products, retailers, and locations.
- a data collection system can include a content extractor that is implemented in software.
- the content extractor may be installed on a commercial retailer's local computer system, and may be used to extract information related to product sales and/or the commercial retailer itself.
- many commercial retailers have local computer systems that store product inventory information, point of sale data, store listings (for example, businesses with more than one location), product listings (for example, all products for sale), price-quantity data (for example, per store, per product pricing), store maps, circulars, coupons, etc. This and other data related to product sales and the business that sells products may be stored in a commercial retailer's local computer system.
- This data may be stored in a commercially available database format (for example, MySQL, Oracle, MS SQL Server, etc.) or according to other known methods (for example, product inventory/sales software, flat file, spreadsheet, etc.).
- the content extractor may be used to easily and intuitively interface to the information stored in such a database (or other known format) so that the data may be extracted and sent to a remote computer via a network connection.
- the content extractor may provide a user interface to easily and intuitively map existing database attributes to those expected by the remote computer, and to easily and intuitively schedule a one-time, periodic, and/or real-time transmission of the extracted data to the remote computer.
- the remote computer may collect information that covers a significant number of products, retailers, and locations.
- a product availability estimation system may be implemented as part of a commercial retailer's computer system or as part of a third party computer system.
- the product availability estimation system may be used to estimate the availability of any given product that a commercial retailer offers for sale.
- Such product estimation may be based on any number of inputs, including, for example, POS data, periodic inventory feeds, bar code scans, global positioning system (GPS) data, receipt analysis (received from users or companies, such as optical character recognition of an image of a receipt), other “non-merchant” data, such as data from a third party aggregator, and other suitable information.
- the product availability estimation may be based on determining the velocity of sales events of a given product.
- the product availability estimation may be based on determining the velocity of sales of a given product. Both of these exemplary embodiments may use the inputs described above, which may be available in real time (for example, as soon as possible taking network/communication/system latency into account) or on a periodic basis (for example, batch updates from the retailer scheduled every hour, every eight hours, once a day, or other suitable time period).
- the product availability estimation system may provide an availability estimate to a potential purchaser, for example, when a potential purchaser conducts an Internet search for a product.
- a place page corresponding to the merchant's physical location is created.
- the place page may contain certain information about the merchant, such as the phone number, the address, and a map to the merchant location.
- the place page also may contain images of and information regarding certain popular products that are available at the merchant's location.
- This product information can be created by reference to a product availability database and a product popularity database.
- the product availability database may be populated with information provided by the merchant, or otherwise obtained, taking into account the inventory available at the merchant's physical location.
- the product inventory can be provided or estimated as described herein.
- popular products that are available at the merchant's physical location are identified and displayed on the merchant's place page.
- One or more aspects of the invention may comprise a computer program that embodies the functions described and illustrated herein, wherein the computer program is implemented in a computer system that comprises instructions stored in a machine-readable medium and a processor that executes the instructions.
- the invention should not be construed as limited to any one set of computer program instructions.
- a skilled programmer would be able to write such a computer program to implement an embodiment of the disclosed invention based on the appended flow charts and associated description in the application text. Therefore, disclosure of a particular set of program code instructions is not considered necessary for an adequate understanding of how to make and use the invention.
- the inventive functionality of the invention will be explained in more detail in the following description, read in conjunction with the figures illustrating the program flow.
- FIG. 1 depicts a system 100 for collecting POS data, in accordance with certain exemplary embodiments.
- system 100 may comprise POS data collector 105 , POS scanner 110 , POS terminal 115 , and remote system 150 .
- POS data collector 105 may be connected to POS scanner 110 via connection 120 , and to POS terminal 115 via connection 125 .
- POS data collector 105 may communicate with POS scanner 110 and POS terminal 115 using any standard or proprietary storage and/or communication protocol, including without limitation, universal serial bus (USB), RS-232, and/or any combination thereof.
- USB universal serial bus
- RS-232 RS-232
- POS data collector 105 is depicted as a standalone hardware device in FIGS. 1 and 2 , one or more components of POS data collector 105 may be integrated into one or both of POS scanner 110 and POS terminal 115 , in accordance with alternative exemplary embodiments.
- the POS scanner 110 may be a traditional wired, generally stationary barcode scanner, in accordance with certain exemplary embodiments.
- FIG. 2 depicts system 200 according to an alternative embodiment wherein POS scanner includes POS wireless barcode scanner 212 and POS wireless base station 210 .
- POS data collector 105 may communicate with POS wireless base station 210 in the same way the POS data collector 105 communicates with POS scanner 110 of FIG. 1 . While FIGS. 1 and 2 illustrate different exemplary embodiments, it should be appreciated that the POS data collector 105 may be used similarly in POS systems with hardware that varies from that depicted in FIGS. 1 and 2 .
- POS scanner 110 may be a barcode scanner and may be configured to read any number of barcode formats, including without limitation UPC, EAN, JAN, etc. According to other exemplary embodiments, POS scanner 110 may be an RFID reader or any other device that is capable of reading product identifier information in a POS system.
- POS data collector 105 may be communicatively coupled to remote system 150 via network 140 .
- Network 140 may be implemented as, or may be a part of, a storage area network (SAN), personal area network (PAN), local area network (LAN), a metropolitan area network (MAN), a wide area network (WAN), a wireless local area network (WLAN), a virtual private network (VPN), an intranet, the Internet or any other appropriate architecture or system that facilitates the communication of signals, data and/or messages (generally referred to as data).
- POS data collector 105 may connect to network 140 via connection 135 .
- connection 135 may be a dedicated cellular modem connection.
- connection 135 may be a wired Ethernet connection, a Wi-Fi or Bluetooth connection to a hotspot that has a wired/wireless Internet connection (for example, MiFi), or any other wired or wireless connection suitable for communicating signals with network 140 .
- FIG. 3 depicts a block diagram of POS data collector 105 , in accordance with certain exemplary embodiments.
- Components of POS data collector 105 may include, but are not limited to, processor 360 , storage resource 362 , network module 364 , input/output (I/O) module 366 , clock module 368 , GPS module 370 , and error indicator 130 (error indicator 130 is also depicted in FIGS. 1 and 2 ).
- processor 360 may be communicatively coupled to each of the other components of POS data collector 105 .
- Processor 360 may comprise any system, device, or apparatus operable to interpret and/or execute program instructions and/or process data associated with software module 380 , and may include, without limitation a microprocessor, microcontroller, digital signal processor (DSP), application specific integrated circuit (ASIC), or any other digital or analog circuitry configured to interpret and/or execute program instructions and/or process data.
- processor 360 may interpret and/or execute program instructions and/or process data stored locally (for example, in storage resource 362 ).
- processor 360 may interpret and/or execute program instructions and/or process data stored remotely (for example, in a network storage resource (not depicted) of network 140 of FIGS. 1 and 2 ).
- Local storage resource 362 may comprise computer-readable media (for example, hard disk drive, floppy disk drive, CD-ROM, and/or other type of rotating storage media, flash memory, EEPROM, and/or other type of solid state storage media) and may be generally operable to store data.
- computer-readable media for example, hard disk drive, floppy disk drive, CD-ROM, and/or other type of rotating storage media, flash memory, EEPROM, and/or other type of solid state storage media
- Network module 364 may be any suitable system, apparatus, or device operable to serve as an interface between information POS data collector 105 and network 140 ( FIGS. 1 and 2 ).
- Network module 364 may enable information POS data collector 105 to communicate over network 140 using any suitable transmission protocol and/or standard, including without limitation all transmission protocols and/or standards enumerated above with respect to the discussion of network 140 and connection 135 .
- I/O module 366 may be any system, device, or apparatus generally operable to receive and/or transmit data to/from/within information POS data collector 105 .
- I/O module 366 may comprise, for example, any number of communication interfaces, including without limitation a USB interface and/or an RS-232 interface.
- Clock module 368 may be any system, device, or apparatus generally operable to maintain an internal clock. According to certain exemplary embodiments, clock module 368 may synchronize with the UTC (coordinated universal time). Additionally, clock module 368 may be configured to maintain an accurate internal clock when power to POS data collector 105 is removed (for example, via an independent battery power source).
- GPS module 370 may be any system, device, or apparatus generally operable to determine and provide the location of POS data collector 105 based on global positioning satellite signals or other similar methods (for example, via location information received by network module 364 ).
- Error indicator 130 may be any system, device, or apparatus generally operable to provide an indication that may be detected visually or audibly by a person near POS data collector 105 .
- error indicator 130 may be a visible LED light, in accordance with certain exemplary embodiments.
- error indicator may be an audible speaker capable of producing an audible noise.
- FIG. 4 is a block flow diagram depicting a method 400 for collecting POS data, in accordance with certain exemplary embodiments. The method 400 is described with reference to components illustrated in FIGS. 1-3 .
- a software module 380 of a POS data collector 105 may wait to obtain a product identifier associated with a product that is being purchased.
- POS scanner 110 is used to scan the barcode of a product that is being purchased. After scanning, the POS scanner 110 transmits the product identifier for processing by a POS application running on POS terminal 115 . Because the POS data collector 105 is communicatively coupled between POS scanner 110 and POS terminal 115 , POS data collector 105 may obtain the product identifier associated with the purchased product as the identifier is transmitted to the POS terminal 115 .
- software module 380 may transmit an unmodified version of the product identifier to POS terminal 115 .
- this transmission may be performed without noticeable delay so that the addition of POS data collector 105 to POS system 100 docs not interfere with the normal business flow.
- the POS application running on POS terminal 115 will be able to proceed with the purchase transaction, and will not be noticeably delayed by the addition of the POS data collector 105 to POS system 100 .
- the software module 380 may establish a connection with remote system 150 via network module 364 and network 140 .
- software module 380 may establish this connection by resolving the host name and/or address via DNS or other protocols, and subsequently communicating with remote system 150 to establish the connection. If a connection is successfully established (block 420 ), software module 380 may proceed to block 425 and may transmit the product identifier to remote host 150 . According to certain exemplary embodiments, this transmission may be via the HTTPS protocol, or any other protocol suitable for communicating data over network 140 to remote system 150 . According to exemplary embodiments that utilize the HTTPS protocol, software module 380 may verify the validity of the SSL certificate, and may not transmit data if validity is not established.
- the data transmission in block 425 may include only the product identifier.
- software module 380 may transmit additional data to remote server 150 .
- the transmitted data may be sent as a body of a POST request over HTTPS.
- the body of the POST request may contain the following fields:
- software module 380 may provide additional data including, but not limited to, one or more of the following: a merchant identifier, a store identifier (for example, for merchants with more than one store), a scanned product count, a current time stamp, a device identifier (for example, a manufacturer-issued serial number), a security key (for example, for secure communication), a software version number, price, and a device GPS coordinate.
- a merchant identifier for example, a store identifier (for example, for merchants with more than one store), a scanned product count, a current time stamp, a device identifier (for example, a manufacturer-issued serial number), a security key (for example, for secure communication), a software version number, price, and a device GPS coordinate.
- the body of the POST request may contain one or more of the following fields:
- software module 380 may provide a time stamp indicating when the product identifier was scanned by the POS scanner.
- the body of the POST requests depicted above may be modified as follows:
- software module 380 may determine if the transmission was successful. For example, according to a transmission via HTTPS, software module 380 may receive a HTTP 200/OK response with an empty body when the transmission is successful. Alternatively, software module 380 may receive either a 4xx or 5xx HTTP error if the transmission is unsuccessful.
- software module 380 may proceed to block 450 , where it may determine if a predetermined retry count has been exceeded. If the retry count has not been exceeded, software module 380 may increment the retry count and proceed back to block 425 where it may again attempt to transmit the product identifier (and any other data, as described above) to remote system 150 . According to an exemplary embodiment, software module 380 may proceed to block 425 immediately. In other embodiments, software module 380 may wait for a predetermined amount of time (for example, 1, 5, 10, etc. minutes) before retrying the transmission.
- a predetermined amount of time for example, 1, 5, 10, etc. minutes
- software module 380 may wait for 1 minute before retrying (the “timeout interval”), and if the next attempted transmission is unsuccessful, double the timeout interval. In this embodiment, software module 380 may continue to double the timeout interval for each consecutive failed transmission attempt until the timeout interval is 32 minutes, at which point software module 380 may keep trying to transmit the data every 32 minutes.
- software module may proceed to block 440 , and may activate error indicator 130 . In this manner, an employee of the retail store may be notified that the POS data collector has encountered an error.
- software module 380 may proceed to block 435 , where it may determine if a predetermined retry count has been exceeded. If the retry count has not been exceeded, software module 380 may increment the retry count and proceed back to block 415 where it may again attempt to establish a connection with remote system 150 .
- a timeout interval algorithm similar to that described above may be used.
- software module may proceed to block 440 , and may activate error indicator 130 . In this manner, an employee of the retail store may be notified that the POS data collector has encountered an error.
- software module 380 may proceed back to block 405 , where it may wait to obtain the next product identifier associated with an additional product that is being purchased. Thus, software module 380 may continue to operate despite the error condition. In this manner, the POS data collector 105 may at least continue to transmit scanned product identifiers to the POS terminal (block 410 ) so that the error condition does not interfere with business operations. According to an exemplary embodiment (not depicted), software module 380 may, in such a case, deactivate the error indicator if a subsequent attempt to establish a connection with remote system 150 or to transmit data to remote system 150 is successful.
- POS data collector 105 may transmit each product identifier essentially in real time as each product is scanned and without significant delay (i.e., no more delay than is necessary for the method steps of FIG. 4 to be performed).
- POS data collector 105 may accumulate POS data and transmit the accumulated data to remote system 150 periodically.
- software module 380 may store accumulated product identifiers in storage resource 362 until such time as they are transmitted to remote system 150 .
- software module 380 may accumulate product identifiers for a predetermined amount of time (for example, 5, 15, 30, etc. minutes) before transmitting the data to remote server 150 .
- software module 380 may accumulate product identifiers and may transmit the data to remote server 150 after a predetermined number of identifiers (for example, 5, 100, 1000, etc.) have been accumulated.
- software module 380 may accumulate POS data and use both a time period and a predetermined product identifier count to determine when to transmit the data to remote system 150 .
- software module 380 may buffer product identifiers for a predetermined amount of time or until a predetermined number of product identifiers are accumulated—whichever comes first.
- software module 380 may accumulate POS data until a predetermined amount of data is accumulated (for example, 1 kB, 1 MB, etc.). Accordingly, the data transmission may be optimized to minimize traffic while still sending updates with reasonable frequency.
- software module 380 may transmit only the accumulated product identifiers, in accordance with an exemplary embodiment.
- the body of an HTTPS request may be formatted as follows:
- the body of the POST request may contain one or more of the following fields:
- connection to remote system 150 via network module 364 and network 140 may be kept open or may be closed between transmissions.
- POS data collector 105 may transmit an alive indicator to remote system 150 , in accordance with an exemplary embodiment.
- software module 380 may send an alive indicator to remote system 150 on a periodic basis (for example, every 4, 6, 8, etc. hours).
- Software module 380 may transmit an alive indicator using steps similar to those described in FIG. 4 .
- software module 380 may perform the same retry/error algorithm when attempting to establish a connection with remote system 150 and to transmit the alive indicator.
- the HTTPS transmission for an alive indicator may be directed to a URL that is different from the URL used for transmitting product identifier(s).
- the body of an alive indicator POST request may contain one or more of the following fields:
- remote system 150 may use the alive indicator transmission to monitor POS data collector 105 for errors.
- remote system 150 may determine that POS data collector 105 is not operating if it does not receive an alive indicator according to the predetermined periodic schedule.
- a POS data collection system provider can arrange to troubleshoot POS data collector 105 in the event it stops operating correctly.
- FIG. 5 depicts a system 500 for extracting data, in accordance with certain exemplary embodiments.
- system 500 may comprise local computer 502 , remote storage resource 508 , remote computer 510 , and remote databases 516 .
- Local computer 502 may be a commercial retailer's central server located at the retailer's headquarters, or it may be a regional server, or a store-specific server.
- Database 504 may reside on local computer 502 or may reside on a remote database server (not pictured), and may contain data related to retail products and/or the business that sells products.
- local computer 502 may be owned by a commercial retailer and database 504 may contain data related to the retailer's product inventory, the retailer's stores (for example, businesses with more than one location), point of sale transactions, product listings, price-quantity data (for example, per store, per product pricing), circulars, coupons, etc.
- database 504 may be a commercially available database program (for example, MySQL, Oracle, MS SQL Server, etc.). In alternative embodiments, database 504 may be part of commercially available product inventory/sales software, a flat data file, a spreadsheet, etc.
- remote databases 516 may be of any type, but may be located remote to local computer 502 .
- content extractor 506 may reside on local computer 512 .
- Content extractor may be software that is generally operable to extract data from database 504 , to process the extracted data, and to transmit data to remote storage 508 and/or remote computer 510 .
- content extractor 506 may include a configuration file 514 .
- Configuration file 514 may be any format, including binary, clear text, database, or other suitable format.
- Configuration file 514 may contain connection and mapping settings related to database 504 , remote storage 508 and/or remote computer 510 .
- Content extractor 506 and configuration file 514 are explained in detail with reference to FIGS. 6-8 , below.
- Remote storage 508 may be any storage facility accessible to both local computer 502 and remote computer 510 .
- remote storage 508 may include disk-based storage resources, such as magnetic storage, opto-magnetic storage, or any other type of disk-based storage.
- disk-based storage resources such as magnetic storage, opto-magnetic storage, or any other type of disk-based storage.
- remote storage may be separate from local computer 502 and remote computer 510 , for example, as a stand-alone network attached storage solution, as a cloud storage solution, etc.
- remote storage 508 may form an integral part of remote computer 510 , for example, as a storage resource (or array of storage resources) residing on remote computer 510 .
- Remote computer 510 may be any instrumentality or aggregate of instrumentalities operable to compute, classify, process, transmit, receive, retrieve, originate, switch, store, display, manifest, detect, record, reproduce, handle, or utilize any form of information, intelligence, or data for business, scientific, control, entertainment, or other purposes.
- remote computer 510 may be a mainframe computer, a network server, a personal computer, a PDA, a consumer electronic device, a network storage device, or any other suitable device and may vary in size, shape, performance, functionality, and price.
- Remote computer 510 may include memory, one or more processing resources such as a central processing unit (CPU) or hardware or software control logic.
- CPU central processing unit
- Additional components or the remote computer 510 may include one or more storage devices, one or more communications ports for communicating with external devices as well as various input and output (I/O) devices, such as a keyboard, a mouse, and a video display.
- the remote computer 510 may also include one or more buses operable to transmit communication between the various hardware components.
- local computer 502 may be communicatively coupled to remote storage 508 (if provided) and remote computer 510 via network 512 .
- Network 512 may be implemented as, or may be a part of, a storage area network (SAN), personal area network (PAN), local area network (LAN), a metropolitan area network (MAN), a wide area network (WAN), a wireless local area network (WLAN), a virtual private network (VPN), an intranet, the Internet or any other appropriate architecture or system that facilitates the communication of signals, data and/or messages (generally referred to as data).
- local computer 502 may connect to network 512 via a dedicated cellular modem connection.
- local computer 502 may connect to network 512 via a wired Ethernet connection, a Wi-Fi or Bluetooth connection to a hotspot that has a wired/wireless Internet connection (for example, MiFi), or any other wired or wireless connection suitable for communicating signals over network 512 .
- FIG. 6 depicts a system 600 for extracting data, in accordance with certain exemplary embodiments.
- system 600 may include configuration dialogue 601 .
- Configuration dialogue 601 may be presented by content extractor 506 to a user of local computer 502 , and may be generally operable to accept input from the user.
- configuration dialogue 601 may include a Database Type menu 602 .
- Database Type menu 602 may be a drop-down menu with a preconfigured selection of database types that are compatible with content extractor 506 .
- the Database Type menu 602 may contain entries for commercially available database programs (for example, MySQL, Oracle, MS SQL Server, etc.), commercially available product inventory/sales software (for example, POSlog, etc.), flat data files, spreadsheets, etc. Accordingly, a user of local computer 502 may select the appropriate entry in Database Type menu 602 that corresponds to database 504 .
- database programs for example, MySQL, Oracle, MS SQL Server, etc.
- product inventory/sales software for example, POSlog, etc.
- flat data files for example, spreadsheets, etc.
- configuration dialogue 601 may also include Database Host input 604 (with optional port number), Database Name input 606 , DB Username input 608 , and DB Password input 610 . Accordingly, a user of local computer 502 may specify the connection parameters specific to database 504 so that content extractor 506 may obtain access to the data contained therein. While inputs 602 - 610 are explicitly depicted in FIG. 6 , configuration dialogue 601 should not be limited to this specific embodiment. For example, additional inputs may be provided related to accessing database 504 . Alternatively, some of the depicted inputs may not be necessary to access database 504 depending on the specific configuration of local computer 502 and database 504 .
- configuration dialogue 601 may accept remote computer and/or remote storage configuration parameters.
- configuration dialogue 601 may include Remote Username input 612 , Remote Password input 614 , Schedule Frequency menu 616 , Schedule Time input 618 , and Schedule Day menu 619 .
- Schedule Frequency menu 616 may be a drop-down menu with a preconfigured selection of frequency types that are compatible with content extractor 506 .
- Schedule Frequency menu 616 includes the “weekly” frequency type, indicating that content extractor 506 should extract data from database 504 and transmit the data to remote storage 508 and/or remote computer 510 on a weekly basis, for example, at 7:00 PM every Saturday (as specified by Schedule Time input 618 and Schedule Day menu 619 ).
- Schedule Frequency menu 616 may contain entries for other periodic extraction frequencies, such as “monthly,” “daily,” “hourly,” etc.
- Schedule Frequency menu 616 may contain an entry for “instant” or “manual” extraction.
- content extractor 506 may extract data from database 504 and transmit the data to remote storage 508 and/or remote computer 510 as soon as the user clicks Save button 622 .
- Schedule Frequency menu 616 may contain an entry for “real time” extraction.
- content extractor 506 may extract data from database 504 and transmit the data to remote storage 508 and/or remote computer 510 in real time.
- real time extraction may occur in response to the updating of a database table in database 504 . This may be useful, for example, to reflect a change of product pricing, a store closing, a promotion, a regional event, product sales (for example, line item data reflecting recent sale information), or other change related to product sales and/or the business or store that sells the products.
- real time extraction may occur in response to other predetermined events that are external to database 504 (for example, local computer establishing connection with remote storage 508 and/or remote computer 510 , content extractor establishing connection to database 504 , etc.). These and other events that trigger real time extraction may be provided for in configuration file 514 .
- a user of local computer 502 may specify the connection parameters specific to remote storage 508 and/or remote computer 510 so that content extractor 506 may connect and transmit data thereto.
- configuration dialogue 601 should not be limited to this specific embodiment.
- additional inputs may be provided related to accessing remote storage 508 and/or remote computer 510 .
- some of the depicted inputs may not be necessary to access remote storage 508 and/or remote computer 510 depending on the specific configuration of local computer 502 , remote storage 508 , and remote computer 510 .
- configuration dialogue 601 may include Test Connections button 620 , Save button 622 , and Clear button 624 , which may provide the function indicated by each respective label.
- Test Connections button 620 may use the user-supplied input parameters to test for a valid connection to the database 504 , remote storage 508 , and/or remote computer 510 .
- Save button 622 may save the user-supplied input parameters to configuration file 514 .
- Clear button 624 may clear all user-supplied input so that the input fields are blank and/or non-selected.
- FIG. 7 depicts a system 700 for extracting data, in accordance with certain exemplary embodiments.
- system 700 may include table mapping dialogue 702 .
- Table mapping dialogue 702 may be presented by content extractor 506 to a user of local computer 502 , and may be generally operable to accept input from the user, where the input aids in mapping table attributes (for example, table fields) in database 504 to predefined attributes in content extractor 506 .
- table mapping dialogue 702 may be specific to a certain type of information, or table.
- FIG. 7 depicts a table mapping dialogue 702 that is specific to store information.
- the user may provide a mapping of table attributes related to store information (for example, for a retailer with one or multiple stores).
- table mapping dialogue 702 may be specific to product information (for example, data related to all products that a specific retailer sells).
- table mapping dialogue 702 may be specific to price-quantity information (for example, per store, per product inventory and pricing information). Still other embodiments of table mapping dialogue 702 may be provided, such that other data related to product sales and businesses that sell products may be collected.
- table mapping dialogue 702 may contain Table menu 704 of a drop-down menu type.
- the entries available on Table menu 704 may be provided based on the tables available in database 504 using connection parameters stored in configuration file 514 .
- the attributes of the selected table may appear in Table Attributes field 706 .
- selected table “stores” has three attributes: name, address, and id.
- Table mapping dialogue 702 may also contain Store Attributes field 708 .
- Store Attributes field 708 may contain predefined attributes of content extractor 506 .
- this field is labeled “Store Attributes” because, as discussed above, the table mapping dialogue 702 is specific to Store Information. In other embodiments, this field of table mapping dialogue 702 may have a different label (for example, “Product Attributes,” “Price-Quantity Attributes,” etc.).
- a user of local computer 502 may provide a mapping between the table attributes (shown in Table Attributes field 706 ) and the predefined attributes of content extractor 506 (shown, for example, in Store Attributes field 708 ). For example, a user may select “name” from Table Attributes field 706 and “Name” from Store Attributes field 708 and press Save Map button 712 . In the same manner, a user may map “address” to “Address Line 1,” and “id” to “Store Code.” The result of this example mapping is depicted in table mapping dialogue 720 of FIG. 7 . Specifically, the mapping may be presented to the user in the manner depicted in Mapped Values field 726 .
- mapping dialogue 720 once a table attribute is mapped, it may be removed from Table Attributes field 706 . Likewise, once a store attribute is mapped, it may be removed from Store Attributes field 706 .
- table mapping dialogue 702 may include Generate button 714 , Save button 716 , and Clear button 718 , which may provide the function indicated by each respective label.
- Generate button 714 may use the user-supplied input parameters to generate a file representing the data that content extractor 506 would transmit to remote storage 508 and/or remote computer 510 . This may be useful, for example, to ensure that the user-supplied mapping is accurate.
- Save button 716 may save the user-supplied input parameters to configuration file 514 or a separate mapping file (not depicted).
- Clear button 624 may clear all user-supplied input so that the input fields are blank and/or revert to their initial state.
- a user of local computer 502 may easily provide a mapping of table attributes in existing, legacy database systems to the predefined attributes desired by content extractor 506 .
- FIG. 8 is a block flow diagram depicting a method 800 for extracting data, in accordance with certain exemplary embodiments. The method 800 is described with reference to components illustrated in FIGS. 5-7 . FIG. 8 also illustrates a means for extracting data according to certain exemplary embodiments.
- a content extractor 506 may wait for a trigger condition.
- a trigger condition may be provided in accordance with the user-supplied parameters 616 - 619 of configuration dialogue 601 .
- a trigger condition may be based on a periodic setting, an instant setting, or a real time setting.
- content extractor 506 may read configuration file 514 to obtain database connection parameters in accordance with the user-supplied parameters 602 - 610 of configuration dialogue 601 . Content extractor 506 may also obtain table mapping parameters in accordance with the user-supplied mapping provided in table mapping dialogue 702 . In block 806 , content extractor 506 may attempt to connect to database 504 using the obtained database connection parameters. If the connection attempt is successful, content extractor 506 may proceed to block 808 .
- content extractor 506 may extract data from one or more database tables residing in database 504 .
- content extractor 506 may use the attribute mappings obtained in block 804 to extract data from the specified table fields.
- content extractor 506 may extract data from one or more database tables residing in remote databases 516 .
- content extractor 506 can receive data from multiple databases located in the same or different locations. For example, a retailer may operate multiple stores that each store sales data. The content extractor 506 may receive the data from each database 504 , 516 to provide a data source for all (or any given portion) of the retailer's distributed sales data.
- content extractor 506 may process the extracted data. For example, content extractor 506 may verify that the format of the extracted data matches an expected format (for example, uniformity of address data, syntax, etc.). In certain embodiments, content extractor 506 may reformat extracted data if it does not match an expected format and not reformat the extracted data if it does match an expected format.
- an expected format for example, uniformity of address data, syntax, etc.
- content extractor may auto-generate data based on the extracted data.
- content extractor 506 may desire the latitude and longitude information for a given store location. This information may not be available in database 504 .
- content extractor 506 may be configured to generate latitude and longitude information based on an address of a store location where the address information is both available in database 504 and has been properly mapped using mapping dialogue 702 .
- block 810 may illustrate a means for processing extracted data according to exemplary embodiments.
- content extractor 506 may attempt to connect to remote storage 508 and/or remote computer 510 using the remote storage and/or remote computer connection parameters obtained, for example, in block 804 . If a the connection attempt is successful, content extractor 506 may proceed to block 814 , where content extractor 506 may transmit the data (i.e., extracted data with additions/modifications as performed in block 810 ) to remote storage 508 and/or remote computer 510 . After the data is transmitted, content extractor 506 may return to block 802 , where it waits for the next trigger condition.
- data i.e., extracted data with additions/modifications as performed in block 810
- FIG. 9 depicts a system 900 for estimating product availability, in accordance with certain exemplary embodiments.
- system 900 may comprise computer 910 .
- Computer 910 may be any instrumentality or aggregate of instrumentalities operable to compute, classify, process, transmit, receive, retrieve, originate, switch, store, display, manifest, detect, record, reproduce, handle, or utilize any form of information, intelligence, or data for business, scientific, control, entertainment, or other purposes.
- computer 910 may be a mainframe computer, a network server, a personal computer, a PDA, a consumer electronic device, a network storage device, or any other suitable device and may vary in size, shape, performance, functionality, and price.
- Computer 910 may include one or more processing resources (for example, processor 901 ).
- processor 901 may comprise any system, device, or apparatus operable to interpret and/or execute program instructions and/or process data associated with software module 950 , and may include, without limitation a microprocessor, microcontroller, digital signal processor (DSP), application specific integrated circuit (ASIC), or any other digital or analog circuitry configured to interpret and/or execute program instructions and/or process data.
- processor 901 may interpret and/or execute program instructions and/or process data stored locally. In the same or alternative embodiments, processor 901 may interpret and/or execute program instructions and/or process data stored remotely.
- Computer 910 may include storage resource 970 , which may be a local storage resource (for example, as described with respect to local storage resource 362 of FIG. 3 ) or a remote storage resource (for example, as described with respect to remote storage 508 of FIG. 5 ).
- Computer 910 may also include one or more communications ports for communicating with external devices (for example, network I/F 902 , I/O 903 , etc.) as well as various input and output (I/O) devices, such as a keyboard, a mouse, and a video display.
- the computer 910 also may include one or more buses operable to transmit communication between the various hardware components.
- computer 910 may be implemented as part of a commercial retailer's computer system, for example, located at the retailer's headquarters, regional office, or at a specific retail store.
- computer 910 may be implemented as part of a third party computer system, for example, located remotely at the third-party's place of business or located at a retailer's headquarters, regional office, retail store, etc. (while being owned/operated by the third party).
- Computer 910 may be configured to receive inputs 920 .
- inputs 920 include, for example, POS data, inventory feeds, bar code scans, global positioning system (GPS) data, receipt data (from users or companies), other “non-merchant” data, such as data from a third party aggregator, and other data.
- Inputs 920 may be available in real time (for example, as soon as possible accounting for network/communication/system latency) or on a periodic basis (for example, batch updates from the retailer scheduled every minute, every hour, every eight hours, once a day, or other suitable time period.).
- Computer 910 may be configured to provide product availability estimation output 930 .
- output 930 may be used to provide a product availability estimate to a potential purchaser (for example, a consumer).
- computer 910 may be configured as an Internet search engine/web server.
- a consumer may conduct an Internet search for a specific product.
- computer 910 may provide search results, including product availability estimation output 930 .
- the search results may include nearby commercial retailers that carry the product, as well as the product availability estimation output 930 for each of those retailers, for example, to indicate whether the product is available for sale at each of the nearby retail stores.
- computer 910 may be configured as a stand-alone product availability estimation system such that output 930 is communicatively coupled to, for example, an Internet search engine/web server.
- this alternative embodiment may behave as just described, with the exception that the web server and computer 910 are distinct pieces of hardware. Accordingly, the web server may query computer 910 to obtain product availability estimation output 930 (on a per-store basis), so that this information may be provided along with the search results.
- output 930 may be used to provide product availability estimates to a commercial retailer.
- computer 910 may be a terminal (for example, a POS terminal, an inventory room terminal, or other terminal) located at a commercial retailer's store, or a stand-alone system coupled (either locally or remotely) to such a terminal.
- the estimated availability of a specific product may be obtained by, for example, a store employee using the terminal.
- the terminal in this embodiment would behave similarly to the Internet search engine/web server described above so that when computer 910 is queried regarding the availability of a specific product, an estimated product availability is provided on output 930 (for example, so that it can be displayed on the terminal's monitor).
- computer 910 may include software module 950 .
- Software module 950 may estimate the availability of a specific product (i.e., generate output 930 ) based on the velocity of sales events of that product.
- r e may be estimated from an average time ( ⁇ t>) between sales events.
- the velocity of sales events (r e ) may be represented by an exponential moving average such that the more recent events may have more weight than events in the past (i.e., the weight of past events may be decaying exponentially).
- software module 950 may adjust time values to account for normal business hours. For example, if a store closes at 5:00 pm and opens the next morning at 9:00 am, and the last two sales of a given product occurred at 4:58 pm and 9:02 am the next morning, software 950 may determine that the time between sales events is 4 minutes.
- Table 1 provides example data for estimating the velocity of sales events (r e ) according to certain exemplary embodiments.
- ⁇ t> 8 may be estimated recursively:
- k may be a constant value between 0 and 1.
- k 0.1
- the estimated rate of sales events r e for the example data is 0.42 events/minute. It should be noted that a smaller k may give more weight to past events, whereas a bigger k may give more weight to the more recent events.
- Table 2 provides the estimated rate of sales events (r e ) for the example data of Table 1 assuming different values of k.
- averaging the estimated rate of sales events over the last 10-30 sales may provide a reasonable assumption.
- k may be in the range 0.03 ⁇ k ⁇ 0.1.
- the estimated rate of sales events may be used to estimate the availability of a product.
- software module 950 of computer 910 may receive POS data (for example, as all or some of inputs 920 ) including line item data.
- a single line item may represent a sales event where one or more instances of a given product are sold at a given time at a given store location.
- software module 950 may assume that the sales events follows a Poisson distribution (which may or may not be uniform). Accordingly, given an estimated rate of sales events r e , software module 950 may approximate the probability of not seeing any sales events for a duration t as exp( ⁇ r e *t).
- the average time between sales events would be 1/2.4 ⁇ 0.42 hours ⁇ 25 minutes.
- the probability of not seeing any sales events for a duration of 1 hour i.e., until 1:00 pm
- the probability of not seeing any sales events for a duration of 5 hours i.e., until 5:00 pm
- software module 950 may define probabilities p 1 and p 2 (where p 1 >p 2 ) with the following properties:
- the probabilities p 1 and p 2 may be the same, such that the “unknown” condition cannot be met (i.e., only “in stock” and “out of stock” indicators may be provided).
- Computer 910 of FIG. 9 may comprise data object 940 .
- data object 940 may reside in storage resource 970 and be used in determining product availability estimation output 930 .
- Data object 940 may comprise the following data fields: product ID 941 , store ID 942 , last sale timestamp 943 (T last — sale ), sales event rate 944 (r e ), probability 945 (p 1 ), probability 946 (p 2 ), unknown switch time 947 (T unknown ), and out-of-stock switch time 947 (T out-of-stock ).
- computer 910 may include a separate data object 940 for each product-store combination. In other words, computer 910 may have one data object 940 for each product sold at a given store.
- product ID 941 may correspond to a particular product
- store ID 942 may correspond to the particular store at which the particular product sold.
- Last sale timestamp 933 may correspond to the time of the last sale of the identified product at the identified store.
- software module 950 of computer 910 may receive each of product ID 941 , store ID 942 , and last sale timestamp 933 as POS data (for example, as all or some of inputs 920 ) including line item data.
- software module 950 may determine sales event rate 944 (r e ) upon receiving POS data. For example, after receiving POS data including line item data, software module 950 may retrieve data object 940 (for example, from a database, a flat file, or other source) using the product ID and store ID in the received line item data. Retrieved data object 940 may already comprise a non-NULL value for sales event rate 944 (for example, if this is not the first sale of the product corresponding to the product ID and store ID in the received line item data). Regardless, a new sales event rate 944 may be determined as an exponential moving average each time software module 950 receives new line item data.
- software module 950 may determine last sale timestamp 943 (T last — sale ), unknown switch time 947 (T unknown ), and out-of-stock switch time 947 (T out-of-stock ) upon receiving POS data including line item data.
- last sale timestamp 943 may be part of the received line item data (for example, POS data as described above with respect to FIG. 4 ).
- software module 950 may copy the timestamp in the line item data into the last sale timestamp 943 field of data object 940 .
- software module 950 may store the time of actual receipt of the POS data into the last sale timestamp 943 field of data object 940 .
- data object 940 may contain the following values:
- software module 950 may store the calculated values of T unknown (12:25 pm) and T out-of-stock (12:50 pm) into unknown switch time 947 and out-of-stock switch time 947 fields of data object 940 . Accordingly, assuming no additional POS data for product_id:45 and store_id:178 is received, software module 950 of computer 910 may estimate product availability as “in stock” between 12:00 pm and 12:25 pm, as “unknown” between 12:25 pm and 12:50 pm, and as “out of stock” after 12:50 pm. Software module 950 may provide such estimates as product availability estimation output 930 .
- FIG. 10 depicts a block flow diagram depicting a method 1000 for estimating product availability, in accordance with certain exemplary embodiments. The method 1000 is described with reference to components illustrated in FIGS. 1 and 9 .
- a software module 950 of computer 910 may wait to receive POS data.
- POS system 100 will collect POS data via POS data collector 105 and will communicate the POS data to computer 910 as line item data on all or some of inputs 920 .
- software module 950 will proceed to block 1020 and attempt to retrieve a data object (for example, data object 940 ) corresponding to the product_id and store_id that was received in the POS data. If such data object exist does not exist, software module 950 may proceed to block 1030 and create a new data object corresponding to the product_id and store_id that was received in the POS data.
- a data object for example, data object 940
- software module 950 may proceed to block 1040 and update the p 1 and p 2 probability fields of the new data object.
- the value of p 1 and p 2 may be predetermined, such that all new data objects are initialized with the same p 1 and p 2 values regardless of the product.
- the value of p 1 and p 2 may be predetermined, but may be specific to a product or product category.
- computer 910 may include probability table 980 so that software module 950 may perform a look-up using the received product_id.
- probabilities p 1 and p 2 may be fixed on a system-wide basis so that there isn't any need to include these fields as part of data object 940 . In still other embodiments, these probabilities may be derived, as discussed previously.
- software module 950 may update the T last — sale value. As described above, software module 950 may copy T last — sale directly from a timestamp in the received POS data, or it may update T last — sale with the current time. In block 1060 , software module 950 may update the r e field (rate of sales events) as described above. In block 1070 , software module 950 may update the T unknown and T out-of-stock fields as described above.
- FIG. 11 depicts a block flow diagram depicting a method 1100 for estimating product availability, in accordance with certain exemplary embodiments. The method 1100 is described with reference to components illustrated in FIGS. 1 and 9 .
- software module 950 of computer 910 may wait to receive a request for a product availability estimate.
- computer 910 may be configured as an Internet search engine/web server.
- a consumer may conduct an Internet search for a specific product.
- computer 910 may determine that one or more retail stores offer the specific product for sale. Accordingly, the consumer's search initiates a request for a product availability estimate so that software module 950 may indicate whether the product is available at the one or more retail stores.
- computer 910 may be configured as a stand-alone product availability estimation system. According to this embodiment, a request for a product availability estimate may arrive via one or more of inputs 920 .
- software module 950 may proceed to block 1120 and attempt to retrieve a data object (for example, data object 940 ) corresponding to the product_id and store_id specified in the request received in block 1110 . If such data object does not exist, software module 950 may proceed to block 1130 . In some embodiments, software module 950 may set product availability estimate output 930 to “undefined” in block 1130 because data corresponding to the request does not exist. In this case, the product availability output 930 may be set to “call for availability” or “limited” to indicate that stock level should be verified.
- software module 950 may proceed to block 1140 .
- software module 950 may compare the current time with the time stored in the T unknown field of the retrieved data object. If the current time is earlier than T unknown , software module 950 may proceed to block 1150 and set product availability estimate output 930 to “in stock.” If the current time is later than T unknown ), software module 950 may proceed to block 1160 .
- software module 950 may determine whether the current time is earlier than the time stored in the T out-of-stock field of the retrieved data object. If so, software module 950 may proceed to block 1170 and set product availability estimate output 930 to “unknown.” Alternatively, if the current time is later than the time stored in the T out-of-stock field, software module 950 may proceed to block 1180 and set product availability estimate output 930 to “out of stock.” In certain exemplary embodiments, software module 950 may operate only with the “in stock” and “out of stock” options.
- software module 950 may estimate the availability of a specific product (in other words, generate output 930 ) based on the velocity of sales of that product (as opposed to the velocity of sales events, as described above).
- the number of items in a transaction can be assumed to be independent from the timing of the sales events.
- ⁇ u> 9 may be estimated recursively:
- k may be a constant value between 0 and 1.
- k may be a constant value between 0 and 1.
- the estimated rate of sales r s for the example data is 0.924 units/minute. It should be noted that a smaller k may give more weight to past events, whereas a bigger k may give more weight to the more recent events.
- k for r s may be in the range 0.03 ⁇ k ⁇ 0.1.
- the estimated rate of sales (r s ) may be used to estimate the availability of a product.
- software module 950 of computer 910 may receive an inventory snapshot from a given store, indicating the quantity in inventory (Q feed ) on a per-product, per-store basis. This snapshot may be provided on inputs 920 , for example, as a periodic inventory feed provided by content extractor 506 .
- the periodic inventory feed may be provided by content extractor 506 such that software module 950 of computer 910 receives the inventory feed some time after the inventory snapshot was taken.
- ⁇ T may be reported by the store/merchant, for example, as part of the data transmitted in the periodic inventory feed.
- software module 950 may calculate the ⁇ statistics from the actual data (for example, based on a number of periodic inventory feed updates, etc.). In other embodiments, software module 950 may assume that ⁇ is a log-normally distributed random value with some fixed ⁇ , which is the same for all stores/merchants.
- software module 950 may store the list of sales events between successive periodic inventory feeds and use data from these stored sales events along with the inventory feed, Q feed , to calculate the inventory, Q upload , at the time the inventory feed is uploaded into software module 950 of computer 910 (in other words, time T upload ).
- software module 950 may implement the above function with instructions corresponding to the following pseudo-code:
- software module 950 may estimate the inventory, Q upload , at the time the inventory feed is uploaded.
- Software module 950 may distribute the number of items, N, that are sold in the period ⁇ T with probabilities. For example, according to the probability:
- software module 950 may determine the probability of selling N units or fewer of any given product according to a cumulative distribution function, for example:
- ⁇ T 1 (i.e., the snapshot was generated 1 hour before it was uploaded)
- software module 950 may estimate the current number of remaining items in inventory, Q now , as:
- software module 950 may determine that there is a 91% probability that the item is “in stock” and a 9% probability that the product is “sold out.”
- software module 950 may define probability thresholds for estimating whether a product's availability is “in stock,” “unknown,” or “out of stock.” For example, software module 950 may estimate that a product's availability is “in stock” when the probability of having an item in stock is above 0.5 and “unknown” when it falls below 0.5. Likewise, software module 950 may estimate that a product's availability is “out of stock” when the probability of having an item in stock falls below 0.1. In some embodiments, these probability thresholds may be consistent across all products. For example, all products may use 0.5 for the “unknown” estimate and 0.1 for the “out of stock” estimate. According to an alternative embodiment, the probability thresholds may be consistent on a per-product basis.
- the probability thresholds may be relatively static. In other embodiments, the probability thresholds may be variable with time, for example, subject to adjustment based on feedback/analysis of the performance of the product estimation system 900 (for example, software 950 may derive the probability thresholds from an acceptable false positives rate).
- software module 950 may define one probability threshold for estimating whether a product's availability is “in stock” or “out of stock.” For example, software module 950 may estimate that a product's availability is “in stock” when the probability of having an item in stock is above 0.5 and “out of stock” when it falls below 0.5.
- FIG. 12 depicts a block flow diagram depicting a method 1200 for estimating product availability, in accordance with certain exemplary embodiments. The method 1200 is described with reference to components illustrated in FIGS. 1 , 9 , and 13 .
- software module 950 of computer 910 may wait to receive a request for a product availability estimate.
- computer 910 may be configured as an Internet search engine/web server.
- a consumer may conduct an Internet search for a specific product.
- computer 910 may determine that one or more retail stores offers the specific product for sale. Accordingly, the consumer's search initiates a request for a product availability estimate so that software module 950 may indicate whether the product is available at the one or more retail stores.
- computer 910 may be configured as a stand-alone product availability estimation system. According to this embodiment, a request for a product availability estimate may arrive via one or more of inputs 920 .
- software module 950 may proceed to block 1220 and attempt to retrieve a data object (for example, data object 1300 ) corresponding to the product_id and store_id specified in the request received in block 1210 . If no such data object exists, software module 950 may proceed to block 1230 . In some embodiments, software module 950 may set product availability estimate output 930 to “undefined” in block 1230 because there is no data corresponding to the request. In this case, the product availability output 930 may be set to “call for availability” or “limited” to indicate that stock level should be verified.
- software module 950 may proceed to block 1235 .
- software module 950 may determine the value of Q now and/or the probability Pr( ), as described above. In an exemplary embodiment, only the probability Pr( ) can be used in making this estimation. In an alternative exemplary embodiment, Q now can be used in this estimation, and Pr( ) can be used to verify the result obtained with Q now .
- software module 950 may compare the probability Pr( ) with the probability threshold set for the “unknown” estimate.
- probability Pr( ) is greater than the “unknown” threshold, software module 950 may proceed to block 1250 and set product availability estimate output 930 to “in stock.” If probability Pr( ) is less than the “unknown” threshold, software module 950 may proceed to block 1260 .
- software module 950 may determine whether probability Pr( ) is greater than the “out of stock” threshold. If so, software module 950 may proceed to block 1270 and set product availability estimate output 930 to “unknown.” Alternatively, if probability Pr( ) is less than the “out of stock” threshold, software module 950 may proceed to block 1280 and set product availability estimate output 930 to “out of stock.”
- FIG. 13 depicts a block diagram of data object 1300 , in accordance with certain exemplary embodiments.
- Computer 910 may comprise data object 1300 .
- software module 950 may store data object 1300 in storage resource 970 .
- software module 950 may use the data stored in data object 1300 to provide product availability estimates, as described above with reference to FIGS. 9-12 .
- computer 910 may comprise one data object 1300 per product-store pair.
- data object 1300 may comprise the following fields: T last — sale 1310 (i.e., the last sale timestamp), ⁇ t> 1320 (i.e., running average time between sales events), and ⁇ u> 1330 (i.e., running average number of units per sales event).
- Software module 950 may determine T last — sale 1310 , ⁇ t> 1320 , and ⁇ u> 1330 as described with respect to FIG. 9 upon receiving POS data.
- data object 1300 may additionally comprise the following fields: ⁇ T 1340 (i.e., time between T feed and T upload ), and Q now 1350 (number of items sold after an inventory snapshot was uploaded at time T upload ).
- ⁇ T 1340 may be reported by the store/merchant, for example, as part of the data transmitted in the periodic inventory feed.
- sales data can be provided by receipt analysis (from users or companies) and other “non-merchant” data, such as data from a third party aggregator.
- Software module 950 may determine/store Q sold 1350 in response to all POS data received subsequent to time T upload .
- data object 1300 may additionally comprise data field r s-upload 1360 (i.e., the value of r s at time T upload ), which may be used in the place of r s when calculating Pr( ).
- data stored in data object 1300 may allow software module 950 to provide product availability estimates (for example, on output 930 ) without the need to store all of the line item data received via POS data on inputs 920 .
- product availability can be determined based on line item sales data. For example, if an item is currently listed as “unknown” or “out of stock,” the product availability can be updated to “in stock” based receipt of new sales data that includes sales of the particular product. If a store is selling the product, then it is in stock. In this exemplary embodiment, product availability can be estimated without knowing actual inventory for the store.
- FIG. 14 depicts a system 1400 for displaying a place page 1410 on a user system 1405 , in accordance with certain exemplary embodiments.
- system 1400 comprises network devices, such as user system 1405 , popular, in-stock product generation system 1430 , data server 1490 , and merchant server 1480 , which are configured to communicate with one another via one or more networks 1420 .
- Each network 1420 includes a wired or wireless telecommunication means by which network devices (including devices 1405 , 1430 , 1480 , 1490 ) can exchange data.
- each network 1420 can include a local area network (“LAN”), a wide area network (“WAN”), an intranet, an Internet, a mobile telephone network, or any combination thereof.
- LAN local area network
- WAN wide area network
- intranet an Internet
- Internet a mobile telephone network
- Each network device 1405 , 1430 , 1480 , 1490 includes a device having a communication module capable of transmitting and receiving data over the network 1420 .
- each network device 1405 , 1430 , 1480 , 1490 can include a server, desktop computer, laptop computer, tablet computer, smartphone, handheld computer, personal digital assistant (“PDA”), or any other wired or wireless, processor-driven device.
- PDA personal digital assistant
- the user system 1405 comprises an electronic device that is capable of displaying information and connecting to the network 1420 .
- Examples include a personal computer, a mobile computing device, or other electronic devices, in accordance with alternative exemplary embodiments.
- the place page 1410 and product display 1420 presented on the user system 1405 are described in more detail below with reference to FIG. 19 .
- the popular, in-stock product generation system 1430 pulls data from two primary databases: a product popularity database 1460 and a product availability database 1470 .
- the information from the product popularity database 1460 and the product availability database 1470 is then made available to a cross-reference engine 1440 through wired or wireless means, in one embodiment, or by direct communication within a single computing component, in another embodiment.
- the cross-reference engine 1440 applies certain methods of matching the products in each database, which are explained in further detail below with reference to FIGS. 15-18 .
- the product availability database 1470 may be populated, in certain embodiments, by direct information provided from a merchant through a merchant server 1480 in connection with the network 1420 , which allows transfer of information through the network 1420 to the product availability database 1470 .
- a merchant may simply provide a list of current inventory information that can be used to populate the product availability database 1470 . This information could be, in one embodiment, dynamically linked, so that the information is available in real time, or the merchant inventory information can be periodically updated in batches at certain time intervals, in another embodiment.
- the product availability database may access or information on, or receive information from, a data server 1490 to provide product availability information.
- the data server 1490 may provide inventory information through the various systems and methods described previously with reference to FIGS. 1-13 .
- the product popularity database 1460 may contain a list of products ranked by popularity.
- the list of products can be generated by input from merchant servers 1480 and also by data servers 1490 .
- the data server may take into account recent transactions over the Internet, typical search terms used in attempting to locate, read about, or purchase products over the Internet, manual or automatic entry of terms, or otherwise.
- the popularity engine 1450 may rank or order or assign values to the products relative to their popularity. The methods by which popularity may be determined are described in more detail with respect to FIG. 16 .
- FIG. 15 is a block flow diagram depicting a method 1500 for presenting in-stock, popular items that are available at merchant locations, in accordance with certain exemplary embodiments.
- a merchant place page 1410 is created.
- the merchant place page 1410 may correspond to a particular store, by referencing the store's physical address, or by referencing the store's store number, or by some other type of identifier that allows for unique identification of the merchant's physical location. It shall be understood that the term “store” means a merchant's physical location.
- the place page 1410 is described in further detail hereinafter with respect to FIG. 19 .
- a product availability database 1470 is populated.
- the product availability can be obtained by the means described previously with respect to the product availability database 1470 .
- a product popularity database 1460 is populated and sorted, as described in further detail hereinafter with respect to FIG. 16 .
- a means for the identification of items that are both popular and in-stock at the merchant location is implemented according to the methods described in more detail hereinafter in FIG. 17 .
- the place page 1410 is populated with one or more of the identified items that are both popular and available at the merchant location, as described in more detail hereinafter in FIGS. 18-19 .
- the product availability may be noted with certain quantitative or qualitative signifiers such as, by way of non-limiting examples: limited availability, not available, available, in-stock, only “5” items left, and any other suitable notation indicating available inventory at the merchant location.
- the product availability database notes the product availability at each of a plurality of merchant locations. Thus, a product may be available at a merchant's location A but not at the merchant's location B.
- FIG. 16 is a block flow diagram depicting a method 1530 for populating a product popularity database 1470 , in accordance with certain exemplary embodiments. Exemplary steps described with reference to FIG. 16 may be performed by the popularity engine 1450 .
- Block 1610 depicts the creation of a database of products sold at various locations of one or more merchants, including without limitation products sold online and/or product sold in physical locations.
- the list of products can be generated by input from merchant servers 1480 and also by data servers 1490 .
- the data server 1490 may take into account recent transactions over the Internet, typical search terms used in attempting to locate, read about, or purchase products over the Internet, manual or automatic entry of terms, or otherwise.
- the various merchants may provide direct information through the merchant servers 1480 .
- the information provided by the merchant may be dynamic, real-time information, or static, batch-processed information provided at certain time intervals.
- application of the methods described above with respect to FIGS. 1-13 may provide a list of products sold.
- Block 1620 depicts the tracking of sales and/or reviews of the products in the database created by implementation of method step 1610 .
- data server 1490 may provide information regarding user product searches. This may be in the form of directed searches for products, or for reviews or information about certain products.
- data server 1490 may provide information regarding actual purchase of products by users over the Internet or at certain physical locations.
- data server 1490 may provide information regarding the relative frequency or use of certain product names in certain locations such as, for example, rating sites, review sites, discussion forums, or other locations.
- merchant server 1480 may provide sales information. For example, the merchant may provide the number of units sold and the dollar amounts of the unit sold either overall, or at each location, or both.
- this information may be obtained from a merchant server 1480 , which may include a plurality of merchant servers, a data server 1490 , which may include a plurality of data servers, or both. Additionally, sales information can be gathered or estimated using the systems and methods discussed previously with reference to FIGS. 1-13 .
- the most popular products are identified.
- the most popular products can be identified based on the compiled sales, review, or frequency of use data as compiled by the method step depicted in block 1620 .
- the most popular products can be identified by taking into account the number of clicks or hovers on a product description or a product image or a hyperlink leading to further information or sales sites for a certain product or any other tool that allows the logging of consumer interest in a particular product.
- hover means the passive selection of a field in an internet display or web page, by way of, for example, the use of a computer peripheral device such as a mouse or a keyboard.
- a hover may include, for example, a mouse pointer that lingers over a hyperlink for an extended period of time.
- an algorithm can be used to take into account only one input, such as number of units sold, and assign a popularity ranking based only on the number of units sold.
- the most popular item would be the item with the highest number of units sold
- the second most popular item would be the item with the second highest number of units sold
- the algorithm may weight the number of units sold as a percentage of the ranking, and the price per unit sold as another percentage of the ranking.
- the combination of the two factors would result in a potentially different popularity ranking than would the application of just one factor, such as the number of units sold, alone.
- each of the various factors collected could be applied alone or in conjunction with the other factors to derive a popularity ranking.
- the algorithm may be modified or adapted to achieve certain merchant goals in certain embodiments, such as focusing on certain types of products or certain product categories, or to maximize the number of units sold, or to maximize the sale of the most profitable items, or otherwise.
- the products may be sorted into categories of products so that the most popular products in each category can be identified. Exemplary product categories include electronics, office, outdoor, home improvement, food, or any other suitable category of related products.
- Block 1640 depicts the application to each product in the database 1460 a popularity ranking based on the method described previously with respect to step 1630 .
- the application may be accomplished by assigning to each product in the database a number between 0 and 1 reflecting the relative popularity of the product.
- the application may be accomplished by assigning an integer, starting at 1 for the most popular product, 2 for the second most popular product, and so on. Any suitable ranking method may be employed.
- step 1540 ( FIG. 15 ).
- FIG. 17 is a block flow diagram depicting a method 1540 for identifying in-stock popular items at a merchant location, in accordance with certain exemplary embodiments. Exemplary steps described with reference to FIG. 17 may be performed by the cross-reference engine 1440 .
- Block 1710 depicts the identification by the cross-reference engine 1440 of the most popular items in the product popularity database. This step can be performed by reference to the popularity assignment described previously with respect to block 1640 , wherein each product may be assigned a number or other type of identifier showing the relative popularity of the item according to the applied method.
- the step depicted by block 1710 illustrates an embodiment where the most highly ranked item in the product popularity database 1460 is taken as the starting point for the iterative process. In other embodiments, a different starting point, such as the most popular product in a particular product category, may be chosen.
- Block 1720 depicts the search of the merchant's inventory to determine whether the identified product is in stock. This step is accomplished by checking whether the product identified in the product popularity database 1460 is identified as available, in-stock, out-of stock, of limited availability, or otherwise in the product availability database 1470 .
- Block 1725 depicts the determination whether a product is in-stock. If the product is in-stock (including limited availability), the next step, as depicted in step 1730 , is to flag or otherwise note the identified product as being an in-stock, popular product. If the product is not in-stock, according to the identifier assigned to the product in the product availability database, the iterative process branches to step 1740 , described hereinafter.
- the method determines whether to identify additional products, as depicted in block 1735 . If yes, the method branches to step 1740 , described hereinafter. At least one but possibly more than one product may be identified. The method provides for means to customize the number of products identified; the iterative process described allows for the display of any desired number of products that are both popular and in-stock at the merchant location.
- step depicted at block 1725 If a product is noted as out of-stock, as determined in the step depicted at block 1725 , or if the merchant or other party desires to display an incremental item, as determined in the step depicted at block 1735 , the method proceeds according to the step depicted by block 1740 .
- block 1740 the next-most popular item in the product popularity database 1460 is identified, and steps 1720 - 1735 are iteratively reapplied until all products have been flagged as out-of-stock or until the answer to the step depicted at block 1735 is no.
- step 1540 proceeds to step 1550 ( FIG. 15 ).
- FIG. 18 is a block flow diagram depicting a method 1550 for populating a place page with in-stock, popular items, in accordance with certain exemplary embodiments. Exemplary steps described with reference to FIG. 18 may be performed by the cross-reference engine 1440 .
- Block 1810 depicts the identification of the most popular items that are in stock at a particular merchant location. This step can be accomplished by way of the steps outlined with respect to FIG. 17 , as here applied to a specific merchant location, for example, the merchant store at 1234 10 th Street.
- Block 1820 depicts the creation of a field in the place page 1410 for a particular location.
- the merchant store at, for example, 1234 10 th Street may have a place page 1410 , such as a web page, that is accessed by way of the Internet.
- Block 1820 depicts the creation of a field in that place page 1410 that can accommodate certain images, hyperlinks, text descriptions, or other means of conveying information to a user.
- Block 1830 depicts the population of the field described previously with respect to block 1820 with the identified most popular items that are in stock at the location.
- the five most popular items that are in-stock at the merchant location may be displayed on the merchant's place page 1410 .
- the place page itself is described in more detail below with respect to FIG. 19 .
- FIG. 19 depicts a particular, exemplary embodiment of a place page 1900 for displaying certain information associated with a particular merchant location, in accordance with certain exemplary embodiments.
- place page 1900 may comprise a merchant name and address 1910 , hours and contact information 1920 associated with the particular merchant location 1910 , customer reviews 1930 associated with the particular merchant location 1910 , a graphical depiction of a map and/or directions 1940 to the particular merchant location 1910 , and a list 1950 of the popular products that are available at the particular merchant location.
- Other information could be included in the place page, such as expert or editorial reviews, particular comments from other users including, for example, third party users flagged or identified or followed by the first party user viewing the place page, and so on.
- Field 1950 may contain graphical representations, such as pictures, of the popular items, as shown. Field 1950 may also contain textual or audio recordings of the popular products, or other means of conveying information to a user. Field 1950 may contain one or more popular items. In certain embodiments, the field 1950 may convey additional information associated with the identified popular products, such as the price, links to consumer or expert reviews, and notes on the availability, such as in-stock, limited availability, only “5” remaining, and so on. In certain other embodiments, the field 1950 or another location on the place page 1900 may contain a link or a search box that allows a user to search the merchant's inventory available at the particular merchant location. This item may involve searching the specific merchant location associated with the place page, or, in another embodiment, this item may allow the user to search for inventory available at similar or nearby locations, allowing the user to identify stores that have the desired item in-stock.
- a link or a search box that allows a user to search the merchant's inventory available at the particular merchant location. This item may involve searching the specific merchant location associated with
- the invention can be used with computer hardware and software that performs the methods and processing functions described above.
- the systems, methods, and procedures described herein can be embodied in a programmable computer, computer executable software, or digital circuitry.
- the software can be stored on computer readable media.
- computer readable media can include a floppy disk, RAM, ROM, hard disk, removable media, flash memory, memory stick, optical media, magneto-optical media, CD-ROM, etc.
- Digital circuitry can include integrated circuits, gate arrays, building block logic, field programmable gate arrays (FPGA), etc.
- the systems and methods described herein can be implemented by one or more software modules operating in at least one computer system that comprises instructions stored in a machine-readable medium and a processor that executes the instructions.
Abstract
Description
r e =N e /T,
where Ne is the number of sales events during time period T. According to certain exemplary embodiments, re may be estimated from an average time (<t>) between sales events. For example, re may be expressed by the equation
r e ≈r e<t>=1/<t>.
After observing i sales events, <t> may be estimated recursively as
<t> i=(1−k)*<t> i-1 +k*t i,
where ti is the time between sales events i and i−1, and k is some constant where (0<k<1). Accordingly, the velocity of sales events (re) may be represented by an exponential moving average such that the more recent events may have more weight than events in the past (i.e., the weight of past events may be decaying exponentially).
TABLE 1 | ||
Time of Sale | Number | Time Between |
Event (minutes) | of Units Sold | Sales Events (ti) |
0 | u1 = 1 | — |
1 | u2 = 1 | t1 = 1 |
2 | u3 = 4 | t2 = 1 |
3 | u4 = 2 | t3 = 1 |
5 | u5 = 3 | t4 = 2 |
12 | u6 = 5 | t5 = 7 |
16 | u7 = 3 | t6 = 4 |
17 | u8 = 2 | t7 = 1 |
25 | u9 = 4 | t8 = 8 |
<t> 8≈2.4
Since re=1/<t>, the example data results in:
r e=1/<t>= 1/2.4=0.42
TABLE 2 | |||
k | re | ||
0.02 | 0.76 | ||
0.05 | 0.57 | ||
0.10 | 0.42 | ||
0.20 | 0.29 | ||
0.30 | 0.24 | ||
0.50 | 0.19 | ||
-
- if zero sales events occur for a duration t0 such that (exp(−r*t0)>p1), the estimated product availability is listed as “in stock”;
- if zero sales events occur for a duration t1 such that (p1>exp(−r*t1)>p2), the estimated product availability is listed as “unknown”; and
- if zero sales events occur for a duration t2 such that (exp(−r*t2)<p2), the estimated product availability is listed as “out of stock.”
r e ≈r e<t>=1/<t>.
Thus, each
T unknown =T last
T out-of-stock =T last
T unknown =T last
T out-of-stock =T last
r s =r e *<u>,
where <u> is the average number of units in a sales event. Here, <u> may be calculated in the same manner as <t>:
<u> i=(1−k)*<u> i-1 +k*u i,
where ui is the number of units sold during sales event i, and k is some constant where (0<k<1). Accordingly, the velocity of sales (rs) may be represented by an exponential moving average such that the more recent sales may have more weight than sales in the past (i.e., the weight of past sales may be decaying exponentially).
<u> 9≈2.2 units/sale
Since rs=re*<u>, the example data results in the following estimated velocity of sales:
r s=0.42 events/minute*2.2 units=0.924 units/minute.
Thus, assuming k is 0.1, the estimated rate of sales rs for the example data is 0.924 units/minute. It should be noted that a smaller k may give more weight to past events, whereas a bigger k may give more weight to the more recent events. Thus, similar to the choice of k for re, k for rs may be in the range 0.03≦k≦0.1.
T feed =T upload−(ΔT*δ),
where Tfeed may be the time when the inventory feed was generated by the store/merchant, Tupload may be the time when the feed became available to
T feed =T upload −ΔT.
Q upload =Q feed−ΣT
where U is the quantity of items in a given sale. According to certain exemplary embodiments,
CalculateQupload (product_id, q_feed, t_feed, sales_events) { | ||
// product_id: product for which q_upload is to be calculated | ||
// q_feed: inventory at the time the snapshot was taken | ||
// t_feed: time when the snapshot was taken | ||
// sales_events: array of all sales data for a given store | ||
q_upload = q_feed; | ||
t_upload = current_time( ); | ||
foreach (event in sales_events) { | ||
if ((event.product_id == product_id) && | ||
(event.timestamp < t_upload) && | ||
(event.timestamp > t_feed)) { | ||
q_upload = q_upload - event.quantity; | ||
} | ||
// certain embodiments may remove data from the | ||
// sales_events array in order to reduce the | ||
// required amount of storage needed, for example, by | ||
// deleting any data that is older that t_feed: | ||
if ((event.product_id == product_id) && | ||
(event.timestamp < t_feed)) { | ||
delete (event); | ||
} | ||
} | ||
return q_upload; | ||
} | ||
Q upload =Q feed−(r s *ΔT).
This estimation may rely on the fact that the current inventory, Qupload, may be close in number to the inventory at the time the inventory snapshot was taken less the rate of sale times ΔT; i.e., ΔT may be the difference in time between when the snapshot was taken and when the data was uploaded into
Where (x=rsΔT), the above equation may be simplified as:
Thus,
Claims (30)
<u> i=(1−j)*<u> i-1 +j*u i,
<t> i=(1−k)*<t> i-1 +k*t i,
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/846,882 US8738461B1 (en) | 2011-03-22 | 2013-03-18 | Display of popular, in-stock products of a merchant |
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/069,364 US8401911B1 (en) | 2011-03-22 | 2011-03-22 | Display of popular, in-stock products of a merchant |
US13/846,882 US8738461B1 (en) | 2011-03-22 | 2013-03-18 | Display of popular, in-stock products of a merchant |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/069,364 Continuation US8401911B1 (en) | 2011-03-22 | 2011-03-22 | Display of popular, in-stock products of a merchant |
Publications (1)
Publication Number | Publication Date |
---|---|
US8738461B1 true US8738461B1 (en) | 2014-05-27 |
Family
ID=47844811
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/069,364 Expired - Fee Related US8401911B1 (en) | 2011-03-22 | 2011-03-22 | Display of popular, in-stock products of a merchant |
US13/846,882 Active US8738461B1 (en) | 2011-03-22 | 2013-03-18 | Display of popular, in-stock products of a merchant |
Family Applications Before (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/069,364 Expired - Fee Related US8401911B1 (en) | 2011-03-22 | 2011-03-22 | Display of popular, in-stock products of a merchant |
Country Status (1)
Country | Link |
---|---|
US (2) | US8401911B1 (en) |
Cited By (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
WO2016100862A1 (en) * | 2014-12-19 | 2016-06-23 | Curbside, Inc. | Estimation of third party inventory |
US10546271B2 (en) | 2016-05-12 | 2020-01-28 | Walmart Apollo, Llc | Systems and methods for estimating availability of additional sales floor space for a product being binned |
US20220335505A1 (en) * | 2021-04-14 | 2022-10-20 | Maplebear, Inc.(dba Instacart) | Selecting a specific warehouse location for displaying an inventory of available items to a user of an online concierge system |
US11790426B2 (en) | 2016-12-22 | 2023-10-17 | Google Llc | Graphical user interface to display inventory data at merchant locations |
Families Citing this family (16)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8401911B1 (en) | 2011-03-22 | 2013-03-19 | Google Inc. | Display of popular, in-stock products of a merchant |
US8977561B2 (en) | 2011-12-06 | 2015-03-10 | Toshiba Global Commerce Solutions Holding Corporation | Caching item information in a cloud-based point of sale system |
US20140249885A1 (en) * | 2013-03-04 | 2014-09-04 | Catalina Marketing Corporation | System and method for customized search results based on a shopping history of a user, retailer identifications, and items being promoted by retailers |
US9916560B2 (en) * | 2013-06-28 | 2018-03-13 | Wal-Mart Stores, Inc. | Inventory tracking |
US9773223B2 (en) * | 2013-06-28 | 2017-09-26 | Wal-Mart Stores, Inc. | Inventory cache |
WO2015094262A1 (en) * | 2013-12-19 | 2015-06-25 | Hewlett-Packard Development Company, L.P. | Personalized shopping and routing |
EP3097529A2 (en) | 2014-01-23 | 2016-11-30 | Pomo Search Ltd | System and method for redeeming a discount |
US10423998B2 (en) | 2014-01-31 | 2019-09-24 | Paypal, Inc. | Product information system |
US10825069B2 (en) | 2014-11-14 | 2020-11-03 | The Joan and Irwin Jacobs Technion-Cornell Institute | System and method for intuitive content browsing |
WO2016077670A1 (en) | 2014-11-14 | 2016-05-19 | The Joan and Irwin Jacobs Technion-Cornell Innovation Institute | Techniques for embedding virtual points of sale in electronic media content |
US9684883B2 (en) * | 2014-12-10 | 2017-06-20 | Oracle International Corporation | Inventory management system with late transaction processing |
US10255619B2 (en) * | 2016-10-03 | 2019-04-09 | International Business Machines Corporation | Dynamic geo-fencing based on a popularity of a product |
US20190188772A1 (en) * | 2017-12-18 | 2019-06-20 | Mastercard International Incorporated | Method and system for real-time navigational guidance and purchase recommendations |
US11138649B2 (en) | 2018-04-05 | 2021-10-05 | Ebay Inc. | Server, method, and computer-readable storage medium for identifying computing devices with geographic proximity to desired item attributes |
US11907963B2 (en) * | 2019-10-29 | 2024-02-20 | International Business Machines Corporation | On-device privacy-preservation and personalization |
CN111415328B (en) * | 2020-02-20 | 2023-07-11 | 北京三快在线科技有限公司 | Method and device for determining article analysis data and electronic equipment |
Citations (17)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20020147631A1 (en) | 2001-04-06 | 2002-10-10 | Smith Stephen A. | Method of and apparatus for forecasting item availability |
US20030074349A1 (en) | 2000-12-22 | 2003-04-17 | Aman Gupta | Method and apparatus for displaying real-time status of product availability, orders, and sales revenue |
US20030111531A1 (en) | 2001-12-13 | 2003-06-19 | Peter Williams | Method and system for interactively providing product related information on demand and providing personalized transactional benefits at a point of purchase |
US20060190348A1 (en) | 2005-02-24 | 2006-08-24 | Amir Ofer | System and method for computerized ordering |
US20070150369A1 (en) | 2005-12-28 | 2007-06-28 | Zivin Michael A | Method and system for determining the optimal travel route by which customers can purchase local goods at the lowest total cost |
US20080015953A1 (en) | 2001-08-16 | 2008-01-17 | Trans World New York Llc | User-personalized media sampling, recommendation and purchasing system using real-time inventory database |
US20080249813A1 (en) | 2000-07-26 | 2008-10-09 | Idine Rewards Network Inc. | System and Method for Providing Consumer Rewards |
US7720723B2 (en) | 1998-09-18 | 2010-05-18 | Amazon Technologies, Inc. | User interface and methods for recommending items to users |
US8001003B1 (en) | 2007-09-28 | 2011-08-16 | Amazon Technologies, Inc. | Methods and systems for searching for and identifying data repository deficits |
US20110238665A1 (en) | 2010-03-26 | 2011-09-29 | Ebay Inc. | Category management and analysis |
US8044809B2 (en) | 2000-08-11 | 2011-10-25 | Telanon, Inc. | Automated consumer to business electronic marketplace system |
US20120016757A1 (en) | 2010-07-15 | 2012-01-19 | Google Inc. | Local shopping and inventory |
US20120016780A1 (en) | 2010-07-15 | 2012-01-19 | Google Inc. | Local shopping and inventory |
US8121905B2 (en) | 2007-07-25 | 2012-02-21 | Ebay Inc. | Merchandising items of topical interest |
US8244564B2 (en) | 2009-03-31 | 2012-08-14 | Richrelevance, Inc. | Multi-strategy generation of product recommendations |
US20120284145A1 (en) | 2011-05-04 | 2012-11-08 | Etsy, Inc. | Item discovery tools and methods for shopping in an electronic commerce environment |
US8401911B1 (en) | 2011-03-22 | 2013-03-19 | Google Inc. | Display of popular, in-stock products of a merchant |
-
2011
- 2011-03-22 US US13/069,364 patent/US8401911B1/en not_active Expired - Fee Related
-
2013
- 2013-03-18 US US13/846,882 patent/US8738461B1/en active Active
Patent Citations (24)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7720723B2 (en) | 1998-09-18 | 2010-05-18 | Amazon Technologies, Inc. | User interface and methods for recommending items to users |
US20080249813A1 (en) | 2000-07-26 | 2008-10-09 | Idine Rewards Network Inc. | System and Method for Providing Consumer Rewards |
US20110225033A1 (en) | 2000-07-26 | 2011-09-15 | Rewards Network Inc. | System And Method For Providing Consumer Rewards |
US20120036038A1 (en) | 2000-08-11 | 2012-02-09 | Telanon, Inc. | Automated consumer to business electronic marketplace system |
US8044809B2 (en) | 2000-08-11 | 2011-10-25 | Telanon, Inc. | Automated consumer to business electronic marketplace system |
US20030074349A1 (en) | 2000-12-22 | 2003-04-17 | Aman Gupta | Method and apparatus for displaying real-time status of product availability, orders, and sales revenue |
US7027999B2 (en) | 2001-04-06 | 2006-04-11 | Fms, Inc. | Method of and apparatus for forecasting item availability |
US20020147631A1 (en) | 2001-04-06 | 2002-10-10 | Smith Stephen A. | Method of and apparatus for forecasting item availability |
US20060224439A1 (en) | 2001-04-06 | 2006-10-05 | Fms, Inc. | Method of and apparatus for forecasting item availability |
US20080015953A1 (en) | 2001-08-16 | 2008-01-17 | Trans World New York Llc | User-personalized media sampling, recommendation and purchasing system using real-time inventory database |
US8195526B2 (en) | 2001-12-13 | 2012-06-05 | Williams Patent Licensing Plc, Limited Liability Company | Providing a personalized transactional benefit |
US20030111531A1 (en) | 2001-12-13 | 2003-06-19 | Peter Williams | Method and system for interactively providing product related information on demand and providing personalized transactional benefits at a point of purchase |
US20060190348A1 (en) | 2005-02-24 | 2006-08-24 | Amir Ofer | System and method for computerized ordering |
US20070150369A1 (en) | 2005-12-28 | 2007-06-28 | Zivin Michael A | Method and system for determining the optimal travel route by which customers can purchase local goods at the lowest total cost |
US8121905B2 (en) | 2007-07-25 | 2012-02-21 | Ebay Inc. | Merchandising items of topical interest |
US8001003B1 (en) | 2007-09-28 | 2011-08-16 | Amazon Technologies, Inc. | Methods and systems for searching for and identifying data repository deficits |
US8244564B2 (en) | 2009-03-31 | 2012-08-14 | Richrelevance, Inc. | Multi-strategy generation of product recommendations |
US20110238665A1 (en) | 2010-03-26 | 2011-09-29 | Ebay Inc. | Category management and analysis |
US20120016757A1 (en) | 2010-07-15 | 2012-01-19 | Google Inc. | Local shopping and inventory |
US20120016780A1 (en) | 2010-07-15 | 2012-01-19 | Google Inc. | Local shopping and inventory |
US8335722B2 (en) | 2010-07-15 | 2012-12-18 | Google Inc. | Local shopping and inventory |
US8392261B2 (en) | 2010-07-15 | 2013-03-05 | Google Inc. | Local shopping and inventory |
US8401911B1 (en) | 2011-03-22 | 2013-03-19 | Google Inc. | Display of popular, in-stock products of a merchant |
US20120284145A1 (en) | 2011-05-04 | 2012-11-08 | Etsy, Inc. | Item discovery tools and methods for shopping in an electronic commerce environment |
Non-Patent Citations (4)
Title |
---|
Mahone, K., Office Action issued in copending U.S. Appl. No. 13/206,323, filed Aug. 9, 2011, pp. 1-11, Oct. 7, 2013. |
Misiaszek, M., Final Office Action issued in co-pending U.S. Appl. No. 13/244,750, filed Sep. 26, 2011, pp. 1-11, Oct. 4, 2012. |
Misiaszek, M., Office Action issued in co-pending U.S. Appl. No. 13/244,750, filed Sep. 26, 2011, pp. 1-8, Mar. 9, 2012. |
Shaawat, M. A., Office Action issued in co-pending U.S. Appl. No. 13/069,364, filed Mar. 22, 2011, pp. 1-11, Feb. 28, 2012. |
Cited By (7)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
WO2016100862A1 (en) * | 2014-12-19 | 2016-06-23 | Curbside, Inc. | Estimation of third party inventory |
US10062051B2 (en) | 2014-12-19 | 2018-08-28 | Curbside, Inc. | Estimation of third party inventory |
US10546271B2 (en) | 2016-05-12 | 2020-01-28 | Walmart Apollo, Llc | Systems and methods for estimating availability of additional sales floor space for a product being binned |
US11790426B2 (en) | 2016-12-22 | 2023-10-17 | Google Llc | Graphical user interface to display inventory data at merchant locations |
US20220335505A1 (en) * | 2021-04-14 | 2022-10-20 | Maplebear, Inc.(dba Instacart) | Selecting a specific warehouse location for displaying an inventory of available items to a user of an online concierge system |
US11734749B2 (en) * | 2021-04-14 | 2023-08-22 | Maplebear Inc. | Online shopping system and method for selecting a warehouse for inventory based on predicted availability and predicted replacement machine learning models |
US20230351480A1 (en) * | 2021-04-14 | 2023-11-02 | Maplebear Inc. | Online shopping system and method for selecting a warehouse for inventory based on predicted availability and predicted replacement machine learning models |
Also Published As
Publication number | Publication date |
---|---|
US8401911B1 (en) | 2013-03-19 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US8738461B1 (en) | Display of popular, in-stock products of a merchant | |
US8335722B2 (en) | Local shopping and inventory | |
US8392261B2 (en) | Local shopping and inventory | |
US11501251B2 (en) | System and method for determination and management of root cause for inventory problems | |
US20180268367A1 (en) | System and method for management of perpetual inventory values based upon customer product purchases | |
US11037090B2 (en) | Methods, systems and program products for aggregating and presenting service data from multiple sources over a network | |
US20210256540A1 (en) | Alcohol information management system and management method | |
US20230029172A1 (en) | Systems, methods, and interfaces for transaction aggregation, management, and visualization | |
US11037224B2 (en) | System and method for providing wine to customer, and server device and program used in this system | |
CN108629467B (en) | Sample information processing method and system | |
CN113240526B (en) | Service recommendation method applied to cloud computing and block chain finance and cloud computing system | |
WO2021104513A1 (en) | Object display method and apparatus, electronic device and storage medium | |
US10217144B1 (en) | Methods, systems and program products for aggregating and presenting service data from multiple sources over a network | |
CN116933903A (en) | Intelligent processing method and system for online hotel reservation | |
CN115423574B (en) | Order-based data processing method and related device | |
CN108629656B (en) | Intelligent shop pushing system and method based on mobile terminal positioning | |
JP5952617B2 (en) | Payment processing system, payment processing apparatus, payment processing method, and program | |
AU2013206485A1 (en) | Local shopping and inventory | |
US20240160962A1 (en) | Modular System for Automated Substitution of Forecasting Data | |
US20230325801A1 (en) | Data processing apparatus | |
US20220343348A1 (en) | System and method for interactive transaction information aggregation | |
CN116127209A (en) | Data query method and device | |
CN115760316A (en) | Price quotation management method and system based on CRM (customer relationship management), electronic equipment and storage medium | |
CN114066555A (en) | Implementation method and system for online purchasing of non-standard industrial equipment spare parts | |
JP2021189989A (en) | Shipping management system, shipping management method, management server device |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:CHU, CHRISTOPHE FRANCOIS;LEE, PAUL;MOISA, DAN;SIGNING DATES FROM 20110617 TO 20110621;REEL/FRAME:031221/0383 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044277/0001Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551)Year of fee payment: 4 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 8TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1552); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 8 |
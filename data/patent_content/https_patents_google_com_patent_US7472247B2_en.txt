US7472247B2 - Method and system for centralized memory management in wireless terminal devices - Google Patents
Method and system for centralized memory management in wireless terminal devices Download PDFInfo
- Publication number
- US7472247B2 US7472247B2 US11/216,140 US21614005A US7472247B2 US 7472247 B2 US7472247 B2 US 7472247B2 US 21614005 A US21614005 A US 21614005A US 7472247 B2 US7472247 B2 US 7472247B2
- Authority
- US
- United States
- Prior art keywords
- memory
- memory management
- terminal device
- operational state
- setting
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Fee Related, expires
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F12/00—Accessing, addressing or allocating within memory systems or architectures
- G06F12/02—Addressing or allocation; Relocation
- G06F12/0223—User address space allocation, e.g. contiguous or non contiguous base addressing
- G06F12/023—Free address space management
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F8/00—Arrangements for software engineering
- G06F8/60—Software deployment
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04W—WIRELESS COMMUNICATION NETWORKS
- H04W88/00—Devices specially adapted for wireless communication networks, e.g. terminals, base stations or access point devices
- H04W88/02—Terminal devices
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04W—WIRELESS COMMUNICATION NETWORKS
- H04W28/00—Network traffic management; Network resource management
- H04W28/02—Traffic management, e.g. flow control or congestion control
- H04W28/10—Flow control between communication endpoints
- H04W28/14—Flow control between communication endpoints using intermediate storage
Definitions
- the present invention relates to wireless communications devices, and in particular to a method and system for centralized memory management in wireless terminal devices.
- wireless terminal devices such as mobile telephones, personal computers and PDAs with wireless communication capabilities, self-service kiosks and two-way pagers
- Software applications which run on these devices increase their utility.
- a mobile phone may include an application which retrieves the weather for a range of cities
- a PDA may include an application that allows a user to shop for groceries.
- wireless terminal devices commonly have limited memory resources, with the result that ongoing handling of low-memory conditions is required.
- Wireless applications developers try to address these issues various known means, such as by utilizing software design techniques that require less memory, optimizing internal data structures, limiting the amount of data that users can exploit using the application, and/or by removing (deleting) redundant data or code. Since applications are designed to operate independently of one another, the implementation of these approaches is normally unique to each application, which means that every application installed on a terminal device will have its own memory management code. This “duplication” of memory management software consumes additional memory, and so further reduces available memory resources. A further limitation of this arrangement is that it requires the software developer(s) to have experience in memory optimization techniques and be explicitly aware of the memory restrictions of every device type. This creates a barrier to the development of new wireless applications.
- an object of the present invention is to provide methods and systems for centralized memory management in wireless terminal devices.
- an aspect of the present invention provides a method of controlling centralized memory management of a terminal device of a wireless network.
- a memory utilization on the terminal device is monitored, and used to set an operational state of a memory management kernel.
- Execution of one or more memory management scripts is controlled based on the operational state of the memory management kernel.
- a further aspect of the present invention provides a terminal device of a wireless network, the terminal device comprising a computer readable medium storing software code implementing a memory management kernel for executing the steps of: monitoring a memory utilization on the terminal device; setting an operational state based on the monitored memory utilization; and controlling execution of one or more memory management scripts based on the operational state.
- FIG. 1 is a block diagram schematically illustrating a network system
- FIG. 2 is a block diagram schematically illustrating components and operation of a representative centralized memory management system in accordance with an embodiment of the present invention
- FIG. 3 is a block diagram schematically illustrating elements and operation of an application development environment in accordance with a representative embodiment of the present invention
- FIG. 4 is a representative user interface screen generated by a memory management script in accordance with an aspect of the present invention.
- FIG. 5 is a state diagram illustrating operational states of the centralized memory management system of FIG. 2 ;
- the present invention provides methods and systems for centralized memory management in wireless terminal devices. Embodiments of the invention are described below, by way of example only, with reference to FIGS. 1-5 .
- a network in which the present invention may be utilised generally comprises an Application Gateway (AG) 2 coupled between a wireless network 4 and a data network 6 , such as for example, the Internet; and a registry 8 comprising a profiles registry 10 and a memory management registry 12 .
- the profiles registry 10 preferably contains, for each subscriber's terminal device 14 , a respective profile which contains information identifying each application installed on the terminal device 14 .
- the memory management registry 12 preferably contains, for each one of a plurality of wireless applications, one or more memory management scripts that may be used to reduce the memory utilized by the respective application.
- These memory management scripts will normally be provided by the application developer, and may either be stored in the memory management registry memory management 12 itself, or on a remote “back-end” server 16 maintained by the application developer. In the later case, the registry 12 will contain a link to each script, rather than the script code itself.
- the Registry 8 can be co-resident with the AG 2 or may be located remotely from the AG 2 and accessed by the AG 2 via the data network 8 .
- the AG 2 generally operates to mediate message flows between terminal devices 14 connected to the wireless network 4 and data services accessible through the data network 6 in the manner described in Applicant's co-pending United States Patent Publications Nos. 2004/0215700 and 2004/0220998, the contents of both of which are incorporated herein by reference.
- the terminal devices 14 can be any of a wide variety of software-controlled wireless devices including, but not limited to mobile telephones, personal computers and PDAs with wireless communication capabilities, self service kiosks and two-way pagers.
- such devices generally comprise a microprocessor 18 connected to an RF section 20 for wireless communications, a memory 22 (at least a portion of which will normally be non-volatile), and user interface (UI) 24 including a display 26 and one or more user input/output devices (e.g. keyboard, thumb-wheel, stylus, microphone, speaker etc.) 28 .
- the memory 22 is used, inter alia, to store a Terminal Device Registry 30 which stores information identifying each application installed on the terminal device 14 .
- the microprocessor 18 operates under software control to provide the functionality of the terminal device 14 .
- the software is preferably designed on a layered model, in which one or more wireless applications 32 control the user's experience of the terminal device 14 , and a runtime environment (RE) 34 translates between the application software 32 and the native machine-language 36 of the terminal device 14 to control the terminal device hardware, and communicate with data services.
- RE runtime environment
- the RE 34 also includes a memory management kernel 38 , which enables the RE 32 to monitor memory utilization and interact with the AG 2 to implement centralized memory management, as will be described in greater detail below.
- each application 32 will normally contain application logic (e.g. XML or Java program code) and application data 40 .
- Each application may, or may not, include “embedded” memory management functionality 42 .
- embedded memory management functionality 42 In wireless network systems utilizing centralized memory management in accordance with the present invention, it is expected that application developers will increasing elect to abbreviate any such embedded memory management functionality 42 , or omit it entirely in favour of the centralized memory management system, as will be described in greater detail below.
- operation of the AG 2 enables a software application 32 executing in a terminal device 14 to communicate with data services (not shown) offered through the data network 6 .
- This operation may, for example, including accessing and downloading files from back-end data sources (not shown) connected to the data network 6 .
- an application developer can also distribute and support their software through the data network 6 .
- downloadable application software, installation scripts and memory management scripts can be stored in a registry 44 of a back-end server 16 which is maintained by the application developer and which can be accessed by users (either directly or indirectly) through the data network 6 .
- this mechanism for “download-on-demand” distribution, because it reduces resource requirements of the AG 2 , and facilitates maintenance and updating of the scripts by the application developer.
- the application developer can formulate and send a registration message to the AG 2 .
- the registration message may include, for example, a software identifier (Software-ID) which uniquely identifies the involved wireless application, and a link (e.g.
- the AG 2 can then save the script URL(s) in the memory management registry 12 , for use as required by terminal devices 14 hosted by the AG 2 , as will be described in greater detail below.
- the application developer uses an application development toolkit (ADT) 46 of an application development environment (ADE) 48 to code, test, and debug application software, in a manner generally known in the art.
- ADT application development toolkit
- ADE application development environment
- This same ADE 48 can also be used for developing memory management logic for the application.
- memory management functionality is conventionally embedded within the application logic, and operates to reduce the amount of memory resources used by the application.
- Various methods that may be implemented including, without limitation: categorization or prioritization of application data; deletion of temporary files; deletion of low priority and/or non-essential application data; deletion of “download-on-demand” resources such as images, sounds, animation) which can be retrieved from a server over the air when required by an application; and deletion of non-essential application logic such as automatic application update scripts.
- the ADE 48 preferably also includes a memory management script editor 50 for assisting the application developer to generate one or more memory management scripts as part of the application development process.
- Each of the generated memory management scripts can be stored in the AD registry 44 , which enables the script(s) to be downloaded to a terminal device 14 separately from the application itself.
- the memory management script editor 50 analyses the application source code to identify data structures instantiated by the application during runtime. The application developer can then select those data structures which can be safely de-allocated to free up device resources. In addition to the items noted above, top-most data structures that are not contained in any other data structures are typically available for de-allocation, along with any contained data inside those data structure instances. For example, consider a data component of type “Horse”, which contains a data component of type “Race”. If the user deletes all instances of “Horse” data (the top-most data structure), the memory management script can automatically delete all instances of “Race” data contained within instances of “Horse”, since it can no longer be referenced. Based on knowledge of data structures which can be safely de-allocated, the memory management script editor 50 can automatically generate a memory management script which:
- the application developer can use the memory management script editor 50 to prepare a single memory management script, which includes all of the memory management functionality associated with a respective application.
- two or more scripts can be prepared, each script providing respective different memory management functions.
- the application developer could prepare one script for categorizing application data as low or high priority; a second script for deleting temporary files; a third script for deleting on-demand resources; and a fourth for deleting low priority application data and for identifying and removing non-essential application logic.
- some memory management functionality e.g. prioritization of application data, and deletion of temporary files
- the memory management scripts are designed by the application developer taking into account the particulars of the respective application, and are designed to execute within the context of the application.
- the application developer can also tag each script with a “use” rating, to control how the scripts are used. For example, a script that will have no discernable effect on the user's experience of the application, and which can therefore be used during normal operations (e.g. a script to delete temporary files) can be tagged with a “Normal” use rating. A script which will likely cause a minor inconvenience to the user, and which would therefore be used in a limited memory scenario (e.g. a script to delete download-on-demand resources) can be tagged with a “Limited” use rating. A script which will likely cause a significant impairment of use of the application, and which would therefore be used in a critical memory scenario (e.g. a script to delete low priority application data) can be tagged with a “Critical” use rating.
- the RE 34 includes a memory management kernel 38 ( FIG. 2 ), which enables the RE 34 to interact with the native layer 36 to monitor memory utilization and communicate with the AG 2 to implement centralized memory management.
- FIG. 5 is a state diagram illustrating representative operational states of the memory management kernel 38 , and representative memory management functionality that can be executed within each state.
- the memory management kernel 38 monitors memory utilization, for example by comparing the amount of free memory (FM) that is available at any given time to a predetermined first threshold (T 1 ).
- the memory management kernel 38 of the RE 34 does not take any action to control memory utilization or free up memory. Instead, memory management functionality 42 (if any) embedded within each application 32 is allowed to operate, for example to categorize/prioritize application data and delete temporary files.
- the RE memory management kernel 38 transitions to a “Memory Limited” state 56 .
- memory management scripts are used to reduce the amount of memory used by each installed application 32 , but without affecting application data. For example, download-on-demand features, which can be restored as needed during run-time of an application, can be deleted. As mentioned above, this functionality must take into account the particulars of each application, and thus will be controlled by scripts provided by the application developer. Accordingly, for each installed application 32 , the RE 34 communicates with the AG 2 to access and download the applicable memory management scripts, either from the AG registry 8 , or from a back-end server 16 maintained by the application developer, as described above.
- the RE 34 can use the TD registry 30 ( FIG. 1 ) to obtain the respective software identifier (software-ID) information for each installed application.
- This information is inserted into a memory management message having a “Memory Limited” indication, which is sent to the AG 2 .
- the AG 2 searches its registry 8 to identify memory management scripts associated with each application (as identified by the software-ID information) and uses the “use rating” associated with each script to select those scripts that are appropriate to the “Memory Limited” state of the RE memory management kernel 38 .
- the selected memory management scripts are then downloaded to the terminal device 14 and executed by the RE 34 . Once each script has been used, it can be deleted so as to avoid unnecessarily taking up memory space.
- the RE memory management kernel 38 returns to the “Normal” state 54 , and memory management functionality continues as described above for that state.
- the RE memory management kernel 38 transitions to a “Memory Critical” state 58 .
- aggressive actions are taken to reduce the amount of memory used by each installed application, and this may affect application data.
- non-critical or low priority application data and/or application logic can be deleted.
- this functionality must take into account the particulars of each application, and thus will be controlled by memory management scripts provided by the application developer as described above.
- the RE 34 can a formulate a “Memory Critical” message, which is sent to the AG 2 .
- the AG 2 retrieves corresponding memory management scripts (or links thereto) from its registry 8 , using the “use rating” assigned by the application developer to select scripts that are appropriate to the “Memory Critical” state of the RE memory management kernel 38 .
- the RE memory management kernel 38 can also implement various functions in the “Memory Critical” state 58 , which are independent of any one application.
- Representative application-independent functions include, without limitation:
- the AG 2 may, for example, limit messaging traffic to the terminal device 14 , so as to reduce the memory resources required by any one application.
- the RE memory management kernel 38 returns to the “Memory Limited” state 56 , and memory management operations continue as described above for that state.
- the RE memory management kernel 38 can be programmed to transition from Normal to Memory Limited states only if the free memory remains below the first threshold (T 1 ) for a predetermined period of time.
- Such a time period may be indicated, for example, by a clock function (or any equivalent function which is well known in the art) that starts when the free memory crosses the threshold value. This same approach may be used (with appropriate adjustments) for controlling the other possible state transitions.
- a clock function the RE memory management Kernel 38 could control state transitions based on a running average free memory computed over a suitable time interval (or, equivalently, a selected number of samples of the free memory taken at regular time intervals).
- the RE memory management kernel 38 may delay execution of some (or all) of its memory management operations.
- the RE memory management kernel 38 may provide the user with a “low memory” warning as a “pop-up” message, and possibly send a warning message to the AG 2 .
- downloading and execution of scripts to delete low priority application data and/or logic may be delayed until the terminal device 14 becomes idle (i.e. when there is no user activity on the device for a predefined amount of time).
Abstract
Description
- (a) provides a user interface 52 (
FIG. 4 ) for showing the device's user stored data (that is, instances of top-most data structures) that can be safely deleted, and allowing the user to select data for deletion; and - (b) deletes stored data in accordance with the user's input. As mentioned above, this function would include deletion of all lower-level data structures contained within any deleted top-level data structures.
-
- Notifying the user; and
- Identifying applications that are infrequently used, or which have not been used for an extended period of time. User interface screens such as the example shown in
FIG. 4 can be provided to enable the user to select and delete any such applications and their associated application data. These user interface screens may be provided in a script downloaded from theAG 2 by the REmemory management kernel 36, and subsequently deleted once it has served its purpose.
Claims (16)
Priority Applications (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US11/216,140 US7472247B2 (en) | 2005-04-18 | 2005-09-01 | Method and system for centralized memory management in wireless terminal devices |
US12/204,939 US8082414B2 (en) | 2005-04-18 | 2008-09-05 | Method and system for centralized memory management in wireless terminal devices |
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US67209205P | 2005-04-18 | 2005-04-18 | |
US11/216,140 US7472247B2 (en) | 2005-04-18 | 2005-09-01 | Method and system for centralized memory management in wireless terminal devices |
Related Child Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US12/204,939 Continuation US8082414B2 (en) | 2005-04-18 | 2008-09-05 | Method and system for centralized memory management in wireless terminal devices |
Publications (2)
Publication Number | Publication Date |
---|---|
US20060253680A1 US20060253680A1 (en) | 2006-11-09 |
US7472247B2 true US7472247B2 (en) | 2008-12-30 |
Family
ID=37114648
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US11/216,140 Expired - Fee Related US7472247B2 (en) | 2005-04-18 | 2005-09-01 | Method and system for centralized memory management in wireless terminal devices |
US12/204,939 Active 2026-05-29 US8082414B2 (en) | 2005-04-18 | 2008-09-05 | Method and system for centralized memory management in wireless terminal devices |
Family Applications After (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US12/204,939 Active 2026-05-29 US8082414B2 (en) | 2005-04-18 | 2008-09-05 | Method and system for centralized memory management in wireless terminal devices |
Country Status (6)
Country | Link |
---|---|
US (2) | US7472247B2 (en) |
EP (1) | EP1872606B1 (en) |
AT (1) | ATE492844T1 (en) |
CA (1) | CA2604448C (en) |
DE (1) | DE602005025538D1 (en) |
WO (1) | WO2006110978A1 (en) |
Cited By (16)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20070067152A1 (en) * | 2005-09-16 | 2007-03-22 | Xerox Corporation | Method and system for universal translating information |
US20070078702A1 (en) * | 2003-10-08 | 2007-04-05 | American Express Travel Related Services Company, Inc. | Integrated technology quality model |
US20100332586A1 (en) * | 2009-06-30 | 2010-12-30 | Fabrice Jogand-Coulomb | System and method of predictive data acquisition |
US20110035554A1 (en) * | 2007-01-07 | 2011-02-10 | Matt Watson | Memory Management Methods and Systems |
US8205060B2 (en) | 2008-12-16 | 2012-06-19 | Sandisk Il Ltd. | Discardable files |
US8375192B2 (en) | 2008-12-16 | 2013-02-12 | Sandisk Il Ltd. | Discardable files |
US8463802B2 (en) | 2010-08-19 | 2013-06-11 | Sandisk Il Ltd. | Card-based management of discardable files |
US8533847B2 (en) | 2007-05-24 | 2013-09-10 | Sandisk Il Ltd. | Apparatus and method for screening new data without impacting download speed |
US8549229B2 (en) | 2010-08-19 | 2013-10-01 | Sandisk Il Ltd. | Systems and methods for managing an upload of files in a shared cache storage system |
US8788849B2 (en) | 2011-02-28 | 2014-07-22 | Sandisk Technologies Inc. | Method and apparatus for protecting cached streams |
US8849856B2 (en) | 2008-12-16 | 2014-09-30 | Sandisk Il Ltd. | Discardable files |
US9015209B2 (en) | 2008-12-16 | 2015-04-21 | Sandisk Il Ltd. | Download management of discardable files |
US9020993B2 (en) | 2008-12-16 | 2015-04-28 | Sandisk Il Ltd. | Download management of discardable files |
US9104686B2 (en) | 2008-12-16 | 2015-08-11 | Sandisk Technologies Inc. | System and method for host management of discardable objects |
US9471378B2 (en) | 2012-05-31 | 2016-10-18 | Apple Inc. | Adaptive resource management of a data processing system |
CN106357757A (en) * | 2016-09-07 | 2017-01-25 | 华为技术有限公司 | Monitoring method and monitored device in monitoring system |
Families Citing this family (9)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
WO2006111010A1 (en) * | 2005-04-18 | 2006-10-26 | Research In Motion Limited | Centralized memory management in wireless terminal devices |
US7584201B2 (en) * | 2005-08-10 | 2009-09-01 | Qwest Communications International, Inc | Management of mobile-device data |
US9069575B2 (en) | 2008-03-25 | 2015-06-30 | Qualcomm Incorporated | Apparatus and methods for widget-related memory management |
US9110685B2 (en) | 2008-03-25 | 2015-08-18 | Qualcomm, Incorporated | Apparatus and methods for managing widgets in a wireless communication environment |
TWI450091B (en) * | 2008-12-19 | 2014-08-21 | Chi Mei Comm Systems Inc | System and method for managing a memory |
US8620879B2 (en) * | 2009-10-13 | 2013-12-31 | Google Inc. | Cloud based file storage service |
US20110191395A1 (en) * | 2010-01-29 | 2011-08-04 | Pradeep Tumati | Reducing Image Footprints |
US9130979B2 (en) * | 2012-12-11 | 2015-09-08 | Microsoft Technology Licensing, Llc | Systems and methods for using virtual machines to sequence native applications into virtual packages and for reimaging virtual machines |
US9983887B2 (en) | 2015-06-05 | 2018-05-29 | Apple Inc. | Memory management of data processing systems |
Citations (12)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5428545A (en) | 1993-01-11 | 1995-06-27 | Mitsubishi Denki Kabushiki Kaisha | Vehicle guiding system responsive to estimated congestion |
US6092160A (en) | 1996-09-30 | 2000-07-18 | Nokia Mobile Phones Limited | Memory management method |
EP1187432A1 (en) | 2000-09-12 | 2002-03-13 | Telefonaktiebolaget L M Ericsson (Publ) | Memory management for a communication device |
US20020069213A1 (en) | 2000-12-06 | 2002-06-06 | Moslander Joseph P. | Upgrading a device over a network |
EP1233635A1 (en) | 2001-02-20 | 2002-08-21 | Microsoft Corporation | Dynamic service application, in a mobile communication device or a SIM card, for receiving and executing short text message dynamic service scripts , e.g. SMS |
WO2003009144A1 (en) | 2001-07-19 | 2003-01-30 | Wind River Systems, Inc. | Memory management system |
US20030032417A1 (en) | 2001-08-13 | 2003-02-13 | Brian Minear | System and method for temporary application component deletion and reload on a wireless device |
US20030214970A1 (en) | 2002-05-17 | 2003-11-20 | Pimentel Roberto J. | Method and apparatus for ensuring capability to send information to a wireless device using hybrid network capability |
WO2004010306A1 (en) | 2002-07-23 | 2004-01-29 | Research In Motion Limited | Data store management system and method for wireless devices |
EP1453332A1 (en) | 2003-02-28 | 2004-09-01 | Kabushiki Kaisha Toshiba | Automatically deleting obsolete information in a wireless communication apparatus |
US20050021917A1 (en) * | 1997-05-06 | 2005-01-27 | Microsoft Corporation | Controlling memory usage in systems having limited physical memory |
US20060150190A1 (en) * | 2005-01-06 | 2006-07-06 | Gusler Carl P | Setting operation based resource utilization thresholds for resource use by a process |
Family Cites Families (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5428525A (en) | 1992-07-01 | 1995-06-27 | Cappelaere; Patrice G. | Computer system and method for signal control prioritizing and scheduling |
US6092545A (en) * | 1998-09-10 | 2000-07-25 | Hamilton Sundstrand Corporation | Magnetic actuated valve |
US7240104B2 (en) * | 2002-08-21 | 2007-07-03 | Defywire, Inc. | Method and apparatus for managing resources stored on a communication device |
-
2005
- 2005-09-01 EP EP05779325A patent/EP1872606B1/en active Active
- 2005-09-01 AT AT05779325T patent/ATE492844T1/en not_active IP Right Cessation
- 2005-09-01 WO PCT/CA2005/001328 patent/WO2006110978A1/en not_active Application Discontinuation
- 2005-09-01 DE DE602005025538T patent/DE602005025538D1/en active Active
- 2005-09-01 CA CA2604448A patent/CA2604448C/en not_active Expired - Fee Related
- 2005-09-01 US US11/216,140 patent/US7472247B2/en not_active Expired - Fee Related
-
2008
- 2008-09-05 US US12/204,939 patent/US8082414B2/en active Active
Patent Citations (12)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5428545A (en) | 1993-01-11 | 1995-06-27 | Mitsubishi Denki Kabushiki Kaisha | Vehicle guiding system responsive to estimated congestion |
US6092160A (en) | 1996-09-30 | 2000-07-18 | Nokia Mobile Phones Limited | Memory management method |
US20050021917A1 (en) * | 1997-05-06 | 2005-01-27 | Microsoft Corporation | Controlling memory usage in systems having limited physical memory |
EP1187432A1 (en) | 2000-09-12 | 2002-03-13 | Telefonaktiebolaget L M Ericsson (Publ) | Memory management for a communication device |
US20020069213A1 (en) | 2000-12-06 | 2002-06-06 | Moslander Joseph P. | Upgrading a device over a network |
EP1233635A1 (en) | 2001-02-20 | 2002-08-21 | Microsoft Corporation | Dynamic service application, in a mobile communication device or a SIM card, for receiving and executing short text message dynamic service scripts , e.g. SMS |
WO2003009144A1 (en) | 2001-07-19 | 2003-01-30 | Wind River Systems, Inc. | Memory management system |
US20030032417A1 (en) | 2001-08-13 | 2003-02-13 | Brian Minear | System and method for temporary application component deletion and reload on a wireless device |
US20030214970A1 (en) | 2002-05-17 | 2003-11-20 | Pimentel Roberto J. | Method and apparatus for ensuring capability to send information to a wireless device using hybrid network capability |
WO2004010306A1 (en) | 2002-07-23 | 2004-01-29 | Research In Motion Limited | Data store management system and method for wireless devices |
EP1453332A1 (en) | 2003-02-28 | 2004-09-01 | Kabushiki Kaisha Toshiba | Automatically deleting obsolete information in a wireless communication apparatus |
US20060150190A1 (en) * | 2005-01-06 | 2006-07-06 | Gusler Carl P | Setting operation based resource utilization thresholds for resource use by a process |
Non-Patent Citations (1)
Title |
---|
International Preliminary Report on Patentability issued Jul. 27, 2007 on corresponding International PCT Patent Application Serial No. PCT/CA2005/001328. |
Cited By (24)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20070078702A1 (en) * | 2003-10-08 | 2007-04-05 | American Express Travel Related Services Company, Inc. | Integrated technology quality model |
US8239183B2 (en) * | 2005-09-16 | 2012-08-07 | Xerox Corporation | Method and system for universal translating information |
US20070067152A1 (en) * | 2005-09-16 | 2007-03-22 | Xerox Corporation | Method and system for universal translating information |
US9535771B2 (en) | 2007-01-07 | 2017-01-03 | Apple Inc. | Memory management methods and systems |
US11513874B2 (en) | 2007-01-07 | 2022-11-29 | Apple Inc. | Memory management methods and systems |
US20110035554A1 (en) * | 2007-01-07 | 2011-02-10 | Matt Watson | Memory Management Methods and Systems |
US10802895B2 (en) | 2007-01-07 | 2020-10-13 | Apple Inc. | Memory management methods and systems |
US10127090B2 (en) | 2007-01-07 | 2018-11-13 | Apple Inc. | Memory management methods and systems |
US8516198B2 (en) * | 2007-01-07 | 2013-08-20 | Apple Inc. | Memory management methods and systems |
US8533847B2 (en) | 2007-05-24 | 2013-09-10 | Sandisk Il Ltd. | Apparatus and method for screening new data without impacting download speed |
US8375192B2 (en) | 2008-12-16 | 2013-02-12 | Sandisk Il Ltd. | Discardable files |
US8205060B2 (en) | 2008-12-16 | 2012-06-19 | Sandisk Il Ltd. | Discardable files |
US8849856B2 (en) | 2008-12-16 | 2014-09-30 | Sandisk Il Ltd. | Discardable files |
US9015209B2 (en) | 2008-12-16 | 2015-04-21 | Sandisk Il Ltd. | Download management of discardable files |
US9020993B2 (en) | 2008-12-16 | 2015-04-28 | Sandisk Il Ltd. | Download management of discardable files |
US9104686B2 (en) | 2008-12-16 | 2015-08-11 | Sandisk Technologies Inc. | System and method for host management of discardable objects |
US8886760B2 (en) | 2009-06-30 | 2014-11-11 | Sandisk Technologies Inc. | System and method of predictive data acquisition |
US20100332586A1 (en) * | 2009-06-30 | 2010-12-30 | Fabrice Jogand-Coulomb | System and method of predictive data acquisition |
US8463802B2 (en) | 2010-08-19 | 2013-06-11 | Sandisk Il Ltd. | Card-based management of discardable files |
US8549229B2 (en) | 2010-08-19 | 2013-10-01 | Sandisk Il Ltd. | Systems and methods for managing an upload of files in a shared cache storage system |
US8788849B2 (en) | 2011-02-28 | 2014-07-22 | Sandisk Technologies Inc. | Method and apparatus for protecting cached streams |
US9471378B2 (en) | 2012-05-31 | 2016-10-18 | Apple Inc. | Adaptive resource management of a data processing system |
CN106357757A (en) * | 2016-09-07 | 2017-01-25 | 华为技术有限公司 | Monitoring method and monitored device in monitoring system |
CN106357757B (en) * | 2016-09-07 | 2019-10-22 | 华为技术有限公司 | Monitored device and monitoring method in a kind of monitoring system |
Also Published As
Publication number | Publication date |
---|---|
EP1872606A4 (en) | 2008-06-11 |
EP1872606B1 (en) | 2010-12-22 |
DE602005025538D1 (en) | 2011-02-03 |
EP1872606A1 (en) | 2008-01-02 |
ATE492844T1 (en) | 2011-01-15 |
US8082414B2 (en) | 2011-12-20 |
CA2604448C (en) | 2012-11-27 |
CA2604448A1 (en) | 2006-10-26 |
US20060253680A1 (en) | 2006-11-09 |
WO2006110978A1 (en) | 2006-10-26 |
US20080320251A1 (en) | 2008-12-25 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US7472247B2 (en) | Method and system for centralized memory management in wireless terminal devices | |
EP1872230B1 (en) | Centralized memory management in wireless terminal devices | |
CA2601937C (en) | Implementing data-compatibility-based version scheme | |
US8464240B2 (en) | Method and system for controlling software version updates | |
CN103353845A (en) | Method and device for uploading and pushing script | |
CN105337783A (en) | Method of monitoring abnormal flow consumption of communication equipment and apparatus | |
US7979531B2 (en) | Method and system for network management data collection | |
CN114489761B (en) | Service integration and application integration method based on container cluster | |
CN115202934A (en) | Data backup method, device, equipment and storage medium | |
EP2053504A1 (en) | System and method for managing processing resources | |
CN101185062A (en) | Automatic updating of variables in a data language | |
KR100973077B1 (en) | Service Oriented Apparatus and Offering Method | |
CN117170842A (en) | Thread pool management architecture and thread pool management method | |
CN116418671A (en) | Configuration updating method and related device for big data service | |
CN109918087A (en) | Management method, device, equipment and the storage medium of application | |
CN115617390A (en) | Configuration information maintenance method, electronic equipment and computer readable storage medium | |
CN115220854A (en) | Configuration method, device, equipment and medium of stateful application controller | |
CN112395534A (en) | Data acquisition method, object loading method, system and equipment |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: RESEARCH IN MOTION LIMITED, CANADAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:VITANOV, KAMEN B.;BIBR, VIERA;SHENFIELD, MICHAEL;AND OTHERS;REEL/FRAME:017569/0473;SIGNING DATES FROM 20050809 TO 20050824 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
AS | Assignment |
Owner name: MOTOROLA, INC., ILLINOISFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:RESEARCH IN MOTION LIMITED;REEL/FRAME:024794/0427Effective date: 20100624 |
|
AS | Assignment |
Owner name: MOTOROLA MOBILITY, INC., ILLINOISFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MOTOROLA, INC.;REEL/FRAME:027935/0808Effective date: 20120302 |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
AS | Assignment |
Owner name: MOTOROLA MOBILITY LLC, ILLINOISFree format text: CHANGE OF NAME;ASSIGNOR:MOTOROLA MOBILITY, INC.;REEL/FRAME:029216/0282Effective date: 20120622 |
|
AS | Assignment |
Owner name: GOOGLE TECHNOLOGY HOLDINGS LLC, CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MOTOROLA MOBILITY LLC;REEL/FRAME:034490/0001Effective date: 20141028 |
|
FPAY | Fee payment |
Year of fee payment: 8 |
|
FEPP | Fee payment procedure |
Free format text: MAINTENANCE FEE REMINDER MAILED (ORIGINAL EVENT CODE: REM.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
LAPS | Lapse for failure to pay maintenance fees |
Free format text: PATENT EXPIRED FOR FAILURE TO PAY MAINTENANCE FEES (ORIGINAL EVENT CODE: EXP.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
STCH | Information on status: patent discontinuation |
Free format text: PATENT EXPIRED DUE TO NONPAYMENT OF MAINTENANCE FEES UNDER 37 CFR 1.362 |
|
FP | Lapsed due to failure to pay maintenance fee |
Effective date: 20201230 |